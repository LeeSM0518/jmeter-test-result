/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 886.0, "series": [{"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 6.0], [0.6, 7.0], [0.7, 10.0], [0.8, 11.0], [0.9, 11.0], [1.0, 15.0], [1.1, 19.0], [1.2, 21.0], [1.3, 24.0], [1.4, 24.0], [1.5, 25.0], [1.6, 25.0], [1.7, 27.0], [1.8, 27.0], [1.9, 29.0], [2.0, 30.0], [2.1, 30.0], [2.2, 30.0], [2.3, 30.0], [2.4, 31.0], [2.5, 31.0], [2.6, 31.0], [2.7, 31.0], [2.8, 32.0], [2.9, 32.0], [3.0, 32.0], [3.1, 32.0], [3.2, 32.0], [3.3, 33.0], [3.4, 33.0], [3.5, 33.0], [3.6, 33.0], [3.7, 33.0], [3.8, 33.0], [3.9, 34.0], [4.0, 34.0], [4.1, 34.0], [4.2, 34.0], [4.3, 34.0], [4.4, 35.0], [4.5, 35.0], [4.6, 35.0], [4.7, 36.0], [4.8, 36.0], [4.9, 36.0], [5.0, 36.0], [5.1, 36.0], [5.2, 37.0], [5.3, 37.0], [5.4, 37.0], [5.5, 37.0], [5.6, 37.0], [5.7, 38.0], [5.8, 38.0], [5.9, 38.0], [6.0, 38.0], [6.1, 38.0], [6.2, 38.0], [6.3, 38.0], [6.4, 38.0], [6.5, 39.0], [6.6, 39.0], [6.7, 39.0], [6.8, 39.0], [6.9, 39.0], [7.0, 39.0], [7.1, 39.0], [7.2, 39.0], [7.3, 40.0], [7.4, 40.0], [7.5, 40.0], [7.6, 40.0], [7.7, 40.0], [7.8, 40.0], [7.9, 40.0], [8.0, 40.0], [8.1, 40.0], [8.2, 40.0], [8.3, 40.0], [8.4, 40.0], [8.5, 40.0], [8.6, 41.0], [8.7, 41.0], [8.8, 41.0], [8.9, 41.0], [9.0, 41.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 42.0], [9.7, 42.0], [9.8, 42.0], [9.9, 42.0], [10.0, 42.0], [10.1, 42.0], [10.2, 42.0], [10.3, 42.0], [10.4, 42.0], [10.5, 42.0], [10.6, 42.0], [10.7, 42.0], [10.8, 42.0], [10.9, 42.0], [11.0, 42.0], [11.1, 43.0], [11.2, 43.0], [11.3, 43.0], [11.4, 43.0], [11.5, 43.0], [11.6, 43.0], [11.7, 43.0], [11.8, 43.0], [11.9, 43.0], [12.0, 43.0], [12.1, 43.0], [12.2, 43.0], [12.3, 43.0], [12.4, 43.0], [12.5, 43.0], [12.6, 43.0], [12.7, 43.0], [12.8, 44.0], [12.9, 44.0], [13.0, 44.0], [13.1, 44.0], [13.2, 44.0], [13.3, 44.0], [13.4, 44.0], [13.5, 44.0], [13.6, 44.0], [13.7, 44.0], [13.8, 44.0], [13.9, 44.0], [14.0, 44.0], [14.1, 45.0], [14.2, 45.0], [14.3, 45.0], [14.4, 45.0], [14.5, 45.0], [14.6, 45.0], [14.7, 45.0], [14.8, 45.0], [14.9, 45.0], [15.0, 45.0], [15.1, 45.0], [15.2, 45.0], [15.3, 45.0], [15.4, 45.0], [15.5, 45.0], [15.6, 46.0], [15.7, 46.0], [15.8, 46.0], [15.9, 46.0], [16.0, 46.0], [16.1, 46.0], [16.2, 46.0], [16.3, 46.0], [16.4, 46.0], [16.5, 46.0], [16.6, 46.0], [16.7, 46.0], [16.8, 46.0], [16.9, 46.0], [17.0, 46.0], [17.1, 46.0], [17.2, 46.0], [17.3, 46.0], [17.4, 46.0], [17.5, 46.0], [17.6, 47.0], [17.7, 47.0], [17.8, 47.0], [17.9, 47.0], [18.0, 47.0], [18.1, 47.0], [18.2, 47.0], [18.3, 47.0], [18.4, 47.0], [18.5, 47.0], [18.6, 47.0], [18.7, 47.0], [18.8, 47.0], [18.9, 47.0], [19.0, 47.0], [19.1, 47.0], [19.2, 47.0], [19.3, 47.0], [19.4, 47.0], [19.5, 47.0], [19.6, 47.0], [19.7, 47.0], [19.8, 47.0], [19.9, 47.0], [20.0, 47.0], [20.1, 47.0], [20.2, 47.0], [20.3, 48.0], [20.4, 48.0], [20.5, 48.0], [20.6, 48.0], [20.7, 48.0], [20.8, 48.0], [20.9, 48.0], [21.0, 48.0], [21.1, 48.0], [21.2, 48.0], [21.3, 48.0], [21.4, 48.0], [21.5, 48.0], [21.6, 48.0], [21.7, 48.0], [21.8, 48.0], [21.9, 48.0], [22.0, 48.0], [22.1, 48.0], [22.2, 48.0], [22.3, 48.0], [22.4, 48.0], [22.5, 48.0], [22.6, 48.0], [22.7, 48.0], [22.8, 48.0], [22.9, 48.0], [23.0, 48.0], [23.1, 48.0], [23.2, 48.0], [23.3, 48.0], [23.4, 48.0], [23.5, 49.0], [23.6, 49.0], [23.7, 49.0], [23.8, 49.0], [23.9, 49.0], [24.0, 49.0], [24.1, 49.0], [24.2, 49.0], [24.3, 49.0], [24.4, 49.0], [24.5, 49.0], [24.6, 49.0], [24.7, 49.0], [24.8, 49.0], [24.9, 49.0], [25.0, 49.0], [25.1, 49.0], [25.2, 49.0], [25.3, 49.0], [25.4, 49.0], [25.5, 49.0], [25.6, 49.0], [25.7, 49.0], [25.8, 49.0], [25.9, 49.0], [26.0, 49.0], [26.1, 49.0], [26.2, 49.0], [26.3, 49.0], [26.4, 49.0], [26.5, 49.0], [26.6, 49.0], [26.7, 49.0], [26.8, 50.0], [26.9, 50.0], [27.0, 50.0], [27.1, 50.0], [27.2, 50.0], [27.3, 50.0], [27.4, 50.0], [27.5, 50.0], [27.6, 50.0], [27.7, 50.0], [27.8, 50.0], [27.9, 50.0], [28.0, 50.0], [28.1, 50.0], [28.2, 50.0], [28.3, 50.0], [28.4, 50.0], [28.5, 50.0], [28.6, 50.0], [28.7, 50.0], [28.8, 50.0], [28.9, 50.0], [29.0, 50.0], [29.1, 50.0], [29.2, 50.0], [29.3, 50.0], [29.4, 50.0], [29.5, 50.0], [29.6, 50.0], [29.7, 50.0], [29.8, 50.0], [29.9, 50.0], [30.0, 50.0], [30.1, 50.0], [30.2, 50.0], [30.3, 50.0], [30.4, 50.0], [30.5, 50.0], [30.6, 50.0], [30.7, 50.0], [30.8, 51.0], [30.9, 51.0], [31.0, 51.0], [31.1, 51.0], [31.2, 51.0], [31.3, 51.0], [31.4, 51.0], [31.5, 51.0], [31.6, 51.0], [31.7, 51.0], [31.8, 51.0], [31.9, 51.0], [32.0, 51.0], [32.1, 51.0], [32.2, 51.0], [32.3, 51.0], [32.4, 51.0], [32.5, 51.0], [32.6, 51.0], [32.7, 51.0], [32.8, 51.0], [32.9, 51.0], [33.0, 51.0], [33.1, 51.0], [33.2, 51.0], [33.3, 51.0], [33.4, 51.0], [33.5, 51.0], [33.6, 51.0], [33.7, 51.0], [33.8, 51.0], [33.9, 51.0], [34.0, 51.0], [34.1, 51.0], [34.2, 51.0], [34.3, 51.0], [34.4, 51.0], [34.5, 51.0], [34.6, 52.0], [34.7, 52.0], [34.8, 52.0], [34.9, 52.0], [35.0, 52.0], [35.1, 52.0], [35.2, 52.0], [35.3, 52.0], [35.4, 52.0], [35.5, 52.0], [35.6, 52.0], [35.7, 52.0], [35.8, 52.0], [35.9, 52.0], [36.0, 52.0], [36.1, 52.0], [36.2, 52.0], [36.3, 52.0], [36.4, 52.0], [36.5, 52.0], [36.6, 52.0], [36.7, 52.0], [36.8, 52.0], [36.9, 52.0], [37.0, 52.0], [37.1, 52.0], [37.2, 52.0], [37.3, 52.0], [37.4, 52.0], [37.5, 52.0], [37.6, 52.0], [37.7, 52.0], [37.8, 52.0], [37.9, 52.0], [38.0, 52.0], [38.1, 52.0], [38.2, 52.0], [38.3, 52.0], [38.4, 52.0], [38.5, 52.0], [38.6, 52.0], [38.7, 52.0], [38.8, 52.0], [38.9, 53.0], [39.0, 53.0], [39.1, 53.0], [39.2, 53.0], [39.3, 53.0], [39.4, 53.0], [39.5, 53.0], [39.6, 53.0], [39.7, 53.0], [39.8, 53.0], [39.9, 53.0], [40.0, 53.0], [40.1, 53.0], [40.2, 53.0], [40.3, 53.0], [40.4, 53.0], [40.5, 53.0], [40.6, 53.0], [40.7, 53.0], [40.8, 53.0], [40.9, 53.0], [41.0, 53.0], [41.1, 53.0], [41.2, 53.0], [41.3, 53.0], [41.4, 53.0], [41.5, 53.0], [41.6, 53.0], [41.7, 53.0], [41.8, 53.0], [41.9, 53.0], [42.0, 53.0], [42.1, 53.0], [42.2, 54.0], [42.3, 54.0], [42.4, 54.0], [42.5, 54.0], [42.6, 54.0], [42.7, 54.0], [42.8, 54.0], [42.9, 54.0], [43.0, 54.0], [43.1, 54.0], [43.2, 54.0], [43.3, 54.0], [43.4, 54.0], [43.5, 54.0], [43.6, 54.0], [43.7, 54.0], [43.8, 54.0], [43.9, 54.0], [44.0, 54.0], [44.1, 54.0], [44.2, 54.0], [44.3, 54.0], [44.4, 54.0], [44.5, 54.0], [44.6, 54.0], [44.7, 54.0], [44.8, 54.0], [44.9, 54.0], [45.0, 54.0], [45.1, 54.0], [45.2, 54.0], [45.3, 54.0], [45.4, 54.0], [45.5, 54.0], [45.6, 54.0], [45.7, 54.0], [45.8, 54.0], [45.9, 55.0], [46.0, 55.0], [46.1, 55.0], [46.2, 55.0], [46.3, 55.0], [46.4, 55.0], [46.5, 55.0], [46.6, 55.0], [46.7, 55.0], [46.8, 55.0], [46.9, 55.0], [47.0, 55.0], [47.1, 55.0], [47.2, 55.0], [47.3, 55.0], [47.4, 55.0], [47.5, 55.0], [47.6, 55.0], [47.7, 55.0], [47.8, 55.0], [47.9, 55.0], [48.0, 55.0], [48.1, 55.0], [48.2, 55.0], [48.3, 55.0], [48.4, 55.0], [48.5, 55.0], [48.6, 55.0], [48.7, 55.0], [48.8, 55.0], [48.9, 55.0], [49.0, 55.0], [49.1, 56.0], [49.2, 56.0], [49.3, 56.0], [49.4, 56.0], [49.5, 56.0], [49.6, 56.0], [49.7, 56.0], [49.8, 56.0], [49.9, 56.0], [50.0, 56.0], [50.1, 56.0], [50.2, 56.0], [50.3, 56.0], [50.4, 56.0], [50.5, 56.0], [50.6, 56.0], [50.7, 56.0], [50.8, 56.0], [50.9, 56.0], [51.0, 56.0], [51.1, 56.0], [51.2, 56.0], [51.3, 56.0], [51.4, 56.0], [51.5, 56.0], [51.6, 56.0], [51.7, 56.0], [51.8, 56.0], [51.9, 56.0], [52.0, 56.0], [52.1, 56.0], [52.2, 56.0], [52.3, 56.0], [52.4, 56.0], [52.5, 57.0], [52.6, 57.0], [52.7, 57.0], [52.8, 57.0], [52.9, 57.0], [53.0, 57.0], [53.1, 57.0], [53.2, 57.0], [53.3, 57.0], [53.4, 57.0], [53.5, 57.0], [53.6, 57.0], [53.7, 57.0], [53.8, 57.0], [53.9, 57.0], [54.0, 57.0], [54.1, 57.0], [54.2, 57.0], [54.3, 57.0], [54.4, 57.0], [54.5, 57.0], [54.6, 57.0], [54.7, 57.0], [54.8, 57.0], [54.9, 57.0], [55.0, 57.0], [55.1, 57.0], [55.2, 57.0], [55.3, 57.0], [55.4, 57.0], [55.5, 57.0], [55.6, 57.0], [55.7, 57.0], [55.8, 57.0], [55.9, 57.0], [56.0, 57.0], [56.1, 57.0], [56.2, 57.0], [56.3, 57.0], [56.4, 57.0], [56.5, 58.0], [56.6, 58.0], [56.7, 58.0], [56.8, 58.0], [56.9, 58.0], [57.0, 58.0], [57.1, 58.0], [57.2, 58.0], [57.3, 58.0], [57.4, 58.0], [57.5, 58.0], [57.6, 58.0], [57.7, 58.0], [57.8, 58.0], [57.9, 58.0], [58.0, 58.0], [58.1, 58.0], [58.2, 58.0], [58.3, 58.0], [58.4, 58.0], [58.5, 58.0], [58.6, 58.0], [58.7, 58.0], [58.8, 58.0], [58.9, 58.0], [59.0, 58.0], [59.1, 58.0], [59.2, 58.0], [59.3, 58.0], [59.4, 58.0], [59.5, 58.0], [59.6, 58.0], [59.7, 58.0], [59.8, 59.0], [59.9, 59.0], [60.0, 59.0], [60.1, 59.0], [60.2, 59.0], [60.3, 59.0], [60.4, 59.0], [60.5, 59.0], [60.6, 59.0], [60.7, 59.0], [60.8, 59.0], [60.9, 59.0], [61.0, 59.0], [61.1, 59.0], [61.2, 59.0], [61.3, 59.0], [61.4, 59.0], [61.5, 59.0], [61.6, 59.0], [61.7, 59.0], [61.8, 59.0], [61.9, 59.0], [62.0, 59.0], [62.1, 59.0], [62.2, 59.0], [62.3, 59.0], [62.4, 59.0], [62.5, 59.0], [62.6, 59.0], [62.7, 59.0], [62.8, 59.0], [62.9, 59.0], [63.0, 59.0], [63.1, 59.0], [63.2, 59.0], [63.3, 59.0], [63.4, 59.0], [63.5, 59.0], [63.6, 59.0], [63.7, 59.0], [63.8, 60.0], [63.9, 60.0], [64.0, 60.0], [64.1, 60.0], [64.2, 60.0], [64.3, 60.0], [64.4, 60.0], [64.5, 60.0], [64.6, 60.0], [64.7, 60.0], [64.8, 60.0], [64.9, 60.0], [65.0, 60.0], [65.1, 60.0], [65.2, 60.0], [65.3, 60.0], [65.4, 60.0], [65.5, 60.0], [65.6, 60.0], [65.7, 60.0], [65.8, 60.0], [65.9, 60.0], [66.0, 60.0], [66.1, 60.0], [66.2, 60.0], [66.3, 60.0], [66.4, 60.0], [66.5, 60.0], [66.6, 60.0], [66.7, 60.0], [66.8, 60.0], [66.9, 60.0], [67.0, 61.0], [67.1, 61.0], [67.2, 61.0], [67.3, 61.0], [67.4, 61.0], [67.5, 61.0], [67.6, 61.0], [67.7, 61.0], [67.8, 61.0], [67.9, 61.0], [68.0, 61.0], [68.1, 61.0], [68.2, 61.0], [68.3, 61.0], [68.4, 61.0], [68.5, 61.0], [68.6, 61.0], [68.7, 61.0], [68.8, 61.0], [68.9, 61.0], [69.0, 61.0], [69.1, 61.0], [69.2, 61.0], [69.3, 61.0], [69.4, 61.0], [69.5, 61.0], [69.6, 61.0], [69.7, 61.0], [69.8, 61.0], [69.9, 61.0], [70.0, 61.0], [70.1, 61.0], [70.2, 61.0], [70.3, 61.0], [70.4, 61.0], [70.5, 62.0], [70.6, 62.0], [70.7, 62.0], [70.8, 62.0], [70.9, 62.0], [71.0, 62.0], [71.1, 62.0], [71.2, 62.0], [71.3, 62.0], [71.4, 62.0], [71.5, 62.0], [71.6, 62.0], [71.7, 62.0], [71.8, 62.0], [71.9, 62.0], [72.0, 62.0], [72.1, 62.0], [72.2, 62.0], [72.3, 62.0], [72.4, 62.0], [72.5, 62.0], [72.6, 62.0], [72.7, 62.0], [72.8, 62.0], [72.9, 62.0], [73.0, 62.0], [73.1, 62.0], [73.2, 62.0], [73.3, 62.0], [73.4, 62.0], [73.5, 63.0], [73.6, 63.0], [73.7, 63.0], [73.8, 63.0], [73.9, 63.0], [74.0, 63.0], [74.1, 63.0], [74.2, 63.0], [74.3, 63.0], [74.4, 63.0], [74.5, 63.0], [74.6, 63.0], [74.7, 63.0], [74.8, 63.0], [74.9, 63.0], [75.0, 63.0], [75.1, 63.0], [75.2, 63.0], [75.3, 63.0], [75.4, 63.0], [75.5, 63.0], [75.6, 63.0], [75.7, 64.0], [75.8, 64.0], [75.9, 64.0], [76.0, 64.0], [76.1, 64.0], [76.2, 64.0], [76.3, 64.0], [76.4, 64.0], [76.5, 64.0], [76.6, 64.0], [76.7, 64.0], [76.8, 64.0], [76.9, 64.0], [77.0, 64.0], [77.1, 64.0], [77.2, 64.0], [77.3, 64.0], [77.4, 64.0], [77.5, 64.0], [77.6, 64.0], [77.7, 64.0], [77.8, 64.0], [77.9, 64.0], [78.0, 64.0], [78.1, 64.0], [78.2, 64.0], [78.3, 64.0], [78.4, 64.0], [78.5, 65.0], [78.6, 65.0], [78.7, 65.0], [78.8, 65.0], [78.9, 65.0], [79.0, 65.0], [79.1, 65.0], [79.2, 65.0], [79.3, 65.0], [79.4, 65.0], [79.5, 65.0], [79.6, 65.0], [79.7, 65.0], [79.8, 65.0], [79.9, 65.0], [80.0, 65.0], [80.1, 65.0], [80.2, 65.0], [80.3, 65.0], [80.4, 65.0], [80.5, 65.0], [80.6, 65.0], [80.7, 65.0], [80.8, 65.0], [80.9, 65.0], [81.0, 65.0], [81.1, 66.0], [81.2, 66.0], [81.3, 66.0], [81.4, 66.0], [81.5, 66.0], [81.6, 66.0], [81.7, 66.0], [81.8, 66.0], [81.9, 66.0], [82.0, 66.0], [82.1, 66.0], [82.2, 66.0], [82.3, 66.0], [82.4, 66.0], [82.5, 66.0], [82.6, 66.0], [82.7, 66.0], [82.8, 66.0], [82.9, 66.0], [83.0, 66.0], [83.1, 66.0], [83.2, 66.0], [83.3, 67.0], [83.4, 67.0], [83.5, 67.0], [83.6, 67.0], [83.7, 67.0], [83.8, 67.0], [83.9, 67.0], [84.0, 67.0], [84.1, 67.0], [84.2, 67.0], [84.3, 67.0], [84.4, 67.0], [84.5, 67.0], [84.6, 67.0], [84.7, 67.0], [84.8, 67.0], [84.9, 67.0], [85.0, 67.0], [85.1, 67.0], [85.2, 67.0], [85.3, 67.0], [85.4, 67.0], [85.5, 67.0], [85.6, 68.0], [85.7, 68.0], [85.8, 68.0], [85.9, 68.0], [86.0, 68.0], [86.1, 68.0], [86.2, 68.0], [86.3, 68.0], [86.4, 68.0], [86.5, 68.0], [86.6, 68.0], [86.7, 68.0], [86.8, 68.0], [86.9, 68.0], [87.0, 68.0], [87.1, 68.0], [87.2, 68.0], [87.3, 68.0], [87.4, 69.0], [87.5, 69.0], [87.6, 69.0], [87.7, 69.0], [87.8, 69.0], [87.9, 69.0], [88.0, 69.0], [88.1, 69.0], [88.2, 69.0], [88.3, 69.0], [88.4, 69.0], [88.5, 69.0], [88.6, 69.0], [88.7, 69.0], [88.8, 69.0], [88.9, 69.0], [89.0, 70.0], [89.1, 70.0], [89.2, 70.0], [89.3, 70.0], [89.4, 70.0], [89.5, 70.0], [89.6, 70.0], [89.7, 70.0], [89.8, 70.0], [89.9, 70.0], [90.0, 71.0], [90.1, 71.0], [90.2, 71.0], [90.3, 71.0], [90.4, 71.0], [90.5, 71.0], [90.6, 71.0], [90.7, 71.0], [90.8, 71.0], [90.9, 71.0], [91.0, 72.0], [91.1, 72.0], [91.2, 72.0], [91.3, 72.0], [91.4, 72.0], [91.5, 72.0], [91.6, 72.0], [91.7, 72.0], [91.8, 72.0], [91.9, 72.0], [92.0, 72.0], [92.1, 72.0], [92.2, 72.0], [92.3, 72.0], [92.4, 73.0], [92.5, 73.0], [92.6, 73.0], [92.7, 73.0], [92.8, 73.0], [92.9, 73.0], [93.0, 73.0], [93.1, 73.0], [93.2, 74.0], [93.3, 74.0], [93.4, 74.0], [93.5, 74.0], [93.6, 74.0], [93.7, 74.0], [93.8, 74.0], [93.9, 74.0], [94.0, 75.0], [94.1, 75.0], [94.2, 75.0], [94.3, 75.0], [94.4, 75.0], [94.5, 75.0], [94.6, 75.0], [94.7, 76.0], [94.8, 76.0], [94.9, 76.0], [95.0, 76.0], [95.1, 76.0], [95.2, 76.0], [95.3, 77.0], [95.4, 77.0], [95.5, 77.0], [95.6, 77.0], [95.7, 77.0], [95.8, 77.0], [95.9, 77.0], [96.0, 77.0], [96.1, 78.0], [96.2, 78.0], [96.3, 78.0], [96.4, 78.0], [96.5, 78.0], [96.6, 78.0], [96.7, 78.0], [96.8, 79.0], [96.9, 79.0], [97.0, 79.0], [97.1, 79.0], [97.2, 80.0], [97.3, 80.0], [97.4, 80.0], [97.5, 80.0], [97.6, 80.0], [97.7, 80.0], [97.8, 81.0], [97.9, 81.0], [98.0, 82.0], [98.1, 82.0], [98.2, 82.0], [98.3, 82.0], [98.4, 83.0], [98.5, 84.0], [98.6, 84.0], [98.7, 85.0], [98.8, 85.0], [98.9, 86.0], [99.0, 86.0], [99.1, 86.0], [99.2, 87.0], [99.3, 88.0], [99.4, 89.0], [99.5, 90.0], [99.6, 91.0], [99.7, 92.0], [99.8, 94.0], [99.9, 98.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 16.0], [0.1, 23.0], [0.2, 23.0], [0.3, 24.0], [0.4, 29.0], [0.5, 31.0], [0.6, 31.0], [0.7, 32.0], [0.8, 33.0], [0.9, 34.0], [1.0, 36.0], [1.1, 39.0], [1.2, 40.0], [1.3, 42.0], [1.4, 44.0], [1.5, 50.0], [1.6, 53.0], [1.7, 54.0], [1.8, 56.0], [1.9, 59.0], [2.0, 66.0], [2.1, 71.0], [2.2, 71.0], [2.3, 72.0], [2.4, 73.0], [2.5, 73.0], [2.6, 74.0], [2.7, 76.0], [2.8, 77.0], [2.9, 79.0], [3.0, 80.0], [3.1, 80.0], [3.2, 81.0], [3.3, 82.0], [3.4, 83.0], [3.5, 84.0], [3.6, 85.0], [3.7, 88.0], [3.8, 90.0], [3.9, 91.0], [4.0, 92.0], [4.1, 94.0], [4.2, 96.0], [4.3, 97.0], [4.4, 99.0], [4.5, 99.0], [4.6, 101.0], [4.7, 103.0], [4.8, 103.0], [4.9, 104.0], [5.0, 105.0], [5.1, 106.0], [5.2, 108.0], [5.3, 108.0], [5.4, 109.0], [5.5, 110.0], [5.6, 111.0], [5.7, 113.0], [5.8, 114.0], [5.9, 115.0], [6.0, 116.0], [6.1, 116.0], [6.2, 119.0], [6.3, 120.0], [6.4, 122.0], [6.5, 123.0], [6.6, 124.0], [6.7, 125.0], [6.8, 126.0], [6.9, 127.0], [7.0, 128.0], [7.1, 130.0], [7.2, 131.0], [7.3, 132.0], [7.4, 133.0], [7.5, 134.0], [7.6, 139.0], [7.7, 140.0], [7.8, 140.0], [7.9, 141.0], [8.0, 142.0], [8.1, 142.0], [8.2, 144.0], [8.3, 144.0], [8.4, 145.0], [8.5, 146.0], [8.6, 146.0], [8.7, 147.0], [8.8, 148.0], [8.9, 148.0], [9.0, 149.0], [9.1, 150.0], [9.2, 151.0], [9.3, 151.0], [9.4, 151.0], [9.5, 152.0], [9.6, 152.0], [9.7, 153.0], [9.8, 154.0], [9.9, 155.0], [10.0, 156.0], [10.1, 157.0], [10.2, 160.0], [10.3, 160.0], [10.4, 161.0], [10.5, 161.0], [10.6, 162.0], [10.7, 163.0], [10.8, 163.0], [10.9, 164.0], [11.0, 165.0], [11.1, 165.0], [11.2, 166.0], [11.3, 167.0], [11.4, 168.0], [11.5, 170.0], [11.6, 171.0], [11.7, 171.0], [11.8, 172.0], [11.9, 172.0], [12.0, 173.0], [12.1, 173.0], [12.2, 173.0], [12.3, 174.0], [12.4, 174.0], [12.5, 174.0], [12.6, 175.0], [12.7, 175.0], [12.8, 176.0], [12.9, 176.0], [13.0, 176.0], [13.1, 177.0], [13.2, 177.0], [13.3, 178.0], [13.4, 178.0], [13.5, 179.0], [13.6, 179.0], [13.7, 179.0], [13.8, 180.0], [13.9, 180.0], [14.0, 181.0], [14.1, 181.0], [14.2, 182.0], [14.3, 182.0], [14.4, 182.0], [14.5, 182.0], [14.6, 182.0], [14.7, 183.0], [14.8, 183.0], [14.9, 183.0], [15.0, 184.0], [15.1, 184.0], [15.2, 184.0], [15.3, 185.0], [15.4, 185.0], [15.5, 185.0], [15.6, 185.0], [15.7, 185.0], [15.8, 185.0], [15.9, 185.0], [16.0, 185.0], [16.1, 186.0], [16.2, 186.0], [16.3, 186.0], [16.4, 186.0], [16.5, 186.0], [16.6, 186.0], [16.7, 187.0], [16.8, 187.0], [16.9, 187.0], [17.0, 187.0], [17.1, 188.0], [17.2, 188.0], [17.3, 188.0], [17.4, 189.0], [17.5, 189.0], [17.6, 189.0], [17.7, 190.0], [17.8, 190.0], [17.9, 190.0], [18.0, 191.0], [18.1, 191.0], [18.2, 192.0], [18.3, 193.0], [18.4, 193.0], [18.5, 193.0], [18.6, 194.0], [18.7, 194.0], [18.8, 194.0], [18.9, 195.0], [19.0, 195.0], [19.1, 195.0], [19.2, 196.0], [19.3, 196.0], [19.4, 196.0], [19.5, 197.0], [19.6, 197.0], [19.7, 198.0], [19.8, 199.0], [19.9, 200.0], [20.0, 200.0], [20.1, 201.0], [20.2, 201.0], [20.3, 202.0], [20.4, 202.0], [20.5, 203.0], [20.6, 204.0], [20.7, 204.0], [20.8, 205.0], [20.9, 205.0], [21.0, 206.0], [21.1, 206.0], [21.2, 206.0], [21.3, 207.0], [21.4, 207.0], [21.5, 207.0], [21.6, 208.0], [21.7, 208.0], [21.8, 209.0], [21.9, 209.0], [22.0, 210.0], [22.1, 210.0], [22.2, 210.0], [22.3, 211.0], [22.4, 212.0], [22.5, 212.0], [22.6, 213.0], [22.7, 214.0], [22.8, 214.0], [22.9, 215.0], [23.0, 216.0], [23.1, 216.0], [23.2, 217.0], [23.3, 217.0], [23.4, 217.0], [23.5, 219.0], [23.6, 220.0], [23.7, 221.0], [23.8, 222.0], [23.9, 223.0], [24.0, 223.0], [24.1, 226.0], [24.2, 227.0], [24.3, 228.0], [24.4, 229.0], [24.5, 230.0], [24.6, 232.0], [24.7, 232.0], [24.8, 233.0], [24.9, 234.0], [25.0, 235.0], [25.1, 235.0], [25.2, 235.0], [25.3, 236.0], [25.4, 237.0], [25.5, 237.0], [25.6, 237.0], [25.7, 238.0], [25.8, 239.0], [25.9, 240.0], [26.0, 240.0], [26.1, 241.0], [26.2, 242.0], [26.3, 243.0], [26.4, 243.0], [26.5, 244.0], [26.6, 244.0], [26.7, 245.0], [26.8, 246.0], [26.9, 247.0], [27.0, 248.0], [27.1, 249.0], [27.2, 250.0], [27.3, 250.0], [27.4, 250.0], [27.5, 250.0], [27.6, 252.0], [27.7, 252.0], [27.8, 253.0], [27.9, 253.0], [28.0, 255.0], [28.1, 255.0], [28.2, 256.0], [28.3, 256.0], [28.4, 257.0], [28.5, 258.0], [28.6, 258.0], [28.7, 259.0], [28.8, 260.0], [28.9, 261.0], [29.0, 262.0], [29.1, 263.0], [29.2, 265.0], [29.3, 266.0], [29.4, 267.0], [29.5, 268.0], [29.6, 268.0], [29.7, 270.0], [29.8, 270.0], [29.9, 271.0], [30.0, 272.0], [30.1, 274.0], [30.2, 274.0], [30.3, 276.0], [30.4, 276.0], [30.5, 277.0], [30.6, 277.0], [30.7, 279.0], [30.8, 279.0], [30.9, 280.0], [31.0, 281.0], [31.1, 282.0], [31.2, 283.0], [31.3, 284.0], [31.4, 285.0], [31.5, 285.0], [31.6, 285.0], [31.7, 286.0], [31.8, 288.0], [31.9, 288.0], [32.0, 290.0], [32.1, 290.0], [32.2, 291.0], [32.3, 291.0], [32.4, 293.0], [32.5, 293.0], [32.6, 294.0], [32.7, 294.0], [32.8, 296.0], [32.9, 296.0], [33.0, 297.0], [33.1, 298.0], [33.2, 299.0], [33.3, 299.0], [33.4, 300.0], [33.5, 300.0], [33.6, 300.0], [33.7, 301.0], [33.8, 302.0], [33.9, 304.0], [34.0, 305.0], [34.1, 306.0], [34.2, 306.0], [34.3, 307.0], [34.4, 308.0], [34.5, 308.0], [34.6, 309.0], [34.7, 309.0], [34.8, 310.0], [34.9, 312.0], [35.0, 313.0], [35.1, 315.0], [35.2, 315.0], [35.3, 316.0], [35.4, 317.0], [35.5, 317.0], [35.6, 318.0], [35.7, 318.0], [35.8, 320.0], [35.9, 321.0], [36.0, 322.0], [36.1, 323.0], [36.2, 324.0], [36.3, 326.0], [36.4, 327.0], [36.5, 330.0], [36.6, 331.0], [36.7, 332.0], [36.8, 333.0], [36.9, 334.0], [37.0, 335.0], [37.1, 338.0], [37.2, 339.0], [37.3, 340.0], [37.4, 341.0], [37.5, 344.0], [37.6, 346.0], [37.7, 347.0], [37.8, 349.0], [37.9, 350.0], [38.0, 352.0], [38.1, 352.0], [38.2, 353.0], [38.3, 354.0], [38.4, 355.0], [38.5, 355.0], [38.6, 356.0], [38.7, 357.0], [38.8, 357.0], [38.9, 358.0], [39.0, 359.0], [39.1, 361.0], [39.2, 361.0], [39.3, 363.0], [39.4, 363.0], [39.5, 363.0], [39.6, 364.0], [39.7, 365.0], [39.8, 367.0], [39.9, 368.0], [40.0, 369.0], [40.1, 369.0], [40.2, 371.0], [40.3, 371.0], [40.4, 372.0], [40.5, 372.0], [40.6, 373.0], [40.7, 376.0], [40.8, 376.0], [40.9, 377.0], [41.0, 378.0], [41.1, 379.0], [41.2, 381.0], [41.3, 382.0], [41.4, 383.0], [41.5, 385.0], [41.6, 385.0], [41.7, 387.0], [41.8, 389.0], [41.9, 390.0], [42.0, 390.0], [42.1, 391.0], [42.2, 392.0], [42.3, 393.0], [42.4, 395.0], [42.5, 396.0], [42.6, 397.0], [42.7, 399.0], [42.8, 400.0], [42.9, 401.0], [43.0, 402.0], [43.1, 403.0], [43.2, 405.0], [43.3, 405.0], [43.4, 407.0], [43.5, 409.0], [43.6, 410.0], [43.7, 412.0], [43.8, 413.0], [43.9, 413.0], [44.0, 415.0], [44.1, 416.0], [44.2, 416.0], [44.3, 417.0], [44.4, 420.0], [44.5, 420.0], [44.6, 421.0], [44.7, 423.0], [44.8, 426.0], [44.9, 428.0], [45.0, 429.0], [45.1, 432.0], [45.2, 434.0], [45.3, 436.0], [45.4, 437.0], [45.5, 438.0], [45.6, 440.0], [45.7, 443.0], [45.8, 444.0], [45.9, 445.0], [46.0, 447.0], [46.1, 448.0], [46.2, 450.0], [46.3, 451.0], [46.4, 452.0], [46.5, 453.0], [46.6, 455.0], [46.7, 457.0], [46.8, 458.0], [46.9, 459.0], [47.0, 461.0], [47.1, 461.0], [47.2, 463.0], [47.3, 465.0], [47.4, 465.0], [47.5, 466.0], [47.6, 467.0], [47.7, 469.0], [47.8, 470.0], [47.9, 472.0], [48.0, 474.0], [48.1, 476.0], [48.2, 477.0], [48.3, 479.0], [48.4, 481.0], [48.5, 482.0], [48.6, 482.0], [48.7, 484.0], [48.8, 486.0], [48.9, 488.0], [49.0, 489.0], [49.1, 490.0], [49.2, 492.0], [49.3, 493.0], [49.4, 497.0], [49.5, 497.0], [49.6, 498.0], [49.7, 499.0], [49.8, 501.0], [49.9, 503.0], [50.0, 505.0], [50.1, 506.0], [50.2, 508.0], [50.3, 508.0], [50.4, 509.0], [50.5, 511.0], [50.6, 511.0], [50.7, 514.0], [50.8, 516.0], [50.9, 517.0], [51.0, 519.0], [51.1, 520.0], [51.2, 521.0], [51.3, 524.0], [51.4, 527.0], [51.5, 528.0], [51.6, 528.0], [51.7, 529.0], [51.8, 530.0], [51.9, 531.0], [52.0, 532.0], [52.1, 533.0], [52.2, 534.0], [52.3, 534.0], [52.4, 536.0], [52.5, 536.0], [52.6, 538.0], [52.7, 538.0], [52.8, 539.0], [52.9, 539.0], [53.0, 540.0], [53.1, 541.0], [53.2, 542.0], [53.3, 544.0], [53.4, 544.0], [53.5, 545.0], [53.6, 546.0], [53.7, 547.0], [53.8, 547.0], [53.9, 548.0], [54.0, 550.0], [54.1, 552.0], [54.2, 553.0], [54.3, 554.0], [54.4, 555.0], [54.5, 556.0], [54.6, 557.0], [54.7, 558.0], [54.8, 559.0], [54.9, 561.0], [55.0, 561.0], [55.1, 562.0], [55.2, 564.0], [55.3, 564.0], [55.4, 565.0], [55.5, 566.0], [55.6, 567.0], [55.7, 568.0], [55.8, 570.0], [55.9, 571.0], [56.0, 571.0], [56.1, 572.0], [56.2, 573.0], [56.3, 574.0], [56.4, 575.0], [56.5, 576.0], [56.6, 576.0], [56.7, 578.0], [56.8, 579.0], [56.9, 579.0], [57.0, 581.0], [57.1, 581.0], [57.2, 582.0], [57.3, 583.0], [57.4, 584.0], [57.5, 584.0], [57.6, 585.0], [57.7, 586.0], [57.8, 587.0], [57.9, 588.0], [58.0, 589.0], [58.1, 589.0], [58.2, 592.0], [58.3, 592.0], [58.4, 594.0], [58.5, 594.0], [58.6, 595.0], [58.7, 596.0], [58.8, 597.0], [58.9, 597.0], [59.0, 599.0], [59.1, 600.0], [59.2, 602.0], [59.3, 604.0], [59.4, 607.0], [59.5, 608.0], [59.6, 610.0], [59.7, 612.0], [59.8, 613.0], [59.9, 614.0], [60.0, 614.0], [60.1, 615.0], [60.2, 617.0], [60.3, 618.0], [60.4, 619.0], [60.5, 619.0], [60.6, 621.0], [60.7, 622.0], [60.8, 623.0], [60.9, 623.0], [61.0, 624.0], [61.1, 626.0], [61.2, 627.0], [61.3, 629.0], [61.4, 629.0], [61.5, 631.0], [61.6, 632.0], [61.7, 633.0], [61.8, 633.0], [61.9, 636.0], [62.0, 637.0], [62.1, 639.0], [62.2, 639.0], [62.3, 640.0], [62.4, 641.0], [62.5, 642.0], [62.6, 642.0], [62.7, 644.0], [62.8, 644.0], [62.9, 645.0], [63.0, 646.0], [63.1, 647.0], [63.2, 647.0], [63.3, 648.0], [63.4, 648.0], [63.5, 648.0], [63.6, 649.0], [63.7, 649.0], [63.8, 649.0], [63.9, 650.0], [64.0, 651.0], [64.1, 651.0], [64.2, 652.0], [64.3, 652.0], [64.4, 653.0], [64.5, 653.0], [64.6, 654.0], [64.7, 654.0], [64.8, 655.0], [64.9, 655.0], [65.0, 655.0], [65.1, 655.0], [65.2, 656.0], [65.3, 656.0], [65.4, 657.0], [65.5, 657.0], [65.6, 658.0], [65.7, 658.0], [65.8, 658.0], [65.9, 659.0], [66.0, 660.0], [66.1, 660.0], [66.2, 661.0], [66.3, 661.0], [66.4, 661.0], [66.5, 662.0], [66.6, 662.0], [66.7, 662.0], [66.8, 663.0], [66.9, 664.0], [67.0, 664.0], [67.1, 665.0], [67.2, 665.0], [67.3, 666.0], [67.4, 666.0], [67.5, 667.0], [67.6, 667.0], [67.7, 668.0], [67.8, 668.0], [67.9, 669.0], [68.0, 670.0], [68.1, 671.0], [68.2, 672.0], [68.3, 673.0], [68.4, 675.0], [68.5, 675.0], [68.6, 677.0], [68.7, 677.0], [68.8, 678.0], [68.9, 678.0], [69.0, 679.0], [69.1, 679.0], [69.2, 680.0], [69.3, 681.0], [69.4, 682.0], [69.5, 683.0], [69.6, 684.0], [69.7, 684.0], [69.8, 685.0], [69.9, 686.0], [70.0, 686.0], [70.1, 687.0], [70.2, 687.0], [70.3, 688.0], [70.4, 689.0], [70.5, 690.0], [70.6, 690.0], [70.7, 691.0], [70.8, 692.0], [70.9, 693.0], [71.0, 694.0], [71.1, 695.0], [71.2, 695.0], [71.3, 696.0], [71.4, 697.0], [71.5, 698.0], [71.6, 699.0], [71.7, 701.0], [71.8, 701.0], [71.9, 703.0], [72.0, 705.0], [72.1, 706.0], [72.2, 707.0], [72.3, 707.0], [72.4, 709.0], [72.5, 710.0], [72.6, 711.0], [72.7, 711.0], [72.8, 711.0], [72.9, 712.0], [73.0, 713.0], [73.1, 714.0], [73.2, 714.0], [73.3, 714.0], [73.4, 715.0], [73.5, 715.0], [73.6, 715.0], [73.7, 716.0], [73.8, 716.0], [73.9, 717.0], [74.0, 717.0], [74.1, 718.0], [74.2, 719.0], [74.3, 720.0], [74.4, 720.0], [74.5, 721.0], [74.6, 721.0], [74.7, 722.0], [74.8, 722.0], [74.9, 723.0], [75.0, 724.0], [75.1, 724.0], [75.2, 724.0], [75.3, 725.0], [75.4, 725.0], [75.5, 726.0], [75.6, 726.0], [75.7, 727.0], [75.8, 727.0], [75.9, 728.0], [76.0, 729.0], [76.1, 729.0], [76.2, 729.0], [76.3, 730.0], [76.4, 730.0], [76.5, 730.0], [76.6, 731.0], [76.7, 731.0], [76.8, 732.0], [76.9, 732.0], [77.0, 733.0], [77.1, 734.0], [77.2, 734.0], [77.3, 735.0], [77.4, 735.0], [77.5, 736.0], [77.6, 737.0], [77.7, 738.0], [77.8, 738.0], [77.9, 738.0], [78.0, 738.0], [78.1, 739.0], [78.2, 739.0], [78.3, 740.0], [78.4, 740.0], [78.5, 741.0], [78.6, 741.0], [78.7, 742.0], [78.8, 743.0], [78.9, 744.0], [79.0, 744.0], [79.1, 745.0], [79.2, 745.0], [79.3, 747.0], [79.4, 747.0], [79.5, 747.0], [79.6, 747.0], [79.7, 748.0], [79.8, 749.0], [79.9, 749.0], [80.0, 750.0], [80.1, 750.0], [80.2, 750.0], [80.3, 751.0], [80.4, 751.0], [80.5, 752.0], [80.6, 752.0], [80.7, 752.0], [80.8, 752.0], [80.9, 753.0], [81.0, 753.0], [81.1, 754.0], [81.2, 754.0], [81.3, 755.0], [81.4, 755.0], [81.5, 755.0], [81.6, 755.0], [81.7, 756.0], [81.8, 756.0], [81.9, 757.0], [82.0, 757.0], [82.1, 758.0], [82.2, 759.0], [82.3, 759.0], [82.4, 759.0], [82.5, 760.0], [82.6, 760.0], [82.7, 761.0], [82.8, 762.0], [82.9, 762.0], [83.0, 762.0], [83.1, 762.0], [83.2, 763.0], [83.3, 763.0], [83.4, 764.0], [83.5, 765.0], [83.6, 765.0], [83.7, 766.0], [83.8, 767.0], [83.9, 767.0], [84.0, 768.0], [84.1, 768.0], [84.2, 769.0], [84.3, 769.0], [84.4, 769.0], [84.5, 770.0], [84.6, 770.0], [84.7, 771.0], [84.8, 771.0], [84.9, 772.0], [85.0, 772.0], [85.1, 773.0], [85.2, 773.0], [85.3, 773.0], [85.4, 774.0], [85.5, 775.0], [85.6, 775.0], [85.7, 775.0], [85.8, 776.0], [85.9, 776.0], [86.0, 776.0], [86.1, 777.0], [86.2, 777.0], [86.3, 777.0], [86.4, 778.0], [86.5, 778.0], [86.6, 778.0], [86.7, 779.0], [86.8, 779.0], [86.9, 779.0], [87.0, 780.0], [87.1, 780.0], [87.2, 780.0], [87.3, 781.0], [87.4, 781.0], [87.5, 782.0], [87.6, 782.0], [87.7, 782.0], [87.8, 783.0], [87.9, 783.0], [88.0, 784.0], [88.1, 785.0], [88.2, 785.0], [88.3, 786.0], [88.4, 786.0], [88.5, 786.0], [88.6, 787.0], [88.7, 787.0], [88.8, 787.0], [88.9, 788.0], [89.0, 788.0], [89.1, 788.0], [89.2, 789.0], [89.3, 790.0], [89.4, 790.0], [89.5, 791.0], [89.6, 791.0], [89.7, 792.0], [89.8, 792.0], [89.9, 793.0], [90.0, 793.0], [90.1, 794.0], [90.2, 794.0], [90.3, 795.0], [90.4, 795.0], [90.5, 796.0], [90.6, 796.0], [90.7, 797.0], [90.8, 798.0], [90.9, 799.0], [91.0, 801.0], [91.1, 802.0], [91.2, 802.0], [91.3, 803.0], [91.4, 803.0], [91.5, 804.0], [91.6, 805.0], [91.7, 806.0], [91.8, 806.0], [91.9, 807.0], [92.0, 808.0], [92.1, 808.0], [92.2, 808.0], [92.3, 809.0], [92.4, 810.0], [92.5, 811.0], [92.6, 812.0], [92.7, 812.0], [92.8, 813.0], [92.9, 813.0], [93.0, 813.0], [93.1, 814.0], [93.2, 814.0], [93.3, 814.0], [93.4, 815.0], [93.5, 815.0], [93.6, 816.0], [93.7, 816.0], [93.8, 816.0], [93.9, 818.0], [94.0, 818.0], [94.1, 819.0], [94.2, 820.0], [94.3, 820.0], [94.4, 821.0], [94.5, 822.0], [94.6, 822.0], [94.7, 824.0], [94.8, 825.0], [94.9, 825.0], [95.0, 827.0], [95.1, 827.0], [95.2, 828.0], [95.3, 829.0], [95.4, 831.0], [95.5, 833.0], [95.6, 833.0], [95.7, 833.0], [95.8, 834.0], [95.9, 836.0], [96.0, 838.0], [96.1, 839.0], [96.2, 839.0], [96.3, 840.0], [96.4, 841.0], [96.5, 843.0], [96.6, 844.0], [96.7, 845.0], [96.8, 846.0], [96.9, 846.0], [97.0, 847.0], [97.1, 847.0], [97.2, 848.0], [97.3, 848.0], [97.4, 848.0], [97.5, 849.0], [97.6, 849.0], [97.7, 850.0], [97.8, 850.0], [97.9, 851.0], [98.0, 852.0], [98.1, 853.0], [98.2, 855.0], [98.3, 856.0], [98.4, 857.0], [98.5, 858.0], [98.6, 858.0], [98.7, 859.0], [98.8, 860.0], [98.9, 860.0], [99.0, 864.0], [99.1, 865.0], [99.2, 867.0], [99.3, 868.0], [99.4, 870.0], [99.5, 872.0], [99.6, 874.0], [99.7, 875.0], [99.8, 877.0], [99.9, 880.0], [100.0, 886.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 4.0], [3.7, 4.0], [3.8, 4.0], [3.9, 4.0], [4.0, 4.0], [4.1, 4.0], [4.2, 4.0], [4.3, 4.0], [4.4, 4.0], [4.5, 4.0], [4.6, 4.0], [4.7, 5.0], [4.8, 5.0], [4.9, 5.0], [5.0, 5.0], [5.1, 5.0], [5.2, 5.0], [5.3, 5.0], [5.4, 5.0], [5.5, 5.0], [5.6, 5.0], [5.7, 5.0], [5.8, 6.0], [5.9, 6.0], [6.0, 6.0], [6.1, 7.0], [6.2, 8.0], [6.3, 8.0], [6.4, 9.0], [6.5, 9.0], [6.6, 9.0], [6.7, 10.0], [6.8, 10.0], [6.9, 10.0], [7.0, 10.0], [7.1, 10.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 12.0], [7.7, 12.0], [7.8, 12.0], [7.9, 12.0], [8.0, 12.0], [8.1, 13.0], [8.2, 13.0], [8.3, 13.0], [8.4, 13.0], [8.5, 13.0], [8.6, 13.0], [8.7, 13.0], [8.8, 13.0], [8.9, 14.0], [9.0, 14.0], [9.1, 14.0], [9.2, 14.0], [9.3, 15.0], [9.4, 15.0], [9.5, 15.0], [9.6, 15.0], [9.7, 16.0], [9.8, 16.0], [9.9, 16.0], [10.0, 16.0], [10.1, 16.0], [10.2, 16.0], [10.3, 17.0], [10.4, 17.0], [10.5, 17.0], [10.6, 17.0], [10.7, 18.0], [10.8, 18.0], [10.9, 18.0], [11.0, 18.0], [11.1, 18.0], [11.2, 18.0], [11.3, 18.0], [11.4, 19.0], [11.5, 19.0], [11.6, 19.0], [11.7, 19.0], [11.8, 20.0], [11.9, 20.0], [12.0, 20.0], [12.1, 20.0], [12.2, 20.0], [12.3, 21.0], [12.4, 21.0], [12.5, 21.0], [12.6, 21.0], [12.7, 21.0], [12.8, 21.0], [12.9, 21.0], [13.0, 21.0], [13.1, 22.0], [13.2, 22.0], [13.3, 22.0], [13.4, 22.0], [13.5, 22.0], [13.6, 22.0], [13.7, 22.0], [13.8, 22.0], [13.9, 23.0], [14.0, 23.0], [14.1, 23.0], [14.2, 23.0], [14.3, 23.0], [14.4, 24.0], [14.5, 24.0], [14.6, 24.0], [14.7, 25.0], [14.8, 25.0], [14.9, 25.0], [15.0, 25.0], [15.1, 25.0], [15.2, 25.0], [15.3, 25.0], [15.4, 25.0], [15.5, 26.0], [15.6, 26.0], [15.7, 26.0], [15.8, 26.0], [15.9, 26.0], [16.0, 26.0], [16.1, 26.0], [16.2, 27.0], [16.3, 27.0], [16.4, 27.0], [16.5, 27.0], [16.6, 27.0], [16.7, 27.0], [16.8, 28.0], [16.9, 28.0], [17.0, 28.0], [17.1, 28.0], [17.2, 28.0], [17.3, 28.0], [17.4, 28.0], [17.5, 29.0], [17.6, 29.0], [17.7, 29.0], [17.8, 29.0], [17.9, 29.0], [18.0, 29.0], [18.1, 29.0], [18.2, 29.0], [18.3, 29.0], [18.4, 30.0], [18.5, 30.0], [18.6, 30.0], [18.7, 30.0], [18.8, 30.0], [18.9, 30.0], [19.0, 30.0], [19.1, 30.0], [19.2, 30.0], [19.3, 30.0], [19.4, 30.0], [19.5, 31.0], [19.6, 31.0], [19.7, 31.0], [19.8, 31.0], [19.9, 31.0], [20.0, 31.0], [20.1, 31.0], [20.2, 31.0], [20.3, 31.0], [20.4, 31.0], [20.5, 32.0], [20.6, 32.0], [20.7, 32.0], [20.8, 32.0], [20.9, 32.0], [21.0, 32.0], [21.1, 32.0], [21.2, 32.0], [21.3, 32.0], [21.4, 33.0], [21.5, 33.0], [21.6, 33.0], [21.7, 33.0], [21.8, 33.0], [21.9, 33.0], [22.0, 33.0], [22.1, 33.0], [22.2, 33.0], [22.3, 33.0], [22.4, 33.0], [22.5, 33.0], [22.6, 33.0], [22.7, 33.0], [22.8, 34.0], [22.9, 34.0], [23.0, 34.0], [23.1, 34.0], [23.2, 34.0], [23.3, 34.0], [23.4, 34.0], [23.5, 34.0], [23.6, 34.0], [23.7, 34.0], [23.8, 34.0], [23.9, 34.0], [24.0, 34.0], [24.1, 34.0], [24.2, 34.0], [24.3, 34.0], [24.4, 34.0], [24.5, 34.0], [24.6, 34.0], [24.7, 34.0], [24.8, 34.0], [24.9, 34.0], [25.0, 34.0], [25.1, 34.0], [25.2, 35.0], [25.3, 35.0], [25.4, 35.0], [25.5, 35.0], [25.6, 35.0], [25.7, 35.0], [25.8, 35.0], [25.9, 35.0], [26.0, 35.0], [26.1, 35.0], [26.2, 35.0], [26.3, 35.0], [26.4, 35.0], [26.5, 35.0], [26.6, 35.0], [26.7, 35.0], [26.8, 35.0], [26.9, 35.0], [27.0, 35.0], [27.1, 35.0], [27.2, 35.0], [27.3, 35.0], [27.4, 35.0], [27.5, 35.0], [27.6, 35.0], [27.7, 35.0], [27.8, 35.0], [27.9, 35.0], [28.0, 35.0], [28.1, 35.0], [28.2, 35.0], [28.3, 35.0], [28.4, 35.0], [28.5, 35.0], [28.6, 35.0], [28.7, 35.0], [28.8, 35.0], [28.9, 35.0], [29.0, 35.0], [29.1, 35.0], [29.2, 35.0], [29.3, 36.0], [29.4, 36.0], [29.5, 36.0], [29.6, 36.0], [29.7, 36.0], [29.8, 36.0], [29.9, 36.0], [30.0, 36.0], [30.1, 36.0], [30.2, 36.0], [30.3, 36.0], [30.4, 36.0], [30.5, 36.0], [30.6, 36.0], [30.7, 36.0], [30.8, 36.0], [30.9, 36.0], [31.0, 36.0], [31.1, 36.0], [31.2, 36.0], [31.3, 36.0], [31.4, 36.0], [31.5, 36.0], [31.6, 36.0], [31.7, 36.0], [31.8, 36.0], [31.9, 36.0], [32.0, 36.0], [32.1, 36.0], [32.2, 36.0], [32.3, 36.0], [32.4, 36.0], [32.5, 36.0], [32.6, 36.0], [32.7, 36.0], [32.8, 36.0], [32.9, 37.0], [33.0, 37.0], [33.1, 37.0], [33.2, 37.0], [33.3, 37.0], [33.4, 37.0], [33.5, 37.0], [33.6, 37.0], [33.7, 37.0], [33.8, 37.0], [33.9, 37.0], [34.0, 37.0], [34.1, 37.0], [34.2, 37.0], [34.3, 37.0], [34.4, 37.0], [34.5, 37.0], [34.6, 37.0], [34.7, 37.0], [34.8, 37.0], [34.9, 37.0], [35.0, 37.0], [35.1, 37.0], [35.2, 37.0], [35.3, 37.0], [35.4, 37.0], [35.5, 37.0], [35.6, 37.0], [35.7, 37.0], [35.8, 37.0], [35.9, 37.0], [36.0, 37.0], [36.1, 37.0], [36.2, 37.0], [36.3, 37.0], [36.4, 37.0], [36.5, 37.0], [36.6, 37.0], [36.7, 38.0], [36.8, 38.0], [36.9, 38.0], [37.0, 38.0], [37.1, 38.0], [37.2, 38.0], [37.3, 38.0], [37.4, 38.0], [37.5, 38.0], [37.6, 38.0], [37.7, 38.0], [37.8, 38.0], [37.9, 38.0], [38.0, 38.0], [38.1, 38.0], [38.2, 38.0], [38.3, 38.0], [38.4, 38.0], [38.5, 38.0], [38.6, 38.0], [38.7, 38.0], [38.8, 38.0], [38.9, 38.0], [39.0, 38.0], [39.1, 38.0], [39.2, 38.0], [39.3, 38.0], [39.4, 38.0], [39.5, 38.0], [39.6, 38.0], [39.7, 38.0], [39.8, 38.0], [39.9, 38.0], [40.0, 38.0], [40.1, 38.0], [40.2, 38.0], [40.3, 38.0], [40.4, 38.0], [40.5, 38.0], [40.6, 38.0], [40.7, 38.0], [40.8, 38.0], [40.9, 38.0], [41.0, 38.0], [41.1, 39.0], [41.2, 39.0], [41.3, 39.0], [41.4, 39.0], [41.5, 39.0], [41.6, 39.0], [41.7, 39.0], [41.8, 39.0], [41.9, 39.0], [42.0, 39.0], [42.1, 39.0], [42.2, 39.0], [42.3, 39.0], [42.4, 39.0], [42.5, 39.0], [42.6, 39.0], [42.7, 39.0], [42.8, 39.0], [42.9, 39.0], [43.0, 39.0], [43.1, 39.0], [43.2, 39.0], [43.3, 39.0], [43.4, 39.0], [43.5, 39.0], [43.6, 39.0], [43.7, 39.0], [43.8, 39.0], [43.9, 39.0], [44.0, 39.0], [44.1, 39.0], [44.2, 39.0], [44.3, 39.0], [44.4, 39.0], [44.5, 39.0], [44.6, 39.0], [44.7, 39.0], [44.8, 39.0], [44.9, 39.0], [45.0, 39.0], [45.1, 39.0], [45.2, 39.0], [45.3, 39.0], [45.4, 39.0], [45.5, 39.0], [45.6, 39.0], [45.7, 39.0], [45.8, 39.0], [45.9, 39.0], [46.0, 39.0], [46.1, 39.0], [46.2, 39.0], [46.3, 40.0], [46.4, 40.0], [46.5, 40.0], [46.6, 40.0], [46.7, 40.0], [46.8, 40.0], [46.9, 40.0], [47.0, 40.0], [47.1, 40.0], [47.2, 40.0], [47.3, 40.0], [47.4, 40.0], [47.5, 40.0], [47.6, 40.0], [47.7, 40.0], [47.8, 40.0], [47.9, 40.0], [48.0, 40.0], [48.1, 40.0], [48.2, 40.0], [48.3, 40.0], [48.4, 40.0], [48.5, 40.0], [48.6, 40.0], [48.7, 40.0], [48.8, 40.0], [48.9, 40.0], [49.0, 40.0], [49.1, 40.0], [49.2, 40.0], [49.3, 40.0], [49.4, 40.0], [49.5, 40.0], [49.6, 40.0], [49.7, 40.0], [49.8, 40.0], [49.9, 40.0], [50.0, 40.0], [50.1, 40.0], [50.2, 40.0], [50.3, 40.0], [50.4, 40.0], [50.5, 40.0], [50.6, 40.0], [50.7, 40.0], [50.8, 40.0], [50.9, 40.0], [51.0, 41.0], [51.1, 41.0], [51.2, 41.0], [51.3, 41.0], [51.4, 41.0], [51.5, 41.0], [51.6, 41.0], [51.7, 41.0], [51.8, 41.0], [51.9, 41.0], [52.0, 41.0], [52.1, 41.0], [52.2, 41.0], [52.3, 41.0], [52.4, 41.0], [52.5, 41.0], [52.6, 41.0], [52.7, 41.0], [52.8, 41.0], [52.9, 41.0], [53.0, 41.0], [53.1, 41.0], [53.2, 41.0], [53.3, 41.0], [53.4, 41.0], [53.5, 41.0], [53.6, 41.0], [53.7, 41.0], [53.8, 41.0], [53.9, 41.0], [54.0, 41.0], [54.1, 41.0], [54.2, 41.0], [54.3, 41.0], [54.4, 41.0], [54.5, 41.0], [54.6, 41.0], [54.7, 41.0], [54.8, 42.0], [54.9, 42.0], [55.0, 42.0], [55.1, 42.0], [55.2, 42.0], [55.3, 42.0], [55.4, 42.0], [55.5, 42.0], [55.6, 42.0], [55.7, 42.0], [55.8, 42.0], [55.9, 42.0], [56.0, 42.0], [56.1, 42.0], [56.2, 42.0], [56.3, 42.0], [56.4, 42.0], [56.5, 42.0], [56.6, 42.0], [56.7, 42.0], [56.8, 42.0], [56.9, 42.0], [57.0, 42.0], [57.1, 42.0], [57.2, 42.0], [57.3, 42.0], [57.4, 42.0], [57.5, 42.0], [57.6, 42.0], [57.7, 42.0], [57.8, 42.0], [57.9, 42.0], [58.0, 42.0], [58.1, 42.0], [58.2, 43.0], [58.3, 43.0], [58.4, 43.0], [58.5, 43.0], [58.6, 43.0], [58.7, 43.0], [58.8, 43.0], [58.9, 43.0], [59.0, 43.0], [59.1, 43.0], [59.2, 43.0], [59.3, 43.0], [59.4, 43.0], [59.5, 43.0], [59.6, 43.0], [59.7, 43.0], [59.8, 43.0], [59.9, 43.0], [60.0, 43.0], [60.1, 43.0], [60.2, 43.0], [60.3, 43.0], [60.4, 43.0], [60.5, 43.0], [60.6, 43.0], [60.7, 43.0], [60.8, 43.0], [60.9, 43.0], [61.0, 43.0], [61.1, 43.0], [61.2, 43.0], [61.3, 43.0], [61.4, 43.0], [61.5, 44.0], [61.6, 44.0], [61.7, 44.0], [61.8, 44.0], [61.9, 44.0], [62.0, 44.0], [62.1, 44.0], [62.2, 44.0], [62.3, 44.0], [62.4, 44.0], [62.5, 44.0], [62.6, 44.0], [62.7, 44.0], [62.8, 44.0], [62.9, 44.0], [63.0, 44.0], [63.1, 44.0], [63.2, 44.0], [63.3, 44.0], [63.4, 44.0], [63.5, 44.0], [63.6, 44.0], [63.7, 44.0], [63.8, 44.0], [63.9, 44.0], [64.0, 44.0], [64.1, 44.0], [64.2, 44.0], [64.3, 44.0], [64.4, 44.0], [64.5, 44.0], [64.6, 44.0], [64.7, 44.0], [64.8, 44.0], [64.9, 44.0], [65.0, 44.0], [65.1, 45.0], [65.2, 45.0], [65.3, 45.0], [65.4, 45.0], [65.5, 45.0], [65.6, 45.0], [65.7, 45.0], [65.8, 45.0], [65.9, 45.0], [66.0, 45.0], [66.1, 45.0], [66.2, 45.0], [66.3, 45.0], [66.4, 45.0], [66.5, 45.0], [66.6, 45.0], [66.7, 45.0], [66.8, 45.0], [66.9, 45.0], [67.0, 45.0], [67.1, 45.0], [67.2, 45.0], [67.3, 45.0], [67.4, 45.0], [67.5, 45.0], [67.6, 45.0], [67.7, 45.0], [67.8, 45.0], [67.9, 45.0], [68.0, 45.0], [68.1, 45.0], [68.2, 45.0], [68.3, 45.0], [68.4, 45.0], [68.5, 45.0], [68.6, 45.0], [68.7, 45.0], [68.8, 45.0], [68.9, 46.0], [69.0, 46.0], [69.1, 46.0], [69.2, 46.0], [69.3, 46.0], [69.4, 46.0], [69.5, 46.0], [69.6, 46.0], [69.7, 46.0], [69.8, 46.0], [69.9, 46.0], [70.0, 46.0], [70.1, 46.0], [70.2, 46.0], [70.3, 46.0], [70.4, 46.0], [70.5, 46.0], [70.6, 46.0], [70.7, 46.0], [70.8, 46.0], [70.9, 46.0], [71.0, 46.0], [71.1, 46.0], [71.2, 46.0], [71.3, 46.0], [71.4, 46.0], [71.5, 46.0], [71.6, 46.0], [71.7, 46.0], [71.8, 46.0], [71.9, 46.0], [72.0, 46.0], [72.1, 46.0], [72.2, 47.0], [72.3, 47.0], [72.4, 47.0], [72.5, 47.0], [72.6, 47.0], [72.7, 47.0], [72.8, 47.0], [72.9, 47.0], [73.0, 47.0], [73.1, 47.0], [73.2, 47.0], [73.3, 47.0], [73.4, 47.0], [73.5, 47.0], [73.6, 47.0], [73.7, 47.0], [73.8, 47.0], [73.9, 47.0], [74.0, 47.0], [74.1, 47.0], [74.2, 47.0], [74.3, 47.0], [74.4, 47.0], [74.5, 47.0], [74.6, 47.0], [74.7, 47.0], [74.8, 47.0], [74.9, 48.0], [75.0, 48.0], [75.1, 48.0], [75.2, 48.0], [75.3, 48.0], [75.4, 48.0], [75.5, 48.0], [75.6, 48.0], [75.7, 48.0], [75.8, 48.0], [75.9, 48.0], [76.0, 48.0], [76.1, 48.0], [76.2, 48.0], [76.3, 48.0], [76.4, 48.0], [76.5, 48.0], [76.6, 48.0], [76.7, 49.0], [76.8, 49.0], [76.9, 49.0], [77.0, 49.0], [77.1, 49.0], [77.2, 49.0], [77.3, 49.0], [77.4, 49.0], [77.5, 49.0], [77.6, 49.0], [77.7, 49.0], [77.8, 49.0], [77.9, 49.0], [78.0, 49.0], [78.1, 49.0], [78.2, 49.0], [78.3, 49.0], [78.4, 49.0], [78.5, 50.0], [78.6, 50.0], [78.7, 50.0], [78.8, 50.0], [78.9, 50.0], [79.0, 50.0], [79.1, 50.0], [79.2, 50.0], [79.3, 50.0], [79.4, 50.0], [79.5, 50.0], [79.6, 50.0], [79.7, 50.0], [79.8, 50.0], [79.9, 50.0], [80.0, 51.0], [80.1, 51.0], [80.2, 51.0], [80.3, 51.0], [80.4, 51.0], [80.5, 51.0], [80.6, 51.0], [80.7, 51.0], [80.8, 51.0], [80.9, 51.0], [81.0, 51.0], [81.1, 51.0], [81.2, 51.0], [81.3, 51.0], [81.4, 52.0], [81.5, 52.0], [81.6, 52.0], [81.7, 52.0], [81.8, 52.0], [81.9, 52.0], [82.0, 52.0], [82.1, 52.0], [82.2, 52.0], [82.3, 53.0], [82.4, 53.0], [82.5, 53.0], [82.6, 53.0], [82.7, 53.0], [82.8, 53.0], [82.9, 53.0], [83.0, 53.0], [83.1, 53.0], [83.2, 53.0], [83.3, 53.0], [83.4, 53.0], [83.5, 54.0], [83.6, 54.0], [83.7, 54.0], [83.8, 54.0], [83.9, 54.0], [84.0, 54.0], [84.1, 54.0], [84.2, 54.0], [84.3, 54.0], [84.4, 55.0], [84.5, 55.0], [84.6, 55.0], [84.7, 55.0], [84.8, 55.0], [84.9, 55.0], [85.0, 56.0], [85.1, 56.0], [85.2, 56.0], [85.3, 56.0], [85.4, 56.0], [85.5, 56.0], [85.6, 56.0], [85.7, 57.0], [85.8, 57.0], [85.9, 57.0], [86.0, 57.0], [86.1, 57.0], [86.2, 58.0], [86.3, 58.0], [86.4, 58.0], [86.5, 58.0], [86.6, 58.0], [86.7, 58.0], [86.8, 58.0], [86.9, 59.0], [87.0, 59.0], [87.1, 59.0], [87.2, 60.0], [87.3, 60.0], [87.4, 60.0], [87.5, 61.0], [87.6, 61.0], [87.7, 61.0], [87.8, 62.0], [87.9, 62.0], [88.0, 62.0], [88.1, 62.0], [88.2, 63.0], [88.3, 63.0], [88.4, 64.0], [88.5, 64.0], [88.6, 65.0], [88.7, 65.0], [88.8, 65.0], [88.9, 66.0], [89.0, 66.0], [89.1, 67.0], [89.2, 67.0], [89.3, 68.0], [89.4, 69.0], [89.5, 70.0], [89.6, 71.0], [89.7, 73.0], [89.8, 73.0], [89.9, 74.0], [90.0, 77.0], [90.1, 78.0], [90.2, 81.0], [90.3, 84.0], [90.4, 85.0], [90.5, 86.0], [90.6, 91.0], [90.7, 93.0], [90.8, 95.0], [90.9, 98.0], [91.0, 110.0], [91.1, 122.0], [91.2, 132.0], [91.3, 137.0], [91.4, 149.0], [91.5, 156.0], [91.6, 158.0], [91.7, 159.0], [91.8, 160.0], [91.9, 161.0], [92.0, 164.0], [92.1, 166.0], [92.2, 167.0], [92.3, 169.0], [92.4, 170.0], [92.5, 171.0], [92.6, 172.0], [92.7, 173.0], [92.8, 175.0], [92.9, 177.0], [93.0, 179.0], [93.1, 183.0], [93.2, 183.0], [93.3, 188.0], [93.4, 190.0], [93.5, 193.0], [93.6, 206.0], [93.7, 215.0], [93.8, 216.0], [93.9, 218.0], [94.0, 219.0], [94.1, 221.0], [94.2, 227.0], [94.3, 228.0], [94.4, 230.0], [94.5, 232.0], [94.6, 234.0], [94.7, 235.0], [94.8, 239.0], [94.9, 240.0], [95.0, 243.0], [95.1, 244.0], [95.2, 247.0], [95.3, 249.0], [95.4, 252.0], [95.5, 252.0], [95.6, 255.0], [95.7, 257.0], [95.8, 258.0], [95.9, 260.0], [96.0, 261.0], [96.1, 262.0], [96.2, 262.0], [96.3, 264.0], [96.4, 265.0], [96.5, 266.0], [96.6, 270.0], [96.7, 276.0], [96.8, 278.0], [96.9, 280.0], [97.0, 284.0], [97.1, 288.0], [97.2, 289.0], [97.3, 292.0], [97.4, 293.0], [97.5, 294.0], [97.6, 295.0], [97.7, 296.0], [97.8, 297.0], [97.9, 297.0], [98.0, 298.0], [98.1, 299.0], [98.2, 300.0], [98.3, 300.0], [98.4, 301.0], [98.5, 302.0], [98.6, 302.0], [98.7, 302.0], [98.8, 303.0], [98.9, 305.0], [99.0, 306.0], [99.1, 308.0], [99.2, 310.0], [99.3, 312.0], [99.4, 315.0], [99.5, 316.0], [99.6, 318.0], [99.7, 319.0], [99.8, 335.0], [99.9, 411.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2999.0, "series": [{"data": [[0.0, 2999.0], [200.0, 1.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 135.0], [300.0, 284.0], [600.0, 377.0], [700.0, 580.0], [100.0, 461.0], [200.0, 403.0], [400.0, 208.0], [800.0, 272.0], [500.0, 280.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 2728.0], [300.0, 52.0], [200.0, 136.0], [400.0, 4.0], [100.0, 80.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1508.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7492.0, "series": [{"data": [[0.0, 7492.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1508.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 86.31599999999996, "minX": 1.66901736E12, "maxY": 578.4926666666686, "series": [{"data": [[1.66901736E12, 578.4926666666686]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.66901736E12, 86.31599999999996]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.66901736E12, 102.57333333333312]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901736E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.0, "maxY": 882.0, "series": [{"data": [[2.0, 34.0], [3.0, 5.0], [4.0, 68.5], [5.0, 25.333333333333332], [6.0, 5.666666666666667], [7.0, 68.5], [8.0, 7.25], [9.0, 37.75], [10.0, 5.0], [11.0, 20.5], [12.0, 28.833333333333332], [13.0, 11.25], [15.0, 10.5], [18.0, 15.5], [24.0, 31.0], [25.0, 43.285714285714285], [26.0, 41.42857142857143], [27.0, 28.6], [28.0, 53.5], [29.0, 35.66666666666667], [30.0, 32.333333333333336], [31.0, 42.125], [33.0, 42.14285714285714], [32.0, 44.0], [35.0, 42.13333333333333], [34.0, 52.111111111111114], [36.0, 47.92857142857143], [37.0, 51.142857142857146], [38.0, 52.230769230769226], [39.0, 49.05555555555555], [40.0, 37.625], [41.0, 44.6], [42.0, 38.47619047619047], [43.0, 47.300000000000004], [45.0, 49.64], [44.0, 48.083333333333336], [47.0, 46.45454545454545], [46.0, 50.60606060606061], [48.0, 46.68181818181819], [49.0, 49.86956521739131], [51.0, 49.64000000000001], [50.0, 54.2608695652174], [52.0, 56.318181818181806], [53.0, 50.37837837837838], [55.0, 47.73076923076925], [54.0, 51.85416666666668], [57.0, 49.677419354838705], [56.0, 49.324999999999996], [59.0, 54.9032258064516], [58.0, 51.94594594594594], [61.0, 47.974358974358985], [60.0, 52.78124999999999], [63.0, 53.173913043478265], [62.0, 52.40909090909091], [67.0, 56.5], [66.0, 55.78787878787879], [65.0, 52.0], [64.0, 50.920000000000016], [71.0, 55.470588235294116], [70.0, 53.416666666666664], [69.0, 52.90000000000003], [68.0, 53.67441860465116], [72.0, 53.51020408163265], [73.0, 53.65454545454545], [75.0, 57.78571428571429], [74.0, 59.357142857142854], [78.0, 55.98148148148149], [77.0, 57.571428571428584], [76.0, 53.26315789473685], [79.0, 58.878787878787875], [80.0, 58.82758620689655], [82.0, 62.54999999999999], [81.0, 55.32558139534883], [83.0, 60.370370370370374], [86.0, 58.142857142857146], [85.0, 58.21212121212121], [84.0, 60.83870967741935], [87.0, 59.857142857142854], [91.0, 62.40909090909091], [88.0, 59.17073170731707], [89.0, 57.81249999999999], [90.0, 64.58695652173913], [92.0, 58.48], [95.0, 58.40624999999999], [93.0, 57.852941176470594], [94.0, 56.529411764705884], [96.0, 55.23809523809524], [97.0, 57.46153846153847], [98.0, 60.392857142857146], [99.0, 55.05263157894738], [103.0, 53.238095238095234], [102.0, 56.30769230769231], [101.0, 55.300000000000004], [100.0, 56.45833333333333], [106.0, 61.96153846153847], [105.0, 57.3], [107.0, 62.18181818181818], [104.0, 59.26315789473684], [110.0, 61.77777777777778], [109.0, 58.54545454545455], [108.0, 61.31034482758621], [111.0, 56.0], [115.0, 62.75], [113.0, 63.72727272727273], [112.0, 59.800000000000004], [114.0, 56.800000000000004], [118.0, 56.8], [117.0, 59.09090909090909], [119.0, 55.625], [116.0, 57.272727272727266], [123.0, 67.5], [120.0, 64.3125], [122.0, 56.999999999999986], [121.0, 57.25], [127.0, 68.0], [126.0, 68.14285714285715], [125.0, 70.42857142857143], [124.0, 59.714285714285715], [132.0, 60.07692307692307], [130.0, 87.0], [135.0, 59.2], [133.0, 61.0], [131.0, 59.888888888888886], [129.0, 61.125], [134.0, 66.71428571428572], [128.0, 63.0], [143.0, 58.75], [142.0, 60.0], [141.0, 65.5], [140.0, 60.27272727272727], [139.0, 57.4], [137.0, 62.57142857142857], [136.0, 70.0], [138.0, 65.0], [151.0, 64.0], [150.0, 58.35294117647058], [149.0, 63.55555555555556], [148.0, 65.75], [147.0, 60.57142857142857], [144.0, 64.6], [145.0, 56.4], [146.0, 63.714285714285715], [158.0, 57.166666666666664], [157.0, 55.6], [156.0, 66.55555555555556], [155.0, 58.5], [154.0, 60.166666666666664], [153.0, 58.333333333333336], [152.0, 65.66666666666667], [159.0, 62.77777777777778], [167.0, 58.0], [166.0, 58.57142857142858], [163.0, 52.25], [162.0, 63.0], [160.0, 56.62500000000001], [165.0, 66.5], [164.0, 65.0], [161.0, 60.28571428571429], [175.0, 73.33333333333333], [174.0, 72.77777777777779], [173.0, 67.0], [172.0, 61.0], [171.0, 73.2], [170.0, 54.666666666666664], [169.0, 58.666666666666664], [168.0, 75.5], [177.0, 66.33333333333333], [176.0, 69.0], [180.0, 73.2], [178.0, 69.75], [183.0, 82.0], [182.0, 66.33333333333333], [181.0, 68.0], [179.0, 70.4], [190.0, 73.33333333333333], [189.0, 77.0], [188.0, 71.66666666666667], [187.0, 75.0], [186.0, 73.5], [185.0, 67.5], [184.0, 77.5], [199.0, 72.0], [198.0, 76.0], [197.0, 77.0], [196.0, 77.75], [193.0, 73.0], [195.0, 85.0], [194.0, 67.0], [192.0, 69.0], [207.0, 71.8], [206.0, 73.0], [205.0, 70.33333333333333], [204.0, 69.0], [203.0, 70.0], [202.0, 77.0], [201.0, 65.66666666666667], [200.0, 74.33333333333333], [212.0, 62.333333333333336], [211.0, 57.25], [209.0, 70.0], [208.0, 63.166666666666664], [214.0, 63.5], [213.0, 58.0], [210.0, 64.0], [215.0, 61.5], [223.0, 66.0], [222.0, 53.0], [221.0, 61.333333333333336], [218.0, 57.5], [217.0, 64.0], [216.0, 55.0], [1.0, 34.5]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[86.31500000000005, 55.82033333333328]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 815.0], [3.0, 824.0], [4.0, 828.0], [5.0, 832.0], [6.0, 798.0], [7.0, 833.0], [8.0, 790.0], [9.0, 831.0], [11.0, 795.5], [12.0, 839.0], [14.0, 827.0], [15.0, 792.5], [18.0, 817.0], [21.0, 820.0], [22.0, 814.0], [25.0, 839.0], [26.0, 815.0], [27.0, 814.0], [29.0, 814.0], [30.0, 816.0], [33.0, 815.6666666666666], [34.0, 813.0], [37.0, 813.0], [43.0, 784.0], [42.0, 803.6], [45.0, 820.0], [47.0, 767.0], [46.0, 830.0], [48.0, 786.0], [50.0, 814.0], [53.0, 809.0], [57.0, 814.0], [56.0, 836.6666666666666], [58.0, 876.0], [61.0, 787.6666666666666], [63.0, 402.5], [62.0, 882.0], [67.0, 762.0], [66.0, 791.6666666666666], [71.0, 802.0], [70.0, 832.5], [68.0, 729.0], [74.0, 785.0], [73.0, 797.0], [72.0, 802.0], [78.0, 733.5], [76.0, 756.0], [83.0, 819.5], [81.0, 756.3333333333334], [86.0, 766.5], [84.0, 754.0], [91.0, 422.5], [90.0, 23.0], [89.0, 789.0], [88.0, 775.5], [95.0, 22.75], [92.0, 277.66666666666663], [94.0, 399.25], [99.0, 402.5], [97.0, 797.6666666666666], [102.0, 229.5], [103.0, 371.0], [101.0, 825.0], [100.0, 865.0], [107.0, 326.875], [106.0, 32.0], [104.0, 185.0], [105.0, 377.0], [109.0, 109.1], [111.0, 222.0], [108.0, 139.85714285714286], [110.0, 53.0], [115.0, 51.666666666666664], [113.0, 534.3333333333334], [112.0, 53.75], [119.0, 561.0], [117.0, 847.0], [116.0, 774.0], [123.0, 77.0], [122.0, 139.72727272727272], [121.0, 755.0], [127.0, 247.25], [126.0, 410.5], [125.0, 268.75], [124.0, 416.3333333333333], [134.0, 214.8], [132.0, 211.8], [130.0, 456.5], [129.0, 183.66666666666669], [135.0, 336.66666666666663], [133.0, 750.0], [131.0, 756.0], [128.0, 753.0], [136.0, 325.66666666666663], [137.0, 334.66666666666663], [143.0, 736.5], [141.0, 744.0], [140.0, 850.0], [139.0, 715.0], [138.0, 847.0], [151.0, 90.0], [150.0, 538.0], [148.0, 464.0], [147.0, 826.0], [146.0, 843.0], [145.0, 725.0], [144.0, 778.0], [156.0, 339.66666666666663], [155.0, 436.0], [154.0, 551.5], [152.0, 86.0], [159.0, 664.0], [158.0, 833.0], [157.0, 824.0], [166.0, 827.0], [165.0, 841.0], [164.0, 775.0], [163.0, 790.0], [162.0, 840.0], [161.0, 837.0], [160.0, 831.0], [173.0, 498.3333333333333], [172.0, 102.0], [170.0, 237.0], [175.0, 773.6666666666666], [169.0, 762.6666666666666], [176.0, 206.6], [183.0, 429.5], [182.0, 109.0], [181.0, 795.0], [180.0, 789.0], [179.0, 727.0], [178.0, 822.0], [177.0, 730.0], [186.0, 283.0], [184.0, 107.0], [191.0, 787.5], [189.0, 727.0], [188.0, 832.5], [185.0, 754.0], [198.0, 103.2], [199.0, 107.83333333333334], [197.0, 128.0], [196.0, 178.63636363636365], [195.0, 131.2], [193.0, 396.5], [194.0, 578.3333333333334], [206.0, 118.42857142857143], [204.0, 184.6], [202.0, 300.15789473684214], [200.0, 107.37499999999999], [207.0, 245.66666666666666], [203.0, 339.66666666666663], [201.0, 90.5], [205.0, 294.57142857142856], [209.0, 208.5], [211.0, 248.5], [212.0, 353.66666666666663], [208.0, 116.66666666666667], [210.0, 294.0], [213.0, 589.3333333333334], [214.0, 474.0], [223.0, 219.08333333333331], [221.0, 337.42857142857144], [219.0, 353.42857142857144], [220.0, 170.5], [218.0, 381.66666666666663], [217.0, 152.5], [216.0, 466.0], [222.0, 299.8], [224.0, 225.63636363636365], [229.0, 254.77777777777774], [227.0, 242.0], [226.0, 229.3076923076923], [225.0, 261.0], [228.0, 266.0], [230.0, 287.16666666666663], [231.0, 336.5], [232.0, 282.0], [233.0, 293.16666666666663], [239.0, 189.0], [236.0, 387.33333333333337], [235.0, 268.5], [234.0, 490.0], [238.0, 816.0], [237.0, 875.0], [247.0, 615.3333333333334], [246.0, 184.0], [245.0, 508.5], [243.0, 323.5], [242.0, 435.8], [241.0, 396.66666666666663], [244.0, 182.0], [240.0, 394.66666666666663], [248.0, 181.0], [255.0, 791.0], [254.0, 689.0], [253.0, 794.5], [251.0, 818.0], [249.0, 740.0], [271.0, 853.0], [266.0, 356.8571428571429], [267.0, 186.0], [264.0, 396.33333333333337], [265.0, 782.0], [263.0, 189.0], [262.0, 319.6], [261.0, 495.5], [260.0, 503.0], [268.0, 487.25], [259.0, 880.0], [258.0, 684.0], [257.0, 786.0], [256.0, 783.0], [270.0, 772.0], [269.0, 783.0], [275.0, 714.5], [286.0, 489.0], [287.0, 171.0], [285.0, 805.3333333333334], [273.0, 808.0], [272.0, 668.0], [283.0, 709.5], [282.0, 766.0], [279.0, 870.0], [278.0, 770.0], [277.0, 870.0], [276.0, 768.0], [301.0, 307.0], [290.0, 573.6666666666666], [292.0, 640.3333333333334], [294.0, 412.0], [295.0, 761.0], [291.0, 175.5], [289.0, 371.0], [288.0, 206.0], [302.0, 172.33333333333334], [297.0, 297.0], [296.0, 399.66666666666663], [303.0, 307.0], [300.0, 264.0], [299.0, 295.6], [298.0, 319.4], [304.0, 426.2], [306.0, 173.0], [307.0, 189.25], [317.0, 188.5], [316.0, 474.5], [305.0, 324.25], [311.0, 179.25], [309.0, 186.0], [308.0, 175.0], [310.0, 209.0], [319.0, 425.8], [314.0, 736.0], [312.0, 776.8571428571429], [318.0, 425.2], [335.0, 475.5], [333.0, 477.25], [330.0, 180.625], [328.0, 284.33333333333337], [327.0, 271.2857142857143], [326.0, 257.375], [325.0, 317.75], [324.0, 477.0], [334.0, 396.4], [332.0, 185.66666666666666], [323.0, 311.25], [322.0, 353.75], [321.0, 356.0], [320.0, 382.33333333333337], [331.0, 531.5], [329.0, 308.4], [339.0, 355.75], [345.0, 494.0], [344.0, 196.0], [350.0, 300.5], [349.0, 466.5], [348.0, 549.0], [351.0, 173.0], [346.0, 270.57142857142856], [347.0, 305.0], [343.0, 504.5], [342.0, 207.33333333333334], [341.0, 406.33333333333337], [340.0, 362.66666666666663], [338.0, 560.3333333333334], [337.0, 191.0], [336.0, 302.6], [352.0, 399.8], [353.0, 298.6], [355.0, 148.0], [354.0, 481.0], [357.0, 176.33333333333331], [356.0, 168.5], [364.0, 189.0], [363.0, 171.0], [362.0, 170.0], [361.0, 185.66666666666666], [367.0, 197.5], [366.0, 194.66666666666666], [365.0, 152.0], [359.0, 195.33333333333334], [358.0, 171.0], [370.0, 185.0], [377.0, 319.25], [378.0, 516.5], [379.0, 827.0], [376.0, 474.0], [374.0, 213.0], [373.0, 535.0], [372.0, 781.470588235294], [369.0, 177.0], [368.0, 183.5], [375.0, 777.5], [383.0, 191.66666666666666], [382.0, 311.0], [381.0, 404.2], [380.0, 168.5], [398.0, 593.6666666666666], [385.0, 333.0], [386.0, 177.0], [387.0, 827.0], [384.0, 476.25], [391.0, 777.0], [390.0, 677.0], [388.0, 868.0], [399.0, 440.66666666666663], [392.0, 768.6666666666666], [397.0, 225.0], [396.0, 493.0], [393.0, 488.0], [395.0, 865.0], [394.0, 751.0], [402.0, 382.25], [405.0, 488.0], [407.0, 206.0], [406.0, 428.66666666666663], [404.0, 398.66666666666663], [403.0, 367.66666666666663], [412.0, 840.5], [415.0, 723.0], [414.0, 794.5], [409.0, 495.0], [408.0, 605.0], [401.0, 341.75], [400.0, 382.0], [411.0, 234.0], [410.0, 210.0], [430.0, 199.0], [431.0, 538.6666666666666], [429.0, 625.0], [428.0, 205.0], [427.0, 601.0], [426.0, 216.0], [425.0, 496.0], [424.0, 599.6666666666666], [423.0, 205.0], [417.0, 326.5], [416.0, 489.5], [419.0, 612.6666666666666], [418.0, 217.0], [422.0, 548.3333333333334], [421.0, 242.0], [420.0, 482.0], [446.0, 391.28571428571433], [447.0, 404.0], [445.0, 208.0], [444.0, 195.75], [443.0, 514.25], [442.0, 353.25], [440.0, 350.5], [441.0, 246.0], [438.0, 506.75], [439.0, 485.5], [433.0, 620.3333333333334], [432.0, 217.0], [435.0, 501.0], [434.0, 231.0], [437.0, 203.0], [436.0, 604.0], [451.0, 214.0], [455.0, 227.33333333333334], [457.0, 573.2], [459.0, 840.0], [458.0, 793.0], [453.0, 250.0], [454.0, 812.0], [452.0, 657.75], [450.0, 611.3333333333334], [449.0, 217.4], [448.0, 328.4], [463.0, 757.5], [461.0, 771.0], [460.0, 699.5], [478.0, 779.0], [479.0, 735.0], [477.0, 858.0], [475.0, 855.0], [474.0, 816.0], [471.0, 716.6666666666666], [468.0, 753.0], [466.0, 830.5], [467.0, 786.0], [495.0, 426.66666666666663], [489.0, 428.33333333333337], [490.0, 253.0], [488.0, 534.25], [487.0, 243.5], [486.0, 233.66666666666666], [485.0, 522.8333333333334], [484.0, 209.0], [494.0, 610.3333333333334], [492.0, 771.0], [482.0, 852.0], [481.0, 796.5], [497.0, 496.0], [496.0, 234.0], [510.0, 866.0], [509.0, 768.0], [499.0, 856.0], [507.0, 802.6666666666666], [506.0, 788.0], [504.0, 852.0], [503.0, 781.0], [500.0, 666.0], [530.0, 814.0], [524.0, 251.5], [525.0, 653.5], [523.0, 304.7142857142857], [522.0, 315.0], [521.0, 782.0], [520.0, 812.0], [533.0, 748.3333333333334], [532.0, 772.0], [531.0, 738.0], [526.0, 857.0], [519.0, 737.0], [517.0, 762.5], [515.0, 779.0], [512.0, 775.5], [569.0, 518.0], [556.0, 229.25], [557.0, 515.0], [558.0, 738.0], [555.0, 522.1666666666666], [554.0, 796.0], [552.0, 750.75], [553.0, 801.5384615384615], [570.0, 243.0], [568.0, 600.3333333333334], [549.0, 738.0], [559.0, 785.0], [567.0, 252.0], [566.0, 751.5], [564.0, 774.5], [562.0, 779.0], [561.0, 847.0], [560.0, 781.0], [575.0, 664.0], [574.0, 812.0], [573.0, 800.75], [604.0, 542.2], [607.0, 469.7142857142857], [597.0, 490.75], [596.0, 813.0], [606.0, 224.0], [605.0, 210.0], [603.0, 268.3333333333333], [602.0, 529.75], [601.0, 263.0], [600.0, 265.0], [591.0, 779.0], [577.0, 793.0], [580.0, 777.0], [578.0, 817.0], [583.0, 747.0], [581.0, 786.6666666666666], [589.0, 801.6666666666666], [587.0, 808.0], [586.0, 775.0], [585.0, 661.0], [599.0, 631.75], [598.0, 521.0], [611.0, 287.9090909090909], [612.0, 611.3333333333334], [610.0, 196.5], [609.0, 329.5714285714286], [608.0, 254.5833333333333], [616.0, 242.0], [620.0, 296.0], [617.0, 752.0], [622.0, 245.33333333333334], [621.0, 230.0], [623.0, 594.1111111111111], [615.0, 662.75], [632.0, 774.0], [636.0, 712.5], [633.0, 727.0], [639.0, 232.0], [638.0, 665.75], [613.0, 406.66666666666663], [625.0, 299.0], [627.0, 809.0], [626.0, 815.0], [630.0, 652.5], [628.0, 740.5], [624.0, 336.4], [660.0, 270.0], [641.0, 576.0], [640.0, 306.0], [651.0, 750.6666666666666], [648.0, 746.6666666666666], [664.0, 573.1666666666667], [646.0, 760.0], [645.0, 759.0], [643.0, 805.0], [666.0, 756.0], [670.0, 697.3333333333334], [669.0, 770.0], [663.0, 577.75], [662.0, 292.0], [661.0, 405.75], [659.0, 297.0], [671.0, 732.8], [678.0, 235.0], [684.0, 243.0], [685.0, 245.0], [686.0, 757.5], [675.0, 621.25], [672.0, 759.0], [673.0, 738.0], [687.0, 257.0], [683.0, 614.3333333333334], [682.0, 268.0], [681.0, 294.0], [680.0, 652.4], [679.0, 246.0], [696.0, 263.6666666666667], [697.0, 404.85714285714283], [695.0, 265.5], [694.0, 745.0], [693.0, 555.0], [692.0, 365.8], [691.0, 252.0], [703.0, 294.3333333333333], [690.0, 500.25], [689.0, 600.0], [688.0, 601.0], [702.0, 356.0], [701.0, 523.0], [700.0, 421.33333333333337], [699.0, 259.5], [698.0, 435.33333333333337], [677.0, 258.0], [676.0, 299.0], [730.0, 357.625], [734.0, 394.6666666666667], [705.0, 444.3333333333333], [704.0, 284.5], [722.0, 345.58333333333337], [721.0, 347.42857142857144], [724.0, 365.1111111111111], [723.0, 329.00000000000006], [726.0, 460.8333333333333], [727.0, 312.80000000000007], [725.0, 325.0], [720.0, 419.25], [717.0, 360.40000000000003], [716.0, 369.4444444444444], [715.0, 316.1111111111111], [714.0, 475.4444444444444], [713.0, 311.40000000000003], [712.0, 310.7142857142857], [718.0, 366.4545454545455], [719.0, 307.0], [735.0, 543.75], [733.0, 333.3333333333333], [732.0, 423.50000000000006], [731.0, 307.2], [729.0, 346.6], [728.0, 442.2], [711.0, 445.6], [710.0, 301.3333333333333], [708.0, 424.1818181818182], [709.0, 332.0], [707.0, 382.6666666666667], [706.0, 307.0], [739.0, 282.0], [746.0, 592.3333333333333], [744.0, 311.5], [745.0, 551.0], [743.0, 526.0], [761.0, 545.5], [763.0, 604.6], [765.0, 743.0], [762.0, 370.0], [767.0, 351.0], [755.0, 758.3333333333334], [752.0, 756.3333333333334], [759.0, 731.0], [757.0, 762.0], [766.0, 445.5], [742.0, 308.3333333333333], [740.0, 298.3333333333333], [736.0, 291.5], [749.0, 747.0], [748.0, 539.0], [747.0, 541.75], [741.0, 331.0], [738.0, 641.75], [737.0, 284.0], [793.0, 721.0], [783.0, 495.33333333333337], [770.0, 739.0], [769.0, 745.0], [773.0, 760.0], [771.0, 770.5], [782.0, 484.3333333333333], [780.0, 550.5], [779.0, 743.5], [777.0, 722.5], [776.0, 771.0], [781.0, 720.0], [799.0, 389.0], [787.0, 735.5], [785.0, 732.5], [789.0, 752.0], [788.0, 738.0], [798.0, 390.0], [795.0, 602.0], [792.0, 772.0], [775.0, 713.0], [791.0, 732.0], [790.0, 761.0], [825.0, 455.0], [807.0, 431.7], [806.0, 433.0], [805.0, 508.4285714285714], [804.0, 433.62500000000006], [802.0, 517.6666666666666], [801.0, 619.0], [815.0, 499.875], [800.0, 709.0], [803.0, 494.75], [814.0, 398.4], [813.0, 466.0], [811.0, 473.50000000000006], [810.0, 408.3333333333333], [809.0, 534.3333333333334], [808.0, 546.3333333333334], [812.0, 405.3333333333333], [828.0, 455.2], [830.0, 376.0], [823.0, 510.0], [822.0, 701.3333333333334], [820.0, 444.85714285714283], [818.0, 524.5], [819.0, 414.0], [817.0, 445.75], [816.0, 400.5], [831.0, 715.0], [826.0, 455.2], [824.0, 472.6666666666667], [829.0, 519.6], [827.0, 409.0], [860.0, 601.0], [836.0, 567.25], [844.0, 410.8], [845.0, 593.2], [847.0, 501.42857142857144], [832.0, 715.0], [846.0, 379.0], [843.0, 409.75], [842.0, 441.75], [841.0, 413.6842105263158], [840.0, 477.0], [839.0, 526.0], [856.0, 475.5], [859.0, 457.0], [858.0, 480.0], [861.0, 502.0], [863.0, 514.375], [862.0, 526.0], [851.0, 484.0], [850.0, 491.0], [849.0, 522.6666666666666], [848.0, 501.6], [853.0, 412.5], [855.0, 539.3333333333334], [854.0, 734.6666666666666], [852.0, 426.2], [838.0, 423.0], [837.0, 412.0], [835.0, 527.5], [834.0, 545.5], [868.0, 519.2], [865.0, 521.8], [866.0, 469.83333333333337], [864.0, 499.0], [872.0, 628.0], [873.0, 595.0], [876.0, 482.0], [875.0, 732.5], [874.0, 476.0], [878.0, 489.75], [877.0, 602.0], [879.0, 554.2], [871.0, 499.0], [890.0, 544.25], [889.0, 713.0], [891.0, 601.5], [888.0, 574.0], [880.0, 477.3333333333333], [895.0, 533.0], [893.0, 498.0], [894.0, 598.0], [884.0, 574.5], [882.0, 723.0], [881.0, 728.0], [886.0, 460.0], [887.0, 694.0], [885.0, 658.0], [892.0, 565.5], [870.0, 583.0], [867.0, 586.5], [869.0, 450.5], [899.0, 574.5555555555555], [901.0, 535.7142857142857], [900.0, 547.8888888888889], [902.0, 567.5], [903.0, 518.0], [920.0, 609.7142857142857], [922.0, 594.1818181818182], [921.0, 585.1000000000001], [924.0, 598.3999999999999], [927.0, 611.3333333333334], [926.0, 661.0], [925.0, 569.5], [923.0, 579.7777777777778], [897.0, 522.0], [898.0, 552.2222222222222], [896.0, 582.0], [913.0, 603.9166666666666], [915.0, 568.3125], [914.0, 574.4615384615383], [917.0, 605.0000000000001], [916.0, 582.8888888888889], [919.0, 580.3076923076924], [918.0, 584.4090909090908], [912.0, 571.578947368421], [911.0, 584.3749999999999], [910.0, 576.4117647058823], [909.0, 573.1538461538462], [908.0, 583.0769230769231], [906.0, 557.7333333333335], [907.0, 574.3636363636364], [905.0, 591.375], [904.0, 567.8181818181819], [934.0, 626.5], [929.0, 578.0], [932.0, 635.6666666666666], [933.0, 711.6666666666666], [959.0, 624.6999999999998], [944.0, 730.0], [947.0, 687.25], [946.0, 600.0], [950.0, 635.0], [951.0, 653.3333333333334], [948.0, 652.5], [958.0, 623.8], [956.0, 664.0], [955.0, 653.0], [957.0, 637.9999999999998], [954.0, 653.0], [952.0, 629.5], [953.0, 632.0], [931.0, 592.6666666666666], [928.0, 592.0], [943.0, 734.0], [942.0, 740.0], [930.0, 576.6666666666666], [941.0, 661.0], [940.0, 596.6666666666666], [939.0, 655.0], [938.0, 563.0], [937.0, 699.3333333333334], [936.0, 650.6], [974.0, 671.5], [976.0, 648.0], [960.0, 634.2], [967.0, 655.2222222222222], [966.0, 658.2222222222222], [965.0, 668.5714285714286], [964.0, 657.9000000000001], [963.0, 658.0], [961.0, 673.2], [962.0, 674.6666666666666], [977.0, 627.3333333333334], [973.0, 671.5454545454545], [972.0, 659.0], [971.0, 659.125], [970.0, 656.6666666666666], [969.0, 666.4], [968.0, 675.3333333333334], [979.0, 583.0], [978.0, 576.0], [975.0, 669.75], [1.0, 811.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[578.4916666666674, 480.18133333333384]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 6.1818181818181825], [3.0, 11.636363636363637], [4.0, 6.121212121212121], [5.0, 6.0277777777777795], [6.0, 6.382352941176472], [7.0, 11.914285714285716], [8.0, 9.095238095238095], [9.0, 11.285714285714286], [10.0, 18.076923076923073], [11.0, 12.277777777777777], [12.0, 20.06666666666667], [13.0, 19.941176470588232], [14.0, 18.94736842105263], [15.0, 31.428571428571423], [16.0, 26.545454545454543], [17.0, 27.0952380952381], [18.0, 23.857142857142854], [19.0, 31.25], [20.0, 24.708333333333336], [21.0, 25.166666666666668], [22.0, 24.285714285714285], [23.0, 24.187500000000004], [24.0, 29.599999999999994], [25.0, 27.909090909090903], [26.0, 35.74999999999999], [27.0, 38.0], [28.0, 35.96], [29.0, 37.879999999999995], [30.0, 36.31428571428572], [31.0, 35.76811594202898], [32.0, 36.244897959183646], [33.0, 37.529411764705884], [34.0, 36.62499999999999], [35.0, 37.37931034482759], [37.0, 37.28846153846153], [36.0, 37.86666666666667], [38.0, 39.41935483870969], [39.0, 40.98305084745763], [40.0, 40.22413793103448], [41.0, 42.43661971830985], [43.0, 41.702127659574465], [42.0, 40.809523809523796], [45.0, 43.44285714285713], [44.0, 42.49999999999999], [46.0, 42.22], [47.0, 40.82857142857143], [49.0, 42.31578947368421], [48.0, 42.07017543859648], [51.0, 43.04166666666668], [50.0, 41.3125], [53.0, 45.361702127659576], [52.0, 44.15151515151514], [54.0, 43.03636363636364], [55.0, 42.560975609756085], [56.0, 43.72], [57.0, 43.58823529411766], [59.0, 44.02127659574467], [58.0, 42.19512195121953], [60.0, 43.7857142857143], [61.0, 45.18918918918918], [63.0, 45.21052631578947], [62.0, 44.529411764705884], [67.0, 44.85], [66.0, 44.25], [65.0, 46.47058823529411], [64.0, 46.03846153846154], [70.0, 44.4], [68.0, 43.875], [71.0, 41.550000000000004], [69.0, 45.0], [74.0, 45.0], [72.0, 44.125], [75.0, 43.0], [73.0, 43.0], [78.0, 41.4], [76.0, 49.0], [77.0, 36.0], [82.0, 48.6], [80.0, 43.25], [83.0, 47.5], [84.0, 50.5], [229.0, 30.0], [225.0, 21.0], [283.0, 21.0], [296.0, 18.0], [294.0, 19.5], [359.0, 8.0], [380.0, 9.0], [372.0, 54.03636363636364], [382.0, 5.0], [378.0, 5.0], [379.0, 4.0], [373.0, 34.666666666666664], [381.0, 17.0], [370.0, 43.400000000000006], [375.0, 5.0], [374.0, 27.0], [371.0, 42.0], [383.0, 266.0], [397.0, 81.0], [399.0, 74.0], [392.0, 65.5], [396.0, 54.5], [394.0, 52.5], [393.0, 75.0], [390.0, 52.0], [386.0, 41.0], [385.0, 11.5], [384.0, 24.0], [388.0, 39.0], [387.0, 74.0], [395.0, 50.5], [398.0, 50.666666666666664], [403.0, 66.5], [414.0, 68.5], [415.0, 143.33333333333331], [413.0, 84.0], [410.0, 172.66666666666669], [411.0, 116.0], [407.0, 70.75], [400.0, 37.0], [404.0, 413.0], [406.0, 58.0], [405.0, 405.5], [401.0, 75.0], [402.0, 150.0], [426.0, 56.0], [428.0, 88.0], [431.0, 57.8], [425.0, 56.333333333333336], [423.0, 67.0], [422.0, 68.0], [420.0, 63.0], [418.0, 75.0], [416.0, 69.5], [438.0, 225.3695652173913], [437.0, 224.57345971563987], [436.0, 61.0], [435.0, 62.5], [434.0, 154.40000000000003], [432.0, 68.0], [1.0, 6.75]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[102.57400000000018, 56.127999999999965]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 979.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 18650.0, "minX": 1.66901736E12, "maxY": 39350.0, "series": [{"data": [[1.66901736E12, 18650.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66901736E12, 39350.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901736E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 55.82033333333328, "minX": 1.66901736E12, "maxY": 480.18133333333384, "series": [{"data": [[1.66901736E12, 55.82033333333328]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901736E12, 480.18133333333384]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901736E12, 56.127999999999965]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901736E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 55.81466666666676, "minX": 1.66901736E12, "maxY": 479.97733333333287, "series": [{"data": [[1.66901736E12, 55.81466666666676]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901736E12, 479.97733333333287]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901736E12, 56.092333333333414]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901736E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 8.155000000000003, "minX": 1.66901736E12, "maxY": 11.08033333333334, "series": [{"data": [[1.66901736E12, 8.155000000000003]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901736E12, 9.660666666666645]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901736E12, 11.08033333333334]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901736E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.66901736E12, "maxY": 886.0, "series": [{"data": [[1.66901736E12, 886.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66901736E12, 686.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66901736E12, 847.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66901736E12, 772.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66901736E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66901736E12, 59.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901736E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 34.0, "minX": 484.0, "maxY": 788.0, "series": [{"data": [[1080.0, 41.0], [1199.0, 53.0], [1195.0, 206.0], [1182.0, 621.0], [591.0, 788.0], [679.0, 34.0], [1605.0, 59.0], [484.0, 162.0], [985.0, 40.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1605.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 34.0, "minX": 484.0, "maxY": 788.0, "series": [{"data": [[1080.0, 41.0], [1199.0, 53.0], [1195.0, 205.0], [1182.0, 620.5], [591.0, 788.0], [679.0, 34.0], [1605.0, 59.0], [484.0, 162.0], [985.0, 40.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1605.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.66901736E12, "maxY": 150.0, "series": [{"data": [[1.66901736E12, 150.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901736E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.66901736E12, "maxY": 150.0, "series": [{"data": [[1.66901736E12, 150.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901736E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66901736E12, "maxY": 50.0, "series": [{"data": [[1.66901736E12, 50.0]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66901736E12, 50.0]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66901736E12, 50.0]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901736E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.66901736E12, "maxY": 150.0, "series": [{"data": [[1.66901736E12, 150.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901736E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

