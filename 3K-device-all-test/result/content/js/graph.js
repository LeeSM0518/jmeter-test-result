/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 1064.0, "series": [{"data": [[0.0, 18.0], [0.1, 22.0], [0.2, 24.0], [0.3, 25.0], [0.4, 26.0], [0.5, 27.0], [0.6, 27.0], [0.7, 28.0], [0.8, 28.0], [0.9, 28.0], [1.0, 28.0], [1.1, 28.0], [1.2, 29.0], [1.3, 29.0], [1.4, 29.0], [1.5, 29.0], [1.6, 30.0], [1.7, 30.0], [1.8, 30.0], [1.9, 30.0], [2.0, 31.0], [2.1, 31.0], [2.2, 31.0], [2.3, 32.0], [2.4, 32.0], [2.5, 32.0], [2.6, 32.0], [2.7, 32.0], [2.8, 33.0], [2.9, 33.0], [3.0, 33.0], [3.1, 33.0], [3.2, 33.0], [3.3, 33.0], [3.4, 34.0], [3.5, 34.0], [3.6, 34.0], [3.7, 34.0], [3.8, 34.0], [3.9, 34.0], [4.0, 34.0], [4.1, 34.0], [4.2, 35.0], [4.3, 35.0], [4.4, 35.0], [4.5, 35.0], [4.6, 35.0], [4.7, 35.0], [4.8, 35.0], [4.9, 35.0], [5.0, 35.0], [5.1, 35.0], [5.2, 36.0], [5.3, 36.0], [5.4, 36.0], [5.5, 36.0], [5.6, 36.0], [5.7, 36.0], [5.8, 36.0], [5.9, 36.0], [6.0, 37.0], [6.1, 37.0], [6.2, 37.0], [6.3, 37.0], [6.4, 37.0], [6.5, 37.0], [6.6, 37.0], [6.7, 37.0], [6.8, 38.0], [6.9, 38.0], [7.0, 38.0], [7.1, 38.0], [7.2, 38.0], [7.3, 38.0], [7.4, 38.0], [7.5, 38.0], [7.6, 38.0], [7.7, 38.0], [7.8, 39.0], [7.9, 39.0], [8.0, 39.0], [8.1, 39.0], [8.2, 39.0], [8.3, 39.0], [8.4, 39.0], [8.5, 39.0], [8.6, 39.0], [8.7, 39.0], [8.8, 40.0], [8.9, 40.0], [9.0, 40.0], [9.1, 40.0], [9.2, 40.0], [9.3, 40.0], [9.4, 40.0], [9.5, 40.0], [9.6, 40.0], [9.7, 41.0], [9.8, 41.0], [9.9, 41.0], [10.0, 41.0], [10.1, 41.0], [10.2, 41.0], [10.3, 41.0], [10.4, 41.0], [10.5, 42.0], [10.6, 42.0], [10.7, 42.0], [10.8, 42.0], [10.9, 42.0], [11.0, 42.0], [11.1, 42.0], [11.2, 42.0], [11.3, 42.0], [11.4, 42.0], [11.5, 42.0], [11.6, 42.0], [11.7, 42.0], [11.8, 43.0], [11.9, 43.0], [12.0, 43.0], [12.1, 43.0], [12.2, 43.0], [12.3, 43.0], [12.4, 43.0], [12.5, 43.0], [12.6, 43.0], [12.7, 43.0], [12.8, 43.0], [12.9, 43.0], [13.0, 43.0], [13.1, 43.0], [13.2, 43.0], [13.3, 43.0], [13.4, 44.0], [13.5, 44.0], [13.6, 44.0], [13.7, 44.0], [13.8, 44.0], [13.9, 44.0], [14.0, 44.0], [14.1, 44.0], [14.2, 44.0], [14.3, 44.0], [14.4, 44.0], [14.5, 44.0], [14.6, 44.0], [14.7, 44.0], [14.8, 44.0], [14.9, 44.0], [15.0, 44.0], [15.1, 45.0], [15.2, 45.0], [15.3, 45.0], [15.4, 45.0], [15.5, 45.0], [15.6, 45.0], [15.7, 45.0], [15.8, 45.0], [15.9, 45.0], [16.0, 45.0], [16.1, 45.0], [16.2, 45.0], [16.3, 45.0], [16.4, 45.0], [16.5, 45.0], [16.6, 45.0], [16.7, 46.0], [16.8, 46.0], [16.9, 46.0], [17.0, 46.0], [17.1, 46.0], [17.2, 46.0], [17.3, 46.0], [17.4, 46.0], [17.5, 46.0], [17.6, 46.0], [17.7, 46.0], [17.8, 46.0], [17.9, 46.0], [18.0, 46.0], [18.1, 47.0], [18.2, 47.0], [18.3, 47.0], [18.4, 47.0], [18.5, 47.0], [18.6, 47.0], [18.7, 47.0], [18.8, 47.0], [18.9, 47.0], [19.0, 47.0], [19.1, 47.0], [19.2, 47.0], [19.3, 47.0], [19.4, 47.0], [19.5, 47.0], [19.6, 47.0], [19.7, 47.0], [19.8, 47.0], [19.9, 47.0], [20.0, 47.0], [20.1, 47.0], [20.2, 47.0], [20.3, 47.0], [20.4, 47.0], [20.5, 47.0], [20.6, 47.0], [20.7, 48.0], [20.8, 48.0], [20.9, 48.0], [21.0, 48.0], [21.1, 48.0], [21.2, 48.0], [21.3, 48.0], [21.4, 48.0], [21.5, 48.0], [21.6, 48.0], [21.7, 48.0], [21.8, 48.0], [21.9, 48.0], [22.0, 48.0], [22.1, 48.0], [22.2, 48.0], [22.3, 48.0], [22.4, 48.0], [22.5, 48.0], [22.6, 48.0], [22.7, 48.0], [22.8, 48.0], [22.9, 48.0], [23.0, 48.0], [23.1, 49.0], [23.2, 49.0], [23.3, 49.0], [23.4, 49.0], [23.5, 49.0], [23.6, 49.0], [23.7, 49.0], [23.8, 49.0], [23.9, 49.0], [24.0, 49.0], [24.1, 49.0], [24.2, 49.0], [24.3, 49.0], [24.4, 49.0], [24.5, 49.0], [24.6, 49.0], [24.7, 49.0], [24.8, 49.0], [24.9, 49.0], [25.0, 49.0], [25.1, 49.0], [25.2, 49.0], [25.3, 49.0], [25.4, 49.0], [25.5, 49.0], [25.6, 50.0], [25.7, 50.0], [25.8, 50.0], [25.9, 50.0], [26.0, 50.0], [26.1, 50.0], [26.2, 50.0], [26.3, 50.0], [26.4, 50.0], [26.5, 50.0], [26.6, 50.0], [26.7, 50.0], [26.8, 50.0], [26.9, 50.0], [27.0, 50.0], [27.1, 50.0], [27.2, 50.0], [27.3, 50.0], [27.4, 50.0], [27.5, 50.0], [27.6, 50.0], [27.7, 50.0], [27.8, 50.0], [27.9, 50.0], [28.0, 50.0], [28.1, 50.0], [28.2, 50.0], [28.3, 51.0], [28.4, 51.0], [28.5, 51.0], [28.6, 51.0], [28.7, 51.0], [28.8, 51.0], [28.9, 51.0], [29.0, 51.0], [29.1, 51.0], [29.2, 51.0], [29.3, 51.0], [29.4, 51.0], [29.5, 51.0], [29.6, 51.0], [29.7, 51.0], [29.8, 51.0], [29.9, 51.0], [30.0, 51.0], [30.1, 51.0], [30.2, 51.0], [30.3, 51.0], [30.4, 51.0], [30.5, 51.0], [30.6, 51.0], [30.7, 51.0], [30.8, 51.0], [30.9, 51.0], [31.0, 52.0], [31.1, 52.0], [31.2, 52.0], [31.3, 52.0], [31.4, 52.0], [31.5, 52.0], [31.6, 52.0], [31.7, 52.0], [31.8, 52.0], [31.9, 52.0], [32.0, 52.0], [32.1, 52.0], [32.2, 52.0], [32.3, 52.0], [32.4, 52.0], [32.5, 52.0], [32.6, 52.0], [32.7, 52.0], [32.8, 52.0], [32.9, 52.0], [33.0, 52.0], [33.1, 52.0], [33.2, 53.0], [33.3, 53.0], [33.4, 53.0], [33.5, 53.0], [33.6, 53.0], [33.7, 53.0], [33.8, 53.0], [33.9, 53.0], [34.0, 53.0], [34.1, 53.0], [34.2, 53.0], [34.3, 53.0], [34.4, 53.0], [34.5, 53.0], [34.6, 53.0], [34.7, 53.0], [34.8, 53.0], [34.9, 53.0], [35.0, 53.0], [35.1, 53.0], [35.2, 53.0], [35.3, 53.0], [35.4, 53.0], [35.5, 53.0], [35.6, 54.0], [35.7, 54.0], [35.8, 54.0], [35.9, 54.0], [36.0, 54.0], [36.1, 54.0], [36.2, 54.0], [36.3, 54.0], [36.4, 54.0], [36.5, 54.0], [36.6, 54.0], [36.7, 54.0], [36.8, 54.0], [36.9, 54.0], [37.0, 54.0], [37.1, 54.0], [37.2, 54.0], [37.3, 54.0], [37.4, 54.0], [37.5, 54.0], [37.6, 54.0], [37.7, 54.0], [37.8, 54.0], [37.9, 54.0], [38.0, 54.0], [38.1, 54.0], [38.2, 55.0], [38.3, 55.0], [38.4, 55.0], [38.5, 55.0], [38.6, 55.0], [38.7, 55.0], [38.8, 55.0], [38.9, 55.0], [39.0, 55.0], [39.1, 55.0], [39.2, 55.0], [39.3, 55.0], [39.4, 55.0], [39.5, 55.0], [39.6, 55.0], [39.7, 55.0], [39.8, 55.0], [39.9, 55.0], [40.0, 55.0], [40.1, 55.0], [40.2, 55.0], [40.3, 55.0], [40.4, 55.0], [40.5, 55.0], [40.6, 55.0], [40.7, 55.0], [40.8, 55.0], [40.9, 55.0], [41.0, 56.0], [41.1, 56.0], [41.2, 56.0], [41.3, 56.0], [41.4, 56.0], [41.5, 56.0], [41.6, 56.0], [41.7, 56.0], [41.8, 56.0], [41.9, 56.0], [42.0, 56.0], [42.1, 56.0], [42.2, 56.0], [42.3, 56.0], [42.4, 56.0], [42.5, 56.0], [42.6, 56.0], [42.7, 56.0], [42.8, 56.0], [42.9, 56.0], [43.0, 56.0], [43.1, 56.0], [43.2, 56.0], [43.3, 56.0], [43.4, 56.0], [43.5, 57.0], [43.6, 57.0], [43.7, 57.0], [43.8, 57.0], [43.9, 57.0], [44.0, 57.0], [44.1, 57.0], [44.2, 57.0], [44.3, 57.0], [44.4, 57.0], [44.5, 57.0], [44.6, 57.0], [44.7, 57.0], [44.8, 57.0], [44.9, 57.0], [45.0, 57.0], [45.1, 57.0], [45.2, 57.0], [45.3, 57.0], [45.4, 57.0], [45.5, 57.0], [45.6, 58.0], [45.7, 58.0], [45.8, 58.0], [45.9, 58.0], [46.0, 58.0], [46.1, 58.0], [46.2, 58.0], [46.3, 58.0], [46.4, 58.0], [46.5, 58.0], [46.6, 58.0], [46.7, 58.0], [46.8, 58.0], [46.9, 58.0], [47.0, 58.0], [47.1, 58.0], [47.2, 59.0], [47.3, 59.0], [47.4, 59.0], [47.5, 59.0], [47.6, 59.0], [47.7, 59.0], [47.8, 59.0], [47.9, 59.0], [48.0, 59.0], [48.1, 59.0], [48.2, 59.0], [48.3, 59.0], [48.4, 59.0], [48.5, 59.0], [48.6, 59.0], [48.7, 59.0], [48.8, 60.0], [48.9, 60.0], [49.0, 60.0], [49.1, 60.0], [49.2, 60.0], [49.3, 60.0], [49.4, 60.0], [49.5, 60.0], [49.6, 60.0], [49.7, 60.0], [49.8, 60.0], [49.9, 60.0], [50.0, 60.0], [50.1, 60.0], [50.2, 60.0], [50.3, 61.0], [50.4, 61.0], [50.5, 61.0], [50.6, 61.0], [50.7, 61.0], [50.8, 61.0], [50.9, 61.0], [51.0, 61.0], [51.1, 61.0], [51.2, 61.0], [51.3, 61.0], [51.4, 61.0], [51.5, 61.0], [51.6, 61.0], [51.7, 61.0], [51.8, 61.0], [51.9, 61.0], [52.0, 61.0], [52.1, 62.0], [52.2, 62.0], [52.3, 62.0], [52.4, 62.0], [52.5, 62.0], [52.6, 62.0], [52.7, 62.0], [52.8, 62.0], [52.9, 62.0], [53.0, 62.0], [53.1, 62.0], [53.2, 62.0], [53.3, 62.0], [53.4, 62.0], [53.5, 62.0], [53.6, 63.0], [53.7, 63.0], [53.8, 63.0], [53.9, 63.0], [54.0, 63.0], [54.1, 63.0], [54.2, 63.0], [54.3, 63.0], [54.4, 63.0], [54.5, 63.0], [54.6, 63.0], [54.7, 63.0], [54.8, 63.0], [54.9, 63.0], [55.0, 63.0], [55.1, 64.0], [55.2, 64.0], [55.3, 64.0], [55.4, 64.0], [55.5, 64.0], [55.6, 64.0], [55.7, 64.0], [55.8, 64.0], [55.9, 64.0], [56.0, 64.0], [56.1, 64.0], [56.2, 64.0], [56.3, 64.0], [56.4, 65.0], [56.5, 65.0], [56.6, 65.0], [56.7, 65.0], [56.8, 65.0], [56.9, 65.0], [57.0, 65.0], [57.1, 65.0], [57.2, 65.0], [57.3, 65.0], [57.4, 65.0], [57.5, 65.0], [57.6, 66.0], [57.7, 66.0], [57.8, 66.0], [57.9, 66.0], [58.0, 66.0], [58.1, 66.0], [58.2, 66.0], [58.3, 66.0], [58.4, 66.0], [58.5, 66.0], [58.6, 66.0], [58.7, 67.0], [58.8, 67.0], [58.9, 67.0], [59.0, 67.0], [59.1, 67.0], [59.2, 67.0], [59.3, 67.0], [59.4, 67.0], [59.5, 67.0], [59.6, 67.0], [59.7, 68.0], [59.8, 68.0], [59.9, 68.0], [60.0, 68.0], [60.1, 68.0], [60.2, 68.0], [60.3, 68.0], [60.4, 68.0], [60.5, 68.0], [60.6, 68.0], [60.7, 69.0], [60.8, 69.0], [60.9, 69.0], [61.0, 69.0], [61.1, 69.0], [61.2, 69.0], [61.3, 69.0], [61.4, 69.0], [61.5, 69.0], [61.6, 69.0], [61.7, 69.0], [61.8, 70.0], [61.9, 70.0], [62.0, 70.0], [62.1, 70.0], [62.2, 70.0], [62.3, 70.0], [62.4, 70.0], [62.5, 70.0], [62.6, 71.0], [62.7, 71.0], [62.8, 71.0], [62.9, 71.0], [63.0, 71.0], [63.1, 71.0], [63.2, 71.0], [63.3, 71.0], [63.4, 71.0], [63.5, 72.0], [63.6, 72.0], [63.7, 72.0], [63.8, 72.0], [63.9, 72.0], [64.0, 72.0], [64.1, 73.0], [64.2, 73.0], [64.3, 73.0], [64.4, 73.0], [64.5, 74.0], [64.6, 74.0], [64.7, 75.0], [64.8, 75.0], [64.9, 76.0], [65.0, 76.0], [65.1, 76.0], [65.2, 76.0], [65.3, 76.0], [65.4, 77.0], [65.5, 78.0], [65.6, 78.0], [65.7, 78.0], [65.8, 78.0], [65.9, 79.0], [66.0, 79.0], [66.1, 79.0], [66.2, 79.0], [66.3, 80.0], [66.4, 80.0], [66.5, 81.0], [66.6, 81.0], [66.7, 82.0], [66.8, 82.0], [66.9, 82.0], [67.0, 83.0], [67.1, 83.0], [67.2, 85.0], [67.3, 86.0], [67.4, 86.0], [67.5, 87.0], [67.6, 89.0], [67.7, 89.0], [67.8, 90.0], [67.9, 91.0], [68.0, 93.0], [68.1, 100.0], [68.2, 104.0], [68.3, 109.0], [68.4, 112.0], [68.5, 114.0], [68.6, 116.0], [68.7, 117.0], [68.8, 118.0], [68.9, 121.0], [69.0, 127.0], [69.1, 133.0], [69.2, 135.0], [69.3, 138.0], [69.4, 140.0], [69.5, 141.0], [69.6, 146.0], [69.7, 149.0], [69.8, 152.0], [69.9, 153.0], [70.0, 157.0], [70.1, 163.0], [70.2, 165.0], [70.3, 172.0], [70.4, 172.0], [70.5, 175.0], [70.6, 175.0], [70.7, 177.0], [70.8, 180.0], [70.9, 181.0], [71.0, 181.0], [71.1, 182.0], [71.2, 184.0], [71.3, 185.0], [71.4, 187.0], [71.5, 188.0], [71.6, 189.0], [71.7, 190.0], [71.8, 193.0], [71.9, 194.0], [72.0, 198.0], [72.1, 200.0], [72.2, 201.0], [72.3, 203.0], [72.4, 205.0], [72.5, 207.0], [72.6, 209.0], [72.7, 211.0], [72.8, 215.0], [72.9, 215.0], [73.0, 216.0], [73.1, 217.0], [73.2, 219.0], [73.3, 219.0], [73.4, 220.0], [73.5, 222.0], [73.6, 225.0], [73.7, 227.0], [73.8, 229.0], [73.9, 231.0], [74.0, 232.0], [74.1, 233.0], [74.2, 235.0], [74.3, 236.0], [74.4, 237.0], [74.5, 237.0], [74.6, 238.0], [74.7, 238.0], [74.8, 240.0], [74.9, 240.0], [75.0, 241.0], [75.1, 241.0], [75.2, 244.0], [75.3, 244.0], [75.4, 245.0], [75.5, 246.0], [75.6, 248.0], [75.7, 249.0], [75.8, 250.0], [75.9, 252.0], [76.0, 253.0], [76.1, 254.0], [76.2, 255.0], [76.3, 256.0], [76.4, 259.0], [76.5, 261.0], [76.6, 262.0], [76.7, 263.0], [76.8, 265.0], [76.9, 268.0], [77.0, 268.0], [77.1, 271.0], [77.2, 272.0], [77.3, 273.0], [77.4, 275.0], [77.5, 276.0], [77.6, 278.0], [77.7, 280.0], [77.8, 282.0], [77.9, 284.0], [78.0, 285.0], [78.1, 287.0], [78.2, 289.0], [78.3, 290.0], [78.4, 291.0], [78.5, 291.0], [78.6, 293.0], [78.7, 294.0], [78.8, 295.0], [78.9, 297.0], [79.0, 298.0], [79.1, 299.0], [79.2, 299.0], [79.3, 300.0], [79.4, 301.0], [79.5, 304.0], [79.6, 307.0], [79.7, 308.0], [79.8, 310.0], [79.9, 312.0], [80.0, 314.0], [80.1, 314.0], [80.2, 315.0], [80.3, 316.0], [80.4, 317.0], [80.5, 317.0], [80.6, 318.0], [80.7, 319.0], [80.8, 320.0], [80.9, 321.0], [81.0, 322.0], [81.1, 324.0], [81.2, 326.0], [81.3, 327.0], [81.4, 329.0], [81.5, 330.0], [81.6, 332.0], [81.7, 334.0], [81.8, 334.0], [81.9, 335.0], [82.0, 336.0], [82.1, 339.0], [82.2, 339.0], [82.3, 339.0], [82.4, 340.0], [82.5, 342.0], [82.6, 342.0], [82.7, 344.0], [82.8, 345.0], [82.9, 347.0], [83.0, 348.0], [83.1, 348.0], [83.2, 351.0], [83.3, 352.0], [83.4, 352.0], [83.5, 353.0], [83.6, 355.0], [83.7, 358.0], [83.8, 359.0], [83.9, 360.0], [84.0, 363.0], [84.1, 363.0], [84.2, 364.0], [84.3, 365.0], [84.4, 366.0], [84.5, 367.0], [84.6, 369.0], [84.7, 371.0], [84.8, 372.0], [84.9, 374.0], [85.0, 374.0], [85.1, 376.0], [85.2, 377.0], [85.3, 379.0], [85.4, 379.0], [85.5, 381.0], [85.6, 382.0], [85.7, 383.0], [85.8, 384.0], [85.9, 385.0], [86.0, 386.0], [86.1, 387.0], [86.2, 389.0], [86.3, 391.0], [86.4, 391.0], [86.5, 393.0], [86.6, 395.0], [86.7, 397.0], [86.8, 398.0], [86.9, 399.0], [87.0, 402.0], [87.1, 403.0], [87.2, 407.0], [87.3, 408.0], [87.4, 408.0], [87.5, 408.0], [87.6, 410.0], [87.7, 412.0], [87.8, 413.0], [87.9, 415.0], [88.0, 415.0], [88.1, 416.0], [88.2, 417.0], [88.3, 418.0], [88.4, 419.0], [88.5, 421.0], [88.6, 422.0], [88.7, 422.0], [88.8, 423.0], [88.9, 424.0], [89.0, 425.0], [89.1, 426.0], [89.2, 429.0], [89.3, 430.0], [89.4, 431.0], [89.5, 433.0], [89.6, 433.0], [89.7, 435.0], [89.8, 436.0], [89.9, 437.0], [90.0, 438.0], [90.1, 440.0], [90.2, 441.0], [90.3, 441.0], [90.4, 443.0], [90.5, 445.0], [90.6, 446.0], [90.7, 447.0], [90.8, 447.0], [90.9, 449.0], [91.0, 450.0], [91.1, 452.0], [91.2, 453.0], [91.3, 453.0], [91.4, 456.0], [91.5, 457.0], [91.6, 458.0], [91.7, 459.0], [91.8, 461.0], [91.9, 463.0], [92.0, 463.0], [92.1, 465.0], [92.2, 467.0], [92.3, 468.0], [92.4, 468.0], [92.5, 469.0], [92.6, 470.0], [92.7, 470.0], [92.8, 471.0], [92.9, 472.0], [93.0, 472.0], [93.1, 475.0], [93.2, 477.0], [93.3, 477.0], [93.4, 478.0], [93.5, 479.0], [93.6, 481.0], [93.7, 482.0], [93.8, 483.0], [93.9, 483.0], [94.0, 484.0], [94.1, 486.0], [94.2, 487.0], [94.3, 488.0], [94.4, 489.0], [94.5, 490.0], [94.6, 492.0], [94.7, 493.0], [94.8, 495.0], [94.9, 495.0], [95.0, 497.0], [95.1, 498.0], [95.2, 499.0], [95.3, 500.0], [95.4, 502.0], [95.5, 502.0], [95.6, 504.0], [95.7, 505.0], [95.8, 506.0], [95.9, 507.0], [96.0, 509.0], [96.1, 510.0], [96.2, 511.0], [96.3, 513.0], [96.4, 514.0], [96.5, 515.0], [96.6, 517.0], [96.7, 520.0], [96.8, 521.0], [96.9, 523.0], [97.0, 524.0], [97.1, 525.0], [97.2, 526.0], [97.3, 527.0], [97.4, 530.0], [97.5, 531.0], [97.6, 533.0], [97.7, 535.0], [97.8, 536.0], [97.9, 537.0], [98.0, 542.0], [98.1, 543.0], [98.2, 549.0], [98.3, 549.0], [98.4, 551.0], [98.5, 554.0], [98.6, 559.0], [98.7, 565.0], [98.8, 580.0], [98.9, 582.0], [99.0, 585.0], [99.1, 592.0], [99.2, 598.0], [99.3, 601.0], [99.4, 606.0], [99.5, 618.0], [99.6, 623.0], [99.7, 652.0], [99.8, 671.0], [99.9, 710.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 14.0], [0.1, 20.0], [0.2, 21.0], [0.3, 311.0], [0.4, 315.0], [0.5, 317.0], [0.6, 320.0], [0.7, 324.0], [0.8, 328.0], [0.9, 335.0], [1.0, 348.0], [1.1, 351.0], [1.2, 361.0], [1.3, 367.0], [1.4, 371.0], [1.5, 373.0], [1.6, 375.0], [1.7, 377.0], [1.8, 378.0], [1.9, 380.0], [2.0, 381.0], [2.1, 381.0], [2.2, 383.0], [2.3, 385.0], [2.4, 385.0], [2.5, 386.0], [2.6, 388.0], [2.7, 390.0], [2.8, 391.0], [2.9, 392.0], [3.0, 394.0], [3.1, 395.0], [3.2, 396.0], [3.3, 396.0], [3.4, 397.0], [3.5, 398.0], [3.6, 399.0], [3.7, 400.0], [3.8, 403.0], [3.9, 404.0], [4.0, 405.0], [4.1, 405.0], [4.2, 405.0], [4.3, 406.0], [4.4, 407.0], [4.5, 408.0], [4.6, 411.0], [4.7, 412.0], [4.8, 412.0], [4.9, 413.0], [5.0, 413.0], [5.1, 416.0], [5.2, 416.0], [5.3, 417.0], [5.4, 419.0], [5.5, 419.0], [5.6, 420.0], [5.7, 422.0], [5.8, 425.0], [5.9, 425.0], [6.0, 429.0], [6.1, 431.0], [6.2, 433.0], [6.3, 435.0], [6.4, 435.0], [6.5, 436.0], [6.6, 438.0], [6.7, 439.0], [6.8, 442.0], [6.9, 443.0], [7.0, 445.0], [7.1, 445.0], [7.2, 447.0], [7.3, 449.0], [7.4, 450.0], [7.5, 451.0], [7.6, 452.0], [7.7, 454.0], [7.8, 455.0], [7.9, 456.0], [8.0, 458.0], [8.1, 459.0], [8.2, 460.0], [8.3, 460.0], [8.4, 461.0], [8.5, 463.0], [8.6, 464.0], [8.7, 465.0], [8.8, 466.0], [8.9, 467.0], [9.0, 468.0], [9.1, 469.0], [9.2, 470.0], [9.3, 473.0], [9.4, 474.0], [9.5, 476.0], [9.6, 477.0], [9.7, 478.0], [9.8, 480.0], [9.9, 481.0], [10.0, 481.0], [10.1, 483.0], [10.2, 484.0], [10.3, 485.0], [10.4, 485.0], [10.5, 486.0], [10.6, 487.0], [10.7, 488.0], [10.8, 489.0], [10.9, 490.0], [11.0, 492.0], [11.1, 493.0], [11.2, 493.0], [11.3, 494.0], [11.4, 495.0], [11.5, 495.0], [11.6, 496.0], [11.7, 497.0], [11.8, 498.0], [11.9, 498.0], [12.0, 500.0], [12.1, 501.0], [12.2, 501.0], [12.3, 502.0], [12.4, 503.0], [12.5, 503.0], [12.6, 505.0], [12.7, 505.0], [12.8, 506.0], [12.9, 508.0], [13.0, 508.0], [13.1, 509.0], [13.2, 509.0], [13.3, 510.0], [13.4, 511.0], [13.5, 512.0], [13.6, 512.0], [13.7, 512.0], [13.8, 513.0], [13.9, 513.0], [14.0, 514.0], [14.1, 516.0], [14.2, 516.0], [14.3, 517.0], [14.4, 518.0], [14.5, 519.0], [14.6, 519.0], [14.7, 519.0], [14.8, 520.0], [14.9, 520.0], [15.0, 522.0], [15.1, 522.0], [15.2, 523.0], [15.3, 523.0], [15.4, 523.0], [15.5, 524.0], [15.6, 525.0], [15.7, 526.0], [15.8, 527.0], [15.9, 527.0], [16.0, 528.0], [16.1, 529.0], [16.2, 530.0], [16.3, 531.0], [16.4, 531.0], [16.5, 531.0], [16.6, 532.0], [16.7, 533.0], [16.8, 533.0], [16.9, 534.0], [17.0, 535.0], [17.1, 535.0], [17.2, 535.0], [17.3, 536.0], [17.4, 536.0], [17.5, 537.0], [17.6, 537.0], [17.7, 538.0], [17.8, 539.0], [17.9, 539.0], [18.0, 540.0], [18.1, 540.0], [18.2, 541.0], [18.3, 542.0], [18.4, 542.0], [18.5, 543.0], [18.6, 544.0], [18.7, 545.0], [18.8, 545.0], [18.9, 547.0], [19.0, 547.0], [19.1, 548.0], [19.2, 550.0], [19.3, 551.0], [19.4, 551.0], [19.5, 553.0], [19.6, 554.0], [19.7, 555.0], [19.8, 557.0], [19.9, 558.0], [20.0, 559.0], [20.1, 560.0], [20.2, 563.0], [20.3, 563.0], [20.4, 567.0], [20.5, 570.0], [20.6, 573.0], [20.7, 576.0], [20.8, 578.0], [20.9, 581.0], [21.0, 583.0], [21.1, 586.0], [21.2, 587.0], [21.3, 588.0], [21.4, 589.0], [21.5, 589.0], [21.6, 590.0], [21.7, 591.0], [21.8, 591.0], [21.9, 592.0], [22.0, 592.0], [22.1, 592.0], [22.2, 593.0], [22.3, 593.0], [22.4, 596.0], [22.5, 598.0], [22.6, 599.0], [22.7, 600.0], [22.8, 602.0], [22.9, 603.0], [23.0, 605.0], [23.1, 607.0], [23.2, 608.0], [23.3, 608.0], [23.4, 609.0], [23.5, 611.0], [23.6, 611.0], [23.7, 613.0], [23.8, 614.0], [23.9, 614.0], [24.0, 615.0], [24.1, 615.0], [24.2, 616.0], [24.3, 616.0], [24.4, 617.0], [24.5, 617.0], [24.6, 618.0], [24.7, 619.0], [24.8, 620.0], [24.9, 620.0], [25.0, 621.0], [25.1, 622.0], [25.2, 622.0], [25.3, 622.0], [25.4, 623.0], [25.5, 623.0], [25.6, 623.0], [25.7, 623.0], [25.8, 624.0], [25.9, 624.0], [26.0, 624.0], [26.1, 624.0], [26.2, 626.0], [26.3, 626.0], [26.4, 626.0], [26.5, 627.0], [26.6, 627.0], [26.7, 627.0], [26.8, 628.0], [26.9, 628.0], [27.0, 629.0], [27.1, 630.0], [27.2, 630.0], [27.3, 631.0], [27.4, 631.0], [27.5, 632.0], [27.6, 633.0], [27.7, 633.0], [27.8, 633.0], [27.9, 634.0], [28.0, 634.0], [28.1, 634.0], [28.2, 635.0], [28.3, 636.0], [28.4, 637.0], [28.5, 638.0], [28.6, 638.0], [28.7, 639.0], [28.8, 639.0], [28.9, 639.0], [29.0, 640.0], [29.1, 640.0], [29.2, 641.0], [29.3, 641.0], [29.4, 642.0], [29.5, 642.0], [29.6, 642.0], [29.7, 643.0], [29.8, 643.0], [29.9, 644.0], [30.0, 644.0], [30.1, 645.0], [30.2, 645.0], [30.3, 646.0], [30.4, 646.0], [30.5, 646.0], [30.6, 647.0], [30.7, 647.0], [30.8, 647.0], [30.9, 647.0], [31.0, 647.0], [31.1, 648.0], [31.2, 648.0], [31.3, 649.0], [31.4, 650.0], [31.5, 651.0], [31.6, 651.0], [31.7, 651.0], [31.8, 652.0], [31.9, 652.0], [32.0, 652.0], [32.1, 653.0], [32.2, 654.0], [32.3, 655.0], [32.4, 655.0], [32.5, 656.0], [32.6, 656.0], [32.7, 657.0], [32.8, 657.0], [32.9, 658.0], [33.0, 658.0], [33.1, 659.0], [33.2, 659.0], [33.3, 659.0], [33.4, 660.0], [33.5, 660.0], [33.6, 661.0], [33.7, 661.0], [33.8, 662.0], [33.9, 663.0], [34.0, 663.0], [34.1, 664.0], [34.2, 664.0], [34.3, 664.0], [34.4, 665.0], [34.5, 665.0], [34.6, 666.0], [34.7, 667.0], [34.8, 667.0], [34.9, 668.0], [35.0, 668.0], [35.1, 669.0], [35.2, 670.0], [35.3, 671.0], [35.4, 671.0], [35.5, 671.0], [35.6, 672.0], [35.7, 673.0], [35.8, 673.0], [35.9, 675.0], [36.0, 676.0], [36.1, 677.0], [36.2, 678.0], [36.3, 679.0], [36.4, 680.0], [36.5, 680.0], [36.6, 681.0], [36.7, 682.0], [36.8, 682.0], [36.9, 683.0], [37.0, 684.0], [37.1, 685.0], [37.2, 686.0], [37.3, 687.0], [37.4, 687.0], [37.5, 688.0], [37.6, 689.0], [37.7, 690.0], [37.8, 690.0], [37.9, 691.0], [38.0, 691.0], [38.1, 692.0], [38.2, 693.0], [38.3, 694.0], [38.4, 695.0], [38.5, 695.0], [38.6, 696.0], [38.7, 696.0], [38.8, 696.0], [38.9, 697.0], [39.0, 697.0], [39.1, 697.0], [39.2, 698.0], [39.3, 699.0], [39.4, 699.0], [39.5, 700.0], [39.6, 700.0], [39.7, 701.0], [39.8, 701.0], [39.9, 702.0], [40.0, 702.0], [40.1, 702.0], [40.2, 703.0], [40.3, 704.0], [40.4, 704.0], [40.5, 705.0], [40.6, 705.0], [40.7, 705.0], [40.8, 706.0], [40.9, 707.0], [41.0, 707.0], [41.1, 707.0], [41.2, 709.0], [41.3, 709.0], [41.4, 710.0], [41.5, 712.0], [41.6, 712.0], [41.7, 713.0], [41.8, 713.0], [41.9, 713.0], [42.0, 715.0], [42.1, 716.0], [42.2, 717.0], [42.3, 717.0], [42.4, 718.0], [42.5, 719.0], [42.6, 721.0], [42.7, 722.0], [42.8, 723.0], [42.9, 724.0], [43.0, 725.0], [43.1, 727.0], [43.2, 728.0], [43.3, 729.0], [43.4, 730.0], [43.5, 731.0], [43.6, 733.0], [43.7, 734.0], [43.8, 736.0], [43.9, 736.0], [44.0, 737.0], [44.1, 738.0], [44.2, 740.0], [44.3, 740.0], [44.4, 742.0], [44.5, 743.0], [44.6, 749.0], [44.7, 751.0], [44.8, 753.0], [44.9, 760.0], [45.0, 764.0], [45.1, 764.0], [45.2, 767.0], [45.3, 770.0], [45.4, 771.0], [45.5, 773.0], [45.6, 774.0], [45.7, 779.0], [45.8, 781.0], [45.9, 782.0], [46.0, 785.0], [46.1, 786.0], [46.2, 786.0], [46.3, 788.0], [46.4, 788.0], [46.5, 790.0], [46.6, 790.0], [46.7, 792.0], [46.8, 793.0], [46.9, 795.0], [47.0, 796.0], [47.1, 797.0], [47.2, 797.0], [47.3, 798.0], [47.4, 798.0], [47.5, 800.0], [47.6, 801.0], [47.7, 802.0], [47.8, 802.0], [47.9, 802.0], [48.0, 803.0], [48.1, 803.0], [48.2, 804.0], [48.3, 805.0], [48.4, 805.0], [48.5, 807.0], [48.6, 808.0], [48.7, 809.0], [48.8, 810.0], [48.9, 810.0], [49.0, 811.0], [49.1, 811.0], [49.2, 812.0], [49.3, 812.0], [49.4, 813.0], [49.5, 813.0], [49.6, 814.0], [49.7, 814.0], [49.8, 815.0], [49.9, 816.0], [50.0, 816.0], [50.1, 817.0], [50.2, 818.0], [50.3, 818.0], [50.4, 818.0], [50.5, 819.0], [50.6, 820.0], [50.7, 821.0], [50.8, 821.0], [50.9, 821.0], [51.0, 822.0], [51.1, 822.0], [51.2, 822.0], [51.3, 823.0], [51.4, 824.0], [51.5, 824.0], [51.6, 825.0], [51.7, 826.0], [51.8, 826.0], [51.9, 826.0], [52.0, 827.0], [52.1, 827.0], [52.2, 828.0], [52.3, 828.0], [52.4, 829.0], [52.5, 829.0], [52.6, 830.0], [52.7, 830.0], [52.8, 830.0], [52.9, 831.0], [53.0, 831.0], [53.1, 832.0], [53.2, 832.0], [53.3, 832.0], [53.4, 833.0], [53.5, 833.0], [53.6, 833.0], [53.7, 834.0], [53.8, 834.0], [53.9, 835.0], [54.0, 835.0], [54.1, 836.0], [54.2, 836.0], [54.3, 836.0], [54.4, 836.0], [54.5, 837.0], [54.6, 838.0], [54.7, 838.0], [54.8, 838.0], [54.9, 838.0], [55.0, 839.0], [55.1, 839.0], [55.2, 839.0], [55.3, 840.0], [55.4, 840.0], [55.5, 840.0], [55.6, 840.0], [55.7, 841.0], [55.8, 841.0], [55.9, 841.0], [56.0, 842.0], [56.1, 842.0], [56.2, 842.0], [56.3, 842.0], [56.4, 843.0], [56.5, 843.0], [56.6, 843.0], [56.7, 844.0], [56.8, 844.0], [56.9, 844.0], [57.0, 845.0], [57.1, 845.0], [57.2, 845.0], [57.3, 845.0], [57.4, 846.0], [57.5, 846.0], [57.6, 847.0], [57.7, 847.0], [57.8, 847.0], [57.9, 847.0], [58.0, 848.0], [58.1, 848.0], [58.2, 848.0], [58.3, 849.0], [58.4, 849.0], [58.5, 849.0], [58.6, 849.0], [58.7, 849.0], [58.8, 849.0], [58.9, 850.0], [59.0, 850.0], [59.1, 850.0], [59.2, 851.0], [59.3, 851.0], [59.4, 851.0], [59.5, 852.0], [59.6, 852.0], [59.7, 852.0], [59.8, 853.0], [59.9, 853.0], [60.0, 853.0], [60.1, 854.0], [60.2, 854.0], [60.3, 854.0], [60.4, 855.0], [60.5, 855.0], [60.6, 855.0], [60.7, 855.0], [60.8, 856.0], [60.9, 856.0], [61.0, 856.0], [61.1, 856.0], [61.2, 856.0], [61.3, 856.0], [61.4, 857.0], [61.5, 857.0], [61.6, 857.0], [61.7, 858.0], [61.8, 858.0], [61.9, 858.0], [62.0, 859.0], [62.1, 859.0], [62.2, 859.0], [62.3, 860.0], [62.4, 860.0], [62.5, 860.0], [62.6, 860.0], [62.7, 860.0], [62.8, 861.0], [62.9, 861.0], [63.0, 861.0], [63.1, 861.0], [63.2, 861.0], [63.3, 862.0], [63.4, 863.0], [63.5, 863.0], [63.6, 863.0], [63.7, 864.0], [63.8, 864.0], [63.9, 864.0], [64.0, 864.0], [64.1, 865.0], [64.2, 865.0], [64.3, 866.0], [64.4, 866.0], [64.5, 867.0], [64.6, 867.0], [64.7, 867.0], [64.8, 867.0], [64.9, 868.0], [65.0, 868.0], [65.1, 868.0], [65.2, 869.0], [65.3, 869.0], [65.4, 870.0], [65.5, 870.0], [65.6, 871.0], [65.7, 871.0], [65.8, 872.0], [65.9, 873.0], [66.0, 873.0], [66.1, 873.0], [66.2, 874.0], [66.3, 874.0], [66.4, 875.0], [66.5, 876.0], [66.6, 876.0], [66.7, 877.0], [66.8, 877.0], [66.9, 877.0], [67.0, 878.0], [67.1, 879.0], [67.2, 879.0], [67.3, 880.0], [67.4, 880.0], [67.5, 880.0], [67.6, 881.0], [67.7, 881.0], [67.8, 881.0], [67.9, 881.0], [68.0, 882.0], [68.1, 882.0], [68.2, 882.0], [68.3, 883.0], [68.4, 883.0], [68.5, 883.0], [68.6, 883.0], [68.7, 884.0], [68.8, 884.0], [68.9, 884.0], [69.0, 884.0], [69.1, 885.0], [69.2, 885.0], [69.3, 885.0], [69.4, 886.0], [69.5, 886.0], [69.6, 886.0], [69.7, 886.0], [69.8, 887.0], [69.9, 887.0], [70.0, 887.0], [70.1, 888.0], [70.2, 888.0], [70.3, 888.0], [70.4, 888.0], [70.5, 888.0], [70.6, 889.0], [70.7, 889.0], [70.8, 890.0], [70.9, 890.0], [71.0, 891.0], [71.1, 891.0], [71.2, 891.0], [71.3, 892.0], [71.4, 892.0], [71.5, 892.0], [71.6, 893.0], [71.7, 893.0], [71.8, 894.0], [71.9, 894.0], [72.0, 894.0], [72.1, 895.0], [72.2, 895.0], [72.3, 895.0], [72.4, 896.0], [72.5, 897.0], [72.6, 897.0], [72.7, 897.0], [72.8, 898.0], [72.9, 898.0], [73.0, 899.0], [73.1, 899.0], [73.2, 899.0], [73.3, 900.0], [73.4, 900.0], [73.5, 901.0], [73.6, 901.0], [73.7, 902.0], [73.8, 902.0], [73.9, 903.0], [74.0, 904.0], [74.1, 904.0], [74.2, 905.0], [74.3, 905.0], [74.4, 906.0], [74.5, 907.0], [74.6, 908.0], [74.7, 909.0], [74.8, 910.0], [74.9, 910.0], [75.0, 910.0], [75.1, 911.0], [75.2, 911.0], [75.3, 911.0], [75.4, 912.0], [75.5, 912.0], [75.6, 913.0], [75.7, 913.0], [75.8, 913.0], [75.9, 914.0], [76.0, 915.0], [76.1, 915.0], [76.2, 915.0], [76.3, 916.0], [76.4, 916.0], [76.5, 917.0], [76.6, 917.0], [76.7, 918.0], [76.8, 919.0], [76.9, 919.0], [77.0, 920.0], [77.1, 921.0], [77.2, 923.0], [77.3, 924.0], [77.4, 926.0], [77.5, 927.0], [77.6, 929.0], [77.7, 931.0], [77.8, 931.0], [77.9, 932.0], [78.0, 933.0], [78.1, 934.0], [78.2, 935.0], [78.3, 935.0], [78.4, 935.0], [78.5, 935.0], [78.6, 936.0], [78.7, 937.0], [78.8, 937.0], [78.9, 938.0], [79.0, 939.0], [79.1, 940.0], [79.2, 940.0], [79.3, 941.0], [79.4, 941.0], [79.5, 942.0], [79.6, 942.0], [79.7, 942.0], [79.8, 943.0], [79.9, 943.0], [80.0, 944.0], [80.1, 944.0], [80.2, 945.0], [80.3, 946.0], [80.4, 947.0], [80.5, 949.0], [80.6, 949.0], [80.7, 950.0], [80.8, 950.0], [80.9, 952.0], [81.0, 952.0], [81.1, 952.0], [81.2, 953.0], [81.3, 953.0], [81.4, 953.0], [81.5, 954.0], [81.6, 954.0], [81.7, 954.0], [81.8, 956.0], [81.9, 957.0], [82.0, 957.0], [82.1, 958.0], [82.2, 958.0], [82.3, 959.0], [82.4, 959.0], [82.5, 959.0], [82.6, 960.0], [82.7, 960.0], [82.8, 962.0], [82.9, 963.0], [83.0, 963.0], [83.1, 965.0], [83.2, 965.0], [83.3, 965.0], [83.4, 965.0], [83.5, 966.0], [83.6, 966.0], [83.7, 967.0], [83.8, 967.0], [83.9, 968.0], [84.0, 968.0], [84.1, 969.0], [84.2, 969.0], [84.3, 969.0], [84.4, 969.0], [84.5, 969.0], [84.6, 969.0], [84.7, 970.0], [84.8, 970.0], [84.9, 970.0], [85.0, 970.0], [85.1, 970.0], [85.2, 971.0], [85.3, 971.0], [85.4, 972.0], [85.5, 972.0], [85.6, 972.0], [85.7, 973.0], [85.8, 973.0], [85.9, 973.0], [86.0, 974.0], [86.1, 974.0], [86.2, 974.0], [86.3, 974.0], [86.4, 974.0], [86.5, 975.0], [86.6, 975.0], [86.7, 975.0], [86.8, 975.0], [86.9, 975.0], [87.0, 976.0], [87.1, 976.0], [87.2, 977.0], [87.3, 977.0], [87.4, 977.0], [87.5, 977.0], [87.6, 977.0], [87.7, 978.0], [87.8, 978.0], [87.9, 978.0], [88.0, 979.0], [88.1, 979.0], [88.2, 979.0], [88.3, 980.0], [88.4, 980.0], [88.5, 980.0], [88.6, 980.0], [88.7, 981.0], [88.8, 981.0], [88.9, 981.0], [89.0, 982.0], [89.1, 982.0], [89.2, 982.0], [89.3, 983.0], [89.4, 983.0], [89.5, 984.0], [89.6, 984.0], [89.7, 984.0], [89.8, 985.0], [89.9, 985.0], [90.0, 985.0], [90.1, 985.0], [90.2, 986.0], [90.3, 986.0], [90.4, 987.0], [90.5, 987.0], [90.6, 988.0], [90.7, 989.0], [90.8, 989.0], [90.9, 989.0], [91.0, 990.0], [91.1, 990.0], [91.2, 990.0], [91.3, 990.0], [91.4, 990.0], [91.5, 990.0], [91.6, 991.0], [91.7, 991.0], [91.8, 991.0], [91.9, 992.0], [92.0, 992.0], [92.1, 992.0], [92.2, 992.0], [92.3, 992.0], [92.4, 993.0], [92.5, 993.0], [92.6, 993.0], [92.7, 994.0], [92.8, 994.0], [92.9, 994.0], [93.0, 995.0], [93.1, 995.0], [93.2, 996.0], [93.3, 996.0], [93.4, 996.0], [93.5, 997.0], [93.6, 997.0], [93.7, 997.0], [93.8, 997.0], [93.9, 997.0], [94.0, 998.0], [94.1, 998.0], [94.2, 999.0], [94.3, 999.0], [94.4, 1000.0], [94.5, 1000.0], [94.6, 1001.0], [94.7, 1001.0], [94.8, 1002.0], [94.9, 1002.0], [95.0, 1003.0], [95.1, 1004.0], [95.2, 1005.0], [95.3, 1005.0], [95.4, 1006.0], [95.5, 1006.0], [95.6, 1007.0], [95.7, 1007.0], [95.8, 1008.0], [95.9, 1008.0], [96.0, 1009.0], [96.1, 1010.0], [96.2, 1011.0], [96.3, 1012.0], [96.4, 1013.0], [96.5, 1014.0], [96.6, 1016.0], [96.7, 1017.0], [96.8, 1017.0], [96.9, 1018.0], [97.0, 1018.0], [97.1, 1019.0], [97.2, 1020.0], [97.3, 1020.0], [97.4, 1021.0], [97.5, 1022.0], [97.6, 1023.0], [97.7, 1023.0], [97.8, 1024.0], [97.9, 1024.0], [98.0, 1026.0], [98.1, 1027.0], [98.2, 1028.0], [98.3, 1029.0], [98.4, 1030.0], [98.5, 1031.0], [98.6, 1032.0], [98.7, 1033.0], [98.8, 1034.0], [98.9, 1036.0], [99.0, 1037.0], [99.1, 1039.0], [99.2, 1040.0], [99.3, 1040.0], [99.4, 1041.0], [99.5, 1042.0], [99.6, 1043.0], [99.7, 1047.0], [99.8, 1050.0], [99.9, 1055.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 4.0], [3.7, 4.0], [3.8, 4.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 5.0], [4.9, 5.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 6.0], [5.4, 6.0], [5.5, 7.0], [5.6, 7.0], [5.7, 9.0], [5.8, 9.0], [5.9, 10.0], [6.0, 10.0], [6.1, 11.0], [6.2, 13.0], [6.3, 13.0], [6.4, 13.0], [6.5, 13.0], [6.6, 14.0], [6.7, 14.0], [6.8, 15.0], [6.9, 15.0], [7.0, 16.0], [7.1, 16.0], [7.2, 17.0], [7.3, 18.0], [7.4, 18.0], [7.5, 19.0], [7.6, 20.0], [7.7, 20.0], [7.8, 20.0], [7.9, 21.0], [8.0, 21.0], [8.1, 21.0], [8.2, 21.0], [8.3, 22.0], [8.4, 22.0], [8.5, 22.0], [8.6, 23.0], [8.7, 23.0], [8.8, 23.0], [8.9, 23.0], [9.0, 23.0], [9.1, 24.0], [9.2, 24.0], [9.3, 24.0], [9.4, 24.0], [9.5, 25.0], [9.6, 25.0], [9.7, 25.0], [9.8, 26.0], [9.9, 26.0], [10.0, 26.0], [10.1, 26.0], [10.2, 26.0], [10.3, 26.0], [10.4, 26.0], [10.5, 26.0], [10.6, 27.0], [10.7, 27.0], [10.8, 27.0], [10.9, 27.0], [11.0, 27.0], [11.1, 27.0], [11.2, 27.0], [11.3, 27.0], [11.4, 28.0], [11.5, 28.0], [11.6, 28.0], [11.7, 28.0], [11.8, 29.0], [11.9, 29.0], [12.0, 29.0], [12.1, 29.0], [12.2, 30.0], [12.3, 30.0], [12.4, 30.0], [12.5, 30.0], [12.6, 30.0], [12.7, 30.0], [12.8, 31.0], [12.9, 31.0], [13.0, 31.0], [13.1, 31.0], [13.2, 31.0], [13.3, 32.0], [13.4, 32.0], [13.5, 32.0], [13.6, 32.0], [13.7, 33.0], [13.8, 33.0], [13.9, 33.0], [14.0, 33.0], [14.1, 33.0], [14.2, 33.0], [14.3, 33.0], [14.4, 33.0], [14.5, 33.0], [14.6, 33.0], [14.7, 33.0], [14.8, 33.0], [14.9, 34.0], [15.0, 34.0], [15.1, 34.0], [15.2, 34.0], [15.3, 34.0], [15.4, 34.0], [15.5, 34.0], [15.6, 34.0], [15.7, 34.0], [15.8, 34.0], [15.9, 34.0], [16.0, 34.0], [16.1, 34.0], [16.2, 34.0], [16.3, 34.0], [16.4, 34.0], [16.5, 34.0], [16.6, 34.0], [16.7, 34.0], [16.8, 34.0], [16.9, 34.0], [17.0, 34.0], [17.1, 34.0], [17.2, 34.0], [17.3, 34.0], [17.4, 34.0], [17.5, 34.0], [17.6, 35.0], [17.7, 35.0], [17.8, 35.0], [17.9, 35.0], [18.0, 35.0], [18.1, 35.0], [18.2, 35.0], [18.3, 35.0], [18.4, 35.0], [18.5, 35.0], [18.6, 35.0], [18.7, 35.0], [18.8, 35.0], [18.9, 35.0], [19.0, 35.0], [19.1, 35.0], [19.2, 35.0], [19.3, 35.0], [19.4, 35.0], [19.5, 35.0], [19.6, 35.0], [19.7, 35.0], [19.8, 35.0], [19.9, 35.0], [20.0, 35.0], [20.1, 35.0], [20.2, 35.0], [20.3, 35.0], [20.4, 35.0], [20.5, 35.0], [20.6, 35.0], [20.7, 35.0], [20.8, 35.0], [20.9, 35.0], [21.0, 35.0], [21.1, 35.0], [21.2, 35.0], [21.3, 35.0], [21.4, 35.0], [21.5, 35.0], [21.6, 35.0], [21.7, 35.0], [21.8, 36.0], [21.9, 36.0], [22.0, 36.0], [22.1, 36.0], [22.2, 36.0], [22.3, 36.0], [22.4, 36.0], [22.5, 36.0], [22.6, 36.0], [22.7, 36.0], [22.8, 36.0], [22.9, 36.0], [23.0, 36.0], [23.1, 36.0], [23.2, 36.0], [23.3, 36.0], [23.4, 36.0], [23.5, 36.0], [23.6, 36.0], [23.7, 36.0], [23.8, 36.0], [23.9, 36.0], [24.0, 36.0], [24.1, 36.0], [24.2, 36.0], [24.3, 36.0], [24.4, 36.0], [24.5, 36.0], [24.6, 36.0], [24.7, 36.0], [24.8, 36.0], [24.9, 36.0], [25.0, 36.0], [25.1, 36.0], [25.2, 36.0], [25.3, 36.0], [25.4, 36.0], [25.5, 36.0], [25.6, 36.0], [25.7, 36.0], [25.8, 36.0], [25.9, 36.0], [26.0, 37.0], [26.1, 37.0], [26.2, 37.0], [26.3, 37.0], [26.4, 37.0], [26.5, 37.0], [26.6, 37.0], [26.7, 37.0], [26.8, 37.0], [26.9, 37.0], [27.0, 37.0], [27.1, 37.0], [27.2, 37.0], [27.3, 37.0], [27.4, 37.0], [27.5, 37.0], [27.6, 37.0], [27.7, 37.0], [27.8, 37.0], [27.9, 37.0], [28.0, 37.0], [28.1, 37.0], [28.2, 37.0], [28.3, 37.0], [28.4, 37.0], [28.5, 37.0], [28.6, 37.0], [28.7, 37.0], [28.8, 37.0], [28.9, 37.0], [29.0, 37.0], [29.1, 37.0], [29.2, 37.0], [29.3, 37.0], [29.4, 37.0], [29.5, 37.0], [29.6, 37.0], [29.7, 37.0], [29.8, 37.0], [29.9, 37.0], [30.0, 37.0], [30.1, 37.0], [30.2, 37.0], [30.3, 37.0], [30.4, 37.0], [30.5, 37.0], [30.6, 37.0], [30.7, 38.0], [30.8, 38.0], [30.9, 38.0], [31.0, 38.0], [31.1, 38.0], [31.2, 38.0], [31.3, 38.0], [31.4, 38.0], [31.5, 38.0], [31.6, 38.0], [31.7, 38.0], [31.8, 38.0], [31.9, 38.0], [32.0, 38.0], [32.1, 38.0], [32.2, 38.0], [32.3, 38.0], [32.4, 38.0], [32.5, 38.0], [32.6, 38.0], [32.7, 38.0], [32.8, 38.0], [32.9, 38.0], [33.0, 38.0], [33.1, 38.0], [33.2, 38.0], [33.3, 38.0], [33.4, 38.0], [33.5, 38.0], [33.6, 38.0], [33.7, 38.0], [33.8, 38.0], [33.9, 38.0], [34.0, 38.0], [34.1, 38.0], [34.2, 38.0], [34.3, 38.0], [34.4, 38.0], [34.5, 38.0], [34.6, 38.0], [34.7, 38.0], [34.8, 38.0], [34.9, 38.0], [35.0, 38.0], [35.1, 38.0], [35.2, 38.0], [35.3, 38.0], [35.4, 39.0], [35.5, 39.0], [35.6, 39.0], [35.7, 39.0], [35.8, 39.0], [35.9, 39.0], [36.0, 39.0], [36.1, 39.0], [36.2, 39.0], [36.3, 39.0], [36.4, 39.0], [36.5, 39.0], [36.6, 39.0], [36.7, 39.0], [36.8, 39.0], [36.9, 39.0], [37.0, 39.0], [37.1, 39.0], [37.2, 39.0], [37.3, 39.0], [37.4, 39.0], [37.5, 39.0], [37.6, 39.0], [37.7, 39.0], [37.8, 39.0], [37.9, 39.0], [38.0, 39.0], [38.1, 39.0], [38.2, 39.0], [38.3, 39.0], [38.4, 39.0], [38.5, 39.0], [38.6, 39.0], [38.7, 39.0], [38.8, 39.0], [38.9, 39.0], [39.0, 39.0], [39.1, 39.0], [39.2, 39.0], [39.3, 39.0], [39.4, 39.0], [39.5, 39.0], [39.6, 39.0], [39.7, 39.0], [39.8, 39.0], [39.9, 39.0], [40.0, 39.0], [40.1, 39.0], [40.2, 39.0], [40.3, 39.0], [40.4, 39.0], [40.5, 39.0], [40.6, 40.0], [40.7, 40.0], [40.8, 40.0], [40.9, 40.0], [41.0, 40.0], [41.1, 40.0], [41.2, 40.0], [41.3, 40.0], [41.4, 40.0], [41.5, 40.0], [41.6, 40.0], [41.7, 40.0], [41.8, 40.0], [41.9, 40.0], [42.0, 40.0], [42.1, 40.0], [42.2, 40.0], [42.3, 40.0], [42.4, 40.0], [42.5, 40.0], [42.6, 40.0], [42.7, 40.0], [42.8, 40.0], [42.9, 40.0], [43.0, 40.0], [43.1, 40.0], [43.2, 40.0], [43.3, 40.0], [43.4, 40.0], [43.5, 40.0], [43.6, 40.0], [43.7, 40.0], [43.8, 40.0], [43.9, 40.0], [44.0, 40.0], [44.1, 40.0], [44.2, 40.0], [44.3, 40.0], [44.4, 40.0], [44.5, 40.0], [44.6, 40.0], [44.7, 40.0], [44.8, 40.0], [44.9, 40.0], [45.0, 40.0], [45.1, 40.0], [45.2, 40.0], [45.3, 40.0], [45.4, 40.0], [45.5, 40.0], [45.6, 40.0], [45.7, 40.0], [45.8, 40.0], [45.9, 40.0], [46.0, 40.0], [46.1, 40.0], [46.2, 41.0], [46.3, 41.0], [46.4, 41.0], [46.5, 41.0], [46.6, 41.0], [46.7, 41.0], [46.8, 41.0], [46.9, 41.0], [47.0, 41.0], [47.1, 41.0], [47.2, 41.0], [47.3, 41.0], [47.4, 41.0], [47.5, 41.0], [47.6, 41.0], [47.7, 41.0], [47.8, 41.0], [47.9, 41.0], [48.0, 41.0], [48.1, 41.0], [48.2, 41.0], [48.3, 41.0], [48.4, 41.0], [48.5, 41.0], [48.6, 41.0], [48.7, 41.0], [48.8, 41.0], [48.9, 41.0], [49.0, 41.0], [49.1, 41.0], [49.2, 41.0], [49.3, 41.0], [49.4, 41.0], [49.5, 41.0], [49.6, 41.0], [49.7, 41.0], [49.8, 41.0], [49.9, 41.0], [50.0, 41.0], [50.1, 41.0], [50.2, 41.0], [50.3, 41.0], [50.4, 41.0], [50.5, 41.0], [50.6, 41.0], [50.7, 41.0], [50.8, 41.0], [50.9, 41.0], [51.0, 41.0], [51.1, 41.0], [51.2, 41.0], [51.3, 41.0], [51.4, 41.0], [51.5, 41.0], [51.6, 41.0], [51.7, 41.0], [51.8, 41.0], [51.9, 41.0], [52.0, 42.0], [52.1, 42.0], [52.2, 42.0], [52.3, 42.0], [52.4, 42.0], [52.5, 42.0], [52.6, 42.0], [52.7, 42.0], [52.8, 42.0], [52.9, 42.0], [53.0, 42.0], [53.1, 42.0], [53.2, 42.0], [53.3, 42.0], [53.4, 42.0], [53.5, 42.0], [53.6, 42.0], [53.7, 42.0], [53.8, 42.0], [53.9, 42.0], [54.0, 42.0], [54.1, 42.0], [54.2, 42.0], [54.3, 42.0], [54.4, 42.0], [54.5, 42.0], [54.6, 42.0], [54.7, 42.0], [54.8, 42.0], [54.9, 42.0], [55.0, 42.0], [55.1, 42.0], [55.2, 42.0], [55.3, 42.0], [55.4, 42.0], [55.5, 42.0], [55.6, 42.0], [55.7, 42.0], [55.8, 42.0], [55.9, 42.0], [56.0, 42.0], [56.1, 42.0], [56.2, 42.0], [56.3, 42.0], [56.4, 42.0], [56.5, 42.0], [56.6, 42.0], [56.7, 42.0], [56.8, 43.0], [56.9, 43.0], [57.0, 43.0], [57.1, 43.0], [57.2, 43.0], [57.3, 43.0], [57.4, 43.0], [57.5, 43.0], [57.6, 43.0], [57.7, 43.0], [57.8, 43.0], [57.9, 43.0], [58.0, 43.0], [58.1, 43.0], [58.2, 43.0], [58.3, 43.0], [58.4, 43.0], [58.5, 43.0], [58.6, 43.0], [58.7, 43.0], [58.8, 43.0], [58.9, 43.0], [59.0, 43.0], [59.1, 43.0], [59.2, 43.0], [59.3, 43.0], [59.4, 43.0], [59.5, 43.0], [59.6, 43.0], [59.7, 43.0], [59.8, 43.0], [59.9, 43.0], [60.0, 43.0], [60.1, 43.0], [60.2, 43.0], [60.3, 43.0], [60.4, 43.0], [60.5, 43.0], [60.6, 43.0], [60.7, 43.0], [60.8, 43.0], [60.9, 43.0], [61.0, 43.0], [61.1, 43.0], [61.2, 43.0], [61.3, 43.0], [61.4, 43.0], [61.5, 43.0], [61.6, 43.0], [61.7, 43.0], [61.8, 44.0], [61.9, 44.0], [62.0, 44.0], [62.1, 44.0], [62.2, 44.0], [62.3, 44.0], [62.4, 44.0], [62.5, 44.0], [62.6, 44.0], [62.7, 44.0], [62.8, 44.0], [62.9, 44.0], [63.0, 44.0], [63.1, 44.0], [63.2, 44.0], [63.3, 44.0], [63.4, 44.0], [63.5, 44.0], [63.6, 44.0], [63.7, 44.0], [63.8, 44.0], [63.9, 44.0], [64.0, 44.0], [64.1, 44.0], [64.2, 44.0], [64.3, 44.0], [64.4, 44.0], [64.5, 44.0], [64.6, 44.0], [64.7, 44.0], [64.8, 44.0], [64.9, 44.0], [65.0, 44.0], [65.1, 44.0], [65.2, 44.0], [65.3, 44.0], [65.4, 44.0], [65.5, 44.0], [65.6, 44.0], [65.7, 44.0], [65.8, 44.0], [65.9, 44.0], [66.0, 44.0], [66.1, 44.0], [66.2, 44.0], [66.3, 44.0], [66.4, 45.0], [66.5, 45.0], [66.6, 45.0], [66.7, 45.0], [66.8, 45.0], [66.9, 45.0], [67.0, 45.0], [67.1, 45.0], [67.2, 45.0], [67.3, 45.0], [67.4, 45.0], [67.5, 45.0], [67.6, 45.0], [67.7, 45.0], [67.8, 45.0], [67.9, 45.0], [68.0, 45.0], [68.1, 45.0], [68.2, 45.0], [68.3, 45.0], [68.4, 45.0], [68.5, 45.0], [68.6, 45.0], [68.7, 45.0], [68.8, 45.0], [68.9, 45.0], [69.0, 45.0], [69.1, 45.0], [69.2, 45.0], [69.3, 45.0], [69.4, 45.0], [69.5, 45.0], [69.6, 45.0], [69.7, 45.0], [69.8, 45.0], [69.9, 45.0], [70.0, 45.0], [70.1, 45.0], [70.2, 45.0], [70.3, 46.0], [70.4, 46.0], [70.5, 46.0], [70.6, 46.0], [70.7, 46.0], [70.8, 46.0], [70.9, 46.0], [71.0, 46.0], [71.1, 46.0], [71.2, 46.0], [71.3, 46.0], [71.4, 46.0], [71.5, 46.0], [71.6, 46.0], [71.7, 46.0], [71.8, 46.0], [71.9, 46.0], [72.0, 46.0], [72.1, 46.0], [72.2, 46.0], [72.3, 46.0], [72.4, 46.0], [72.5, 46.0], [72.6, 46.0], [72.7, 46.0], [72.8, 46.0], [72.9, 46.0], [73.0, 46.0], [73.1, 46.0], [73.2, 46.0], [73.3, 46.0], [73.4, 46.0], [73.5, 46.0], [73.6, 46.0], [73.7, 46.0], [73.8, 46.0], [73.9, 46.0], [74.0, 46.0], [74.1, 47.0], [74.2, 47.0], [74.3, 47.0], [74.4, 47.0], [74.5, 47.0], [74.6, 47.0], [74.7, 47.0], [74.8, 47.0], [74.9, 47.0], [75.0, 47.0], [75.1, 47.0], [75.2, 47.0], [75.3, 47.0], [75.4, 47.0], [75.5, 47.0], [75.6, 47.0], [75.7, 47.0], [75.8, 47.0], [75.9, 47.0], [76.0, 47.0], [76.1, 47.0], [76.2, 47.0], [76.3, 47.0], [76.4, 47.0], [76.5, 47.0], [76.6, 47.0], [76.7, 47.0], [76.8, 47.0], [76.9, 47.0], [77.0, 47.0], [77.1, 47.0], [77.2, 47.0], [77.3, 47.0], [77.4, 47.0], [77.5, 47.0], [77.6, 47.0], [77.7, 47.0], [77.8, 47.0], [77.9, 48.0], [78.0, 48.0], [78.1, 48.0], [78.2, 48.0], [78.3, 48.0], [78.4, 48.0], [78.5, 48.0], [78.6, 48.0], [78.7, 48.0], [78.8, 48.0], [78.9, 48.0], [79.0, 48.0], [79.1, 48.0], [79.2, 48.0], [79.3, 48.0], [79.4, 48.0], [79.5, 48.0], [79.6, 48.0], [79.7, 48.0], [79.8, 48.0], [79.9, 48.0], [80.0, 48.0], [80.1, 48.0], [80.2, 48.0], [80.3, 48.0], [80.4, 48.0], [80.5, 48.0], [80.6, 48.0], [80.7, 49.0], [80.8, 49.0], [80.9, 49.0], [81.0, 49.0], [81.1, 49.0], [81.2, 49.0], [81.3, 49.0], [81.4, 49.0], [81.5, 49.0], [81.6, 49.0], [81.7, 49.0], [81.8, 49.0], [81.9, 49.0], [82.0, 49.0], [82.1, 49.0], [82.2, 49.0], [82.3, 49.0], [82.4, 49.0], [82.5, 49.0], [82.6, 49.0], [82.7, 49.0], [82.8, 49.0], [82.9, 49.0], [83.0, 49.0], [83.1, 49.0], [83.2, 49.0], [83.3, 50.0], [83.4, 50.0], [83.5, 50.0], [83.6, 50.0], [83.7, 50.0], [83.8, 50.0], [83.9, 50.0], [84.0, 50.0], [84.1, 50.0], [84.2, 50.0], [84.3, 50.0], [84.4, 50.0], [84.5, 50.0], [84.6, 50.0], [84.7, 50.0], [84.8, 50.0], [84.9, 50.0], [85.0, 50.0], [85.1, 50.0], [85.2, 50.0], [85.3, 50.0], [85.4, 50.0], [85.5, 51.0], [85.6, 51.0], [85.7, 51.0], [85.8, 51.0], [85.9, 51.0], [86.0, 51.0], [86.1, 51.0], [86.2, 51.0], [86.3, 51.0], [86.4, 51.0], [86.5, 51.0], [86.6, 51.0], [86.7, 51.0], [86.8, 51.0], [86.9, 51.0], [87.0, 51.0], [87.1, 51.0], [87.2, 51.0], [87.3, 51.0], [87.4, 51.0], [87.5, 51.0], [87.6, 51.0], [87.7, 52.0], [87.8, 52.0], [87.9, 52.0], [88.0, 52.0], [88.1, 52.0], [88.2, 52.0], [88.3, 52.0], [88.4, 52.0], [88.5, 52.0], [88.6, 52.0], [88.7, 52.0], [88.8, 52.0], [88.9, 52.0], [89.0, 52.0], [89.1, 52.0], [89.2, 52.0], [89.3, 53.0], [89.4, 53.0], [89.5, 53.0], [89.6, 53.0], [89.7, 53.0], [89.8, 53.0], [89.9, 53.0], [90.0, 53.0], [90.1, 53.0], [90.2, 53.0], [90.3, 53.0], [90.4, 53.0], [90.5, 53.0], [90.6, 53.0], [90.7, 53.0], [90.8, 53.0], [90.9, 53.0], [91.0, 54.0], [91.1, 54.0], [91.2, 54.0], [91.3, 54.0], [91.4, 54.0], [91.5, 54.0], [91.6, 54.0], [91.7, 54.0], [91.8, 54.0], [91.9, 54.0], [92.0, 54.0], [92.1, 54.0], [92.2, 54.0], [92.3, 54.0], [92.4, 55.0], [92.5, 55.0], [92.6, 55.0], [92.7, 55.0], [92.8, 55.0], [92.9, 55.0], [93.0, 55.0], [93.1, 55.0], [93.2, 55.0], [93.3, 55.0], [93.4, 55.0], [93.5, 55.0], [93.6, 55.0], [93.7, 55.0], [93.8, 55.0], [93.9, 56.0], [94.0, 56.0], [94.1, 56.0], [94.2, 56.0], [94.3, 56.0], [94.4, 56.0], [94.5, 56.0], [94.6, 56.0], [94.7, 56.0], [94.8, 56.0], [94.9, 56.0], [95.0, 56.0], [95.1, 57.0], [95.2, 57.0], [95.3, 57.0], [95.4, 57.0], [95.5, 57.0], [95.6, 57.0], [95.7, 57.0], [95.8, 58.0], [95.9, 58.0], [96.0, 58.0], [96.1, 58.0], [96.2, 59.0], [96.3, 59.0], [96.4, 59.0], [96.5, 59.0], [96.6, 59.0], [96.7, 59.0], [96.8, 60.0], [96.9, 61.0], [97.0, 61.0], [97.1, 61.0], [97.2, 61.0], [97.3, 62.0], [97.4, 62.0], [97.5, 62.0], [97.6, 63.0], [97.7, 63.0], [97.8, 64.0], [97.9, 64.0], [98.0, 64.0], [98.1, 65.0], [98.2, 66.0], [98.3, 66.0], [98.4, 66.0], [98.5, 66.0], [98.6, 67.0], [98.7, 68.0], [98.8, 70.0], [98.9, 70.0], [99.0, 71.0], [99.1, 72.0], [99.2, 73.0], [99.3, 74.0], [99.4, 74.0], [99.5, 76.0], [99.6, 78.0], [99.7, 79.0], [99.8, 80.0], [99.9, 84.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 3000.0, "series": [{"data": [[0.0, 2042.0], [300.0, 231.0], [600.0, 19.0], [700.0, 3.0], [200.0, 215.0], [400.0, 249.0], [100.0, 120.0], [500.0, 121.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 8.0], [300.0, 100.0], [600.0, 506.0], [700.0, 239.0], [400.0, 250.0], [800.0, 774.0], [900.0, 633.0], [500.0, 320.0], [1000.0, 170.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 3000.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2776.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6224.0, "series": [{"data": [[0.0, 6224.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2776.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 77.24, "minX": 1.6690176E12, "maxY": 932.0739999999997, "series": [{"data": [[1.6690176E12, 932.0739999999997]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.6690176E12, 192.59666666666718]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.6690176E12, 77.24]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6690176E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.4, "minX": 1.0, "maxY": 1055.0, "series": [{"data": [[2.0, 39.0], [3.0, 38.0], [7.0, 39.0], [9.0, 41.0], [11.0, 38.0], [13.0, 40.0], [14.0, 37.8], [21.0, 68.5], [22.0, 140.0], [23.0, 42.333333333333336], [25.0, 64.66666666666667], [27.0, 69.0], [28.0, 87.0], [29.0, 52.0], [30.0, 50.6], [31.0, 52.92857142857142], [33.0, 42.73684210526316], [32.0, 38.42857142857143], [35.0, 49.249999999999986], [34.0, 38.0], [36.0, 44.27272727272727], [37.0, 37.88888888888889], [39.0, 40.42857142857142], [38.0, 42.400000000000006], [41.0, 57.9], [40.0, 38.14285714285714], [43.0, 57.52173913043478], [42.0, 40.4], [45.0, 46.515151515151516], [44.0, 72.94736842105263], [47.0, 51.14285714285714], [46.0, 41.599999999999994], [48.0, 49.300000000000004], [49.0, 47.071428571428555], [51.0, 47.0], [50.0, 45.6], [53.0, 65.06249999999999], [52.0, 56.142857142857146], [55.0, 54.411764705882355], [54.0, 49.5625], [57.0, 51.399999999999984], [56.0, 51.2], [58.0, 100.63157894736844], [59.0, 52.347826086956516], [61.0, 61.400000000000006], [60.0, 54.0], [62.0, 59.111111111111114], [63.0, 56.89473684210527], [65.0, 52.63636363636364], [67.0, 56.92857142857143], [66.0, 56.903225806451616], [64.0, 55.27777777777778], [71.0, 56.62068965517243], [70.0, 52.03846153846154], [69.0, 54.52941176470587], [68.0, 52.12121212121212], [74.0, 52.63157894736841], [72.0, 53.333333333333336], [73.0, 52.25], [75.0, 53.52380952380955], [79.0, 52.103448275862064], [77.0, 53.34615384615385], [76.0, 52.54166666666667], [78.0, 52.727272727272734], [83.0, 120.8076923076923], [81.0, 67.69444444444444], [82.0, 52.17241379310346], [80.0, 51.56666666666668], [87.0, 70.0], [85.0, 61.63157894736842], [86.0, 56.05], [84.0, 53.16216216216215], [90.0, 70.34782608695652], [89.0, 55.030303030303024], [88.0, 52.62500000000001], [91.0, 52.99999999999999], [95.0, 75.5], [93.0, 71.36363636363636], [94.0, 55.66666666666667], [92.0, 53.7], [99.0, 80.66666666666667], [96.0, 64.85714285714283], [97.0, 55.5625], [98.0, 61.35714285714286], [102.0, 71.5294117647059], [101.0, 59.4], [100.0, 55.22222222222222], [103.0, 62.69230769230769], [107.0, 70.77777777777777], [106.0, 72.6470588235294], [105.0, 64.92857142857142], [104.0, 58.903225806451616], [111.0, 114.125], [108.0, 94.0], [109.0, 56.11111111111111], [110.0, 63.42857142857143], [114.0, 97.11111111111113], [113.0, 76.25], [115.0, 58.58823529411765], [112.0, 59.46153846153847], [117.0, 82.21428571428572], [119.0, 59.0], [118.0, 60.16666666666667], [116.0, 70.75], [123.0, 83.16666666666667], [121.0, 82.8], [120.0, 84.40000000000002], [122.0, 55.99999999999999], [127.0, 116.25], [126.0, 169.66666666666666], [124.0, 103.53846153846153], [125.0, 70.0], [132.0, 93.5], [133.0, 328.5], [134.0, 230.0], [128.0, 82.18181818181817], [131.0, 55.25], [129.0, 48.666666666666664], [130.0, 61.875], [135.0, 51.0], [142.0, 385.66666666666663], [140.0, 127.0], [137.0, 118.5], [143.0, 70.5], [141.0, 57.0], [139.0, 56.0], [136.0, 58.333333333333336], [151.0, 208.33333333333334], [147.0, 94.0], [145.0, 109.0], [148.0, 135.0], [144.0, 51.666666666666664], [149.0, 66.0], [150.0, 53.5], [146.0, 69.57142857142858], [159.0, 157.27272727272728], [156.0, 135.0], [154.0, 118.75], [153.0, 83.25], [158.0, 63.16666666666667], [155.0, 61.5], [152.0, 58.2], [157.0, 53.0], [167.0, 133.25], [166.0, 183.33333333333331], [163.0, 133.55555555555554], [164.0, 55.42857142857143], [160.0, 65.14285714285714], [162.0, 54.0], [161.0, 60.4], [165.0, 71.0], [175.0, 381.54545454545456], [173.0, 228.0], [172.0, 221.5], [170.0, 225.75], [169.0, 65.0], [168.0, 62.5], [174.0, 73.0], [171.0, 63.0], [183.0, 491.5], [181.0, 329.0], [179.0, 493.0], [178.0, 159.0], [176.0, 433.0], [182.0, 70.0], [177.0, 72.0], [191.0, 100.2], [190.0, 92.6], [188.0, 168.5], [187.0, 172.33333333333334], [186.0, 460.25], [185.0, 221.0], [184.0, 111.0], [189.0, 69.66666666666667], [199.0, 227.0], [198.0, 129.66666666666666], [197.0, 215.0], [196.0, 172.0], [194.0, 170.16666666666666], [195.0, 64.0], [193.0, 63.0], [207.0, 64.0], [205.0, 55.0], [204.0, 71.0], [202.0, 68.0], [200.0, 75.25], [213.0, 73.0], [210.0, 68.33333333333333], [208.0, 64.0], [223.0, 71.5], [221.0, 81.0], [220.0, 68.33333333333333], [219.0, 71.0], [216.0, 73.66666666666667], [229.0, 301.3333333333333], [230.0, 169.5], [228.0, 67.5], [226.0, 68.66666666666667], [238.0, 196.25000000000003], [239.0, 258.0], [234.0, 215.0], [240.0, 193.0], [302.0, 280.0], [303.0, 203.0], [301.0, 217.0], [299.0, 275.4375], [296.0, 324.0], [292.0, 279.4736842105263], [288.0, 285.18750000000006], [289.0, 277.8], [290.0, 247.0], [293.0, 216.0], [306.0, 295.0], [317.0, 423.0], [319.0, 303.5], [316.0, 312.5], [305.0, 140.0], [304.0, 308.0], [314.0, 344.0], [312.0, 263.0], [311.0, 237.0], [310.0, 377.0], [309.0, 233.0], [308.0, 161.0], [334.0, 320.0], [335.0, 346.5], [332.0, 260.0], [330.0, 249.0], [329.0, 249.0], [327.0, 319.5], [325.0, 254.5], [323.0, 219.0], [321.0, 190.0], [343.0, 465.0], [342.0, 344.0], [341.0, 245.0], [340.0, 295.0], [338.0, 188.0], [337.0, 156.0], [339.0, 276.0], [381.0, 314.5], [370.0, 314.3333333333333], [371.0, 334.0], [386.0, 264.5], [397.0, 269.5], [398.0, 366.79999999999995], [399.0, 465.0], [396.0, 250.0], [387.0, 308.71428571428567], [394.0, 272.0], [392.0, 223.0], [391.0, 256.6666666666667], [385.0, 292.4], [389.0, 286.4], [388.0, 367.3333333333333], [390.0, 216.0], [413.0, 339.0], [406.0, 220.5], [405.0, 262.0], [403.0, 322.0], [402.0, 472.0], [401.0, 430.0], [428.0, 207.0], [427.0, 345.0], [425.0, 323.3125], [423.0, 464.5], [422.0, 391.0], [420.0, 500.0], [452.0, 374.0], [456.0, 493.72727272727275], [454.0, 298.0], [472.0, 313.0], [476.0, 317.0], [475.0, 251.0], [474.0, 302.6666666666667], [473.0, 287.0], [470.0, 307.0], [469.0, 318.0], [468.0, 310.0], [471.0, 291.0], [488.0, 446.5], [491.0, 393.7142857142857], [492.0, 432.5], [490.0, 347.3333333333333], [489.0, 332.0], [487.0, 309.0], [493.0, 455.5], [495.0, 495.66666666666663], [494.0, 581.0], [509.0, 366.0], [500.0, 357.5], [501.0, 446.5], [503.0, 460.25], [497.0, 498.25], [496.0, 466.99999999999994], [502.0, 360.0], [499.0, 339.5], [498.0, 420.2], [505.0, 348.0], [504.0, 411.0], [511.0, 392.0], [510.0, 376.0], [508.0, 364.5], [507.0, 376.75], [506.0, 391.0], [516.0, 373.5], [525.0, 340.0], [527.0, 435.4615384615385], [528.0, 465.42857142857144], [530.0, 512.0], [529.0, 489.0], [532.0, 584.0], [531.0, 453.0], [534.0, 319.0], [533.0, 499.0], [540.0, 433.0], [539.0, 520.0], [538.0, 299.0], [537.0, 467.0], [536.0, 311.5], [542.0, 384.0], [526.0, 500.33333333333337], [524.0, 399.5], [523.0, 325.0], [522.0, 363.0], [520.0, 330.0], [519.0, 333.0], [518.0, 390.0], [514.0, 369.0], [515.0, 339.0], [513.0, 381.0], [512.0, 391.0], [575.0, 410.0], [592.0, 472.5], [595.0, 448.85714285714283], [594.0, 450.6666666666667], [593.0, 471.6666666666667], [591.0, 434.0], [583.0, 453.0], [600.0, 345.5], [601.0, 566.0], [602.0, 462.3333333333333], [607.0, 455.30000000000007], [605.0, 409.5], [604.0, 559.0], [582.0, 459.0], [590.0, 445.0], [589.0, 476.5], [596.0, 447.0], [588.0, 475.0], [587.0, 444.0], [586.0, 345.0], [585.0, 447.6666666666667], [635.0, 436.8], [609.0, 475.0], [623.0, 346.5], [620.0, 431.0], [621.0, 444.0], [618.0, 461.0], [617.0, 444.2], [616.0, 415.0], [613.0, 565.0], [624.0, 424.3333333333333], [626.0, 444.0], [630.0, 447.6], [631.0, 468.0], [628.0, 458.4], [625.0, 335.0], [634.0, 477.0], [632.0, 444.5], [615.0, 397.0], [614.0, 421.0], [633.0, 417.75], [639.0, 458.25], [638.0, 386.15384615384613], [637.0, 436.1142857142857], [636.0, 453.66666666666663], [653.0, 353.4], [640.0, 435.6666666666667], [641.0, 453.375], [642.0, 429.0], [644.0, 387.0], [643.0, 351.0], [646.0, 342.0], [645.0, 475.0], [650.0, 478.5], [649.0, 379.4], [652.0, 395.3076923076924], [651.0, 419.2], [655.0, 304.0], [654.0, 416.59999999999997], [648.0, 388.6666666666667], [647.0, 451.0], [656.0, 420.5], [657.0, 329.0], [1.0, 47.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[192.59599999999992, 151.10199999999958]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 870.5], [5.0, 860.0], [6.0, 860.0], [7.0, 864.3333333333334], [10.0, 866.3333333333334], [11.0, 857.0], [14.0, 853.0], [15.0, 859.3333333333334], [18.0, 851.0], [20.0, 855.0], [22.0, 847.5], [24.0, 846.5], [26.0, 839.0], [29.0, 849.0], [33.0, 183.4], [32.0, 433.0], [35.0, 570.6666666666666], [34.0, 20.0], [37.0, 850.0], [39.0, 843.0], [38.0, 844.5], [40.0, 857.0], [43.0, 845.6666666666666], [45.0, 849.0], [47.0, 851.3333333333334], [49.0, 847.0], [51.0, 852.3333333333334], [53.0, 851.0], [55.0, 851.6666666666666], [56.0, 849.0], [59.0, 852.5], [58.0, 849.0], [61.0, 850.0], [60.0, 846.0], [63.0, 849.0], [67.0, 851.5], [65.0, 849.0], [64.0, 849.0], [70.0, 850.0], [68.0, 852.0], [75.0, 837.0], [74.0, 843.5], [72.0, 841.0], [73.0, 847.0], [79.0, 834.0], [78.0, 840.0], [76.0, 842.0], [83.0, 834.0], [81.0, 830.0], [80.0, 837.0], [86.0, 831.0], [90.0, 826.0], [89.0, 824.0], [88.0, 829.0], [95.0, 834.5], [93.0, 827.6666666666666], [92.0, 827.0], [99.0, 861.5], [98.0, 847.0], [96.0, 829.0], [103.0, 836.0], [102.0, 839.5], [106.0, 860.0], [104.0, 845.0], [108.0, 844.5], [115.0, 803.0], [114.0, 852.6666666666666], [113.0, 828.0], [112.0, 802.0], [117.0, 837.3333333333334], [122.0, 844.0], [126.0, 993.0], [124.0, 866.8], [134.0, 850.0], [132.0, 802.0], [131.0, 837.0], [129.0, 853.0], [128.0, 838.5], [130.0, 842.0], [141.0, 840.0], [142.0, 877.0], [136.0, 797.0], [150.0, 930.6666666666666], [148.0, 848.3333333333334], [146.0, 1006.0], [144.0, 907.0], [149.0, 855.0], [158.0, 855.0], [156.0, 841.6666666666666], [154.0, 979.0], [152.0, 935.5], [167.0, 1021.0], [166.0, 855.0], [164.0, 792.5], [162.0, 828.5], [160.0, 852.75], [163.0, 854.0], [174.0, 918.0], [172.0, 887.6666666666666], [170.0, 1022.0], [169.0, 1003.0], [168.0, 838.0], [182.0, 941.5], [180.0, 923.0], [178.0, 793.0], [176.0, 873.5], [191.0, 906.5], [189.0, 1024.0], [188.0, 1020.0], [187.0, 1050.5], [185.0, 788.0], [184.0, 901.5], [199.0, 821.0], [198.0, 1028.0], [196.0, 842.0], [194.0, 834.0], [193.0, 840.0], [192.0, 786.0], [207.0, 817.0], [206.0, 788.0], [204.0, 830.0], [203.0, 797.0], [202.0, 790.0], [201.0, 792.0], [200.0, 812.0], [213.0, 846.0], [212.0, 836.0], [211.0, 828.5], [210.0, 805.0], [208.0, 783.0], [221.0, 850.0], [220.0, 769.0], [231.0, 806.0], [228.0, 818.0], [227.0, 796.4000000000001], [226.0, 771.5], [239.0, 838.5], [237.0, 979.0], [236.0, 830.0], [235.0, 813.6666666666666], [233.0, 816.5], [247.0, 830.5], [244.0, 1008.0], [243.0, 993.0], [241.0, 958.0], [240.0, 853.0], [255.0, 822.0], [254.0, 980.0], [252.0, 966.0], [251.0, 909.5], [249.0, 963.3333333333334], [269.0, 976.0], [271.0, 1049.0], [268.0, 910.0], [258.0, 1005.0], [257.0, 983.0], [256.0, 954.0], [266.0, 949.0], [265.0, 1027.0], [264.0, 826.0], [263.0, 997.0], [262.0, 810.0], [260.0, 1021.5], [285.0, 1032.0], [286.0, 1020.0], [284.0, 1017.0], [275.0, 1001.5], [273.0, 1053.0], [272.0, 1055.0], [283.0, 1020.0], [282.0, 992.0], [281.0, 998.5], [279.0, 1020.0], [278.0, 1028.0], [277.0, 1008.0], [300.0, 1040.5], [302.0, 1028.0], [303.0, 1042.0], [301.0, 1032.0], [299.0, 1031.6666666666667], [298.0, 1031.0], [294.0, 1018.0], [293.0, 1029.5], [291.0, 1019.0], [290.0, 1019.5], [289.0, 1040.0], [288.0, 1003.0], [307.0, 1045.0], [319.0, 1030.0], [317.0, 1043.6666666666667], [314.0, 1043.0], [313.0, 1048.0], [312.0, 1043.0], [311.0, 1042.0], [309.0, 1044.5], [306.0, 1038.0], [305.0, 1036.0], [304.0, 1035.0], [335.0, 1021.3333333333334], [334.0, 1010.0], [332.0, 1019.0], [329.0, 1028.0], [325.0, 1024.6666666666667], [324.0, 1034.0], [321.0, 1042.0], [351.0, 1029.0], [349.0, 1009.5], [348.0, 1006.0], [347.0, 1007.0], [345.0, 1022.4], [340.0, 1023.3333333333334], [339.0, 1010.0], [337.0, 1032.0], [367.0, 1000.0], [365.0, 1002.0], [363.0, 1016.625], [364.0, 1018.0], [352.0, 1023.0], [381.0, 1027.0], [380.0, 1005.0], [377.0, 1026.0], [376.0, 989.0], [375.0, 981.0], [373.0, 1004.5], [371.0, 1003.0], [370.0, 1033.0], [397.0, 976.0], [399.0, 1024.0], [396.0, 982.3333333333334], [385.0, 986.0], [384.0, 1002.0], [395.0, 1000.0], [394.0, 1022.0], [393.0, 1022.0], [392.0, 996.0], [391.0, 991.0], [390.0, 994.0], [389.0, 992.0], [412.0, 990.0], [414.0, 971.0], [415.0, 993.5], [411.0, 974.0], [413.0, 993.0], [410.0, 1008.0], [407.0, 987.0], [405.0, 1011.5], [403.0, 993.6666666666666], [401.0, 984.0], [430.0, 1001.0], [428.0, 1021.0], [429.0, 982.0], [424.0, 997.5], [423.0, 1000.0], [418.0, 1005.0], [445.0, 1010.0], [444.0, 1000.0], [443.0, 987.3333333333334], [439.0, 986.3333333333334], [438.0, 997.0], [436.0, 994.0], [435.0, 994.0], [432.0, 1014.0], [462.0, 983.0], [461.0, 988.8], [460.0, 989.5], [454.0, 982.6666666666666], [451.0, 973.0], [450.0, 999.0], [448.0, 988.3333333333334], [477.0, 987.0], [476.0, 988.5], [474.0, 983.5], [473.0, 986.5], [470.0, 983.5], [467.0, 986.0], [465.0, 994.6666666666666], [483.0, 991.0], [493.0, 983.0], [494.0, 984.0], [492.0, 985.0], [491.0, 986.0], [490.0, 979.0], [487.0, 986.5], [484.0, 992.0], [482.0, 985.0], [481.0, 1002.0], [480.0, 978.5], [511.0, 980.0], [508.0, 992.5], [505.0, 972.6666666666666], [502.0, 979.5], [498.0, 984.4], [518.0, 312.0], [523.0, 539.0], [520.0, 650.5], [519.0, 532.0], [540.0, 973.0], [537.0, 979.5], [543.0, 974.0], [530.0, 971.25], [541.0, 975.5], [524.0, 316.5], [525.0, 979.0], [527.0, 965.0], [513.0, 972.0], [517.0, 969.0], [516.0, 968.0], [526.0, 972.0], [522.0, 537.6666666666666], [521.0, 988.0], [531.0, 640.5], [532.0, 326.0], [533.0, 755.3333333333334], [534.0, 642.5], [535.0, 972.0], [562.0, 992.0], [547.0, 315.0], [559.0, 968.0], [544.0, 975.0], [546.0, 970.0], [545.0, 970.0], [558.0, 965.0], [557.0, 974.0], [556.0, 973.0], [554.0, 975.0], [552.0, 978.5], [573.0, 965.5], [571.0, 972.5], [569.0, 973.0], [551.0, 953.0], [548.0, 975.6666666666666], [567.0, 953.0], [566.0, 975.0], [565.0, 973.0], [561.0, 971.0], [560.0, 973.0], [605.0, 969.6666666666666], [581.0, 753.3333333333334], [591.0, 982.5], [577.0, 995.0], [576.0, 973.3333333333334], [579.0, 953.0], [578.0, 975.0], [590.0, 963.0], [588.0, 960.0], [587.0, 975.0], [586.0, 982.0], [584.0, 967.0], [607.0, 488.5], [593.0, 995.0], [592.0, 960.0], [603.0, 950.0], [602.0, 959.0], [600.0, 970.0], [583.0, 963.0], [599.0, 954.0], [598.0, 950.0], [597.0, 959.0], [596.0, 968.0], [636.0, 942.0], [611.0, 348.0], [612.0, 341.0], [614.0, 950.0], [613.0, 968.0], [632.0, 954.5], [615.0, 980.0], [635.0, 958.0], [634.0, 962.0], [610.0, 803.75], [609.0, 340.0], [608.0, 639.0], [622.0, 953.0], [623.0, 954.0], [639.0, 671.0], [624.0, 952.0], [628.0, 949.0], [627.0, 953.0], [631.0, 959.0], [629.0, 953.0], [638.0, 660.0], [637.0, 970.0], [668.0, 468.8333333333333], [645.0, 382.0], [648.0, 438.6], [649.0, 943.0], [653.0, 680.75], [652.0, 496.0], [651.0, 725.5], [650.0, 604.25], [655.0, 708.5], [654.0, 398.0], [646.0, 577.1428571428571], [644.0, 492.16666666666663], [647.0, 662.5], [643.0, 699.75], [642.0, 368.0], [641.0, 617.8], [670.0, 555.75], [669.0, 425.0], [667.0, 516.0], [666.0, 431.7272727272727], [665.0, 635.3333333333333], [664.0, 445.0], [671.0, 421.42857142857144], [656.0, 398.0], [658.0, 514.8333333333334], [657.0, 607.5], [660.0, 466.16666666666663], [659.0, 544.8], [662.0, 458.0], [663.0, 590.6666666666666], [661.0, 598.5], [702.0, 507.1666666666667], [672.0, 439.0], [703.0, 508.8666666666666], [700.0, 484.5], [701.0, 573.0], [698.0, 532.5454545454545], [697.0, 527.9333333333333], [696.0, 494.0], [699.0, 503.85714285714283], [679.0, 459.40000000000003], [677.0, 460.0], [676.0, 525.4], [675.0, 429.75], [674.0, 507.0625], [673.0, 552.0], [695.0, 514.5714285714286], [694.0, 523.5], [693.0, 551.8], [692.0, 523.75], [690.0, 521.8], [689.0, 551.7692307692308], [691.0, 603.0], [688.0, 478.14285714285717], [686.0, 475.0], [687.0, 806.3333333333334], [685.0, 724.6666666666667], [683.0, 450.85714285714283], [684.0, 463.99999999999994], [682.0, 535.1666666666667], [680.0, 536.5], [681.0, 726.9999999999999], [731.0, 909.0], [704.0, 560.25], [705.0, 573.6666666666666], [713.0, 542.2], [712.0, 661.0], [711.0, 531.7142857142857], [710.0, 916.0], [709.0, 914.0], [708.0, 919.0], [728.0, 898.0], [730.0, 906.0], [729.0, 918.0], [732.0, 550.6], [707.0, 613.0], [706.0, 620.3333333333334], [720.0, 578.6666666666666], [727.0, 906.5], [725.0, 903.0], [724.0, 911.0], [723.0, 905.0], [722.0, 919.0], [721.0, 918.0], [734.0, 594.6666666666666], [733.0, 579.75], [718.0, 762.6666666666666], [719.0, 913.0], [717.0, 526.0], [715.0, 696.0], [716.0, 910.0], [764.0, 915.0], [752.0, 727.0], [755.0, 657.5], [757.0, 873.0], [756.0, 913.0], [759.0, 888.0], [758.0, 890.0], [754.0, 591.3333333333334], [753.0, 730.0], [751.0, 658.0], [750.0, 652.25], [748.0, 893.0], [747.0, 910.3333333333334], [745.0, 894.0], [767.0, 894.0], [766.0, 919.0], [765.0, 893.0], [763.0, 896.0], [762.0, 902.0], [760.0, 914.0], [743.0, 894.0], [742.0, 897.0], [741.0, 896.0], [740.0, 896.0], [739.0, 894.0], [738.0, 904.0], [737.0, 906.5], [736.0, 910.0], [795.0, 906.0], [772.0, 656.5], [770.0, 698.0], [769.0, 902.0], [768.0, 872.0], [783.0, 871.0], [782.0, 889.0], [781.0, 874.0], [780.0, 884.0], [779.0, 877.0], [778.0, 899.0], [777.0, 908.0], [776.0, 878.0], [799.0, 658.6666666666666], [791.0, 895.0], [790.0, 896.0], [789.0, 897.0], [788.0, 899.0], [787.0, 913.0], [786.0, 880.0], [785.0, 899.0], [784.0, 910.0], [797.0, 545.0], [796.0, 716.5], [798.0, 668.0], [794.0, 895.0], [793.0, 887.0], [792.0, 879.0], [775.0, 893.0], [774.0, 902.0], [773.0, 916.0], [825.0, 888.0], [819.0, 551.1428571428571], [821.0, 659.0], [826.0, 881.0], [816.0, 900.0], [824.0, 884.0], [807.0, 895.0], [806.0, 880.0], [805.0, 888.0], [804.0, 901.0], [803.0, 893.0], [802.0, 906.5], [800.0, 870.0], [815.0, 889.0], [813.0, 877.0], [812.0, 871.0], [811.0, 879.0], [810.0, 889.0], [809.0, 895.0], [808.0, 898.0], [823.0, 887.0], [822.0, 899.0], [820.0, 888.0], [818.0, 887.0], [817.0, 888.0], [856.0, 887.0], [860.0, 884.0], [846.0, 630.6666666666666], [845.0, 888.0], [847.0, 885.0], [837.0, 890.6], [839.0, 888.0], [838.0, 885.0], [857.0, 932.0], [844.0, 675.5], [843.0, 545.0], [842.0, 886.0], [841.0, 887.0], [840.0, 881.0], [863.0, 911.0], [848.0, 886.0], [852.0, 886.0], [850.0, 883.5], [855.0, 906.0], [854.0, 899.0], [862.0, 920.0], [861.0, 935.0], [859.0, 932.0], [858.0, 942.0], [869.0, 916.0], [891.0, 890.0], [873.0, 620.0], [872.0, 706.75], [875.0, 512.2], [874.0, 942.0], [876.0, 921.0], [879.0, 904.0], [864.0, 884.0], [866.0, 897.0], [865.0, 953.0], [868.0, 899.0], [867.0, 888.0], [870.0, 927.0], [877.0, 957.0], [895.0, 880.0], [882.0, 924.0], [881.0, 905.5], [887.0, 908.3333333333334], [884.0, 936.5], [893.0, 936.0], [892.0, 860.0], [890.0, 883.0], [889.0, 965.0], [921.0, 898.0], [926.0, 668.5], [927.0, 719.0], [914.0, 960.0], [912.0, 883.0], [925.0, 654.3333333333334], [924.0, 949.5], [923.0, 874.0], [920.0, 924.0], [903.0, 950.0], [901.0, 888.0], [900.0, 875.5], [899.0, 943.0], [898.0, 861.0], [896.0, 925.0], [897.0, 966.0], [911.0, 868.0], [910.0, 971.0], [904.0, 961.5], [918.0, 918.3333333333334], [917.0, 919.4], [932.0, 856.3333333333334], [930.0, 526.0], [936.0, 502.0], [940.0, 936.0], [937.0, 861.0], [943.0, 993.0], [942.0, 904.0], [933.0, 488.3333333333333], [934.0, 1006.0], [952.0, 874.0], [935.0, 891.0], [955.0, 522.0], [954.0, 633.5], [953.0, 574.0], [957.0, 721.1428571428571], [959.0, 778.0], [944.0, 687.0], [947.0, 733.25], [948.0, 842.0], [946.0, 787.3333333333334], [958.0, 592.5], [956.0, 522.7], [929.0, 605.2], [928.0, 770.0], [931.0, 597.75], [950.0, 538.4285714285713], [951.0, 711.0], [949.0, 618.25], [987.0, 905.0], [964.0, 675.0], [963.0, 929.0], [965.0, 892.0], [984.0, 968.0], [966.0, 942.0], [962.0, 678.0], [961.0, 726.0], [960.0, 905.0], [975.0, 586.5], [974.0, 908.0], [973.0, 946.6666666666666], [971.0, 892.6666666666666], [968.0, 897.0], [991.0, 999.0], [976.0, 910.0], [978.0, 1005.0], [977.0, 1003.0], [980.0, 965.0], [979.0, 833.0], [983.0, 884.5], [981.0, 826.0], [990.0, 921.0], [989.0, 950.5], [986.0, 802.0], [985.0, 927.0], [999.0, 689.25], [1000.0, 524.5], [1001.0, 761.0], [998.0, 533.0], [997.0, 656.5], [996.0, 961.0], [994.0, 795.0], [993.0, 869.5], [1007.0, 506.0], [1006.0, 519.5714285714286], [1005.0, 515.8], [1004.0, 514.0], [1003.0, 535.0], [1002.0, 677.0], [1019.0, 517.3333333333334], [1016.0, 515.3333333333334], [1015.0, 522.0], [1014.0, 518.5], [1013.0, 510.0], [1012.0, 513.0], [1011.0, 512.0], [1010.0, 520.0], [1009.0, 509.0], [1008.0, 512.0], [1034.0, 912.0], [1086.0, 962.0], [1038.0, 533.0], [1036.0, 931.0], [1054.0, 980.0], [1052.0, 921.1249999999999], [1044.0, 986.0], [1040.0, 967.0], [1066.0, 548.0], [1070.0, 874.0], [1064.0, 535.0], [1078.0, 549.0], [1076.0, 992.0], [1056.0, 970.0], [1058.0, 820.0], [1060.0, 914.5], [1084.0, 982.0], [1082.0, 855.0], [1100.0, 812.0], [1098.0, 994.0], [1096.0, 977.0], [1090.0, 995.5], [1088.0, 979.0], [1102.0, 976.0], [1118.0, 970.5], [1116.0, 813.0], [1114.0, 967.0], [1112.0, 970.0], [1110.0, 983.0], [1106.0, 970.0], [1104.0, 975.0], [1126.0, 834.0], [1128.0, 813.0], [1132.0, 941.0], [1150.0, 928.5], [1148.0, 977.0], [1144.0, 985.0], [1142.0, 973.0], [1140.0, 965.0], [1138.0, 982.0], [1136.0, 813.0], [1200.0, 883.0], [1214.0, 996.0], [1178.0, 945.5], [1176.0, 858.0], [1174.0, 975.0], [1170.0, 989.0], [1152.0, 987.0], [1156.0, 990.0], [1158.0, 841.0], [1164.0, 811.0], [1166.0, 980.3333333333334], [1182.0, 810.0], [1204.0, 854.5], [1208.0, 913.0], [1206.0, 913.5], [1198.0, 852.75], [1186.0, 953.0], [1184.0, 842.0], [1188.0, 885.0], [1190.0, 994.0], [1194.0, 823.0], [1196.0, 885.5], [1212.0, 956.5], [1210.0, 988.0], [1222.0, 949.0], [1278.0, 690.8], [1228.0, 956.0], [1226.0, 931.0], [1220.0, 894.5], [1218.0, 926.0], [1216.0, 918.0], [1230.0, 617.0], [1246.0, 618.5], [1244.0, 650.5999999999999], [1242.0, 612.0], [1240.0, 693.5555555555555], [1238.0, 661.125], [1236.0, 741.4285714285714], [1234.0, 639.0], [1266.0, 674.8333333333333], [1264.0, 637.5], [1268.0, 662.875], [1270.0, 691.6], [1272.0, 626.25], [1256.0, 682.25], [1258.0, 675.5], [1260.0, 725.0], [1262.0, 674.6], [1248.0, 685.5], [1250.0, 634.0], [1252.0, 735.3333333333334], [1254.0, 664.3333333333334], [1276.0, 753.0], [1274.0, 687.25], [1294.0, 739.8], [1280.0, 656.4], [1282.0, 757.0], [1284.0, 775.5], [1288.0, 713.0], [1286.0, 745.0], [1290.0, 617.0], [1292.0, 710.25], [1316.0, 820.25], [1318.0, 859.0], [1320.0, 670.4], [1322.0, 716.6], [1324.0, 771.6666666666666], [1326.0, 773.6], [1314.0, 798.25], [1312.0, 825.5], [1342.0, 854.0], [1328.0, 810.25], [1330.0, 865.0], [1332.0, 844.0], [1334.0, 835.25], [1336.0, 774.3333333333334], [1338.0, 769.3333333333334], [1340.0, 758.8], [1298.0, 671.5000000000001], [1302.0, 713.5714285714286], [1304.0, 726.875], [1306.0, 717.5], [1308.0, 709.0], [1310.0, 772.0], [1300.0, 643.75], [1296.0, 686.6666666666666], [1354.0, 809.6666666666666], [1376.0, 733.6000000000001], [1358.0, 610.5], [1392.0, 860.5], [1394.0, 860.6666666666666], [1398.0, 859.6666666666666], [1396.0, 845.8333333333334], [1400.0, 822.2857142857143], [1402.0, 776.0], [1404.0, 812.8], [1406.0, 726.5714285714286], [1356.0, 808.6666666666666], [1352.0, 822.4545454545455], [1350.0, 775.0], [1344.0, 842.0], [1346.0, 851.0], [1348.0, 847.2222222222222], [1374.0, 621.5], [1372.0, 717.0], [1370.0, 784.5], [1368.0, 863.2857142857143], [1366.0, 859.75], [1364.0, 842.3333333333334], [1362.0, 847.6666666666666], [1360.0, 822.0], [1378.0, 721.9999999999999], [1380.0, 745.8], [1382.0, 788.3333333333334], [1384.0, 792.4], [1388.0, 851.3333333333334], [1390.0, 851.75], [1386.0, 676.3333333333334], [1420.0, 807.0], [1442.0, 710.25], [1410.0, 677.3333333333334], [1414.0, 787.0], [1416.0, 782.0], [1422.0, 772.0], [1456.0, 700.0], [1458.0, 714.0], [1460.0, 690.3333333333334], [1464.0, 702.0], [1470.0, 728.5], [1462.0, 673.6666666666666], [1444.0, 710.0], [1446.0, 726.1111111111111], [1450.0, 714.0], [1452.0, 724.0], [1454.0, 710.0], [1448.0, 711.3333333333334], [1412.0, 757.3333333333334], [1436.0, 728.0], [1434.0, 724.0], [1432.0, 668.3333333333334], [1430.0, 699.75], [1428.0, 674.3333333333334], [1424.0, 771.0], [1426.0, 760.0], [1520.0, 751.0], [1478.0, 669.9285714285714], [1472.0, 712.0], [1476.0, 751.0], [1502.0, 687.0], [1500.0, 682.0], [1498.0, 701.5], [1496.0, 701.3333333333334], [1494.0, 711.3333333333334], [1490.0, 685.0], [1488.0, 694.5], [1522.0, 697.0], [1526.0, 699.0], [1528.0, 686.0], [1530.0, 693.0], [1532.0, 709.3333333333334], [1534.0, 684.0], [1524.0, 670.0], [1504.0, 677.0], [1506.0, 696.0], [1510.0, 704.0], [1508.0, 713.0], [1512.0, 704.0], [1514.0, 701.0], [1516.0, 698.5], [1518.0, 736.0], [1486.0, 711.3333333333334], [1484.0, 704.5], [1542.0, 697.5], [1538.0, 690.0], [1544.0, 704.0], [1546.0, 713.0], [1548.0, 680.0], [1550.0, 677.3333333333334], [1540.0, 681.3333333333334], [1536.0, 685.0], [1554.0, 679.0], [1552.0, 681.5], [1079.0, 913.125], [1063.0, 527.6666666666666], [1037.0, 751.4], [1053.0, 991.0], [1043.0, 911.5], [1041.0, 979.0], [1071.0, 956.0], [1065.0, 523.0], [1077.0, 977.0], [1075.0, 922.3333333333334], [1073.0, 992.0], [1039.0, 891.5], [1087.0, 688.5], [1057.0, 803.0], [1061.0, 983.0], [1085.0, 810.0], [1083.0, 982.0], [1081.0, 902.0], [1103.0, 709.5], [1147.0, 916.6666666666666], [1099.0, 709.5], [1097.0, 864.3333333333334], [1091.0, 865.0], [1101.0, 901.0], [1119.0, 969.0], [1115.0, 975.0], [1113.0, 966.0], [1111.0, 821.0], [1109.0, 972.0], [1107.0, 971.0], [1105.0, 824.0], [1151.0, 813.0], [1125.0, 859.0], [1123.0, 906.0], [1127.0, 964.0], [1129.0, 836.0], [1131.0, 978.0], [1135.0, 977.0], [1133.0, 855.0], [1145.0, 911.0], [1143.0, 980.0], [1141.0, 856.0], [1155.0, 948.5], [1203.0, 987.0], [1179.0, 804.0], [1177.0, 977.0], [1171.0, 830.5], [1169.0, 982.0], [1175.0, 979.0], [1181.0, 974.0], [1183.0, 853.0], [1153.0, 840.0], [1157.0, 926.0], [1161.0, 968.0], [1159.0, 986.0], [1163.0, 922.5], [1167.0, 979.0], [1201.0, 915.0], [1199.0, 806.5], [1215.0, 917.0], [1187.0, 981.0], [1189.0, 989.0], [1193.0, 974.0], [1195.0, 981.0], [1213.0, 879.0], [1209.0, 910.0], [1265.0, 943.0], [1269.0, 680.6666666666667], [1229.0, 664.0], [1227.0, 877.0], [1225.0, 909.0], [1223.0, 871.5], [1217.0, 997.0], [1231.0, 755.25], [1247.0, 746.8888888888889], [1245.0, 624.3333333333334], [1241.0, 684.8333333333334], [1237.0, 675.0], [1233.0, 908.0], [1235.0, 616.3333333333334], [1239.0, 649.0], [1243.0, 719.8], [1267.0, 673.1428571428571], [1273.0, 727.6], [1271.0, 699.1666666666667], [1257.0, 681.4285714285714], [1259.0, 690.4], [1263.0, 929.0], [1261.0, 754.5], [1255.0, 687.4], [1279.0, 777.5], [1249.0, 680.6], [1251.0, 652.04], [1253.0, 687.0], [1277.0, 615.3333333333334], [1275.0, 670.0], [1295.0, 679.0], [1301.0, 678.8333333333334], [1281.0, 698.25], [1283.0, 758.0], [1285.0, 621.5], [1287.0, 886.0], [1289.0, 598.0], [1291.0, 784.0], [1317.0, 778.6666666666666], [1319.0, 872.0], [1323.0, 837.0], [1321.0, 798.5], [1325.0, 689.3333333333334], [1327.0, 712.5], [1315.0, 761.3333333333334], [1313.0, 774.6666666666666], [1341.0, 691.0], [1343.0, 858.0], [1329.0, 816.0], [1333.0, 897.0], [1331.0, 854.3333333333334], [1335.0, 852.5], [1337.0, 770.0], [1339.0, 747.0], [1293.0, 642.5], [1297.0, 654.8888888888889], [1303.0, 672.7777777777778], [1309.0, 742.5], [1311.0, 780.0], [1307.0, 805.5], [1305.0, 703.0], [1299.0, 657.5000000000001], [1357.0, 857.2], [1399.0, 831.75], [1393.0, 833.5], [1395.0, 856.75], [1359.0, 848.2], [1397.0, 835.3333333333334], [1401.0, 862.0], [1403.0, 824.5], [1405.0, 811.1666666666666], [1407.0, 756.8], [1355.0, 833.8571428571429], [1353.0, 801.5], [1351.0, 815.3333333333334], [1375.0, 673.2], [1347.0, 866.0], [1345.0, 864.8], [1349.0, 854.5], [1373.0, 736.3333333333333], [1371.0, 871.3333333333334], [1367.0, 832.0], [1365.0, 863.75], [1377.0, 682.0], [1379.0, 729.5], [1383.0, 633.0], [1385.0, 808.2], [1387.0, 688.9999999999999], [1389.0, 864.0], [1391.0, 855.3333333333334], [1381.0, 728.0], [1459.0, 674.6666666666666], [1411.0, 705.75], [1413.0, 663.0], [1415.0, 774.0], [1419.0, 791.6666666666666], [1421.0, 781.0], [1423.0, 771.0], [1457.0, 710.0], [1461.0, 703.5], [1441.0, 636.0], [1463.0, 690.0], [1467.0, 714.5], [1469.0, 708.0], [1471.0, 717.0], [1443.0, 655.0], [1445.0, 705.5], [1447.0, 710.6666666666666], [1449.0, 717.6666666666666], [1451.0, 732.0], [1453.0, 707.0], [1455.0, 690.0], [1409.0, 708.5], [1439.0, 725.0], [1435.0, 781.0], [1433.0, 751.0], [1431.0, 685.25], [1429.0, 700.3333333333333], [1427.0, 728.0], [1425.0, 754.0], [1521.0, 695.0], [1493.0, 687.5], [1503.0, 718.0], [1477.0, 714.0], [1475.0, 702.0], [1501.0, 658.0], [1499.0, 682.3333333333334], [1491.0, 704.4], [1489.0, 683.0], [1487.0, 681.0], [1523.0, 686.6250000000001], [1525.0, 679.0], [1529.0, 693.25], [1531.0, 743.0], [1533.0, 682.5], [1535.0, 729.0], [1505.0, 659.0], [1511.0, 702.5], [1513.0, 698.0], [1517.0, 701.5], [1519.0, 744.0], [1485.0, 696.25], [1483.0, 698.0], [1481.0, 717.5], [1479.0, 711.0], [1543.0, 691.0], [1541.0, 671.0], [1547.0, 684.0], [1549.0, 683.0], [1551.0, 680.0], [1539.0, 688.4], [1537.0, 686.6666666666666], [1555.0, 679.0], [1553.0, 705.5]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[932.0713333333349, 756.7426666666679]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 7.75], [3.0, 7.666666666666668], [4.0, 6.348837209302325], [5.0, 6.169811320754717], [6.0, 4.4], [7.0, 8.947368421052632], [8.0, 16.0], [9.0, 17.333333333333336], [10.0, 44.0], [11.0, 27.0], [12.0, 27.5], [13.0, 45.0], [15.0, 31.0], [17.0, 36.0], [18.0, 41.6], [19.0, 35.83333333333333], [20.0, 36.94117647058823], [21.0, 37.714285714285715], [22.0, 37.14285714285714], [23.0, 31.965517241379313], [24.0, 35.6], [25.0, 37.54166666666667], [26.0, 41.6], [27.0, 36.22727272727272], [28.0, 38.859999999999985], [29.0, 39.19512195121952], [30.0, 38.11627906976744], [31.0, 40.59375], [32.0, 42.87755102040817], [33.0, 38.63636363636364], [35.0, 41.92857142857143], [34.0, 39.805555555555564], [37.0, 39.93103448275862], [36.0, 41.83333333333333], [39.0, 38.717391304347814], [38.0, 41.16176470588235], [40.0, 39.42647058823531], [41.0, 38.75641025641024], [42.0, 39.96923076923075], [43.0, 40.621621621621614], [44.0, 40.452830188679236], [45.0, 40.46153846153847], [47.0, 40.999999999999986], [46.0, 42.192982456140335], [49.0, 41.24675324675325], [48.0, 41.122448979591816], [51.0, 42.85714285714286], [50.0, 41.66176470588235], [53.0, 45.027777777777786], [52.0, 43.86274509803922], [54.0, 41.68181818181819], [55.0, 44.57446808510638], [57.0, 42.553571428571416], [56.0, 43.026315789473685], [59.0, 45.13333333333333], [58.0, 45.131578947368425], [60.0, 46.44827586206897], [61.0, 43.0], [62.0, 42.52173913043479], [63.0, 44.33333333333333], [66.0, 44.3125], [64.0, 45.714285714285715], [65.0, 47.10526315789474], [67.0, 46.05882352941177], [70.0, 43.300000000000004], [71.0, 47.54545454545454], [68.0, 46.2], [69.0, 43.266666666666666], [74.0, 45.93333333333333], [75.0, 46.5], [73.0, 41.833333333333336], [72.0, 46.266666666666666], [79.0, 42.95238095238095], [77.0, 47.5], [76.0, 43.18181818181819], [78.0, 47.27272727272727], [80.0, 45.37499999999999], [81.0, 46.45454545454545], [83.0, 42.77777777777778], [82.0, 45.4], [85.0, 38.75], [84.0, 39.0], [87.0, 46.0], [86.0, 46.142857142857146], [90.0, 47.333333333333336], [91.0, 40.666666666666664], [89.0, 44.75], [88.0, 50.5], [95.0, 36.0], [99.0, 43.0], [97.0, 42.666666666666664], [103.0, 35.0], [101.0, 44.0], [100.0, 37.0], [106.0, 50.0], [104.0, 43.0], [133.0, 44.0], [132.0, 45.0], [153.0, 42.0], [159.0, 47.0], [175.0, 41.25], [181.0, 36.0], [176.0, 39.5], [248.0, 44.42857142857143], [249.0, 46.0], [271.0, 51.44444444444444], [265.0, 40.06666666666667], [267.0, 36.0], [264.0, 61.77777777777778], [262.0, 35.0], [258.0, 36.0], [269.0, 41.5], [266.0, 24.0], [260.0, 10.6], [261.0, 9.0], [280.0, 23.0], [286.0, 37.0], [283.0, 62.5], [282.0, 44.66666666666667], [281.0, 35.375], [279.0, 45.33333333333333], [277.0, 31.833333333333332], [275.0, 23.0], [274.0, 32.14285714285714], [272.0, 54.875], [273.0, 52.91666666666667], [289.0, 56.87096774193547], [295.0, 44.590909090909086], [290.0, 45.5], [299.0, 45.41176470588235], [298.0, 55.18181818181818], [296.0, 51.625], [303.0, 45.6], [292.0, 51.6], [294.0, 40.666666666666664], [312.0, 48.25], [313.0, 47.0], [315.0, 55.63636363636364], [311.0, 48.833333333333336], [304.0, 48.0], [310.0, 46.333333333333336], [318.0, 41.666666666666664], [321.0, 53.588235294117645], [324.0, 58.07142857142857], [322.0, 56.61538461538462], [323.0, 30.25], [331.0, 54.0], [1.0, 13.666666666666666]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[77.23966666666658, 40.101666666666596]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1555.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 18650.0, "minX": 1.6690176E12, "maxY": 39350.0, "series": [{"data": [[1.6690176E12, 18650.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6690176E12, 39350.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6690176E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 40.101666666666596, "minX": 1.6690176E12, "maxY": 756.7426666666679, "series": [{"data": [[1.6690176E12, 151.10199999999958]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6690176E12, 756.7426666666679]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6690176E12, 40.101666666666596]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6690176E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 40.01600000000004, "minX": 1.6690176E12, "maxY": 756.5953333333327, "series": [{"data": [[1.6690176E12, 151.08999999999972]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6690176E12, 756.5953333333327]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6690176E12, 40.01600000000004]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6690176E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 5.935000000000008, "minX": 1.6690176E12, "maxY": 7.073333333333328, "series": [{"data": [[1.6690176E12, 5.935000000000008]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6690176E12, 7.073333333333328]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6690176E12, 6.788333333333332]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6690176E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.6690176E12, "maxY": 1064.0, "series": [{"data": [[1.6690176E12, 1064.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6690176E12, 887.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6690176E12, 1018.9899999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6690176E12, 970.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6690176E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6690176E12, 62.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6690176E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 39.0, "minX": 389.0, "maxY": 940.0, "series": [{"data": [[1101.0, 940.0], [653.0, 471.0], [1294.0, 713.0], [1423.0, 256.0], [754.0, 39.0], [1529.0, 55.0], [389.0, 48.0], [847.0, 41.0], [1010.0, 42.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1529.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 38.5, "minX": 389.0, "maxY": 940.0, "series": [{"data": [[1101.0, 940.0], [653.0, 471.0], [1294.0, 713.0], [1423.0, 256.0], [754.0, 38.5], [1529.0, 55.0], [389.0, 48.0], [847.0, 41.0], [1010.0, 42.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1529.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.6690176E12, "maxY": 150.0, "series": [{"data": [[1.6690176E12, 150.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6690176E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.6690176E12, "maxY": 150.0, "series": [{"data": [[1.6690176E12, 150.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6690176E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.6690176E12, "maxY": 50.0, "series": [{"data": [[1.6690176E12, 50.0]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.6690176E12, 50.0]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.6690176E12, 50.0]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6690176E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.6690176E12, "maxY": 150.0, "series": [{"data": [[1.6690176E12, 150.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6690176E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

