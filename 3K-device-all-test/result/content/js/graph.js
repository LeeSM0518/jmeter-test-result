/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 824.0, "series": [{"data": [[0.0, 4.0], [0.1, 6.0], [0.2, 8.0], [0.3, 18.0], [0.4, 19.0], [0.5, 22.0], [0.6, 23.0], [0.7, 23.0], [0.8, 23.0], [0.9, 24.0], [1.0, 24.0], [1.1, 25.0], [1.2, 26.0], [1.3, 26.0], [1.4, 26.0], [1.5, 27.0], [1.6, 27.0], [1.7, 28.0], [1.8, 28.0], [1.9, 28.0], [2.0, 28.0], [2.1, 29.0], [2.2, 29.0], [2.3, 29.0], [2.4, 29.0], [2.5, 29.0], [2.6, 29.0], [2.7, 30.0], [2.8, 30.0], [2.9, 30.0], [3.0, 30.0], [3.1, 30.0], [3.2, 30.0], [3.3, 30.0], [3.4, 31.0], [3.5, 31.0], [3.6, 31.0], [3.7, 31.0], [3.8, 31.0], [3.9, 31.0], [4.0, 32.0], [4.1, 32.0], [4.2, 32.0], [4.3, 32.0], [4.4, 33.0], [4.5, 33.0], [4.6, 33.0], [4.7, 33.0], [4.8, 33.0], [4.9, 33.0], [5.0, 34.0], [5.1, 34.0], [5.2, 34.0], [5.3, 34.0], [5.4, 35.0], [5.5, 35.0], [5.6, 35.0], [5.7, 35.0], [5.8, 35.0], [5.9, 35.0], [6.0, 36.0], [6.1, 36.0], [6.2, 36.0], [6.3, 36.0], [6.4, 36.0], [6.5, 36.0], [6.6, 37.0], [6.7, 37.0], [6.8, 37.0], [6.9, 37.0], [7.0, 37.0], [7.1, 37.0], [7.2, 38.0], [7.3, 38.0], [7.4, 38.0], [7.5, 38.0], [7.6, 38.0], [7.7, 38.0], [7.8, 38.0], [7.9, 39.0], [8.0, 39.0], [8.1, 39.0], [8.2, 39.0], [8.3, 39.0], [8.4, 39.0], [8.5, 39.0], [8.6, 39.0], [8.7, 39.0], [8.8, 40.0], [8.9, 40.0], [9.0, 40.0], [9.1, 40.0], [9.2, 40.0], [9.3, 40.0], [9.4, 40.0], [9.5, 40.0], [9.6, 40.0], [9.7, 40.0], [9.8, 40.0], [9.9, 40.0], [10.0, 40.0], [10.1, 40.0], [10.2, 41.0], [10.3, 41.0], [10.4, 41.0], [10.5, 41.0], [10.6, 41.0], [10.7, 41.0], [10.8, 41.0], [10.9, 41.0], [11.0, 41.0], [11.1, 41.0], [11.2, 41.0], [11.3, 42.0], [11.4, 42.0], [11.5, 42.0], [11.6, 42.0], [11.7, 42.0], [11.8, 42.0], [11.9, 42.0], [12.0, 42.0], [12.1, 42.0], [12.2, 42.0], [12.3, 42.0], [12.4, 42.0], [12.5, 42.0], [12.6, 42.0], [12.7, 43.0], [12.8, 43.0], [12.9, 43.0], [13.0, 43.0], [13.1, 43.0], [13.2, 43.0], [13.3, 43.0], [13.4, 43.0], [13.5, 43.0], [13.6, 43.0], [13.7, 43.0], [13.8, 43.0], [13.9, 43.0], [14.0, 43.0], [14.1, 43.0], [14.2, 44.0], [14.3, 44.0], [14.4, 44.0], [14.5, 44.0], [14.6, 44.0], [14.7, 44.0], [14.8, 44.0], [14.9, 44.0], [15.0, 44.0], [15.1, 44.0], [15.2, 44.0], [15.3, 44.0], [15.4, 44.0], [15.5, 44.0], [15.6, 44.0], [15.7, 44.0], [15.8, 44.0], [15.9, 45.0], [16.0, 45.0], [16.1, 45.0], [16.2, 45.0], [16.3, 45.0], [16.4, 45.0], [16.5, 45.0], [16.6, 45.0], [16.7, 45.0], [16.8, 45.0], [16.9, 45.0], [17.0, 45.0], [17.1, 45.0], [17.2, 45.0], [17.3, 45.0], [17.4, 45.0], [17.5, 45.0], [17.6, 45.0], [17.7, 45.0], [17.8, 45.0], [17.9, 46.0], [18.0, 46.0], [18.1, 46.0], [18.2, 46.0], [18.3, 46.0], [18.4, 46.0], [18.5, 46.0], [18.6, 46.0], [18.7, 46.0], [18.8, 46.0], [18.9, 46.0], [19.0, 46.0], [19.1, 46.0], [19.2, 46.0], [19.3, 46.0], [19.4, 46.0], [19.5, 46.0], [19.6, 46.0], [19.7, 46.0], [19.8, 46.0], [19.9, 46.0], [20.0, 47.0], [20.1, 47.0], [20.2, 47.0], [20.3, 47.0], [20.4, 47.0], [20.5, 47.0], [20.6, 47.0], [20.7, 47.0], [20.8, 47.0], [20.9, 47.0], [21.0, 47.0], [21.1, 47.0], [21.2, 47.0], [21.3, 47.0], [21.4, 47.0], [21.5, 47.0], [21.6, 47.0], [21.7, 47.0], [21.8, 47.0], [21.9, 47.0], [22.0, 47.0], [22.1, 47.0], [22.2, 47.0], [22.3, 47.0], [22.4, 48.0], [22.5, 48.0], [22.6, 48.0], [22.7, 48.0], [22.8, 48.0], [22.9, 48.0], [23.0, 48.0], [23.1, 48.0], [23.2, 48.0], [23.3, 48.0], [23.4, 48.0], [23.5, 48.0], [23.6, 48.0], [23.7, 48.0], [23.8, 48.0], [23.9, 48.0], [24.0, 48.0], [24.1, 48.0], [24.2, 48.0], [24.3, 48.0], [24.4, 48.0], [24.5, 48.0], [24.6, 48.0], [24.7, 48.0], [24.8, 48.0], [24.9, 48.0], [25.0, 48.0], [25.1, 48.0], [25.2, 48.0], [25.3, 49.0], [25.4, 49.0], [25.5, 49.0], [25.6, 49.0], [25.7, 49.0], [25.8, 49.0], [25.9, 49.0], [26.0, 49.0], [26.1, 49.0], [26.2, 49.0], [26.3, 49.0], [26.4, 49.0], [26.5, 49.0], [26.6, 49.0], [26.7, 49.0], [26.8, 49.0], [26.9, 49.0], [27.0, 49.0], [27.1, 49.0], [27.2, 49.0], [27.3, 49.0], [27.4, 49.0], [27.5, 49.0], [27.6, 49.0], [27.7, 49.0], [27.8, 49.0], [27.9, 49.0], [28.0, 49.0], [28.1, 49.0], [28.2, 49.0], [28.3, 49.0], [28.4, 50.0], [28.5, 50.0], [28.6, 50.0], [28.7, 50.0], [28.8, 50.0], [28.9, 50.0], [29.0, 50.0], [29.1, 50.0], [29.2, 50.0], [29.3, 50.0], [29.4, 50.0], [29.5, 50.0], [29.6, 50.0], [29.7, 50.0], [29.8, 50.0], [29.9, 50.0], [30.0, 50.0], [30.1, 50.0], [30.2, 50.0], [30.3, 50.0], [30.4, 50.0], [30.5, 50.0], [30.6, 50.0], [30.7, 50.0], [30.8, 50.0], [30.9, 50.0], [31.0, 50.0], [31.1, 51.0], [31.2, 51.0], [31.3, 51.0], [31.4, 51.0], [31.5, 51.0], [31.6, 51.0], [31.7, 51.0], [31.8, 51.0], [31.9, 51.0], [32.0, 51.0], [32.1, 51.0], [32.2, 51.0], [32.3, 51.0], [32.4, 51.0], [32.5, 51.0], [32.6, 51.0], [32.7, 51.0], [32.8, 51.0], [32.9, 51.0], [33.0, 51.0], [33.1, 51.0], [33.2, 51.0], [33.3, 51.0], [33.4, 51.0], [33.5, 51.0], [33.6, 51.0], [33.7, 51.0], [33.8, 51.0], [33.9, 51.0], [34.0, 51.0], [34.1, 51.0], [34.2, 51.0], [34.3, 51.0], [34.4, 51.0], [34.5, 51.0], [34.6, 52.0], [34.7, 52.0], [34.8, 52.0], [34.9, 52.0], [35.0, 52.0], [35.1, 52.0], [35.2, 52.0], [35.3, 52.0], [35.4, 52.0], [35.5, 52.0], [35.6, 52.0], [35.7, 52.0], [35.8, 52.0], [35.9, 52.0], [36.0, 52.0], [36.1, 52.0], [36.2, 52.0], [36.3, 52.0], [36.4, 52.0], [36.5, 52.0], [36.6, 52.0], [36.7, 52.0], [36.8, 52.0], [36.9, 52.0], [37.0, 52.0], [37.1, 52.0], [37.2, 52.0], [37.3, 52.0], [37.4, 52.0], [37.5, 52.0], [37.6, 52.0], [37.7, 52.0], [37.8, 52.0], [37.9, 52.0], [38.0, 52.0], [38.1, 52.0], [38.2, 52.0], [38.3, 52.0], [38.4, 53.0], [38.5, 53.0], [38.6, 53.0], [38.7, 53.0], [38.8, 53.0], [38.9, 53.0], [39.0, 53.0], [39.1, 53.0], [39.2, 53.0], [39.3, 53.0], [39.4, 53.0], [39.5, 53.0], [39.6, 53.0], [39.7, 53.0], [39.8, 53.0], [39.9, 53.0], [40.0, 53.0], [40.1, 53.0], [40.2, 53.0], [40.3, 53.0], [40.4, 53.0], [40.5, 53.0], [40.6, 53.0], [40.7, 53.0], [40.8, 53.0], [40.9, 53.0], [41.0, 53.0], [41.1, 53.0], [41.2, 53.0], [41.3, 53.0], [41.4, 53.0], [41.5, 53.0], [41.6, 53.0], [41.7, 53.0], [41.8, 53.0], [41.9, 53.0], [42.0, 53.0], [42.1, 54.0], [42.2, 54.0], [42.3, 54.0], [42.4, 54.0], [42.5, 54.0], [42.6, 54.0], [42.7, 54.0], [42.8, 54.0], [42.9, 54.0], [43.0, 54.0], [43.1, 54.0], [43.2, 54.0], [43.3, 54.0], [43.4, 54.0], [43.5, 54.0], [43.6, 54.0], [43.7, 54.0], [43.8, 54.0], [43.9, 54.0], [44.0, 54.0], [44.1, 54.0], [44.2, 54.0], [44.3, 54.0], [44.4, 54.0], [44.5, 54.0], [44.6, 54.0], [44.7, 54.0], [44.8, 54.0], [44.9, 54.0], [45.0, 54.0], [45.1, 54.0], [45.2, 54.0], [45.3, 54.0], [45.4, 54.0], [45.5, 54.0], [45.6, 54.0], [45.7, 54.0], [45.8, 54.0], [45.9, 55.0], [46.0, 55.0], [46.1, 55.0], [46.2, 55.0], [46.3, 55.0], [46.4, 55.0], [46.5, 55.0], [46.6, 55.0], [46.7, 55.0], [46.8, 55.0], [46.9, 55.0], [47.0, 55.0], [47.1, 55.0], [47.2, 55.0], [47.3, 55.0], [47.4, 55.0], [47.5, 55.0], [47.6, 55.0], [47.7, 55.0], [47.8, 55.0], [47.9, 55.0], [48.0, 55.0], [48.1, 55.0], [48.2, 55.0], [48.3, 55.0], [48.4, 55.0], [48.5, 55.0], [48.6, 55.0], [48.7, 55.0], [48.8, 55.0], [48.9, 55.0], [49.0, 55.0], [49.1, 55.0], [49.2, 55.0], [49.3, 55.0], [49.4, 55.0], [49.5, 56.0], [49.6, 56.0], [49.7, 56.0], [49.8, 56.0], [49.9, 56.0], [50.0, 56.0], [50.1, 56.0], [50.2, 56.0], [50.3, 56.0], [50.4, 56.0], [50.5, 56.0], [50.6, 56.0], [50.7, 56.0], [50.8, 56.0], [50.9, 56.0], [51.0, 56.0], [51.1, 56.0], [51.2, 56.0], [51.3, 56.0], [51.4, 56.0], [51.5, 56.0], [51.6, 56.0], [51.7, 56.0], [51.8, 56.0], [51.9, 56.0], [52.0, 56.0], [52.1, 56.0], [52.2, 56.0], [52.3, 56.0], [52.4, 56.0], [52.5, 56.0], [52.6, 56.0], [52.7, 56.0], [52.8, 56.0], [52.9, 57.0], [53.0, 57.0], [53.1, 57.0], [53.2, 57.0], [53.3, 57.0], [53.4, 57.0], [53.5, 57.0], [53.6, 57.0], [53.7, 57.0], [53.8, 57.0], [53.9, 57.0], [54.0, 57.0], [54.1, 57.0], [54.2, 57.0], [54.3, 57.0], [54.4, 57.0], [54.5, 57.0], [54.6, 57.0], [54.7, 57.0], [54.8, 57.0], [54.9, 57.0], [55.0, 57.0], [55.1, 57.0], [55.2, 57.0], [55.3, 57.0], [55.4, 57.0], [55.5, 57.0], [55.6, 57.0], [55.7, 57.0], [55.8, 57.0], [55.9, 57.0], [56.0, 57.0], [56.1, 57.0], [56.2, 57.0], [56.3, 57.0], [56.4, 58.0], [56.5, 58.0], [56.6, 58.0], [56.7, 58.0], [56.8, 58.0], [56.9, 58.0], [57.0, 58.0], [57.1, 58.0], [57.2, 58.0], [57.3, 58.0], [57.4, 58.0], [57.5, 58.0], [57.6, 58.0], [57.7, 58.0], [57.8, 58.0], [57.9, 58.0], [58.0, 58.0], [58.1, 58.0], [58.2, 58.0], [58.3, 58.0], [58.4, 58.0], [58.5, 58.0], [58.6, 58.0], [58.7, 58.0], [58.8, 58.0], [58.9, 58.0], [59.0, 58.0], [59.1, 58.0], [59.2, 58.0], [59.3, 58.0], [59.4, 58.0], [59.5, 58.0], [59.6, 58.0], [59.7, 58.0], [59.8, 58.0], [59.9, 58.0], [60.0, 58.0], [60.1, 58.0], [60.2, 58.0], [60.3, 58.0], [60.4, 58.0], [60.5, 58.0], [60.6, 59.0], [60.7, 59.0], [60.8, 59.0], [60.9, 59.0], [61.0, 59.0], [61.1, 59.0], [61.2, 59.0], [61.3, 59.0], [61.4, 59.0], [61.5, 59.0], [61.6, 59.0], [61.7, 59.0], [61.8, 59.0], [61.9, 59.0], [62.0, 59.0], [62.1, 59.0], [62.2, 59.0], [62.3, 59.0], [62.4, 59.0], [62.5, 59.0], [62.6, 59.0], [62.7, 59.0], [62.8, 59.0], [62.9, 59.0], [63.0, 59.0], [63.1, 59.0], [63.2, 59.0], [63.3, 59.0], [63.4, 59.0], [63.5, 59.0], [63.6, 59.0], [63.7, 59.0], [63.8, 59.0], [63.9, 59.0], [64.0, 59.0], [64.1, 59.0], [64.2, 59.0], [64.3, 59.0], [64.4, 60.0], [64.5, 60.0], [64.6, 60.0], [64.7, 60.0], [64.8, 60.0], [64.9, 60.0], [65.0, 60.0], [65.1, 60.0], [65.2, 60.0], [65.3, 60.0], [65.4, 60.0], [65.5, 60.0], [65.6, 60.0], [65.7, 60.0], [65.8, 60.0], [65.9, 60.0], [66.0, 60.0], [66.1, 60.0], [66.2, 60.0], [66.3, 60.0], [66.4, 60.0], [66.5, 60.0], [66.6, 60.0], [66.7, 60.0], [66.8, 60.0], [66.9, 60.0], [67.0, 60.0], [67.1, 60.0], [67.2, 60.0], [67.3, 60.0], [67.4, 60.0], [67.5, 60.0], [67.6, 60.0], [67.7, 60.0], [67.8, 60.0], [67.9, 61.0], [68.0, 61.0], [68.1, 61.0], [68.2, 61.0], [68.3, 61.0], [68.4, 61.0], [68.5, 61.0], [68.6, 61.0], [68.7, 61.0], [68.8, 61.0], [68.9, 61.0], [69.0, 61.0], [69.1, 61.0], [69.2, 61.0], [69.3, 61.0], [69.4, 61.0], [69.5, 61.0], [69.6, 61.0], [69.7, 61.0], [69.8, 61.0], [69.9, 61.0], [70.0, 61.0], [70.1, 61.0], [70.2, 61.0], [70.3, 61.0], [70.4, 61.0], [70.5, 62.0], [70.6, 62.0], [70.7, 62.0], [70.8, 62.0], [70.9, 62.0], [71.0, 62.0], [71.1, 62.0], [71.2, 62.0], [71.3, 62.0], [71.4, 62.0], [71.5, 62.0], [71.6, 62.0], [71.7, 62.0], [71.8, 62.0], [71.9, 62.0], [72.0, 62.0], [72.1, 62.0], [72.2, 62.0], [72.3, 62.0], [72.4, 62.0], [72.5, 62.0], [72.6, 62.0], [72.7, 62.0], [72.8, 62.0], [72.9, 62.0], [73.0, 62.0], [73.1, 62.0], [73.2, 63.0], [73.3, 63.0], [73.4, 63.0], [73.5, 63.0], [73.6, 63.0], [73.7, 63.0], [73.8, 63.0], [73.9, 63.0], [74.0, 63.0], [74.1, 63.0], [74.2, 63.0], [74.3, 63.0], [74.4, 63.0], [74.5, 63.0], [74.6, 63.0], [74.7, 63.0], [74.8, 63.0], [74.9, 63.0], [75.0, 63.0], [75.1, 63.0], [75.2, 63.0], [75.3, 63.0], [75.4, 63.0], [75.5, 63.0], [75.6, 63.0], [75.7, 63.0], [75.8, 63.0], [75.9, 64.0], [76.0, 64.0], [76.1, 64.0], [76.2, 64.0], [76.3, 64.0], [76.4, 64.0], [76.5, 64.0], [76.6, 64.0], [76.7, 64.0], [76.8, 64.0], [76.9, 64.0], [77.0, 64.0], [77.1, 64.0], [77.2, 64.0], [77.3, 64.0], [77.4, 64.0], [77.5, 64.0], [77.6, 64.0], [77.7, 64.0], [77.8, 64.0], [77.9, 64.0], [78.0, 65.0], [78.1, 65.0], [78.2, 65.0], [78.3, 65.0], [78.4, 65.0], [78.5, 65.0], [78.6, 65.0], [78.7, 65.0], [78.8, 65.0], [78.9, 65.0], [79.0, 65.0], [79.1, 65.0], [79.2, 65.0], [79.3, 65.0], [79.4, 65.0], [79.5, 65.0], [79.6, 65.0], [79.7, 65.0], [79.8, 65.0], [79.9, 65.0], [80.0, 65.0], [80.1, 65.0], [80.2, 65.0], [80.3, 65.0], [80.4, 65.0], [80.5, 66.0], [80.6, 66.0], [80.7, 66.0], [80.8, 66.0], [80.9, 66.0], [81.0, 66.0], [81.1, 66.0], [81.2, 66.0], [81.3, 66.0], [81.4, 66.0], [81.5, 66.0], [81.6, 66.0], [81.7, 66.0], [81.8, 66.0], [81.9, 66.0], [82.0, 66.0], [82.1, 66.0], [82.2, 66.0], [82.3, 66.0], [82.4, 66.0], [82.5, 66.0], [82.6, 66.0], [82.7, 66.0], [82.8, 67.0], [82.9, 67.0], [83.0, 67.0], [83.1, 67.0], [83.2, 67.0], [83.3, 67.0], [83.4, 67.0], [83.5, 67.0], [83.6, 67.0], [83.7, 67.0], [83.8, 67.0], [83.9, 67.0], [84.0, 67.0], [84.1, 67.0], [84.2, 67.0], [84.3, 67.0], [84.4, 67.0], [84.5, 67.0], [84.6, 67.0], [84.7, 67.0], [84.8, 67.0], [84.9, 67.0], [85.0, 68.0], [85.1, 68.0], [85.2, 68.0], [85.3, 68.0], [85.4, 68.0], [85.5, 68.0], [85.6, 68.0], [85.7, 68.0], [85.8, 68.0], [85.9, 68.0], [86.0, 68.0], [86.1, 68.0], [86.2, 69.0], [86.3, 69.0], [86.4, 69.0], [86.5, 69.0], [86.6, 69.0], [86.7, 69.0], [86.8, 69.0], [86.9, 69.0], [87.0, 69.0], [87.1, 69.0], [87.2, 69.0], [87.3, 69.0], [87.4, 70.0], [87.5, 70.0], [87.6, 70.0], [87.7, 70.0], [87.8, 70.0], [87.9, 70.0], [88.0, 70.0], [88.1, 70.0], [88.2, 70.0], [88.3, 70.0], [88.4, 70.0], [88.5, 70.0], [88.6, 70.0], [88.7, 70.0], [88.8, 70.0], [88.9, 71.0], [89.0, 71.0], [89.1, 71.0], [89.2, 71.0], [89.3, 71.0], [89.4, 71.0], [89.5, 71.0], [89.6, 71.0], [89.7, 71.0], [89.8, 71.0], [89.9, 71.0], [90.0, 71.0], [90.1, 71.0], [90.2, 71.0], [90.3, 71.0], [90.4, 72.0], [90.5, 72.0], [90.6, 72.0], [90.7, 72.0], [90.8, 72.0], [90.9, 72.0], [91.0, 72.0], [91.1, 72.0], [91.2, 72.0], [91.3, 72.0], [91.4, 72.0], [91.5, 73.0], [91.6, 73.0], [91.7, 73.0], [91.8, 73.0], [91.9, 73.0], [92.0, 73.0], [92.1, 73.0], [92.2, 73.0], [92.3, 73.0], [92.4, 74.0], [92.5, 74.0], [92.6, 74.0], [92.7, 74.0], [92.8, 74.0], [92.9, 74.0], [93.0, 74.0], [93.1, 74.0], [93.2, 74.0], [93.3, 74.0], [93.4, 74.0], [93.5, 74.0], [93.6, 74.0], [93.7, 74.0], [93.8, 74.0], [93.9, 74.0], [94.0, 75.0], [94.1, 75.0], [94.2, 75.0], [94.3, 75.0], [94.4, 75.0], [94.5, 75.0], [94.6, 75.0], [94.7, 76.0], [94.8, 76.0], [94.9, 76.0], [95.0, 76.0], [95.1, 76.0], [95.2, 76.0], [95.3, 76.0], [95.4, 77.0], [95.5, 77.0], [95.6, 77.0], [95.7, 77.0], [95.8, 77.0], [95.9, 77.0], [96.0, 77.0], [96.1, 78.0], [96.2, 78.0], [96.3, 78.0], [96.4, 79.0], [96.5, 79.0], [96.6, 79.0], [96.7, 79.0], [96.8, 79.0], [96.9, 79.0], [97.0, 79.0], [97.1, 79.0], [97.2, 80.0], [97.3, 80.0], [97.4, 80.0], [97.5, 80.0], [97.6, 81.0], [97.7, 81.0], [97.8, 81.0], [97.9, 82.0], [98.0, 82.0], [98.1, 82.0], [98.2, 82.0], [98.3, 82.0], [98.4, 83.0], [98.5, 83.0], [98.6, 83.0], [98.7, 84.0], [98.8, 85.0], [98.9, 86.0], [99.0, 87.0], [99.1, 87.0], [99.2, 87.0], [99.3, 88.0], [99.4, 88.0], [99.5, 88.0], [99.6, 90.0], [99.7, 91.0], [99.8, 91.0], [99.9, 94.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 17.0], [0.1, 23.0], [0.2, 24.0], [0.3, 27.0], [0.4, 29.0], [0.5, 36.0], [0.6, 36.0], [0.7, 40.0], [0.8, 43.0], [0.9, 45.0], [1.0, 45.0], [1.1, 45.0], [1.2, 46.0], [1.3, 46.0], [1.4, 47.0], [1.5, 47.0], [1.6, 48.0], [1.7, 49.0], [1.8, 49.0], [1.9, 50.0], [2.0, 51.0], [2.1, 52.0], [2.2, 53.0], [2.3, 54.0], [2.4, 58.0], [2.5, 60.0], [2.6, 61.0], [2.7, 62.0], [2.8, 63.0], [2.9, 73.0], [3.0, 74.0], [3.1, 82.0], [3.2, 85.0], [3.3, 87.0], [3.4, 87.0], [3.5, 87.0], [3.6, 88.0], [3.7, 90.0], [3.8, 91.0], [3.9, 91.0], [4.0, 91.0], [4.1, 92.0], [4.2, 92.0], [4.3, 92.0], [4.4, 93.0], [4.5, 93.0], [4.6, 93.0], [4.7, 94.0], [4.8, 94.0], [4.9, 94.0], [5.0, 95.0], [5.1, 95.0], [5.2, 95.0], [5.3, 96.0], [5.4, 96.0], [5.5, 96.0], [5.6, 97.0], [5.7, 97.0], [5.8, 100.0], [5.9, 100.0], [6.0, 101.0], [6.1, 101.0], [6.2, 102.0], [6.3, 103.0], [6.4, 104.0], [6.5, 105.0], [6.6, 106.0], [6.7, 106.0], [6.8, 107.0], [6.9, 108.0], [7.0, 109.0], [7.1, 111.0], [7.2, 111.0], [7.3, 113.0], [7.4, 114.0], [7.5, 115.0], [7.6, 115.0], [7.7, 117.0], [7.8, 119.0], [7.9, 123.0], [8.0, 128.0], [8.1, 130.0], [8.2, 132.0], [8.3, 134.0], [8.4, 137.0], [8.5, 138.0], [8.6, 139.0], [8.7, 140.0], [8.8, 141.0], [8.9, 142.0], [9.0, 143.0], [9.1, 145.0], [9.2, 146.0], [9.3, 146.0], [9.4, 148.0], [9.5, 149.0], [9.6, 151.0], [9.7, 151.0], [9.8, 152.0], [9.9, 153.0], [10.0, 153.0], [10.1, 154.0], [10.2, 154.0], [10.3, 155.0], [10.4, 156.0], [10.5, 157.0], [10.6, 157.0], [10.7, 157.0], [10.8, 157.0], [10.9, 158.0], [11.0, 159.0], [11.1, 159.0], [11.2, 161.0], [11.3, 162.0], [11.4, 162.0], [11.5, 163.0], [11.6, 165.0], [11.7, 165.0], [11.8, 166.0], [11.9, 167.0], [12.0, 169.0], [12.1, 170.0], [12.2, 170.0], [12.3, 173.0], [12.4, 174.0], [12.5, 175.0], [12.6, 176.0], [12.7, 177.0], [12.8, 178.0], [12.9, 179.0], [13.0, 180.0], [13.1, 181.0], [13.2, 182.0], [13.3, 183.0], [13.4, 184.0], [13.5, 186.0], [13.6, 189.0], [13.7, 191.0], [13.8, 191.0], [13.9, 193.0], [14.0, 194.0], [14.1, 195.0], [14.2, 196.0], [14.3, 197.0], [14.4, 197.0], [14.5, 198.0], [14.6, 199.0], [14.7, 199.0], [14.8, 200.0], [14.9, 201.0], [15.0, 202.0], [15.1, 203.0], [15.2, 203.0], [15.3, 204.0], [15.4, 204.0], [15.5, 204.0], [15.6, 204.0], [15.7, 205.0], [15.8, 205.0], [15.9, 205.0], [16.0, 206.0], [16.1, 206.0], [16.2, 207.0], [16.3, 207.0], [16.4, 207.0], [16.5, 207.0], [16.6, 208.0], [16.7, 208.0], [16.8, 208.0], [16.9, 208.0], [17.0, 209.0], [17.1, 209.0], [17.2, 209.0], [17.3, 209.0], [17.4, 210.0], [17.5, 210.0], [17.6, 210.0], [17.7, 210.0], [17.8, 210.0], [17.9, 211.0], [18.0, 211.0], [18.1, 211.0], [18.2, 212.0], [18.3, 212.0], [18.4, 212.0], [18.5, 212.0], [18.6, 213.0], [18.7, 213.0], [18.8, 213.0], [18.9, 214.0], [19.0, 214.0], [19.1, 214.0], [19.2, 215.0], [19.3, 215.0], [19.4, 215.0], [19.5, 215.0], [19.6, 216.0], [19.7, 216.0], [19.8, 216.0], [19.9, 217.0], [20.0, 217.0], [20.1, 217.0], [20.2, 217.0], [20.3, 217.0], [20.4, 218.0], [20.5, 218.0], [20.6, 218.0], [20.7, 219.0], [20.8, 219.0], [20.9, 219.0], [21.0, 219.0], [21.1, 220.0], [21.2, 220.0], [21.3, 220.0], [21.4, 221.0], [21.5, 221.0], [21.6, 222.0], [21.7, 222.0], [21.8, 222.0], [21.9, 223.0], [22.0, 223.0], [22.1, 224.0], [22.2, 224.0], [22.3, 224.0], [22.4, 224.0], [22.5, 224.0], [22.6, 225.0], [22.7, 225.0], [22.8, 225.0], [22.9, 226.0], [23.0, 226.0], [23.1, 226.0], [23.2, 226.0], [23.3, 227.0], [23.4, 227.0], [23.5, 227.0], [23.6, 227.0], [23.7, 227.0], [23.8, 227.0], [23.9, 227.0], [24.0, 228.0], [24.1, 228.0], [24.2, 228.0], [24.3, 228.0], [24.4, 228.0], [24.5, 228.0], [24.6, 228.0], [24.7, 229.0], [24.8, 229.0], [24.9, 229.0], [25.0, 229.0], [25.1, 230.0], [25.2, 230.0], [25.3, 230.0], [25.4, 230.0], [25.5, 231.0], [25.6, 231.0], [25.7, 231.0], [25.8, 231.0], [25.9, 232.0], [26.0, 232.0], [26.1, 232.0], [26.2, 232.0], [26.3, 233.0], [26.4, 233.0], [26.5, 233.0], [26.6, 233.0], [26.7, 234.0], [26.8, 234.0], [26.9, 234.0], [27.0, 235.0], [27.1, 235.0], [27.2, 235.0], [27.3, 235.0], [27.4, 236.0], [27.5, 236.0], [27.6, 236.0], [27.7, 237.0], [27.8, 237.0], [27.9, 237.0], [28.0, 237.0], [28.1, 237.0], [28.2, 238.0], [28.3, 239.0], [28.4, 239.0], [28.5, 239.0], [28.6, 239.0], [28.7, 240.0], [28.8, 240.0], [28.9, 240.0], [29.0, 241.0], [29.1, 241.0], [29.2, 241.0], [29.3, 242.0], [29.4, 242.0], [29.5, 242.0], [29.6, 242.0], [29.7, 242.0], [29.8, 242.0], [29.9, 243.0], [30.0, 243.0], [30.1, 243.0], [30.2, 244.0], [30.3, 244.0], [30.4, 244.0], [30.5, 245.0], [30.6, 245.0], [30.7, 245.0], [30.8, 246.0], [30.9, 246.0], [31.0, 246.0], [31.1, 247.0], [31.2, 247.0], [31.3, 247.0], [31.4, 247.0], [31.5, 248.0], [31.6, 248.0], [31.7, 249.0], [31.8, 250.0], [31.9, 250.0], [32.0, 251.0], [32.1, 251.0], [32.2, 251.0], [32.3, 252.0], [32.4, 252.0], [32.5, 252.0], [32.6, 253.0], [32.7, 253.0], [32.8, 253.0], [32.9, 253.0], [33.0, 254.0], [33.1, 254.0], [33.2, 254.0], [33.3, 255.0], [33.4, 255.0], [33.5, 255.0], [33.6, 256.0], [33.7, 257.0], [33.8, 257.0], [33.9, 258.0], [34.0, 259.0], [34.1, 259.0], [34.2, 259.0], [34.3, 259.0], [34.4, 259.0], [34.5, 260.0], [34.6, 260.0], [34.7, 260.0], [34.8, 260.0], [34.9, 261.0], [35.0, 262.0], [35.1, 262.0], [35.2, 262.0], [35.3, 263.0], [35.4, 263.0], [35.5, 265.0], [35.6, 265.0], [35.7, 266.0], [35.8, 266.0], [35.9, 266.0], [36.0, 267.0], [36.1, 267.0], [36.2, 268.0], [36.3, 268.0], [36.4, 270.0], [36.5, 271.0], [36.6, 272.0], [36.7, 272.0], [36.8, 273.0], [36.9, 274.0], [37.0, 275.0], [37.1, 277.0], [37.2, 280.0], [37.3, 282.0], [37.4, 283.0], [37.5, 285.0], [37.6, 286.0], [37.7, 287.0], [37.8, 289.0], [37.9, 291.0], [38.0, 291.0], [38.1, 292.0], [38.2, 293.0], [38.3, 296.0], [38.4, 297.0], [38.5, 298.0], [38.6, 299.0], [38.7, 301.0], [38.8, 302.0], [38.9, 303.0], [39.0, 306.0], [39.1, 307.0], [39.2, 309.0], [39.3, 313.0], [39.4, 314.0], [39.5, 315.0], [39.6, 317.0], [39.7, 319.0], [39.8, 323.0], [39.9, 324.0], [40.0, 326.0], [40.1, 329.0], [40.2, 330.0], [40.3, 330.0], [40.4, 332.0], [40.5, 332.0], [40.6, 334.0], [40.7, 334.0], [40.8, 336.0], [40.9, 337.0], [41.0, 339.0], [41.1, 341.0], [41.2, 343.0], [41.3, 347.0], [41.4, 347.0], [41.5, 350.0], [41.6, 351.0], [41.7, 352.0], [41.8, 354.0], [41.9, 355.0], [42.0, 358.0], [42.1, 359.0], [42.2, 368.0], [42.3, 370.0], [42.4, 373.0], [42.5, 378.0], [42.6, 378.0], [42.7, 381.0], [42.8, 382.0], [42.9, 383.0], [43.0, 383.0], [43.1, 384.0], [43.2, 386.0], [43.3, 388.0], [43.4, 390.0], [43.5, 390.0], [43.6, 391.0], [43.7, 392.0], [43.8, 393.0], [43.9, 397.0], [44.0, 398.0], [44.1, 400.0], [44.2, 401.0], [44.3, 401.0], [44.4, 405.0], [44.5, 406.0], [44.6, 407.0], [44.7, 408.0], [44.8, 409.0], [44.9, 410.0], [45.0, 412.0], [45.1, 413.0], [45.2, 416.0], [45.3, 418.0], [45.4, 419.0], [45.5, 420.0], [45.6, 424.0], [45.7, 426.0], [45.8, 440.0], [45.9, 446.0], [46.0, 448.0], [46.1, 449.0], [46.2, 450.0], [46.3, 452.0], [46.4, 455.0], [46.5, 458.0], [46.6, 459.0], [46.7, 459.0], [46.8, 461.0], [46.9, 463.0], [47.0, 466.0], [47.1, 467.0], [47.2, 468.0], [47.3, 470.0], [47.4, 473.0], [47.5, 474.0], [47.6, 475.0], [47.7, 476.0], [47.8, 478.0], [47.9, 480.0], [48.0, 480.0], [48.1, 481.0], [48.2, 483.0], [48.3, 486.0], [48.4, 489.0], [48.5, 491.0], [48.6, 493.0], [48.7, 495.0], [48.8, 498.0], [48.9, 498.0], [49.0, 499.0], [49.1, 500.0], [49.2, 501.0], [49.3, 502.0], [49.4, 503.0], [49.5, 503.0], [49.6, 505.0], [49.7, 506.0], [49.8, 507.0], [49.9, 508.0], [50.0, 508.0], [50.1, 508.0], [50.2, 509.0], [50.3, 510.0], [50.4, 511.0], [50.5, 512.0], [50.6, 512.0], [50.7, 514.0], [50.8, 515.0], [50.9, 517.0], [51.0, 518.0], [51.1, 518.0], [51.2, 519.0], [51.3, 519.0], [51.4, 520.0], [51.5, 521.0], [51.6, 521.0], [51.7, 522.0], [51.8, 523.0], [51.9, 524.0], [52.0, 525.0], [52.1, 526.0], [52.2, 526.0], [52.3, 526.0], [52.4, 527.0], [52.5, 527.0], [52.6, 528.0], [52.7, 529.0], [52.8, 529.0], [52.9, 529.0], [53.0, 530.0], [53.1, 531.0], [53.2, 531.0], [53.3, 532.0], [53.4, 532.0], [53.5, 532.0], [53.6, 532.0], [53.7, 533.0], [53.8, 534.0], [53.9, 535.0], [54.0, 535.0], [54.1, 535.0], [54.2, 536.0], [54.3, 536.0], [54.4, 538.0], [54.5, 538.0], [54.6, 538.0], [54.7, 538.0], [54.8, 539.0], [54.9, 539.0], [55.0, 540.0], [55.1, 541.0], [55.2, 541.0], [55.3, 542.0], [55.4, 542.0], [55.5, 543.0], [55.6, 543.0], [55.7, 544.0], [55.8, 544.0], [55.9, 544.0], [56.0, 544.0], [56.1, 545.0], [56.2, 545.0], [56.3, 546.0], [56.4, 546.0], [56.5, 547.0], [56.6, 548.0], [56.7, 549.0], [56.8, 549.0], [56.9, 549.0], [57.0, 550.0], [57.1, 550.0], [57.2, 550.0], [57.3, 551.0], [57.4, 551.0], [57.5, 551.0], [57.6, 552.0], [57.7, 553.0], [57.8, 554.0], [57.9, 554.0], [58.0, 555.0], [58.1, 555.0], [58.2, 556.0], [58.3, 557.0], [58.4, 557.0], [58.5, 558.0], [58.6, 558.0], [58.7, 559.0], [58.8, 560.0], [58.9, 560.0], [59.0, 561.0], [59.1, 563.0], [59.2, 563.0], [59.3, 564.0], [59.4, 564.0], [59.5, 565.0], [59.6, 565.0], [59.7, 566.0], [59.8, 567.0], [59.9, 567.0], [60.0, 568.0], [60.1, 568.0], [60.2, 569.0], [60.3, 570.0], [60.4, 570.0], [60.5, 571.0], [60.6, 571.0], [60.7, 572.0], [60.8, 573.0], [60.9, 574.0], [61.0, 574.0], [61.1, 575.0], [61.2, 576.0], [61.3, 577.0], [61.4, 578.0], [61.5, 579.0], [61.6, 581.0], [61.7, 582.0], [61.8, 582.0], [61.9, 583.0], [62.0, 584.0], [62.1, 584.0], [62.2, 585.0], [62.3, 587.0], [62.4, 588.0], [62.5, 589.0], [62.6, 589.0], [62.7, 590.0], [62.8, 592.0], [62.9, 592.0], [63.0, 594.0], [63.1, 594.0], [63.2, 596.0], [63.3, 598.0], [63.4, 599.0], [63.5, 601.0], [63.6, 602.0], [63.7, 603.0], [63.8, 603.0], [63.9, 604.0], [64.0, 605.0], [64.1, 605.0], [64.2, 606.0], [64.3, 606.0], [64.4, 607.0], [64.5, 608.0], [64.6, 608.0], [64.7, 609.0], [64.8, 609.0], [64.9, 610.0], [65.0, 611.0], [65.1, 612.0], [65.2, 612.0], [65.3, 614.0], [65.4, 614.0], [65.5, 615.0], [65.6, 615.0], [65.7, 615.0], [65.8, 616.0], [65.9, 617.0], [66.0, 617.0], [66.1, 617.0], [66.2, 618.0], [66.3, 618.0], [66.4, 619.0], [66.5, 620.0], [66.6, 620.0], [66.7, 620.0], [66.8, 620.0], [66.9, 621.0], [67.0, 621.0], [67.1, 622.0], [67.2, 623.0], [67.3, 624.0], [67.4, 624.0], [67.5, 624.0], [67.6, 625.0], [67.7, 625.0], [67.8, 625.0], [67.9, 626.0], [68.0, 626.0], [68.1, 626.0], [68.2, 627.0], [68.3, 627.0], [68.4, 628.0], [68.5, 629.0], [68.6, 629.0], [68.7, 629.0], [68.8, 630.0], [68.9, 630.0], [69.0, 630.0], [69.1, 631.0], [69.2, 631.0], [69.3, 632.0], [69.4, 632.0], [69.5, 632.0], [69.6, 633.0], [69.7, 633.0], [69.8, 634.0], [69.9, 634.0], [70.0, 634.0], [70.1, 635.0], [70.2, 635.0], [70.3, 636.0], [70.4, 637.0], [70.5, 637.0], [70.6, 639.0], [70.7, 639.0], [70.8, 639.0], [70.9, 640.0], [71.0, 640.0], [71.1, 640.0], [71.2, 641.0], [71.3, 642.0], [71.4, 642.0], [71.5, 642.0], [71.6, 643.0], [71.7, 643.0], [71.8, 644.0], [71.9, 645.0], [72.0, 645.0], [72.1, 645.0], [72.2, 646.0], [72.3, 646.0], [72.4, 646.0], [72.5, 646.0], [72.6, 647.0], [72.7, 648.0], [72.8, 648.0], [72.9, 648.0], [73.0, 649.0], [73.1, 650.0], [73.2, 650.0], [73.3, 651.0], [73.4, 652.0], [73.5, 653.0], [73.6, 653.0], [73.7, 653.0], [73.8, 654.0], [73.9, 655.0], [74.0, 655.0], [74.1, 656.0], [74.2, 656.0], [74.3, 657.0], [74.4, 657.0], [74.5, 658.0], [74.6, 659.0], [74.7, 659.0], [74.8, 659.0], [74.9, 660.0], [75.0, 660.0], [75.1, 660.0], [75.2, 661.0], [75.3, 661.0], [75.4, 661.0], [75.5, 662.0], [75.6, 662.0], [75.7, 662.0], [75.8, 663.0], [75.9, 664.0], [76.0, 664.0], [76.1, 664.0], [76.2, 664.0], [76.3, 664.0], [76.4, 665.0], [76.5, 665.0], [76.6, 665.0], [76.7, 666.0], [76.8, 667.0], [76.9, 667.0], [77.0, 667.0], [77.1, 667.0], [77.2, 668.0], [77.3, 668.0], [77.4, 668.0], [77.5, 668.0], [77.6, 669.0], [77.7, 669.0], [77.8, 669.0], [77.9, 670.0], [78.0, 670.0], [78.1, 670.0], [78.2, 670.0], [78.3, 671.0], [78.4, 671.0], [78.5, 671.0], [78.6, 671.0], [78.7, 672.0], [78.8, 672.0], [78.9, 672.0], [79.0, 672.0], [79.1, 672.0], [79.2, 673.0], [79.3, 673.0], [79.4, 673.0], [79.5, 674.0], [79.6, 674.0], [79.7, 675.0], [79.8, 675.0], [79.9, 676.0], [80.0, 676.0], [80.1, 676.0], [80.2, 677.0], [80.3, 677.0], [80.4, 677.0], [80.5, 678.0], [80.6, 678.0], [80.7, 679.0], [80.8, 679.0], [80.9, 679.0], [81.0, 680.0], [81.1, 680.0], [81.2, 680.0], [81.3, 680.0], [81.4, 681.0], [81.5, 681.0], [81.6, 682.0], [81.7, 682.0], [81.8, 682.0], [81.9, 683.0], [82.0, 683.0], [82.1, 684.0], [82.2, 684.0], [82.3, 684.0], [82.4, 685.0], [82.5, 685.0], [82.6, 685.0], [82.7, 685.0], [82.8, 686.0], [82.9, 687.0], [83.0, 687.0], [83.1, 687.0], [83.2, 687.0], [83.3, 688.0], [83.4, 689.0], [83.5, 690.0], [83.6, 690.0], [83.7, 691.0], [83.8, 691.0], [83.9, 692.0], [84.0, 692.0], [84.1, 693.0], [84.2, 693.0], [84.3, 694.0], [84.4, 694.0], [84.5, 694.0], [84.6, 695.0], [84.7, 696.0], [84.8, 697.0], [84.9, 698.0], [85.0, 698.0], [85.1, 698.0], [85.2, 699.0], [85.3, 699.0], [85.4, 700.0], [85.5, 701.0], [85.6, 701.0], [85.7, 702.0], [85.8, 702.0], [85.9, 702.0], [86.0, 703.0], [86.1, 703.0], [86.2, 705.0], [86.3, 705.0], [86.4, 706.0], [86.5, 707.0], [86.6, 707.0], [86.7, 708.0], [86.8, 708.0], [86.9, 709.0], [87.0, 709.0], [87.1, 711.0], [87.2, 711.0], [87.3, 712.0], [87.4, 714.0], [87.5, 715.0], [87.6, 715.0], [87.7, 716.0], [87.8, 716.0], [87.9, 717.0], [88.0, 717.0], [88.1, 718.0], [88.2, 719.0], [88.3, 720.0], [88.4, 721.0], [88.5, 721.0], [88.6, 722.0], [88.7, 723.0], [88.8, 724.0], [88.9, 724.0], [89.0, 724.0], [89.1, 725.0], [89.2, 726.0], [89.3, 727.0], [89.4, 727.0], [89.5, 727.0], [89.6, 728.0], [89.7, 729.0], [89.8, 729.0], [89.9, 729.0], [90.0, 729.0], [90.1, 730.0], [90.2, 730.0], [90.3, 731.0], [90.4, 732.0], [90.5, 733.0], [90.6, 733.0], [90.7, 734.0], [90.8, 735.0], [90.9, 735.0], [91.0, 735.0], [91.1, 736.0], [91.2, 737.0], [91.3, 737.0], [91.4, 738.0], [91.5, 738.0], [91.6, 739.0], [91.7, 739.0], [91.8, 740.0], [91.9, 741.0], [92.0, 741.0], [92.1, 742.0], [92.2, 742.0], [92.3, 743.0], [92.4, 744.0], [92.5, 744.0], [92.6, 745.0], [92.7, 746.0], [92.8, 746.0], [92.9, 746.0], [93.0, 747.0], [93.1, 747.0], [93.2, 748.0], [93.3, 748.0], [93.4, 749.0], [93.5, 749.0], [93.6, 750.0], [93.7, 750.0], [93.8, 751.0], [93.9, 751.0], [94.0, 751.0], [94.1, 752.0], [94.2, 752.0], [94.3, 752.0], [94.4, 752.0], [94.5, 753.0], [94.6, 753.0], [94.7, 753.0], [94.8, 754.0], [94.9, 754.0], [95.0, 755.0], [95.1, 755.0], [95.2, 756.0], [95.3, 757.0], [95.4, 757.0], [95.5, 758.0], [95.6, 758.0], [95.7, 759.0], [95.8, 760.0], [95.9, 760.0], [96.0, 761.0], [96.1, 761.0], [96.2, 763.0], [96.3, 764.0], [96.4, 764.0], [96.5, 765.0], [96.6, 766.0], [96.7, 767.0], [96.8, 767.0], [96.9, 767.0], [97.0, 768.0], [97.1, 769.0], [97.2, 769.0], [97.3, 770.0], [97.4, 771.0], [97.5, 771.0], [97.6, 772.0], [97.7, 773.0], [97.8, 774.0], [97.9, 776.0], [98.0, 778.0], [98.1, 780.0], [98.2, 782.0], [98.3, 782.0], [98.4, 783.0], [98.5, 784.0], [98.6, 786.0], [98.7, 786.0], [98.8, 787.0], [98.9, 787.0], [99.0, 789.0], [99.1, 792.0], [99.2, 793.0], [99.3, 796.0], [99.4, 799.0], [99.5, 800.0], [99.6, 802.0], [99.7, 806.0], [99.8, 810.0], [99.9, 817.0], [100.0, 824.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 6.0], [2.7, 6.0], [2.8, 7.0], [2.9, 7.0], [3.0, 7.0], [3.1, 8.0], [3.2, 9.0], [3.3, 9.0], [3.4, 10.0], [3.5, 10.0], [3.6, 11.0], [3.7, 11.0], [3.8, 12.0], [3.9, 12.0], [4.0, 12.0], [4.1, 13.0], [4.2, 14.0], [4.3, 15.0], [4.4, 15.0], [4.5, 15.0], [4.6, 16.0], [4.7, 17.0], [4.8, 18.0], [4.9, 18.0], [5.0, 18.0], [5.1, 18.0], [5.2, 19.0], [5.3, 19.0], [5.4, 20.0], [5.5, 20.0], [5.6, 21.0], [5.7, 21.0], [5.8, 22.0], [5.9, 22.0], [6.0, 22.0], [6.1, 22.0], [6.2, 22.0], [6.3, 23.0], [6.4, 23.0], [6.5, 23.0], [6.6, 24.0], [6.7, 25.0], [6.8, 25.0], [6.9, 25.0], [7.0, 25.0], [7.1, 26.0], [7.2, 26.0], [7.3, 27.0], [7.4, 27.0], [7.5, 27.0], [7.6, 27.0], [7.7, 27.0], [7.8, 27.0], [7.9, 27.0], [8.0, 28.0], [8.1, 28.0], [8.2, 28.0], [8.3, 28.0], [8.4, 28.0], [8.5, 28.0], [8.6, 28.0], [8.7, 29.0], [8.8, 29.0], [8.9, 29.0], [9.0, 29.0], [9.1, 29.0], [9.2, 30.0], [9.3, 30.0], [9.4, 30.0], [9.5, 30.0], [9.6, 30.0], [9.7, 30.0], [9.8, 31.0], [9.9, 31.0], [10.0, 31.0], [10.1, 31.0], [10.2, 31.0], [10.3, 31.0], [10.4, 31.0], [10.5, 31.0], [10.6, 31.0], [10.7, 32.0], [10.8, 32.0], [10.9, 32.0], [11.0, 32.0], [11.1, 32.0], [11.2, 32.0], [11.3, 32.0], [11.4, 32.0], [11.5, 32.0], [11.6, 32.0], [11.7, 33.0], [11.8, 33.0], [11.9, 33.0], [12.0, 33.0], [12.1, 33.0], [12.2, 33.0], [12.3, 33.0], [12.4, 33.0], [12.5, 33.0], [12.6, 33.0], [12.7, 33.0], [12.8, 34.0], [12.9, 34.0], [13.0, 34.0], [13.1, 34.0], [13.2, 34.0], [13.3, 34.0], [13.4, 34.0], [13.5, 34.0], [13.6, 34.0], [13.7, 34.0], [13.8, 34.0], [13.9, 34.0], [14.0, 34.0], [14.1, 34.0], [14.2, 34.0], [14.3, 34.0], [14.4, 34.0], [14.5, 34.0], [14.6, 34.0], [14.7, 34.0], [14.8, 34.0], [14.9, 34.0], [15.0, 34.0], [15.1, 34.0], [15.2, 34.0], [15.3, 34.0], [15.4, 35.0], [15.5, 35.0], [15.6, 35.0], [15.7, 35.0], [15.8, 35.0], [15.9, 35.0], [16.0, 35.0], [16.1, 35.0], [16.2, 35.0], [16.3, 35.0], [16.4, 35.0], [16.5, 35.0], [16.6, 35.0], [16.7, 35.0], [16.8, 35.0], [16.9, 35.0], [17.0, 35.0], [17.1, 35.0], [17.2, 35.0], [17.3, 35.0], [17.4, 35.0], [17.5, 35.0], [17.6, 35.0], [17.7, 35.0], [17.8, 35.0], [17.9, 35.0], [18.0, 35.0], [18.1, 35.0], [18.2, 35.0], [18.3, 35.0], [18.4, 35.0], [18.5, 35.0], [18.6, 35.0], [18.7, 35.0], [18.8, 35.0], [18.9, 36.0], [19.0, 36.0], [19.1, 36.0], [19.2, 36.0], [19.3, 36.0], [19.4, 36.0], [19.5, 36.0], [19.6, 36.0], [19.7, 36.0], [19.8, 36.0], [19.9, 36.0], [20.0, 36.0], [20.1, 36.0], [20.2, 36.0], [20.3, 36.0], [20.4, 36.0], [20.5, 36.0], [20.6, 36.0], [20.7, 36.0], [20.8, 36.0], [20.9, 36.0], [21.0, 36.0], [21.1, 36.0], [21.2, 36.0], [21.3, 36.0], [21.4, 36.0], [21.5, 36.0], [21.6, 36.0], [21.7, 36.0], [21.8, 36.0], [21.9, 36.0], [22.0, 36.0], [22.1, 36.0], [22.2, 36.0], [22.3, 37.0], [22.4, 37.0], [22.5, 37.0], [22.6, 37.0], [22.7, 37.0], [22.8, 37.0], [22.9, 37.0], [23.0, 37.0], [23.1, 37.0], [23.2, 37.0], [23.3, 37.0], [23.4, 37.0], [23.5, 37.0], [23.6, 37.0], [23.7, 37.0], [23.8, 37.0], [23.9, 37.0], [24.0, 37.0], [24.1, 37.0], [24.2, 37.0], [24.3, 37.0], [24.4, 37.0], [24.5, 37.0], [24.6, 37.0], [24.7, 37.0], [24.8, 37.0], [24.9, 37.0], [25.0, 37.0], [25.1, 37.0], [25.2, 37.0], [25.3, 37.0], [25.4, 37.0], [25.5, 37.0], [25.6, 38.0], [25.7, 38.0], [25.8, 38.0], [25.9, 38.0], [26.0, 38.0], [26.1, 38.0], [26.2, 38.0], [26.3, 38.0], [26.4, 38.0], [26.5, 38.0], [26.6, 38.0], [26.7, 38.0], [26.8, 38.0], [26.9, 38.0], [27.0, 38.0], [27.1, 38.0], [27.2, 38.0], [27.3, 38.0], [27.4, 38.0], [27.5, 38.0], [27.6, 38.0], [27.7, 38.0], [27.8, 38.0], [27.9, 38.0], [28.0, 38.0], [28.1, 38.0], [28.2, 38.0], [28.3, 38.0], [28.4, 38.0], [28.5, 38.0], [28.6, 38.0], [28.7, 38.0], [28.8, 38.0], [28.9, 38.0], [29.0, 38.0], [29.1, 38.0], [29.2, 38.0], [29.3, 38.0], [29.4, 38.0], [29.5, 38.0], [29.6, 38.0], [29.7, 39.0], [29.8, 39.0], [29.9, 39.0], [30.0, 39.0], [30.1, 39.0], [30.2, 39.0], [30.3, 39.0], [30.4, 39.0], [30.5, 39.0], [30.6, 39.0], [30.7, 39.0], [30.8, 39.0], [30.9, 39.0], [31.0, 39.0], [31.1, 39.0], [31.2, 39.0], [31.3, 39.0], [31.4, 39.0], [31.5, 39.0], [31.6, 39.0], [31.7, 39.0], [31.8, 39.0], [31.9, 39.0], [32.0, 39.0], [32.1, 39.0], [32.2, 39.0], [32.3, 39.0], [32.4, 39.0], [32.5, 39.0], [32.6, 39.0], [32.7, 39.0], [32.8, 39.0], [32.9, 39.0], [33.0, 39.0], [33.1, 39.0], [33.2, 39.0], [33.3, 39.0], [33.4, 39.0], [33.5, 39.0], [33.6, 39.0], [33.7, 39.0], [33.8, 39.0], [33.9, 39.0], [34.0, 39.0], [34.1, 40.0], [34.2, 40.0], [34.3, 40.0], [34.4, 40.0], [34.5, 40.0], [34.6, 40.0], [34.7, 40.0], [34.8, 40.0], [34.9, 40.0], [35.0, 40.0], [35.1, 40.0], [35.2, 40.0], [35.3, 40.0], [35.4, 40.0], [35.5, 40.0], [35.6, 40.0], [35.7, 40.0], [35.8, 40.0], [35.9, 40.0], [36.0, 40.0], [36.1, 40.0], [36.2, 40.0], [36.3, 40.0], [36.4, 40.0], [36.5, 40.0], [36.6, 40.0], [36.7, 40.0], [36.8, 40.0], [36.9, 40.0], [37.0, 40.0], [37.1, 40.0], [37.2, 40.0], [37.3, 40.0], [37.4, 40.0], [37.5, 40.0], [37.6, 40.0], [37.7, 40.0], [37.8, 40.0], [37.9, 40.0], [38.0, 40.0], [38.1, 40.0], [38.2, 40.0], [38.3, 40.0], [38.4, 40.0], [38.5, 40.0], [38.6, 40.0], [38.7, 40.0], [38.8, 41.0], [38.9, 41.0], [39.0, 41.0], [39.1, 41.0], [39.2, 41.0], [39.3, 41.0], [39.4, 41.0], [39.5, 41.0], [39.6, 41.0], [39.7, 41.0], [39.8, 41.0], [39.9, 41.0], [40.0, 41.0], [40.1, 41.0], [40.2, 41.0], [40.3, 41.0], [40.4, 41.0], [40.5, 41.0], [40.6, 41.0], [40.7, 41.0], [40.8, 41.0], [40.9, 41.0], [41.0, 41.0], [41.1, 41.0], [41.2, 41.0], [41.3, 41.0], [41.4, 41.0], [41.5, 41.0], [41.6, 41.0], [41.7, 41.0], [41.8, 41.0], [41.9, 41.0], [42.0, 41.0], [42.1, 41.0], [42.2, 41.0], [42.3, 41.0], [42.4, 41.0], [42.5, 41.0], [42.6, 41.0], [42.7, 41.0], [42.8, 41.0], [42.9, 41.0], [43.0, 41.0], [43.1, 41.0], [43.2, 42.0], [43.3, 42.0], [43.4, 42.0], [43.5, 42.0], [43.6, 42.0], [43.7, 42.0], [43.8, 42.0], [43.9, 42.0], [44.0, 42.0], [44.1, 42.0], [44.2, 42.0], [44.3, 42.0], [44.4, 42.0], [44.5, 42.0], [44.6, 42.0], [44.7, 42.0], [44.8, 42.0], [44.9, 42.0], [45.0, 42.0], [45.1, 42.0], [45.2, 42.0], [45.3, 42.0], [45.4, 42.0], [45.5, 42.0], [45.6, 42.0], [45.7, 42.0], [45.8, 42.0], [45.9, 42.0], [46.0, 42.0], [46.1, 42.0], [46.2, 42.0], [46.3, 42.0], [46.4, 42.0], [46.5, 42.0], [46.6, 42.0], [46.7, 42.0], [46.8, 42.0], [46.9, 42.0], [47.0, 42.0], [47.1, 42.0], [47.2, 42.0], [47.3, 42.0], [47.4, 42.0], [47.5, 42.0], [47.6, 42.0], [47.7, 42.0], [47.8, 42.0], [47.9, 43.0], [48.0, 43.0], [48.1, 43.0], [48.2, 43.0], [48.3, 43.0], [48.4, 43.0], [48.5, 43.0], [48.6, 43.0], [48.7, 43.0], [48.8, 43.0], [48.9, 43.0], [49.0, 43.0], [49.1, 43.0], [49.2, 43.0], [49.3, 43.0], [49.4, 43.0], [49.5, 43.0], [49.6, 43.0], [49.7, 43.0], [49.8, 43.0], [49.9, 43.0], [50.0, 43.0], [50.1, 43.0], [50.2, 43.0], [50.3, 43.0], [50.4, 43.0], [50.5, 43.0], [50.6, 43.0], [50.7, 43.0], [50.8, 43.0], [50.9, 43.0], [51.0, 43.0], [51.1, 43.0], [51.2, 43.0], [51.3, 43.0], [51.4, 43.0], [51.5, 43.0], [51.6, 43.0], [51.7, 43.0], [51.8, 43.0], [51.9, 43.0], [52.0, 43.0], [52.1, 43.0], [52.2, 43.0], [52.3, 43.0], [52.4, 43.0], [52.5, 43.0], [52.6, 43.0], [52.7, 43.0], [52.8, 43.0], [52.9, 43.0], [53.0, 43.0], [53.1, 44.0], [53.2, 44.0], [53.3, 44.0], [53.4, 44.0], [53.5, 44.0], [53.6, 44.0], [53.7, 44.0], [53.8, 44.0], [53.9, 44.0], [54.0, 44.0], [54.1, 44.0], [54.2, 44.0], [54.3, 44.0], [54.4, 44.0], [54.5, 44.0], [54.6, 44.0], [54.7, 44.0], [54.8, 44.0], [54.9, 44.0], [55.0, 44.0], [55.1, 44.0], [55.2, 44.0], [55.3, 44.0], [55.4, 44.0], [55.5, 44.0], [55.6, 44.0], [55.7, 44.0], [55.8, 44.0], [55.9, 44.0], [56.0, 44.0], [56.1, 44.0], [56.2, 44.0], [56.3, 44.0], [56.4, 44.0], [56.5, 44.0], [56.6, 44.0], [56.7, 44.0], [56.8, 44.0], [56.9, 44.0], [57.0, 45.0], [57.1, 45.0], [57.2, 45.0], [57.3, 45.0], [57.4, 45.0], [57.5, 45.0], [57.6, 45.0], [57.7, 45.0], [57.8, 45.0], [57.9, 45.0], [58.0, 45.0], [58.1, 45.0], [58.2, 45.0], [58.3, 45.0], [58.4, 45.0], [58.5, 45.0], [58.6, 45.0], [58.7, 45.0], [58.8, 45.0], [58.9, 45.0], [59.0, 45.0], [59.1, 45.0], [59.2, 45.0], [59.3, 45.0], [59.4, 45.0], [59.5, 45.0], [59.6, 45.0], [59.7, 45.0], [59.8, 45.0], [59.9, 45.0], [60.0, 45.0], [60.1, 45.0], [60.2, 45.0], [60.3, 45.0], [60.4, 45.0], [60.5, 45.0], [60.6, 45.0], [60.7, 46.0], [60.8, 46.0], [60.9, 46.0], [61.0, 46.0], [61.1, 46.0], [61.2, 46.0], [61.3, 46.0], [61.4, 46.0], [61.5, 46.0], [61.6, 46.0], [61.7, 46.0], [61.8, 46.0], [61.9, 46.0], [62.0, 46.0], [62.1, 46.0], [62.2, 46.0], [62.3, 46.0], [62.4, 46.0], [62.5, 46.0], [62.6, 46.0], [62.7, 46.0], [62.8, 46.0], [62.9, 46.0], [63.0, 46.0], [63.1, 46.0], [63.2, 46.0], [63.3, 46.0], [63.4, 46.0], [63.5, 46.0], [63.6, 46.0], [63.7, 46.0], [63.8, 46.0], [63.9, 46.0], [64.0, 46.0], [64.1, 46.0], [64.2, 46.0], [64.3, 46.0], [64.4, 46.0], [64.5, 46.0], [64.6, 47.0], [64.7, 47.0], [64.8, 47.0], [64.9, 47.0], [65.0, 47.0], [65.1, 47.0], [65.2, 47.0], [65.3, 47.0], [65.4, 47.0], [65.5, 47.0], [65.6, 47.0], [65.7, 47.0], [65.8, 47.0], [65.9, 47.0], [66.0, 47.0], [66.1, 47.0], [66.2, 47.0], [66.3, 47.0], [66.4, 47.0], [66.5, 47.0], [66.6, 47.0], [66.7, 47.0], [66.8, 47.0], [66.9, 47.0], [67.0, 47.0], [67.1, 47.0], [67.2, 47.0], [67.3, 47.0], [67.4, 48.0], [67.5, 48.0], [67.6, 48.0], [67.7, 48.0], [67.8, 48.0], [67.9, 48.0], [68.0, 48.0], [68.1, 48.0], [68.2, 48.0], [68.3, 48.0], [68.4, 48.0], [68.5, 48.0], [68.6, 48.0], [68.7, 48.0], [68.8, 48.0], [68.9, 48.0], [69.0, 48.0], [69.1, 48.0], [69.2, 48.0], [69.3, 48.0], [69.4, 48.0], [69.5, 48.0], [69.6, 48.0], [69.7, 48.0], [69.8, 48.0], [69.9, 48.0], [70.0, 48.0], [70.1, 48.0], [70.2, 48.0], [70.3, 48.0], [70.4, 48.0], [70.5, 49.0], [70.6, 49.0], [70.7, 49.0], [70.8, 49.0], [70.9, 49.0], [71.0, 49.0], [71.1, 49.0], [71.2, 49.0], [71.3, 49.0], [71.4, 49.0], [71.5, 49.0], [71.6, 49.0], [71.7, 49.0], [71.8, 49.0], [71.9, 49.0], [72.0, 49.0], [72.1, 49.0], [72.2, 49.0], [72.3, 49.0], [72.4, 49.0], [72.5, 49.0], [72.6, 49.0], [72.7, 49.0], [72.8, 49.0], [72.9, 49.0], [73.0, 49.0], [73.1, 49.0], [73.2, 49.0], [73.3, 49.0], [73.4, 49.0], [73.5, 49.0], [73.6, 49.0], [73.7, 50.0], [73.8, 50.0], [73.9, 50.0], [74.0, 50.0], [74.1, 50.0], [74.2, 50.0], [74.3, 50.0], [74.4, 50.0], [74.5, 50.0], [74.6, 50.0], [74.7, 50.0], [74.8, 50.0], [74.9, 50.0], [75.0, 50.0], [75.1, 50.0], [75.2, 50.0], [75.3, 50.0], [75.4, 50.0], [75.5, 51.0], [75.6, 51.0], [75.7, 51.0], [75.8, 51.0], [75.9, 51.0], [76.0, 51.0], [76.1, 51.0], [76.2, 51.0], [76.3, 51.0], [76.4, 51.0], [76.5, 51.0], [76.6, 51.0], [76.7, 51.0], [76.8, 51.0], [76.9, 51.0], [77.0, 51.0], [77.1, 51.0], [77.2, 51.0], [77.3, 52.0], [77.4, 52.0], [77.5, 52.0], [77.6, 52.0], [77.7, 52.0], [77.8, 52.0], [77.9, 52.0], [78.0, 52.0], [78.1, 52.0], [78.2, 52.0], [78.3, 52.0], [78.4, 52.0], [78.5, 52.0], [78.6, 52.0], [78.7, 52.0], [78.8, 52.0], [78.9, 52.0], [79.0, 52.0], [79.1, 53.0], [79.2, 53.0], [79.3, 53.0], [79.4, 53.0], [79.5, 53.0], [79.6, 53.0], [79.7, 53.0], [79.8, 53.0], [79.9, 53.0], [80.0, 53.0], [80.1, 53.0], [80.2, 53.0], [80.3, 53.0], [80.4, 53.0], [80.5, 54.0], [80.6, 54.0], [80.7, 54.0], [80.8, 54.0], [80.9, 54.0], [81.0, 54.0], [81.1, 54.0], [81.2, 54.0], [81.3, 54.0], [81.4, 54.0], [81.5, 54.0], [81.6, 54.0], [81.7, 54.0], [81.8, 54.0], [81.9, 54.0], [82.0, 55.0], [82.1, 55.0], [82.2, 55.0], [82.3, 55.0], [82.4, 55.0], [82.5, 55.0], [82.6, 55.0], [82.7, 55.0], [82.8, 55.0], [82.9, 55.0], [83.0, 55.0], [83.1, 55.0], [83.2, 55.0], [83.3, 55.0], [83.4, 56.0], [83.5, 56.0], [83.6, 56.0], [83.7, 56.0], [83.8, 56.0], [83.9, 56.0], [84.0, 56.0], [84.1, 56.0], [84.2, 56.0], [84.3, 56.0], [84.4, 56.0], [84.5, 56.0], [84.6, 57.0], [84.7, 57.0], [84.8, 57.0], [84.9, 57.0], [85.0, 57.0], [85.1, 57.0], [85.2, 57.0], [85.3, 57.0], [85.4, 58.0], [85.5, 58.0], [85.6, 58.0], [85.7, 58.0], [85.8, 58.0], [85.9, 58.0], [86.0, 58.0], [86.1, 59.0], [86.2, 59.0], [86.3, 59.0], [86.4, 59.0], [86.5, 59.0], [86.6, 59.0], [86.7, 59.0], [86.8, 60.0], [86.9, 60.0], [87.0, 60.0], [87.1, 60.0], [87.2, 60.0], [87.3, 60.0], [87.4, 61.0], [87.5, 61.0], [87.6, 61.0], [87.7, 61.0], [87.8, 61.0], [87.9, 62.0], [88.0, 62.0], [88.1, 62.0], [88.2, 63.0], [88.3, 63.0], [88.4, 63.0], [88.5, 63.0], [88.6, 64.0], [88.7, 64.0], [88.8, 64.0], [88.9, 65.0], [89.0, 65.0], [89.1, 65.0], [89.2, 65.0], [89.3, 66.0], [89.4, 66.0], [89.5, 66.0], [89.6, 66.0], [89.7, 67.0], [89.8, 67.0], [89.9, 68.0], [90.0, 68.0], [90.1, 68.0], [90.2, 68.0], [90.3, 68.0], [90.4, 69.0], [90.5, 69.0], [90.6, 69.0], [90.7, 70.0], [90.8, 71.0], [90.9, 71.0], [91.0, 71.0], [91.1, 72.0], [91.2, 74.0], [91.3, 77.0], [91.4, 78.0], [91.5, 81.0], [91.6, 84.0], [91.7, 88.0], [91.8, 92.0], [91.9, 94.0], [92.0, 95.0], [92.1, 97.0], [92.2, 100.0], [92.3, 104.0], [92.4, 108.0], [92.5, 111.0], [92.6, 113.0], [92.7, 115.0], [92.8, 116.0], [92.9, 118.0], [93.0, 121.0], [93.1, 125.0], [93.2, 128.0], [93.3, 129.0], [93.4, 132.0], [93.5, 141.0], [93.6, 147.0], [93.7, 150.0], [93.8, 151.0], [93.9, 155.0], [94.0, 158.0], [94.1, 160.0], [94.2, 162.0], [94.3, 163.0], [94.4, 165.0], [94.5, 168.0], [94.6, 169.0], [94.7, 170.0], [94.8, 172.0], [94.9, 173.0], [95.0, 175.0], [95.1, 176.0], [95.2, 179.0], [95.3, 179.0], [95.4, 180.0], [95.5, 181.0], [95.6, 182.0], [95.7, 184.0], [95.8, 185.0], [95.9, 186.0], [96.0, 187.0], [96.1, 188.0], [96.2, 189.0], [96.3, 191.0], [96.4, 193.0], [96.5, 193.0], [96.6, 194.0], [96.7, 195.0], [96.8, 196.0], [96.9, 197.0], [97.0, 199.0], [97.1, 199.0], [97.2, 201.0], [97.3, 202.0], [97.4, 204.0], [97.5, 207.0], [97.6, 210.0], [97.7, 213.0], [97.8, 216.0], [97.9, 219.0], [98.0, 223.0], [98.1, 231.0], [98.2, 232.0], [98.3, 234.0], [98.4, 235.0], [98.5, 236.0], [98.6, 238.0], [98.7, 241.0], [98.8, 242.0], [98.9, 243.0], [99.0, 246.0], [99.1, 246.0], [99.2, 247.0], [99.3, 250.0], [99.4, 254.0], [99.5, 257.0], [99.6, 261.0], [99.7, 278.0], [99.8, 280.0], [99.9, 315.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 3000.0, "series": [{"data": [[0.0, 3000.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 174.0], [300.0, 161.0], [600.0, 657.0], [700.0, 423.0], [100.0, 268.0], [200.0, 718.0], [400.0, 151.0], [800.0, 18.0], [500.0, 430.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 2765.0], [300.0, 3.0], [100.0, 149.0], [200.0, 83.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1527.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7473.0, "series": [{"data": [[0.0, 7473.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1527.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 56.6941176470588, "minX": 1.6690179E12, "maxY": 554.8486666666662, "series": [{"data": [[1.66901796E12, 554.8486666666662]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.66901796E12, 81.38]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.6690179E12, 102.66240601503758], [1.66901796E12, 56.6941176470588]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901796E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.0, "maxY": 822.0, "series": [{"data": [[2.0, 63.0], [4.0, 69.0], [5.0, 61.0], [6.0, 61.0], [7.0, 62.0], [8.0, 58.0], [9.0, 52.0], [10.0, 32.5], [11.0, 6.0], [12.0, 33.333333333333336], [13.0, 4.0], [14.0, 19.75], [15.0, 33.5], [16.0, 55.0], [18.0, 61.0], [19.0, 66.0], [20.0, 57.0], [21.0, 58.0], [22.0, 42.5], [23.0, 66.0], [24.0, 35.6], [25.0, 28.571428571428573], [26.0, 30.333333333333332], [27.0, 46.8], [28.0, 29.6], [29.0, 41.75], [30.0, 28.666666666666668], [31.0, 28.833333333333332], [33.0, 35.7], [32.0, 45.111111111111114], [34.0, 33.42857142857143], [35.0, 29.363636363636363], [37.0, 38.75], [36.0, 39.5], [38.0, 33.33333333333333], [39.0, 35.75], [41.0, 40.88888888888888], [40.0, 49.16666666666668], [43.0, 43.28571428571429], [42.0, 41.5], [44.0, 43.88235294117647], [45.0, 48.80952380952381], [47.0, 50.5], [46.0, 45.33333333333333], [49.0, 51.909090909090914], [48.0, 53.00000000000001], [50.0, 47.45652173913043], [51.0, 52.757575757575765], [53.0, 54.64864864864865], [52.0, 50.47222222222222], [55.0, 53.929824561403514], [54.0, 53.11111111111111], [56.0, 53.53333333333333], [57.0, 53.575], [59.0, 52.676923076923075], [58.0, 53.6734693877551], [61.0, 56.344827586206904], [60.0, 52.76666666666667], [62.0, 51.54054054054054], [63.0, 56.1492537313433], [67.0, 54.4507042253521], [65.0, 54.819672131147534], [66.0, 53.77551020408163], [64.0, 52.05084745762713], [70.0, 57.53947368421053], [68.0, 55.880597014925385], [71.0, 56.280701754385966], [69.0, 56.40298507462687], [74.0, 55.75471698113208], [75.0, 56.98461538461536], [72.0, 52.41891891891892], [73.0, 52.16250000000001], [76.0, 53.68627450980394], [77.0, 55.50943396226414], [79.0, 54.10416666666667], [78.0, 57.666666666666664], [83.0, 55.95238095238095], [81.0, 54.199999999999996], [82.0, 59.44827586206896], [80.0, 56.85714285714286], [87.0, 57.81481481481482], [86.0, 58.407407407407405], [85.0, 58.6875], [84.0, 57.42105263157894], [91.0, 57.43749999999999], [90.0, 56.4], [89.0, 53.53846153846154], [88.0, 56.916666666666664], [94.0, 56.8], [93.0, 53.333333333333336], [92.0, 59.266666666666666], [95.0, 59.15384615384616], [98.0, 62.333333333333336], [96.0, 61.900000000000006], [99.0, 70.33333333333333], [97.0, 56.33333333333333], [102.0, 61.64705882352942], [101.0, 57.27272727272727], [100.0, 69.0], [103.0, 69.5], [106.0, 62.47058823529411], [105.0, 62.53333333333334], [104.0, 65.5], [107.0, 62.400000000000006], [109.0, 62.692307692307686], [108.0, 59.41666666666667], [111.0, 66.0], [110.0, 64.0], [112.0, 58.8], [114.0, 59.46153846153846], [113.0, 62.599999999999994], [115.0, 56.45454545454545], [118.0, 64.86363636363637], [116.0, 61.53333333333334], [117.0, 70.5], [119.0, 73.5], [120.0, 53.333333333333336], [123.0, 61.22222222222222], [122.0, 60.2], [121.0, 65.25], [127.0, 62.4], [125.0, 63.833333333333336], [126.0, 58.0], [131.0, 53.25], [130.0, 51.5], [129.0, 72.0], [128.0, 63.0], [135.0, 58.5], [134.0, 54.2], [132.0, 67.6], [133.0, 91.0], [142.0, 55.4], [141.0, 68.4], [143.0, 75.66666666666667], [140.0, 60.5], [139.0, 61.333333333333336], [138.0, 69.12499999999999], [136.0, 66.4], [137.0, 65.6923076923077], [151.0, 71.42857142857143], [149.0, 67.6], [148.0, 65.16666666666667], [146.0, 62.0], [145.0, 72.71428571428571], [144.0, 59.199999999999996], [150.0, 64.0], [147.0, 69.75], [157.0, 61.81818181818181], [156.0, 56.5], [155.0, 56.0], [154.0, 65.16666666666667], [153.0, 54.5], [159.0, 59.66666666666667], [158.0, 60.57142857142858], [152.0, 51.0], [167.0, 75.5], [164.0, 69.66666666666667], [163.0, 66.8], [162.0, 64.5], [161.0, 54.333333333333336], [160.0, 70.71428571428571], [166.0, 57.0], [174.0, 76.16666666666666], [172.0, 69.33333333333333], [171.0, 66.0], [168.0, 60.0], [169.0, 58.75], [175.0, 79.0], [173.0, 85.0], [170.0, 77.75], [183.0, 66.08333333333333], [182.0, 59.666666666666664], [181.0, 51.0], [178.0, 62.333333333333336], [176.0, 60.0], [180.0, 73.5], [179.0, 76.5], [177.0, 74.0], [184.0, 62.333333333333336], [190.0, 66.0], [189.0, 81.5], [187.0, 78.5], [188.0, 79.0], [197.0, 78.0], [195.0, 76.0], [193.0, 69.0], [192.0, 76.0], [196.0, 82.0], [207.0, 65.0], [205.0, 58.333333333333336], [203.0, 68.11111111111111], [202.0, 67.42857142857143], [200.0, 70.06666666666668], [201.0, 71.5], [204.0, 73.0], [206.0, 69.8], [209.0, 61.0], [210.0, 68.5], [214.0, 66.0], [213.0, 60.5], [211.0, 64.66666666666667], [208.0, 69.66666666666667], [1.0, 62.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[81.37833333333342, 55.619333333333316]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 783.0], [4.0, 783.0], [6.0, 784.5], [7.0, 789.0], [9.0, 788.0], [11.0, 790.5], [13.0, 797.0], [15.0, 803.0], [17.0, 772.0], [19.0, 787.0], [20.0, 786.0], [22.0, 822.0], [24.0, 772.0], [25.0, 780.6666666666666], [27.0, 767.0], [28.0, 799.0], [29.0, 768.0], [30.0, 794.5], [35.0, 785.6], [36.0, 758.0], [39.0, 761.0], [38.0, 778.5], [41.0, 789.0], [42.0, 800.0], [44.0, 754.5], [47.0, 759.0], [46.0, 780.0], [49.0, 794.0], [51.0, 769.3333333333334], [52.0, 759.0], [54.0, 789.0], [56.0, 768.6666666666666], [58.0, 780.0], [60.0, 770.0], [62.0, 758.0], [65.0, 784.5], [71.0, 766.0], [70.0, 711.0], [69.0, 752.0], [68.0, 767.0], [73.0, 387.0], [75.0, 776.5], [78.0, 711.0], [77.0, 765.0], [76.0, 770.0], [83.0, 792.0], [82.0, 697.0], [81.0, 771.0], [80.0, 801.5], [86.0, 761.0], [85.0, 706.0], [84.0, 764.0], [90.0, 743.0], [88.0, 784.0], [95.0, 59.0], [94.0, 380.0], [93.0, 685.0], [92.0, 752.5], [99.0, 424.0], [98.0, 55.8], [96.0, 532.3333333333334], [97.0, 291.66666666666663], [103.0, 388.25], [101.0, 136.0], [100.0, 381.5], [102.0, 743.0], [107.0, 38.0], [105.0, 40.5], [104.0, 366.0], [109.0, 330.77777777777777], [108.0, 36.5], [111.0, 40.0], [110.0, 673.0], [114.0, 311.0], [112.0, 305.5], [115.0, 48.25], [113.0, 50.0], [119.0, 481.0], [118.0, 49.5], [116.0, 49.0], [117.0, 667.0], [123.0, 321.2], [121.0, 225.5], [120.0, 787.0], [125.0, 220.75], [127.0, 41.0], [126.0, 43.0], [124.0, 73.5], [131.0, 39.0], [130.0, 454.0], [129.0, 382.0], [128.0, 38.666666666666664], [134.0, 406.5], [133.0, 512.3333333333334], [135.0, 667.0], [132.0, 701.0], [136.0, 221.0], [141.0, 702.0], [140.0, 708.0], [138.0, 761.5], [150.0, 756.0], [149.0, 713.6666666666666], [147.0, 731.2], [159.0, 686.0], [158.0, 750.0], [157.0, 701.0], [155.0, 733.0], [153.0, 693.0], [164.0, 81.33333333333333], [167.0, 677.0], [166.0, 747.0], [165.0, 705.0], [163.0, 763.0], [162.0, 664.0], [160.0, 734.0], [175.0, 787.0], [174.0, 713.0], [171.0, 733.0], [169.0, 673.0], [168.0, 735.0], [182.0, 670.0], [181.0, 665.0], [180.0, 733.0], [179.0, 679.0], [178.0, 729.0], [177.0, 674.0], [176.0, 730.0], [191.0, 409.5], [190.0, 668.0], [189.0, 752.0], [188.0, 761.0], [187.0, 730.0], [186.0, 704.0], [184.0, 707.0], [198.0, 290.33333333333337], [197.0, 412.0], [199.0, 253.0], [196.0, 738.0], [194.0, 728.0], [192.0, 684.0], [207.0, 197.16666666666669], [206.0, 376.0], [205.0, 389.0], [204.0, 251.75], [202.0, 95.0], [201.0, 379.0], [200.0, 440.5], [203.0, 501.6666666666667], [213.0, 144.90909090909093], [212.0, 247.25], [208.0, 259.0], [214.0, 437.0], [210.0, 304.33333333333337], [215.0, 749.0], [209.0, 659.0], [223.0, 722.5], [221.0, 705.0], [220.0, 716.0], [219.0, 664.0], [218.0, 715.0], [217.0, 727.0], [216.0, 677.0], [231.0, 341.5], [230.0, 103.66666666666667], [229.0, 409.5], [228.0, 669.0], [227.0, 714.0], [226.0, 676.0], [225.0, 659.0], [235.0, 418.5], [236.0, 309.0], [234.0, 172.85714285714283], [233.0, 389.5], [232.0, 95.0], [239.0, 406.0], [238.0, 410.0], [237.0, 224.2], [243.0, 384.5], [242.0, 426.0], [241.0, 426.5], [240.0, 377.0], [246.0, 724.0], [245.0, 662.0], [244.0, 712.5], [255.0, 540.0], [253.0, 100.0], [252.0, 87.0], [251.0, 85.0], [250.0, 92.5], [254.0, 668.0], [248.0, 718.5], [269.0, 160.875], [256.0, 341.8], [270.0, 247.8181818181818], [268.0, 229.375], [267.0, 198.1], [263.0, 124.33333333333333], [262.0, 166.0], [261.0, 697.5], [260.0, 755.0], [266.0, 304.25], [271.0, 228.125], [265.0, 535.1111111111111], [284.0, 342.66666666666663], [275.0, 203.63636363636363], [274.0, 139.7], [272.0, 201.27272727272728], [273.0, 237.85714285714283], [287.0, 203.20000000000002], [285.0, 215.5333333333333], [286.0, 464.5], [283.0, 230.8], [282.0, 334.99999999999994], [281.0, 167.83333333333334], [280.0, 223.66666666666666], [279.0, 237.125], [278.0, 220.79999999999998], [277.0, 246.08333333333334], [276.0, 171.8333333333333], [300.0, 239.4444444444444], [288.0, 244.75], [292.0, 225.89999999999998], [293.0, 327.25], [290.0, 192.75], [289.0, 233.0], [298.0, 270.375], [299.0, 252.66666666666663], [296.0, 237.88888888888889], [301.0, 221.37500000000003], [302.0, 266.55555555555554], [303.0, 455.25], [297.0, 322.4], [295.0, 256.57142857142856], [294.0, 223.10000000000002], [291.0, 333.75], [307.0, 221.5], [305.0, 223.0], [304.0, 222.28571428571428], [313.0, 213.66666666666666], [315.0, 220.75], [314.0, 204.0], [312.0, 222.75], [311.0, 214.25], [308.0, 505.0], [310.0, 240.0], [309.0, 244.0], [306.0, 227.6], [319.0, 277.8571428571429], [318.0, 272.0], [317.0, 430.2], [316.0, 219.0], [334.0, 387.33333333333337], [335.0, 479.5], [333.0, 399.0], [332.0, 394.33333333333337], [331.0, 281.75], [330.0, 338.75], [329.0, 316.2], [328.0, 304.75], [327.0, 648.1250000000001], [321.0, 224.875], [320.0, 296.16666666666663], [323.0, 220.0], [322.0, 329.6], [326.0, 231.19999999999996], [324.0, 330.6], [325.0, 206.66666666666666], [349.0, 467.0], [348.0, 362.0], [339.0, 691.0], [338.0, 417.66666666666663], [337.0, 329.8], [336.0, 464.5], [347.0, 580.6666666666666], [346.0, 409.66666666666663], [345.0, 241.66666666666666], [344.0, 411.0], [351.0, 374.0], [350.0, 716.0], [343.0, 496.5], [342.0, 499.0], [341.0, 388.66666666666663], [340.0, 475.0], [366.0, 414.0], [352.0, 326.0], [353.0, 737.0], [355.0, 438.0], [354.0, 487.5], [367.0, 336.75], [365.0, 198.5], [364.0, 438.0], [363.0, 252.0], [362.0, 415.8], [361.0, 225.5], [360.0, 483.5], [359.0, 474.5], [358.0, 379.25], [356.0, 217.0], [357.0, 733.5], [382.0, 494.5], [374.0, 398.6], [372.0, 342.4], [370.0, 391.66666666666663], [369.0, 684.0], [368.0, 749.0], [371.0, 681.0], [383.0, 759.0], [377.0, 684.0], [376.0, 720.0], [381.0, 656.0], [380.0, 672.0], [379.0, 661.0], [378.0, 741.5], [397.0, 338.25], [398.0, 353.33333333333337], [396.0, 384.66666666666663], [385.0, 341.5], [386.0, 750.0], [395.0, 345.75], [394.0, 328.0], [393.0, 314.0], [392.0, 488.5], [399.0, 218.0], [391.0, 369.5], [389.0, 437.0], [390.0, 200.0], [388.0, 427.2], [401.0, 580.6666666666666], [400.0, 278.875], [406.0, 372.33333333333337], [404.0, 305.5], [402.0, 386.0], [403.0, 737.0], [405.0, 475.0], [415.0, 328.25], [410.0, 710.0], [408.0, 678.5], [414.0, 701.0], [413.0, 757.0], [412.0, 732.6666666666666], [430.0, 407.33333333333337], [417.0, 392.33333333333337], [420.0, 375.66666666666663], [422.0, 706.0], [416.0, 752.0], [421.0, 700.0], [419.0, 391.0], [418.0, 745.0], [431.0, 227.0], [425.0, 212.0], [424.0, 530.0], [429.0, 571.6666666666666], [428.0, 239.0], [427.0, 502.0], [426.0, 527.6666666666666], [445.0, 667.0], [432.0, 543.0], [446.0, 703.0], [444.0, 751.0], [435.0, 755.0], [434.0, 751.0], [433.0, 764.0], [443.0, 752.0], [442.0, 720.0], [441.0, 703.0], [439.0, 680.0], [437.0, 695.0], [436.0, 748.0], [461.0, 675.0], [462.0, 675.0], [460.0, 672.0], [451.0, 718.5], [448.0, 699.0], [459.0, 751.0], [458.0, 677.0], [457.0, 671.0], [456.0, 725.0], [455.0, 689.0], [454.0, 657.0], [453.0, 758.0], [452.0, 693.0], [467.0, 744.0], [471.0, 563.3333333333334], [472.0, 221.0], [475.0, 707.3333333333334], [470.0, 257.0], [469.0, 493.5], [468.0, 271.79999999999995], [466.0, 339.375], [464.0, 684.5], [478.0, 511.4], [476.0, 462.5], [479.0, 766.0], [482.0, 392.0], [492.0, 206.33333333333334], [493.0, 243.0], [491.0, 247.0], [490.0, 249.0], [489.0, 246.66666666666666], [487.0, 210.66666666666666], [485.0, 601.0], [484.0, 243.66666666666666], [480.0, 402.66666666666663], [481.0, 703.0], [495.0, 657.3750000000001], [488.0, 479.5], [494.0, 559.6666666666666], [508.0, 391.33333333333337], [498.0, 316.5], [497.0, 669.0], [507.0, 241.5], [504.0, 244.0], [503.0, 350.25], [502.0, 251.0], [501.0, 749.0], [500.0, 759.0], [499.0, 312.0], [506.0, 706.6666666666666], [505.0, 672.0], [518.0, 250.0], [521.0, 247.66666666666666], [520.0, 755.0], [522.0, 552.0], [519.0, 241.0], [536.0, 709.5], [517.0, 242.0], [516.0, 157.0], [527.0, 713.3333333333334], [525.0, 750.3333333333334], [523.0, 735.0], [543.0, 564.0], [530.0, 712.0], [529.0, 759.0], [534.0, 748.0], [531.0, 735.2], [542.0, 465.0], [540.0, 751.0], [539.0, 709.0], [538.0, 715.0], [569.0, 228.66666666666666], [547.0, 206.0], [548.0, 517.5714285714286], [551.0, 692.0], [546.0, 255.0], [545.0, 508.0], [544.0, 160.0], [559.0, 442.0], [558.0, 259.0], [557.0, 532.6], [556.0, 193.0], [555.0, 260.0], [554.0, 458.0], [553.0, 588.5], [552.0, 739.0], [567.0, 440.00000000000006], [566.0, 211.5], [564.0, 552.3333333333334], [563.0, 350.5], [562.0, 372.5714285714286], [560.0, 238.0], [575.0, 710.5], [574.0, 719.5], [573.0, 736.0], [571.0, 708.0], [570.0, 698.0], [604.0, 712.5], [579.0, 544.6666666666666], [580.0, 227.0], [581.0, 734.0], [602.0, 702.6666666666666], [601.0, 690.5], [578.0, 247.0], [577.0, 551.3333333333334], [576.0, 216.0], [591.0, 721.0], [589.0, 721.0], [587.0, 721.3333333333334], [584.0, 722.0], [607.0, 228.0], [592.0, 695.0], [596.0, 693.5], [594.0, 701.6666666666666], [606.0, 551.6666666666666], [605.0, 447.5], [614.0, 260.0], [620.0, 337.5], [621.0, 509.8], [623.0, 395.0], [609.0, 227.0], [608.0, 258.0], [611.0, 374.66666666666663], [610.0, 538.3333333333334], [622.0, 530.0], [619.0, 237.0], [618.0, 243.33333333333334], [617.0, 212.0], [615.0, 458.8333333333333], [632.0, 564.75], [634.0, 390.0], [633.0, 474.0], [613.0, 231.4], [612.0, 460.8333333333333], [636.0, 456.5], [639.0, 686.5], [625.0, 462.25], [624.0, 343.25], [627.0, 239.0], [626.0, 242.42857142857144], [629.0, 242.0], [628.0, 235.0], [631.0, 538.3333333333334], [630.0, 251.0], [635.0, 576.75], [666.0, 270.9523809523809], [656.0, 224.0], [659.0, 244.5], [661.0, 247.14285714285717], [660.0, 340.9230769230769], [663.0, 246.25], [662.0, 338.0], [658.0, 228.66666666666666], [657.0, 459.91666666666663], [655.0, 228.66666666666666], [643.0, 692.0], [640.0, 689.5], [646.0, 694.0], [645.0, 678.0], [647.0, 213.0], [668.0, 258.45454545454544], [667.0, 529.6666666666666], [669.0, 435.6], [671.0, 383.66666666666663], [670.0, 254.0], [665.0, 248.62499999999997], [664.0, 393.6666666666667], [654.0, 237.25], [653.0, 247.0], [652.0, 242.66666666666666], [651.0, 249.35294117647058], [650.0, 679.5], [649.0, 224.0], [648.0, 347.0], [677.0, 546.5], [678.0, 251.0], [679.0, 669.5], [697.0, 283.0], [696.0, 626.0], [675.0, 240.0], [676.0, 669.0], [674.0, 306.0], [672.0, 259.0], [687.0, 372.6], [686.0, 314.5], [685.0, 366.8333333333333], [684.0, 393.5], [683.0, 293.5], [682.0, 412.3333333333333], [681.0, 697.0], [680.0, 692.0], [673.0, 404.6666666666667], [702.0, 485.5], [689.0, 304.1428571428571], [688.0, 388.38461538461536], [691.0, 435.75], [690.0, 310.0], [693.0, 482.0], [692.0, 300.75], [695.0, 423.0], [694.0, 336.28571428571433], [701.0, 516.2], [699.0, 291.0], [700.0, 685.0], [698.0, 408.6666666666667], [708.0, 494.5], [713.0, 500.0], [714.0, 331.6666666666667], [715.0, 491.0], [716.0, 336.0], [719.0, 378.25], [718.0, 339.0], [707.0, 328.0], [706.0, 630.0], [704.0, 672.5], [717.0, 406.44444444444446], [712.0, 317.0], [711.0, 334.0], [728.0, 648.3333333333334], [731.0, 347.0], [730.0, 675.5], [734.0, 345.0], [733.0, 673.0], [735.0, 685.0], [732.0, 347.0], [710.0, 444.3333333333333], [709.0, 505.5], [721.0, 328.0], [722.0, 503.5], [725.0, 549.3333333333334], [723.0, 656.6666666666666], [720.0, 340.25], [737.0, 494.5], [746.0, 363.0], [744.0, 363.5], [745.0, 351.0], [743.0, 352.3333333333333], [760.0, 521.3333333333334], [761.0, 425.0], [762.0, 636.0], [764.0, 476.0], [763.0, 438.5], [766.0, 426.3333333333333], [767.0, 402.8], [765.0, 401.2], [753.0, 406.0], [755.0, 419.0], [754.0, 607.75], [757.0, 405.5], [756.0, 550.5], [759.0, 495.6666666666667], [758.0, 414.5], [752.0, 377.0], [742.0, 428.5], [740.0, 416.16666666666663], [738.0, 643.0], [741.0, 592.5], [751.0, 496.71428571428567], [750.0, 473.3333333333333], [749.0, 504.0], [748.0, 578.0], [747.0, 373.0], [783.0, 389.0], [786.0, 385.0], [785.0, 381.0], [784.0, 388.0], [799.0, 465.0], [798.0, 561.5], [797.0, 617.5555555555555], [796.0, 600.75], [795.0, 538.5], [794.0, 470.0], [775.0, 418.5], [774.0, 422.0], [773.0, 518.3333333333334], [772.0, 390.5], [771.0, 387.6], [769.0, 455.53846153846155], [768.0, 394.2], [770.0, 570.0], [782.0, 431.6666666666667], [781.0, 574.0], [780.0, 403.0], [779.0, 447.0], [778.0, 485.62500000000006], [777.0, 391.0], [776.0, 502.33333333333337], [806.0, 513.75], [807.0, 474.5], [826.0, 502.0], [825.0, 636.5], [824.0, 508.5], [828.0, 591.2], [827.0, 506.0], [831.0, 509.0], [829.0, 504.0], [817.0, 558.0], [816.0, 472.0], [805.0, 468.00000000000006], [804.0, 565.0], [802.0, 505.8], [803.0, 473.0], [800.0, 610.0], [815.0, 475.0], [814.0, 548.5714285714286], [813.0, 481.0], [812.0, 500.1666666666667], [810.0, 479.0], [811.0, 654.0], [808.0, 600.0], [809.0, 484.25], [821.0, 484.25], [820.0, 515.0], [822.0, 495.25], [823.0, 639.4], [819.0, 602.5], [834.0, 506.0], [843.0, 497.5], [842.0, 653.0], [844.0, 640.5], [847.0, 517.0], [846.0, 526.0], [841.0, 555.3333333333334], [840.0, 554.0], [839.0, 526.6666666666666], [848.0, 556.0], [863.0, 628.6666666666666], [862.0, 627.5], [858.0, 625.0], [857.0, 622.5], [851.0, 519.0], [850.0, 509.0], [854.0, 549.25], [853.0, 619.0], [855.0, 626.0], [852.0, 596.6666666666666], [837.0, 499.25], [835.0, 556.3333333333334], [836.0, 615.125], [838.0, 560.4], [832.0, 500.625], [833.0, 506.5], [892.0, 553.8095238095239], [881.0, 560.5999999999999], [886.0, 556.6666666666666], [885.0, 557.7333333333333], [887.0, 542.8], [884.0, 563.125], [883.0, 563.0000000000001], [882.0, 550.6666666666666], [879.0, 564.6666666666666], [866.0, 624.6666666666666], [871.0, 629.0], [869.0, 663.6666666666666], [877.0, 566.3333333333334], [875.0, 626.0], [873.0, 630.0], [872.0, 620.0], [878.0, 665.0], [889.0, 557.1999999999998], [888.0, 558.0588235294117], [880.0, 573.0], [895.0, 547.8235294117648], [893.0, 540.8], [894.0, 555.0555555555554], [891.0, 548.4666666666668], [890.0, 555.9375000000001], [900.0, 548.3076923076923], [909.0, 550.909090909091], [898.0, 574.0], [899.0, 568.2666666666668], [902.0, 560.6666666666667], [901.0, 576.6470588235294], [903.0, 563.3333333333333], [921.0, 624.0], [912.0, 592.5], [916.0, 653.0], [914.0, 620.5], [919.0, 648.0], [917.0, 640.0], [927.0, 630.0], [926.0, 636.0], [925.0, 634.5], [923.0, 617.0], [922.0, 562.0], [897.0, 555.578947368421], [896.0, 559.5], [908.0, 579.8333333333333], [907.0, 555.1666666666666], [906.0, 575.3], [910.0, 559.3333333333334], [911.0, 571.0], [905.0, 560.9], [904.0, 550.75], [956.0, 621.4444444444445], [929.0, 592.0], [948.0, 596.4], [947.0, 611.0], [951.0, 624.6666666666667], [950.0, 630.0], [949.0, 627.0], [946.0, 601.75], [944.0, 598.25], [945.0, 652.5], [959.0, 629.6], [958.0, 621.6666666666665], [957.0, 623.0], [955.0, 624.5], [953.0, 630.5], [952.0, 638.1666666666666], [954.0, 638.75], [935.0, 611.6666666666666], [934.0, 640.0], [933.0, 632.5], [932.0, 632.0], [931.0, 624.0], [930.0, 642.0], [942.0, 629.0], [943.0, 622.0], [928.0, 640.0], [941.0, 609.7500000000001], [939.0, 604.5714285714286], [940.0, 628.3333333333334], [938.0, 600.8], [937.0, 595.5], [936.0, 619.6666666666666], [961.0, 633.0], [960.0, 616.5], [975.0, 644.5], [965.0, 632.5], [966.0, 635.0], [984.0, 638.0], [982.0, 647.0], [981.0, 633.0], [980.0, 649.0], [979.0, 665.0], [978.0, 648.0], [977.0, 631.0], [976.0, 635.0], [964.0, 618.0], [962.0, 641.6], [963.0, 645.0], [974.0, 619.0], [973.0, 639.3333333333334], [972.0, 643.5], [971.0, 647.0], [970.0, 648.0], [969.0, 642.0], [968.0, 648.5], [1.0, 782.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[554.8479999999997, 446.82199999999995]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 7.812500000000001], [3.0, 6.541666666666667], [4.0, 5.359999999999999], [5.0, 10.352941176470589], [6.0, 9.25], [7.0, 8.666666666666666], [8.0, 11.764705882352942], [9.0, 12.888888888888888], [10.0, 17.272727272727273], [11.0, 23.0], [12.0, 19.714285714285715], [13.0, 24.666666666666668], [14.0, 22.333333333333336], [15.0, 30.0], [16.0, 27.692307692307693], [17.0, 27.428571428571427], [18.0, 36.333333333333336], [19.0, 30.692307692307693], [20.0, 24.0], [21.0, 40.0], [22.0, 37.27272727272727], [23.0, 38.631578947368425], [24.0, 37.39285714285713], [25.0, 38.69565217391304], [26.0, 33.4375], [27.0, 40.43333333333334], [28.0, 40.87804878048781], [29.0, 39.15151515151514], [30.0, 43.50000000000001], [31.0, 41.19148936170212], [33.0, 41.21311475409834], [32.0, 42.79999999999998], [35.0, 40.4795918367347], [34.0, 41.46268656716418], [36.0, 41.87096774193549], [37.0, 41.021978021978], [39.0, 41.43956043956044], [38.0, 42.10126582278481], [41.0, 41.82857142857142], [40.0, 41.68888888888886], [43.0, 41.14545454545454], [42.0, 40.675000000000004], [45.0, 42.59677419354839], [44.0, 41.262499999999996], [46.0, 40.81967213114754], [47.0, 42.666666666666664], [49.0, 44.357142857142875], [48.0, 42.451612903225815], [51.0, 42.97674418604651], [50.0, 43.35416666666668], [53.0, 45.206896551724135], [52.0, 42.857142857142854], [55.0, 43.74074074074074], [54.0, 44.34482758620689], [56.0, 46.66666666666667], [57.0, 45.04545454545453], [59.0, 45.36666666666667], [58.0, 46.806451612903224], [60.0, 46.75], [61.0, 47.88888888888889], [62.0, 48.76666666666666], [63.0, 50.56521739130435], [67.0, 49.25], [65.0, 48.375], [64.0, 45.18749999999999], [66.0, 48.63636363636363], [69.0, 47.4], [68.0, 46.09090909090909], [71.0, 53.142857142857146], [70.0, 45.77777777777778], [74.0, 47.625], [73.0, 48.714285714285715], [72.0, 47.66666666666668], [75.0, 46.26315789473684], [77.0, 48.50000000000001], [76.0, 47.125], [78.0, 57.888888888888886], [79.0, 53.38961038961038], [83.0, 49.0], [80.0, 46.875], [82.0, 49.0], [81.0, 48.0], [87.0, 45.857142857142854], [86.0, 53.5], [84.0, 49.4], [85.0, 54.333333333333336], [91.0, 48.5], [90.0, 49.75], [88.0, 49.75], [89.0, 51.5], [92.0, 60.0], [98.0, 43.75], [99.0, 39.75], [103.0, 39.0], [102.0, 40.1], [101.0, 42.0], [100.0, 41.333333333333336], [107.0, 32.0], [104.0, 53.0], [105.0, 43.666666666666664], [109.0, 45.5], [110.0, 42.0], [108.0, 52.0], [112.0, 43.2], [119.0, 43.0], [281.0, 32.0], [317.0, 63.0], [326.0, 21.375], [323.0, 30.0], [324.0, 30.0], [335.0, 40.6], [351.0, 34.0], [348.0, 259.0], [358.0, 53.263157894736835], [357.0, 49.0], [356.0, 45.64705882352941], [355.0, 50.333333333333336], [352.0, 34.42857142857142], [380.0, 135.0], [379.0, 95.5], [385.0, 233.05], [397.0, 62.0], [393.0, 64.7857142857143], [390.0, 192.8], [389.0, 256.5], [384.0, 151.0], [387.0, 140.25], [386.0, 269.0], [403.0, 58.0], [424.0, 124.19565217391312], [422.0, 239.0], [421.0, 218.0], [420.0, 150.0], [419.0, 126.0], [423.0, 164.63392857142853], [1.0, 9.6]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[97.4440000000003, 53.39966666666671]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 984.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7980.0, "minX": 1.6690179E12, "maxY": 28577.0, "series": [{"data": [[1.6690179E12, 7980.0], [1.66901796E12, 10670.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6690179E12, 10773.0], [1.66901796E12, 28577.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901796E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 43.78823529411762, "minX": 1.6690179E12, "maxY": 446.82199999999995, "series": [{"data": [[1.66901796E12, 55.619333333333316]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901796E12, 446.82199999999995]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6690179E12, 54.62819548872188], [1.66901796E12, 43.78823529411762]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901796E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 43.773529411764706, "minX": 1.6690179E12, "maxY": 446.64699999999937, "series": [{"data": [[1.66901796E12, 55.61099999999998]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901796E12, 446.64699999999937]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6690179E12, 48.40789473684208], [1.66901796E12, 43.773529411764706]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901796E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 7.832352941176471, "minX": 1.6690179E12, "maxY": 10.073999999999998, "series": [{"data": [[1.66901796E12, 7.950333333333337]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901796E12, 10.073999999999998]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6690179E12, 9.486090225563922], [1.66901796E12, 7.832352941176471]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901796E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.6690179E12, "maxY": 824.0, "series": [{"data": [[1.6690179E12, 325.0], [1.66901796E12, 824.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6690179E12, 72.90000000000009], [1.66901796E12, 672.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6690179E12, 246.38999999999987], [1.66901796E12, 776.5900000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6690179E12, 181.0], [1.66901796E12, 727.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6690179E12, 3.0], [1.66901796E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6690179E12, 43.0], [1.66901796E12, 72.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901796E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 41.0, "minX": 35.0, "maxY": 784.0, "series": [{"data": [[35.0, 784.0], [1160.0, 49.0], [1260.0, 67.0], [1275.0, 273.0], [1224.0, 671.0], [1386.0, 55.0], [746.0, 50.0], [917.0, 43.0], [997.0, 41.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1386.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 41.0, "minX": 35.0, "maxY": 784.0, "series": [{"data": [[35.0, 784.0], [1160.0, 49.0], [1260.0, 67.0], [1275.0, 272.0], [1224.0, 671.0], [1386.0, 55.0], [746.0, 48.0], [917.0, 43.0], [997.0, 41.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1386.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 45.8, "minX": 1.6690179E12, "maxY": 104.2, "series": [{"data": [[1.6690179E12, 45.8], [1.66901796E12, 104.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901796E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 44.333333333333336, "minX": 1.6690179E12, "maxY": 105.66666666666667, "series": [{"data": [[1.6690179E12, 44.333333333333336], [1.66901796E12, 105.66666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901796E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.666666666666667, "minX": 1.6690179E12, "maxY": 50.0, "series": [{"data": [[1.6690179E12, 44.333333333333336], [1.66901796E12, 5.666666666666667]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66901796E12, 50.0]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66901796E12, 50.0]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901796E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 44.333333333333336, "minX": 1.6690179E12, "maxY": 105.66666666666667, "series": [{"data": [[1.6690179E12, 44.333333333333336], [1.66901796E12, 105.66666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901796E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

