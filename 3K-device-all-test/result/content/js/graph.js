/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 1041.0, "series": [{"data": [[0.0, 10.0], [0.1, 14.0], [0.2, 18.0], [0.3, 24.0], [0.4, 29.0], [0.5, 30.0], [0.6, 30.0], [0.7, 30.0], [0.8, 30.0], [0.9, 32.0], [1.0, 32.0], [1.1, 32.0], [1.2, 33.0], [1.3, 33.0], [1.4, 33.0], [1.5, 34.0], [1.6, 34.0], [1.7, 34.0], [1.8, 34.0], [1.9, 35.0], [2.0, 35.0], [2.1, 35.0], [2.2, 36.0], [2.3, 36.0], [2.4, 36.0], [2.5, 37.0], [2.6, 37.0], [2.7, 37.0], [2.8, 37.0], [2.9, 37.0], [3.0, 38.0], [3.1, 38.0], [3.2, 38.0], [3.3, 38.0], [3.4, 38.0], [3.5, 38.0], [3.6, 38.0], [3.7, 38.0], [3.8, 39.0], [3.9, 39.0], [4.0, 39.0], [4.1, 39.0], [4.2, 39.0], [4.3, 39.0], [4.4, 39.0], [4.5, 39.0], [4.6, 39.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 40.0], [5.1, 40.0], [5.2, 40.0], [5.3, 40.0], [5.4, 41.0], [5.5, 41.0], [5.6, 41.0], [5.7, 41.0], [5.8, 41.0], [5.9, 41.0], [6.0, 41.0], [6.1, 41.0], [6.2, 42.0], [6.3, 42.0], [6.4, 42.0], [6.5, 42.0], [6.6, 42.0], [6.7, 42.0], [6.8, 42.0], [6.9, 42.0], [7.0, 42.0], [7.1, 42.0], [7.2, 43.0], [7.3, 43.0], [7.4, 43.0], [7.5, 43.0], [7.6, 43.0], [7.7, 43.0], [7.8, 43.0], [7.9, 43.0], [8.0, 43.0], [8.1, 43.0], [8.2, 43.0], [8.3, 43.0], [8.4, 43.0], [8.5, 43.0], [8.6, 43.0], [8.7, 43.0], [8.8, 43.0], [8.9, 44.0], [9.0, 44.0], [9.1, 44.0], [9.2, 44.0], [9.3, 44.0], [9.4, 44.0], [9.5, 44.0], [9.6, 44.0], [9.7, 44.0], [9.8, 44.0], [9.9, 44.0], [10.0, 44.0], [10.1, 44.0], [10.2, 44.0], [10.3, 45.0], [10.4, 45.0], [10.5, 45.0], [10.6, 45.0], [10.7, 45.0], [10.8, 45.0], [10.9, 45.0], [11.0, 45.0], [11.1, 45.0], [11.2, 45.0], [11.3, 45.0], [11.4, 45.0], [11.5, 45.0], [11.6, 45.0], [11.7, 46.0], [11.8, 46.0], [11.9, 46.0], [12.0, 46.0], [12.1, 46.0], [12.2, 46.0], [12.3, 46.0], [12.4, 46.0], [12.5, 46.0], [12.6, 46.0], [12.7, 46.0], [12.8, 46.0], [12.9, 46.0], [13.0, 46.0], [13.1, 47.0], [13.2, 47.0], [13.3, 47.0], [13.4, 47.0], [13.5, 47.0], [13.6, 47.0], [13.7, 47.0], [13.8, 47.0], [13.9, 47.0], [14.0, 47.0], [14.1, 47.0], [14.2, 47.0], [14.3, 47.0], [14.4, 47.0], [14.5, 47.0], [14.6, 47.0], [14.7, 47.0], [14.8, 47.0], [14.9, 47.0], [15.0, 47.0], [15.1, 47.0], [15.2, 47.0], [15.3, 48.0], [15.4, 48.0], [15.5, 48.0], [15.6, 48.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 48.0], [16.1, 48.0], [16.2, 48.0], [16.3, 48.0], [16.4, 48.0], [16.5, 48.0], [16.6, 48.0], [16.7, 48.0], [16.8, 48.0], [16.9, 48.0], [17.0, 48.0], [17.1, 48.0], [17.2, 48.0], [17.3, 48.0], [17.4, 48.0], [17.5, 48.0], [17.6, 49.0], [17.7, 49.0], [17.8, 49.0], [17.9, 49.0], [18.0, 49.0], [18.1, 49.0], [18.2, 49.0], [18.3, 49.0], [18.4, 49.0], [18.5, 49.0], [18.6, 49.0], [18.7, 49.0], [18.8, 49.0], [18.9, 49.0], [19.0, 49.0], [19.1, 49.0], [19.2, 49.0], [19.3, 49.0], [19.4, 49.0], [19.5, 49.0], [19.6, 49.0], [19.7, 49.0], [19.8, 49.0], [19.9, 49.0], [20.0, 49.0], [20.1, 49.0], [20.2, 49.0], [20.3, 50.0], [20.4, 50.0], [20.5, 50.0], [20.6, 50.0], [20.7, 50.0], [20.8, 50.0], [20.9, 50.0], [21.0, 50.0], [21.1, 50.0], [21.2, 50.0], [21.3, 50.0], [21.4, 50.0], [21.5, 50.0], [21.6, 50.0], [21.7, 50.0], [21.8, 50.0], [21.9, 50.0], [22.0, 50.0], [22.1, 50.0], [22.2, 50.0], [22.3, 50.0], [22.4, 50.0], [22.5, 50.0], [22.6, 50.0], [22.7, 50.0], [22.8, 51.0], [22.9, 51.0], [23.0, 51.0], [23.1, 51.0], [23.2, 51.0], [23.3, 51.0], [23.4, 51.0], [23.5, 51.0], [23.6, 51.0], [23.7, 51.0], [23.8, 51.0], [23.9, 51.0], [24.0, 51.0], [24.1, 51.0], [24.2, 51.0], [24.3, 51.0], [24.4, 51.0], [24.5, 51.0], [24.6, 51.0], [24.7, 51.0], [24.8, 51.0], [24.9, 51.0], [25.0, 51.0], [25.1, 51.0], [25.2, 51.0], [25.3, 51.0], [25.4, 51.0], [25.5, 51.0], [25.6, 51.0], [25.7, 51.0], [25.8, 51.0], [25.9, 51.0], [26.0, 51.0], [26.1, 51.0], [26.2, 51.0], [26.3, 52.0], [26.4, 52.0], [26.5, 52.0], [26.6, 52.0], [26.7, 52.0], [26.8, 52.0], [26.9, 52.0], [27.0, 52.0], [27.1, 52.0], [27.2, 52.0], [27.3, 52.0], [27.4, 52.0], [27.5, 52.0], [27.6, 52.0], [27.7, 52.0], [27.8, 52.0], [27.9, 52.0], [28.0, 52.0], [28.1, 52.0], [28.2, 52.0], [28.3, 52.0], [28.4, 52.0], [28.5, 52.0], [28.6, 52.0], [28.7, 52.0], [28.8, 52.0], [28.9, 52.0], [29.0, 52.0], [29.1, 52.0], [29.2, 52.0], [29.3, 52.0], [29.4, 52.0], [29.5, 52.0], [29.6, 53.0], [29.7, 53.0], [29.8, 53.0], [29.9, 53.0], [30.0, 53.0], [30.1, 53.0], [30.2, 53.0], [30.3, 53.0], [30.4, 53.0], [30.5, 53.0], [30.6, 53.0], [30.7, 53.0], [30.8, 53.0], [30.9, 53.0], [31.0, 53.0], [31.1, 53.0], [31.2, 53.0], [31.3, 53.0], [31.4, 53.0], [31.5, 53.0], [31.6, 53.0], [31.7, 53.0], [31.8, 53.0], [31.9, 53.0], [32.0, 53.0], [32.1, 53.0], [32.2, 53.0], [32.3, 53.0], [32.4, 53.0], [32.5, 54.0], [32.6, 54.0], [32.7, 54.0], [32.8, 54.0], [32.9, 54.0], [33.0, 54.0], [33.1, 54.0], [33.2, 54.0], [33.3, 54.0], [33.4, 54.0], [33.5, 54.0], [33.6, 54.0], [33.7, 54.0], [33.8, 54.0], [33.9, 54.0], [34.0, 54.0], [34.1, 54.0], [34.2, 54.0], [34.3, 54.0], [34.4, 54.0], [34.5, 54.0], [34.6, 54.0], [34.7, 54.0], [34.8, 54.0], [34.9, 54.0], [35.0, 54.0], [35.1, 54.0], [35.2, 54.0], [35.3, 54.0], [35.4, 55.0], [35.5, 55.0], [35.6, 55.0], [35.7, 55.0], [35.8, 55.0], [35.9, 55.0], [36.0, 55.0], [36.1, 55.0], [36.2, 55.0], [36.3, 55.0], [36.4, 55.0], [36.5, 55.0], [36.6, 55.0], [36.7, 55.0], [36.8, 55.0], [36.9, 55.0], [37.0, 55.0], [37.1, 55.0], [37.2, 55.0], [37.3, 55.0], [37.4, 55.0], [37.5, 55.0], [37.6, 55.0], [37.7, 55.0], [37.8, 55.0], [37.9, 55.0], [38.0, 55.0], [38.1, 55.0], [38.2, 55.0], [38.3, 55.0], [38.4, 56.0], [38.5, 56.0], [38.6, 56.0], [38.7, 56.0], [38.8, 56.0], [38.9, 56.0], [39.0, 56.0], [39.1, 56.0], [39.2, 56.0], [39.3, 56.0], [39.4, 56.0], [39.5, 56.0], [39.6, 56.0], [39.7, 56.0], [39.8, 56.0], [39.9, 56.0], [40.0, 56.0], [40.1, 56.0], [40.2, 56.0], [40.3, 56.0], [40.4, 56.0], [40.5, 56.0], [40.6, 56.0], [40.7, 56.0], [40.8, 56.0], [40.9, 56.0], [41.0, 56.0], [41.1, 56.0], [41.2, 56.0], [41.3, 56.0], [41.4, 56.0], [41.5, 57.0], [41.6, 57.0], [41.7, 57.0], [41.8, 57.0], [41.9, 57.0], [42.0, 57.0], [42.1, 57.0], [42.2, 57.0], [42.3, 57.0], [42.4, 57.0], [42.5, 57.0], [42.6, 57.0], [42.7, 57.0], [42.8, 57.0], [42.9, 57.0], [43.0, 57.0], [43.1, 57.0], [43.2, 57.0], [43.3, 57.0], [43.4, 57.0], [43.5, 57.0], [43.6, 57.0], [43.7, 57.0], [43.8, 57.0], [43.9, 57.0], [44.0, 57.0], [44.1, 58.0], [44.2, 58.0], [44.3, 58.0], [44.4, 58.0], [44.5, 58.0], [44.6, 58.0], [44.7, 58.0], [44.8, 58.0], [44.9, 58.0], [45.0, 58.0], [45.1, 58.0], [45.2, 58.0], [45.3, 58.0], [45.4, 58.0], [45.5, 58.0], [45.6, 58.0], [45.7, 58.0], [45.8, 58.0], [45.9, 58.0], [46.0, 58.0], [46.1, 58.0], [46.2, 58.0], [46.3, 58.0], [46.4, 58.0], [46.5, 58.0], [46.6, 58.0], [46.7, 58.0], [46.8, 58.0], [46.9, 58.0], [47.0, 58.0], [47.1, 58.0], [47.2, 59.0], [47.3, 59.0], [47.4, 59.0], [47.5, 59.0], [47.6, 59.0], [47.7, 59.0], [47.8, 59.0], [47.9, 59.0], [48.0, 59.0], [48.1, 59.0], [48.2, 59.0], [48.3, 59.0], [48.4, 59.0], [48.5, 59.0], [48.6, 59.0], [48.7, 59.0], [48.8, 59.0], [48.9, 59.0], [49.0, 59.0], [49.1, 59.0], [49.2, 59.0], [49.3, 59.0], [49.4, 59.0], [49.5, 59.0], [49.6, 59.0], [49.7, 59.0], [49.8, 59.0], [49.9, 59.0], [50.0, 59.0], [50.1, 59.0], [50.2, 59.0], [50.3, 60.0], [50.4, 60.0], [50.5, 60.0], [50.6, 60.0], [50.7, 60.0], [50.8, 60.0], [50.9, 60.0], [51.0, 60.0], [51.1, 60.0], [51.2, 60.0], [51.3, 60.0], [51.4, 60.0], [51.5, 60.0], [51.6, 60.0], [51.7, 60.0], [51.8, 60.0], [51.9, 60.0], [52.0, 60.0], [52.1, 60.0], [52.2, 60.0], [52.3, 60.0], [52.4, 60.0], [52.5, 60.0], [52.6, 60.0], [52.7, 60.0], [52.8, 60.0], [52.9, 60.0], [53.0, 60.0], [53.1, 60.0], [53.2, 60.0], [53.3, 60.0], [53.4, 60.0], [53.5, 60.0], [53.6, 60.0], [53.7, 60.0], [53.8, 60.0], [53.9, 60.0], [54.0, 61.0], [54.1, 61.0], [54.2, 61.0], [54.3, 61.0], [54.4, 61.0], [54.5, 61.0], [54.6, 61.0], [54.7, 61.0], [54.8, 61.0], [54.9, 61.0], [55.0, 61.0], [55.1, 61.0], [55.2, 61.0], [55.3, 61.0], [55.4, 61.0], [55.5, 61.0], [55.6, 61.0], [55.7, 61.0], [55.8, 61.0], [55.9, 61.0], [56.0, 61.0], [56.1, 61.0], [56.2, 61.0], [56.3, 61.0], [56.4, 61.0], [56.5, 61.0], [56.6, 61.0], [56.7, 61.0], [56.8, 61.0], [56.9, 61.0], [57.0, 61.0], [57.1, 61.0], [57.2, 61.0], [57.3, 61.0], [57.4, 61.0], [57.5, 61.0], [57.6, 61.0], [57.7, 62.0], [57.8, 62.0], [57.9, 62.0], [58.0, 62.0], [58.1, 62.0], [58.2, 62.0], [58.3, 62.0], [58.4, 62.0], [58.5, 62.0], [58.6, 62.0], [58.7, 62.0], [58.8, 62.0], [58.9, 62.0], [59.0, 62.0], [59.1, 62.0], [59.2, 62.0], [59.3, 62.0], [59.4, 62.0], [59.5, 62.0], [59.6, 62.0], [59.7, 62.0], [59.8, 62.0], [59.9, 62.0], [60.0, 62.0], [60.1, 62.0], [60.2, 62.0], [60.3, 62.0], [60.4, 62.0], [60.5, 62.0], [60.6, 62.0], [60.7, 63.0], [60.8, 63.0], [60.9, 63.0], [61.0, 63.0], [61.1, 63.0], [61.2, 63.0], [61.3, 63.0], [61.4, 63.0], [61.5, 63.0], [61.6, 63.0], [61.7, 63.0], [61.8, 63.0], [61.9, 63.0], [62.0, 63.0], [62.1, 63.0], [62.2, 63.0], [62.3, 63.0], [62.4, 63.0], [62.5, 63.0], [62.6, 63.0], [62.7, 63.0], [62.8, 63.0], [62.9, 63.0], [63.0, 63.0], [63.1, 63.0], [63.2, 63.0], [63.3, 63.0], [63.4, 63.0], [63.5, 63.0], [63.6, 63.0], [63.7, 63.0], [63.8, 63.0], [63.9, 64.0], [64.0, 64.0], [64.1, 64.0], [64.2, 64.0], [64.3, 64.0], [64.4, 64.0], [64.5, 64.0], [64.6, 64.0], [64.7, 64.0], [64.8, 64.0], [64.9, 64.0], [65.0, 64.0], [65.1, 64.0], [65.2, 64.0], [65.3, 64.0], [65.4, 64.0], [65.5, 64.0], [65.6, 64.0], [65.7, 64.0], [65.8, 64.0], [65.9, 64.0], [66.0, 64.0], [66.1, 64.0], [66.2, 64.0], [66.3, 64.0], [66.4, 64.0], [66.5, 64.0], [66.6, 65.0], [66.7, 65.0], [66.8, 65.0], [66.9, 65.0], [67.0, 65.0], [67.1, 65.0], [67.2, 65.0], [67.3, 65.0], [67.4, 65.0], [67.5, 65.0], [67.6, 65.0], [67.7, 65.0], [67.8, 65.0], [67.9, 65.0], [68.0, 65.0], [68.1, 65.0], [68.2, 65.0], [68.3, 65.0], [68.4, 65.0], [68.5, 65.0], [68.6, 65.0], [68.7, 65.0], [68.8, 65.0], [68.9, 65.0], [69.0, 65.0], [69.1, 65.0], [69.2, 65.0], [69.3, 65.0], [69.4, 65.0], [69.5, 65.0], [69.6, 66.0], [69.7, 66.0], [69.8, 66.0], [69.9, 66.0], [70.0, 66.0], [70.1, 66.0], [70.2, 66.0], [70.3, 66.0], [70.4, 66.0], [70.5, 66.0], [70.6, 66.0], [70.7, 66.0], [70.8, 66.0], [70.9, 66.0], [71.0, 66.0], [71.1, 66.0], [71.2, 66.0], [71.3, 66.0], [71.4, 66.0], [71.5, 66.0], [71.6, 66.0], [71.7, 66.0], [71.8, 66.0], [71.9, 66.0], [72.0, 66.0], [72.1, 67.0], [72.2, 67.0], [72.3, 67.0], [72.4, 67.0], [72.5, 67.0], [72.6, 67.0], [72.7, 67.0], [72.8, 67.0], [72.9, 67.0], [73.0, 67.0], [73.1, 67.0], [73.2, 67.0], [73.3, 67.0], [73.4, 67.0], [73.5, 67.0], [73.6, 67.0], [73.7, 67.0], [73.8, 67.0], [73.9, 67.0], [74.0, 67.0], [74.1, 67.0], [74.2, 67.0], [74.3, 67.0], [74.4, 67.0], [74.5, 67.0], [74.6, 67.0], [74.7, 67.0], [74.8, 68.0], [74.9, 68.0], [75.0, 68.0], [75.1, 68.0], [75.2, 68.0], [75.3, 68.0], [75.4, 68.0], [75.5, 68.0], [75.6, 68.0], [75.7, 68.0], [75.8, 68.0], [75.9, 68.0], [76.0, 68.0], [76.1, 68.0], [76.2, 68.0], [76.3, 68.0], [76.4, 68.0], [76.5, 68.0], [76.6, 68.0], [76.7, 68.0], [76.8, 68.0], [76.9, 68.0], [77.0, 68.0], [77.1, 68.0], [77.2, 68.0], [77.3, 68.0], [77.4, 68.0], [77.5, 68.0], [77.6, 68.0], [77.7, 68.0], [77.8, 69.0], [77.9, 69.0], [78.0, 69.0], [78.1, 69.0], [78.2, 69.0], [78.3, 69.0], [78.4, 69.0], [78.5, 69.0], [78.6, 69.0], [78.7, 69.0], [78.8, 69.0], [78.9, 69.0], [79.0, 69.0], [79.1, 69.0], [79.2, 69.0], [79.3, 69.0], [79.4, 69.0], [79.5, 69.0], [79.6, 70.0], [79.7, 70.0], [79.8, 70.0], [79.9, 70.0], [80.0, 70.0], [80.1, 70.0], [80.2, 70.0], [80.3, 70.0], [80.4, 70.0], [80.5, 70.0], [80.6, 70.0], [80.7, 70.0], [80.8, 70.0], [80.9, 70.0], [81.0, 70.0], [81.1, 70.0], [81.2, 70.0], [81.3, 70.0], [81.4, 70.0], [81.5, 70.0], [81.6, 70.0], [81.7, 71.0], [81.8, 71.0], [81.9, 71.0], [82.0, 71.0], [82.1, 71.0], [82.2, 71.0], [82.3, 71.0], [82.4, 71.0], [82.5, 71.0], [82.6, 71.0], [82.7, 71.0], [82.8, 71.0], [82.9, 71.0], [83.0, 71.0], [83.1, 71.0], [83.2, 71.0], [83.3, 71.0], [83.4, 72.0], [83.5, 72.0], [83.6, 72.0], [83.7, 72.0], [83.8, 72.0], [83.9, 72.0], [84.0, 72.0], [84.1, 72.0], [84.2, 72.0], [84.3, 72.0], [84.4, 72.0], [84.5, 72.0], [84.6, 72.0], [84.7, 72.0], [84.8, 72.0], [84.9, 72.0], [85.0, 72.0], [85.1, 72.0], [85.2, 72.0], [85.3, 72.0], [85.4, 73.0], [85.5, 73.0], [85.6, 73.0], [85.7, 73.0], [85.8, 73.0], [85.9, 73.0], [86.0, 73.0], [86.1, 73.0], [86.2, 73.0], [86.3, 73.0], [86.4, 73.0], [86.5, 73.0], [86.6, 73.0], [86.7, 73.0], [86.8, 73.0], [86.9, 73.0], [87.0, 73.0], [87.1, 73.0], [87.2, 74.0], [87.3, 74.0], [87.4, 74.0], [87.5, 74.0], [87.6, 74.0], [87.7, 74.0], [87.8, 74.0], [87.9, 74.0], [88.0, 74.0], [88.1, 74.0], [88.2, 74.0], [88.3, 74.0], [88.4, 74.0], [88.5, 74.0], [88.6, 74.0], [88.7, 75.0], [88.8, 75.0], [88.9, 75.0], [89.0, 75.0], [89.1, 75.0], [89.2, 75.0], [89.3, 75.0], [89.4, 75.0], [89.5, 75.0], [89.6, 75.0], [89.7, 75.0], [89.8, 75.0], [89.9, 75.0], [90.0, 75.0], [90.1, 75.0], [90.2, 76.0], [90.3, 76.0], [90.4, 76.0], [90.5, 76.0], [90.6, 76.0], [90.7, 76.0], [90.8, 76.0], [90.9, 76.0], [91.0, 76.0], [91.1, 76.0], [91.2, 76.0], [91.3, 76.0], [91.4, 76.0], [91.5, 76.0], [91.6, 76.0], [91.7, 77.0], [91.8, 77.0], [91.9, 77.0], [92.0, 77.0], [92.1, 77.0], [92.2, 77.0], [92.3, 77.0], [92.4, 77.0], [92.5, 77.0], [92.6, 77.0], [92.7, 77.0], [92.8, 77.0], [92.9, 78.0], [93.0, 78.0], [93.1, 78.0], [93.2, 78.0], [93.3, 78.0], [93.4, 79.0], [93.5, 79.0], [93.6, 79.0], [93.7, 79.0], [93.8, 79.0], [93.9, 79.0], [94.0, 79.0], [94.1, 79.0], [94.2, 79.0], [94.3, 80.0], [94.4, 80.0], [94.5, 80.0], [94.6, 80.0], [94.7, 80.0], [94.8, 80.0], [94.9, 80.0], [95.0, 80.0], [95.1, 80.0], [95.2, 81.0], [95.3, 81.0], [95.4, 81.0], [95.5, 81.0], [95.6, 81.0], [95.7, 81.0], [95.8, 81.0], [95.9, 81.0], [96.0, 81.0], [96.1, 82.0], [96.2, 82.0], [96.3, 82.0], [96.4, 82.0], [96.5, 82.0], [96.6, 82.0], [96.7, 82.0], [96.8, 83.0], [96.9, 83.0], [97.0, 83.0], [97.1, 83.0], [97.2, 83.0], [97.3, 83.0], [97.4, 83.0], [97.5, 84.0], [97.6, 84.0], [97.7, 84.0], [97.8, 84.0], [97.9, 85.0], [98.0, 85.0], [98.1, 85.0], [98.2, 85.0], [98.3, 85.0], [98.4, 85.0], [98.5, 86.0], [98.6, 86.0], [98.7, 87.0], [98.8, 87.0], [98.9, 87.0], [99.0, 88.0], [99.1, 89.0], [99.2, 90.0], [99.3, 91.0], [99.4, 92.0], [99.5, 92.0], [99.6, 96.0], [99.7, 97.0], [99.8, 97.0], [99.9, 99.0], [100.0, 103.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 24.0], [0.1, 29.0], [0.2, 30.0], [0.3, 30.0], [0.4, 31.0], [0.5, 32.0], [0.6, 33.0], [0.7, 39.0], [0.8, 42.0], [0.9, 43.0], [1.0, 45.0], [1.1, 46.0], [1.2, 47.0], [1.3, 50.0], [1.4, 50.0], [1.5, 52.0], [1.6, 55.0], [1.7, 56.0], [1.8, 57.0], [1.9, 61.0], [2.0, 63.0], [2.1, 65.0], [2.2, 66.0], [2.3, 67.0], [2.4, 68.0], [2.5, 69.0], [2.6, 70.0], [2.7, 72.0], [2.8, 72.0], [2.9, 74.0], [3.0, 74.0], [3.1, 76.0], [3.2, 77.0], [3.3, 78.0], [3.4, 78.0], [3.5, 80.0], [3.6, 80.0], [3.7, 81.0], [3.8, 82.0], [3.9, 82.0], [4.0, 83.0], [4.1, 84.0], [4.2, 84.0], [4.3, 85.0], [4.4, 85.0], [4.5, 86.0], [4.6, 87.0], [4.7, 88.0], [4.8, 88.0], [4.9, 89.0], [5.0, 89.0], [5.1, 90.0], [5.2, 90.0], [5.3, 90.0], [5.4, 91.0], [5.5, 91.0], [5.6, 92.0], [5.7, 92.0], [5.8, 93.0], [5.9, 94.0], [6.0, 95.0], [6.1, 95.0], [6.2, 95.0], [6.3, 95.0], [6.4, 96.0], [6.5, 96.0], [6.6, 96.0], [6.7, 97.0], [6.8, 97.0], [6.9, 97.0], [7.0, 98.0], [7.1, 98.0], [7.2, 99.0], [7.3, 100.0], [7.4, 101.0], [7.5, 102.0], [7.6, 102.0], [7.7, 103.0], [7.8, 103.0], [7.9, 104.0], [8.0, 104.0], [8.1, 104.0], [8.2, 105.0], [8.3, 106.0], [8.4, 107.0], [8.5, 107.0], [8.6, 108.0], [8.7, 108.0], [8.8, 108.0], [8.9, 109.0], [9.0, 110.0], [9.1, 111.0], [9.2, 111.0], [9.3, 112.0], [9.4, 112.0], [9.5, 112.0], [9.6, 112.0], [9.7, 113.0], [9.8, 114.0], [9.9, 114.0], [10.0, 115.0], [10.1, 115.0], [10.2, 115.0], [10.3, 116.0], [10.4, 116.0], [10.5, 116.0], [10.6, 116.0], [10.7, 117.0], [10.8, 117.0], [10.9, 118.0], [11.0, 118.0], [11.1, 119.0], [11.2, 120.0], [11.3, 121.0], [11.4, 121.0], [11.5, 121.0], [11.6, 121.0], [11.7, 122.0], [11.8, 122.0], [11.9, 122.0], [12.0, 123.0], [12.1, 123.0], [12.2, 124.0], [12.3, 124.0], [12.4, 124.0], [12.5, 125.0], [12.6, 126.0], [12.7, 126.0], [12.8, 127.0], [12.9, 128.0], [13.0, 129.0], [13.1, 130.0], [13.2, 131.0], [13.3, 132.0], [13.4, 133.0], [13.5, 134.0], [13.6, 136.0], [13.7, 136.0], [13.8, 137.0], [13.9, 138.0], [14.0, 141.0], [14.1, 143.0], [14.2, 143.0], [14.3, 144.0], [14.4, 146.0], [14.5, 146.0], [14.6, 146.0], [14.7, 147.0], [14.8, 147.0], [14.9, 148.0], [15.0, 148.0], [15.1, 149.0], [15.2, 150.0], [15.3, 151.0], [15.4, 152.0], [15.5, 152.0], [15.6, 153.0], [15.7, 153.0], [15.8, 154.0], [15.9, 154.0], [16.0, 157.0], [16.1, 158.0], [16.2, 159.0], [16.3, 160.0], [16.4, 161.0], [16.5, 161.0], [16.6, 162.0], [16.7, 163.0], [16.8, 163.0], [16.9, 163.0], [17.0, 164.0], [17.1, 166.0], [17.2, 166.0], [17.3, 166.0], [17.4, 167.0], [17.5, 167.0], [17.6, 167.0], [17.7, 167.0], [17.8, 168.0], [17.9, 169.0], [18.0, 170.0], [18.1, 170.0], [18.2, 171.0], [18.3, 172.0], [18.4, 173.0], [18.5, 174.0], [18.6, 175.0], [18.7, 176.0], [18.8, 177.0], [18.9, 178.0], [19.0, 179.0], [19.1, 180.0], [19.2, 182.0], [19.3, 182.0], [19.4, 183.0], [19.5, 184.0], [19.6, 185.0], [19.7, 187.0], [19.8, 189.0], [19.9, 190.0], [20.0, 190.0], [20.1, 191.0], [20.2, 192.0], [20.3, 193.0], [20.4, 193.0], [20.5, 194.0], [20.6, 195.0], [20.7, 197.0], [20.8, 199.0], [20.9, 201.0], [21.0, 202.0], [21.1, 203.0], [21.2, 211.0], [21.3, 214.0], [21.4, 217.0], [21.5, 219.0], [21.6, 219.0], [21.7, 220.0], [21.8, 221.0], [21.9, 222.0], [22.0, 223.0], [22.1, 224.0], [22.2, 226.0], [22.3, 227.0], [22.4, 227.0], [22.5, 228.0], [22.6, 228.0], [22.7, 229.0], [22.8, 229.0], [22.9, 230.0], [23.0, 230.0], [23.1, 231.0], [23.2, 232.0], [23.3, 232.0], [23.4, 233.0], [23.5, 234.0], [23.6, 234.0], [23.7, 235.0], [23.8, 235.0], [23.9, 236.0], [24.0, 236.0], [24.1, 237.0], [24.2, 238.0], [24.3, 239.0], [24.4, 239.0], [24.5, 240.0], [24.6, 241.0], [24.7, 243.0], [24.8, 243.0], [24.9, 244.0], [25.0, 244.0], [25.1, 245.0], [25.2, 245.0], [25.3, 245.0], [25.4, 246.0], [25.5, 247.0], [25.6, 247.0], [25.7, 248.0], [25.8, 248.0], [25.9, 249.0], [26.0, 249.0], [26.1, 250.0], [26.2, 251.0], [26.3, 251.0], [26.4, 252.0], [26.5, 252.0], [26.6, 253.0], [26.7, 253.0], [26.8, 254.0], [26.9, 254.0], [27.0, 254.0], [27.1, 255.0], [27.2, 255.0], [27.3, 255.0], [27.4, 256.0], [27.5, 257.0], [27.6, 257.0], [27.7, 258.0], [27.8, 258.0], [27.9, 259.0], [28.0, 260.0], [28.1, 260.0], [28.2, 262.0], [28.3, 263.0], [28.4, 264.0], [28.5, 267.0], [28.6, 282.0], [28.7, 285.0], [28.8, 286.0], [28.9, 287.0], [29.0, 288.0], [29.1, 290.0], [29.2, 291.0], [29.3, 292.0], [29.4, 293.0], [29.5, 294.0], [29.6, 295.0], [29.7, 295.0], [29.8, 296.0], [29.9, 297.0], [30.0, 298.0], [30.1, 298.0], [30.2, 298.0], [30.3, 299.0], [30.4, 299.0], [30.5, 300.0], [30.6, 300.0], [30.7, 302.0], [30.8, 303.0], [30.9, 304.0], [31.0, 304.0], [31.1, 305.0], [31.2, 305.0], [31.3, 307.0], [31.4, 307.0], [31.5, 308.0], [31.6, 310.0], [31.7, 311.0], [31.8, 313.0], [31.9, 313.0], [32.0, 314.0], [32.1, 314.0], [32.2, 315.0], [32.3, 316.0], [32.4, 318.0], [32.5, 321.0], [32.6, 321.0], [32.7, 322.0], [32.8, 323.0], [32.9, 324.0], [33.0, 325.0], [33.1, 326.0], [33.2, 328.0], [33.3, 329.0], [33.4, 330.0], [33.5, 331.0], [33.6, 332.0], [33.7, 332.0], [33.8, 332.0], [33.9, 334.0], [34.0, 335.0], [34.1, 336.0], [34.2, 337.0], [34.3, 338.0], [34.4, 339.0], [34.5, 341.0], [34.6, 342.0], [34.7, 343.0], [34.8, 344.0], [34.9, 344.0], [35.0, 345.0], [35.1, 346.0], [35.2, 347.0], [35.3, 347.0], [35.4, 348.0], [35.5, 349.0], [35.6, 350.0], [35.7, 351.0], [35.8, 352.0], [35.9, 353.0], [36.0, 354.0], [36.1, 355.0], [36.2, 356.0], [36.3, 357.0], [36.4, 358.0], [36.5, 360.0], [36.6, 362.0], [36.7, 364.0], [36.8, 365.0], [36.9, 367.0], [37.0, 368.0], [37.1, 370.0], [37.2, 370.0], [37.3, 372.0], [37.4, 373.0], [37.5, 374.0], [37.6, 375.0], [37.7, 378.0], [37.8, 380.0], [37.9, 381.0], [38.0, 382.0], [38.1, 385.0], [38.2, 387.0], [38.3, 389.0], [38.4, 390.0], [38.5, 391.0], [38.6, 392.0], [38.7, 393.0], [38.8, 394.0], [38.9, 395.0], [39.0, 395.0], [39.1, 396.0], [39.2, 396.0], [39.3, 397.0], [39.4, 399.0], [39.5, 399.0], [39.6, 399.0], [39.7, 400.0], [39.8, 400.0], [39.9, 401.0], [40.0, 402.0], [40.1, 403.0], [40.2, 403.0], [40.3, 404.0], [40.4, 404.0], [40.5, 405.0], [40.6, 405.0], [40.7, 406.0], [40.8, 407.0], [40.9, 408.0], [41.0, 409.0], [41.1, 409.0], [41.2, 411.0], [41.3, 412.0], [41.4, 412.0], [41.5, 412.0], [41.6, 413.0], [41.7, 413.0], [41.8, 413.0], [41.9, 413.0], [42.0, 414.0], [42.1, 414.0], [42.2, 415.0], [42.3, 415.0], [42.4, 415.0], [42.5, 416.0], [42.6, 418.0], [42.7, 418.0], [42.8, 420.0], [42.9, 421.0], [43.0, 421.0], [43.1, 422.0], [43.2, 422.0], [43.3, 422.0], [43.4, 423.0], [43.5, 424.0], [43.6, 424.0], [43.7, 426.0], [43.8, 428.0], [43.9, 428.0], [44.0, 429.0], [44.1, 429.0], [44.2, 430.0], [44.3, 431.0], [44.4, 433.0], [44.5, 433.0], [44.6, 434.0], [44.7, 435.0], [44.8, 436.0], [44.9, 437.0], [45.0, 438.0], [45.1, 438.0], [45.2, 440.0], [45.3, 440.0], [45.4, 440.0], [45.5, 441.0], [45.6, 442.0], [45.7, 442.0], [45.8, 443.0], [45.9, 443.0], [46.0, 444.0], [46.1, 444.0], [46.2, 445.0], [46.3, 445.0], [46.4, 446.0], [46.5, 446.0], [46.6, 447.0], [46.7, 447.0], [46.8, 448.0], [46.9, 448.0], [47.0, 449.0], [47.1, 450.0], [47.2, 451.0], [47.3, 452.0], [47.4, 452.0], [47.5, 453.0], [47.6, 453.0], [47.7, 454.0], [47.8, 455.0], [47.9, 457.0], [48.0, 458.0], [48.1, 458.0], [48.2, 458.0], [48.3, 459.0], [48.4, 460.0], [48.5, 460.0], [48.6, 461.0], [48.7, 462.0], [48.8, 462.0], [48.9, 464.0], [49.0, 465.0], [49.1, 466.0], [49.2, 467.0], [49.3, 467.0], [49.4, 468.0], [49.5, 468.0], [49.6, 469.0], [49.7, 470.0], [49.8, 470.0], [49.9, 471.0], [50.0, 471.0], [50.1, 472.0], [50.2, 472.0], [50.3, 473.0], [50.4, 473.0], [50.5, 475.0], [50.6, 476.0], [50.7, 476.0], [50.8, 477.0], [50.9, 477.0], [51.0, 477.0], [51.1, 478.0], [51.2, 479.0], [51.3, 479.0], [51.4, 479.0], [51.5, 479.0], [51.6, 480.0], [51.7, 481.0], [51.8, 482.0], [51.9, 483.0], [52.0, 484.0], [52.1, 484.0], [52.2, 485.0], [52.3, 485.0], [52.4, 486.0], [52.5, 487.0], [52.6, 488.0], [52.7, 488.0], [52.8, 488.0], [52.9, 490.0], [53.0, 491.0], [53.1, 491.0], [53.2, 492.0], [53.3, 493.0], [53.4, 495.0], [53.5, 495.0], [53.6, 496.0], [53.7, 496.0], [53.8, 497.0], [53.9, 497.0], [54.0, 498.0], [54.1, 498.0], [54.2, 499.0], [54.3, 500.0], [54.4, 500.0], [54.5, 501.0], [54.6, 503.0], [54.7, 503.0], [54.8, 504.0], [54.9, 504.0], [55.0, 506.0], [55.1, 507.0], [55.2, 508.0], [55.3, 508.0], [55.4, 509.0], [55.5, 511.0], [55.6, 512.0], [55.7, 512.0], [55.8, 514.0], [55.9, 514.0], [56.0, 515.0], [56.1, 516.0], [56.2, 517.0], [56.3, 518.0], [56.4, 519.0], [56.5, 519.0], [56.6, 520.0], [56.7, 520.0], [56.8, 520.0], [56.9, 523.0], [57.0, 524.0], [57.1, 526.0], [57.2, 527.0], [57.3, 528.0], [57.4, 529.0], [57.5, 530.0], [57.6, 531.0], [57.7, 531.0], [57.8, 531.0], [57.9, 532.0], [58.0, 532.0], [58.1, 533.0], [58.2, 534.0], [58.3, 535.0], [58.4, 537.0], [58.5, 538.0], [58.6, 540.0], [58.7, 541.0], [58.8, 541.0], [58.9, 542.0], [59.0, 544.0], [59.1, 546.0], [59.2, 547.0], [59.3, 548.0], [59.4, 548.0], [59.5, 549.0], [59.6, 549.0], [59.7, 551.0], [59.8, 551.0], [59.9, 552.0], [60.0, 553.0], [60.1, 554.0], [60.2, 555.0], [60.3, 555.0], [60.4, 556.0], [60.5, 557.0], [60.6, 557.0], [60.7, 559.0], [60.8, 560.0], [60.9, 561.0], [61.0, 561.0], [61.1, 562.0], [61.2, 563.0], [61.3, 564.0], [61.4, 566.0], [61.5, 569.0], [61.6, 570.0], [61.7, 571.0], [61.8, 571.0], [61.9, 571.0], [62.0, 572.0], [62.1, 574.0], [62.2, 576.0], [62.3, 576.0], [62.4, 576.0], [62.5, 577.0], [62.6, 579.0], [62.7, 580.0], [62.8, 581.0], [62.9, 584.0], [63.0, 585.0], [63.1, 586.0], [63.2, 586.0], [63.3, 588.0], [63.4, 589.0], [63.5, 591.0], [63.6, 593.0], [63.7, 593.0], [63.8, 594.0], [63.9, 595.0], [64.0, 596.0], [64.1, 598.0], [64.2, 600.0], [64.3, 602.0], [64.4, 603.0], [64.5, 604.0], [64.6, 605.0], [64.7, 606.0], [64.8, 606.0], [64.9, 607.0], [65.0, 609.0], [65.1, 610.0], [65.2, 611.0], [65.3, 612.0], [65.4, 613.0], [65.5, 614.0], [65.6, 616.0], [65.7, 617.0], [65.8, 619.0], [65.9, 621.0], [66.0, 622.0], [66.1, 624.0], [66.2, 625.0], [66.3, 626.0], [66.4, 627.0], [66.5, 629.0], [66.6, 631.0], [66.7, 631.0], [66.8, 635.0], [66.9, 636.0], [67.0, 638.0], [67.1, 639.0], [67.2, 642.0], [67.3, 643.0], [67.4, 645.0], [67.5, 645.0], [67.6, 648.0], [67.7, 649.0], [67.8, 652.0], [67.9, 653.0], [68.0, 654.0], [68.1, 655.0], [68.2, 656.0], [68.3, 658.0], [68.4, 659.0], [68.5, 661.0], [68.6, 664.0], [68.7, 667.0], [68.8, 667.0], [68.9, 668.0], [69.0, 668.0], [69.1, 669.0], [69.2, 673.0], [69.3, 673.0], [69.4, 674.0], [69.5, 675.0], [69.6, 676.0], [69.7, 678.0], [69.8, 680.0], [69.9, 681.0], [70.0, 682.0], [70.1, 684.0], [70.2, 685.0], [70.3, 685.0], [70.4, 686.0], [70.5, 687.0], [70.6, 688.0], [70.7, 689.0], [70.8, 690.0], [70.9, 691.0], [71.0, 692.0], [71.1, 694.0], [71.2, 695.0], [71.3, 697.0], [71.4, 697.0], [71.5, 698.0], [71.6, 700.0], [71.7, 703.0], [71.8, 704.0], [71.9, 705.0], [72.0, 705.0], [72.1, 707.0], [72.2, 708.0], [72.3, 709.0], [72.4, 710.0], [72.5, 710.0], [72.6, 711.0], [72.7, 711.0], [72.8, 712.0], [72.9, 713.0], [73.0, 713.0], [73.1, 714.0], [73.2, 716.0], [73.3, 717.0], [73.4, 720.0], [73.5, 721.0], [73.6, 723.0], [73.7, 726.0], [73.8, 726.0], [73.9, 728.0], [74.0, 729.0], [74.1, 731.0], [74.2, 731.0], [74.3, 733.0], [74.4, 734.0], [74.5, 735.0], [74.6, 737.0], [74.7, 739.0], [74.8, 740.0], [74.9, 741.0], [75.0, 743.0], [75.1, 745.0], [75.2, 749.0], [75.3, 751.0], [75.4, 752.0], [75.5, 755.0], [75.6, 757.0], [75.7, 757.0], [75.8, 759.0], [75.9, 763.0], [76.0, 764.0], [76.1, 766.0], [76.2, 771.0], [76.3, 773.0], [76.4, 776.0], [76.5, 777.0], [76.6, 779.0], [76.7, 780.0], [76.8, 781.0], [76.9, 781.0], [77.0, 782.0], [77.1, 782.0], [77.2, 783.0], [77.3, 784.0], [77.4, 784.0], [77.5, 785.0], [77.6, 786.0], [77.7, 786.0], [77.8, 786.0], [77.9, 787.0], [78.0, 788.0], [78.1, 789.0], [78.2, 789.0], [78.3, 789.0], [78.4, 790.0], [78.5, 791.0], [78.6, 792.0], [78.7, 792.0], [78.8, 792.0], [78.9, 793.0], [79.0, 793.0], [79.1, 794.0], [79.2, 794.0], [79.3, 795.0], [79.4, 795.0], [79.5, 796.0], [79.6, 797.0], [79.7, 798.0], [79.8, 800.0], [79.9, 801.0], [80.0, 802.0], [80.1, 803.0], [80.2, 804.0], [80.3, 804.0], [80.4, 805.0], [80.5, 805.0], [80.6, 806.0], [80.7, 807.0], [80.8, 810.0], [80.9, 813.0], [81.0, 814.0], [81.1, 816.0], [81.2, 818.0], [81.3, 818.0], [81.4, 819.0], [81.5, 820.0], [81.6, 822.0], [81.7, 823.0], [81.8, 824.0], [81.9, 825.0], [82.0, 826.0], [82.1, 827.0], [82.2, 828.0], [82.3, 828.0], [82.4, 829.0], [82.5, 830.0], [82.6, 830.0], [82.7, 831.0], [82.8, 833.0], [82.9, 833.0], [83.0, 834.0], [83.1, 835.0], [83.2, 836.0], [83.3, 837.0], [83.4, 838.0], [83.5, 839.0], [83.6, 840.0], [83.7, 841.0], [83.8, 842.0], [83.9, 842.0], [84.0, 842.0], [84.1, 843.0], [84.2, 844.0], [84.3, 844.0], [84.4, 845.0], [84.5, 845.0], [84.6, 846.0], [84.7, 846.0], [84.8, 847.0], [84.9, 847.0], [85.0, 848.0], [85.1, 849.0], [85.2, 849.0], [85.3, 850.0], [85.4, 852.0], [85.5, 852.0], [85.6, 852.0], [85.7, 854.0], [85.8, 854.0], [85.9, 855.0], [86.0, 857.0], [86.1, 857.0], [86.2, 858.0], [86.3, 858.0], [86.4, 860.0], [86.5, 860.0], [86.6, 861.0], [86.7, 862.0], [86.8, 862.0], [86.9, 863.0], [87.0, 864.0], [87.1, 864.0], [87.2, 866.0], [87.3, 867.0], [87.4, 867.0], [87.5, 868.0], [87.6, 869.0], [87.7, 869.0], [87.8, 871.0], [87.9, 872.0], [88.0, 873.0], [88.1, 875.0], [88.2, 875.0], [88.3, 875.0], [88.4, 876.0], [88.5, 876.0], [88.6, 877.0], [88.7, 877.0], [88.8, 878.0], [88.9, 878.0], [89.0, 879.0], [89.1, 879.0], [89.2, 879.0], [89.3, 881.0], [89.4, 882.0], [89.5, 883.0], [89.6, 884.0], [89.7, 884.0], [89.8, 885.0], [89.9, 885.0], [90.0, 885.0], [90.1, 886.0], [90.2, 887.0], [90.3, 887.0], [90.4, 889.0], [90.5, 890.0], [90.6, 892.0], [90.7, 893.0], [90.8, 894.0], [90.9, 895.0], [91.0, 895.0], [91.1, 895.0], [91.2, 898.0], [91.3, 898.0], [91.4, 900.0], [91.5, 901.0], [91.6, 902.0], [91.7, 903.0], [91.8, 904.0], [91.9, 906.0], [92.0, 906.0], [92.1, 907.0], [92.2, 908.0], [92.3, 909.0], [92.4, 910.0], [92.5, 910.0], [92.6, 910.0], [92.7, 911.0], [92.8, 911.0], [92.9, 911.0], [93.0, 911.0], [93.1, 912.0], [93.2, 912.0], [93.3, 913.0], [93.4, 914.0], [93.5, 914.0], [93.6, 915.0], [93.7, 915.0], [93.8, 916.0], [93.9, 916.0], [94.0, 917.0], [94.1, 917.0], [94.2, 918.0], [94.3, 918.0], [94.4, 919.0], [94.5, 920.0], [94.6, 920.0], [94.7, 922.0], [94.8, 923.0], [94.9, 923.0], [95.0, 924.0], [95.1, 924.0], [95.2, 924.0], [95.3, 926.0], [95.4, 927.0], [95.5, 927.0], [95.6, 928.0], [95.7, 928.0], [95.8, 930.0], [95.9, 931.0], [96.0, 932.0], [96.1, 932.0], [96.2, 934.0], [96.3, 935.0], [96.4, 936.0], [96.5, 937.0], [96.6, 940.0], [96.7, 947.0], [96.8, 951.0], [96.9, 954.0], [97.0, 956.0], [97.1, 958.0], [97.2, 960.0], [97.3, 962.0], [97.4, 963.0], [97.5, 964.0], [97.6, 965.0], [97.7, 967.0], [97.8, 968.0], [97.9, 969.0], [98.0, 969.0], [98.1, 972.0], [98.2, 974.0], [98.3, 976.0], [98.4, 978.0], [98.5, 980.0], [98.6, 981.0], [98.7, 988.0], [98.8, 995.0], [98.9, 999.0], [99.0, 1004.0], [99.1, 1006.0], [99.2, 1015.0], [99.3, 1021.0], [99.4, 1024.0], [99.5, 1026.0], [99.6, 1027.0], [99.7, 1028.0], [99.8, 1034.0], [99.9, 1040.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 4.0], [0.3, 4.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 7.0], [2.8, 7.0], [2.9, 7.0], [3.0, 8.0], [3.1, 8.0], [3.2, 8.0], [3.3, 10.0], [3.4, 10.0], [3.5, 11.0], [3.6, 12.0], [3.7, 12.0], [3.8, 13.0], [3.9, 13.0], [4.0, 14.0], [4.1, 15.0], [4.2, 15.0], [4.3, 16.0], [4.4, 17.0], [4.5, 17.0], [4.6, 19.0], [4.7, 21.0], [4.8, 22.0], [4.9, 23.0], [5.0, 23.0], [5.1, 23.0], [5.2, 25.0], [5.3, 25.0], [5.4, 26.0], [5.5, 26.0], [5.6, 26.0], [5.7, 26.0], [5.8, 27.0], [5.9, 27.0], [6.0, 27.0], [6.1, 27.0], [6.2, 27.0], [6.3, 28.0], [6.4, 28.0], [6.5, 28.0], [6.6, 28.0], [6.7, 28.0], [6.8, 29.0], [6.9, 29.0], [7.0, 29.0], [7.1, 29.0], [7.2, 29.0], [7.3, 29.0], [7.4, 29.0], [7.5, 30.0], [7.6, 30.0], [7.7, 30.0], [7.8, 30.0], [7.9, 30.0], [8.0, 30.0], [8.1, 30.0], [8.2, 31.0], [8.3, 31.0], [8.4, 31.0], [8.5, 31.0], [8.6, 31.0], [8.7, 31.0], [8.8, 31.0], [8.9, 31.0], [9.0, 31.0], [9.1, 32.0], [9.2, 32.0], [9.3, 32.0], [9.4, 32.0], [9.5, 32.0], [9.6, 32.0], [9.7, 32.0], [9.8, 32.0], [9.9, 32.0], [10.0, 32.0], [10.1, 32.0], [10.2, 32.0], [10.3, 33.0], [10.4, 33.0], [10.5, 33.0], [10.6, 33.0], [10.7, 33.0], [10.8, 33.0], [10.9, 33.0], [11.0, 33.0], [11.1, 33.0], [11.2, 33.0], [11.3, 33.0], [11.4, 33.0], [11.5, 33.0], [11.6, 33.0], [11.7, 33.0], [11.8, 33.0], [11.9, 33.0], [12.0, 33.0], [12.1, 34.0], [12.2, 34.0], [12.3, 34.0], [12.4, 34.0], [12.5, 34.0], [12.6, 34.0], [12.7, 34.0], [12.8, 34.0], [12.9, 34.0], [13.0, 34.0], [13.1, 34.0], [13.2, 34.0], [13.3, 34.0], [13.4, 34.0], [13.5, 34.0], [13.6, 34.0], [13.7, 34.0], [13.8, 34.0], [13.9, 34.0], [14.0, 34.0], [14.1, 34.0], [14.2, 34.0], [14.3, 34.0], [14.4, 34.0], [14.5, 34.0], [14.6, 34.0], [14.7, 34.0], [14.8, 34.0], [14.9, 34.0], [15.0, 34.0], [15.1, 34.0], [15.2, 34.0], [15.3, 34.0], [15.4, 34.0], [15.5, 35.0], [15.6, 35.0], [15.7, 35.0], [15.8, 35.0], [15.9, 35.0], [16.0, 35.0], [16.1, 35.0], [16.2, 35.0], [16.3, 35.0], [16.4, 35.0], [16.5, 35.0], [16.6, 35.0], [16.7, 35.0], [16.8, 35.0], [16.9, 35.0], [17.0, 35.0], [17.1, 35.0], [17.2, 35.0], [17.3, 35.0], [17.4, 35.0], [17.5, 35.0], [17.6, 35.0], [17.7, 35.0], [17.8, 35.0], [17.9, 35.0], [18.0, 35.0], [18.1, 35.0], [18.2, 35.0], [18.3, 35.0], [18.4, 35.0], [18.5, 35.0], [18.6, 35.0], [18.7, 35.0], [18.8, 35.0], [18.9, 35.0], [19.0, 35.0], [19.1, 35.0], [19.2, 35.0], [19.3, 36.0], [19.4, 36.0], [19.5, 36.0], [19.6, 36.0], [19.7, 36.0], [19.8, 36.0], [19.9, 36.0], [20.0, 36.0], [20.1, 36.0], [20.2, 36.0], [20.3, 36.0], [20.4, 36.0], [20.5, 36.0], [20.6, 36.0], [20.7, 36.0], [20.8, 36.0], [20.9, 36.0], [21.0, 36.0], [21.1, 36.0], [21.2, 36.0], [21.3, 36.0], [21.4, 36.0], [21.5, 36.0], [21.6, 36.0], [21.7, 36.0], [21.8, 36.0], [21.9, 36.0], [22.0, 36.0], [22.1, 36.0], [22.2, 36.0], [22.3, 36.0], [22.4, 36.0], [22.5, 36.0], [22.6, 36.0], [22.7, 36.0], [22.8, 36.0], [22.9, 37.0], [23.0, 37.0], [23.1, 37.0], [23.2, 37.0], [23.3, 37.0], [23.4, 37.0], [23.5, 37.0], [23.6, 37.0], [23.7, 37.0], [23.8, 37.0], [23.9, 37.0], [24.0, 37.0], [24.1, 37.0], [24.2, 37.0], [24.3, 37.0], [24.4, 37.0], [24.5, 37.0], [24.6, 37.0], [24.7, 37.0], [24.8, 37.0], [24.9, 37.0], [25.0, 37.0], [25.1, 37.0], [25.2, 37.0], [25.3, 37.0], [25.4, 37.0], [25.5, 37.0], [25.6, 37.0], [25.7, 37.0], [25.8, 37.0], [25.9, 37.0], [26.0, 37.0], [26.1, 37.0], [26.2, 37.0], [26.3, 38.0], [26.4, 38.0], [26.5, 38.0], [26.6, 38.0], [26.7, 38.0], [26.8, 38.0], [26.9, 38.0], [27.0, 38.0], [27.1, 38.0], [27.2, 38.0], [27.3, 38.0], [27.4, 38.0], [27.5, 38.0], [27.6, 38.0], [27.7, 38.0], [27.8, 38.0], [27.9, 38.0], [28.0, 38.0], [28.1, 38.0], [28.2, 38.0], [28.3, 38.0], [28.4, 38.0], [28.5, 38.0], [28.6, 38.0], [28.7, 38.0], [28.8, 38.0], [28.9, 38.0], [29.0, 38.0], [29.1, 38.0], [29.2, 38.0], [29.3, 38.0], [29.4, 38.0], [29.5, 38.0], [29.6, 38.0], [29.7, 38.0], [29.8, 38.0], [29.9, 38.0], [30.0, 38.0], [30.1, 38.0], [30.2, 38.0], [30.3, 38.0], [30.4, 38.0], [30.5, 38.0], [30.6, 38.0], [30.7, 38.0], [30.8, 39.0], [30.9, 39.0], [31.0, 39.0], [31.1, 39.0], [31.2, 39.0], [31.3, 39.0], [31.4, 39.0], [31.5, 39.0], [31.6, 39.0], [31.7, 39.0], [31.8, 39.0], [31.9, 39.0], [32.0, 39.0], [32.1, 39.0], [32.2, 39.0], [32.3, 39.0], [32.4, 39.0], [32.5, 39.0], [32.6, 39.0], [32.7, 39.0], [32.8, 39.0], [32.9, 39.0], [33.0, 39.0], [33.1, 39.0], [33.2, 39.0], [33.3, 39.0], [33.4, 39.0], [33.5, 39.0], [33.6, 39.0], [33.7, 39.0], [33.8, 39.0], [33.9, 39.0], [34.0, 39.0], [34.1, 39.0], [34.2, 39.0], [34.3, 39.0], [34.4, 39.0], [34.5, 39.0], [34.6, 39.0], [34.7, 39.0], [34.8, 39.0], [34.9, 39.0], [35.0, 39.0], [35.1, 40.0], [35.2, 40.0], [35.3, 40.0], [35.4, 40.0], [35.5, 40.0], [35.6, 40.0], [35.7, 40.0], [35.8, 40.0], [35.9, 40.0], [36.0, 40.0], [36.1, 40.0], [36.2, 40.0], [36.3, 40.0], [36.4, 40.0], [36.5, 40.0], [36.6, 40.0], [36.7, 40.0], [36.8, 40.0], [36.9, 40.0], [37.0, 40.0], [37.1, 40.0], [37.2, 40.0], [37.3, 40.0], [37.4, 40.0], [37.5, 40.0], [37.6, 40.0], [37.7, 40.0], [37.8, 40.0], [37.9, 40.0], [38.0, 40.0], [38.1, 40.0], [38.2, 40.0], [38.3, 40.0], [38.4, 40.0], [38.5, 40.0], [38.6, 40.0], [38.7, 40.0], [38.8, 40.0], [38.9, 40.0], [39.0, 40.0], [39.1, 40.0], [39.2, 40.0], [39.3, 40.0], [39.4, 41.0], [39.5, 41.0], [39.6, 41.0], [39.7, 41.0], [39.8, 41.0], [39.9, 41.0], [40.0, 41.0], [40.1, 41.0], [40.2, 41.0], [40.3, 41.0], [40.4, 41.0], [40.5, 41.0], [40.6, 41.0], [40.7, 41.0], [40.8, 41.0], [40.9, 41.0], [41.0, 41.0], [41.1, 41.0], [41.2, 41.0], [41.3, 41.0], [41.4, 41.0], [41.5, 41.0], [41.6, 41.0], [41.7, 41.0], [41.8, 41.0], [41.9, 41.0], [42.0, 41.0], [42.1, 41.0], [42.2, 41.0], [42.3, 41.0], [42.4, 41.0], [42.5, 41.0], [42.6, 41.0], [42.7, 41.0], [42.8, 41.0], [42.9, 41.0], [43.0, 41.0], [43.1, 41.0], [43.2, 41.0], [43.3, 41.0], [43.4, 41.0], [43.5, 41.0], [43.6, 41.0], [43.7, 42.0], [43.8, 42.0], [43.9, 42.0], [44.0, 42.0], [44.1, 42.0], [44.2, 42.0], [44.3, 42.0], [44.4, 42.0], [44.5, 42.0], [44.6, 42.0], [44.7, 42.0], [44.8, 42.0], [44.9, 42.0], [45.0, 42.0], [45.1, 42.0], [45.2, 42.0], [45.3, 42.0], [45.4, 42.0], [45.5, 42.0], [45.6, 42.0], [45.7, 42.0], [45.8, 42.0], [45.9, 42.0], [46.0, 42.0], [46.1, 42.0], [46.2, 42.0], [46.3, 42.0], [46.4, 42.0], [46.5, 42.0], [46.6, 42.0], [46.7, 42.0], [46.8, 42.0], [46.9, 42.0], [47.0, 42.0], [47.1, 42.0], [47.2, 42.0], [47.3, 42.0], [47.4, 42.0], [47.5, 42.0], [47.6, 42.0], [47.7, 42.0], [47.8, 42.0], [47.9, 42.0], [48.0, 42.0], [48.1, 42.0], [48.2, 42.0], [48.3, 42.0], [48.4, 42.0], [48.5, 42.0], [48.6, 42.0], [48.7, 42.0], [48.8, 42.0], [48.9, 43.0], [49.0, 43.0], [49.1, 43.0], [49.2, 43.0], [49.3, 43.0], [49.4, 43.0], [49.5, 43.0], [49.6, 43.0], [49.7, 43.0], [49.8, 43.0], [49.9, 43.0], [50.0, 43.0], [50.1, 43.0], [50.2, 43.0], [50.3, 43.0], [50.4, 43.0], [50.5, 43.0], [50.6, 43.0], [50.7, 43.0], [50.8, 43.0], [50.9, 43.0], [51.0, 43.0], [51.1, 43.0], [51.2, 43.0], [51.3, 43.0], [51.4, 43.0], [51.5, 43.0], [51.6, 43.0], [51.7, 43.0], [51.8, 43.0], [51.9, 43.0], [52.0, 43.0], [52.1, 43.0], [52.2, 43.0], [52.3, 43.0], [52.4, 43.0], [52.5, 43.0], [52.6, 43.0], [52.7, 43.0], [52.8, 43.0], [52.9, 43.0], [53.0, 43.0], [53.1, 43.0], [53.2, 43.0], [53.3, 43.0], [53.4, 43.0], [53.5, 43.0], [53.6, 43.0], [53.7, 43.0], [53.8, 43.0], [53.9, 44.0], [54.0, 44.0], [54.1, 44.0], [54.2, 44.0], [54.3, 44.0], [54.4, 44.0], [54.5, 44.0], [54.6, 44.0], [54.7, 44.0], [54.8, 44.0], [54.9, 44.0], [55.0, 44.0], [55.1, 44.0], [55.2, 44.0], [55.3, 44.0], [55.4, 44.0], [55.5, 44.0], [55.6, 44.0], [55.7, 44.0], [55.8, 44.0], [55.9, 44.0], [56.0, 44.0], [56.1, 44.0], [56.2, 44.0], [56.3, 44.0], [56.4, 44.0], [56.5, 44.0], [56.6, 44.0], [56.7, 44.0], [56.8, 44.0], [56.9, 44.0], [57.0, 44.0], [57.1, 44.0], [57.2, 44.0], [57.3, 44.0], [57.4, 44.0], [57.5, 44.0], [57.6, 44.0], [57.7, 44.0], [57.8, 44.0], [57.9, 44.0], [58.0, 44.0], [58.1, 44.0], [58.2, 44.0], [58.3, 44.0], [58.4, 44.0], [58.5, 44.0], [58.6, 44.0], [58.7, 44.0], [58.8, 45.0], [58.9, 45.0], [59.0, 45.0], [59.1, 45.0], [59.2, 45.0], [59.3, 45.0], [59.4, 45.0], [59.5, 45.0], [59.6, 45.0], [59.7, 45.0], [59.8, 45.0], [59.9, 45.0], [60.0, 45.0], [60.1, 45.0], [60.2, 45.0], [60.3, 45.0], [60.4, 45.0], [60.5, 45.0], [60.6, 45.0], [60.7, 45.0], [60.8, 45.0], [60.9, 45.0], [61.0, 45.0], [61.1, 45.0], [61.2, 45.0], [61.3, 45.0], [61.4, 45.0], [61.5, 45.0], [61.6, 45.0], [61.7, 45.0], [61.8, 45.0], [61.9, 45.0], [62.0, 45.0], [62.1, 45.0], [62.2, 45.0], [62.3, 45.0], [62.4, 46.0], [62.5, 46.0], [62.6, 46.0], [62.7, 46.0], [62.8, 46.0], [62.9, 46.0], [63.0, 46.0], [63.1, 46.0], [63.2, 46.0], [63.3, 46.0], [63.4, 46.0], [63.5, 46.0], [63.6, 46.0], [63.7, 46.0], [63.8, 46.0], [63.9, 46.0], [64.0, 46.0], [64.1, 46.0], [64.2, 46.0], [64.3, 46.0], [64.4, 46.0], [64.5, 46.0], [64.6, 46.0], [64.7, 46.0], [64.8, 46.0], [64.9, 46.0], [65.0, 46.0], [65.1, 46.0], [65.2, 46.0], [65.3, 46.0], [65.4, 46.0], [65.5, 46.0], [65.6, 46.0], [65.7, 46.0], [65.8, 47.0], [65.9, 47.0], [66.0, 47.0], [66.1, 47.0], [66.2, 47.0], [66.3, 47.0], [66.4, 47.0], [66.5, 47.0], [66.6, 47.0], [66.7, 47.0], [66.8, 47.0], [66.9, 47.0], [67.0, 47.0], [67.1, 47.0], [67.2, 47.0], [67.3, 47.0], [67.4, 47.0], [67.5, 47.0], [67.6, 47.0], [67.7, 47.0], [67.8, 47.0], [67.9, 47.0], [68.0, 47.0], [68.1, 47.0], [68.2, 47.0], [68.3, 47.0], [68.4, 47.0], [68.5, 47.0], [68.6, 47.0], [68.7, 47.0], [68.8, 47.0], [68.9, 47.0], [69.0, 47.0], [69.1, 47.0], [69.2, 48.0], [69.3, 48.0], [69.4, 48.0], [69.5, 48.0], [69.6, 48.0], [69.7, 48.0], [69.8, 48.0], [69.9, 48.0], [70.0, 48.0], [70.1, 48.0], [70.2, 48.0], [70.3, 48.0], [70.4, 48.0], [70.5, 48.0], [70.6, 48.0], [70.7, 48.0], [70.8, 48.0], [70.9, 48.0], [71.0, 48.0], [71.1, 48.0], [71.2, 48.0], [71.3, 48.0], [71.4, 48.0], [71.5, 48.0], [71.6, 48.0], [71.7, 48.0], [71.8, 48.0], [71.9, 49.0], [72.0, 49.0], [72.1, 49.0], [72.2, 49.0], [72.3, 49.0], [72.4, 49.0], [72.5, 49.0], [72.6, 49.0], [72.7, 49.0], [72.8, 49.0], [72.9, 49.0], [73.0, 49.0], [73.1, 49.0], [73.2, 49.0], [73.3, 49.0], [73.4, 49.0], [73.5, 49.0], [73.6, 49.0], [73.7, 49.0], [73.8, 49.0], [73.9, 49.0], [74.0, 49.0], [74.1, 49.0], [74.2, 49.0], [74.3, 49.0], [74.4, 49.0], [74.5, 50.0], [74.6, 50.0], [74.7, 50.0], [74.8, 50.0], [74.9, 50.0], [75.0, 50.0], [75.1, 50.0], [75.2, 50.0], [75.3, 50.0], [75.4, 50.0], [75.5, 50.0], [75.6, 50.0], [75.7, 50.0], [75.8, 50.0], [75.9, 50.0], [76.0, 50.0], [76.1, 50.0], [76.2, 50.0], [76.3, 50.0], [76.4, 50.0], [76.5, 50.0], [76.6, 50.0], [76.7, 50.0], [76.8, 50.0], [76.9, 50.0], [77.0, 50.0], [77.1, 50.0], [77.2, 51.0], [77.3, 51.0], [77.4, 51.0], [77.5, 51.0], [77.6, 51.0], [77.7, 51.0], [77.8, 51.0], [77.9, 51.0], [78.0, 51.0], [78.1, 51.0], [78.2, 51.0], [78.3, 51.0], [78.4, 51.0], [78.5, 51.0], [78.6, 51.0], [78.7, 51.0], [78.8, 51.0], [78.9, 51.0], [79.0, 51.0], [79.1, 51.0], [79.2, 51.0], [79.3, 51.0], [79.4, 52.0], [79.5, 52.0], [79.6, 52.0], [79.7, 52.0], [79.8, 52.0], [79.9, 52.0], [80.0, 52.0], [80.1, 52.0], [80.2, 52.0], [80.3, 52.0], [80.4, 52.0], [80.5, 52.0], [80.6, 52.0], [80.7, 52.0], [80.8, 52.0], [80.9, 52.0], [81.0, 52.0], [81.1, 52.0], [81.2, 52.0], [81.3, 52.0], [81.4, 52.0], [81.5, 53.0], [81.6, 53.0], [81.7, 53.0], [81.8, 53.0], [81.9, 53.0], [82.0, 53.0], [82.1, 53.0], [82.2, 53.0], [82.3, 53.0], [82.4, 53.0], [82.5, 53.0], [82.6, 53.0], [82.7, 53.0], [82.8, 53.0], [82.9, 53.0], [83.0, 53.0], [83.1, 53.0], [83.2, 54.0], [83.3, 54.0], [83.4, 54.0], [83.5, 54.0], [83.6, 54.0], [83.7, 54.0], [83.8, 54.0], [83.9, 54.0], [84.0, 54.0], [84.1, 54.0], [84.2, 54.0], [84.3, 54.0], [84.4, 54.0], [84.5, 54.0], [84.6, 55.0], [84.7, 55.0], [84.8, 55.0], [84.9, 55.0], [85.0, 55.0], [85.1, 55.0], [85.2, 55.0], [85.3, 55.0], [85.4, 56.0], [85.5, 56.0], [85.6, 56.0], [85.7, 56.0], [85.8, 56.0], [85.9, 56.0], [86.0, 56.0], [86.1, 56.0], [86.2, 56.0], [86.3, 56.0], [86.4, 57.0], [86.5, 57.0], [86.6, 57.0], [86.7, 57.0], [86.8, 57.0], [86.9, 57.0], [87.0, 57.0], [87.1, 57.0], [87.2, 58.0], [87.3, 58.0], [87.4, 58.0], [87.5, 58.0], [87.6, 58.0], [87.7, 58.0], [87.8, 58.0], [87.9, 59.0], [88.0, 59.0], [88.1, 59.0], [88.2, 59.0], [88.3, 59.0], [88.4, 60.0], [88.5, 60.0], [88.6, 60.0], [88.7, 60.0], [88.8, 60.0], [88.9, 61.0], [89.0, 61.0], [89.1, 61.0], [89.2, 61.0], [89.3, 61.0], [89.4, 62.0], [89.5, 62.0], [89.6, 62.0], [89.7, 63.0], [89.8, 63.0], [89.9, 64.0], [90.0, 64.0], [90.1, 64.0], [90.2, 65.0], [90.3, 65.0], [90.4, 68.0], [90.5, 72.0], [90.6, 77.0], [90.7, 111.0], [90.8, 112.0], [90.9, 121.0], [91.0, 126.0], [91.1, 129.0], [91.2, 133.0], [91.3, 158.0], [91.4, 163.0], [91.5, 164.0], [91.6, 165.0], [91.7, 166.0], [91.8, 166.0], [91.9, 167.0], [92.0, 168.0], [92.1, 168.0], [92.2, 169.0], [92.3, 170.0], [92.4, 171.0], [92.5, 172.0], [92.6, 173.0], [92.7, 174.0], [92.8, 174.0], [92.9, 175.0], [93.0, 176.0], [93.1, 178.0], [93.2, 179.0], [93.3, 180.0], [93.4, 183.0], [93.5, 185.0], [93.6, 187.0], [93.7, 191.0], [93.8, 198.0], [93.9, 200.0], [94.0, 202.0], [94.1, 203.0], [94.2, 207.0], [94.3, 208.0], [94.4, 209.0], [94.5, 211.0], [94.6, 213.0], [94.7, 216.0], [94.8, 217.0], [94.9, 218.0], [95.0, 221.0], [95.1, 225.0], [95.2, 228.0], [95.3, 230.0], [95.4, 231.0], [95.5, 232.0], [95.6, 234.0], [95.7, 235.0], [95.8, 236.0], [95.9, 236.0], [96.0, 238.0], [96.1, 239.0], [96.2, 240.0], [96.3, 240.0], [96.4, 241.0], [96.5, 241.0], [96.6, 241.0], [96.7, 242.0], [96.8, 242.0], [96.9, 242.0], [97.0, 243.0], [97.1, 243.0], [97.2, 244.0], [97.3, 244.0], [97.4, 244.0], [97.5, 245.0], [97.6, 245.0], [97.7, 245.0], [97.8, 246.0], [97.9, 246.0], [98.0, 247.0], [98.1, 247.0], [98.2, 247.0], [98.3, 247.0], [98.4, 248.0], [98.5, 248.0], [98.6, 248.0], [98.7, 249.0], [98.8, 249.0], [98.9, 249.0], [99.0, 250.0], [99.1, 252.0], [99.2, 253.0], [99.3, 255.0], [99.4, 256.0], [99.5, 268.0], [99.6, 268.0], [99.7, 272.0], [99.8, 276.0], [99.9, 279.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2999.0, "series": [{"data": [[0.0, 2999.0], [100.0, 1.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 217.0], [300.0, 277.0], [600.0, 221.0], [700.0, 248.0], [100.0, 407.0], [200.0, 288.0], [400.0, 439.0], [800.0, 348.0], [900.0, 226.0], [500.0, 297.0], [1000.0, 32.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 2719.0], [100.0, 98.0], [200.0, 183.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1367.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7633.0, "series": [{"data": [[0.0, 7633.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1367.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 84.607, "minX": 1.66901802E12, "maxY": 655.2533333333345, "series": [{"data": [[1.66901802E12, 655.2533333333345]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.66901802E12, 97.23999999999982]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.66901802E12, 84.607]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901802E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.0, "maxY": 1041.0, "series": [{"data": [[8.0, 71.66666666666667], [9.0, 70.75], [16.0, 87.0], [17.0, 71.0], [21.0, 71.0], [22.0, 74.57142857142857], [23.0, 71.0], [26.0, 40.25], [27.0, 52.14285714285714], [28.0, 48.75], [29.0, 47.166666666666664], [30.0, 50.333333333333336], [31.0, 50.300000000000004], [33.0, 45.125], [32.0, 41.33333333333333], [35.0, 46.916666666666664], [34.0, 46.125], [37.0, 47.25], [36.0, 48.57142857142857], [39.0, 41.52173913043479], [38.0, 49.222222222222214], [41.0, 56.1], [40.0, 56.31250000000001], [43.0, 55.93333333333334], [42.0, 55.583333333333336], [44.0, 50.62500000000001], [45.0, 48.07142857142858], [47.0, 55.60714285714286], [46.0, 43.47368421052631], [49.0, 49.458333333333336], [48.0, 52.52173913043478], [50.0, 51.33333333333334], [51.0, 49.8076923076923], [53.0, 47.047619047619044], [52.0, 56.449999999999996], [55.0, 52.19444444444445], [54.0, 51.5], [56.0, 49.888888888888886], [57.0, 53.95238095238094], [58.0, 55.51351351351351], [59.0, 55.105263157894726], [60.0, 54.906976744186046], [61.0, 51.478260869565226], [63.0, 57.937499999999986], [62.0, 51.27777777777778], [67.0, 52.89285714285714], [65.0, 56.870967741935466], [66.0, 58.32258064516129], [64.0, 53.7391304347826], [71.0, 58.34375000000002], [69.0, 60.212765957446805], [70.0, 56.06451612903226], [68.0, 56.0], [74.0, 55.298245614035096], [75.0, 57.241379310344826], [73.0, 56.97500000000001], [72.0, 55.70967741935484], [76.0, 58.08333333333333], [77.0, 57.734693877551], [79.0, 56.29411764705882], [78.0, 57.28947368421054], [81.0, 56.63636363636364], [83.0, 56.82500000000002], [80.0, 57.26923076923077], [82.0, 56.652173913043484], [86.0, 55.02222222222223], [85.0, 56.375], [84.0, 60.49999999999999], [87.0, 56.03225806451613], [91.0, 57.72413793103449], [89.0, 59.04166666666668], [88.0, 58.20833333333332], [90.0, 58.5], [92.0, 56.55555555555555], [95.0, 68.5], [94.0, 61.31250000000001], [93.0, 60.153846153846146], [99.0, 56.266666666666666], [97.0, 61.3], [96.0, 59.45454545454545], [98.0, 69.5], [102.0, 59.0], [100.0, 58.473684210526315], [103.0, 57.46153846153846], [101.0, 63.25], [106.0, 64.18181818181819], [107.0, 65.44444444444444], [105.0, 56.93333333333334], [104.0, 55.526315789473685], [111.0, 65.35999999999999], [108.0, 61.086956521739125], [109.0, 62.28571428571429], [110.0, 57.166666666666664], [114.0, 59.550000000000004], [115.0, 58.56], [113.0, 65.66666666666667], [112.0, 63.18181818181819], [119.0, 68.91666666666667], [118.0, 59.45454545454546], [117.0, 60.666666666666664], [116.0, 64.72413793103448], [123.0, 60.50000000000001], [121.0, 59.44444444444444], [120.0, 65.42857142857143], [122.0, 67.0], [126.0, 64.76923076923076], [127.0, 63.5], [125.0, 61.0], [124.0, 68.02857142857142], [133.0, 65.26315789473685], [131.0, 66.57142857142858], [130.0, 65.7], [135.0, 63.16666666666666], [134.0, 63.217391304347835], [132.0, 64.25806451612901], [129.0, 70.83333333333333], [128.0, 67.89999999999999], [140.0, 68.27777777777779], [139.0, 71.11111111111111], [137.0, 65.0], [136.0, 64.59459459459458], [143.0, 69.65], [142.0, 71.53846153846153], [141.0, 67.19999999999999], [138.0, 65.83333333333333], [149.0, 72.99999999999999], [147.0, 65.05], [146.0, 73.03703703703704], [145.0, 71.69230769230768], [144.0, 71.88888888888889], [151.0, 66.7142857142857], [150.0, 72.26666666666667], [148.0, 67.375], [155.0, 67.46153846153847], [154.0, 69.6470588235294], [152.0, 67.5], [159.0, 64.2], [158.0, 66.15384615384616], [157.0, 64.35294117647058], [156.0, 67.92307692307693], [153.0, 71.55813953488372], [167.0, 68.7], [166.0, 63.666666666666664], [165.0, 69.0], [164.0, 65.44444444444444], [163.0, 70.11111111111111], [162.0, 65.29999999999998], [161.0, 66.72727272727273], [160.0, 70.07407407407408], [173.0, 62.5], [172.0, 63.5], [171.0, 68.0], [170.0, 65.37499999999999], [169.0, 69.25], [168.0, 59.625], [175.0, 77.0], [182.0, 77.33333333333333], [183.0, 69.0], [181.0, 76.0], [190.0, 76.0], [187.0, 69.0], [186.0, 68.0], [185.0, 58.5], [184.0, 62.5], [199.0, 84.0], [198.0, 65.0], [197.0, 72.0], [194.0, 72.66666666666667], [192.0, 63.5], [207.0, 64.0], [206.0, 57.5], [205.0, 67.5], [204.0, 65.0], [203.0, 65.5], [202.0, 60.0], [201.0, 57.0], [200.0, 67.0], [212.0, 64.0], [210.0, 52.0], [209.0, 69.0], [215.0, 67.33333333333333], [211.0, 68.0], [223.0, 61.0], [222.0, 69.0], [221.0, 63.75], [220.0, 70.33333333333333], [219.0, 66.0], [218.0, 79.5], [216.0, 66.0], [231.0, 74.72727272727273], [230.0, 62.0], [229.0, 66.5], [226.0, 64.0], [225.0, 75.0], [232.0, 69.0], [243.0, 68.8], [245.0, 70.0], [246.0, 64.0], [247.0, 72.25], [252.0, 68.8], [250.0, 72.75], [249.0, 70.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[97.23999999999982, 59.525000000000006]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 962.0], [3.0, 965.0], [4.0, 965.0], [5.0, 967.0], [6.0, 978.0], [7.0, 980.0], [8.0, 985.0], [9.0, 993.0], [10.0, 996.0], [11.0, 1001.0], [14.0, 954.0], [18.0, 957.0], [19.0, 1016.0], [20.0, 981.0], [21.0, 1006.75], [22.0, 960.0], [23.0, 1025.0], [26.0, 991.3333333333334], [27.0, 932.0], [30.0, 979.0], [31.0, 964.0], [35.0, 923.0], [34.0, 961.3333333333334], [37.0, 922.0], [39.0, 973.0], [41.0, 941.5], [40.0, 918.0], [42.0, 912.0], [44.0, 1026.0], [47.0, 907.0], [46.0, 931.0], [49.0, 954.0], [48.0, 927.0], [51.0, 972.5], [53.0, 908.5], [55.0, 966.0], [54.0, 900.0], [56.0, 894.0], [59.0, 944.5], [58.0, 1022.0], [60.0, 911.0], [62.0, 973.5], [67.0, 920.0], [66.0, 932.0], [64.0, 894.5], [70.0, 960.0], [69.0, 1024.0], [68.0, 881.0], [75.0, 914.0], [74.0, 969.0], [73.0, 875.0], [72.0, 900.5], [78.0, 895.0], [77.0, 966.0], [83.0, 863.0], [82.0, 867.0], [81.0, 903.0], [80.0, 909.0], [87.0, 1040.0], [86.0, 877.0], [85.0, 914.0], [84.0, 885.0], [91.0, 999.5], [89.0, 896.0], [88.0, 915.0], [95.0, 912.0], [94.0, 884.5], [92.0, 972.0], [97.0, 478.5], [99.0, 903.0], [98.0, 972.0], [96.0, 860.0], [103.0, 852.0], [102.0, 898.0], [101.0, 912.0], [100.0, 1041.0], [107.0, 924.0], [106.0, 969.0], [105.0, 927.0], [104.0, 1036.0], [111.0, 441.0], [110.0, 850.0], [109.0, 887.0], [108.0, 854.0], [115.0, 895.0], [114.0, 918.0], [113.0, 919.0], [112.0, 1032.0], [119.0, 885.0], [118.0, 975.0], [117.0, 903.0], [116.0, 969.0], [123.0, 298.0], [122.0, 614.6666666666666], [121.0, 32.0], [120.0, 104.66666666666667], [126.0, 251.0], [127.0, 911.0], [125.0, 1027.0], [124.0, 845.0], [135.0, 305.0], [134.0, 231.83333333333334], [132.0, 210.42857142857142], [133.0, 498.0], [130.0, 516.25], [128.0, 83.0], [131.0, 576.0], [129.0, 930.0], [143.0, 152.91666666666666], [142.0, 248.0], [141.0, 132.85714285714283], [140.0, 181.14285714285714], [137.0, 174.0], [139.0, 221.53846153846155], [138.0, 99.0], [136.0, 221.42857142857144], [148.0, 191.29411764705884], [147.0, 89.39999999999999], [145.0, 81.3], [151.0, 171.88888888888889], [150.0, 141.6], [149.0, 120.3], [146.0, 212.58333333333331], [144.0, 167.8], [153.0, 169.63636363636363], [152.0, 134.625], [156.0, 351.0], [155.0, 85.83333333333333], [157.0, 269.0], [154.0, 258.0], [158.0, 233.0], [159.0, 265.4], [164.0, 108.25], [162.0, 223.5], [161.0, 396.3333333333333], [166.0, 113.0], [160.0, 236.66666666666669], [167.0, 525.5], [165.0, 874.5], [163.0, 917.0], [175.0, 379.6666666666667], [174.0, 492.0], [172.0, 483.0], [171.0, 153.84615384615384], [170.0, 546.5], [169.0, 365.6666666666667], [168.0, 425.8], [182.0, 240.16666666666666], [181.0, 348.75], [180.0, 316.75], [183.0, 185.45454545454544], [179.0, 924.0], [178.0, 829.0], [177.0, 958.0], [190.0, 390.3333333333333], [189.0, 360.33333333333337], [186.0, 125.0], [187.0, 249.5], [184.0, 249.5], [191.0, 111.4], [185.0, 462.5], [188.0, 445.4], [197.0, 370.0], [195.0, 113.5], [194.0, 674.0], [193.0, 125.5], [192.0, 490.25], [199.0, 315.5], [196.0, 523.5], [198.0, 826.0], [207.0, 480.0], [205.0, 534.25], [204.0, 97.0], [203.0, 540.75], [202.0, 112.0], [201.0, 372.6666666666667], [200.0, 885.0], [213.0, 506.0], [212.0, 319.5], [210.0, 563.5], [209.0, 289.0], [215.0, 312.0], [211.0, 545.0], [214.0, 919.0], [208.0, 898.0], [219.0, 478.0], [218.0, 531.5], [217.0, 316.5], [216.0, 388.6666666666667], [222.0, 527.5], [221.0, 524.5], [223.0, 988.0], [220.0, 923.0], [231.0, 559.5], [230.0, 361.33333333333337], [229.0, 879.0], [227.0, 967.0], [226.0, 933.0], [225.0, 917.0], [224.0, 829.0], [239.0, 397.3333333333333], [238.0, 400.0], [236.0, 419.6666666666667], [234.0, 477.5], [232.0, 532.5], [237.0, 927.0], [235.0, 963.0], [233.0, 935.0], [240.0, 365.33333333333337], [247.0, 822.0], [246.0, 924.0], [245.0, 924.0], [244.0, 981.0], [243.0, 940.0], [242.0, 935.0], [241.0, 926.0], [254.0, 931.0], [253.0, 937.0], [252.0, 955.0], [251.0, 924.0], [250.0, 842.0], [249.0, 937.0], [248.0, 813.0], [268.0, 151.875], [266.0, 258.375], [267.0, 293.6363636363636], [265.0, 322.875], [264.0, 153.44444444444446], [263.0, 359.5714285714286], [257.0, 914.0], [256.0, 928.0], [259.0, 844.0], [258.0, 916.0], [262.0, 150.83333333333331], [261.0, 317.25], [269.0, 306.55555555555554], [270.0, 230.1818181818182], [271.0, 321.6], [260.0, 483.0], [275.0, 347.0], [277.0, 416.0], [276.0, 552.0], [272.0, 419.0], [274.0, 919.0], [273.0, 916.0], [278.0, 923.0], [287.0, 911.0], [281.0, 922.0], [280.0, 842.5], [286.0, 833.0], [285.0, 962.0], [284.0, 920.0], [283.0, 911.0], [282.0, 862.0], [303.0, 945.5], [299.0, 164.0], [297.0, 639.6666666666666], [294.0, 153.0], [293.0, 538.5], [301.0, 872.0], [298.0, 921.0], [296.0, 857.0], [291.0, 910.0], [290.0, 924.0], [288.0, 928.0], [307.0, 901.0], [319.0, 862.0], [318.0, 909.3333333333334], [315.0, 893.0], [313.0, 926.5], [311.0, 894.3333333333334], [309.0, 908.0], [306.0, 908.5], [304.0, 935.0], [335.0, 895.3333333333334], [332.0, 909.5], [330.0, 875.0], [329.0, 908.5], [327.0, 886.25], [324.0, 858.0], [322.0, 897.0], [350.0, 892.0], [347.0, 174.25], [346.0, 916.0], [345.0, 528.0], [342.0, 530.5], [343.0, 344.5], [338.0, 911.0], [337.0, 892.0], [341.0, 540.0], [340.0, 539.0], [351.0, 899.0], [348.0, 900.5], [339.0, 855.0], [365.0, 907.0], [367.0, 895.5], [364.0, 844.0], [354.0, 882.0], [363.0, 867.0], [362.0, 886.0], [361.0, 929.0], [360.0, 879.0], [359.0, 878.0], [358.0, 910.0], [357.0, 892.6666666666666], [380.0, 547.0], [382.0, 169.0], [378.0, 622.3333333333334], [376.0, 655.0], [381.0, 861.0], [379.0, 871.0], [374.0, 869.0], [373.0, 887.5], [371.0, 879.5], [369.0, 887.0], [368.0, 852.0], [398.0, 185.0], [385.0, 158.0], [386.0, 170.0], [387.0, 870.0], [384.0, 311.0], [391.0, 876.0], [390.0, 866.0], [389.0, 878.5], [399.0, 631.3333333333334], [393.0, 546.5], [397.0, 651.6666666666666], [396.0, 523.5], [395.0, 170.0], [394.0, 633.3333333333334], [401.0, 528.0], [414.0, 178.0], [415.0, 881.5], [413.0, 862.5], [411.0, 856.5], [409.0, 865.3333333333333], [407.0, 894.0], [418.0, 177.5], [419.0, 535.5], [417.0, 635.3333333333334], [416.0, 173.5], [430.0, 852.0], [429.0, 869.5], [427.0, 879.5], [425.0, 898.0], [423.0, 882.0], [421.0, 860.5], [445.0, 870.0], [444.0, 860.5], [443.0, 871.0], [442.0, 899.0], [441.0, 887.0], [439.0, 842.0], [437.0, 882.5], [436.0, 877.0], [440.0, 886.0], [435.0, 868.6666666666666], [459.0, 187.0], [457.0, 792.375], [458.0, 185.33333333333334], [463.0, 860.0], [461.0, 865.75], [460.0, 836.0], [450.0, 843.0], [467.0, 528.5], [469.0, 359.5], [471.0, 519.0], [466.0, 874.0], [464.0, 884.0], [470.0, 353.5], [468.0, 545.5], [479.0, 866.5], [472.0, 878.0], [477.0, 837.0], [476.0, 879.0], [475.0, 869.0], [473.0, 832.0], [494.0, 319.33333333333337], [495.0, 220.0], [492.0, 340.4], [483.0, 842.0], [482.0, 858.0], [481.0, 866.0], [490.0, 477.0], [488.0, 418.66666666666663], [491.0, 529.5], [489.0, 202.66666666666666], [487.0, 871.0], [486.0, 873.0], [485.0, 861.0], [484.0, 869.0], [511.0, 287.875], [507.0, 392.2857142857143], [509.0, 200.0], [508.0, 200.5], [499.0, 542.75], [498.0, 438.66666666666663], [497.0, 446.33333333333337], [496.0, 627.6666666666666], [506.0, 529.125], [505.0, 211.5], [510.0, 220.25], [504.0, 316.5], [503.0, 279.16666666666663], [501.0, 194.25], [500.0, 229.0], [502.0, 233.5], [519.0, 549.5], [515.0, 723.4], [513.0, 371.375], [512.0, 206.4], [526.0, 805.0], [525.0, 810.0], [524.0, 812.0], [523.0, 854.0], [516.0, 226.44444444444446], [514.0, 358.6], [517.0, 478.2], [521.0, 421.0], [520.0, 551.5], [543.0, 623.6666666666666], [529.0, 836.5], [528.0, 845.0], [531.0, 800.0], [530.0, 833.0], [533.0, 805.0], [532.0, 852.0], [535.0, 855.0], [534.0, 847.0], [542.0, 250.33333333333334], [540.0, 517.5], [538.0, 858.0], [537.0, 829.0], [536.0, 806.0], [518.0, 440.33333333333337], [564.0, 525.25], [547.0, 488.0], [569.0, 837.0], [568.0, 827.0], [575.0, 227.33333333333334], [561.0, 805.0], [574.0, 820.0], [573.0, 193.0], [546.0, 668.75], [545.0, 251.0], [544.0, 244.5], [559.0, 841.0], [558.0, 813.25], [557.0, 825.3333333333334], [554.0, 811.5], [567.0, 550.0], [566.0, 508.0], [565.0, 425.33333333333337], [563.0, 240.0], [562.0, 541.0], [600.0, 239.5], [604.0, 584.0], [607.0, 531.0], [592.0, 533.75], [593.0, 534.0], [596.0, 370.8], [595.0, 788.0], [594.0, 360.2307692307693], [606.0, 293.5], [605.0, 402.5], [603.0, 275.0], [602.0, 277.5], [601.0, 543.0], [591.0, 216.5], [577.0, 239.0], [576.0, 508.0], [579.0, 735.1428571428571], [578.0, 247.0], [581.0, 252.0], [580.0, 634.0], [583.0, 249.0], [582.0, 625.6666666666666], [590.0, 412.0], [589.0, 232.0], [588.0, 626.0], [587.0, 236.33333333333334], [585.0, 523.0], [586.0, 665.75], [584.0, 551.5], [598.0, 440.33333333333337], [599.0, 548.0], [597.0, 439.0], [611.0, 460.8], [612.0, 251.0], [613.0, 471.8], [610.0, 449.0], [609.0, 256.0], [608.0, 358.4], [623.0, 293.0], [622.0, 298.6666666666667], [621.0, 460.33333333333337], [619.0, 420.0], [620.0, 303.0], [618.0, 541.5], [617.0, 428.66666666666663], [616.0, 529.75], [615.0, 260.5], [632.0, 290.5], [633.0, 788.0], [636.0, 461.66666666666663], [635.0, 802.6], [637.0, 790.0], [634.0, 299.0], [639.0, 628.6666666666666], [625.0, 293.0], [626.0, 793.5], [624.0, 308.0], [630.0, 295.5], [628.0, 285.0], [638.0, 458.66666666666663], [614.0, 383.0], [642.0, 390.25], [645.0, 676.0], [647.0, 263.6666666666667], [665.0, 542.5], [664.0, 674.0], [667.0, 554.5], [666.0, 307.0], [671.0, 435.125], [670.0, 786.0], [668.0, 550.0], [656.0, 332.0], [657.0, 506.0], [661.0, 297.0], [660.0, 797.0], [663.0, 307.0], [662.0, 550.0], [646.0, 382.0], [644.0, 268.0], [643.0, 352.3333333333333], [641.0, 366.8], [640.0, 236.33333333333334], [654.0, 256.42857142857144], [655.0, 579.0], [653.0, 268.0], [652.0, 440.5555555555555], [651.0, 257.7857142857143], [650.0, 269.0], [649.0, 382.0], [648.0, 501.14285714285717], [701.0, 633.3333333333334], [696.0, 601.6], [677.0, 403.0], [676.0, 789.0], [675.0, 794.0], [679.0, 783.0], [678.0, 795.0], [673.0, 672.5], [672.0, 316.0], [687.0, 634.0], [685.0, 552.5], [683.0, 788.3333333333334], [680.0, 784.0], [686.0, 794.0], [695.0, 477.66666666666663], [694.0, 327.42857142857144], [693.0, 435.0], [692.0, 322.8], [691.0, 547.0], [690.0, 438.25], [689.0, 328.5], [688.0, 549.5], [703.0, 344.0], [702.0, 784.0], [700.0, 308.0], [699.0, 630.6666666666666], [698.0, 334.0], [697.0, 330.0], [711.0, 667.0], [707.0, 347.0], [710.0, 341.25], [709.0, 347.0], [708.0, 558.0], [706.0, 559.25], [705.0, 345.0], [704.0, 657.5], [712.0, 564.0], [716.0, 772.0], [714.0, 769.5], [718.0, 780.0], [717.0, 748.0], [719.0, 563.0], [731.0, 433.4], [733.0, 360.0], [732.0, 357.0], [735.0, 360.4], [734.0, 462.75], [722.0, 476.66666666666663], [721.0, 771.3333333333334], [723.0, 571.5], [720.0, 354.0], [725.0, 358.5], [724.0, 458.75], [727.0, 564.6666666666667], [726.0, 342.0], [730.0, 423.1666666666667], [729.0, 555.75], [728.0, 354.0], [762.0, 723.0], [736.0, 517.8000000000001], [750.0, 734.4], [745.0, 762.0], [744.0, 749.6666666666666], [737.0, 571.0], [767.0, 611.6666666666666], [755.0, 726.0], [753.0, 756.3333333333334], [765.0, 731.6666666666666], [764.0, 741.0], [761.0, 734.5], [760.0, 751.0], [742.0, 743.0], [739.0, 734.0], [738.0, 746.0], [758.0, 739.5], [757.0, 752.0], [796.0, 721.0], [770.0, 552.6666666666667], [769.0, 381.0], [782.0, 722.0], [781.0, 728.0], [779.0, 720.6666666666666], [776.0, 733.8333333333334], [797.0, 705.0], [795.0, 737.5], [793.0, 722.0], [790.0, 729.0], [788.0, 731.0], [787.0, 726.5], [784.0, 723.0], [829.0, 698.6666666666666], [811.0, 595.0], [830.0, 711.0], [817.0, 685.0], [816.0, 712.0], [828.0, 682.0], [827.0, 680.0], [825.0, 716.5], [807.0, 700.3333333333334], [805.0, 701.0], [803.0, 731.6666666666666], [800.0, 726.3333333333334], [813.0, 698.5], [822.0, 685.3333333333334], [819.0, 685.0], [823.0, 686.0], [862.0, 714.0], [851.0, 414.0], [854.0, 513.0], [855.0, 572.7142857142857], [853.0, 408.0], [852.0, 523.8888888888889], [850.0, 468.0], [849.0, 435.40000000000003], [848.0, 346.2], [847.0, 484.3333333333333], [837.0, 702.6666666666666], [858.0, 700.0], [857.0, 678.0], [860.0, 708.0], [859.0, 701.5], [846.0, 405.1666666666667], [845.0, 435.6], [844.0, 457.375], [843.0, 351.3333333333333], [840.0, 695.4], [895.0, 710.0], [883.0, 564.6666666666666], [887.0, 695.0], [884.0, 668.0], [882.0, 461.33333333333326], [881.0, 442.0], [894.0, 687.0], [893.0, 668.0], [892.0, 697.0], [891.0, 685.5], [889.0, 697.0], [871.0, 691.0], [868.0, 695.3333333333334], [865.0, 690.0], [879.0, 682.0], [878.0, 703.0], [876.0, 697.0], [873.0, 696.5], [914.0, 555.0], [922.0, 560.0], [920.0, 456.0], [903.0, 692.6666666666666], [900.0, 692.5], [898.0, 712.0], [897.0, 700.0], [921.0, 381.0], [918.0, 622.5], [917.0, 338.5], [915.0, 555.75], [916.0, 668.0], [913.0, 376.5], [912.0, 501.5], [927.0, 394.25], [926.0, 692.0], [925.0, 673.6666666666666], [924.0, 393.0], [923.0, 394.0], [911.0, 466.75], [910.0, 440.66666666666663], [909.0, 591.0], [906.0, 694.0], [955.0, 485.3333333333333], [931.0, 395.0], [936.0, 559.6], [938.0, 569.0], [937.0, 394.0], [940.0, 404.0], [939.0, 415.0], [942.0, 594.5], [941.0, 460.3333333333333], [935.0, 383.25], [952.0, 602.0], [954.0, 470.25], [953.0, 480.3333333333333], [956.0, 459.0], [959.0, 416.3333333333333], [945.0, 523.0], [944.0, 396.0], [958.0, 401.0], [957.0, 493.6666666666667], [947.0, 462.2], [946.0, 509.0], [934.0, 400.0], [932.0, 561.0], [933.0, 611.0], [930.0, 438.0], [929.0, 397.0], [928.0, 565.3333333333334], [943.0, 393.0], [949.0, 385.0], [950.0, 403.0], [951.0, 639.0], [948.0, 492.4], [961.0, 448.0], [972.0, 378.5], [971.0, 506.25], [969.0, 532.0], [968.0, 500.6363636363637], [965.0, 436.57142857142856], [966.0, 395.0], [967.0, 513.0], [991.0, 634.25], [977.0, 660.0], [976.0, 641.6666666666666], [981.0, 617.0], [978.0, 656.0], [983.0, 656.0], [982.0, 637.3333333333334], [987.0, 609.0], [986.0, 645.0], [985.0, 630.5], [964.0, 374.0], [962.0, 372.0], [960.0, 527.5], [973.0, 641.0], [1018.0, 418.0], [994.0, 522.0], [999.0, 423.5], [998.0, 651.0], [995.0, 624.0], [993.0, 513.0], [992.0, 506.0], [1007.0, 604.0], [1006.0, 627.5], [1005.0, 631.0], [1002.0, 624.0], [1019.0, 532.4], [1021.0, 619.0], [1020.0, 608.0], [1013.0, 382.0], [1012.0, 626.0], [1011.0, 648.0], [1010.0, 655.0], [1009.0, 653.0], [1022.0, 630.0], [1017.0, 525.5], [1016.0, 511.0], [1015.0, 510.5], [1014.0, 535.0], [1074.0, 573.0], [1060.0, 433.0], [1062.0, 440.0], [1064.0, 428.0], [1066.0, 612.5], [1068.0, 593.0], [1070.0, 435.0], [1058.0, 560.5], [1024.0, 612.0], [1030.0, 640.0], [1032.0, 626.0], [1076.0, 436.0], [1078.0, 499.5], [1084.0, 600.25], [1080.0, 444.0], [1072.0, 551.0], [1052.0, 421.0], [1050.0, 426.5], [1046.0, 512.0], [1048.0, 607.6666666666666], [1044.0, 628.0], [1042.0, 626.0], [1040.0, 594.0], [1144.0, 542.0], [1116.0, 500.0], [1118.0, 441.0], [1150.0, 450.0], [1148.0, 507.25], [1146.0, 445.8], [1138.0, 517.0], [1136.0, 559.3333333333334], [1102.0, 595.0], [1100.0, 580.0], [1096.0, 597.5], [1094.0, 561.0], [1122.0, 455.0], [1126.0, 539.0], [1124.0, 439.0], [1128.0, 589.0], [1130.0, 565.3333333333334], [1132.0, 549.0], [1114.0, 540.25], [1112.0, 429.0], [1110.0, 444.0], [1108.0, 442.0], [1106.0, 446.6666666666667], [1104.0, 480.6666666666667], [1162.0, 606.0], [1156.0, 513.3333333333334], [1152.0, 544.6666666666666], [1154.0, 438.5], [1200.0, 518.5], [1198.0, 477.0], [1196.0, 513.6666666666666], [1194.0, 472.0], [1192.0, 483.5], [1190.0, 463.0], [1214.0, 514.0], [1186.0, 561.0], [1188.0, 540.0], [1212.0, 508.6666666666667], [1210.0, 472.0], [1208.0, 443.0], [1206.0, 477.5], [1204.0, 511.0], [1202.0, 525.0], [1178.0, 537.0], [1180.0, 604.0], [1176.0, 462.5], [1174.0, 419.0], [1168.0, 555.3333333333334], [1266.0, 499.14285714285717], [1224.0, 478.625], [1216.0, 463.0], [1264.0, 494.7142857142857], [1268.0, 473.3333333333333], [1270.0, 460.0], [1272.0, 472.25], [1274.0, 446.0], [1276.0, 531.0], [1248.0, 484.5], [1250.0, 450.6666666666667], [1252.0, 487.6666666666667], [1254.0, 487.14285714285717], [1256.0, 471.75], [1260.0, 500.2857142857143], [1258.0, 467.25000000000006], [1262.0, 504.85714285714283], [1230.0, 476.3333333333333], [1228.0, 476.3333333333333], [1226.0, 507.5], [1222.0, 493.3333333333333], [1218.0, 537.75], [1240.0, 505.2], [1242.0, 492.40000000000003], [1246.0, 506.875], [1244.0, 497.79999999999995], [1238.0, 494.5], [1236.0, 497.14285714285717], [1234.0, 494.14285714285717], [1232.0, 515.4615384615385], [1280.0, 475.5], [1039.0, 593.0], [1057.0, 420.25], [1061.0, 421.0], [1065.0, 595.5], [1063.0, 435.0], [1069.0, 426.3333333333333], [1067.0, 476.6666666666667], [1071.0, 428.0], [1059.0, 492.0], [1055.0, 549.6666666666666], [1027.0, 629.0], [1025.0, 620.0], [1031.0, 598.0], [1029.0, 626.0], [1033.0, 607.5], [1035.0, 622.5], [1075.0, 405.0], [1077.0, 566.2], [1079.0, 428.0], [1081.0, 542.0], [1087.0, 584.0], [1053.0, 499.6], [1051.0, 552.25], [1049.0, 427.5], [1047.0, 639.0], [1045.0, 427.0], [1041.0, 609.5], [1147.0, 466.0], [1119.0, 401.0], [1113.0, 443.0], [1117.0, 461.0], [1121.0, 406.0], [1151.0, 503.5], [1149.0, 522.5], [1143.0, 407.0], [1103.0, 584.0], [1099.0, 585.0], [1097.0, 612.0], [1095.0, 573.5], [1091.0, 596.5], [1139.0, 613.0], [1141.0, 560.6666666666666], [1123.0, 428.5], [1125.0, 559.5], [1129.0, 451.5], [1131.0, 581.0], [1133.0, 578.0], [1127.0, 515.0], [1115.0, 496.75], [1111.0, 538.3333333333334], [1109.0, 434.0], [1107.0, 550.25], [1105.0, 450.3333333333333], [1165.0, 553.0], [1157.0, 444.0], [1159.0, 563.0], [1163.0, 549.5], [1199.0, 478.0], [1197.0, 461.0], [1195.0, 508.6666666666667], [1193.0, 501.5], [1191.0, 523.5], [1189.0, 565.5], [1187.0, 572.0], [1213.0, 499.5], [1211.0, 480.0], [1209.0, 545.75], [1207.0, 468.0], [1201.0, 544.0], [1205.0, 549.5], [1155.0, 446.0], [1153.0, 511.0], [1177.0, 465.5], [1179.0, 550.4], [1175.0, 433.0], [1173.0, 590.5], [1171.0, 559.0], [1273.0, 512.0], [1231.0, 492.8], [1265.0, 471.8], [1269.0, 478.3333333333333], [1275.0, 438.0], [1279.0, 437.0], [1277.0, 508.0], [1271.0, 501.5], [1267.0, 472.8], [1249.0, 527.8], [1251.0, 492.6666666666667], [1253.0, 500.6666666666667], [1257.0, 526.0434782608695], [1259.0, 463.5], [1263.0, 501.3333333333333], [1261.0, 470.0], [1255.0, 470.5], [1229.0, 508.44444444444446], [1227.0, 509.0], [1225.0, 538.0], [1223.0, 478.0], [1221.0, 499.5], [1219.0, 571.0], [1217.0, 531.0], [1241.0, 485.9], [1245.0, 524.5], [1247.0, 478.5], [1243.0, 489.15384615384613], [1239.0, 499.6666666666667], [1237.0, 482.8181818181818], [1235.0, 508.25000000000006], [1233.0, 495.29999999999995], [1.0, 962.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[655.2523333333326, 491.0196666666663]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 12.285714285714286], [3.0, 5.333333333333334], [4.0, 4.960000000000001], [5.0, 20.18181818181818], [6.0, 14.0], [7.0, 11.454545454545453], [8.0, 33.0], [9.0, 16.4], [10.0, 25.900000000000002], [11.0, 14.666666666666666], [12.0, 37.2], [13.0, 25.666666666666668], [14.0, 29.0], [15.0, 32.8], [16.0, 23.181818181818183], [17.0, 35.599999999999994], [18.0, 34.99999999999999], [19.0, 32.0], [20.0, 32.222222222222214], [21.0, 38.53846153846153], [22.0, 36.1875], [23.0, 40.1875], [24.0, 36.904761904761905], [25.0, 36.23529411764706], [26.0, 37.28124999999999], [27.0, 38.28947368421051], [28.0, 34.69565217391304], [29.0, 39.07500000000001], [30.0, 40.41025641025641], [31.0, 37.659090909090914], [33.0, 38.68421052631578], [32.0, 39.263157894736835], [34.0, 38.62962962962962], [35.0, 38.48214285714287], [37.0, 41.00000000000001], [36.0, 40.484375], [38.0, 40.80000000000001], [39.0, 41.07999999999999], [41.0, 39.32222222222223], [40.0, 41.71232876712328], [42.0, 40.08536585365855], [43.0, 42.186666666666675], [44.0, 41.73563218390803], [45.0, 41.6865671641791], [47.0, 42.49122807017543], [46.0, 42.168674698795186], [48.0, 43.41791044776121], [49.0, 46.447761194029844], [51.0, 43.34693877551021], [50.0, 44.933333333333344], [53.0, 44.67924528301887], [52.0, 43.220338983050844], [54.0, 44.13793103448275], [55.0, 44.4], [57.0, 43.904761904761905], [56.0, 45.290909090909096], [59.0, 49.32352941176471], [58.0, 44.972222222222214], [61.0, 46.695652173913054], [60.0, 45.365853658536594], [62.0, 50.04761904761905], [63.0, 48.93548387096774], [65.0, 50.31914893617021], [66.0, 46.5], [67.0, 48.39130434782607], [64.0, 46.391304347826086], [68.0, 50.06666666666667], [70.0, 50.42857142857143], [71.0, 50.2], [69.0, 48.333333333333336], [75.0, 46.22222222222223], [72.0, 46.0], [74.0, 46.33333333333333], [73.0, 43.5], [79.0, 47.142857142857146], [78.0, 43.666666666666664], [77.0, 44.23076923076923], [76.0, 44.333333333333336], [80.0, 47.166666666666664], [82.0, 42.333333333333336], [81.0, 46.333333333333336], [91.0, 37.0], [92.0, 38.5], [93.0, 39.875], [268.0, 13.0], [285.0, 20.75], [282.0, 6.0], [272.0, 13.0], [284.0, 17.0], [296.0, 6.0], [293.0, 4.0], [314.0, 86.25], [313.0, 54.125], [315.0, 112.90000000000002], [318.0, 4.0], [311.0, 5.0], [322.0, 38.5], [323.0, 85.0], [333.0, 45.92857142857143], [320.0, 5.0], [350.0, 136.79120879120867], [349.0, 164.0], [348.0, 162.75], [341.0, 155.0], [337.0, 30.0], [338.0, 31.0], [340.0, 33.0], [353.0, 143.72000000000003], [366.0, 226.66666666666666], [357.0, 175.86666666666667], [358.0, 31.5], [365.0, 183.21052631578948], [369.0, 237.8958333333333], [370.0, 209.4], [368.0, 228.28915662650604], [373.0, 227.14285714285714], [374.0, 183.6], [371.0, 228.0], [1.0, 5.666666666666667]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[84.60666666666664, 57.08233333333342]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1280.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 18650.0, "minX": 1.66901802E12, "maxY": 39350.0, "series": [{"data": [[1.66901802E12, 18650.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66901802E12, 39350.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901802E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 57.08233333333342, "minX": 1.66901802E12, "maxY": 491.0196666666663, "series": [{"data": [[1.66901802E12, 59.525000000000006]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901802E12, 491.0196666666663]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901802E12, 57.08233333333342]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901802E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 56.604333333333344, "minX": 1.66901802E12, "maxY": 490.8596666666666, "series": [{"data": [[1.66901802E12, 59.51199999999995]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901802E12, 490.8596666666666]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901802E12, 56.604333333333344]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901802E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 8.819333333333349, "minX": 1.66901802E12, "maxY": 20.72666666666669, "series": [{"data": [[1.66901802E12, 8.819333333333349]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901802E12, 9.232666666666637]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901802E12, 20.72666666666669]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901802E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.66901802E12, "maxY": 1041.0, "series": [{"data": [[1.66901802E12, 1041.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66901802E12, 682.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66901802E12, 955.9899999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66901802E12, 848.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66901802E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66901802E12, 62.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901802E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 42.0, "minX": 733.0, "maxY": 846.0, "series": [{"data": [[1065.0, 42.0], [1099.0, 51.0], [1317.0, 452.0], [1382.0, 82.0], [733.0, 47.0], [1518.0, 61.0], [918.0, 846.0], [968.0, 43.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1518.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 42.0, "minX": 733.0, "maxY": 846.0, "series": [{"data": [[1065.0, 42.0], [1099.0, 51.0], [1317.0, 452.0], [1382.0, 82.0], [733.0, 47.0], [1518.0, 61.0], [918.0, 846.0], [968.0, 43.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1518.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.66901802E12, "maxY": 150.0, "series": [{"data": [[1.66901802E12, 150.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901802E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.66901802E12, "maxY": 150.0, "series": [{"data": [[1.66901802E12, 150.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901802E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66901802E12, "maxY": 50.0, "series": [{"data": [[1.66901802E12, 50.0]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66901802E12, 50.0]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66901802E12, 50.0]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901802E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.66901802E12, "maxY": 150.0, "series": [{"data": [[1.66901802E12, 150.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901802E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

