/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 19.0, "minX": 0.0, "maxY": 6649.0, "series": [{"data": [[0.0, 39.0], [0.1, 40.0], [0.2, 40.0], [0.3, 40.0], [0.4, 77.0], [0.5, 82.0], [0.6, 82.0], [0.7, 87.0], [0.8, 88.0], [0.9, 91.0], [1.0, 92.0], [1.1, 92.0], [1.2, 93.0], [1.3, 95.0], [1.4, 95.0], [1.5, 107.0], [1.6, 235.0], [1.7, 235.0], [1.8, 241.0], [1.9, 242.0], [2.0, 302.0], [2.1, 311.0], [2.2, 312.0], [2.3, 347.0], [2.4, 1274.0], [2.5, 1488.0], [2.6, 2164.0], [2.7, 2245.0], [2.8, 2357.0], [2.9, 2363.0], [3.0, 2366.0], [3.1, 2378.0], [3.2, 2407.0], [3.3, 2439.0], [3.4, 2461.0], [3.5, 2476.0], [3.6, 2483.0], [3.7, 2496.0], [3.8, 2500.0], [3.9, 2504.0], [4.0, 2513.0], [4.1, 2526.0], [4.2, 2528.0], [4.3, 2530.0], [4.4, 2533.0], [4.5, 2533.0], [4.6, 2550.0], [4.7, 2558.0], [4.8, 2563.0], [4.9, 2570.0], [5.0, 2574.0], [5.1, 2581.0], [5.2, 2582.0], [5.3, 2582.0], [5.4, 2585.0], [5.5, 2586.0], [5.6, 2587.0], [5.7, 2588.0], [5.8, 2597.0], [5.9, 2602.0], [6.0, 2613.0], [6.1, 2613.0], [6.2, 2613.0], [6.3, 2613.0], [6.4, 2619.0], [6.5, 2620.0], [6.6, 2623.0], [6.7, 2625.0], [6.8, 2626.0], [6.9, 2628.0], [7.0, 2631.0], [7.1, 2631.0], [7.2, 2634.0], [7.3, 2641.0], [7.4, 2645.0], [7.5, 2653.0], [7.6, 2656.0], [7.7, 2656.0], [7.8, 2657.0], [7.9, 2657.0], [8.0, 2661.0], [8.1, 2667.0], [8.2, 2667.0], [8.3, 2669.0], [8.4, 2669.0], [8.5, 2675.0], [8.6, 2679.0], [8.7, 2681.0], [8.8, 2682.0], [8.9, 2691.0], [9.0, 2694.0], [9.1, 2706.0], [9.2, 2716.0], [9.3, 2717.0], [9.4, 2719.0], [9.5, 2719.0], [9.6, 2723.0], [9.7, 2727.0], [9.8, 2730.0], [9.9, 2732.0], [10.0, 2734.0], [10.1, 2741.0], [10.2, 2742.0], [10.3, 2751.0], [10.4, 2752.0], [10.5, 2753.0], [10.6, 2753.0], [10.7, 2756.0], [10.8, 2757.0], [10.9, 2758.0], [11.0, 2759.0], [11.1, 2760.0], [11.2, 2761.0], [11.3, 2763.0], [11.4, 2767.0], [11.5, 2767.0], [11.6, 2775.0], [11.7, 2776.0], [11.8, 2776.0], [11.9, 2780.0], [12.0, 2782.0], [12.1, 2783.0], [12.2, 2783.0], [12.3, 2790.0], [12.4, 2790.0], [12.5, 2795.0], [12.6, 2795.0], [12.7, 2797.0], [12.8, 2799.0], [12.9, 2799.0], [13.0, 2800.0], [13.1, 2800.0], [13.2, 2801.0], [13.3, 2803.0], [13.4, 2804.0], [13.5, 2805.0], [13.6, 2808.0], [13.7, 2809.0], [13.8, 2818.0], [13.9, 2822.0], [14.0, 2823.0], [14.1, 2825.0], [14.2, 2827.0], [14.3, 2828.0], [14.4, 2828.0], [14.5, 2831.0], [14.6, 2831.0], [14.7, 2831.0], [14.8, 2831.0], [14.9, 2832.0], [15.0, 2836.0], [15.1, 2836.0], [15.2, 2837.0], [15.3, 2838.0], [15.4, 2839.0], [15.5, 2840.0], [15.6, 2844.0], [15.7, 2845.0], [15.8, 2851.0], [15.9, 2855.0], [16.0, 2857.0], [16.1, 2858.0], [16.2, 2858.0], [16.3, 2859.0], [16.4, 2861.0], [16.5, 2862.0], [16.6, 2863.0], [16.7, 2867.0], [16.8, 2867.0], [16.9, 2868.0], [17.0, 2869.0], [17.1, 2871.0], [17.2, 2871.0], [17.3, 2872.0], [17.4, 2872.0], [17.5, 2873.0], [17.6, 2874.0], [17.7, 2875.0], [17.8, 2879.0], [17.9, 2884.0], [18.0, 2884.0], [18.1, 2885.0], [18.2, 2889.0], [18.3, 2891.0], [18.4, 2891.0], [18.5, 2892.0], [18.6, 2893.0], [18.7, 2899.0], [18.8, 2899.0], [18.9, 2900.0], [19.0, 2900.0], [19.1, 2902.0], [19.2, 2906.0], [19.3, 2909.0], [19.4, 2911.0], [19.5, 2911.0], [19.6, 2912.0], [19.7, 2914.0], [19.8, 2914.0], [19.9, 2917.0], [20.0, 2923.0], [20.1, 2925.0], [20.2, 2925.0], [20.3, 2926.0], [20.4, 2926.0], [20.5, 2927.0], [20.6, 2930.0], [20.7, 2930.0], [20.8, 2932.0], [20.9, 2932.0], [21.0, 2934.0], [21.1, 2936.0], [21.2, 2936.0], [21.3, 2939.0], [21.4, 2939.0], [21.5, 2940.0], [21.6, 2941.0], [21.7, 2943.0], [21.8, 2944.0], [21.9, 2945.0], [22.0, 2947.0], [22.1, 2948.0], [22.2, 2949.0], [22.3, 2949.0], [22.4, 2949.0], [22.5, 2951.0], [22.6, 2953.0], [22.7, 2953.0], [22.8, 2956.0], [22.9, 2958.0], [23.0, 2958.0], [23.1, 2959.0], [23.2, 2960.0], [23.3, 2962.0], [23.4, 2962.0], [23.5, 2963.0], [23.6, 2964.0], [23.7, 2964.0], [23.8, 2964.0], [23.9, 2965.0], [24.0, 2967.0], [24.1, 2972.0], [24.2, 2972.0], [24.3, 2976.0], [24.4, 2977.0], [24.5, 2979.0], [24.6, 2980.0], [24.7, 2981.0], [24.8, 2983.0], [24.9, 2983.0], [25.0, 2985.0], [25.1, 2986.0], [25.2, 2987.0], [25.3, 2988.0], [25.4, 2993.0], [25.5, 2996.0], [25.6, 2998.0], [25.7, 2999.0], [25.8, 2999.0], [25.9, 3000.0], [26.0, 3000.0], [26.1, 3002.0], [26.2, 3004.0], [26.3, 3006.0], [26.4, 3006.0], [26.5, 3008.0], [26.6, 3009.0], [26.7, 3010.0], [26.8, 3012.0], [26.9, 3014.0], [27.0, 3015.0], [27.1, 3016.0], [27.2, 3021.0], [27.3, 3021.0], [27.4, 3024.0], [27.5, 3025.0], [27.6, 3030.0], [27.7, 3031.0], [27.8, 3035.0], [27.9, 3039.0], [28.0, 3040.0], [28.1, 3042.0], [28.2, 3046.0], [28.3, 3049.0], [28.4, 3050.0], [28.5, 3052.0], [28.6, 3052.0], [28.7, 3059.0], [28.8, 3063.0], [28.9, 3063.0], [29.0, 3064.0], [29.1, 3066.0], [29.2, 3066.0], [29.3, 3068.0], [29.4, 3071.0], [29.5, 3071.0], [29.6, 3072.0], [29.7, 3072.0], [29.8, 3074.0], [29.9, 3075.0], [30.0, 3075.0], [30.1, 3078.0], [30.2, 3078.0], [30.3, 3080.0], [30.4, 3080.0], [30.5, 3081.0], [30.6, 3086.0], [30.7, 3086.0], [30.8, 3087.0], [30.9, 3087.0], [31.0, 3090.0], [31.1, 3093.0], [31.2, 3094.0], [31.3, 3096.0], [31.4, 3098.0], [31.5, 3098.0], [31.6, 3102.0], [31.7, 3102.0], [31.8, 3102.0], [31.9, 3103.0], [32.0, 3104.0], [32.1, 3105.0], [32.2, 3107.0], [32.3, 3107.0], [32.4, 3107.0], [32.5, 3108.0], [32.6, 3111.0], [32.7, 3112.0], [32.8, 3112.0], [32.9, 3113.0], [33.0, 3113.0], [33.1, 3114.0], [33.2, 3115.0], [33.3, 3116.0], [33.4, 3116.0], [33.5, 3117.0], [33.6, 3118.0], [33.7, 3120.0], [33.8, 3121.0], [33.9, 3121.0], [34.0, 3123.0], [34.1, 3124.0], [34.2, 3124.0], [34.3, 3124.0], [34.4, 3127.0], [34.5, 3127.0], [34.6, 3128.0], [34.7, 3130.0], [34.8, 3130.0], [34.9, 3131.0], [35.0, 3135.0], [35.1, 3135.0], [35.2, 3135.0], [35.3, 3138.0], [35.4, 3139.0], [35.5, 3142.0], [35.6, 3143.0], [35.7, 3148.0], [35.8, 3148.0], [35.9, 3152.0], [36.0, 3154.0], [36.1, 3156.0], [36.2, 3161.0], [36.3, 3162.0], [36.4, 3163.0], [36.5, 3165.0], [36.6, 3165.0], [36.7, 3165.0], [36.8, 3166.0], [36.9, 3166.0], [37.0, 3168.0], [37.1, 3171.0], [37.2, 3171.0], [37.3, 3172.0], [37.4, 3172.0], [37.5, 3173.0], [37.6, 3173.0], [37.7, 3174.0], [37.8, 3175.0], [37.9, 3176.0], [38.0, 3176.0], [38.1, 3176.0], [38.2, 3178.0], [38.3, 3179.0], [38.4, 3179.0], [38.5, 3182.0], [38.6, 3185.0], [38.7, 3185.0], [38.8, 3186.0], [38.9, 3186.0], [39.0, 3187.0], [39.1, 3189.0], [39.2, 3190.0], [39.3, 3191.0], [39.4, 3193.0], [39.5, 3193.0], [39.6, 3195.0], [39.7, 3195.0], [39.8, 3195.0], [39.9, 3196.0], [40.0, 3198.0], [40.1, 3199.0], [40.2, 3201.0], [40.3, 3201.0], [40.4, 3201.0], [40.5, 3201.0], [40.6, 3201.0], [40.7, 3202.0], [40.8, 3203.0], [40.9, 3203.0], [41.0, 3208.0], [41.1, 3208.0], [41.2, 3213.0], [41.3, 3216.0], [41.4, 3217.0], [41.5, 3218.0], [41.6, 3222.0], [41.7, 3226.0], [41.8, 3228.0], [41.9, 3228.0], [42.0, 3228.0], [42.1, 3230.0], [42.2, 3231.0], [42.3, 3232.0], [42.4, 3234.0], [42.5, 3235.0], [42.6, 3235.0], [42.7, 3236.0], [42.8, 3237.0], [42.9, 3238.0], [43.0, 3240.0], [43.1, 3242.0], [43.2, 3248.0], [43.3, 3250.0], [43.4, 3250.0], [43.5, 3251.0], [43.6, 3251.0], [43.7, 3251.0], [43.8, 3254.0], [43.9, 3256.0], [44.0, 3258.0], [44.1, 3260.0], [44.2, 3260.0], [44.3, 3262.0], [44.4, 3263.0], [44.5, 3264.0], [44.6, 3267.0], [44.7, 3268.0], [44.8, 3268.0], [44.9, 3269.0], [45.0, 3270.0], [45.1, 3271.0], [45.2, 3274.0], [45.3, 3275.0], [45.4, 3275.0], [45.5, 3276.0], [45.6, 3276.0], [45.7, 3277.0], [45.8, 3278.0], [45.9, 3279.0], [46.0, 3282.0], [46.1, 3283.0], [46.2, 3283.0], [46.3, 3285.0], [46.4, 3285.0], [46.5, 3288.0], [46.6, 3289.0], [46.7, 3293.0], [46.8, 3294.0], [46.9, 3295.0], [47.0, 3296.0], [47.1, 3296.0], [47.2, 3297.0], [47.3, 3298.0], [47.4, 3301.0], [47.5, 3303.0], [47.6, 3304.0], [47.7, 3306.0], [47.8, 3306.0], [47.9, 3308.0], [48.0, 3308.0], [48.1, 3310.0], [48.2, 3310.0], [48.3, 3313.0], [48.4, 3313.0], [48.5, 3314.0], [48.6, 3314.0], [48.7, 3314.0], [48.8, 3316.0], [48.9, 3316.0], [49.0, 3317.0], [49.1, 3317.0], [49.2, 3317.0], [49.3, 3317.0], [49.4, 3317.0], [49.5, 3318.0], [49.6, 3324.0], [49.7, 3324.0], [49.8, 3326.0], [49.9, 3326.0], [50.0, 3326.0], [50.1, 3327.0], [50.2, 3328.0], [50.3, 3328.0], [50.4, 3332.0], [50.5, 3332.0], [50.6, 3333.0], [50.7, 3335.0], [50.8, 3335.0], [50.9, 3336.0], [51.0, 3340.0], [51.1, 3341.0], [51.2, 3342.0], [51.3, 3344.0], [51.4, 3345.0], [51.5, 3346.0], [51.6, 3346.0], [51.7, 3346.0], [51.8, 3347.0], [51.9, 3350.0], [52.0, 3351.0], [52.1, 3351.0], [52.2, 3352.0], [52.3, 3353.0], [52.4, 3353.0], [52.5, 3355.0], [52.6, 3356.0], [52.7, 3356.0], [52.8, 3357.0], [52.9, 3357.0], [53.0, 3358.0], [53.1, 3358.0], [53.2, 3360.0], [53.3, 3360.0], [53.4, 3367.0], [53.5, 3367.0], [53.6, 3368.0], [53.7, 3370.0], [53.8, 3371.0], [53.9, 3372.0], [54.0, 3375.0], [54.1, 3376.0], [54.2, 3376.0], [54.3, 3376.0], [54.4, 3377.0], [54.5, 3378.0], [54.6, 3379.0], [54.7, 3379.0], [54.8, 3380.0], [54.9, 3381.0], [55.0, 3381.0], [55.1, 3382.0], [55.2, 3384.0], [55.3, 3385.0], [55.4, 3385.0], [55.5, 3385.0], [55.6, 3385.0], [55.7, 3389.0], [55.8, 3389.0], [55.9, 3392.0], [56.0, 3392.0], [56.1, 3392.0], [56.2, 3393.0], [56.3, 3393.0], [56.4, 3394.0], [56.5, 3395.0], [56.6, 3396.0], [56.7, 3397.0], [56.8, 3398.0], [56.9, 3399.0], [57.0, 3400.0], [57.1, 3401.0], [57.2, 3403.0], [57.3, 3403.0], [57.4, 3404.0], [57.5, 3405.0], [57.6, 3406.0], [57.7, 3407.0], [57.8, 3409.0], [57.9, 3410.0], [58.0, 3411.0], [58.1, 3411.0], [58.2, 3412.0], [58.3, 3412.0], [58.4, 3412.0], [58.5, 3413.0], [58.6, 3415.0], [58.7, 3418.0], [58.8, 3421.0], [58.9, 3422.0], [59.0, 3423.0], [59.1, 3423.0], [59.2, 3431.0], [59.3, 3431.0], [59.4, 3432.0], [59.5, 3432.0], [59.6, 3435.0], [59.7, 3437.0], [59.8, 3441.0], [59.9, 3442.0], [60.0, 3443.0], [60.1, 3445.0], [60.2, 3445.0], [60.3, 3446.0], [60.4, 3446.0], [60.5, 3446.0], [60.6, 3448.0], [60.7, 3449.0], [60.8, 3449.0], [60.9, 3450.0], [61.0, 3451.0], [61.1, 3451.0], [61.2, 3453.0], [61.3, 3453.0], [61.4, 3455.0], [61.5, 3456.0], [61.6, 3457.0], [61.7, 3458.0], [61.8, 3458.0], [61.9, 3459.0], [62.0, 3459.0], [62.1, 3460.0], [62.2, 3460.0], [62.3, 3461.0], [62.4, 3466.0], [62.5, 3466.0], [62.6, 3470.0], [62.7, 3471.0], [62.8, 3472.0], [62.9, 3474.0], [63.0, 3476.0], [63.1, 3476.0], [63.2, 3478.0], [63.3, 3479.0], [63.4, 3479.0], [63.5, 3481.0], [63.6, 3481.0], [63.7, 3484.0], [63.8, 3485.0], [63.9, 3485.0], [64.0, 3487.0], [64.1, 3487.0], [64.2, 3491.0], [64.3, 3492.0], [64.4, 3493.0], [64.5, 3493.0], [64.6, 3494.0], [64.7, 3494.0], [64.8, 3494.0], [64.9, 3496.0], [65.0, 3496.0], [65.1, 3496.0], [65.2, 3496.0], [65.3, 3497.0], [65.4, 3497.0], [65.5, 3498.0], [65.6, 3499.0], [65.7, 3499.0], [65.8, 3500.0], [65.9, 3500.0], [66.0, 3501.0], [66.1, 3501.0], [66.2, 3501.0], [66.3, 3503.0], [66.4, 3503.0], [66.5, 3503.0], [66.6, 3505.0], [66.7, 3506.0], [66.8, 3509.0], [66.9, 3512.0], [67.0, 3513.0], [67.1, 3514.0], [67.2, 3514.0], [67.3, 3515.0], [67.4, 3517.0], [67.5, 3518.0], [67.6, 3518.0], [67.7, 3519.0], [67.8, 3520.0], [67.9, 3522.0], [68.0, 3523.0], [68.1, 3525.0], [68.2, 3525.0], [68.3, 3526.0], [68.4, 3526.0], [68.5, 3527.0], [68.6, 3529.0], [68.7, 3532.0], [68.8, 3534.0], [68.9, 3534.0], [69.0, 3535.0], [69.1, 3535.0], [69.2, 3537.0], [69.3, 3538.0], [69.4, 3538.0], [69.5, 3541.0], [69.6, 3543.0], [69.7, 3544.0], [69.8, 3544.0], [69.9, 3545.0], [70.0, 3547.0], [70.1, 3548.0], [70.2, 3548.0], [70.3, 3550.0], [70.4, 3551.0], [70.5, 3556.0], [70.6, 3556.0], [70.7, 3560.0], [70.8, 3561.0], [70.9, 3562.0], [71.0, 3564.0], [71.1, 3565.0], [71.2, 3567.0], [71.3, 3568.0], [71.4, 3568.0], [71.5, 3568.0], [71.6, 3568.0], [71.7, 3568.0], [71.8, 3572.0], [71.9, 3573.0], [72.0, 3574.0], [72.1, 3580.0], [72.2, 3580.0], [72.3, 3582.0], [72.4, 3591.0], [72.5, 3591.0], [72.6, 3593.0], [72.7, 3594.0], [72.8, 3595.0], [72.9, 3596.0], [73.0, 3597.0], [73.1, 3598.0], [73.2, 3598.0], [73.3, 3600.0], [73.4, 3601.0], [73.5, 3604.0], [73.6, 3605.0], [73.7, 3606.0], [73.8, 3607.0], [73.9, 3610.0], [74.0, 3610.0], [74.1, 3613.0], [74.2, 3613.0], [74.3, 3618.0], [74.4, 3619.0], [74.5, 3621.0], [74.6, 3622.0], [74.7, 3623.0], [74.8, 3623.0], [74.9, 3624.0], [75.0, 3626.0], [75.1, 3626.0], [75.2, 3626.0], [75.3, 3627.0], [75.4, 3628.0], [75.5, 3628.0], [75.6, 3629.0], [75.7, 3633.0], [75.8, 3636.0], [75.9, 3638.0], [76.0, 3639.0], [76.1, 3641.0], [76.2, 3642.0], [76.3, 3644.0], [76.4, 3645.0], [76.5, 3647.0], [76.6, 3647.0], [76.7, 3647.0], [76.8, 3649.0], [76.9, 3650.0], [77.0, 3651.0], [77.1, 3652.0], [77.2, 3652.0], [77.3, 3653.0], [77.4, 3654.0], [77.5, 3655.0], [77.6, 3657.0], [77.7, 3657.0], [77.8, 3659.0], [77.9, 3660.0], [78.0, 3663.0], [78.1, 3665.0], [78.2, 3665.0], [78.3, 3666.0], [78.4, 3666.0], [78.5, 3666.0], [78.6, 3667.0], [78.7, 3668.0], [78.8, 3671.0], [78.9, 3672.0], [79.0, 3673.0], [79.1, 3673.0], [79.2, 3674.0], [79.3, 3674.0], [79.4, 3674.0], [79.5, 3675.0], [79.6, 3676.0], [79.7, 3677.0], [79.8, 3677.0], [79.9, 3682.0], [80.0, 3685.0], [80.1, 3686.0], [80.2, 3688.0], [80.3, 3692.0], [80.4, 3694.0], [80.5, 3695.0], [80.6, 3698.0], [80.7, 3699.0], [80.8, 3700.0], [80.9, 3702.0], [81.0, 3706.0], [81.1, 3711.0], [81.2, 3711.0], [81.3, 3712.0], [81.4, 3714.0], [81.5, 3715.0], [81.6, 3716.0], [81.7, 3716.0], [81.8, 3719.0], [81.9, 3720.0], [82.0, 3721.0], [82.1, 3721.0], [82.2, 3723.0], [82.3, 3724.0], [82.4, 3727.0], [82.5, 3727.0], [82.6, 3728.0], [82.7, 3728.0], [82.8, 3729.0], [82.9, 3731.0], [83.0, 3734.0], [83.1, 3736.0], [83.2, 3737.0], [83.3, 3737.0], [83.4, 3738.0], [83.5, 3745.0], [83.6, 3745.0], [83.7, 3746.0], [83.8, 3746.0], [83.9, 3748.0], [84.0, 3752.0], [84.1, 3752.0], [84.2, 3753.0], [84.3, 3754.0], [84.4, 3754.0], [84.5, 3758.0], [84.6, 3758.0], [84.7, 3758.0], [84.8, 3760.0], [84.9, 3760.0], [85.0, 3761.0], [85.1, 3761.0], [85.2, 3763.0], [85.3, 3763.0], [85.4, 3766.0], [85.5, 3767.0], [85.6, 3767.0], [85.7, 3771.0], [85.8, 3772.0], [85.9, 3774.0], [86.0, 3777.0], [86.1, 3777.0], [86.2, 3780.0], [86.3, 3784.0], [86.4, 3784.0], [86.5, 3786.0], [86.6, 3787.0], [86.7, 3791.0], [86.8, 3793.0], [86.9, 3796.0], [87.0, 3798.0], [87.1, 3798.0], [87.2, 3808.0], [87.3, 3808.0], [87.4, 3808.0], [87.5, 3809.0], [87.6, 3809.0], [87.7, 3810.0], [87.8, 3813.0], [87.9, 3816.0], [88.0, 3821.0], [88.1, 3821.0], [88.2, 3822.0], [88.3, 3826.0], [88.4, 3827.0], [88.5, 3827.0], [88.6, 3828.0], [88.7, 3828.0], [88.8, 3828.0], [88.9, 3830.0], [89.0, 3834.0], [89.1, 3837.0], [89.2, 3840.0], [89.3, 3840.0], [89.4, 3841.0], [89.5, 3843.0], [89.6, 3853.0], [89.7, 3855.0], [89.8, 3856.0], [89.9, 3860.0], [90.0, 3866.0], [90.1, 3866.0], [90.2, 3869.0], [90.3, 3872.0], [90.4, 3874.0], [90.5, 3875.0], [90.6, 3878.0], [90.7, 3880.0], [90.8, 3883.0], [90.9, 3894.0], [91.0, 3895.0], [91.1, 3896.0], [91.2, 3903.0], [91.3, 3904.0], [91.4, 3904.0], [91.5, 3910.0], [91.6, 3912.0], [91.7, 3916.0], [91.8, 3917.0], [91.9, 3920.0], [92.0, 3923.0], [92.1, 3925.0], [92.2, 3928.0], [92.3, 3930.0], [92.4, 3932.0], [92.5, 3934.0], [92.6, 3935.0], [92.7, 3935.0], [92.8, 3938.0], [92.9, 3942.0], [93.0, 3945.0], [93.1, 3952.0], [93.2, 3961.0], [93.3, 3962.0], [93.4, 3964.0], [93.5, 3968.0], [93.6, 3969.0], [93.7, 3977.0], [93.8, 3978.0], [93.9, 3978.0], [94.0, 3985.0], [94.1, 3990.0], [94.2, 3999.0], [94.3, 4002.0], [94.4, 4015.0], [94.5, 4025.0], [94.6, 4029.0], [94.7, 4037.0], [94.8, 4042.0], [94.9, 4044.0], [95.0, 4047.0], [95.1, 4049.0], [95.2, 4050.0], [95.3, 4051.0], [95.4, 4051.0], [95.5, 4056.0], [95.6, 4065.0], [95.7, 4072.0], [95.8, 4076.0], [95.9, 4086.0], [96.0, 4101.0], [96.1, 4102.0], [96.2, 4133.0], [96.3, 4136.0], [96.4, 4145.0], [96.5, 4151.0], [96.6, 4169.0], [96.7, 4213.0], [96.8, 4222.0], [96.9, 4288.0], [97.0, 4292.0], [97.1, 4293.0], [97.2, 4312.0], [97.3, 4316.0], [97.4, 4318.0], [97.5, 4326.0], [97.6, 4327.0], [97.7, 4358.0], [97.8, 4437.0], [97.9, 4460.0], [98.0, 4463.0], [98.1, 4467.0], [98.2, 4470.0], [98.3, 4518.0], [98.4, 4542.0], [98.5, 4572.0], [98.6, 4608.0], [98.7, 4707.0], [98.8, 4745.0], [98.9, 4877.0], [99.0, 4894.0], [99.1, 5199.0], [99.2, 5346.0], [99.3, 5367.0], [99.4, 5717.0], [99.5, 5737.0], [99.6, 5883.0], [99.7, 6077.0], [99.8, 6625.0], [99.9, 6649.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 19.0], [0.1, 19.0], [0.2, 20.0], [0.3, 20.0], [0.4, 37.0], [0.5, 38.0], [0.6, 44.0], [0.7, 45.0], [0.8, 49.0], [0.9, 52.0], [1.0, 52.0], [1.1, 61.0], [1.2, 62.0], [1.3, 71.0], [1.4, 71.0], [1.5, 73.0], [1.6, 77.0], [1.7, 77.0], [1.8, 78.0], [1.9, 84.0], [2.0, 88.0], [2.1, 88.0], [2.2, 89.0], [2.3, 91.0], [2.4, 93.0], [2.5, 103.0], [2.6, 105.0], [2.7, 106.0], [2.8, 107.0], [2.9, 113.0], [3.0, 113.0], [3.1, 115.0], [3.2, 119.0], [3.3, 119.0], [3.4, 120.0], [3.5, 120.0], [3.6, 121.0], [3.7, 127.0], [3.8, 127.0], [3.9, 127.0], [4.0, 128.0], [4.1, 138.0], [4.2, 139.0], [4.3, 139.0], [4.4, 150.0], [4.5, 150.0], [4.6, 152.0], [4.7, 153.0], [4.8, 160.0], [4.9, 162.0], [5.0, 176.0], [5.1, 176.0], [5.2, 176.0], [5.3, 178.0], [5.4, 193.0], [5.5, 198.0], [5.6, 206.0], [5.7, 206.0], [5.8, 207.0], [5.9, 208.0], [6.0, 214.0], [6.1, 215.0], [6.2, 222.0], [6.3, 224.0], [6.4, 225.0], [6.5, 225.0], [6.6, 229.0], [6.7, 229.0], [6.8, 230.0], [6.9, 230.0], [7.0, 243.0], [7.1, 244.0], [7.2, 245.0], [7.3, 245.0], [7.4, 257.0], [7.5, 260.0], [7.6, 264.0], [7.7, 264.0], [7.8, 265.0], [7.9, 273.0], [8.0, 275.0], [8.1, 277.0], [8.2, 281.0], [8.3, 289.0], [8.4, 290.0], [8.5, 294.0], [8.6, 296.0], [8.7, 296.0], [8.8, 296.0], [8.9, 297.0], [9.0, 297.0], [9.1, 301.0], [9.2, 302.0], [9.3, 302.0], [9.4, 309.0], [9.5, 311.0], [9.6, 311.0], [9.7, 312.0], [9.8, 320.0], [9.9, 320.0], [10.0, 320.0], [10.1, 320.0], [10.2, 321.0], [10.3, 321.0], [10.4, 323.0], [10.5, 324.0], [10.6, 324.0], [10.7, 324.0], [10.8, 336.0], [10.9, 337.0], [11.0, 342.0], [11.1, 343.0], [11.2, 350.0], [11.3, 357.0], [11.4, 358.0], [11.5, 360.0], [11.6, 365.0], [11.7, 369.0], [11.8, 371.0], [11.9, 373.0], [12.0, 374.0], [12.1, 374.0], [12.2, 380.0], [12.3, 384.0], [12.4, 385.0], [12.5, 386.0], [12.6, 387.0], [12.7, 387.0], [12.8, 388.0], [12.9, 388.0], [13.0, 388.0], [13.1, 389.0], [13.2, 389.0], [13.3, 389.0], [13.4, 389.0], [13.5, 389.0], [13.6, 391.0], [13.7, 393.0], [13.8, 397.0], [13.9, 397.0], [14.0, 399.0], [14.1, 401.0], [14.2, 402.0], [14.3, 408.0], [14.4, 409.0], [14.5, 416.0], [14.6, 417.0], [14.7, 420.0], [14.8, 428.0], [14.9, 436.0], [15.0, 437.0], [15.1, 447.0], [15.2, 454.0], [15.3, 455.0], [15.4, 461.0], [15.5, 462.0], [15.6, 478.0], [15.7, 480.0], [15.8, 493.0], [15.9, 502.0], [16.0, 504.0], [16.1, 504.0], [16.2, 512.0], [16.3, 513.0], [16.4, 519.0], [16.5, 520.0], [16.6, 521.0], [16.7, 523.0], [16.8, 528.0], [16.9, 530.0], [17.0, 531.0], [17.1, 534.0], [17.2, 548.0], [17.3, 563.0], [17.4, 564.0], [17.5, 565.0], [17.6, 566.0], [17.7, 571.0], [17.8, 572.0], [17.9, 572.0], [18.0, 575.0], [18.1, 577.0], [18.2, 582.0], [18.3, 585.0], [18.4, 588.0], [18.5, 591.0], [18.6, 596.0], [18.7, 597.0], [18.8, 597.0], [18.9, 599.0], [19.0, 604.0], [19.1, 608.0], [19.2, 609.0], [19.3, 621.0], [19.4, 623.0], [19.5, 623.0], [19.6, 624.0], [19.7, 628.0], [19.8, 630.0], [19.9, 632.0], [20.0, 633.0], [20.1, 634.0], [20.2, 636.0], [20.3, 639.0], [20.4, 640.0], [20.5, 642.0], [20.6, 644.0], [20.7, 648.0], [20.8, 650.0], [20.9, 651.0], [21.0, 653.0], [21.1, 653.0], [21.2, 658.0], [21.3, 659.0], [21.4, 663.0], [21.5, 675.0], [21.6, 676.0], [21.7, 676.0], [21.8, 677.0], [21.9, 680.0], [22.0, 681.0], [22.1, 682.0], [22.2, 685.0], [22.3, 686.0], [22.4, 689.0], [22.5, 690.0], [22.6, 691.0], [22.7, 691.0], [22.8, 692.0], [22.9, 694.0], [23.0, 697.0], [23.1, 698.0], [23.2, 700.0], [23.3, 701.0], [23.4, 702.0], [23.5, 703.0], [23.6, 704.0], [23.7, 705.0], [23.8, 706.0], [23.9, 707.0], [24.0, 712.0], [24.1, 718.0], [24.2, 719.0], [24.3, 726.0], [24.4, 728.0], [24.5, 738.0], [24.6, 738.0], [24.7, 741.0], [24.8, 742.0], [24.9, 744.0], [25.0, 745.0], [25.1, 751.0], [25.2, 753.0], [25.3, 754.0], [25.4, 757.0], [25.5, 759.0], [25.6, 763.0], [25.7, 765.0], [25.8, 766.0], [25.9, 767.0], [26.0, 771.0], [26.1, 771.0], [26.2, 775.0], [26.3, 778.0], [26.4, 778.0], [26.5, 786.0], [26.6, 797.0], [26.7, 801.0], [26.8, 802.0], [26.9, 802.0], [27.0, 804.0], [27.1, 804.0], [27.2, 806.0], [27.3, 813.0], [27.4, 823.0], [27.5, 823.0], [27.6, 824.0], [27.7, 835.0], [27.8, 844.0], [27.9, 846.0], [28.0, 847.0], [28.1, 851.0], [28.2, 853.0], [28.3, 853.0], [28.4, 854.0], [28.5, 859.0], [28.6, 867.0], [28.7, 868.0], [28.8, 869.0], [28.9, 871.0], [29.0, 880.0], [29.1, 881.0], [29.2, 882.0], [29.3, 883.0], [29.4, 883.0], [29.5, 884.0], [29.6, 884.0], [29.7, 886.0], [29.8, 887.0], [29.9, 891.0], [30.0, 892.0], [30.1, 892.0], [30.2, 899.0], [30.3, 900.0], [30.4, 905.0], [30.5, 907.0], [30.6, 907.0], [30.7, 907.0], [30.8, 907.0], [30.9, 914.0], [31.0, 915.0], [31.1, 916.0], [31.2, 919.0], [31.3, 920.0], [31.4, 920.0], [31.5, 922.0], [31.6, 922.0], [31.7, 923.0], [31.8, 923.0], [31.9, 924.0], [32.0, 930.0], [32.1, 930.0], [32.2, 930.0], [32.3, 930.0], [32.4, 934.0], [32.5, 935.0], [32.6, 935.0], [32.7, 936.0], [32.8, 937.0], [32.9, 937.0], [33.0, 937.0], [33.1, 940.0], [33.2, 949.0], [33.3, 949.0], [33.4, 950.0], [33.5, 950.0], [33.6, 953.0], [33.7, 953.0], [33.8, 953.0], [33.9, 955.0], [34.0, 960.0], [34.1, 968.0], [34.2, 974.0], [34.3, 976.0], [34.4, 977.0], [34.5, 978.0], [34.6, 987.0], [34.7, 987.0], [34.8, 989.0], [34.9, 993.0], [35.0, 995.0], [35.1, 996.0], [35.2, 998.0], [35.3, 998.0], [35.4, 999.0], [35.5, 999.0], [35.6, 1000.0], [35.7, 1000.0], [35.8, 1005.0], [35.9, 1005.0], [36.0, 1012.0], [36.1, 1018.0], [36.2, 1019.0], [36.3, 1019.0], [36.4, 1020.0], [36.5, 1021.0], [36.6, 1024.0], [36.7, 1025.0], [36.8, 1026.0], [36.9, 1026.0], [37.0, 1026.0], [37.1, 1028.0], [37.2, 1032.0], [37.3, 1032.0], [37.4, 1040.0], [37.5, 1046.0], [37.6, 1046.0], [37.7, 1047.0], [37.8, 1048.0], [37.9, 1048.0], [38.0, 1049.0], [38.1, 1064.0], [38.2, 1064.0], [38.3, 1064.0], [38.4, 1066.0], [38.5, 1071.0], [38.6, 1074.0], [38.7, 1075.0], [38.8, 1079.0], [38.9, 1081.0], [39.0, 1088.0], [39.1, 1097.0], [39.2, 1100.0], [39.3, 1102.0], [39.4, 1104.0], [39.5, 1105.0], [39.6, 1108.0], [39.7, 1108.0], [39.8, 1109.0], [39.9, 1109.0], [40.0, 1113.0], [40.1, 1114.0], [40.2, 1114.0], [40.3, 1114.0], [40.4, 1118.0], [40.5, 1123.0], [40.6, 1124.0], [40.7, 1130.0], [40.8, 1130.0], [40.9, 1130.0], [41.0, 1131.0], [41.1, 1131.0], [41.2, 1132.0], [41.3, 1132.0], [41.4, 1132.0], [41.5, 1132.0], [41.6, 1136.0], [41.7, 1136.0], [41.8, 1137.0], [41.9, 1138.0], [42.0, 1147.0], [42.1, 1148.0], [42.2, 1148.0], [42.3, 1151.0], [42.4, 1152.0], [42.5, 1152.0], [42.6, 1153.0], [42.7, 1153.0], [42.8, 1154.0], [42.9, 1154.0], [43.0, 1154.0], [43.1, 1155.0], [43.2, 1156.0], [43.3, 1156.0], [43.4, 1156.0], [43.5, 1156.0], [43.6, 1157.0], [43.7, 1157.0], [43.8, 1158.0], [43.9, 1159.0], [44.0, 1159.0], [44.1, 1159.0], [44.2, 1159.0], [44.3, 1159.0], [44.4, 1160.0], [44.5, 1161.0], [44.6, 1161.0], [44.7, 1161.0], [44.8, 1162.0], [44.9, 1162.0], [45.0, 1162.0], [45.1, 1163.0], [45.2, 1163.0], [45.3, 1166.0], [45.4, 1166.0], [45.5, 1167.0], [45.6, 1171.0], [45.7, 1174.0], [45.8, 1178.0], [45.9, 1182.0], [46.0, 1182.0], [46.1, 1183.0], [46.2, 1186.0], [46.3, 1187.0], [46.4, 1188.0], [46.5, 1188.0], [46.6, 1189.0], [46.7, 1201.0], [46.8, 1202.0], [46.9, 1209.0], [47.0, 1212.0], [47.1, 1212.0], [47.2, 1216.0], [47.3, 1217.0], [47.4, 1221.0], [47.5, 1222.0], [47.6, 1225.0], [47.7, 1225.0], [47.8, 1227.0], [47.9, 1234.0], [48.0, 1235.0], [48.1, 1240.0], [48.2, 1248.0], [48.3, 1248.0], [48.4, 1251.0], [48.5, 1253.0], [48.6, 1253.0], [48.7, 1257.0], [48.8, 1258.0], [48.9, 1261.0], [49.0, 1265.0], [49.1, 1270.0], [49.2, 1271.0], [49.3, 1271.0], [49.4, 1273.0], [49.5, 1274.0], [49.6, 1274.0], [49.7, 1275.0], [49.8, 1277.0], [49.9, 1282.0], [50.0, 1282.0], [50.1, 1283.0], [50.2, 1284.0], [50.3, 1285.0], [50.4, 1287.0], [50.5, 1290.0], [50.6, 1295.0], [50.7, 1299.0], [50.8, 1300.0], [50.9, 1300.0], [51.0, 1304.0], [51.1, 1304.0], [51.2, 1306.0], [51.3, 1307.0], [51.4, 1308.0], [51.5, 1309.0], [51.6, 1309.0], [51.7, 1312.0], [51.8, 1312.0], [51.9, 1315.0], [52.0, 1315.0], [52.1, 1316.0], [52.2, 1317.0], [52.3, 1319.0], [52.4, 1324.0], [52.5, 1326.0], [52.6, 1327.0], [52.7, 1334.0], [52.8, 1335.0], [52.9, 1336.0], [53.0, 1343.0], [53.1, 1349.0], [53.2, 1351.0], [53.3, 1352.0], [53.4, 1352.0], [53.5, 1359.0], [53.6, 1360.0], [53.7, 1365.0], [53.8, 1366.0], [53.9, 1372.0], [54.0, 1374.0], [54.1, 1375.0], [54.2, 1375.0], [54.3, 1375.0], [54.4, 1377.0], [54.5, 1377.0], [54.6, 1377.0], [54.7, 1379.0], [54.8, 1379.0], [54.9, 1381.0], [55.0, 1383.0], [55.1, 1384.0], [55.2, 1398.0], [55.3, 1399.0], [55.4, 1402.0], [55.5, 1402.0], [55.6, 1403.0], [55.7, 1408.0], [55.8, 1409.0], [55.9, 1410.0], [56.0, 1410.0], [56.1, 1413.0], [56.2, 1421.0], [56.3, 1422.0], [56.4, 1423.0], [56.5, 1428.0], [56.6, 1429.0], [56.7, 1436.0], [56.8, 1436.0], [56.9, 1442.0], [57.0, 1443.0], [57.1, 1447.0], [57.2, 1452.0], [57.3, 1454.0], [57.4, 1457.0], [57.5, 1462.0], [57.6, 1463.0], [57.7, 1463.0], [57.8, 1464.0], [57.9, 1465.0], [58.0, 1465.0], [58.1, 1466.0], [58.2, 1467.0], [58.3, 1468.0], [58.4, 1468.0], [58.5, 1468.0], [58.6, 1475.0], [58.7, 1479.0], [58.8, 1479.0], [58.9, 1482.0], [59.0, 1487.0], [59.1, 1494.0], [59.2, 1494.0], [59.3, 1494.0], [59.4, 1495.0], [59.5, 1497.0], [59.6, 1502.0], [59.7, 1507.0], [59.8, 1507.0], [59.9, 1507.0], [60.0, 1508.0], [60.1, 1509.0], [60.2, 1517.0], [60.3, 1517.0], [60.4, 1523.0], [60.5, 1530.0], [60.6, 1531.0], [60.7, 1531.0], [60.8, 1532.0], [60.9, 1533.0], [61.0, 1534.0], [61.1, 1542.0], [61.2, 1542.0], [61.3, 1543.0], [61.4, 1548.0], [61.5, 1548.0], [61.6, 1548.0], [61.7, 1550.0], [61.8, 1550.0], [61.9, 1555.0], [62.0, 1562.0], [62.1, 1569.0], [62.2, 1569.0], [62.3, 1569.0], [62.4, 1570.0], [62.5, 1575.0], [62.6, 1576.0], [62.7, 1583.0], [62.8, 1584.0], [62.9, 1585.0], [63.0, 1586.0], [63.1, 1586.0], [63.2, 1587.0], [63.3, 1588.0], [63.4, 1591.0], [63.5, 1594.0], [63.6, 1594.0], [63.7, 1595.0], [63.8, 1595.0], [63.9, 1597.0], [64.0, 1600.0], [64.1, 1606.0], [64.2, 1607.0], [64.3, 1608.0], [64.4, 1613.0], [64.5, 1614.0], [64.6, 1621.0], [64.7, 1628.0], [64.8, 1628.0], [64.9, 1628.0], [65.0, 1628.0], [65.1, 1635.0], [65.2, 1637.0], [65.3, 1638.0], [65.4, 1643.0], [65.5, 1644.0], [65.6, 1645.0], [65.7, 1645.0], [65.8, 1650.0], [65.9, 1651.0], [66.0, 1651.0], [66.1, 1657.0], [66.2, 1658.0], [66.3, 1658.0], [66.4, 1660.0], [66.5, 1660.0], [66.6, 1660.0], [66.7, 1660.0], [66.8, 1665.0], [66.9, 1665.0], [67.0, 1672.0], [67.1, 1672.0], [67.2, 1680.0], [67.3, 1680.0], [67.4, 1688.0], [67.5, 1688.0], [67.6, 1689.0], [67.7, 1689.0], [67.8, 1690.0], [67.9, 1691.0], [68.0, 1691.0], [68.1, 1692.0], [68.2, 1693.0], [68.3, 1693.0], [68.4, 1695.0], [68.5, 1696.0], [68.6, 1697.0], [68.7, 1699.0], [68.8, 1699.0], [68.9, 1699.0], [69.0, 1699.0], [69.1, 1700.0], [69.2, 1700.0], [69.3, 1700.0], [69.4, 1701.0], [69.5, 1701.0], [69.6, 1701.0], [69.7, 1703.0], [69.8, 1704.0], [69.9, 1704.0], [70.0, 1704.0], [70.1, 1707.0], [70.2, 1708.0], [70.3, 1708.0], [70.4, 1708.0], [70.5, 1709.0], [70.6, 1710.0], [70.7, 1716.0], [70.8, 1717.0], [70.9, 1717.0], [71.0, 1718.0], [71.1, 1718.0], [71.2, 1721.0], [71.3, 1723.0], [71.4, 1724.0], [71.5, 1725.0], [71.6, 1725.0], [71.7, 1727.0], [71.8, 1729.0], [71.9, 1730.0], [72.0, 1738.0], [72.1, 1738.0], [72.2, 1739.0], [72.3, 1742.0], [72.4, 1747.0], [72.5, 1750.0], [72.6, 1752.0], [72.7, 1756.0], [72.8, 1763.0], [72.9, 1764.0], [73.0, 1767.0], [73.1, 1768.0], [73.2, 1770.0], [73.3, 1771.0], [73.4, 1771.0], [73.5, 1774.0], [73.6, 1776.0], [73.7, 1777.0], [73.8, 1777.0], [73.9, 1778.0], [74.0, 1779.0], [74.1, 1783.0], [74.2, 1783.0], [74.3, 1789.0], [74.4, 1790.0], [74.5, 1795.0], [74.6, 1802.0], [74.7, 1803.0], [74.8, 1812.0], [74.9, 1812.0], [75.0, 1812.0], [75.1, 1818.0], [75.2, 1818.0], [75.3, 1819.0], [75.4, 1820.0], [75.5, 1827.0], [75.6, 1827.0], [75.7, 1833.0], [75.8, 1839.0], [75.9, 1845.0], [76.0, 1847.0], [76.1, 1848.0], [76.2, 1855.0], [76.3, 1855.0], [76.4, 1860.0], [76.5, 1864.0], [76.6, 1865.0], [76.7, 1871.0], [76.8, 1872.0], [76.9, 1872.0], [77.0, 1881.0], [77.1, 1888.0], [77.2, 1889.0], [77.3, 1895.0], [77.4, 1896.0], [77.5, 1903.0], [77.6, 1904.0], [77.7, 1909.0], [77.8, 1910.0], [77.9, 1910.0], [78.0, 1910.0], [78.1, 1911.0], [78.2, 1911.0], [78.3, 1912.0], [78.4, 1921.0], [78.5, 1922.0], [78.6, 1923.0], [78.7, 1924.0], [78.8, 1925.0], [78.9, 1926.0], [79.0, 1927.0], [79.1, 1929.0], [79.2, 1937.0], [79.3, 1944.0], [79.4, 1953.0], [79.5, 1953.0], [79.6, 1953.0], [79.7, 1960.0], [79.8, 1960.0], [79.9, 1966.0], [80.0, 1967.0], [80.1, 1967.0], [80.2, 1970.0], [80.3, 1970.0], [80.4, 1970.0], [80.5, 1973.0], [80.6, 1973.0], [80.7, 1975.0], [80.8, 1976.0], [80.9, 1977.0], [81.0, 1977.0], [81.1, 1977.0], [81.2, 1979.0], [81.3, 1984.0], [81.4, 1987.0], [81.5, 1987.0], [81.6, 1987.0], [81.7, 1988.0], [81.8, 1989.0], [81.9, 2000.0], [82.0, 2001.0], [82.1, 2002.0], [82.2, 2008.0], [82.3, 2009.0], [82.4, 2011.0], [82.5, 2015.0], [82.6, 2016.0], [82.7, 2016.0], [82.8, 2017.0], [82.9, 2022.0], [83.0, 2023.0], [83.1, 2023.0], [83.2, 2024.0], [83.3, 2025.0], [83.4, 2027.0], [83.5, 2027.0], [83.6, 2028.0], [83.7, 2028.0], [83.8, 2029.0], [83.9, 2029.0], [84.0, 2029.0], [84.1, 2029.0], [84.2, 2030.0], [84.3, 2033.0], [84.4, 2034.0], [84.5, 2039.0], [84.6, 2039.0], [84.7, 2046.0], [84.8, 2049.0], [84.9, 2049.0], [85.0, 2049.0], [85.1, 2049.0], [85.2, 2049.0], [85.3, 2052.0], [85.4, 2053.0], [85.5, 2054.0], [85.6, 2057.0], [85.7, 2058.0], [85.8, 2058.0], [85.9, 2058.0], [86.0, 2058.0], [86.1, 2058.0], [86.2, 2058.0], [86.3, 2060.0], [86.4, 2060.0], [86.5, 2060.0], [86.6, 2060.0], [86.7, 2060.0], [86.8, 2061.0], [86.9, 2061.0], [87.0, 2062.0], [87.1, 2063.0], [87.2, 2063.0], [87.3, 2063.0], [87.4, 2064.0], [87.5, 2066.0], [87.6, 2066.0], [87.7, 2068.0], [87.8, 2069.0], [87.9, 2069.0], [88.0, 2070.0], [88.1, 2070.0], [88.2, 2071.0], [88.3, 2072.0], [88.4, 2072.0], [88.5, 2073.0], [88.6, 2074.0], [88.7, 2074.0], [88.8, 2074.0], [88.9, 2080.0], [89.0, 2089.0], [89.1, 2100.0], [89.2, 2101.0], [89.3, 2101.0], [89.4, 2102.0], [89.5, 2102.0], [89.6, 2105.0], [89.7, 2106.0], [89.8, 2106.0], [89.9, 2113.0], [90.0, 2114.0], [90.1, 2120.0], [90.2, 2121.0], [90.3, 2130.0], [90.4, 2130.0], [90.5, 2131.0], [90.6, 2137.0], [90.7, 2137.0], [90.8, 2142.0], [90.9, 2143.0], [91.0, 2143.0], [91.1, 2143.0], [91.2, 2143.0], [91.3, 2143.0], [91.4, 2153.0], [91.5, 2153.0], [91.6, 2160.0], [91.7, 2160.0], [91.8, 2160.0], [91.9, 2172.0], [92.0, 2177.0], [92.1, 2179.0], [92.2, 2180.0], [92.3, 2188.0], [92.4, 2190.0], [92.5, 2191.0], [92.6, 2201.0], [92.7, 2201.0], [92.8, 2202.0], [92.9, 2215.0], [93.0, 2215.0], [93.1, 2216.0], [93.2, 2217.0], [93.3, 2217.0], [93.4, 2218.0], [93.5, 2226.0], [93.6, 2228.0], [93.7, 2229.0], [93.8, 2229.0], [93.9, 2232.0], [94.0, 2236.0], [94.1, 2237.0], [94.2, 2243.0], [94.3, 2244.0], [94.4, 2249.0], [94.5, 2251.0], [94.6, 2251.0], [94.7, 2253.0], [94.8, 2254.0], [94.9, 2254.0], [95.0, 2258.0], [95.1, 2258.0], [95.2, 2258.0], [95.3, 2259.0], [95.4, 2259.0], [95.5, 2260.0], [95.6, 2260.0], [95.7, 2261.0], [95.8, 2262.0], [95.9, 2263.0], [96.0, 2263.0], [96.1, 2264.0], [96.2, 2264.0], [96.3, 2268.0], [96.4, 2269.0], [96.5, 2271.0], [96.6, 2273.0], [96.7, 2275.0], [96.8, 2279.0], [96.9, 2279.0], [97.0, 2282.0], [97.1, 2283.0], [97.2, 2283.0], [97.3, 2284.0], [97.4, 2284.0], [97.5, 2284.0], [97.6, 2285.0], [97.7, 2288.0], [97.8, 2288.0], [97.9, 2288.0], [98.0, 2291.0], [98.1, 2291.0], [98.2, 2292.0], [98.3, 2297.0], [98.4, 2297.0], [98.5, 2298.0], [98.6, 2298.0], [98.7, 2304.0], [98.8, 2307.0], [98.9, 2307.0], [99.0, 2311.0], [99.1, 2313.0], [99.2, 2313.0], [99.3, 2314.0], [99.4, 2315.0], [99.5, 2315.0], [99.6, 2323.0], [99.7, 2324.0], [99.8, 2334.0], [99.9, 2335.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 31.0], [0.1, 45.0], [0.2, 50.0], [0.3, 50.0], [0.4, 52.0], [0.5, 54.0], [0.6, 54.0], [0.7, 55.0], [0.8, 58.0], [0.9, 58.0], [1.0, 60.0], [1.1, 60.0], [1.2, 60.0], [1.3, 62.0], [1.4, 62.0], [1.5, 63.0], [1.6, 63.0], [1.7, 64.0], [1.8, 65.0], [1.9, 65.0], [2.0, 67.0], [2.1, 68.0], [2.2, 70.0], [2.3, 70.0], [2.4, 70.0], [2.5, 71.0], [2.6, 71.0], [2.7, 73.0], [2.8, 73.0], [2.9, 74.0], [3.0, 75.0], [3.1, 76.0], [3.2, 80.0], [3.3, 80.0], [3.4, 81.0], [3.5, 84.0], [3.6, 85.0], [3.7, 86.0], [3.8, 86.0], [3.9, 88.0], [4.0, 89.0], [4.1, 91.0], [4.2, 91.0], [4.3, 91.0], [4.4, 92.0], [4.5, 92.0], [4.6, 95.0], [4.7, 97.0], [4.8, 97.0], [4.9, 103.0], [5.0, 106.0], [5.1, 110.0], [5.2, 114.0], [5.3, 119.0], [5.4, 120.0], [5.5, 121.0], [5.6, 122.0], [5.7, 122.0], [5.8, 123.0], [5.9, 123.0], [6.0, 123.0], [6.1, 126.0], [6.2, 131.0], [6.3, 131.0], [6.4, 133.0], [6.5, 135.0], [6.6, 136.0], [6.7, 137.0], [6.8, 137.0], [6.9, 142.0], [7.0, 143.0], [7.1, 144.0], [7.2, 144.0], [7.3, 145.0], [7.4, 145.0], [7.5, 146.0], [7.6, 146.0], [7.7, 146.0], [7.8, 147.0], [7.9, 150.0], [8.0, 155.0], [8.1, 156.0], [8.2, 157.0], [8.3, 157.0], [8.4, 162.0], [8.5, 163.0], [8.6, 163.0], [8.7, 163.0], [8.8, 165.0], [8.9, 167.0], [9.0, 168.0], [9.1, 168.0], [9.2, 169.0], [9.3, 169.0], [9.4, 169.0], [9.5, 169.0], [9.6, 170.0], [9.7, 170.0], [9.8, 170.0], [9.9, 170.0], [10.0, 171.0], [10.1, 172.0], [10.2, 173.0], [10.3, 173.0], [10.4, 173.0], [10.5, 175.0], [10.6, 177.0], [10.7, 182.0], [10.8, 182.0], [10.9, 183.0], [11.0, 183.0], [11.1, 183.0], [11.2, 183.0], [11.3, 183.0], [11.4, 184.0], [11.5, 184.0], [11.6, 185.0], [11.7, 185.0], [11.8, 186.0], [11.9, 186.0], [12.0, 186.0], [12.1, 186.0], [12.2, 186.0], [12.3, 187.0], [12.4, 187.0], [12.5, 187.0], [12.6, 187.0], [12.7, 187.0], [12.8, 188.0], [12.9, 188.0], [13.0, 188.0], [13.1, 189.0], [13.2, 189.0], [13.3, 189.0], [13.4, 189.0], [13.5, 189.0], [13.6, 189.0], [13.7, 189.0], [13.8, 189.0], [13.9, 190.0], [14.0, 190.0], [14.1, 190.0], [14.2, 190.0], [14.3, 190.0], [14.4, 190.0], [14.5, 191.0], [14.6, 191.0], [14.7, 191.0], [14.8, 192.0], [14.9, 193.0], [15.0, 193.0], [15.1, 193.0], [15.2, 193.0], [15.3, 193.0], [15.4, 194.0], [15.5, 195.0], [15.6, 195.0], [15.7, 195.0], [15.8, 195.0], [15.9, 195.0], [16.0, 195.0], [16.1, 195.0], [16.2, 196.0], [16.3, 196.0], [16.4, 197.0], [16.5, 197.0], [16.6, 197.0], [16.7, 199.0], [16.8, 200.0], [16.9, 201.0], [17.0, 202.0], [17.1, 203.0], [17.2, 203.0], [17.3, 203.0], [17.4, 204.0], [17.5, 204.0], [17.6, 205.0], [17.7, 205.0], [17.8, 206.0], [17.9, 206.0], [18.0, 206.0], [18.1, 207.0], [18.2, 208.0], [18.3, 208.0], [18.4, 208.0], [18.5, 208.0], [18.6, 209.0], [18.7, 209.0], [18.8, 210.0], [18.9, 210.0], [19.0, 210.0], [19.1, 211.0], [19.2, 211.0], [19.3, 211.0], [19.4, 212.0], [19.5, 212.0], [19.6, 212.0], [19.7, 213.0], [19.8, 213.0], [19.9, 214.0], [20.0, 214.0], [20.1, 215.0], [20.2, 215.0], [20.3, 215.0], [20.4, 215.0], [20.5, 216.0], [20.6, 216.0], [20.7, 216.0], [20.8, 216.0], [20.9, 216.0], [21.0, 217.0], [21.1, 217.0], [21.2, 218.0], [21.3, 218.0], [21.4, 219.0], [21.5, 219.0], [21.6, 219.0], [21.7, 219.0], [21.8, 219.0], [21.9, 220.0], [22.0, 220.0], [22.1, 220.0], [22.2, 220.0], [22.3, 221.0], [22.4, 221.0], [22.5, 222.0], [22.6, 222.0], [22.7, 222.0], [22.8, 222.0], [22.9, 222.0], [23.0, 223.0], [23.1, 223.0], [23.2, 223.0], [23.3, 224.0], [23.4, 224.0], [23.5, 225.0], [23.6, 225.0], [23.7, 225.0], [23.8, 225.0], [23.9, 225.0], [24.0, 225.0], [24.1, 226.0], [24.2, 226.0], [24.3, 226.0], [24.4, 226.0], [24.5, 226.0], [24.6, 226.0], [24.7, 227.0], [24.8, 227.0], [24.9, 227.0], [25.0, 227.0], [25.1, 227.0], [25.2, 227.0], [25.3, 228.0], [25.4, 228.0], [25.5, 228.0], [25.6, 228.0], [25.7, 228.0], [25.8, 228.0], [25.9, 228.0], [26.0, 228.0], [26.1, 229.0], [26.2, 229.0], [26.3, 229.0], [26.4, 229.0], [26.5, 229.0], [26.6, 229.0], [26.7, 229.0], [26.8, 229.0], [26.9, 230.0], [27.0, 230.0], [27.1, 231.0], [27.2, 231.0], [27.3, 231.0], [27.4, 231.0], [27.5, 231.0], [27.6, 231.0], [27.7, 232.0], [27.8, 232.0], [27.9, 232.0], [28.0, 232.0], [28.1, 232.0], [28.2, 232.0], [28.3, 232.0], [28.4, 232.0], [28.5, 232.0], [28.6, 233.0], [28.7, 233.0], [28.8, 233.0], [28.9, 233.0], [29.0, 233.0], [29.1, 233.0], [29.2, 234.0], [29.3, 234.0], [29.4, 234.0], [29.5, 234.0], [29.6, 234.0], [29.7, 234.0], [29.8, 234.0], [29.9, 235.0], [30.0, 235.0], [30.1, 235.0], [30.2, 235.0], [30.3, 235.0], [30.4, 235.0], [30.5, 235.0], [30.6, 235.0], [30.7, 236.0], [30.8, 236.0], [30.9, 236.0], [31.0, 236.0], [31.1, 237.0], [31.2, 237.0], [31.3, 237.0], [31.4, 237.0], [31.5, 237.0], [31.6, 237.0], [31.7, 237.0], [31.8, 237.0], [31.9, 238.0], [32.0, 238.0], [32.1, 238.0], [32.2, 238.0], [32.3, 238.0], [32.4, 238.0], [32.5, 238.0], [32.6, 238.0], [32.7, 239.0], [32.8, 239.0], [32.9, 239.0], [33.0, 239.0], [33.1, 239.0], [33.2, 239.0], [33.3, 239.0], [33.4, 239.0], [33.5, 239.0], [33.6, 239.0], [33.7, 240.0], [33.8, 240.0], [33.9, 240.0], [34.0, 240.0], [34.1, 240.0], [34.2, 241.0], [34.3, 241.0], [34.4, 241.0], [34.5, 241.0], [34.6, 241.0], [34.7, 241.0], [34.8, 242.0], [34.9, 242.0], [35.0, 242.0], [35.1, 242.0], [35.2, 242.0], [35.3, 242.0], [35.4, 242.0], [35.5, 242.0], [35.6, 243.0], [35.7, 243.0], [35.8, 243.0], [35.9, 243.0], [36.0, 243.0], [36.1, 243.0], [36.2, 243.0], [36.3, 243.0], [36.4, 243.0], [36.5, 243.0], [36.6, 243.0], [36.7, 243.0], [36.8, 244.0], [36.9, 244.0], [37.0, 244.0], [37.1, 244.0], [37.2, 244.0], [37.3, 244.0], [37.4, 244.0], [37.5, 244.0], [37.6, 244.0], [37.7, 244.0], [37.8, 244.0], [37.9, 245.0], [38.0, 245.0], [38.1, 245.0], [38.2, 245.0], [38.3, 245.0], [38.4, 245.0], [38.5, 245.0], [38.6, 245.0], [38.7, 245.0], [38.8, 245.0], [38.9, 245.0], [39.0, 245.0], [39.1, 245.0], [39.2, 246.0], [39.3, 246.0], [39.4, 246.0], [39.5, 246.0], [39.6, 246.0], [39.7, 246.0], [39.8, 246.0], [39.9, 247.0], [40.0, 247.0], [40.1, 247.0], [40.2, 247.0], [40.3, 247.0], [40.4, 247.0], [40.5, 247.0], [40.6, 248.0], [40.7, 248.0], [40.8, 248.0], [40.9, 248.0], [41.0, 248.0], [41.1, 248.0], [41.2, 248.0], [41.3, 248.0], [41.4, 248.0], [41.5, 248.0], [41.6, 248.0], [41.7, 248.0], [41.8, 248.0], [41.9, 248.0], [42.0, 249.0], [42.1, 249.0], [42.2, 249.0], [42.3, 249.0], [42.4, 249.0], [42.5, 249.0], [42.6, 249.0], [42.7, 249.0], [42.8, 249.0], [42.9, 249.0], [43.0, 250.0], [43.1, 250.0], [43.2, 250.0], [43.3, 250.0], [43.4, 250.0], [43.5, 250.0], [43.6, 250.0], [43.7, 250.0], [43.8, 250.0], [43.9, 250.0], [44.0, 251.0], [44.1, 251.0], [44.2, 251.0], [44.3, 251.0], [44.4, 251.0], [44.5, 251.0], [44.6, 251.0], [44.7, 251.0], [44.8, 251.0], [44.9, 251.0], [45.0, 251.0], [45.1, 252.0], [45.2, 252.0], [45.3, 252.0], [45.4, 252.0], [45.5, 252.0], [45.6, 252.0], [45.7, 252.0], [45.8, 252.0], [45.9, 252.0], [46.0, 252.0], [46.1, 252.0], [46.2, 253.0], [46.3, 253.0], [46.4, 253.0], [46.5, 253.0], [46.6, 253.0], [46.7, 253.0], [46.8, 253.0], [46.9, 253.0], [47.0, 253.0], [47.1, 253.0], [47.2, 253.0], [47.3, 253.0], [47.4, 254.0], [47.5, 254.0], [47.6, 254.0], [47.7, 254.0], [47.8, 254.0], [47.9, 254.0], [48.0, 254.0], [48.1, 254.0], [48.2, 254.0], [48.3, 254.0], [48.4, 254.0], [48.5, 254.0], [48.6, 254.0], [48.7, 254.0], [48.8, 254.0], [48.9, 254.0], [49.0, 254.0], [49.1, 255.0], [49.2, 255.0], [49.3, 255.0], [49.4, 255.0], [49.5, 255.0], [49.6, 255.0], [49.7, 255.0], [49.8, 255.0], [49.9, 255.0], [50.0, 255.0], [50.1, 255.0], [50.2, 255.0], [50.3, 255.0], [50.4, 255.0], [50.5, 255.0], [50.6, 255.0], [50.7, 256.0], [50.8, 256.0], [50.9, 256.0], [51.0, 256.0], [51.1, 256.0], [51.2, 256.0], [51.3, 256.0], [51.4, 256.0], [51.5, 256.0], [51.6, 256.0], [51.7, 256.0], [51.8, 256.0], [51.9, 256.0], [52.0, 256.0], [52.1, 256.0], [52.2, 257.0], [52.3, 257.0], [52.4, 257.0], [52.5, 257.0], [52.6, 257.0], [52.7, 257.0], [52.8, 257.0], [52.9, 257.0], [53.0, 257.0], [53.1, 257.0], [53.2, 257.0], [53.3, 257.0], [53.4, 257.0], [53.5, 257.0], [53.6, 257.0], [53.7, 257.0], [53.8, 257.0], [53.9, 258.0], [54.0, 258.0], [54.1, 258.0], [54.2, 258.0], [54.3, 258.0], [54.4, 258.0], [54.5, 258.0], [54.6, 258.0], [54.7, 258.0], [54.8, 258.0], [54.9, 258.0], [55.0, 258.0], [55.1, 258.0], [55.2, 259.0], [55.3, 259.0], [55.4, 259.0], [55.5, 259.0], [55.6, 259.0], [55.7, 259.0], [55.8, 259.0], [55.9, 259.0], [56.0, 259.0], [56.1, 259.0], [56.2, 260.0], [56.3, 260.0], [56.4, 260.0], [56.5, 260.0], [56.6, 260.0], [56.7, 260.0], [56.8, 260.0], [56.9, 260.0], [57.0, 260.0], [57.1, 260.0], [57.2, 261.0], [57.3, 261.0], [57.4, 261.0], [57.5, 261.0], [57.6, 261.0], [57.7, 261.0], [57.8, 261.0], [57.9, 261.0], [58.0, 261.0], [58.1, 261.0], [58.2, 261.0], [58.3, 261.0], [58.4, 262.0], [58.5, 262.0], [58.6, 262.0], [58.7, 262.0], [58.8, 262.0], [58.9, 262.0], [59.0, 262.0], [59.1, 262.0], [59.2, 262.0], [59.3, 262.0], [59.4, 262.0], [59.5, 262.0], [59.6, 262.0], [59.7, 262.0], [59.8, 262.0], [59.9, 262.0], [60.0, 262.0], [60.1, 262.0], [60.2, 263.0], [60.3, 263.0], [60.4, 263.0], [60.5, 263.0], [60.6, 263.0], [60.7, 263.0], [60.8, 263.0], [60.9, 263.0], [61.0, 263.0], [61.1, 263.0], [61.2, 263.0], [61.3, 263.0], [61.4, 263.0], [61.5, 263.0], [61.6, 263.0], [61.7, 263.0], [61.8, 264.0], [61.9, 264.0], [62.0, 264.0], [62.1, 264.0], [62.2, 264.0], [62.3, 264.0], [62.4, 264.0], [62.5, 264.0], [62.6, 264.0], [62.7, 264.0], [62.8, 264.0], [62.9, 264.0], [63.0, 264.0], [63.1, 264.0], [63.2, 264.0], [63.3, 264.0], [63.4, 265.0], [63.5, 265.0], [63.6, 265.0], [63.7, 265.0], [63.8, 265.0], [63.9, 265.0], [64.0, 265.0], [64.1, 265.0], [64.2, 265.0], [64.3, 265.0], [64.4, 265.0], [64.5, 265.0], [64.6, 265.0], [64.7, 265.0], [64.8, 265.0], [64.9, 266.0], [65.0, 266.0], [65.1, 266.0], [65.2, 266.0], [65.3, 266.0], [65.4, 266.0], [65.5, 266.0], [65.6, 267.0], [65.7, 267.0], [65.8, 267.0], [65.9, 267.0], [66.0, 267.0], [66.1, 267.0], [66.2, 267.0], [66.3, 267.0], [66.4, 267.0], [66.5, 267.0], [66.6, 267.0], [66.7, 267.0], [66.8, 268.0], [66.9, 268.0], [67.0, 268.0], [67.1, 268.0], [67.2, 268.0], [67.3, 268.0], [67.4, 268.0], [67.5, 268.0], [67.6, 268.0], [67.7, 268.0], [67.8, 268.0], [67.9, 268.0], [68.0, 268.0], [68.1, 269.0], [68.2, 269.0], [68.3, 269.0], [68.4, 269.0], [68.5, 269.0], [68.6, 269.0], [68.7, 269.0], [68.8, 269.0], [68.9, 269.0], [69.0, 269.0], [69.1, 270.0], [69.2, 270.0], [69.3, 270.0], [69.4, 270.0], [69.5, 270.0], [69.6, 270.0], [69.7, 270.0], [69.8, 270.0], [69.9, 270.0], [70.0, 270.0], [70.1, 270.0], [70.2, 270.0], [70.3, 270.0], [70.4, 271.0], [70.5, 271.0], [70.6, 271.0], [70.7, 271.0], [70.8, 271.0], [70.9, 271.0], [71.0, 271.0], [71.1, 271.0], [71.2, 271.0], [71.3, 271.0], [71.4, 271.0], [71.5, 271.0], [71.6, 271.0], [71.7, 272.0], [71.8, 272.0], [71.9, 272.0], [72.0, 272.0], [72.1, 272.0], [72.2, 272.0], [72.3, 272.0], [72.4, 272.0], [72.5, 272.0], [72.6, 272.0], [72.7, 272.0], [72.8, 272.0], [72.9, 272.0], [73.0, 272.0], [73.1, 272.0], [73.2, 273.0], [73.3, 273.0], [73.4, 273.0], [73.5, 273.0], [73.6, 273.0], [73.7, 273.0], [73.8, 273.0], [73.9, 273.0], [74.0, 273.0], [74.1, 273.0], [74.2, 274.0], [74.3, 274.0], [74.4, 274.0], [74.5, 274.0], [74.6, 274.0], [74.7, 274.0], [74.8, 274.0], [74.9, 275.0], [75.0, 275.0], [75.1, 275.0], [75.2, 275.0], [75.3, 275.0], [75.4, 275.0], [75.5, 275.0], [75.6, 275.0], [75.7, 275.0], [75.8, 275.0], [75.9, 275.0], [76.0, 275.0], [76.1, 275.0], [76.2, 275.0], [76.3, 275.0], [76.4, 275.0], [76.5, 275.0], [76.6, 275.0], [76.7, 276.0], [76.8, 276.0], [76.9, 276.0], [77.0, 276.0], [77.1, 276.0], [77.2, 277.0], [77.3, 277.0], [77.4, 277.0], [77.5, 277.0], [77.6, 278.0], [77.7, 278.0], [77.8, 278.0], [77.9, 278.0], [78.0, 278.0], [78.1, 278.0], [78.2, 278.0], [78.3, 278.0], [78.4, 278.0], [78.5, 278.0], [78.6, 278.0], [78.7, 278.0], [78.8, 278.0], [78.9, 279.0], [79.0, 279.0], [79.1, 279.0], [79.2, 279.0], [79.3, 279.0], [79.4, 280.0], [79.5, 280.0], [79.6, 280.0], [79.7, 280.0], [79.8, 280.0], [79.9, 280.0], [80.0, 280.0], [80.1, 280.0], [80.2, 280.0], [80.3, 280.0], [80.4, 281.0], [80.5, 281.0], [80.6, 281.0], [80.7, 281.0], [80.8, 281.0], [80.9, 281.0], [81.0, 281.0], [81.1, 281.0], [81.2, 282.0], [81.3, 282.0], [81.4, 282.0], [81.5, 282.0], [81.6, 283.0], [81.7, 283.0], [81.8, 283.0], [81.9, 283.0], [82.0, 283.0], [82.1, 283.0], [82.2, 283.0], [82.3, 283.0], [82.4, 284.0], [82.5, 284.0], [82.6, 284.0], [82.7, 284.0], [82.8, 284.0], [82.9, 284.0], [83.0, 284.0], [83.1, 284.0], [83.2, 284.0], [83.3, 285.0], [83.4, 285.0], [83.5, 285.0], [83.6, 285.0], [83.7, 285.0], [83.8, 285.0], [83.9, 286.0], [84.0, 286.0], [84.1, 286.0], [84.2, 286.0], [84.3, 286.0], [84.4, 287.0], [84.5, 287.0], [84.6, 287.0], [84.7, 288.0], [84.8, 288.0], [84.9, 288.0], [85.0, 288.0], [85.1, 288.0], [85.2, 288.0], [85.3, 288.0], [85.4, 289.0], [85.5, 289.0], [85.6, 289.0], [85.7, 289.0], [85.8, 289.0], [85.9, 290.0], [86.0, 290.0], [86.1, 290.0], [86.2, 290.0], [86.3, 291.0], [86.4, 291.0], [86.5, 291.0], [86.6, 291.0], [86.7, 291.0], [86.8, 291.0], [86.9, 291.0], [87.0, 291.0], [87.1, 292.0], [87.2, 292.0], [87.3, 292.0], [87.4, 292.0], [87.5, 293.0], [87.6, 293.0], [87.7, 293.0], [87.8, 293.0], [87.9, 294.0], [88.0, 294.0], [88.1, 294.0], [88.2, 294.0], [88.3, 295.0], [88.4, 295.0], [88.5, 295.0], [88.6, 295.0], [88.7, 296.0], [88.8, 296.0], [88.9, 296.0], [89.0, 296.0], [89.1, 296.0], [89.2, 296.0], [89.3, 297.0], [89.4, 299.0], [89.5, 300.0], [89.6, 300.0], [89.7, 301.0], [89.8, 301.0], [89.9, 302.0], [90.0, 302.0], [90.1, 302.0], [90.2, 302.0], [90.3, 303.0], [90.4, 303.0], [90.5, 304.0], [90.6, 304.0], [90.7, 304.0], [90.8, 305.0], [90.9, 305.0], [91.0, 305.0], [91.1, 306.0], [91.2, 306.0], [91.3, 306.0], [91.4, 307.0], [91.5, 307.0], [91.6, 307.0], [91.7, 308.0], [91.8, 308.0], [91.9, 308.0], [92.0, 308.0], [92.1, 309.0], [92.2, 309.0], [92.3, 309.0], [92.4, 309.0], [92.5, 309.0], [92.6, 310.0], [92.7, 312.0], [92.8, 312.0], [92.9, 313.0], [93.0, 314.0], [93.1, 315.0], [93.2, 316.0], [93.3, 316.0], [93.4, 316.0], [93.5, 316.0], [93.6, 317.0], [93.7, 317.0], [93.8, 318.0], [93.9, 318.0], [94.0, 319.0], [94.1, 322.0], [94.2, 322.0], [94.3, 323.0], [94.4, 324.0], [94.5, 324.0], [94.6, 325.0], [94.7, 330.0], [94.8, 335.0], [94.9, 336.0], [95.0, 336.0], [95.1, 350.0], [95.2, 354.0], [95.3, 365.0], [95.4, 376.0], [95.5, 381.0], [95.6, 383.0], [95.7, 388.0], [95.8, 404.0], [95.9, 409.0], [96.0, 410.0], [96.1, 419.0], [96.2, 419.0], [96.3, 420.0], [96.4, 422.0], [96.5, 425.0], [96.6, 426.0], [96.7, 428.0], [96.8, 433.0], [96.9, 435.0], [97.0, 436.0], [97.1, 439.0], [97.2, 450.0], [97.3, 451.0], [97.4, 455.0], [97.5, 461.0], [97.6, 462.0], [97.7, 470.0], [97.8, 470.0], [97.9, 477.0], [98.0, 483.0], [98.1, 485.0], [98.2, 511.0], [98.3, 1008.0], [98.4, 1013.0], [98.5, 1013.0], [98.6, 1014.0], [98.7, 1016.0], [98.8, 1016.0], [98.9, 1017.0], [99.0, 1018.0], [99.1, 1019.0], [99.2, 1020.0], [99.3, 1023.0], [99.4, 1026.0], [99.5, 1032.0], [99.6, 1141.0], [99.7, 1251.0], [99.8, 1256.0], [99.9, 1265.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 726.0, "series": [{"data": [[0.0, 15.0], [1200.0, 1.0], [1400.0, 1.0], [100.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 4.0], [2400.0, 6.0], [2500.0, 22.0], [2600.0, 32.0], [2700.0, 39.0], [2800.0, 59.0], [2900.0, 69.0], [3000.0, 57.0], [3100.0, 86.0], [200.0, 3.0], [3200.0, 72.0], [3300.0, 96.0], [3400.0, 88.0], [3500.0, 75.0], [3600.0, 76.0], [3700.0, 64.0], [3800.0, 40.0], [3900.0, 31.0], [4000.0, 17.0], [4100.0, 7.0], [4200.0, 5.0], [4300.0, 6.0], [4400.0, 5.0], [4600.0, 1.0], [4500.0, 3.0], [300.0, 4.0], [4700.0, 2.0], [4800.0, 2.0], [5100.0, 1.0], [5300.0, 2.0], [5700.0, 2.0], [5800.0, 1.0], [6000.0, 1.0], [6600.0, 2.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 24.0], [2100.0, 35.0], [2200.0, 61.0], [2300.0, 13.0], [600.0, 42.0], [700.0, 35.0], [200.0, 35.0], [800.0, 36.0], [900.0, 53.0], [1000.0, 36.0], [1100.0, 75.0], [300.0, 50.0], [1200.0, 41.0], [1300.0, 46.0], [1400.0, 42.0], [1500.0, 44.0], [100.0, 32.0], [400.0, 18.0], [1600.0, 51.0], [1700.0, 55.0], [1800.0, 29.0], [1900.0, 45.0], [500.0, 30.0], [2000.0, 72.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 48.0], [1100.0, 1.0], [300.0, 64.0], [1200.0, 3.0], [100.0, 120.0], [200.0, 726.0], [400.0, 24.0], [500.0, 1.0], [1000.0, 13.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 6600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 456.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1380.0, "series": [{"data": [[0.0, 1164.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 456.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1380.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 134.33700000000002, "minX": 1.66892076E12, "maxY": 480.94799999999935, "series": [{"data": [[1.66892076E12, 480.94799999999935]], "isOverall": false, "label": "client-to-gateway-non-caching (GET)", "isController": false}, {"data": [[1.66892076E12, 134.33700000000002]], "isOverall": false, "label": "client-to-application (GET)", "isController": false}, {"data": [[1.66892076E12, 391.3890000000002]], "isOverall": false, "label": "client-to-gateway-caching (GET)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66892076E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.0, "maxY": 6649.0, "series": [{"data": [[2.0, 6649.0], [3.0, 6077.0], [4.0, 5883.0], [5.0, 5737.0], [6.0, 5367.0], [7.0, 5717.0], [8.0, 5199.0], [9.0, 4877.0], [10.0, 4745.0], [11.0, 5346.0], [12.0, 4894.0], [13.0, 4463.0], [14.0, 4572.0], [15.0, 4707.0], [16.0, 4542.0], [17.0, 4470.0], [18.0, 4326.0], [19.0, 4518.0], [20.0, 4608.0], [21.0, 4437.0], [22.0, 4047.0], [23.0, 4086.0], [24.0, 4288.0], [25.0, 4467.0], [26.0, 4316.0], [28.0, 4057.0], [29.0, 3737.0], [30.0, 3716.0], [31.0, 3810.0], [33.0, 40.0], [32.0, 4213.0], [35.0, 1393.6666666666667], [34.0, 4110.5], [37.0, 4358.0], [36.0, 4151.0], [38.0, 4460.0], [41.0, 3699.0], [40.0, 4103.5], [43.0, 3826.0], [42.0, 3910.0], [45.0, 4015.0], [44.0, 3698.0], [47.0, 4074.5], [49.0, 4293.0], [48.0, 3659.0], [51.0, 3649.0], [50.0, 4222.0], [53.0, 3807.0], [55.0, 4292.0], [54.0, 3695.0], [57.0, 3711.0], [56.0, 3604.0], [59.0, 3935.0], [58.0, 3706.0], [61.0, 3544.0], [60.0, 3748.0], [63.0, 3671.0], [62.0, 3522.0], [67.0, 3621.0], [65.0, 3597.0], [64.0, 3598.0], [70.0, 3866.0], [69.0, 3457.0], [68.0, 3476.0], [75.0, 3621.0], [74.0, 3727.0], [73.0, 4169.0], [72.0, 3467.0], [78.0, 1924.0], [77.0, 1871.0], [79.0, 3808.0], [76.0, 3653.0], [83.0, 3568.0], [82.0, 3728.0], [81.0, 4133.0], [80.0, 3758.0], [87.0, 1216.3333333333333], [86.0, 3714.0], [85.0, 3431.5], [89.0, 1764.0], [88.0, 1231.0], [91.0, 92.0], [90.0, 1429.0], [93.0, 95.0], [95.0, 3985.0], [92.0, 3502.5], [99.0, 3676.0], [98.0, 3677.0], [96.0, 3612.0], [103.0, 3894.0], [102.0, 3959.5], [100.0, 3674.0], [104.0, 2072.0], [107.0, 3758.0], [106.0, 3453.0], [105.0, 3834.0], [111.0, 3497.5], [109.0, 3407.0], [108.0, 3607.0], [115.0, 3809.0], [114.0, 3525.0], [113.0, 4049.0], [112.0, 3798.0], [119.0, 3499.0], [117.0, 3667.0], [123.0, 3446.0], [122.0, 3660.0], [120.0, 3941.5], [125.0, 3796.0], [124.0, 3791.0], [135.0, 3598.6666666666665], [132.0, 3508.5], [130.0, 3514.0], [129.0, 3591.5], [128.0, 3502.5], [142.0, 3385.0], [138.0, 3441.0], [137.0, 3621.5], [150.0, 3731.5], [148.0, 3435.0], [147.0, 3634.714285714286], [146.0, 3618.0], [158.0, 3773.5], [156.0, 3763.0], [155.0, 3500.0], [154.0, 3716.0], [153.0, 3562.0], [152.0, 3743.0], [167.0, 3808.3333333333335], [164.0, 3568.0], [163.0, 3745.0], [162.0, 3376.0], [161.0, 3451.0], [160.0, 4057.0], [175.0, 3542.0], [173.0, 3908.3333333333335], [171.0, 3900.5], [169.0, 3666.0], [182.0, 3568.0], [181.0, 3623.0], [180.0, 3754.0], [179.0, 3745.0], [178.0, 3632.3333333333335], [191.0, 3445.0], [190.0, 3482.0], [188.0, 3360.0], [187.0, 3502.0], [184.0, 3498.0], [199.0, 3721.0], [198.0, 3878.0], [197.0, 3896.0], [196.0, 3719.0], [195.0, 3851.0], [193.0, 3684.0], [206.0, 3573.5], [204.0, 3808.5], [202.0, 3938.0], [201.0, 3667.0], [200.0, 3431.0], [208.0, 1884.0], [213.0, 235.0], [214.0, 3686.0], [212.0, 3285.0], [211.0, 3724.0], [210.0, 3663.0], [209.0, 3458.0], [222.0, 3712.0], [221.0, 3763.0], [220.0, 3674.0], [219.0, 3316.0], [218.0, 3412.0], [217.0, 3736.5], [231.0, 3342.0], [230.0, 3572.0], [229.0, 3711.0], [228.0, 3721.0], [227.0, 3547.0], [226.0, 3785.0], [224.0, 3753.0], [239.0, 3813.0], [238.0, 3598.5], [236.0, 3444.0], [234.0, 3529.0], [233.0, 3412.0], [232.0, 3723.0], [247.0, 3754.0], [246.0, 3496.0], [245.0, 3685.5], [243.0, 3672.0], [242.0, 3702.0], [241.0, 3333.0], [240.0, 3932.0], [253.0, 302.0], [255.0, 3639.0], [254.0, 3368.0], [252.0, 3760.0], [251.0, 3276.0], [250.0, 3611.0], [248.0, 3515.0], [269.0, 3466.0], [257.0, 2168.0], [260.0, 1856.0], [262.0, 3545.0], [256.0, 3268.0], [271.0, 3708.0], [268.0, 3358.0], [259.0, 3942.0], [258.0, 3952.0], [267.0, 3413.0], [266.0, 3346.0], [265.0, 3977.0], [264.0, 3503.0], [286.0, 3489.5], [284.0, 2002.0], [275.0, 3728.0], [274.0, 3569.0], [272.0, 3694.0], [287.0, 3673.0], [283.0, 3622.0], [282.0, 3496.0], [281.0, 3738.0], [280.0, 3688.0], [279.0, 3476.0], [277.0, 3853.0], [276.0, 3258.0], [302.0, 3852.5], [303.0, 3532.0], [300.0, 3834.0], [291.0, 3314.5], [289.0, 3415.5], [298.0, 3675.0], [297.0, 3379.0], [296.0, 3324.0], [295.0, 3727.0], [293.0, 3666.0], [292.0, 3458.0], [307.0, 3596.5], [319.0, 3589.0], [317.0, 3520.5], [315.0, 3316.0], [313.0, 3443.0], [312.0, 3566.5], [310.0, 3262.0], [309.0, 3398.0], [308.0, 3503.0], [306.0, 3460.0], [305.0, 3772.0], [332.0, 3564.5], [334.0, 3567.0], [335.0, 3295.0], [333.0, 3228.0], [330.0, 3978.0], [329.0, 3646.0], [327.0, 3978.0], [320.0, 3406.0], [323.0, 3403.0], [321.0, 3230.0], [326.0, 3519.0], [325.0, 3308.0], [324.0, 3968.0], [351.0, 3484.0], [349.0, 3416.5], [347.0, 3610.0], [346.0, 3723.5], [344.0, 3317.0], [343.0, 3837.0], [342.0, 3368.5], [340.0, 3923.0], [338.0, 3857.0], [337.0, 3556.0], [366.0, 3397.0], [367.0, 3594.0], [365.0, 3484.5], [355.0, 3883.0], [354.0, 3201.0], [352.0, 3409.5], [363.0, 3722.0], [361.0, 3644.0], [360.0, 3551.0], [359.0, 3556.0], [358.0, 3361.0], [356.0, 3518.0], [381.0, 3828.0], [382.0, 3335.0], [380.0, 3828.0], [371.0, 3358.5], [369.0, 3542.0], [379.0, 3168.0], [378.0, 3593.0], [377.0, 3501.0], [376.0, 3189.0], [375.0, 3344.0], [374.0, 3472.0], [373.0, 3816.0], [372.0, 3964.0], [397.0, 3449.0], [399.0, 3541.5], [396.0, 3412.0], [387.0, 3203.0], [386.0, 3335.0], [384.0, 3766.0], [395.0, 3347.0], [394.0, 3872.0], [393.0, 3525.5], [391.0, 3945.0], [390.0, 3923.0], [389.0, 3598.0], [388.0, 3279.0], [413.0, 3234.0], [415.0, 3589.0], [412.0, 3843.0], [411.0, 3553.0], [409.0, 3227.25], [408.0, 3264.0], [404.0, 3260.0], [403.0, 3731.0], [402.0, 3464.0], [400.0, 3405.0], [428.0, 3384.0], [430.0, 3503.0], [431.0, 3665.0], [429.0, 3560.0], [427.0, 3324.0], [425.0, 3431.5], [423.0, 3226.5], [417.0, 3585.5], [419.0, 3135.0], [418.0, 3423.0], [421.0, 3573.0], [420.0, 3371.0], [434.0, 3216.0], [446.0, 3261.5], [444.0, 3537.0], [443.0, 3228.0], [442.0, 3358.5], [440.0, 3450.0], [439.0, 3668.0], [438.0, 3376.5], [436.0, 3450.5], [433.0, 3418.0], [432.0, 3920.0], [460.0, 3276.5], [462.0, 3201.0], [463.0, 3102.0], [461.0, 3228.0], [458.0, 3098.0], [457.0, 3497.0], [455.0, 3352.0], [449.0, 3517.0], [448.0, 3419.0], [451.0, 3107.0], [450.0, 3107.0], [454.0, 3230.5], [452.0, 3601.0], [478.0, 3866.0], [479.0, 3351.0], [477.0, 3526.0], [476.0, 3650.0], [475.0, 3105.0], [474.0, 3443.5], [472.0, 3655.0], [471.0, 3193.0], [465.0, 3493.0], [464.0, 3162.0], [467.0, 3526.0], [466.0, 3737.0], [470.0, 3093.0], [469.0, 3265.5], [495.0, 3316.0], [493.0, 3704.5], [483.0, 3172.0], [482.0, 3326.0], [481.0, 3196.0], [480.0, 3403.0], [491.0, 3098.0], [490.0, 3238.0], [489.0, 3720.0], [488.0, 3545.0], [487.0, 3433.0], [485.0, 3642.0], [484.0, 3116.0], [509.0, 3580.0], [510.0, 3660.0], [508.0, 3086.0], [499.0, 3195.0], [498.0, 3587.0], [496.0, 3777.0], [507.0, 3293.0], [506.0, 3124.0], [505.0, 3317.0], [504.0, 3222.0], [503.0, 3695.0], [501.0, 3201.0], [541.0, 3195.0], [531.0, 3411.0], [543.0, 3463.5], [528.0, 3090.0], [530.0, 3081.0], [529.0, 3423.0], [540.0, 3218.0], [538.0, 3072.0], [537.0, 3045.5], [519.0, 3268.5], [517.0, 3494.0], [516.0, 3367.0], [515.0, 3654.0], [514.0, 3122.0], [512.0, 3294.0], [527.0, 3156.0], [526.0, 3491.0], [525.0, 3260.0], [524.0, 3308.0], [523.0, 3301.0], [522.0, 3176.0], [521.0, 3232.0], [520.0, 3120.0], [535.0, 3215.0], [533.0, 3275.0], [532.0, 3000.0], [573.0, 3638.0], [564.0, 3021.0], [575.0, 3421.0], [561.0, 3134.0], [563.0, 3080.0], [562.0, 3478.0], [572.0, 2936.0], [571.0, 3279.0], [569.0, 3242.5], [550.0, 3248.0], [549.0, 3250.0], [548.0, 3186.0], [547.0, 3470.0], [546.0, 3201.0], [545.0, 3393.5], [559.0, 3350.0], [558.0, 3479.0], [557.0, 3179.0], [556.0, 3354.5], [554.0, 2977.0], [553.0, 3111.0], [552.0, 3558.0], [567.0, 3422.0], [566.0, 2925.0], [565.0, 3049.0], [600.0, 2900.0], [606.0, 3160.5], [607.0, 2943.0], [594.0, 3163.0], [593.0, 3533.0], [604.0, 3262.5], [602.0, 3285.0], [601.0, 3016.0], [591.0, 3310.0], [576.0, 3389.0], [579.0, 3412.5], [577.0, 3254.0], [581.0, 3199.0], [580.0, 3332.0], [583.0, 3050.0], [582.0, 3471.0], [590.0, 3201.0], [589.0, 3463.5], [587.0, 3391.3333333333335], [584.0, 3392.0], [599.0, 3065.5], [597.0, 3173.0], [596.0, 3591.0], [595.0, 3673.0], [634.0, 3491.5], [638.0, 2872.0], [639.0, 3596.0], [625.0, 3203.0], [624.0, 3306.0], [627.0, 3112.0], [626.0, 3268.0], [629.0, 3357.0], [628.0, 3035.0], [637.0, 3297.0], [636.0, 3497.0], [635.0, 2930.0], [632.0, 3173.0], [615.0, 2998.0], [614.0, 3066.0], [613.0, 3647.0], [612.0, 2948.0], [611.0, 2953.0], [610.0, 2965.0], [609.0, 3492.0], [623.0, 2859.0], [622.0, 2958.0], [621.0, 3304.0], [620.0, 3503.0], [619.0, 2874.5], [617.0, 2861.0], [616.0, 3313.0], [631.0, 3296.0], [630.0, 3130.0], [666.0, 2900.0], [670.0, 3006.0], [671.0, 3242.0], [658.0, 3591.0], [657.0, 3017.0], [661.0, 2958.0], [660.0, 3324.5], [669.0, 3380.0], [668.0, 3114.0], [667.0, 3487.0], [665.0, 2833.5], [647.0, 2911.0], [646.0, 3556.0], [645.0, 2930.0], [644.0, 3267.0], [643.0, 3109.5], [641.0, 3564.0], [640.0, 3086.0], [655.0, 3235.0], [654.0, 3217.0], [653.0, 2892.0], [652.0, 2899.0], [651.0, 3138.0], [650.0, 2923.0], [649.0, 3165.0], [648.0, 3538.0], [663.0, 3052.0], [662.0, 3096.0], [698.0, 3459.0], [702.0, 3182.0], [703.0, 2951.0], [689.0, 3002.0], [691.0, 3117.0], [690.0, 3208.0], [693.0, 3385.0], [692.0, 2914.0], [701.0, 3326.0], [700.0, 3030.0], [699.0, 3501.0], [697.0, 3347.0], [679.0, 3218.0], [678.0, 2910.5], [676.0, 3116.0], [675.0, 2926.0], [674.0, 2964.0], [673.0, 2893.0], [672.0, 2800.0], [686.0, 3102.0], [685.0, 2775.0], [684.0, 3509.0], [683.0, 3052.0], [682.0, 2963.0], [681.0, 3071.0], [680.0, 3068.0], [695.0, 3385.0], [694.0, 2801.0], [729.0, 3087.0], [733.0, 2927.0], [735.0, 2993.5], [721.0, 2741.0], [720.0, 2985.0], [723.0, 3046.0], [722.0, 3166.0], [725.0, 3074.0], [724.0, 3394.0], [732.0, 2767.0], [731.0, 3072.0], [730.0, 3191.0], [728.0, 3376.0], [711.0, 3534.0], [710.0, 2799.0], [709.0, 3185.0], [708.0, 3340.0], [707.0, 2827.0], [706.0, 3401.0], [705.0, 3119.0], [719.0, 2851.0], [718.0, 3393.0], [717.0, 3042.0], [716.0, 2761.0], [715.0, 3063.0], [714.0, 3128.0], [727.0, 2868.0], [726.0, 2911.0], [760.0, 2889.0], [765.0, 3179.5], [766.0, 3326.0], [752.0, 3006.0], [755.0, 2867.0], [754.0, 2868.0], [763.0, 2799.0], [762.0, 2949.0], [761.0, 2797.0], [751.0, 2959.0], [737.0, 3024.0], [736.0, 3103.0], [740.0, 3300.5], [738.0, 3492.0], [742.0, 2939.0], [741.0, 3314.0], [750.0, 3063.0], [749.0, 2960.0], [748.0, 3176.0], [747.0, 2925.0], [746.0, 3298.0], [745.0, 3142.0], [744.0, 2985.5], [759.0, 2962.0], [758.0, 3165.0], [757.0, 3131.0], [756.0, 3360.0], [793.0, 2949.0], [798.0, 3124.0], [799.0, 2980.0], [785.0, 3012.0], [784.0, 2667.0], [787.0, 2706.0], [786.0, 2863.0], [789.0, 2716.0], [788.0, 3031.0], [797.0, 3079.5], [795.0, 3368.0], [794.0, 2619.0], [792.0, 3107.0], [775.0, 3442.0], [774.0, 3201.0], [773.0, 3014.0], [772.0, 3404.0], [771.0, 3283.0], [770.0, 2823.0], [769.0, 2934.0], [768.0, 3292.0], [783.0, 3010.0], [782.0, 2996.0], [781.0, 2947.0], [780.0, 2803.0], [779.0, 2986.0], [778.0, 3102.0], [777.0, 3031.0], [791.0, 2717.0], [790.0, 2645.0], [830.0, 2962.0], [820.0, 2626.0], [831.0, 3236.0], [816.0, 2584.5], [819.0, 2715.5], [817.0, 2972.0], [829.0, 3209.6666666666665], [826.0, 2805.0], [824.0, 2582.0], [807.0, 2657.0], [806.0, 2818.0], [805.0, 3148.0], [804.0, 3275.0], [803.0, 2910.5], [801.0, 2719.0], [800.0, 3269.0], [814.0, 2563.0], [813.0, 2855.0], [812.0, 3190.0], [811.0, 3000.0], [810.0, 3130.0], [809.0, 2869.0], [808.0, 2597.0], [823.0, 2867.0], [822.0, 2641.0], [821.0, 2667.0], [858.0, 2954.0], [862.0, 2999.0], [863.0, 2513.0], [849.0, 2822.0], [848.0, 3040.0], [851.0, 2585.0], [850.0, 2675.0], [853.0, 2914.0], [852.0, 2574.0], [861.0, 2759.0], [860.0, 2694.0], [859.0, 2932.0], [856.0, 2944.0], [839.0, 2693.0], [837.0, 2939.0], [836.0, 2899.0], [835.0, 2993.0], [834.0, 2964.0], [833.0, 2926.0], [832.0, 2808.0], [847.0, 2730.0], [846.0, 3256.0], [845.0, 2800.0], [844.0, 2602.0], [843.0, 2836.0], [842.0, 2661.0], [841.0, 3039.0], [840.0, 3064.0], [855.0, 2613.0], [854.0, 3078.0], [890.0, 2954.5], [883.0, 2681.0], [893.0, 2991.0], [895.0, 2666.0], [882.0, 2644.5], [880.0, 2936.0], [892.0, 2782.0], [888.0, 2669.0], [871.0, 2571.5], [869.0, 2734.0], [868.0, 2586.0], [867.0, 2742.0], [866.0, 2588.0], [865.0, 2528.0], [864.0, 2780.0], [879.0, 3127.0], [878.0, 2828.0], [877.0, 3161.0], [876.0, 2874.0], [875.0, 2483.0], [874.0, 2476.0], [873.0, 2932.0], [872.0, 2691.0], [887.0, 3127.0], [886.0, 2576.5], [884.0, 3075.0], [921.0, 3059.0], [926.0, 2839.5], [927.0, 2871.0], [912.0, 2753.0], [914.0, 2679.0], [913.0, 2757.0], [916.0, 2461.0], [915.0, 2732.0], [924.0, 2631.0], [923.0, 2949.0], [922.0, 2631.0], [920.0, 2871.0], [903.0, 2613.0], [902.0, 2363.0], [901.0, 2776.0], [900.0, 2727.0], [899.0, 2725.5], [897.0, 3071.0], [896.0, 3002.0], [911.0, 2752.0], [910.0, 2758.0], [909.0, 2464.0], [907.0, 3104.0], [906.0, 2879.0], [905.0, 3124.0], [904.0, 2581.0], [919.0, 2869.5], [917.0, 2885.0], [953.0, 2844.0], [958.0, 2799.5], [959.0, 2838.0], [944.0, 2906.0], [946.0, 2783.0], [945.0, 2839.0], [949.0, 2832.0], [948.0, 2646.5], [956.0, 2776.0], [955.0, 2836.0], [954.0, 2858.0], [952.0, 2831.0], [935.0, 2945.0], [934.0, 2533.0], [933.0, 3009.0], [932.0, 2357.0], [931.0, 2840.0], [930.0, 3015.0], [929.0, 2625.0], [928.0, 2872.0], [943.0, 2845.0], [942.0, 2751.0], [941.0, 2941.0], [940.0, 2767.0], [939.0, 2790.0], [938.0, 2983.0], [937.0, 2967.0], [936.0, 2837.0], [951.0, 2809.0], [950.0, 2917.0], [974.0, 2245.0], [977.0, 1274.0], [976.0, 1488.0], [975.0, 2164.0], [961.0, 2719.0], [960.0, 2825.0], [963.0, 2653.0], [962.0, 2682.0], [965.0, 2628.0], [964.0, 2634.0], [967.0, 2656.0], [966.0, 2656.0], [973.0, 2366.0], [972.0, 2407.0], [971.0, 2439.0], [970.0, 2500.0], [969.0, 2526.0], [968.0, 2555.0], [1.0, 6625.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[480.94699999999915, 3275.676999999998]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 2335.0], [4.0, 2323.5], [5.0, 2313.0], [6.0, 2315.0], [8.0, 2313.5], [9.0, 2315.0], [10.0, 2304.0], [11.0, 2311.0], [12.0, 2307.0], [13.0, 2292.0], [14.0, 2307.0], [16.0, 2297.0], [17.0, 2298.0], [18.0, 2297.5], [19.0, 1155.5], [20.0, 1155.0], [21.0, 1151.0], [22.0, 2288.0], [23.0, 2288.0], [24.0, 1162.5], [25.0, 1158.5], [26.0, 1160.0], [27.0, 1168.5], [28.0, 606.25], [29.0, 1165.5], [30.0, 2284.0], [31.0, 2275.0], [33.0, 2273.0], [32.0, 2279.0], [35.0, 2264.0], [34.0, 2284.0], [37.0, 2269.0], [36.0, 2271.0], [39.0, 2268.0], [38.0, 2261.0], [41.0, 2262.0], [40.0, 2264.0], [42.0, 2260.0], [45.0, 2259.0], [44.0, 2258.0], [47.0, 2260.0], [46.0, 2263.0], [49.0, 2251.0], [48.0, 2263.0], [51.0, 2254.0], [50.0, 2259.0], [53.0, 2258.0], [52.0, 2254.0], [55.0, 2251.0], [54.0, 2249.0], [57.0, 2244.0], [56.0, 2253.0], [59.0, 2237.0], [58.0, 2243.0], [61.0, 2229.0], [60.0, 2236.0], [63.0, 2228.0], [62.0, 2232.0], [67.0, 2217.0], [66.0, 2218.0], [65.0, 2226.0], [64.0, 2229.0], [71.0, 2215.0], [70.0, 2216.0], [69.0, 2215.0], [68.0, 2217.0], [72.0, 774.6666666666666], [75.0, 2191.0], [74.0, 2201.0], [73.0, 2202.0], [78.0, 2180.0], [77.0, 2188.0], [76.0, 2190.0], [83.0, 2160.0], [82.0, 2160.0], [81.0, 2172.0], [80.0, 2178.0], [87.0, 2143.0], [86.0, 2153.0], [85.0, 2153.0], [84.0, 2160.0], [91.0, 2143.0], [90.0, 2142.0], [89.0, 2143.0], [88.0, 2143.0], [95.0, 2131.0], [94.0, 2137.0], [93.0, 2137.0], [92.0, 2143.0], [99.0, 2120.0], [98.0, 2121.0], [97.0, 2130.0], [96.0, 2130.0], [103.0, 2106.0], [102.0, 2106.0], [101.0, 2113.0], [100.0, 2114.0], [106.0, 1087.5], [107.0, 2101.0], [105.0, 2102.0], [104.0, 2105.0], [111.0, 741.3333333333334], [110.0, 1083.0], [109.0, 2100.0], [108.0, 2101.0], [114.0, 2074.0], [113.0, 2074.0], [112.0, 2074.0], [119.0, 2073.0], [118.0, 2072.0], [117.0, 2066.0], [116.0, 2068.5], [123.0, 2070.0], [122.0, 2070.0], [121.0, 2069.0], [120.0, 2066.0], [125.0, 742.0], [127.0, 2063.0], [126.0, 2071.0], [124.0, 2072.0], [128.0, 484.2], [135.0, 2060.0], [134.0, 2060.0], [133.0, 2060.0], [132.0, 2061.0], [131.0, 2062.0], [130.0, 2058.0], [129.0, 2063.0], [143.0, 1074.5], [141.0, 2060.0], [139.0, 2061.0], [138.0, 2058.0], [137.0, 2058.0], [136.0, 2058.0], [150.0, 2046.0], [149.0, 2053.0], [148.0, 2049.0], [147.0, 2049.0], [146.0, 2054.0], [145.0, 2057.0], [144.0, 2055.0], [158.0, 587.25], [159.0, 2033.0], [157.0, 2029.0], [156.0, 2029.0], [155.0, 2039.0], [154.0, 2039.0], [153.0, 2049.0], [152.0, 2049.0], [167.0, 1388.3333333333333], [165.0, 2027.0], [164.0, 2028.0], [163.0, 2028.0], [161.0, 2030.0], [160.0, 2029.0], [168.0, 749.6666666666666], [175.0, 2015.0], [174.0, 2016.0], [173.0, 2017.0], [172.0, 2016.0], [171.0, 2023.0], [170.0, 2022.0], [169.0, 2025.0], [178.0, 1061.5], [177.0, 747.0], [176.0, 750.3333333333334], [183.0, 1988.0], [182.0, 1995.0], [181.0, 2000.0], [180.0, 2001.5], [185.0, 1367.0], [184.0, 120.0], [191.0, 1973.0], [190.0, 1977.0], [188.0, 1984.0], [187.0, 1989.0], [186.0, 1987.0], [194.0, 867.2], [199.0, 1970.0], [198.0, 1970.0], [197.0, 1975.0], [196.0, 1970.0], [195.0, 1973.0], [192.0, 1977.5], [207.0, 1045.5], [206.0, 1953.0], [205.0, 1953.0], [204.0, 1960.0], [202.0, 1967.0], [201.0, 1967.0], [200.0, 1966.0], [209.0, 1038.0], [208.0, 1041.5], [212.0, 1037.75], [215.0, 1038.0], [213.0, 1926.0], [210.0, 1929.0], [218.0, 161.0], [217.0, 1041.5], [216.0, 1041.5], [222.0, 1910.5], [220.0, 1910.5], [219.0, 1911.0], [231.0, 1881.0], [230.0, 1889.0], [229.0, 1888.0], [228.0, 1896.0], [227.0, 1895.0], [226.0, 1903.5], [224.0, 1910.0], [235.0, 739.6666666666666], [233.0, 741.0], [239.0, 1855.0], [237.0, 1860.0], [236.0, 1864.0], [234.0, 1872.0], [232.0, 1872.0], [247.0, 1820.0], [246.0, 1827.0], [245.0, 1839.0], [244.0, 1827.0], [243.0, 1833.0], [242.0, 1848.0], [241.0, 1847.0], [240.0, 1845.0], [255.0, 1803.0], [254.0, 1802.0], [253.0, 1812.0], [252.0, 1812.0], [251.0, 1812.0], [250.0, 1818.5], [248.0, 1818.0], [270.0, 1767.0], [256.0, 994.0], [271.0, 1771.0], [268.0, 1768.0], [259.0, 1783.0], [258.0, 1790.0], [257.0, 1789.0], [267.0, 1770.0], [266.0, 1774.0], [265.0, 1776.0], [264.0, 1777.0], [263.0, 1779.0], [262.0, 1778.0], [261.0, 1777.0], [260.0, 1783.0], [286.0, 1724.0], [280.0, 972.5], [281.0, 968.0], [287.0, 969.5], [285.0, 1729.0], [284.0, 1727.0], [283.0, 1723.0], [282.0, 1730.0], [279.0, 1738.0], [273.0, 1763.5], [275.0, 1750.0], [274.0, 1756.0], [278.0, 1747.0], [277.0, 1752.0], [276.0, 1742.0], [303.0, 1708.0], [290.0, 962.0], [300.0, 1699.0], [289.0, 966.0], [288.0, 964.5], [292.0, 1216.3333333333333], [294.0, 1718.0], [293.0, 1716.0], [295.0, 1709.0], [299.0, 715.3333333333333], [298.0, 964.5], [297.0, 965.5], [296.0, 1710.0], [302.0, 1708.0], [301.0, 1697.0], [317.0, 1695.0], [306.0, 1212.3333333333333], [307.0, 965.0], [311.0, 229.0], [304.0, 1699.0], [310.0, 1704.0], [309.0, 1700.0], [308.0, 1701.0], [313.0, 966.5], [312.0, 1700.5], [319.0, 1693.0], [318.0, 1693.0], [316.0, 1696.0], [315.0, 1700.0], [314.0, 1704.0], [333.0, 739.0], [322.0, 245.0], [323.0, 967.5], [332.0, 1665.0], [321.0, 1208.6666666666667], [329.0, 968.5], [328.0, 972.0], [327.0, 974.0], [326.0, 976.5], [325.0, 1688.5], [331.0, 968.5], [330.0, 1672.0], [334.0, 273.0], [335.0, 1660.0], [349.0, 649.25], [344.0, 645.0], [338.0, 969.5], [343.0, 987.0], [337.0, 1660.0], [336.0, 1658.0], [342.0, 1651.0], [340.0, 1657.0], [345.0, 753.0], [347.0, 524.6666666666667], [346.0, 639.25], [350.0, 581.2], [348.0, 752.6666666666667], [339.0, 1660.0], [351.0, 642.0], [366.0, 972.5], [352.0, 969.5], [358.0, 1606.0], [357.0, 1614.0], [356.0, 1613.0], [353.0, 771.0], [367.0, 1588.0], [365.0, 1594.0], [364.0, 1595.0], [355.0, 1621.0], [354.0, 1628.0], [363.0, 1594.0], [362.0, 1597.0], [361.0, 1600.0], [360.0, 1607.5], [382.0, 772.3333333333333], [373.0, 974.0], [371.0, 767.6666666666667], [370.0, 1587.0], [369.0, 1586.0], [368.0, 1591.0], [375.0, 1576.0], [374.0, 1584.0], [372.0, 971.5], [383.0, 669.75], [377.0, 1570.0], [376.0, 1575.0], [381.0, 681.25], [380.0, 584.5], [378.0, 688.0], [379.0, 983.0], [386.0, 617.2], [387.0, 773.0], [396.0, 1530.6666666666667], [388.0, 965.0], [384.0, 389.0], [385.0, 1549.0], [391.0, 967.5], [390.0, 975.0], [389.0, 1543.0], [398.0, 781.0], [397.0, 969.5], [399.0, 968.5], [393.0, 1532.0], [392.0, 1533.0], [414.0, 1479.0], [415.0, 1475.0], [413.0, 1482.0], [412.0, 1479.0], [411.0, 1487.0], [410.0, 1494.0], [408.0, 1494.0], [407.0, 1495.0], [400.0, 1507.0], [403.0, 1507.5], [401.0, 1509.0], [406.0, 1497.0], [405.0, 1502.0], [404.0, 1507.0], [430.0, 1447.0], [421.0, 947.5], [420.0, 1468.0], [423.0, 1464.0], [416.0, 1465.0], [419.0, 1467.0], [417.0, 1468.0], [422.0, 1465.0], [431.0, 1443.0], [429.0, 1452.0], [428.0, 1454.0], [427.0, 1457.0], [426.0, 1462.0], [425.0, 1463.0], [424.0, 1463.0], [445.0, 1402.0], [435.0, 933.0], [434.0, 1102.6666666666667], [432.0, 1442.0], [447.0, 1402.5], [444.0, 1408.0], [443.0, 1410.0], [442.0, 1409.5], [440.0, 1413.0], [439.0, 1422.5], [438.0, 1421.0], [436.0, 1428.0], [461.0, 1375.0], [462.0, 1374.0], [460.0, 1375.0], [451.0, 1383.0], [450.0, 1384.0], [449.0, 1398.5], [459.0, 1381.0], [458.0, 1377.0], [456.0, 1372.0], [455.0, 1375.0], [454.0, 1377.0], [453.0, 1379.0], [452.0, 1379.0], [478.0, 1312.0], [467.0, 899.0], [466.0, 1359.0], [465.0, 1360.0], [464.0, 1365.5], [479.0, 1319.0], [477.0, 1324.0], [476.0, 1327.0], [475.0, 1326.0], [474.0, 1334.0], [473.0, 1335.5], [471.0, 1343.0], [470.0, 1349.0], [469.0, 1352.0], [468.0, 1352.0], [494.0, 1300.0], [488.0, 877.0], [489.0, 881.0], [495.0, 1299.0], [493.0, 1295.0], [492.0, 1304.0], [491.0, 1309.0], [490.0, 1309.0], [487.0, 1308.0], [481.0, 1316.0], [480.0, 1317.0], [483.0, 1315.0], [482.0, 1306.0], [485.0, 1308.0], [484.0, 1315.0], [511.0, 1265.0], [508.0, 866.0], [499.0, 1285.0], [498.0, 1282.0], [497.0, 1287.0], [496.0, 1290.0], [509.0, 866.0], [510.0, 1271.0], [507.0, 1274.0], [506.0, 1273.0], [505.0, 1275.0], [504.0, 1274.0], [503.0, 1282.0], [502.0, 1277.0], [501.0, 1284.0], [500.0, 1283.0], [541.0, 830.0], [540.0, 831.0], [543.0, 1178.0], [542.0, 1188.0], [539.0, 1183.0], [538.0, 1186.0], [537.0, 1189.0], [536.0, 1188.0], [519.0, 1248.0], [518.0, 1248.0], [517.0, 1253.0], [516.0, 1253.0], [515.0, 1257.0], [514.0, 1261.0], [513.0, 1258.0], [512.0, 1251.0], [527.0, 1225.0], [526.0, 1225.0], [525.0, 1221.0], [524.0, 1222.0], [523.0, 1227.0], [522.0, 1234.5], [520.0, 1240.0], [535.0, 1187.0], [534.0, 1202.0], [533.0, 1201.0], [532.0, 1209.0], [531.0, 1212.0], [530.0, 1217.0], [529.0, 1216.0], [528.0, 1212.0], [549.0, 820.5], [572.0, 680.25], [559.0, 829.0], [544.0, 1174.0], [546.0, 1162.0], [545.0, 1171.0], [548.0, 1158.0], [547.0, 1166.0], [558.0, 1156.0], [557.0, 1166.0], [556.0, 1156.0], [555.0, 1156.0], [554.0, 1151.0], [553.0, 1136.0], [552.0, 1159.0], [561.0, 723.0], [562.0, 729.3333333333334], [563.0, 1161.0], [565.0, 1155.0], [564.0, 1157.0], [567.0, 1157.0], [566.0, 1159.0], [571.0, 842.0], [575.0, 1160.0], [560.0, 1153.0], [574.0, 1157.5], [570.0, 1162.0], [569.0, 1162.0], [568.0, 1154.0], [551.0, 1147.0], [550.0, 1167.0], [604.0, 1102.0], [580.0, 945.0], [583.0, 1137.0], [582.0, 1150.0], [601.0, 1105.0], [600.0, 1113.5], [579.0, 530.0], [578.0, 841.5], [577.0, 1159.0], [576.0, 1159.0], [584.0, 833.0], [587.0, 1131.0], [585.0, 1138.0], [589.0, 1131.0], [588.0, 1130.0], [590.0, 1136.0], [595.0, 836.0], [594.0, 1130.0], [593.0, 1131.0], [592.0, 1132.0], [596.0, 1123.0], [598.0, 1114.0], [597.0, 1114.0], [607.0, 1104.0], [606.0, 1113.5], [603.0, 1108.0], [602.0, 1108.0], [615.0, 819.0], [617.0, 817.5], [616.0, 815.5], [614.0, 906.3333333333334], [612.0, 1081.0], [611.0, 1088.0], [610.0, 1097.0], [609.0, 1104.5], [623.0, 1048.5], [621.0, 1048.0], [620.0, 1064.0], [618.0, 1064.0], [625.0, 809.5], [624.0, 808.5], [630.0, 802.5], [629.0, 803.5], [628.0, 1032.0], [627.0, 1040.0], [626.0, 1046.0], [639.0, 1019.0], [638.0, 1025.0], [637.0, 1018.0], [636.0, 1019.0], [635.0, 1020.0], [634.0, 1021.0], [633.0, 1026.0], [632.0, 1026.0], [666.0, 773.0], [646.0, 792.5], [649.0, 722.0], [648.0, 998.5], [650.0, 995.0], [652.0, 989.0], [651.0, 993.0], [655.0, 987.0], [641.0, 1005.0], [640.0, 1024.0], [643.0, 1005.0], [642.0, 1012.0], [645.0, 1000.0], [644.0, 999.0], [654.0, 992.5], [660.0, 782.0], [662.0, 953.0], [661.0, 960.0], [659.0, 847.3333333333334], [665.0, 717.0], [664.0, 953.0], [669.0, 776.5], [668.0, 950.0], [667.0, 950.0], [671.0, 773.0], [657.0, 976.0], [656.0, 978.0], [670.0, 940.0], [679.0, 930.0], [701.0, 892.0], [672.0, 772.5], [685.0, 622.0], [684.0, 923.0], [683.0, 923.0], [682.0, 924.0], [681.0, 930.0], [680.0, 930.0], [688.0, 724.6666666666666], [690.0, 916.0], [689.0, 920.5], [692.0, 915.0], [691.0, 914.0], [695.0, 907.0], [693.0, 907.0], [687.0, 821.0], [703.0, 887.0], [702.0, 892.0], [700.0, 891.0], [699.0, 899.5], [697.0, 906.3333333333334], [678.0, 930.0], [677.0, 935.0], [675.0, 937.0], [673.0, 935.0], [728.0, 813.0], [733.0, 801.0], [713.0, 749.5], [712.0, 750.0], [719.0, 743.5], [704.0, 884.0], [706.0, 883.0], [705.0, 886.0], [709.0, 882.0], [708.0, 883.5], [711.0, 880.0], [710.0, 881.0], [718.0, 854.0], [717.0, 856.0], [715.0, 869.0], [729.0, 806.0], [722.0, 738.5], [721.0, 847.0], [720.0, 851.0], [724.0, 835.0], [723.0, 846.0], [727.0, 823.5], [725.0, 823.0], [735.0, 716.5], [734.0, 802.0], [732.0, 803.0], [730.0, 804.0], [738.0, 642.0], [736.0, 685.6666666666666], [737.0, 786.0], [739.0, 732.3333333333334], [741.0, 771.0], [740.0, 771.0], [743.0, 727.0], [744.0, 708.0], [746.0, 751.0], [745.0, 763.0], [747.0, 703.5], [752.0, 712.0], [767.0, 704.5], [765.0, 706.0], [764.0, 702.0], [763.0, 707.0], [762.0, 703.0], [761.0, 712.0], [760.0, 719.0], [751.0, 653.0], [750.0, 753.0], [749.0, 759.0], [748.0, 754.0], [754.0, 716.0], [755.0, 658.0], [756.0, 713.0], [759.0, 718.0], [758.0, 726.0], [757.0, 728.0], [770.0, 687.0], [772.0, 683.0], [773.0, 683.5], [771.0, 685.25], [777.0, 691.0], [776.0, 689.0], [775.0, 690.0], [774.0, 691.0], [769.0, 701.0], [768.0, 698.0], [1.0, 2334.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[391.3890000000002, 1269.1209999999978]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[3.0, 1019.0], [4.0, 1016.0], [5.0, 1016.0], [6.0, 1026.0], [8.0, 1018.0], [9.0, 1014.0], [11.0, 1010.5], [12.0, 1017.0], [13.0, 1032.0], [14.0, 1141.0], [15.0, 1256.0], [17.0, 309.5], [20.0, 311.0], [22.0, 323.0], [23.0, 304.0], [25.0, 308.5], [26.0, 316.0], [27.0, 324.0], [29.0, 316.0], [32.0, 315.25], [34.0, 313.5], [37.0, 306.0], [36.0, 316.5], [39.0, 307.0], [38.0, 308.0], [41.0, 302.0], [40.0, 294.0], [42.0, 288.0], [45.0, 462.0], [44.0, 295.0], [47.0, 296.0], [49.0, 293.0], [48.0, 292.0], [51.0, 294.0], [50.0, 297.0], [53.0, 292.0], [52.0, 290.0], [55.0, 289.0], [57.0, 387.0], [59.0, 285.0], [58.0, 283.0], [60.0, 310.0], [63.0, 291.0], [62.0, 292.0], [67.0, 298.0], [65.0, 309.0], [64.0, 291.0], [70.0, 285.0], [69.0, 295.5], [75.0, 268.0], [74.0, 275.0], [73.0, 281.6666666666667], [79.0, 269.0], [78.0, 275.5], [76.0, 271.0], [83.0, 302.0], [82.0, 284.0], [81.0, 291.0], [80.0, 276.0], [87.0, 278.1666666666667], [85.0, 274.6666666666667], [86.0, 274.0], [84.0, 280.3333333333333], [91.0, 255.30769230769232], [90.0, 276.22222222222223], [89.0, 250.0], [88.0, 282.0], [94.0, 249.57142857142858], [92.0, 280.4], [95.0, 277.0], [93.0, 286.0], [98.0, 202.75], [97.0, 207.0], [96.0, 257.5], [99.0, 268.0], [103.0, 230.33333333333334], [102.0, 214.5], [101.0, 249.16666666666669], [100.0, 272.5], [106.0, 211.66666666666666], [105.0, 234.5], [104.0, 252.0], [107.0, 261.0], [110.0, 163.25], [109.0, 225.0], [111.0, 317.3333333333333], [108.0, 263.0], [115.0, 223.0], [114.0, 256.5], [112.0, 255.0], [119.0, 200.0], [118.0, 185.0], [116.0, 249.0], [122.0, 238.33333333333334], [123.0, 236.66666666666663], [120.0, 197.2], [121.0, 248.25], [127.0, 214.9090909090909], [125.0, 142.0], [124.0, 188.42857142857144], [126.0, 251.14285714285714], [135.0, 216.86666666666667], [134.0, 228.91666666666666], [128.0, 232.75], [130.0, 192.8], [129.0, 279.5], [133.0, 209.6], [131.0, 209.75], [132.0, 217.66666666666666], [140.0, 215.83333333333334], [137.0, 195.4], [136.0, 221.33333333333334], [138.0, 224.26666666666668], [141.0, 222.13333333333333], [139.0, 230.0], [142.0, 247.88888888888889], [143.0, 282.20000000000005], [150.0, 256.16], [149.0, 236.35999999999999], [147.0, 218.64], [146.0, 233.55172413793105], [145.0, 238.625], [144.0, 234.5], [151.0, 253.40740740740742], [148.0, 236.93548387096772], [156.0, 233.14705882352948], [159.0, 256.25], [158.0, 229.06060606060612], [155.0, 241.99999999999997], [154.0, 259.29629629629625], [153.0, 266.09999999999997], [152.0, 248.34615384615384], [157.0, 297.2857142857143], [161.0, 221.2941176470588], [160.0, 232.36363636363637], [167.0, 295.3333333333333], [166.0, 233.0], [163.0, 231.27272727272728], [162.0, 210.4705882352941], [165.0, 260.90909090909093], [164.0, 274.14285714285717], [168.0, 292.0769230769231], [169.0, 252.0], [170.0, 296.87499999999994], [171.0, 274.75], [172.0, 255.25], [174.0, 251.5], [180.0, 240.4], [183.0, 249.0], [182.0, 255.0], [181.0, 248.0], [179.0, 248.0], [177.0, 253.0], [191.0, 212.4], [188.0, 255.0], [189.0, 258.0], [187.0, 254.0], [184.0, 1265.0], [192.0, 239.0], [194.0, 256.5], [193.0, 248.66666666666666]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[134.3360000000001, 258.7959999999999]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 977.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7416.666666666667, "minX": 1.66892076E12, "maxY": 5674289.616666666, "series": [{"data": [[1.66892076E12, 5674289.616666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66892076E12, 7416.666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66892076E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 258.7959999999999, "minX": 1.66892076E12, "maxY": 3275.676999999998, "series": [{"data": [[1.66892076E12, 3275.676999999998]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66892076E12, 1269.1209999999978]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66892076E12, 258.7959999999999]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66892076E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 229.37499999999994, "minX": 1.66892076E12, "maxY": 1253.171000000001, "series": [{"data": [[1.66892076E12, 910.8290000000002]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66892076E12, 1253.171000000001]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66892076E12, 229.37499999999994]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66892076E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 6.075000000000002, "minX": 1.66892076E12, "maxY": 310.6449999999997, "series": [{"data": [[1.66892076E12, 310.6449999999997]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66892076E12, 6.075000000000002]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66892076E12, 30.435]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66892076E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 19.0, "minX": 1.66892076E12, "maxY": 6649.0, "series": [{"data": [[1.66892076E12, 6649.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66892076E12, 3547.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66892076E12, 4291.959999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66892076E12, 3760.95]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66892076E12, 19.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66892076E12, 1237.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66892076E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 95.0, "minX": 2.0, "maxY": 5737.0, "series": [{"data": [[521.0, 241.0], [2.0, 1381.0], [153.0, 264.0], [661.0, 3485.0], [231.0, 2072.0], [279.0, 2889.0], [297.0, 892.0], [5.0, 5737.0], [321.0, 1533.0], [21.0, 4470.0], [440.0, 268.5], [7.0, 2407.0], [31.0, 95.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 661.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 55.0, "minX": 2.0, "maxY": 2065.0, "series": [{"data": [[521.0, 215.0], [2.0, 55.0], [153.0, 243.0], [661.0, 948.0], [231.0, 2065.0], [279.0, 594.0], [297.0, 881.0], [5.0, 181.0], [321.0, 1516.0], [21.0, 666.0], [440.0, 234.5], [7.0, 70.0], [31.0, 60.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 661.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66892076E12, "maxY": 50.0, "series": [{"data": [[1.66892076E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66892076E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66892076E12, "maxY": 50.0, "series": [{"data": [[1.66892076E12, 50.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66892076E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.66892076E12, "maxY": 16.666666666666668, "series": [{"data": [[1.66892076E12, 16.666666666666668]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66892076E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66892076E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66892076E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66892076E12, "maxY": 50.0, "series": [{"data": [[1.66892076E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66892076E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

