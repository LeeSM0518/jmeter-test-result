/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 9160.0, "series": [{"data": [[0.0, 56.0], [0.1, 57.0], [0.2, 59.0], [0.3, 59.0], [0.4, 65.0], [0.5, 67.0], [0.6, 79.0], [0.7, 79.0], [0.8, 82.0], [0.9, 131.0], [1.0, 657.0], [1.1, 732.0], [1.2, 732.0], [1.3, 756.0], [1.4, 759.0], [1.5, 789.0], [1.6, 825.0], [1.7, 827.0], [1.8, 840.0], [1.9, 934.0], [2.0, 958.0], [2.1, 1024.0], [2.2, 1246.0], [2.3, 1299.0], [2.4, 1401.0], [2.5, 1411.0], [2.6, 1432.0], [2.7, 1570.0], [2.8, 1600.0], [2.9, 1740.0], [3.0, 1948.0], [3.1, 1970.0], [3.2, 2136.0], [3.3, 2162.0], [3.4, 2248.0], [3.5, 2302.0], [3.6, 2460.0], [3.7, 2472.0], [3.8, 2496.0], [3.9, 2519.0], [4.0, 2617.0], [4.1, 2621.0], [4.2, 2641.0], [4.3, 2644.0], [4.4, 2677.0], [4.5, 2730.0], [4.6, 2735.0], [4.7, 2750.0], [4.8, 2752.0], [4.9, 2787.0], [5.0, 2791.0], [5.1, 2823.0], [5.2, 2849.0], [5.3, 2853.0], [5.4, 2891.0], [5.5, 2894.0], [5.6, 2915.0], [5.7, 2917.0], [5.8, 2963.0], [5.9, 2972.0], [6.0, 2992.0], [6.1, 3015.0], [6.2, 3023.0], [6.3, 3026.0], [6.4, 3091.0], [6.5, 3103.0], [6.6, 3110.0], [6.7, 3143.0], [6.8, 3144.0], [6.9, 3160.0], [7.0, 3180.0], [7.1, 3190.0], [7.2, 3204.0], [7.3, 3213.0], [7.4, 3221.0], [7.5, 3237.0], [7.6, 3243.0], [7.7, 3269.0], [7.8, 3274.0], [7.9, 3281.0], [8.0, 3294.0], [8.1, 3298.0], [8.2, 3304.0], [8.3, 3319.0], [8.4, 3320.0], [8.5, 3322.0], [8.6, 3326.0], [8.7, 3334.0], [8.8, 3338.0], [8.9, 3339.0], [9.0, 3341.0], [9.1, 3341.0], [9.2, 3345.0], [9.3, 3348.0], [9.4, 3361.0], [9.5, 3365.0], [9.6, 3367.0], [9.7, 3371.0], [9.8, 3376.0], [9.9, 3376.0], [10.0, 3379.0], [10.1, 3381.0], [10.2, 3383.0], [10.3, 3384.0], [10.4, 3401.0], [10.5, 3412.0], [10.6, 3412.0], [10.7, 3416.0], [10.8, 3420.0], [10.9, 3422.0], [11.0, 3429.0], [11.1, 3429.0], [11.2, 3436.0], [11.3, 3437.0], [11.4, 3441.0], [11.5, 3443.0], [11.6, 3449.0], [11.7, 3450.0], [11.8, 3454.0], [11.9, 3454.0], [12.0, 3455.0], [12.1, 3455.0], [12.2, 3457.0], [12.3, 3460.0], [12.4, 3463.0], [12.5, 3466.0], [12.6, 3466.0], [12.7, 3469.0], [12.8, 3470.0], [12.9, 3473.0], [13.0, 3474.0], [13.1, 3474.0], [13.2, 3474.0], [13.3, 3482.0], [13.4, 3484.0], [13.5, 3491.0], [13.6, 3495.0], [13.7, 3499.0], [13.8, 3499.0], [13.9, 3500.0], [14.0, 3504.0], [14.1, 3510.0], [14.2, 3511.0], [14.3, 3523.0], [14.4, 3525.0], [14.5, 3526.0], [14.6, 3530.0], [14.7, 3532.0], [14.8, 3532.0], [14.9, 3540.0], [15.0, 3542.0], [15.1, 3542.0], [15.2, 3552.0], [15.3, 3556.0], [15.4, 3557.0], [15.5, 3558.0], [15.6, 3558.0], [15.7, 3561.0], [15.8, 3566.0], [15.9, 3567.0], [16.0, 3568.0], [16.1, 3568.0], [16.2, 3570.0], [16.3, 3570.0], [16.4, 3570.0], [16.5, 3571.0], [16.6, 3571.0], [16.7, 3573.0], [16.8, 3574.0], [16.9, 3576.0], [17.0, 3576.0], [17.1, 3578.0], [17.2, 3579.0], [17.3, 3582.0], [17.4, 3582.0], [17.5, 3593.0], [17.6, 3593.0], [17.7, 3594.0], [17.8, 3595.0], [17.9, 3595.0], [18.0, 3599.0], [18.1, 3600.0], [18.2, 3601.0], [18.3, 3608.0], [18.4, 3608.0], [18.5, 3610.0], [18.6, 3613.0], [18.7, 3617.0], [18.8, 3619.0], [18.9, 3619.0], [19.0, 3619.0], [19.1, 3625.0], [19.2, 3629.0], [19.3, 3632.0], [19.4, 3637.0], [19.5, 3640.0], [19.6, 3641.0], [19.7, 3643.0], [19.8, 3644.0], [19.9, 3648.0], [20.0, 3648.0], [20.1, 3649.0], [20.2, 3650.0], [20.3, 3653.0], [20.4, 3654.0], [20.5, 3657.0], [20.6, 3661.0], [20.7, 3667.0], [20.8, 3667.0], [20.9, 3670.0], [21.0, 3671.0], [21.1, 3673.0], [21.2, 3675.0], [21.3, 3680.0], [21.4, 3680.0], [21.5, 3681.0], [21.6, 3685.0], [21.7, 3685.0], [21.8, 3692.0], [21.9, 3693.0], [22.0, 3693.0], [22.1, 3697.0], [22.2, 3699.0], [22.3, 3700.0], [22.4, 3703.0], [22.5, 3704.0], [22.6, 3705.0], [22.7, 3706.0], [22.8, 3707.0], [22.9, 3708.0], [23.0, 3714.0], [23.1, 3716.0], [23.2, 3742.0], [23.3, 3748.0], [23.4, 3750.0], [23.5, 3752.0], [23.6, 3752.0], [23.7, 3753.0], [23.8, 3759.0], [23.9, 3760.0], [24.0, 3760.0], [24.1, 3763.0], [24.2, 3763.0], [24.3, 3765.0], [24.4, 3767.0], [24.5, 3780.0], [24.6, 3785.0], [24.7, 3786.0], [24.8, 3789.0], [24.9, 3789.0], [25.0, 3794.0], [25.1, 3794.0], [25.2, 3795.0], [25.3, 3796.0], [25.4, 3797.0], [25.5, 3800.0], [25.6, 3803.0], [25.7, 3804.0], [25.8, 3805.0], [25.9, 3806.0], [26.0, 3808.0], [26.1, 3809.0], [26.2, 3810.0], [26.3, 3811.0], [26.4, 3811.0], [26.5, 3812.0], [26.6, 3814.0], [26.7, 3825.0], [26.8, 3829.0], [26.9, 3829.0], [27.0, 3832.0], [27.1, 3833.0], [27.2, 3834.0], [27.3, 3835.0], [27.4, 3836.0], [27.5, 3836.0], [27.6, 3836.0], [27.7, 3840.0], [27.8, 3842.0], [27.9, 3842.0], [28.0, 3844.0], [28.1, 3845.0], [28.2, 3846.0], [28.3, 3848.0], [28.4, 3849.0], [28.5, 3849.0], [28.6, 3851.0], [28.7, 3854.0], [28.8, 3854.0], [28.9, 3854.0], [29.0, 3855.0], [29.1, 3857.0], [29.2, 3857.0], [29.3, 3860.0], [29.4, 3864.0], [29.5, 3864.0], [29.6, 3865.0], [29.7, 3866.0], [29.8, 3869.0], [29.9, 3874.0], [30.0, 3877.0], [30.1, 3882.0], [30.2, 3883.0], [30.3, 3884.0], [30.4, 3890.0], [30.5, 3892.0], [30.6, 3893.0], [30.7, 3894.0], [30.8, 3895.0], [30.9, 3895.0], [31.0, 3898.0], [31.1, 3900.0], [31.2, 3901.0], [31.3, 3902.0], [31.4, 3907.0], [31.5, 3907.0], [31.6, 3907.0], [31.7, 3908.0], [31.8, 3908.0], [31.9, 3912.0], [32.0, 3914.0], [32.1, 3914.0], [32.2, 3922.0], [32.3, 3923.0], [32.4, 3924.0], [32.5, 3924.0], [32.6, 3925.0], [32.7, 3925.0], [32.8, 3927.0], [32.9, 3928.0], [33.0, 3928.0], [33.1, 3932.0], [33.2, 3933.0], [33.3, 3934.0], [33.4, 3935.0], [33.5, 3936.0], [33.6, 3936.0], [33.7, 3941.0], [33.8, 3943.0], [33.9, 3944.0], [34.0, 3949.0], [34.1, 3950.0], [34.2, 3951.0], [34.3, 3954.0], [34.4, 3955.0], [34.5, 3956.0], [34.6, 3960.0], [34.7, 3961.0], [34.8, 3962.0], [34.9, 3963.0], [35.0, 3963.0], [35.1, 3964.0], [35.2, 3965.0], [35.3, 3965.0], [35.4, 3967.0], [35.5, 3968.0], [35.6, 3968.0], [35.7, 3968.0], [35.8, 3969.0], [35.9, 3973.0], [36.0, 3975.0], [36.1, 3977.0], [36.2, 3977.0], [36.3, 3978.0], [36.4, 3978.0], [36.5, 3978.0], [36.6, 3979.0], [36.7, 3982.0], [36.8, 3983.0], [36.9, 3983.0], [37.0, 3986.0], [37.1, 3986.0], [37.2, 3986.0], [37.3, 3988.0], [37.4, 3989.0], [37.5, 3991.0], [37.6, 3993.0], [37.7, 3993.0], [37.8, 3995.0], [37.9, 3996.0], [38.0, 3999.0], [38.1, 4000.0], [38.2, 4000.0], [38.3, 4003.0], [38.4, 4004.0], [38.5, 4005.0], [38.6, 4006.0], [38.7, 4006.0], [38.8, 4006.0], [38.9, 4007.0], [39.0, 4008.0], [39.1, 4008.0], [39.2, 4009.0], [39.3, 4010.0], [39.4, 4010.0], [39.5, 4012.0], [39.6, 4013.0], [39.7, 4013.0], [39.8, 4014.0], [39.9, 4016.0], [40.0, 4020.0], [40.1, 4021.0], [40.2, 4024.0], [40.3, 4025.0], [40.4, 4027.0], [40.5, 4027.0], [40.6, 4027.0], [40.7, 4028.0], [40.8, 4028.0], [40.9, 4029.0], [41.0, 4030.0], [41.1, 4032.0], [41.2, 4032.0], [41.3, 4033.0], [41.4, 4036.0], [41.5, 4037.0], [41.6, 4044.0], [41.7, 4045.0], [41.8, 4045.0], [41.9, 4047.0], [42.0, 4047.0], [42.1, 4048.0], [42.2, 4051.0], [42.3, 4051.0], [42.4, 4051.0], [42.5, 4052.0], [42.6, 4052.0], [42.7, 4054.0], [42.8, 4056.0], [42.9, 4056.0], [43.0, 4057.0], [43.1, 4057.0], [43.2, 4058.0], [43.3, 4059.0], [43.4, 4060.0], [43.5, 4060.0], [43.6, 4060.0], [43.7, 4063.0], [43.8, 4064.0], [43.9, 4065.0], [44.0, 4067.0], [44.1, 4067.0], [44.2, 4067.0], [44.3, 4067.0], [44.4, 4068.0], [44.5, 4069.0], [44.6, 4070.0], [44.7, 4071.0], [44.8, 4071.0], [44.9, 4072.0], [45.0, 4072.0], [45.1, 4073.0], [45.2, 4073.0], [45.3, 4074.0], [45.4, 4074.0], [45.5, 4074.0], [45.6, 4076.0], [45.7, 4077.0], [45.8, 4079.0], [45.9, 4079.0], [46.0, 4079.0], [46.1, 4081.0], [46.2, 4082.0], [46.3, 4084.0], [46.4, 4085.0], [46.5, 4087.0], [46.6, 4087.0], [46.7, 4088.0], [46.8, 4088.0], [46.9, 4089.0], [47.0, 4089.0], [47.1, 4089.0], [47.2, 4090.0], [47.3, 4090.0], [47.4, 4092.0], [47.5, 4092.0], [47.6, 4095.0], [47.7, 4097.0], [47.8, 4098.0], [47.9, 4098.0], [48.0, 4099.0], [48.1, 4099.0], [48.2, 4100.0], [48.3, 4100.0], [48.4, 4101.0], [48.5, 4101.0], [48.6, 4102.0], [48.7, 4102.0], [48.8, 4102.0], [48.9, 4103.0], [49.0, 4103.0], [49.1, 4103.0], [49.2, 4104.0], [49.3, 4105.0], [49.4, 4105.0], [49.5, 4107.0], [49.6, 4110.0], [49.7, 4110.0], [49.8, 4111.0], [49.9, 4112.0], [50.0, 4112.0], [50.1, 4113.0], [50.2, 4114.0], [50.3, 4117.0], [50.4, 4117.0], [50.5, 4118.0], [50.6, 4118.0], [50.7, 4119.0], [50.8, 4121.0], [50.9, 4123.0], [51.0, 4125.0], [51.1, 4125.0], [51.2, 4126.0], [51.3, 4126.0], [51.4, 4127.0], [51.5, 4127.0], [51.6, 4128.0], [51.7, 4130.0], [51.8, 4131.0], [51.9, 4131.0], [52.0, 4132.0], [52.1, 4133.0], [52.2, 4134.0], [52.3, 4135.0], [52.4, 4137.0], [52.5, 4137.0], [52.6, 4137.0], [52.7, 4141.0], [52.8, 4142.0], [52.9, 4144.0], [53.0, 4145.0], [53.1, 4145.0], [53.2, 4146.0], [53.3, 4147.0], [53.4, 4150.0], [53.5, 4152.0], [53.6, 4152.0], [53.7, 4152.0], [53.8, 4154.0], [53.9, 4156.0], [54.0, 4157.0], [54.1, 4159.0], [54.2, 4159.0], [54.3, 4160.0], [54.4, 4163.0], [54.5, 4164.0], [54.6, 4164.0], [54.7, 4164.0], [54.8, 4164.0], [54.9, 4165.0], [55.0, 4166.0], [55.1, 4166.0], [55.2, 4168.0], [55.3, 4171.0], [55.4, 4171.0], [55.5, 4174.0], [55.6, 4177.0], [55.7, 4178.0], [55.8, 4179.0], [55.9, 4179.0], [56.0, 4179.0], [56.1, 4181.0], [56.2, 4182.0], [56.3, 4183.0], [56.4, 4183.0], [56.5, 4184.0], [56.6, 4185.0], [56.7, 4189.0], [56.8, 4191.0], [56.9, 4191.0], [57.0, 4193.0], [57.1, 4194.0], [57.2, 4194.0], [57.3, 4195.0], [57.4, 4197.0], [57.5, 4197.0], [57.6, 4198.0], [57.7, 4199.0], [57.8, 4200.0], [57.9, 4200.0], [58.0, 4202.0], [58.1, 4202.0], [58.2, 4203.0], [58.3, 4207.0], [58.4, 4210.0], [58.5, 4211.0], [58.6, 4214.0], [58.7, 4214.0], [58.8, 4217.0], [58.9, 4219.0], [59.0, 4221.0], [59.1, 4221.0], [59.2, 4221.0], [59.3, 4222.0], [59.4, 4222.0], [59.5, 4223.0], [59.6, 4224.0], [59.7, 4225.0], [59.8, 4228.0], [59.9, 4231.0], [60.0, 4232.0], [60.1, 4232.0], [60.2, 4232.0], [60.3, 4232.0], [60.4, 4240.0], [60.5, 4241.0], [60.6, 4241.0], [60.7, 4241.0], [60.8, 4242.0], [60.9, 4242.0], [61.0, 4243.0], [61.1, 4246.0], [61.2, 4246.0], [61.3, 4247.0], [61.4, 4247.0], [61.5, 4248.0], [61.6, 4248.0], [61.7, 4248.0], [61.8, 4249.0], [61.9, 4249.0], [62.0, 4249.0], [62.1, 4250.0], [62.2, 4254.0], [62.3, 4254.0], [62.4, 4256.0], [62.5, 4257.0], [62.6, 4257.0], [62.7, 4260.0], [62.8, 4261.0], [62.9, 4261.0], [63.0, 4262.0], [63.1, 4263.0], [63.2, 4266.0], [63.3, 4266.0], [63.4, 4271.0], [63.5, 4273.0], [63.6, 4277.0], [63.7, 4277.0], [63.8, 4278.0], [63.9, 4278.0], [64.0, 4278.0], [64.1, 4279.0], [64.2, 4280.0], [64.3, 4280.0], [64.4, 4282.0], [64.5, 4283.0], [64.6, 4285.0], [64.7, 4287.0], [64.8, 4288.0], [64.9, 4288.0], [65.0, 4288.0], [65.1, 4289.0], [65.2, 4290.0], [65.3, 4291.0], [65.4, 4291.0], [65.5, 4293.0], [65.6, 4295.0], [65.7, 4295.0], [65.8, 4301.0], [65.9, 4304.0], [66.0, 4305.0], [66.1, 4306.0], [66.2, 4306.0], [66.3, 4306.0], [66.4, 4308.0], [66.5, 4308.0], [66.6, 4309.0], [66.7, 4309.0], [66.8, 4310.0], [66.9, 4312.0], [67.0, 4314.0], [67.1, 4314.0], [67.2, 4316.0], [67.3, 4317.0], [67.4, 4321.0], [67.5, 4321.0], [67.6, 4321.0], [67.7, 4321.0], [67.8, 4322.0], [67.9, 4322.0], [68.0, 4323.0], [68.1, 4326.0], [68.2, 4327.0], [68.3, 4328.0], [68.4, 4329.0], [68.5, 4335.0], [68.6, 4336.0], [68.7, 4338.0], [68.8, 4338.0], [68.9, 4339.0], [69.0, 4340.0], [69.1, 4342.0], [69.2, 4343.0], [69.3, 4343.0], [69.4, 4346.0], [69.5, 4347.0], [69.6, 4348.0], [69.7, 4349.0], [69.8, 4350.0], [69.9, 4351.0], [70.0, 4352.0], [70.1, 4353.0], [70.2, 4353.0], [70.3, 4353.0], [70.4, 4354.0], [70.5, 4355.0], [70.6, 4356.0], [70.7, 4356.0], [70.8, 4357.0], [70.9, 4358.0], [71.0, 4358.0], [71.1, 4359.0], [71.2, 4359.0], [71.3, 4359.0], [71.4, 4360.0], [71.5, 4360.0], [71.6, 4362.0], [71.7, 4363.0], [71.8, 4365.0], [71.9, 4366.0], [72.0, 4367.0], [72.1, 4367.0], [72.2, 4368.0], [72.3, 4369.0], [72.4, 4370.0], [72.5, 4373.0], [72.6, 4376.0], [72.7, 4376.0], [72.8, 4377.0], [72.9, 4377.0], [73.0, 4382.0], [73.1, 4382.0], [73.2, 4382.0], [73.3, 4382.0], [73.4, 4383.0], [73.5, 4384.0], [73.6, 4386.0], [73.7, 4386.0], [73.8, 4387.0], [73.9, 4388.0], [74.0, 4389.0], [74.1, 4392.0], [74.2, 4392.0], [74.3, 4393.0], [74.4, 4393.0], [74.5, 4393.0], [74.6, 4398.0], [74.7, 4398.0], [74.8, 4399.0], [74.9, 4400.0], [75.0, 4400.0], [75.1, 4401.0], [75.2, 4401.0], [75.3, 4403.0], [75.4, 4407.0], [75.5, 4407.0], [75.6, 4409.0], [75.7, 4409.0], [75.8, 4410.0], [75.9, 4410.0], [76.0, 4414.0], [76.1, 4414.0], [76.2, 4415.0], [76.3, 4416.0], [76.4, 4416.0], [76.5, 4420.0], [76.6, 4420.0], [76.7, 4421.0], [76.8, 4422.0], [76.9, 4424.0], [77.0, 4424.0], [77.1, 4425.0], [77.2, 4426.0], [77.3, 4428.0], [77.4, 4430.0], [77.5, 4431.0], [77.6, 4432.0], [77.7, 4432.0], [77.8, 4432.0], [77.9, 4434.0], [78.0, 4434.0], [78.1, 4434.0], [78.2, 4439.0], [78.3, 4440.0], [78.4, 4443.0], [78.5, 4448.0], [78.6, 4449.0], [78.7, 4449.0], [78.8, 4450.0], [78.9, 4450.0], [79.0, 4452.0], [79.1, 4452.0], [79.2, 4453.0], [79.3, 4453.0], [79.4, 4454.0], [79.5, 4454.0], [79.6, 4454.0], [79.7, 4455.0], [79.8, 4455.0], [79.9, 4455.0], [80.0, 4456.0], [80.1, 4458.0], [80.2, 4458.0], [80.3, 4463.0], [80.4, 4464.0], [80.5, 4465.0], [80.6, 4468.0], [80.7, 4469.0], [80.8, 4469.0], [80.9, 4470.0], [81.0, 4470.0], [81.1, 4472.0], [81.2, 4472.0], [81.3, 4474.0], [81.4, 4475.0], [81.5, 4475.0], [81.6, 4477.0], [81.7, 4477.0], [81.8, 4480.0], [81.9, 4480.0], [82.0, 4482.0], [82.1, 4485.0], [82.2, 4486.0], [82.3, 4486.0], [82.4, 4488.0], [82.5, 4488.0], [82.6, 4488.0], [82.7, 4493.0], [82.8, 4494.0], [82.9, 4496.0], [83.0, 4497.0], [83.1, 4499.0], [83.2, 4504.0], [83.3, 4504.0], [83.4, 4505.0], [83.5, 4505.0], [83.6, 4506.0], [83.7, 4508.0], [83.8, 4510.0], [83.9, 4511.0], [84.0, 4513.0], [84.1, 4513.0], [84.2, 4518.0], [84.3, 4521.0], [84.4, 4524.0], [84.5, 4525.0], [84.6, 4526.0], [84.7, 4532.0], [84.8, 4533.0], [84.9, 4533.0], [85.0, 4534.0], [85.1, 4534.0], [85.2, 4535.0], [85.3, 4537.0], [85.4, 4538.0], [85.5, 4544.0], [85.6, 4545.0], [85.7, 4547.0], [85.8, 4547.0], [85.9, 4547.0], [86.0, 4548.0], [86.1, 4551.0], [86.2, 4552.0], [86.3, 4553.0], [86.4, 4554.0], [86.5, 4554.0], [86.6, 4556.0], [86.7, 4559.0], [86.8, 4563.0], [86.9, 4571.0], [87.0, 4572.0], [87.1, 4572.0], [87.2, 4574.0], [87.3, 4576.0], [87.4, 4576.0], [87.5, 4576.0], [87.6, 4577.0], [87.7, 4584.0], [87.8, 4587.0], [87.9, 4588.0], [88.0, 4588.0], [88.1, 4588.0], [88.2, 4589.0], [88.3, 4594.0], [88.4, 4596.0], [88.5, 4599.0], [88.6, 4601.0], [88.7, 4602.0], [88.8, 4603.0], [88.9, 4604.0], [89.0, 4608.0], [89.1, 4610.0], [89.2, 4611.0], [89.3, 4612.0], [89.4, 4614.0], [89.5, 4615.0], [89.6, 4616.0], [89.7, 4619.0], [89.8, 4619.0], [89.9, 4623.0], [90.0, 4627.0], [90.1, 4630.0], [90.2, 4633.0], [90.3, 4634.0], [90.4, 4639.0], [90.5, 4641.0], [90.6, 4641.0], [90.7, 4644.0], [90.8, 4645.0], [90.9, 4646.0], [91.0, 4648.0], [91.1, 4650.0], [91.2, 4651.0], [91.3, 4663.0], [91.4, 4663.0], [91.5, 4664.0], [91.6, 4666.0], [91.7, 4670.0], [91.8, 4671.0], [91.9, 4672.0], [92.0, 4672.0], [92.1, 4675.0], [92.2, 4676.0], [92.3, 4683.0], [92.4, 4684.0], [92.5, 4689.0], [92.6, 4693.0], [92.7, 4694.0], [92.8, 4696.0], [92.9, 4699.0], [93.0, 4699.0], [93.1, 4700.0], [93.2, 4703.0], [93.3, 4710.0], [93.4, 4720.0], [93.5, 4722.0], [93.6, 4725.0], [93.7, 4730.0], [93.8, 4736.0], [93.9, 4737.0], [94.0, 4742.0], [94.1, 4744.0], [94.2, 4755.0], [94.3, 4759.0], [94.4, 4763.0], [94.5, 4765.0], [94.6, 4771.0], [94.7, 4771.0], [94.8, 4771.0], [94.9, 4774.0], [95.0, 4775.0], [95.1, 4793.0], [95.2, 4802.0], [95.3, 4803.0], [95.4, 4803.0], [95.5, 4809.0], [95.6, 4813.0], [95.7, 4823.0], [95.8, 4826.0], [95.9, 4832.0], [96.0, 4834.0], [96.1, 4847.0], [96.2, 4908.0], [96.3, 4916.0], [96.4, 4916.0], [96.5, 4925.0], [96.6, 4950.0], [96.7, 4950.0], [96.8, 4951.0], [96.9, 4962.0], [97.0, 4966.0], [97.1, 5090.0], [97.2, 5104.0], [97.3, 5234.0], [97.4, 5283.0], [97.5, 5299.0], [97.6, 5358.0], [97.7, 5364.0], [97.8, 5386.0], [97.9, 5465.0], [98.0, 5531.0], [98.1, 5584.0], [98.2, 5631.0], [98.3, 5671.0], [98.4, 5799.0], [98.5, 5808.0], [98.6, 6083.0], [98.7, 6147.0], [98.8, 6200.0], [98.9, 6285.0], [99.0, 6406.0], [99.1, 6575.0], [99.2, 6770.0], [99.3, 7163.0], [99.4, 7186.0], [99.5, 7207.0], [99.6, 7753.0], [99.7, 8293.0], [99.8, 8887.0], [99.9, 9160.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 2.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 7.0], [1.3, 8.0], [1.4, 8.0], [1.5, 9.0], [1.6, 10.0], [1.7, 13.0], [1.8, 13.0], [1.9, 14.0], [2.0, 14.0], [2.1, 15.0], [2.2, 15.0], [2.3, 15.0], [2.4, 16.0], [2.5, 17.0], [2.6, 17.0], [2.7, 17.0], [2.8, 17.0], [2.9, 17.0], [3.0, 17.0], [3.1, 17.0], [3.2, 18.0], [3.3, 18.0], [3.4, 18.0], [3.5, 19.0], [3.6, 20.0], [3.7, 20.0], [3.8, 20.0], [3.9, 22.0], [4.0, 23.0], [4.1, 23.0], [4.2, 23.0], [4.3, 24.0], [4.4, 24.0], [4.5, 25.0], [4.6, 25.0], [4.7, 25.0], [4.8, 25.0], [4.9, 26.0], [5.0, 26.0], [5.1, 26.0], [5.2, 26.0], [5.3, 26.0], [5.4, 27.0], [5.5, 27.0], [5.6, 27.0], [5.7, 27.0], [5.8, 27.0], [5.9, 28.0], [6.0, 28.0], [6.1, 28.0], [6.2, 28.0], [6.3, 28.0], [6.4, 29.0], [6.5, 29.0], [6.6, 29.0], [6.7, 30.0], [6.8, 30.0], [6.9, 31.0], [7.0, 31.0], [7.1, 31.0], [7.2, 31.0], [7.3, 31.0], [7.4, 31.0], [7.5, 31.0], [7.6, 31.0], [7.7, 32.0], [7.8, 32.0], [7.9, 32.0], [8.0, 32.0], [8.1, 32.0], [8.2, 32.0], [8.3, 32.0], [8.4, 33.0], [8.5, 33.0], [8.6, 33.0], [8.7, 33.0], [8.8, 34.0], [8.9, 34.0], [9.0, 35.0], [9.1, 35.0], [9.2, 35.0], [9.3, 35.0], [9.4, 36.0], [9.5, 36.0], [9.6, 36.0], [9.7, 36.0], [9.8, 36.0], [9.9, 36.0], [10.0, 37.0], [10.1, 38.0], [10.2, 39.0], [10.3, 40.0], [10.4, 40.0], [10.5, 40.0], [10.6, 41.0], [10.7, 41.0], [10.8, 41.0], [10.9, 42.0], [11.0, 43.0], [11.1, 43.0], [11.2, 43.0], [11.3, 44.0], [11.4, 46.0], [11.5, 46.0], [11.6, 46.0], [11.7, 46.0], [11.8, 47.0], [11.9, 47.0], [12.0, 47.0], [12.1, 47.0], [12.2, 47.0], [12.3, 47.0], [12.4, 47.0], [12.5, 47.0], [12.6, 47.0], [12.7, 47.0], [12.8, 48.0], [12.9, 48.0], [13.0, 48.0], [13.1, 48.0], [13.2, 49.0], [13.3, 50.0], [13.4, 50.0], [13.5, 51.0], [13.6, 51.0], [13.7, 51.0], [13.8, 51.0], [13.9, 52.0], [14.0, 52.0], [14.1, 52.0], [14.2, 52.0], [14.3, 53.0], [14.4, 53.0], [14.5, 54.0], [14.6, 54.0], [14.7, 54.0], [14.8, 54.0], [14.9, 54.0], [15.0, 55.0], [15.1, 55.0], [15.2, 55.0], [15.3, 55.0], [15.4, 55.0], [15.5, 55.0], [15.6, 55.0], [15.7, 56.0], [15.8, 56.0], [15.9, 57.0], [16.0, 57.0], [16.1, 57.0], [16.2, 57.0], [16.3, 57.0], [16.4, 58.0], [16.5, 58.0], [16.6, 58.0], [16.7, 58.0], [16.8, 58.0], [16.9, 59.0], [17.0, 59.0], [17.1, 59.0], [17.2, 59.0], [17.3, 60.0], [17.4, 60.0], [17.5, 60.0], [17.6, 60.0], [17.7, 60.0], [17.8, 60.0], [17.9, 60.0], [18.0, 61.0], [18.1, 61.0], [18.2, 62.0], [18.3, 62.0], [18.4, 62.0], [18.5, 63.0], [18.6, 64.0], [18.7, 65.0], [18.8, 65.0], [18.9, 65.0], [19.0, 65.0], [19.1, 66.0], [19.2, 67.0], [19.3, 67.0], [19.4, 67.0], [19.5, 68.0], [19.6, 69.0], [19.7, 69.0], [19.8, 69.0], [19.9, 69.0], [20.0, 70.0], [20.1, 70.0], [20.2, 70.0], [20.3, 71.0], [20.4, 71.0], [20.5, 71.0], [20.6, 72.0], [20.7, 72.0], [20.8, 72.0], [20.9, 72.0], [21.0, 72.0], [21.1, 72.0], [21.2, 72.0], [21.3, 73.0], [21.4, 74.0], [21.5, 74.0], [21.6, 74.0], [21.7, 74.0], [21.8, 75.0], [21.9, 76.0], [22.0, 76.0], [22.1, 76.0], [22.2, 76.0], [22.3, 76.0], [22.4, 77.0], [22.5, 77.0], [22.6, 78.0], [22.7, 78.0], [22.8, 79.0], [22.9, 79.0], [23.0, 80.0], [23.1, 81.0], [23.2, 81.0], [23.3, 81.0], [23.4, 81.0], [23.5, 82.0], [23.6, 82.0], [23.7, 83.0], [23.8, 83.0], [23.9, 83.0], [24.0, 84.0], [24.1, 84.0], [24.2, 84.0], [24.3, 84.0], [24.4, 85.0], [24.5, 86.0], [24.6, 87.0], [24.7, 87.0], [24.8, 88.0], [24.9, 88.0], [25.0, 88.0], [25.1, 88.0], [25.2, 89.0], [25.3, 89.0], [25.4, 89.0], [25.5, 89.0], [25.6, 90.0], [25.7, 90.0], [25.8, 90.0], [25.9, 90.0], [26.0, 91.0], [26.1, 91.0], [26.2, 91.0], [26.3, 91.0], [26.4, 92.0], [26.5, 92.0], [26.6, 92.0], [26.7, 92.0], [26.8, 92.0], [26.9, 93.0], [27.0, 93.0], [27.1, 93.0], [27.2, 94.0], [27.3, 94.0], [27.4, 94.0], [27.5, 94.0], [27.6, 95.0], [27.7, 95.0], [27.8, 96.0], [27.9, 96.0], [28.0, 96.0], [28.1, 97.0], [28.2, 97.0], [28.3, 97.0], [28.4, 97.0], [28.5, 97.0], [28.6, 98.0], [28.7, 98.0], [28.8, 98.0], [28.9, 98.0], [29.0, 98.0], [29.1, 98.0], [29.2, 98.0], [29.3, 99.0], [29.4, 99.0], [29.5, 99.0], [29.6, 99.0], [29.7, 99.0], [29.8, 100.0], [29.9, 101.0], [30.0, 101.0], [30.1, 101.0], [30.2, 101.0], [30.3, 101.0], [30.4, 102.0], [30.5, 102.0], [30.6, 103.0], [30.7, 103.0], [30.8, 103.0], [30.9, 103.0], [31.0, 104.0], [31.1, 104.0], [31.2, 105.0], [31.3, 105.0], [31.4, 105.0], [31.5, 105.0], [31.6, 105.0], [31.7, 105.0], [31.8, 106.0], [31.9, 106.0], [32.0, 106.0], [32.1, 106.0], [32.2, 107.0], [32.3, 108.0], [32.4, 108.0], [32.5, 108.0], [32.6, 108.0], [32.7, 108.0], [32.8, 108.0], [32.9, 108.0], [33.0, 109.0], [33.1, 109.0], [33.2, 109.0], [33.3, 110.0], [33.4, 110.0], [33.5, 110.0], [33.6, 110.0], [33.7, 111.0], [33.8, 111.0], [33.9, 112.0], [34.0, 112.0], [34.1, 112.0], [34.2, 112.0], [34.3, 112.0], [34.4, 112.0], [34.5, 113.0], [34.6, 113.0], [34.7, 113.0], [34.8, 113.0], [34.9, 114.0], [35.0, 114.0], [35.1, 114.0], [35.2, 114.0], [35.3, 115.0], [35.4, 115.0], [35.5, 115.0], [35.6, 115.0], [35.7, 116.0], [35.8, 117.0], [35.9, 118.0], [36.0, 118.0], [36.1, 119.0], [36.2, 120.0], [36.3, 120.0], [36.4, 120.0], [36.5, 121.0], [36.6, 121.0], [36.7, 122.0], [36.8, 122.0], [36.9, 122.0], [37.0, 123.0], [37.1, 123.0], [37.2, 123.0], [37.3, 123.0], [37.4, 124.0], [37.5, 126.0], [37.6, 126.0], [37.7, 127.0], [37.8, 127.0], [37.9, 127.0], [38.0, 128.0], [38.1, 128.0], [38.2, 128.0], [38.3, 128.0], [38.4, 128.0], [38.5, 129.0], [38.6, 129.0], [38.7, 129.0], [38.8, 129.0], [38.9, 129.0], [39.0, 130.0], [39.1, 130.0], [39.2, 131.0], [39.3, 131.0], [39.4, 131.0], [39.5, 131.0], [39.6, 131.0], [39.7, 131.0], [39.8, 131.0], [39.9, 132.0], [40.0, 132.0], [40.1, 133.0], [40.2, 134.0], [40.3, 134.0], [40.4, 135.0], [40.5, 136.0], [40.6, 136.0], [40.7, 137.0], [40.8, 137.0], [40.9, 137.0], [41.0, 139.0], [41.1, 139.0], [41.2, 139.0], [41.3, 139.0], [41.4, 139.0], [41.5, 139.0], [41.6, 140.0], [41.7, 140.0], [41.8, 140.0], [41.9, 141.0], [42.0, 142.0], [42.1, 142.0], [42.2, 143.0], [42.3, 143.0], [42.4, 144.0], [42.5, 144.0], [42.6, 145.0], [42.7, 145.0], [42.8, 145.0], [42.9, 146.0], [43.0, 146.0], [43.1, 147.0], [43.2, 147.0], [43.3, 147.0], [43.4, 147.0], [43.5, 147.0], [43.6, 147.0], [43.7, 148.0], [43.8, 148.0], [43.9, 148.0], [44.0, 148.0], [44.1, 148.0], [44.2, 149.0], [44.3, 149.0], [44.4, 149.0], [44.5, 150.0], [44.6, 150.0], [44.7, 151.0], [44.8, 151.0], [44.9, 152.0], [45.0, 153.0], [45.1, 153.0], [45.2, 154.0], [45.3, 155.0], [45.4, 156.0], [45.5, 156.0], [45.6, 156.0], [45.7, 157.0], [45.8, 157.0], [45.9, 157.0], [46.0, 157.0], [46.1, 157.0], [46.2, 159.0], [46.3, 159.0], [46.4, 159.0], [46.5, 159.0], [46.6, 159.0], [46.7, 160.0], [46.8, 160.0], [46.9, 160.0], [47.0, 160.0], [47.1, 160.0], [47.2, 160.0], [47.3, 160.0], [47.4, 160.0], [47.5, 161.0], [47.6, 161.0], [47.7, 162.0], [47.8, 162.0], [47.9, 162.0], [48.0, 162.0], [48.1, 162.0], [48.2, 162.0], [48.3, 162.0], [48.4, 162.0], [48.5, 163.0], [48.6, 163.0], [48.7, 164.0], [48.8, 164.0], [48.9, 164.0], [49.0, 165.0], [49.1, 165.0], [49.2, 165.0], [49.3, 166.0], [49.4, 166.0], [49.5, 167.0], [49.6, 167.0], [49.7, 167.0], [49.8, 168.0], [49.9, 168.0], [50.0, 169.0], [50.1, 169.0], [50.2, 169.0], [50.3, 169.0], [50.4, 169.0], [50.5, 170.0], [50.6, 170.0], [50.7, 170.0], [50.8, 170.0], [50.9, 170.0], [51.0, 170.0], [51.1, 171.0], [51.2, 171.0], [51.3, 171.0], [51.4, 172.0], [51.5, 173.0], [51.6, 173.0], [51.7, 174.0], [51.8, 174.0], [51.9, 174.0], [52.0, 175.0], [52.1, 175.0], [52.2, 176.0], [52.3, 176.0], [52.4, 177.0], [52.5, 178.0], [52.6, 178.0], [52.7, 178.0], [52.8, 178.0], [52.9, 178.0], [53.0, 178.0], [53.1, 178.0], [53.2, 179.0], [53.3, 179.0], [53.4, 179.0], [53.5, 180.0], [53.6, 180.0], [53.7, 181.0], [53.8, 181.0], [53.9, 181.0], [54.0, 182.0], [54.1, 182.0], [54.2, 183.0], [54.3, 183.0], [54.4, 183.0], [54.5, 183.0], [54.6, 183.0], [54.7, 184.0], [54.8, 184.0], [54.9, 184.0], [55.0, 185.0], [55.1, 185.0], [55.2, 186.0], [55.3, 186.0], [55.4, 187.0], [55.5, 187.0], [55.6, 188.0], [55.7, 188.0], [55.8, 188.0], [55.9, 189.0], [56.0, 189.0], [56.1, 190.0], [56.2, 190.0], [56.3, 190.0], [56.4, 190.0], [56.5, 191.0], [56.6, 191.0], [56.7, 191.0], [56.8, 192.0], [56.9, 194.0], [57.0, 195.0], [57.1, 196.0], [57.2, 196.0], [57.3, 196.0], [57.4, 196.0], [57.5, 197.0], [57.6, 197.0], [57.7, 197.0], [57.8, 197.0], [57.9, 197.0], [58.0, 197.0], [58.1, 198.0], [58.2, 199.0], [58.3, 199.0], [58.4, 199.0], [58.5, 200.0], [58.6, 200.0], [58.7, 200.0], [58.8, 200.0], [58.9, 200.0], [59.0, 201.0], [59.1, 201.0], [59.2, 202.0], [59.3, 202.0], [59.4, 203.0], [59.5, 203.0], [59.6, 203.0], [59.7, 203.0], [59.8, 204.0], [59.9, 204.0], [60.0, 204.0], [60.1, 204.0], [60.2, 204.0], [60.3, 205.0], [60.4, 205.0], [60.5, 206.0], [60.6, 206.0], [60.7, 206.0], [60.8, 206.0], [60.9, 206.0], [61.0, 207.0], [61.1, 207.0], [61.2, 207.0], [61.3, 208.0], [61.4, 208.0], [61.5, 208.0], [61.6, 208.0], [61.7, 209.0], [61.8, 209.0], [61.9, 210.0], [62.0, 210.0], [62.1, 210.0], [62.2, 210.0], [62.3, 211.0], [62.4, 211.0], [62.5, 211.0], [62.6, 211.0], [62.7, 212.0], [62.8, 213.0], [62.9, 213.0], [63.0, 213.0], [63.1, 213.0], [63.2, 213.0], [63.3, 214.0], [63.4, 215.0], [63.5, 215.0], [63.6, 215.0], [63.7, 216.0], [63.8, 216.0], [63.9, 217.0], [64.0, 217.0], [64.1, 218.0], [64.2, 220.0], [64.3, 220.0], [64.4, 220.0], [64.5, 220.0], [64.6, 220.0], [64.7, 221.0], [64.8, 221.0], [64.9, 222.0], [65.0, 222.0], [65.1, 222.0], [65.2, 222.0], [65.3, 223.0], [65.4, 223.0], [65.5, 223.0], [65.6, 223.0], [65.7, 224.0], [65.8, 224.0], [65.9, 224.0], [66.0, 224.0], [66.1, 225.0], [66.2, 225.0], [66.3, 225.0], [66.4, 225.0], [66.5, 225.0], [66.6, 226.0], [66.7, 226.0], [66.8, 226.0], [66.9, 227.0], [67.0, 227.0], [67.1, 227.0], [67.2, 227.0], [67.3, 227.0], [67.4, 228.0], [67.5, 228.0], [67.6, 229.0], [67.7, 230.0], [67.8, 230.0], [67.9, 230.0], [68.0, 230.0], [68.1, 231.0], [68.2, 231.0], [68.3, 231.0], [68.4, 231.0], [68.5, 232.0], [68.6, 232.0], [68.7, 233.0], [68.8, 233.0], [68.9, 234.0], [69.0, 235.0], [69.1, 235.0], [69.2, 235.0], [69.3, 236.0], [69.4, 237.0], [69.5, 237.0], [69.6, 238.0], [69.7, 238.0], [69.8, 238.0], [69.9, 239.0], [70.0, 240.0], [70.1, 240.0], [70.2, 240.0], [70.3, 241.0], [70.4, 241.0], [70.5, 241.0], [70.6, 241.0], [70.7, 242.0], [70.8, 242.0], [70.9, 242.0], [71.0, 242.0], [71.1, 243.0], [71.2, 244.0], [71.3, 244.0], [71.4, 245.0], [71.5, 245.0], [71.6, 245.0], [71.7, 246.0], [71.8, 246.0], [71.9, 247.0], [72.0, 247.0], [72.1, 247.0], [72.2, 248.0], [72.3, 248.0], [72.4, 249.0], [72.5, 250.0], [72.6, 251.0], [72.7, 251.0], [72.8, 251.0], [72.9, 251.0], [73.0, 252.0], [73.1, 252.0], [73.2, 253.0], [73.3, 254.0], [73.4, 254.0], [73.5, 255.0], [73.6, 255.0], [73.7, 255.0], [73.8, 256.0], [73.9, 256.0], [74.0, 257.0], [74.1, 257.0], [74.2, 257.0], [74.3, 257.0], [74.4, 258.0], [74.5, 258.0], [74.6, 258.0], [74.7, 258.0], [74.8, 259.0], [74.9, 259.0], [75.0, 259.0], [75.1, 259.0], [75.2, 259.0], [75.3, 260.0], [75.4, 260.0], [75.5, 260.0], [75.6, 261.0], [75.7, 261.0], [75.8, 261.0], [75.9, 262.0], [76.0, 262.0], [76.1, 262.0], [76.2, 262.0], [76.3, 263.0], [76.4, 263.0], [76.5, 263.0], [76.6, 263.0], [76.7, 263.0], [76.8, 264.0], [76.9, 264.0], [77.0, 264.0], [77.1, 264.0], [77.2, 264.0], [77.3, 264.0], [77.4, 264.0], [77.5, 264.0], [77.6, 264.0], [77.7, 265.0], [77.8, 265.0], [77.9, 265.0], [78.0, 266.0], [78.1, 266.0], [78.2, 267.0], [78.3, 267.0], [78.4, 267.0], [78.5, 267.0], [78.6, 268.0], [78.7, 268.0], [78.8, 268.0], [78.9, 268.0], [79.0, 269.0], [79.1, 270.0], [79.2, 271.0], [79.3, 271.0], [79.4, 271.0], [79.5, 271.0], [79.6, 272.0], [79.7, 272.0], [79.8, 272.0], [79.9, 272.0], [80.0, 272.0], [80.1, 274.0], [80.2, 274.0], [80.3, 274.0], [80.4, 274.0], [80.5, 274.0], [80.6, 275.0], [80.7, 275.0], [80.8, 275.0], [80.9, 275.0], [81.0, 275.0], [81.1, 275.0], [81.2, 276.0], [81.3, 276.0], [81.4, 276.0], [81.5, 276.0], [81.6, 276.0], [81.7, 276.0], [81.8, 277.0], [81.9, 277.0], [82.0, 277.0], [82.1, 278.0], [82.2, 278.0], [82.3, 278.0], [82.4, 279.0], [82.5, 279.0], [82.6, 279.0], [82.7, 279.0], [82.8, 280.0], [82.9, 280.0], [83.0, 280.0], [83.1, 280.0], [83.2, 280.0], [83.3, 280.0], [83.4, 281.0], [83.5, 281.0], [83.6, 281.0], [83.7, 281.0], [83.8, 282.0], [83.9, 282.0], [84.0, 283.0], [84.1, 284.0], [84.2, 284.0], [84.3, 284.0], [84.4, 284.0], [84.5, 284.0], [84.6, 285.0], [84.7, 286.0], [84.8, 286.0], [84.9, 287.0], [85.0, 287.0], [85.1, 288.0], [85.2, 288.0], [85.3, 288.0], [85.4, 288.0], [85.5, 288.0], [85.6, 289.0], [85.7, 289.0], [85.8, 289.0], [85.9, 289.0], [86.0, 290.0], [86.1, 290.0], [86.2, 291.0], [86.3, 291.0], [86.4, 291.0], [86.5, 291.0], [86.6, 292.0], [86.7, 292.0], [86.8, 292.0], [86.9, 293.0], [87.0, 293.0], [87.1, 293.0], [87.2, 294.0], [87.3, 294.0], [87.4, 294.0], [87.5, 294.0], [87.6, 295.0], [87.7, 295.0], [87.8, 295.0], [87.9, 295.0], [88.0, 295.0], [88.1, 295.0], [88.2, 295.0], [88.3, 296.0], [88.4, 297.0], [88.5, 297.0], [88.6, 297.0], [88.7, 298.0], [88.8, 298.0], [88.9, 298.0], [89.0, 298.0], [89.1, 299.0], [89.2, 299.0], [89.3, 299.0], [89.4, 300.0], [89.5, 300.0], [89.6, 301.0], [89.7, 301.0], [89.8, 301.0], [89.9, 301.0], [90.0, 302.0], [90.1, 302.0], [90.2, 302.0], [90.3, 303.0], [90.4, 303.0], [90.5, 303.0], [90.6, 303.0], [90.7, 303.0], [90.8, 303.0], [90.9, 305.0], [91.0, 306.0], [91.1, 306.0], [91.2, 306.0], [91.3, 307.0], [91.4, 307.0], [91.5, 308.0], [91.6, 308.0], [91.7, 308.0], [91.8, 308.0], [91.9, 309.0], [92.0, 309.0], [92.1, 309.0], [92.2, 309.0], [92.3, 310.0], [92.4, 310.0], [92.5, 311.0], [92.6, 311.0], [92.7, 311.0], [92.8, 311.0], [92.9, 311.0], [93.0, 311.0], [93.1, 313.0], [93.2, 313.0], [93.3, 315.0], [93.4, 315.0], [93.5, 315.0], [93.6, 316.0], [93.7, 316.0], [93.8, 317.0], [93.9, 317.0], [94.0, 317.0], [94.1, 318.0], [94.2, 318.0], [94.3, 318.0], [94.4, 319.0], [94.5, 319.0], [94.6, 319.0], [94.7, 319.0], [94.8, 320.0], [94.9, 320.0], [95.0, 320.0], [95.1, 321.0], [95.2, 321.0], [95.3, 321.0], [95.4, 322.0], [95.5, 323.0], [95.6, 323.0], [95.7, 323.0], [95.8, 324.0], [95.9, 325.0], [96.0, 325.0], [96.1, 327.0], [96.2, 328.0], [96.3, 328.0], [96.4, 329.0], [96.5, 329.0], [96.6, 330.0], [96.7, 330.0], [96.8, 331.0], [96.9, 331.0], [97.0, 333.0], [97.1, 333.0], [97.2, 334.0], [97.3, 334.0], [97.4, 334.0], [97.5, 335.0], [97.6, 335.0], [97.7, 337.0], [97.8, 339.0], [97.9, 339.0], [98.0, 340.0], [98.1, 340.0], [98.2, 342.0], [98.3, 344.0], [98.4, 345.0], [98.5, 347.0], [98.6, 347.0], [98.7, 349.0], [98.8, 360.0], [98.9, 370.0], [99.0, 377.0], [99.1, 379.0], [99.2, 403.0], [99.3, 431.0], [99.4, 1008.0], [99.5, 1017.0], [99.6, 1029.0], [99.7, 1033.0], [99.8, 1034.0], [99.9, 1035.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 105.0], [0.1, 106.0], [0.2, 106.0], [0.3, 106.0], [0.4, 108.0], [0.5, 110.0], [0.6, 111.0], [0.7, 118.0], [0.8, 120.0], [0.9, 130.0], [1.0, 136.0], [1.1, 153.0], [1.2, 153.0], [1.3, 154.0], [1.4, 156.0], [1.5, 158.0], [1.6, 166.0], [1.7, 166.0], [1.8, 172.0], [1.9, 185.0], [2.0, 195.0], [2.1, 195.0], [2.2, 197.0], [2.3, 198.0], [2.4, 199.0], [2.5, 202.0], [2.6, 203.0], [2.7, 205.0], [2.8, 206.0], [2.9, 209.0], [3.0, 211.0], [3.1, 212.0], [3.2, 213.0], [3.3, 214.0], [3.4, 216.0], [3.5, 218.0], [3.6, 228.0], [3.7, 232.0], [3.8, 244.0], [3.9, 246.0], [4.0, 250.0], [4.1, 254.0], [4.2, 260.0], [4.3, 275.0], [4.4, 287.0], [4.5, 289.0], [4.6, 290.0], [4.7, 292.0], [4.8, 295.0], [4.9, 301.0], [5.0, 315.0], [5.1, 316.0], [5.2, 317.0], [5.3, 321.0], [5.4, 326.0], [5.5, 327.0], [5.6, 328.0], [5.7, 334.0], [5.8, 345.0], [5.9, 348.0], [6.0, 358.0], [6.1, 361.0], [6.2, 366.0], [6.3, 368.0], [6.4, 369.0], [6.5, 401.0], [6.6, 466.0], [6.7, 494.0], [6.8, 501.0], [6.9, 536.0], [7.0, 617.0], [7.1, 675.0], [7.2, 1371.0], [7.3, 1381.0], [7.4, 1516.0], [7.5, 1563.0], [7.6, 1585.0], [7.7, 1587.0], [7.8, 1705.0], [7.9, 1912.0], [8.0, 2006.0], [8.1, 2145.0], [8.2, 2228.0], [8.3, 2241.0], [8.4, 2294.0], [8.5, 2329.0], [8.6, 2337.0], [8.7, 2371.0], [8.8, 2392.0], [8.9, 2422.0], [9.0, 2422.0], [9.1, 2440.0], [9.2, 2447.0], [9.3, 2490.0], [9.4, 2493.0], [9.5, 2496.0], [9.6, 2503.0], [9.7, 2507.0], [9.8, 2528.0], [9.9, 2529.0], [10.0, 2529.0], [10.1, 2541.0], [10.2, 2561.0], [10.3, 2564.0], [10.4, 2570.0], [10.5, 2571.0], [10.6, 2592.0], [10.7, 2609.0], [10.8, 2618.0], [10.9, 2622.0], [11.0, 2632.0], [11.1, 2636.0], [11.2, 2648.0], [11.3, 2656.0], [11.4, 2660.0], [11.5, 2669.0], [11.6, 2671.0], [11.7, 2672.0], [11.8, 2673.0], [11.9, 2684.0], [12.0, 2685.0], [12.1, 2699.0], [12.2, 2703.0], [12.3, 2705.0], [12.4, 2711.0], [12.5, 2711.0], [12.6, 2713.0], [12.7, 2723.0], [12.8, 2724.0], [12.9, 2730.0], [13.0, 2733.0], [13.1, 2736.0], [13.2, 2766.0], [13.3, 2767.0], [13.4, 2779.0], [13.5, 2779.0], [13.6, 2784.0], [13.7, 2796.0], [13.8, 2796.0], [13.9, 2815.0], [14.0, 2822.0], [14.1, 2823.0], [14.2, 2829.0], [14.3, 2849.0], [14.4, 2852.0], [14.5, 2853.0], [14.6, 2854.0], [14.7, 2854.0], [14.8, 2858.0], [14.9, 2864.0], [15.0, 2866.0], [15.1, 2868.0], [15.2, 2868.0], [15.3, 2868.0], [15.4, 2869.0], [15.5, 2876.0], [15.6, 2883.0], [15.7, 2884.0], [15.8, 2895.0], [15.9, 2902.0], [16.0, 2902.0], [16.1, 2906.0], [16.2, 2913.0], [16.3, 2920.0], [16.4, 2923.0], [16.5, 2929.0], [16.6, 2931.0], [16.7, 2932.0], [16.8, 2935.0], [16.9, 2936.0], [17.0, 2940.0], [17.1, 2942.0], [17.2, 2945.0], [17.3, 2948.0], [17.4, 2948.0], [17.5, 2949.0], [17.6, 2951.0], [17.7, 2953.0], [17.8, 2957.0], [17.9, 2961.0], [18.0, 2963.0], [18.1, 2967.0], [18.2, 2968.0], [18.3, 2972.0], [18.4, 2974.0], [18.5, 2980.0], [18.6, 2983.0], [18.7, 2984.0], [18.8, 2985.0], [18.9, 2987.0], [19.0, 2989.0], [19.1, 2989.0], [19.2, 2995.0], [19.3, 2997.0], [19.4, 2997.0], [19.5, 3001.0], [19.6, 3002.0], [19.7, 3004.0], [19.8, 3010.0], [19.9, 3017.0], [20.0, 3018.0], [20.1, 3018.0], [20.2, 3020.0], [20.3, 3022.0], [20.4, 3023.0], [20.5, 3027.0], [20.6, 3029.0], [20.7, 3037.0], [20.8, 3041.0], [20.9, 3042.0], [21.0, 3043.0], [21.1, 3049.0], [21.2, 3050.0], [21.3, 3054.0], [21.4, 3063.0], [21.5, 3063.0], [21.6, 3064.0], [21.7, 3068.0], [21.8, 3069.0], [21.9, 3073.0], [22.0, 3075.0], [22.1, 3079.0], [22.2, 3090.0], [22.3, 3091.0], [22.4, 3092.0], [22.5, 3094.0], [22.6, 3094.0], [22.7, 3094.0], [22.8, 3095.0], [22.9, 3097.0], [23.0, 3098.0], [23.1, 3099.0], [23.2, 3101.0], [23.3, 3103.0], [23.4, 3103.0], [23.5, 3109.0], [23.6, 3110.0], [23.7, 3111.0], [23.8, 3114.0], [23.9, 3115.0], [24.0, 3117.0], [24.1, 3122.0], [24.2, 3122.0], [24.3, 3125.0], [24.4, 3127.0], [24.5, 3129.0], [24.6, 3131.0], [24.7, 3132.0], [24.8, 3132.0], [24.9, 3135.0], [25.0, 3135.0], [25.1, 3138.0], [25.2, 3138.0], [25.3, 3139.0], [25.4, 3141.0], [25.5, 3144.0], [25.6, 3145.0], [25.7, 3145.0], [25.8, 3160.0], [25.9, 3161.0], [26.0, 3162.0], [26.1, 3163.0], [26.2, 3166.0], [26.3, 3166.0], [26.4, 3166.0], [26.5, 3173.0], [26.6, 3182.0], [26.7, 3190.0], [26.8, 3193.0], [26.9, 3193.0], [27.0, 3195.0], [27.1, 3202.0], [27.2, 3203.0], [27.3, 3203.0], [27.4, 3211.0], [27.5, 3214.0], [27.6, 3216.0], [27.7, 3221.0], [27.8, 3222.0], [27.9, 3222.0], [28.0, 3223.0], [28.1, 3224.0], [28.2, 3232.0], [28.3, 3232.0], [28.4, 3233.0], [28.5, 3237.0], [28.6, 3237.0], [28.7, 3237.0], [28.8, 3238.0], [28.9, 3239.0], [29.0, 3240.0], [29.1, 3240.0], [29.2, 3243.0], [29.3, 3251.0], [29.4, 3254.0], [29.5, 3255.0], [29.6, 3257.0], [29.7, 3257.0], [29.8, 3257.0], [29.9, 3260.0], [30.0, 3262.0], [30.1, 3262.0], [30.2, 3263.0], [30.3, 3263.0], [30.4, 3264.0], [30.5, 3268.0], [30.6, 3270.0], [30.7, 3270.0], [30.8, 3270.0], [30.9, 3273.0], [31.0, 3274.0], [31.1, 3275.0], [31.2, 3277.0], [31.3, 3279.0], [31.4, 3281.0], [31.5, 3282.0], [31.6, 3283.0], [31.7, 3285.0], [31.8, 3287.0], [31.9, 3288.0], [32.0, 3291.0], [32.1, 3292.0], [32.2, 3295.0], [32.3, 3295.0], [32.4, 3297.0], [32.5, 3297.0], [32.6, 3298.0], [32.7, 3301.0], [32.8, 3301.0], [32.9, 3302.0], [33.0, 3302.0], [33.1, 3305.0], [33.2, 3308.0], [33.3, 3309.0], [33.4, 3313.0], [33.5, 3316.0], [33.6, 3317.0], [33.7, 3318.0], [33.8, 3319.0], [33.9, 3319.0], [34.0, 3319.0], [34.1, 3320.0], [34.2, 3323.0], [34.3, 3324.0], [34.4, 3325.0], [34.5, 3325.0], [34.6, 3327.0], [34.7, 3328.0], [34.8, 3329.0], [34.9, 3330.0], [35.0, 3332.0], [35.1, 3333.0], [35.2, 3333.0], [35.3, 3333.0], [35.4, 3334.0], [35.5, 3335.0], [35.6, 3335.0], [35.7, 3337.0], [35.8, 3338.0], [35.9, 3340.0], [36.0, 3341.0], [36.1, 3342.0], [36.2, 3343.0], [36.3, 3343.0], [36.4, 3344.0], [36.5, 3347.0], [36.6, 3349.0], [36.7, 3353.0], [36.8, 3355.0], [36.9, 3356.0], [37.0, 3358.0], [37.1, 3358.0], [37.2, 3360.0], [37.3, 3360.0], [37.4, 3362.0], [37.5, 3363.0], [37.6, 3364.0], [37.7, 3364.0], [37.8, 3365.0], [37.9, 3368.0], [38.0, 3369.0], [38.1, 3370.0], [38.2, 3371.0], [38.3, 3372.0], [38.4, 3375.0], [38.5, 3375.0], [38.6, 3377.0], [38.7, 3377.0], [38.8, 3377.0], [38.9, 3378.0], [39.0, 3380.0], [39.1, 3381.0], [39.2, 3382.0], [39.3, 3383.0], [39.4, 3383.0], [39.5, 3386.0], [39.6, 3389.0], [39.7, 3389.0], [39.8, 3390.0], [39.9, 3392.0], [40.0, 3393.0], [40.1, 3396.0], [40.2, 3397.0], [40.3, 3400.0], [40.4, 3401.0], [40.5, 3402.0], [40.6, 3403.0], [40.7, 3404.0], [40.8, 3404.0], [40.9, 3406.0], [41.0, 3407.0], [41.1, 3408.0], [41.2, 3409.0], [41.3, 3413.0], [41.4, 3414.0], [41.5, 3414.0], [41.6, 3414.0], [41.7, 3415.0], [41.8, 3415.0], [41.9, 3415.0], [42.0, 3416.0], [42.1, 3416.0], [42.2, 3418.0], [42.3, 3419.0], [42.4, 3422.0], [42.5, 3423.0], [42.6, 3425.0], [42.7, 3427.0], [42.8, 3428.0], [42.9, 3428.0], [43.0, 3431.0], [43.1, 3433.0], [43.2, 3434.0], [43.3, 3434.0], [43.4, 3434.0], [43.5, 3434.0], [43.6, 3435.0], [43.7, 3436.0], [43.8, 3437.0], [43.9, 3438.0], [44.0, 3439.0], [44.1, 3443.0], [44.2, 3444.0], [44.3, 3444.0], [44.4, 3448.0], [44.5, 3448.0], [44.6, 3448.0], [44.7, 3449.0], [44.8, 3450.0], [44.9, 3451.0], [45.0, 3452.0], [45.1, 3452.0], [45.2, 3453.0], [45.3, 3454.0], [45.4, 3455.0], [45.5, 3456.0], [45.6, 3457.0], [45.7, 3457.0], [45.8, 3459.0], [45.9, 3461.0], [46.0, 3462.0], [46.1, 3464.0], [46.2, 3465.0], [46.3, 3465.0], [46.4, 3467.0], [46.5, 3468.0], [46.6, 3469.0], [46.7, 3471.0], [46.8, 3473.0], [46.9, 3474.0], [47.0, 3476.0], [47.1, 3478.0], [47.2, 3479.0], [47.3, 3480.0], [47.4, 3481.0], [47.5, 3481.0], [47.6, 3482.0], [47.7, 3482.0], [47.8, 3485.0], [47.9, 3486.0], [48.0, 3486.0], [48.1, 3487.0], [48.2, 3487.0], [48.3, 3488.0], [48.4, 3488.0], [48.5, 3488.0], [48.6, 3488.0], [48.7, 3492.0], [48.8, 3494.0], [48.9, 3495.0], [49.0, 3495.0], [49.1, 3497.0], [49.2, 3498.0], [49.3, 3498.0], [49.4, 3499.0], [49.5, 3500.0], [49.6, 3505.0], [49.7, 3505.0], [49.8, 3506.0], [49.9, 3506.0], [50.0, 3506.0], [50.1, 3508.0], [50.2, 3511.0], [50.3, 3511.0], [50.4, 3514.0], [50.5, 3517.0], [50.6, 3517.0], [50.7, 3518.0], [50.8, 3519.0], [50.9, 3520.0], [51.0, 3521.0], [51.1, 3521.0], [51.2, 3523.0], [51.3, 3524.0], [51.4, 3525.0], [51.5, 3525.0], [51.6, 3525.0], [51.7, 3529.0], [51.8, 3529.0], [51.9, 3531.0], [52.0, 3532.0], [52.1, 3533.0], [52.2, 3533.0], [52.3, 3536.0], [52.4, 3536.0], [52.5, 3537.0], [52.6, 3539.0], [52.7, 3540.0], [52.8, 3540.0], [52.9, 3540.0], [53.0, 3540.0], [53.1, 3542.0], [53.2, 3544.0], [53.3, 3544.0], [53.4, 3545.0], [53.5, 3548.0], [53.6, 3549.0], [53.7, 3551.0], [53.8, 3553.0], [53.9, 3554.0], [54.0, 3556.0], [54.1, 3559.0], [54.2, 3560.0], [54.3, 3560.0], [54.4, 3562.0], [54.5, 3563.0], [54.6, 3564.0], [54.7, 3565.0], [54.8, 3565.0], [54.9, 3566.0], [55.0, 3567.0], [55.1, 3568.0], [55.2, 3569.0], [55.3, 3570.0], [55.4, 3573.0], [55.5, 3573.0], [55.6, 3573.0], [55.7, 3575.0], [55.8, 3576.0], [55.9, 3576.0], [56.0, 3576.0], [56.1, 3577.0], [56.2, 3578.0], [56.3, 3581.0], [56.4, 3581.0], [56.5, 3585.0], [56.6, 3585.0], [56.7, 3587.0], [56.8, 3588.0], [56.9, 3589.0], [57.0, 3592.0], [57.1, 3596.0], [57.2, 3596.0], [57.3, 3597.0], [57.4, 3597.0], [57.5, 3598.0], [57.6, 3599.0], [57.7, 3602.0], [57.8, 3602.0], [57.9, 3603.0], [58.0, 3604.0], [58.1, 3608.0], [58.2, 3608.0], [58.3, 3612.0], [58.4, 3613.0], [58.5, 3614.0], [58.6, 3614.0], [58.7, 3615.0], [58.8, 3615.0], [58.9, 3616.0], [59.0, 3620.0], [59.1, 3620.0], [59.2, 3621.0], [59.3, 3623.0], [59.4, 3623.0], [59.5, 3624.0], [59.6, 3626.0], [59.7, 3631.0], [59.8, 3634.0], [59.9, 3639.0], [60.0, 3640.0], [60.1, 3640.0], [60.2, 3640.0], [60.3, 3641.0], [60.4, 3643.0], [60.5, 3646.0], [60.6, 3648.0], [60.7, 3648.0], [60.8, 3654.0], [60.9, 3656.0], [61.0, 3658.0], [61.1, 3659.0], [61.2, 3664.0], [61.3, 3664.0], [61.4, 3668.0], [61.5, 3668.0], [61.6, 3668.0], [61.7, 3673.0], [61.8, 3674.0], [61.9, 3677.0], [62.0, 3677.0], [62.1, 3678.0], [62.2, 3679.0], [62.3, 3681.0], [62.4, 3681.0], [62.5, 3682.0], [62.6, 3685.0], [62.7, 3686.0], [62.8, 3686.0], [62.9, 3687.0], [63.0, 3687.0], [63.1, 3689.0], [63.2, 3689.0], [63.3, 3691.0], [63.4, 3694.0], [63.5, 3695.0], [63.6, 3695.0], [63.7, 3695.0], [63.8, 3696.0], [63.9, 3697.0], [64.0, 3698.0], [64.1, 3698.0], [64.2, 3699.0], [64.3, 3699.0], [64.4, 3701.0], [64.5, 3702.0], [64.6, 3706.0], [64.7, 3707.0], [64.8, 3709.0], [64.9, 3712.0], [65.0, 3715.0], [65.1, 3719.0], [65.2, 3719.0], [65.3, 3720.0], [65.4, 3724.0], [65.5, 3724.0], [65.6, 3727.0], [65.7, 3728.0], [65.8, 3730.0], [65.9, 3732.0], [66.0, 3733.0], [66.1, 3733.0], [66.2, 3738.0], [66.3, 3739.0], [66.4, 3740.0], [66.5, 3743.0], [66.6, 3743.0], [66.7, 3744.0], [66.8, 3745.0], [66.9, 3747.0], [67.0, 3749.0], [67.1, 3750.0], [67.2, 3752.0], [67.3, 3752.0], [67.4, 3754.0], [67.5, 3755.0], [67.6, 3757.0], [67.7, 3759.0], [67.8, 3761.0], [67.9, 3763.0], [68.0, 3763.0], [68.1, 3765.0], [68.2, 3765.0], [68.3, 3765.0], [68.4, 3765.0], [68.5, 3768.0], [68.6, 3770.0], [68.7, 3771.0], [68.8, 3772.0], [68.9, 3774.0], [69.0, 3774.0], [69.1, 3776.0], [69.2, 3776.0], [69.3, 3776.0], [69.4, 3782.0], [69.5, 3782.0], [69.6, 3784.0], [69.7, 3786.0], [69.8, 3791.0], [69.9, 3792.0], [70.0, 3793.0], [70.1, 3793.0], [70.2, 3793.0], [70.3, 3799.0], [70.4, 3801.0], [70.5, 3801.0], [70.6, 3802.0], [70.7, 3806.0], [70.8, 3809.0], [70.9, 3811.0], [71.0, 3813.0], [71.1, 3813.0], [71.2, 3815.0], [71.3, 3815.0], [71.4, 3817.0], [71.5, 3819.0], [71.6, 3820.0], [71.7, 3821.0], [71.8, 3821.0], [71.9, 3822.0], [72.0, 3827.0], [72.1, 3827.0], [72.2, 3828.0], [72.3, 3832.0], [72.4, 3833.0], [72.5, 3833.0], [72.6, 3835.0], [72.7, 3837.0], [72.8, 3838.0], [72.9, 3838.0], [73.0, 3840.0], [73.1, 3841.0], [73.2, 3842.0], [73.3, 3845.0], [73.4, 3847.0], [73.5, 3847.0], [73.6, 3848.0], [73.7, 3848.0], [73.8, 3856.0], [73.9, 3857.0], [74.0, 3860.0], [74.1, 3861.0], [74.2, 3862.0], [74.3, 3867.0], [74.4, 3868.0], [74.5, 3868.0], [74.6, 3868.0], [74.7, 3870.0], [74.8, 3871.0], [74.9, 3871.0], [75.0, 3871.0], [75.1, 3872.0], [75.2, 3872.0], [75.3, 3877.0], [75.4, 3878.0], [75.5, 3879.0], [75.6, 3879.0], [75.7, 3882.0], [75.8, 3882.0], [75.9, 3884.0], [76.0, 3885.0], [76.1, 3888.0], [76.2, 3889.0], [76.3, 3889.0], [76.4, 3891.0], [76.5, 3895.0], [76.6, 3895.0], [76.7, 3897.0], [76.8, 3900.0], [76.9, 3901.0], [77.0, 3902.0], [77.1, 3903.0], [77.2, 3904.0], [77.3, 3908.0], [77.4, 3910.0], [77.5, 3911.0], [77.6, 3913.0], [77.7, 3916.0], [77.8, 3920.0], [77.9, 3921.0], [78.0, 3923.0], [78.1, 3924.0], [78.2, 3925.0], [78.3, 3926.0], [78.4, 3926.0], [78.5, 3931.0], [78.6, 3932.0], [78.7, 3935.0], [78.8, 3938.0], [78.9, 3940.0], [79.0, 3940.0], [79.1, 3940.0], [79.2, 3941.0], [79.3, 3943.0], [79.4, 3944.0], [79.5, 3945.0], [79.6, 3946.0], [79.7, 3946.0], [79.8, 3948.0], [79.9, 3948.0], [80.0, 3949.0], [80.1, 3950.0], [80.2, 3952.0], [80.3, 3956.0], [80.4, 3961.0], [80.5, 3966.0], [80.6, 3966.0], [80.7, 3970.0], [80.8, 3972.0], [80.9, 3972.0], [81.0, 3973.0], [81.1, 3976.0], [81.2, 3977.0], [81.3, 3977.0], [81.4, 3978.0], [81.5, 3981.0], [81.6, 3983.0], [81.7, 3984.0], [81.8, 3986.0], [81.9, 3989.0], [82.0, 3989.0], [82.1, 3989.0], [82.2, 3994.0], [82.3, 3996.0], [82.4, 3998.0], [82.5, 3999.0], [82.6, 4004.0], [82.7, 4005.0], [82.8, 4005.0], [82.9, 4006.0], [83.0, 4011.0], [83.1, 4012.0], [83.2, 4012.0], [83.3, 4015.0], [83.4, 4015.0], [83.5, 4020.0], [83.6, 4021.0], [83.7, 4022.0], [83.8, 4024.0], [83.9, 4025.0], [84.0, 4029.0], [84.1, 4030.0], [84.2, 4036.0], [84.3, 4036.0], [84.4, 4037.0], [84.5, 4038.0], [84.6, 4038.0], [84.7, 4039.0], [84.8, 4041.0], [84.9, 4044.0], [85.0, 4046.0], [85.1, 4047.0], [85.2, 4049.0], [85.3, 4049.0], [85.4, 4050.0], [85.5, 4053.0], [85.6, 4054.0], [85.7, 4054.0], [85.8, 4059.0], [85.9, 4066.0], [86.0, 4070.0], [86.1, 4071.0], [86.2, 4072.0], [86.3, 4075.0], [86.4, 4076.0], [86.5, 4077.0], [86.6, 4080.0], [86.7, 4082.0], [86.8, 4087.0], [86.9, 4091.0], [87.0, 4092.0], [87.1, 4092.0], [87.2, 4094.0], [87.3, 4096.0], [87.4, 4099.0], [87.5, 4099.0], [87.6, 4099.0], [87.7, 4103.0], [87.8, 4103.0], [87.9, 4103.0], [88.0, 4103.0], [88.1, 4105.0], [88.2, 4106.0], [88.3, 4107.0], [88.4, 4109.0], [88.5, 4117.0], [88.6, 4117.0], [88.7, 4118.0], [88.8, 4121.0], [88.9, 4122.0], [89.0, 4123.0], [89.1, 4124.0], [89.2, 4125.0], [89.3, 4129.0], [89.4, 4129.0], [89.5, 4129.0], [89.6, 4134.0], [89.7, 4140.0], [89.8, 4143.0], [89.9, 4145.0], [90.0, 4152.0], [90.1, 4154.0], [90.2, 4154.0], [90.3, 4160.0], [90.4, 4167.0], [90.5, 4167.0], [90.6, 4169.0], [90.7, 4169.0], [90.8, 4169.0], [90.9, 4170.0], [91.0, 4170.0], [91.1, 4171.0], [91.2, 4175.0], [91.3, 4175.0], [91.4, 4176.0], [91.5, 4176.0], [91.6, 4179.0], [91.7, 4183.0], [91.8, 4190.0], [91.9, 4190.0], [92.0, 4194.0], [92.1, 4201.0], [92.2, 4211.0], [92.3, 4219.0], [92.4, 4220.0], [92.5, 4228.0], [92.6, 4230.0], [92.7, 4232.0], [92.8, 4236.0], [92.9, 4240.0], [93.0, 4246.0], [93.1, 4247.0], [93.2, 4248.0], [93.3, 4251.0], [93.4, 4251.0], [93.5, 4252.0], [93.6, 4252.0], [93.7, 4252.0], [93.8, 4255.0], [93.9, 4255.0], [94.0, 4258.0], [94.1, 4275.0], [94.2, 4275.0], [94.3, 4288.0], [94.4, 4291.0], [94.5, 4294.0], [94.6, 4304.0], [94.7, 4309.0], [94.8, 4311.0], [94.9, 4321.0], [95.0, 4324.0], [95.1, 4325.0], [95.2, 4346.0], [95.3, 4353.0], [95.4, 4353.0], [95.5, 4363.0], [95.6, 4371.0], [95.7, 4394.0], [95.8, 4396.0], [95.9, 4412.0], [96.0, 4434.0], [96.1, 4442.0], [96.2, 4450.0], [96.3, 4454.0], [96.4, 4456.0], [96.5, 4459.0], [96.6, 4460.0], [96.7, 4465.0], [96.8, 4467.0], [96.9, 4469.0], [97.0, 4503.0], [97.1, 4532.0], [97.2, 4548.0], [97.3, 4591.0], [97.4, 4593.0], [97.5, 4601.0], [97.6, 4604.0], [97.7, 4629.0], [97.8, 4650.0], [97.9, 4661.0], [98.0, 4762.0], [98.1, 4794.0], [98.2, 4808.0], [98.3, 4852.0], [98.4, 4883.0], [98.5, 4924.0], [98.6, 5002.0], [98.7, 5031.0], [98.8, 5124.0], [98.9, 5279.0], [99.0, 5318.0], [99.1, 5341.0], [99.2, 5441.0], [99.3, 5789.0], [99.4, 6079.0], [99.5, 6195.0], [99.6, 6395.0], [99.7, 6514.0], [99.8, 6560.0], [99.9, 7069.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 309.0, "series": [{"data": [[0.0, 9.0], [600.0, 1.0], [700.0, 4.0], [800.0, 3.0], [900.0, 2.0], [1000.0, 1.0], [1200.0, 2.0], [1400.0, 3.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 1.0], [1900.0, 2.0], [2100.0, 2.0], [2200.0, 1.0], [2300.0, 1.0], [2400.0, 3.0], [2500.0, 1.0], [2600.0, 5.0], [2700.0, 7.0], [2800.0, 5.0], [2900.0, 5.0], [3000.0, 4.0], [3100.0, 7.0], [3200.0, 10.0], [3300.0, 22.0], [3400.0, 35.0], [3500.0, 42.0], [3600.0, 41.0], [3700.0, 32.0], [3800.0, 56.0], [3900.0, 70.0], [4000.0, 101.0], [4100.0, 96.0], [4200.0, 80.0], [4300.0, 91.0], [4400.0, 83.0], [4500.0, 55.0], [4600.0, 45.0], [4700.0, 21.0], [4800.0, 10.0], [4900.0, 9.0], [5100.0, 1.0], [5000.0, 1.0], [5200.0, 3.0], [5300.0, 3.0], [5500.0, 2.0], [5600.0, 2.0], [5400.0, 1.0], [5700.0, 1.0], [5800.0, 1.0], [6100.0, 1.0], [6000.0, 1.0], [6200.0, 2.0], [6500.0, 1.0], [6400.0, 1.0], [6700.0, 1.0], [7100.0, 2.0], [7200.0, 1.0], [7700.0, 1.0], [8200.0, 1.0], [8800.0, 1.0], [9100.0, 1.0], [100.0, 1.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 298.0], [300.0, 99.0], [100.0, 286.0], [200.0, 309.0], [400.0, 2.0], [1000.0, 6.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[600.0, 2.0], [1300.0, 2.0], [1500.0, 4.0], [1700.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 3.0], [2300.0, 4.0], [2400.0, 7.0], [2500.0, 11.0], [2600.0, 15.0], [2800.0, 20.0], [2700.0, 17.0], [2900.0, 35.0], [3000.0, 37.0], [3100.0, 39.0], [3200.0, 56.0], [3300.0, 76.0], [3400.0, 92.0], [3500.0, 82.0], [3600.0, 67.0], [3700.0, 60.0], [3800.0, 64.0], [3900.0, 59.0], [4000.0, 51.0], [4100.0, 44.0], [4200.0, 25.0], [4300.0, 13.0], [4400.0, 11.0], [4500.0, 5.0], [4600.0, 5.0], [4700.0, 2.0], [4800.0, 3.0], [4900.0, 1.0], [5000.0, 2.0], [5100.0, 1.0], [5300.0, 2.0], [5200.0, 1.0], [5400.0, 1.0], [5700.0, 1.0], [6100.0, 1.0], [6000.0, 1.0], [6300.0, 1.0], [6500.0, 2.0], [7000.0, 1.0], [100.0, 24.0], [200.0, 25.0], [300.0, 16.0], [400.0, 3.0], [500.0, 2.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 28.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1900.0, "series": [{"data": [[0.0, 1072.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 28.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1900.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 165.621, "minX": 1.66892922E12, "maxY": 490.7949999999997, "series": [{"data": [[1.66892922E12, 490.7949999999997]], "isOverall": false, "label": "client-to-gateway-non-caching (GET)", "isController": false}, {"data": [[1.66892922E12, 446.9079999999999]], "isOverall": false, "label": "client-to-application (GET)", "isController": false}, {"data": [[1.66892922E12, 165.621]], "isOverall": false, "label": "client-to-gateway-caching (GET)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66892922E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.0, "maxY": 9160.0, "series": [{"data": [[2.0, 8887.0], [3.0, 8293.0], [4.0, 7163.0], [5.0, 7753.0], [6.0, 7207.0], [7.0, 7186.0], [8.0, 6770.0], [9.0, 6083.0], [10.0, 6200.0], [11.0, 6406.0], [12.0, 6147.0], [13.0, 6285.0], [14.0, 6575.0], [15.0, 5808.0], [16.0, 5584.0], [17.0, 5671.0], [18.0, 5465.0], [19.0, 5799.0], [20.0, 5386.0], [21.0, 5364.0], [22.0, 5358.0], [23.0, 5090.0], [24.0, 5631.0], [25.0, 5283.0], [26.0, 4916.0], [27.0, 4962.0], [28.0, 4966.0], [29.0, 5531.0], [30.0, 4722.0], [31.0, 4834.0], [33.0, 4725.0], [32.0, 4832.0], [35.0, 4619.0], [34.0, 5104.0], [37.0, 4615.0], [36.0, 4588.0], [39.0, 5299.0], [38.0, 4468.0], [41.0, 4547.0], [40.0, 5234.0], [43.0, 4594.0], [42.0, 4367.0], [45.0, 4352.0], [44.0, 4683.0], [47.0, 4793.0], [46.0, 4611.0], [49.0, 4797.5], [51.0, 4951.0], [50.0, 4596.0], [53.0, 4925.0], [52.0, 4648.0], [55.0, 4547.0], [54.0, 4803.0], [57.0, 4261.0], [56.0, 4293.0], [59.0, 4663.0], [58.0, 4455.0], [61.0, 4470.0], [60.0, 4477.0], [63.0, 4693.0], [62.0, 4619.0], [67.0, 4763.0], [66.0, 4699.0], [65.0, 4608.0], [64.0, 4774.0], [71.0, 4668.0], [70.0, 4916.0], [74.0, 56.5], [72.0, 1547.3333333333333], [75.0, 4542.0], [73.0, 4742.0], [79.0, 4676.0], [78.0, 4343.0], [77.0, 4470.0], [76.0, 4200.0], [83.0, 4731.0], [81.0, 4488.0], [80.0, 4455.0], [87.0, 4710.0], [86.0, 4295.0], [85.0, 4353.0], [84.0, 4449.0], [89.0, 67.0], [88.0, 2273.5], [90.0, 4376.0], [95.0, 4538.0], [93.0, 4497.0], [92.0, 4311.0], [99.0, 4548.0], [98.0, 4464.0], [97.0, 4670.0], [96.0, 4197.0], [103.0, 80.5], [102.0, 4572.0], [101.0, 4526.0], [100.0, 4057.0], [104.0, 3108.6666666666665], [107.0, 4778.5], [105.0, 4434.0], [111.0, 4508.0], [110.0, 4494.0], [109.0, 4085.0], [108.0, 4612.0], [115.0, 4765.0], [114.0, 4105.0], [112.0, 4247.0], [117.0, 4556.0], [116.0, 4214.0], [123.0, 4133.0], [122.0, 4373.5], [120.0, 4400.0], [127.0, 4436.5], [125.0, 4495.0], [135.0, 4463.0], [133.0, 4425.0], [132.0, 4700.0], [131.0, 4256.0], [130.0, 4432.0], [128.0, 4410.0], [143.0, 2160.0], [141.0, 4358.666666666667], [139.0, 4675.0], [137.0, 4359.0], [151.0, 4326.0], [150.0, 4671.0], [149.0, 4572.0], [148.0, 4289.5], [147.0, 4295.0], [146.0, 4196.0], [144.0, 4240.5], [159.0, 4123.0], [158.0, 4278.5], [156.0, 4101.0], [155.0, 4404.0], [153.0, 4434.0], [152.0, 4401.0], [167.0, 4421.0], [166.0, 4303.0], [164.0, 4630.0], [163.0, 4416.0], [161.0, 4274.0], [175.0, 4488.8], [170.0, 4290.0], [168.0, 4696.0], [183.0, 4332.5], [181.0, 4504.0], [180.0, 4493.0], [179.0, 4430.0], [178.0, 4321.0], [177.0, 4610.0], [176.0, 4393.0], [191.0, 4382.0], [190.0, 4367.333333333333], [188.0, 4353.0], [186.0, 4666.0], [185.0, 4006.0], [184.0, 4759.0], [198.0, 4057.0], [197.0, 4306.0], [196.0, 4377.0], [195.0, 4511.0], [194.0, 4744.0], [193.0, 4249.0], [192.0, 4071.0], [207.0, 4771.0], [206.0, 4415.0], [205.0, 4144.0], [204.0, 4384.0], [203.0, 4533.333333333333], [200.0, 4172.0], [215.0, 4129.0], [213.0, 4376.0], [211.0, 4383.5], [223.0, 4097.0], [222.0, 4412.0], [219.0, 4720.0], [218.0, 4210.5], [217.0, 4328.0], [231.0, 4453.0], [230.0, 4087.0], [229.0, 4280.0], [228.0, 4309.0], [227.0, 4072.0], [226.0, 4431.0], [225.0, 4394.0], [239.0, 4809.0], [238.0, 4215.0], [236.0, 4089.0], [235.0, 4381.0], [232.0, 4694.0], [246.0, 4279.0], [245.0, 4164.0], [244.0, 4349.0], [243.0, 4646.0], [242.0, 4010.0], [241.0, 4379.0], [255.0, 4672.0], [254.0, 4427.0], [251.0, 4118.0], [250.0, 4312.5], [248.0, 4443.0], [271.0, 4389.0], [269.0, 4563.0], [266.0, 4419.0], [264.0, 4302.0], [261.0, 4574.0], [260.0, 4281.5], [258.0, 4425.666666666667], [275.0, 4051.0], [286.0, 4627.0], [287.0, 4048.0], [285.0, 4278.0], [274.0, 4071.0], [273.0, 4359.0], [272.0, 4382.5], [282.0, 4410.0], [280.0, 4432.0], [279.0, 4599.0], [278.0, 4338.0], [277.0, 4005.0], [276.0, 4736.0], [302.0, 4283.0], [303.0, 4006.0], [300.0, 4847.0], [299.0, 4111.0], [297.0, 4276.5], [295.0, 4554.0], [294.0, 4230.5], [292.0, 4224.0], [290.0, 4356.0], [289.0, 4347.5], [318.0, 4771.0], [319.0, 4589.0], [317.0, 4771.0], [316.0, 4730.0], [315.0, 4306.0], [314.0, 4376.0], [313.0, 4145.0], [312.0, 4314.0], [311.0, 4047.0], [305.0, 4073.0], [304.0, 4118.0], [307.0, 4203.0], [306.0, 4285.0], [310.0, 4542.0], [308.0, 4121.0], [334.0, 4277.0], [335.0, 4224.0], [332.0, 4250.0], [330.0, 4326.0], [328.0, 4409.5], [326.0, 4192.0], [324.0, 4272.0], [322.0, 4631.5], [320.0, 4377.0], [351.0, 4429.333333333333], [348.0, 4465.0], [337.0, 4325.0], [347.0, 4477.0], [346.0, 4576.0], [345.0, 4312.0], [344.0, 4231.0], [343.0, 4303.5], [341.0, 4067.5], [340.0, 4469.666666666667], [355.0, 4033.0], [365.0, 4254.0], [367.0, 4121.5], [364.0, 4367.5], [362.0, 4117.5], [360.0, 4400.0], [359.0, 4232.0], [358.0, 4147.5], [357.0, 4193.0], [354.0, 4140.5], [352.0, 4354.0], [381.0, 4119.0], [382.0, 4633.0], [380.0, 4071.0], [371.0, 4179.0], [370.0, 4623.0], [369.0, 4063.0], [378.0, 4650.0], [377.0, 3973.0], [376.0, 4534.0], [375.0, 4078.0], [373.0, 4089.0], [372.0, 3908.0], [397.0, 4356.0], [399.0, 4157.5], [396.0, 4246.0], [387.0, 4684.0], [386.0, 4359.5], [384.0, 4355.5], [395.0, 4322.0], [394.0, 4194.0], [393.0, 4163.0], [392.0, 4132.0], [391.0, 4052.0], [390.0, 4414.5], [388.0, 4424.0], [403.0, 4339.0], [415.0, 4453.5], [413.0, 4053.5], [411.0, 4210.0], [409.0, 3936.0], [408.0, 3928.0], [407.0, 3931.5], [405.0, 4313.0], [402.0, 3986.0], [401.0, 4110.0], [400.0, 4197.0], [428.0, 4382.0], [430.0, 4340.0], [431.0, 4616.0], [429.0, 4329.0], [427.0, 4364.5], [425.0, 4349.5], [423.0, 4189.5], [416.0, 3963.0], [419.0, 4449.5], [418.0, 3893.0], [421.0, 4407.0], [420.0, 4052.0], [446.0, 3900.0], [447.0, 3836.0], [445.0, 3989.0], [444.0, 4392.0], [443.0, 3934.0], [442.0, 4373.5], [441.0, 3845.0], [440.0, 4273.0], [438.0, 4299.5], [435.0, 4065.0], [434.0, 3864.0], [433.0, 4254.5], [436.0, 4089.0], [462.0, 4223.0], [463.0, 4044.0], [461.0, 3941.0], [460.0, 4288.0], [459.0, 4172.5], [457.0, 3986.0], [456.0, 4174.0], [455.0, 4393.0], [449.0, 4089.5], [451.0, 4191.0], [450.0, 4563.0], [454.0, 4195.0], [453.0, 3914.0], [452.0, 4664.0], [467.0, 4172.5], [478.0, 4540.5], [479.0, 4426.0], [476.0, 4407.0], [475.0, 4533.0], [473.0, 4035.5], [471.0, 3883.0], [469.0, 4221.0], [468.0, 3836.0], [465.0, 4392.0], [464.0, 4249.0], [492.0, 4367.0], [494.0, 3884.0], [495.0, 4130.0], [493.0, 4098.0], [491.0, 4260.0], [489.0, 3962.0], [487.0, 4217.0], [481.0, 4455.0], [480.0, 4386.0], [483.0, 4182.0], [482.0, 4164.0], [486.0, 4525.0], [485.0, 4077.5], [510.0, 4150.0], [511.0, 4240.0], [508.0, 4439.0], [499.0, 4394.5], [497.0, 4336.0], [507.0, 4077.0], [506.0, 4453.0], [505.0, 3968.0], [504.0, 4266.0], [503.0, 3794.0], [502.0, 4373.0], [501.0, 3804.0], [500.0, 4211.0], [537.0, 3794.0], [541.0, 4458.0], [543.0, 3900.0], [528.0, 4299.0], [531.0, 4200.5], [529.0, 4117.0], [533.0, 4102.0], [532.0, 3986.0], [540.0, 4365.0], [539.0, 4271.0], [538.0, 4387.0], [536.0, 4107.0], [519.0, 4125.0], [518.0, 4074.0], [517.0, 3789.0], [516.0, 3800.0], [515.0, 4474.0], [514.0, 3994.5], [512.0, 4602.0], [526.0, 4147.0], [524.0, 4070.0], [523.0, 4100.0], [522.0, 4164.0], [521.0, 4291.0], [520.0, 4030.0], [535.0, 4518.0], [534.0, 4146.0], [570.0, 4389.0], [574.0, 4323.0], [575.0, 4007.0], [561.0, 3716.0], [560.0, 3803.0], [564.0, 4010.0], [562.0, 4355.0], [573.0, 3993.0], [572.0, 4084.0], [571.0, 4056.0], [568.0, 3750.0], [551.0, 3796.0], [550.0, 4162.0], [548.0, 4115.5], [547.0, 3835.0], [545.0, 4505.0], [544.0, 4127.0], [559.0, 4076.0], [558.0, 4137.0], [557.0, 4200.0], [556.0, 4262.0], [555.0, 3785.0], [554.0, 4604.0], [553.0, 4105.5], [567.0, 3950.0], [566.0, 4158.0], [600.0, 4073.0], [606.0, 4088.0], [607.0, 3977.0], [593.0, 4327.0], [592.0, 3832.5], [604.0, 4075.5], [602.0, 3780.0], [601.0, 4221.0], [590.0, 4241.0], [576.0, 4060.0], [579.0, 4544.0], [578.0, 4001.5], [581.0, 3877.0], [580.0, 4047.0], [583.0, 3982.0], [582.0, 3692.0], [589.0, 3978.0], [588.0, 3650.0], [587.0, 3810.0], [586.0, 4083.5], [584.0, 4114.0], [599.0, 3902.0], [598.0, 4553.0], [597.0, 4314.0], [596.0, 3991.0], [633.0, 4287.0], [638.0, 3963.0], [639.0, 3860.0], [624.0, 4221.0], [627.0, 4030.0], [625.0, 3854.0], [629.0, 4288.0], [628.0, 4181.0], [637.0, 4146.5], [635.0, 4113.0], [634.0, 3978.0], [632.0, 4101.0], [615.0, 3995.0], [614.0, 4398.0], [613.0, 3962.0], [612.0, 3957.0], [610.0, 4088.0], [609.0, 4099.0], [608.0, 4388.0], [623.0, 4137.0], [622.0, 3866.0], [621.0, 3842.0], [620.0, 4059.0], [619.0, 4076.5], [617.0, 3797.0], [616.0, 4185.0], [631.0, 3703.0], [630.0, 3964.0], [664.0, 3714.0], [668.0, 4214.0], [670.0, 3728.0], [659.0, 4032.6666666666665], [656.0, 4152.0], [667.0, 3907.0], [666.0, 4067.0], [665.0, 3707.0], [655.0, 3781.0], [640.0, 4309.0], [642.0, 3914.0], [641.0, 4069.0], [645.0, 3895.0], [644.0, 3968.5], [647.0, 4067.0], [646.0, 4283.0], [653.0, 3760.0], [652.0, 3610.0], [651.0, 4343.0], [650.0, 3641.0], [649.0, 3561.0], [648.0, 4386.0], [663.0, 3855.0], [662.0, 4154.0], [661.0, 4056.0], [660.0, 4254.0], [700.0, 4156.0], [703.0, 3499.0], [688.0, 3593.0], [691.0, 3977.5], [689.0, 3570.0], [693.0, 4110.0], [692.0, 4308.0], [702.0, 4134.0], [701.0, 3865.0], [699.0, 4009.0], [698.0, 3582.0], [697.0, 4348.0], [696.0, 4027.0], [687.0, 3846.0], [674.0, 3805.0], [673.0, 3999.3333333333335], [677.0, 4010.0], [675.0, 3857.0], [679.0, 4021.0], [678.0, 3852.5], [686.0, 3760.0], [685.0, 3999.0], [684.0, 3976.0], [682.0, 3907.0], [681.0, 4131.0], [680.0, 4095.0], [695.0, 4060.0], [694.0, 3924.0], [729.0, 4125.5], [733.0, 4248.0], [734.0, 3808.0], [720.0, 3558.0], [722.0, 4263.0], [721.0, 4131.0], [732.0, 3542.0], [731.0, 4024.0], [730.0, 3748.0], [719.0, 3685.0], [704.0, 4207.0], [706.0, 4351.0], [705.0, 4179.0], [709.0, 3834.0], [708.0, 3510.5], [711.0, 3795.0], [710.0, 3504.0], [718.0, 4014.0], [717.0, 4125.0], [716.0, 3945.5], [714.0, 3786.0], [713.0, 3576.0], [712.0, 3578.0], [727.0, 3570.0], [726.0, 4261.0], [725.0, 3617.0], [724.0, 3816.5], [761.0, 2248.5], [766.0, 3932.0], [767.0, 3842.0], [753.0, 3708.0], [752.0, 3978.0], [755.0, 3763.0], [754.0, 3767.0], [765.0, 3629.0], [764.0, 3840.0], [762.0, 4147.0], [760.0, 3949.0], [743.0, 3969.0], [742.0, 4242.0], [741.0, 3499.0], [740.0, 3829.0], [739.0, 4060.0], [738.0, 4102.0], [737.0, 3792.5], [736.0, 3809.0], [751.0, 4171.0], [750.0, 4092.0], [749.0, 3927.0], [748.0, 3805.0], [746.0, 3894.0], [745.0, 3491.0], [744.0, 3510.0], [759.0, 3643.0], [758.0, 3757.6666666666665], [792.0, 3951.0], [796.0, 3542.0], [799.0, 3495.0], [785.0, 3848.0], [784.0, 3955.0], [787.0, 4137.0], [786.0, 3960.0], [798.0, 3625.0], [797.0, 3988.0], [795.0, 4081.0], [794.0, 3463.0], [793.0, 3849.0], [783.0, 3675.0], [770.0, 4104.0], [769.0, 3830.5], [773.0, 4023.0], [772.0, 3613.0], [775.0, 3673.0], [774.0, 3935.0], [782.0, 4171.0], [781.0, 3753.0], [780.0, 3829.0], [779.0, 3874.0], [778.0, 4028.0], [777.0, 3637.0], [776.0, 4164.0], [791.0, 3956.0], [790.0, 3984.0], [825.0, 3540.0], [830.0, 3752.0], [829.0, 2733.0], [831.0, 3429.0], [818.0, 3552.0], [817.0, 3968.0], [821.0, 3392.0], [819.0, 3693.0], [827.0, 3653.0], [826.0, 3640.0], [824.0, 4037.0], [807.0, 3454.0], [806.0, 3671.0], [805.0, 3811.0], [804.0, 3765.0], [803.0, 3644.0], [802.0, 3567.0], [801.0, 3341.0], [800.0, 4092.0], [815.0, 3341.0], [814.0, 3968.0], [813.0, 3716.5], [811.0, 3599.0], [810.0, 3857.0], [809.0, 4064.0], [808.0, 3571.0], [823.0, 3570.0], [822.0, 3833.0], [861.0, 3579.0], [845.0, 2157.5], [844.0, 3654.0], [843.0, 3619.0], [842.0, 3933.0], [841.0, 3630.5], [856.0, 3594.0], [839.0, 3421.0], [837.0, 3686.5], [835.0, 3832.0], [834.0, 3737.0], [832.0, 3237.0], [846.0, 3883.0], [848.0, 2497.3333333333335], [849.0, 3890.0], [851.0, 3557.0], [850.0, 3648.0], [853.0, 3532.0], [852.0, 3484.0], [855.0, 3473.0], [854.0, 3568.0], [863.0, 3412.0], [862.0, 3530.0], [860.0, 3558.0], [859.0, 3657.0], [858.0, 3752.0], [857.0, 3576.0], [892.0, 3500.0], [895.0, 3298.0], [880.0, 3379.0], [883.0, 3364.5], [881.0, 3632.0], [885.0, 3574.0], [884.0, 3474.0], [894.0, 3685.0], [893.0, 3608.0], [891.0, 3670.0], [890.0, 3648.0], [889.0, 3649.0], [888.0, 3608.0], [879.0, 3190.0], [865.0, 3457.0], [864.0, 3474.0], [867.0, 3345.0], [866.0, 3437.0], [869.0, 3213.0], [868.0, 3595.0], [871.0, 3441.0], [870.0, 3482.0], [878.0, 3420.0], [877.0, 3667.0], [876.0, 3601.0], [875.0, 3706.0], [874.0, 3361.0], [873.0, 3705.0], [872.0, 3454.0], [887.0, 3412.0], [886.0, 3667.0], [924.0, 3091.0], [900.0, 2204.0], [899.0, 3512.5], [897.0, 3532.0], [896.0, 3436.0], [901.0, 3269.0], [903.0, 3422.0], [902.0, 3243.0], [911.0, 3429.0], [910.0, 3367.0], [909.0, 3568.0], [908.0, 3376.0], [907.0, 3470.0], [906.0, 3571.0], [905.0, 3221.0], [904.0, 3383.0], [920.0, 2087.5], [927.0, 3339.0], [913.0, 3326.0], [912.0, 3595.0], [915.0, 3384.0], [914.0, 3466.0], [917.0, 3103.0], [916.0, 3469.0], [926.0, 3381.0], [925.0, 3401.0], [923.0, 3178.5], [921.0, 3460.0], [919.0, 3319.0], [918.0, 3281.0], [956.0, 2735.0], [930.0, 2010.0], [929.0, 1992.5], [928.0, 2849.0], [943.0, 2750.0], [942.0, 2740.0], [941.0, 3144.0], [940.0, 2891.0], [939.0, 3026.0], [938.0, 3294.0], [937.0, 3274.0], [936.0, 3304.0], [959.0, 2644.0], [945.0, 3023.0], [944.0, 3110.0], [947.0, 2915.0], [946.0, 2617.0], [949.0, 2963.0], [948.0, 2972.0], [951.0, 2917.0], [950.0, 2752.0], [958.0, 2677.0], [957.0, 2730.0], [955.0, 2791.0], [954.0, 2787.0], [953.0, 2853.0], [952.0, 2823.0], [935.0, 2894.0], [934.0, 3322.0], [933.0, 3320.0], [932.0, 3338.0], [931.0, 3015.0], [967.0, 2136.0], [979.0, 1246.0], [982.0, 934.0], [981.0, 958.0], [980.0, 1024.0], [978.0, 1299.0], [977.0, 1411.0], [976.0, 1401.0], [966.0, 2302.0], [965.0, 2460.0], [964.0, 2519.0], [963.0, 2472.0], [962.0, 2496.0], [961.0, 2641.0], [960.0, 2621.0], [975.0, 1432.0], [974.0, 1570.0], [973.0, 1600.0], [972.0, 1740.0], [971.0, 1948.0], [970.0, 1970.0], [969.0, 2162.0], [968.0, 2248.0], [1.0, 9160.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[490.7949999999997, 4024.152000000001]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 1033.0], [4.0, 406.6], [6.0, 518.75], [7.0, 370.0], [8.0, 187.0], [9.0, 4.0], [10.0, 123.66666666666667], [11.0, 83.0], [13.0, 96.5], [15.0, 115.6], [17.0, 21.5], [18.0, 133.25], [19.0, 18.666666666666668], [20.0, 18.5], [21.0, 136.0], [22.0, 26.5], [23.0, 6.0], [24.0, 205.33333333333334], [25.0, 7.0], [26.0, 132.0], [27.0, 74.33333333333334], [28.0, 119.0], [29.0, 13.0], [30.0, 48.42857142857143], [31.0, 170.0], [33.0, 50.0], [32.0, 110.33333333333333], [34.0, 112.0], [35.0, 55.5], [37.0, 51.5], [36.0, 111.85714285714286], [38.0, 78.66666666666666], [39.0, 47.9047619047619], [41.0, 59.0], [40.0, 190.5], [43.0, 73.0], [42.0, 125.0], [45.0, 63.25], [44.0, 158.5], [47.0, 26.0], [46.0, 80.5], [48.0, 57.0], [49.0, 67.5], [51.0, 56.0], [50.0, 31.0], [53.0, 96.75], [52.0, 27.0], [55.0, 87.0], [54.0, 74.0], [56.0, 56.5], [57.0, 142.7], [59.0, 59.57142857142858], [58.0, 102.2], [61.0, 86.33333333333334], [60.0, 81.33333333333334], [62.0, 43.25], [63.0, 52.0], [65.0, 48.0], [64.0, 46.333333333333336], [71.0, 146.5], [70.0, 31.5], [68.0, 268.0], [74.0, 128.0], [73.0, 133.66666666666669], [72.0, 259.90909090909093], [75.0, 208.0], [79.0, 70.5], [78.0, 164.66666666666666], [77.0, 61.0], [76.0, 101.25], [83.0, 187.5], [80.0, 143.0], [82.0, 148.0], [86.0, 75.0], [84.0, 119.33333333333334], [87.0, 116.00000000000001], [85.0, 72.0], [90.0, 124.5], [88.0, 82.85714285714283], [89.0, 224.0], [91.0, 213.0], [94.0, 98.33333333333333], [93.0, 135.33333333333331], [92.0, 142.33333333333331], [95.0, 100.0], [99.0, 54.5], [97.0, 174.5], [96.0, 55.5], [98.0, 88.0], [103.0, 217.8], [102.0, 51.0], [101.0, 78.0], [100.0, 129.71428571428572], [107.0, 165.0], [105.0, 226.0], [104.0, 95.5], [106.0, 110.0], [109.0, 83.25], [111.0, 171.0], [110.0, 193.0], [108.0, 113.0], [115.0, 150.25], [113.0, 104.0], [112.0, 175.5], [114.0, 318.6666666666667], [119.0, 106.0], [117.0, 142.2], [116.0, 123.0], [118.0, 180.4], [123.0, 185.83333333333334], [122.0, 104.0], [121.0, 72.0], [120.0, 168.33333333333331], [127.0, 147.75], [126.0, 121.87499999999999], [125.0, 97.25], [124.0, 72.0], [135.0, 234.33333333333334], [134.0, 199.0], [133.0, 254.0], [132.0, 135.33333333333334], [131.0, 149.33333333333334], [130.0, 85.8], [129.0, 95.0], [128.0, 83.33333333333334], [142.0, 131.0], [141.0, 223.25], [139.0, 221.5], [138.0, 229.6], [137.0, 114.0], [136.0, 119.0], [151.0, 100.5], [150.0, 182.66666666666669], [149.0, 93.0], [147.0, 107.0], [145.0, 128.0], [144.0, 115.66666666666667], [158.0, 197.0], [157.0, 131.25], [155.0, 92.0], [153.0, 101.5], [159.0, 172.0], [156.0, 148.0], [154.0, 139.0], [164.0, 169.0], [163.0, 174.5], [162.0, 224.5], [161.0, 214.5], [160.0, 147.0], [167.0, 260.5], [166.0, 249.33333333333334], [175.0, 159.4], [173.0, 163.75], [171.0, 133.5], [169.0, 182.71428571428572], [174.0, 157.66666666666669], [172.0, 126.5], [168.0, 130.9375], [170.0, 231.33333333333334], [178.0, 193.8], [176.0, 163.0], [183.0, 193.8], [182.0, 184.4], [181.0, 220.5], [180.0, 219.6], [179.0, 131.0], [177.0, 157.5], [189.0, 210.66666666666669], [188.0, 279.0], [187.0, 147.0], [185.0, 267.6666666666667], [184.0, 160.5], [186.0, 335.0], [196.0, 196.4], [194.0, 146.0], [193.0, 197.0], [192.0, 197.75], [199.0, 188.33333333333334], [198.0, 182.0], [205.0, 172.5], [203.0, 174.0], [202.0, 215.66666666666666], [200.0, 165.0], [201.0, 236.4], [214.0, 271.0], [213.0, 271.5], [212.0, 299.5], [211.0, 289.5], [215.0, 292.5], [209.0, 285.8333333333333], [218.0, 335.75], [216.0, 273.0], [219.0, 318.0], [286.0, 317.0], [279.0, 236.0], [287.0, 303.0], [285.0, 295.0], [275.0, 298.0], [274.0, 321.0], [273.0, 280.0], [272.0, 273.5925925925926], [283.0, 293.5], [281.0, 298.5], [280.0, 279.0], [277.0, 271.5], [276.0, 241.0], [302.0, 256.5], [303.0, 251.5], [296.0, 315.14285714285717], [301.0, 221.33333333333334], [300.0, 226.0], [299.0, 251.2], [297.0, 236.25], [295.0, 216.0], [289.0, 291.6666666666667], [293.0, 245.5], [292.0, 206.86363636363637], [319.0, 174.5], [315.0, 219.99999999999997], [314.0, 221.5], [313.0, 229.11111111111111], [311.0, 215.14285714285714], [317.0, 208.0], [316.0, 205.0], [318.0, 240.6], [307.0, 226.33333333333334], [306.0, 213.33333333333334], [305.0, 214.5], [304.0, 206.0], [312.0, 217.0], [310.0, 256.0], [309.0, 230.5], [308.0, 203.0], [334.0, 225.5], [335.0, 227.75], [333.0, 190.5], [332.0, 206.4], [331.0, 228.0], [330.0, 222.5], [329.0, 217.0], [328.0, 231.0], [326.0, 236.66666666666666], [320.0, 249.5], [321.0, 292.5], [323.0, 210.5], [322.0, 212.5], [325.0, 198.5], [324.0, 218.5], [348.0, 275.5], [350.0, 299.0], [336.0, 240.66666666666666], [337.0, 265.3333333333333], [338.0, 261.5], [339.0, 261.6666666666667], [351.0, 280.0], [349.0, 276.0], [346.0, 257.0], [344.0, 287.0], [343.0, 257.0], [342.0, 264.0], [340.0, 265.0], [341.0, 263.0], [367.0, 244.5], [364.0, 240.0], [362.0, 234.0], [360.0, 227.75], [358.0, 221.0], [356.0, 222.0], [354.0, 214.0], [352.0, 293.5], [373.0, 276.0], [372.0, 268.0], [371.0, 266.0], [370.0, 251.0], [368.0, 267.0], [1.0, 516.5]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[165.619, 174.89499999999995]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 7069.0], [3.0, 6560.0], [4.0, 6395.0], [7.0, 5905.0], [8.0, 5789.0], [9.0, 5279.0], [10.0, 5318.0], [11.0, 5002.0], [12.0, 5341.0], [13.0, 4883.0], [14.0, 5124.0], [15.0, 4762.0], [16.0, 4353.0], [17.0, 4808.0], [19.0, 4487.5], [20.0, 4450.0], [21.0, 4924.0], [22.0, 4852.0], [23.0, 4190.0], [24.0, 4412.0], [25.0, 4251.0], [26.0, 4107.0], [27.0, 4309.0], [28.0, 4503.0], [29.0, 4103.0], [30.0, 4170.0], [31.0, 3871.0], [33.0, 3891.0], [32.0, 4324.0], [35.0, 3820.0], [34.0, 4794.0], [36.0, 3791.0], [39.0, 4275.0], [38.0, 3790.0], [41.0, 3596.0], [40.0, 4465.0], [42.0, 4252.0], [45.0, 4054.0], [44.0, 3920.0], [47.0, 3989.0], [49.0, 4178.5], [51.0, 4029.0], [50.0, 3564.0], [53.0, 3832.0], [52.0, 3597.0], [54.0, 4591.0], [57.0, 4078.0], [56.0, 4059.0], [58.0, 4469.0], [61.0, 3511.0], [60.0, 4246.0], [63.0, 4004.6666666666665], [66.0, 4480.5], [64.0, 4171.0], [71.0, 4135.333333333333], [68.0, 4099.0], [75.0, 4012.0], [74.0, 3505.0], [73.0, 4006.0], [79.0, 4629.0], [78.0, 3911.0], [77.0, 4117.0], [83.0, 4122.0], [82.0, 4038.0], [80.0, 3464.0], [85.0, 4106.0], [90.0, 3617.0], [88.0, 3833.6666666666665], [95.0, 3912.0], [92.0, 4276.0], [99.0, 4601.0], [98.0, 3715.5], [97.0, 3865.0], [103.0, 3853.6666666666665], [100.0, 4604.0], [107.0, 3921.6666666666665], [104.0, 4117.0], [109.0, 3533.0], [115.0, 3793.0], [114.0, 3497.0], [112.0, 4344.0], [119.0, 3872.0], [118.0, 3649.0], [122.0, 3505.0], [121.0, 3435.0], [127.0, 3619.5], [125.0, 3414.0], [124.0, 3783.0], [132.0, 4190.0], [130.0, 4299.5], [128.0, 3575.0], [142.0, 3989.0], [141.0, 3577.0], [140.0, 4132.0], [139.0, 3886.2], [138.0, 3749.0], [150.0, 3525.0], [149.0, 3841.0], [148.0, 3506.0], [147.0, 3844.6666666666665], [144.0, 3701.0], [158.0, 3576.0], [157.0, 3942.3333333333335], [156.0, 3879.0], [154.0, 3724.0], [152.0, 3792.5], [167.0, 3685.0], [165.0, 3497.0], [164.0, 3434.0], [163.0, 4190.0], [162.0, 3392.0], [161.0, 3448.0], [160.0, 3650.0], [175.0, 3418.0], [174.0, 3813.0], [172.0, 3494.0], [170.0, 3752.0], [168.0, 3640.0], [182.0, 127.33333333333334], [181.0, 1006.6666666666667], [183.0, 2859.6666666666665], [178.0, 1690.3333333333333], [179.0, 4548.0], [177.0, 3750.0], [184.0, 158.0], [186.0, 222.66666666666666], [191.0, 162.5], [190.0, 2158.0], [189.0, 133.0], [185.0, 1531.6], [187.0, 1746.6], [188.0, 3668.0], [192.0, 2009.5], [193.0, 900.2], [199.0, 288.0], [197.0, 292.0], [196.0, 1474.3333333333333], [195.0, 1180.5], [198.0, 4000.5], [194.0, 3924.0], [203.0, 185.33333333333334], [202.0, 205.0], [200.0, 2525.3333333333335], [207.0, 3557.5], [204.0, 4081.5], [201.0, 3720.0], [213.0, 2089.5], [215.0, 3558.0], [212.0, 3448.0], [211.0, 3570.6666666666665], [210.0, 3521.0], [209.0, 3675.5], [223.0, 1909.0], [222.0, 3797.5], [220.0, 4140.0], [219.0, 4179.0], [218.0, 3777.5], [217.0, 3685.0], [228.0, 2889.5], [231.0, 3760.0], [229.0, 4003.0], [224.0, 3592.0], [239.0, 3743.0], [238.0, 4061.0], [235.0, 3368.0], [234.0, 3788.0], [232.0, 3752.0], [241.0, 348.0], [247.0, 3897.0], [246.0, 3335.0], [244.0, 3874.0], [242.0, 3602.0], [251.0, 345.0], [255.0, 3422.0], [254.0, 3708.0], [252.0, 3530.0], [249.0, 3461.0], [248.0, 4288.0], [269.0, 3782.0], [263.0, 364.3333333333333], [270.0, 3727.0], [267.0, 3363.0], [266.0, 4252.0], [265.0, 3996.0], [264.0, 4118.5], [262.0, 3735.25], [258.0, 4103.0], [257.0, 3433.0], [286.0, 3781.5], [277.0, 1851.5], [276.0, 401.0], [287.0, 4076.0], [284.0, 3732.5], [275.0, 4084.5], [274.0, 3921.5], [272.0, 3591.0], [283.0, 3838.0], [281.0, 3333.0], [280.0, 3513.5], [278.0, 3337.0], [279.0, 4050.0], [302.0, 3325.0], [303.0, 3729.0], [300.0, 3911.0], [299.0, 3949.0], [298.0, 3428.0], [297.0, 3447.6666666666665], [294.0, 3344.5], [292.0, 3438.0], [291.0, 3684.6666666666665], [288.0, 3697.0], [318.0, 4169.0], [317.0, 3425.5], [306.0, 3444.0], [305.0, 3816.5], [315.0, 4123.0], [314.0, 4459.0], [313.0, 4099.0], [312.0, 4152.0], [310.0, 3499.0], [309.0, 4219.0], [308.0, 3780.5], [323.0, 3270.0], [335.0, 3876.0], [333.0, 4442.0], [332.0, 3553.5], [331.0, 3843.0], [327.0, 3366.0], [325.0, 3841.0], [322.0, 3333.0], [321.0, 3775.5], [320.0, 3847.0], [350.0, 3586.5], [337.0, 2390.6666666666665], [336.0, 494.0], [349.0, 3419.0], [339.0, 3320.5], [347.0, 3946.0], [346.0, 4036.0], [345.0, 3275.0], [344.0, 3771.0], [343.0, 3856.0], [342.0, 3534.6666666666665], [364.0, 3414.0], [353.0, 2027.0], [366.0, 4018.5], [363.0, 3750.8], [362.0, 3802.5], [357.0, 3353.0], [355.0, 4118.0], [354.0, 3620.0], [352.0, 3415.5], [382.0, 3520.5], [383.0, 3817.0], [380.0, 3763.5], [371.0, 3491.0], [369.0, 3800.0], [378.0, 3262.0], [377.0, 4460.0], [376.0, 3862.0], [375.0, 3674.0], [374.0, 3587.5], [372.0, 3270.0], [398.0, 3923.0], [399.0, 3402.0], [397.0, 3371.0], [396.0, 3615.0], [395.0, 3981.0], [394.0, 3695.0], [393.0, 3955.0], [391.0, 3389.5], [387.0, 4024.0], [386.0, 3864.3333333333335], [390.0, 3916.0], [388.0, 3732.0], [413.0, 4394.0], [401.0, 1878.5], [414.0, 3926.0], [412.0, 3327.0], [411.0, 3647.0], [409.0, 3239.0], [407.0, 3642.0], [400.0, 3485.0], [405.0, 3580.0], [403.0, 3733.0], [402.0, 3525.0], [419.0, 2589.6666666666665], [430.0, 4042.6666666666665], [428.0, 3682.6666666666665], [424.0, 3277.0], [423.0, 3708.0], [421.0, 3257.0], [420.0, 3443.0], [417.0, 3363.6666666666665], [444.0, 4145.0], [446.0, 3255.0], [447.0, 3882.0], [445.0, 3689.0], [443.0, 3498.5], [442.0, 3668.5], [439.0, 3742.5], [434.0, 3391.0], [432.0, 3717.5], [437.0, 3686.0], [436.0, 3436.5], [462.0, 3844.5], [460.0, 3301.0], [451.0, 3360.0], [450.0, 4066.0], [448.0, 3945.0], [459.0, 3381.0], [458.0, 4006.0], [457.0, 3825.0], [456.0, 3415.0], [455.0, 3511.0], [453.0, 4346.0], [452.0, 3679.0], [477.0, 3344.0], [478.0, 3295.0], [476.0, 4004.0], [467.0, 3531.0], [466.0, 3163.0], [465.0, 4247.0], [464.0, 3646.0], [475.0, 3576.0], [474.0, 4099.0], [473.0, 4152.0], [472.0, 3343.0], [471.0, 3473.0], [470.0, 4236.0], [469.0, 3608.0], [468.0, 3699.0], [492.0, 3719.0], [485.0, 675.0], [495.0, 3765.6666666666665], [491.0, 3221.5], [489.0, 3123.0], [487.0, 3474.0], [484.0, 3499.0], [482.0, 3263.0], [481.0, 3851.0], [510.0, 3332.0], [511.0, 3069.0], [509.0, 3745.0], [498.0, 4220.0], [497.0, 3127.0], [496.0, 3792.0], [507.0, 3623.0], [506.0, 3388.5], [505.0, 3162.0], [502.0, 3900.0], [501.0, 3857.0], [500.0, 3226.0], [536.0, 3135.0], [542.0, 3621.6666666666665], [543.0, 3237.0], [528.0, 3041.0], [530.0, 3223.0], [529.0, 3240.0], [540.0, 3799.0], [538.0, 3270.0], [537.0, 3615.0], [527.0, 3114.0], [512.0, 3319.0], [515.0, 3750.0], [514.0, 3499.0], [517.0, 3029.0], [516.0, 3770.0], [519.0, 3481.0], [518.0, 3341.0], [526.0, 3442.0], [524.0, 3203.0], [523.0, 4066.0], [522.0, 3868.0], [521.0, 3525.5], [535.0, 3416.0], [534.0, 3419.5], [532.0, 3695.0], [531.0, 3840.0], [568.0, 3755.0], [572.0, 3620.0], [574.0, 3919.5], [562.0, 3537.0], [560.0, 3559.0], [571.0, 3050.0], [570.0, 3469.0], [569.0, 3848.0], [559.0, 3099.0], [545.0, 3765.0], [549.0, 3138.0], [547.0, 3444.5], [551.0, 3815.0], [550.0, 3497.5], [558.0, 3878.0], [557.0, 3389.0], [556.0, 3122.0], [555.0, 3573.0], [554.0, 3203.0], [553.0, 3991.0], [567.0, 3782.0], [566.0, 4129.0], [565.0, 3694.0], [564.0, 4004.0], [601.0, 3063.0], [596.0, 3619.5], [605.0, 3575.0], [606.0, 3774.0], [594.0, 3614.0], [593.0, 3765.5], [602.0, 3049.0], [600.0, 3132.0], [583.0, 3786.0], [582.0, 2989.0], [580.0, 3224.5], [578.0, 3284.5], [576.0, 3566.5], [591.0, 3103.0], [590.0, 3506.0], [589.0, 3490.6666666666665], [586.0, 3431.5], [584.0, 3776.0], [599.0, 3465.0], [598.0, 3508.0], [597.0, 3648.0], [633.0, 3529.0], [638.0, 3139.0], [639.0, 3730.0], [624.0, 3776.0], [626.0, 3166.0], [625.0, 2913.0], [629.0, 3520.0], [627.0, 3423.0], [637.0, 3580.5], [635.0, 3897.0], [634.0, 3190.0], [632.0, 3090.0], [615.0, 3439.0], [613.0, 3320.0], [612.0, 3462.0], [610.0, 3916.5], [608.0, 3167.5], [623.0, 3364.0], [622.0, 3224.0], [621.0, 3251.0], [620.0, 3677.0], [619.0, 3122.5], [617.0, 2920.0], [616.0, 2936.0], [631.0, 3035.0], [630.0, 3042.0], [665.0, 2985.0], [669.0, 3986.0], [670.0, 3548.0], [657.0, 3744.0], [656.0, 3788.5], [659.0, 3747.0], [658.0, 3540.0], [661.0, 3682.0], [660.0, 3202.0], [668.0, 3004.0], [667.0, 3573.0], [666.0, 2866.0], [664.0, 3138.0], [647.0, 3018.0], [646.0, 4037.0], [645.0, 3372.0], [644.0, 4049.0], [643.0, 3999.0], [642.0, 2983.0], [641.0, 2961.0], [640.0, 3648.0], [654.0, 3977.0], [653.0, 2849.0], [652.0, 3122.0], [651.0, 3658.0], [650.0, 3616.0], [649.0, 3400.5], [663.0, 3940.0], [662.0, 2852.0], [696.0, 3806.0], [702.0, 3286.0], [703.0, 3626.0], [688.0, 3973.0], [690.0, 2869.0], [689.0, 2997.0], [699.0, 3870.0], [698.0, 3698.0], [697.0, 2784.0], [687.0, 2864.0], [673.0, 3364.3333333333335], [675.0, 3166.0], [674.0, 3365.0], [678.0, 3580.0], [676.0, 2815.0], [686.0, 3650.5], [684.0, 3162.0], [683.0, 3425.0], [682.0, 3110.0], [681.0, 3161.0], [680.0, 3817.5], [694.0, 3518.0], [693.0, 3282.0], [692.0, 3302.0], [691.0, 3624.0], [729.0, 3433.0], [722.0, 2986.0], [734.0, 3499.5], [735.0, 3699.5], [720.0, 2779.0], [731.0, 3256.0], [728.0, 3585.0], [711.0, 3599.0], [710.0, 3027.0], [709.0, 3889.0], [708.0, 3581.0], [707.0, 3631.0], [706.0, 3910.0], [705.0, 3976.0], [704.0, 2854.0], [719.0, 3434.5], [717.0, 3570.0], [716.0, 3533.0], [715.0, 2766.0], [714.0, 3524.0], [713.0, 3173.0], [712.0, 3141.0], [727.0, 3396.0], [726.0, 3165.0], [724.0, 3062.0], [764.0, 3349.0], [766.0, 3364.5], [753.0, 3453.0], [752.0, 3400.0], [755.0, 3389.0], [754.0, 3377.0], [763.0, 3436.0], [762.0, 3166.0], [761.0, 3707.0], [760.0, 2660.0], [751.0, 3064.0], [740.0, 3487.0], [737.0, 3080.0], [743.0, 3339.5], [741.0, 3043.0], [750.0, 3063.0], [749.0, 3728.0], [748.0, 3095.0], [747.0, 2671.0], [746.0, 2711.0], [745.0, 3056.5], [759.0, 2767.0], [758.0, 3328.0], [757.0, 2823.0], [756.0, 2703.0], [793.0, 2984.0], [797.0, 2948.0], [798.0, 3640.0], [784.0, 2618.0], [786.0, 3160.0], [785.0, 2945.0], [788.0, 3319.0], [787.0, 2730.0], [796.0, 3738.0], [795.0, 2570.0], [794.0, 3479.0], [792.0, 3171.5], [775.0, 3563.0], [774.0, 3478.5], [772.0, 3608.0], [770.0, 3498.0], [769.0, 3002.0], [768.0, 3177.0], [783.0, 2733.0], [782.0, 3474.0], [781.0, 2656.0], [780.0, 2972.0], [779.0, 3498.0], [778.0, 2989.0], [777.0, 3001.5], [790.0, 3740.0], [789.0, 3222.0], [826.0, 2795.3333333333335], [830.0, 3565.0], [831.0, 3091.0], [816.0, 2923.0], [818.0, 3457.0], [817.0, 2673.0], [829.0, 3268.0], [828.0, 2541.0], [827.0, 2963.0], [815.0, 2698.0], [800.0, 3171.5], [803.0, 2736.0], [802.0, 3438.5], [805.0, 3673.0], [804.0, 3309.0], [807.0, 3715.0], [806.0, 3763.0], [813.0, 3434.0], [812.0, 3696.0], [811.0, 3319.0], [810.0, 2884.0], [809.0, 3712.0], [808.0, 3369.0], [823.0, 3664.0], [822.0, 3702.0], [821.0, 3085.5], [819.0, 3719.0], [856.0, 2490.0], [860.0, 3428.0], [863.0, 3551.0], [849.0, 3240.0], [853.0, 2935.0], [852.0, 3266.3333333333335], [862.0, 2529.0], [861.0, 3525.0], [859.0, 3292.0], [858.0, 2932.0], [857.0, 2503.0], [847.0, 3489.0], [832.0, 3687.0], [834.0, 3020.0], [833.0, 2684.0], [836.0, 2507.0], [835.0, 3533.0], [839.0, 2622.0], [838.0, 2600.5], [845.0, 3072.0], [843.0, 3132.0], [842.0, 2561.0], [841.0, 3052.0], [855.0, 2895.0], [854.0, 2447.0], [890.0, 3256.5], [894.0, 2609.0], [895.0, 3263.0], [881.0, 2829.0], [880.0, 3375.0], [883.0, 2902.0], [882.0, 2648.0], [885.0, 3237.0], [884.0, 2883.0], [893.0, 2564.0], [892.0, 2294.0], [891.0, 2724.0], [888.0, 3288.0], [871.0, 3037.0], [870.0, 3214.0], [869.0, 2329.0], [868.0, 3487.0], [867.0, 3431.0], [866.0, 2699.0], [865.0, 3109.0], [864.0, 3279.0], [879.0, 3302.0], [878.0, 3338.0], [877.0, 2496.0], [876.0, 2713.0], [875.0, 2940.0], [874.0, 2876.0], [873.0, 2571.0], [872.0, 2931.0], [887.0, 2967.0], [886.0, 3305.0], [924.0, 1585.0], [927.0, 1381.0], [913.0, 2337.0], [912.0, 2636.0], [915.0, 2440.0], [914.0, 2422.0], [917.0, 2241.0], [916.0, 2392.0], [926.0, 1516.0], [925.0, 1563.0], [923.0, 1587.0], [922.0, 1705.0], [921.0, 1912.0], [920.0, 2006.0], [911.0, 2371.0], [897.0, 3182.0], [896.0, 2685.0], [899.0, 3111.0], [898.0, 3262.0], [901.0, 2953.0], [900.0, 3254.0], [903.0, 2858.0], [902.0, 2632.0], [910.0, 2669.0], [909.0, 2854.0], [908.0, 2592.0], [907.0, 2949.0], [906.0, 2422.0], [905.0, 3018.0], [904.0, 3094.0], [919.0, 2145.0], [918.0, 2228.0], [928.0, 1371.0], [1.0, 6514.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[446.9079999999999, 3330.621]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 982.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7416.666666666667, "minX": 1.66892922E12, "maxY": 3973412.1333333333, "series": [{"data": [[1.66892922E12, 3973412.1333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66892922E12, 7416.666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66892922E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 174.89499999999995, "minX": 1.66892922E12, "maxY": 4024.152000000001, "series": [{"data": [[1.66892922E12, 4024.152000000001]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66892922E12, 174.89499999999995]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66892922E12, 3330.621]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66892922E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 166.7949999999999, "minX": 1.66892922E12, "maxY": 1297.1379999999992, "series": [{"data": [[1.66892922E12, 1297.1379999999992]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66892922E12, 166.7949999999999]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66892922E12, 622.9860000000003]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66892922E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 12.699000000000007, "minX": 1.66892922E12, "maxY": 271.7380000000001, "series": [{"data": [[1.66892922E12, 265.4899999999997]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66892922E12, 12.699000000000007]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66892922E12, 271.7380000000001]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66892922E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.66892922E12, "maxY": 9160.0, "series": [{"data": [[1.66892922E12, 9160.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66892922E12, 4393.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66892922E12, 5385.779999999995]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66892922E12, 4583.649999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66892922E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66892922E12, 3389.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66892922E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 67.0, "minX": 3.0, "maxY": 7207.0, "series": [{"data": [[8.0, 6345.5], [9.0, 1722.5], [599.0, 3720.0], [618.0, 4292.0], [10.0, 5063.0], [42.0, 2904.5], [11.0, 67.0], [738.0, 212.5], [3.0, 7207.0], [15.0, 2422.0], [16.0, 3077.0], [261.0, 76.0], [4.0, 1023.0], [275.0, 3685.0], [72.0, 230.0], [288.0, 3252.5], [6.0, 6295.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 738.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 51.0, "minX": 3.0, "maxY": 7157.0, "series": [{"data": [[8.0, 1962.5], [9.0, 287.5], [599.0, 482.0], [618.0, 1898.5], [10.0, 472.0], [42.0, 114.5], [11.0, 51.0], [738.0, 203.0], [3.0, 7157.0], [15.0, 290.0], [16.0, 93.5], [261.0, 68.0], [4.0, 1023.0], [275.0, 276.0], [72.0, 211.0], [288.0, 405.5], [6.0, 282.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 738.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66892922E12, "maxY": 50.0, "series": [{"data": [[1.66892922E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66892922E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66892922E12, "maxY": 50.0, "series": [{"data": [[1.66892922E12, 50.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66892922E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.66892922E12, "maxY": 16.666666666666668, "series": [{"data": [[1.66892922E12, 16.666666666666668]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66892922E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66892922E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66892922E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66892922E12, "maxY": 50.0, "series": [{"data": [[1.66892922E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66892922E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

