/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 8263.0, "series": [{"data": [[0.0, 49.0], [0.1, 51.0], [0.2, 52.0], [0.3, 52.0], [0.4, 104.0], [0.5, 129.0], [0.6, 132.0], [0.7, 147.0], [0.8, 167.0], [0.9, 168.0], [1.0, 176.0], [1.1, 200.0], [1.2, 264.0], [1.3, 277.0], [1.4, 277.0], [1.5, 293.0], [1.6, 356.0], [1.7, 497.0], [1.8, 518.0], [1.9, 529.0], [2.0, 534.0], [2.1, 558.0], [2.2, 560.0], [2.3, 561.0], [2.4, 562.0], [2.5, 562.0], [2.6, 565.0], [2.7, 568.0], [2.8, 570.0], [2.9, 571.0], [3.0, 571.0], [3.1, 575.0], [3.2, 576.0], [3.3, 577.0], [3.4, 577.0], [3.5, 578.0], [3.6, 578.0], [3.7, 585.0], [3.8, 587.0], [3.9, 587.0], [4.0, 593.0], [4.1, 604.0], [4.2, 604.0], [4.3, 611.0], [4.4, 621.0], [4.5, 692.0], [4.6, 811.0], [4.7, 1057.0], [4.8, 1062.0], [4.9, 1086.0], [5.0, 1134.0], [5.1, 1156.0], [5.2, 1170.0], [5.3, 1218.0], [5.4, 1234.0], [5.5, 1265.0], [5.6, 1276.0], [5.7, 1289.0], [5.8, 1302.0], [5.9, 1397.0], [6.0, 1477.0], [6.1, 1774.0], [6.2, 1909.0], [6.3, 1928.0], [6.4, 1937.0], [6.5, 2004.0], [6.6, 2154.0], [6.7, 2246.0], [6.8, 2692.0], [6.9, 2771.0], [7.0, 2823.0], [7.1, 2830.0], [7.2, 2921.0], [7.3, 2968.0], [7.4, 3233.0], [7.5, 3244.0], [7.6, 3386.0], [7.7, 3400.0], [7.8, 3401.0], [7.9, 3426.0], [8.0, 3428.0], [8.1, 3434.0], [8.2, 3436.0], [8.3, 3443.0], [8.4, 3454.0], [8.5, 3459.0], [8.6, 3470.0], [8.7, 3484.0], [8.8, 3488.0], [8.9, 3489.0], [9.0, 3505.0], [9.1, 3531.0], [9.2, 3548.0], [9.3, 3555.0], [9.4, 3607.0], [9.5, 3632.0], [9.6, 3639.0], [9.7, 3658.0], [9.8, 3689.0], [9.9, 3695.0], [10.0, 3702.0], [10.1, 3719.0], [10.2, 3730.0], [10.3, 3734.0], [10.4, 3748.0], [10.5, 3762.0], [10.6, 3766.0], [10.7, 3770.0], [10.8, 3776.0], [10.9, 3777.0], [11.0, 3781.0], [11.1, 3783.0], [11.2, 3797.0], [11.3, 3809.0], [11.4, 3810.0], [11.5, 3810.0], [11.6, 3827.0], [11.7, 3836.0], [11.8, 3838.0], [11.9, 3840.0], [12.0, 3841.0], [12.1, 3848.0], [12.2, 3848.0], [12.3, 3849.0], [12.4, 3853.0], [12.5, 3854.0], [12.6, 3865.0], [12.7, 3878.0], [12.8, 3889.0], [12.9, 3890.0], [13.0, 3904.0], [13.1, 3913.0], [13.2, 3913.0], [13.3, 3919.0], [13.4, 3926.0], [13.5, 3926.0], [13.6, 3928.0], [13.7, 3932.0], [13.8, 3937.0], [13.9, 3938.0], [14.0, 3958.0], [14.1, 3961.0], [14.2, 3964.0], [14.3, 3972.0], [14.4, 3983.0], [14.5, 3986.0], [14.6, 3987.0], [14.7, 3994.0], [14.8, 3997.0], [14.9, 4004.0], [15.0, 4019.0], [15.1, 4021.0], [15.2, 4027.0], [15.3, 4037.0], [15.4, 4039.0], [15.5, 4042.0], [15.6, 4044.0], [15.7, 4048.0], [15.8, 4052.0], [15.9, 4057.0], [16.0, 4062.0], [16.1, 4063.0], [16.2, 4069.0], [16.3, 4073.0], [16.4, 4079.0], [16.5, 4084.0], [16.6, 4088.0], [16.7, 4088.0], [16.8, 4089.0], [16.9, 4091.0], [17.0, 4092.0], [17.1, 4098.0], [17.2, 4099.0], [17.3, 4100.0], [17.4, 4101.0], [17.5, 4102.0], [17.6, 4102.0], [17.7, 4103.0], [17.8, 4104.0], [17.9, 4105.0], [18.0, 4107.0], [18.1, 4114.0], [18.2, 4115.0], [18.3, 4116.0], [18.4, 4118.0], [18.5, 4123.0], [18.6, 4125.0], [18.7, 4125.0], [18.8, 4127.0], [18.9, 4129.0], [19.0, 4131.0], [19.1, 4135.0], [19.2, 4138.0], [19.3, 4139.0], [19.4, 4144.0], [19.5, 4150.0], [19.6, 4153.0], [19.7, 4153.0], [19.8, 4153.0], [19.9, 4153.0], [20.0, 4155.0], [20.1, 4162.0], [20.2, 4163.0], [20.3, 4165.0], [20.4, 4170.0], [20.5, 4172.0], [20.6, 4173.0], [20.7, 4175.0], [20.8, 4176.0], [20.9, 4177.0], [21.0, 4177.0], [21.1, 4177.0], [21.2, 4180.0], [21.3, 4184.0], [21.4, 4187.0], [21.5, 4189.0], [21.6, 4189.0], [21.7, 4193.0], [21.8, 4195.0], [21.9, 4197.0], [22.0, 4199.0], [22.1, 4203.0], [22.2, 4206.0], [22.3, 4212.0], [22.4, 4220.0], [22.5, 4230.0], [22.6, 4237.0], [22.7, 4239.0], [22.8, 4245.0], [22.9, 4246.0], [23.0, 4248.0], [23.1, 4262.0], [23.2, 4266.0], [23.3, 4270.0], [23.4, 4271.0], [23.5, 4275.0], [23.6, 4277.0], [23.7, 4284.0], [23.8, 4290.0], [23.9, 4293.0], [24.0, 4298.0], [24.1, 4299.0], [24.2, 4305.0], [24.3, 4306.0], [24.4, 4309.0], [24.5, 4311.0], [24.6, 4315.0], [24.7, 4316.0], [24.8, 4317.0], [24.9, 4321.0], [25.0, 4321.0], [25.1, 4327.0], [25.2, 4331.0], [25.3, 4333.0], [25.4, 4337.0], [25.5, 4341.0], [25.6, 4343.0], [25.7, 4346.0], [25.8, 4347.0], [25.9, 4347.0], [26.0, 4350.0], [26.1, 4354.0], [26.2, 4354.0], [26.3, 4355.0], [26.4, 4355.0], [26.5, 4355.0], [26.6, 4356.0], [26.7, 4356.0], [26.8, 4356.0], [26.9, 4357.0], [27.0, 4359.0], [27.1, 4359.0], [27.2, 4365.0], [27.3, 4367.0], [27.4, 4373.0], [27.5, 4375.0], [27.6, 4376.0], [27.7, 4377.0], [27.8, 4390.0], [27.9, 4392.0], [28.0, 4400.0], [28.1, 4401.0], [28.2, 4404.0], [28.3, 4405.0], [28.4, 4407.0], [28.5, 4408.0], [28.6, 4409.0], [28.7, 4410.0], [28.8, 4411.0], [28.9, 4413.0], [29.0, 4414.0], [29.1, 4415.0], [29.2, 4416.0], [29.3, 4418.0], [29.4, 4421.0], [29.5, 4426.0], [29.6, 4426.0], [29.7, 4427.0], [29.8, 4431.0], [29.9, 4431.0], [30.0, 4434.0], [30.1, 4436.0], [30.2, 4438.0], [30.3, 4443.0], [30.4, 4445.0], [30.5, 4447.0], [30.6, 4447.0], [30.7, 4448.0], [30.8, 4448.0], [30.9, 4449.0], [31.0, 4449.0], [31.1, 4450.0], [31.2, 4455.0], [31.3, 4460.0], [31.4, 4461.0], [31.5, 4463.0], [31.6, 4464.0], [31.7, 4464.0], [31.8, 4466.0], [31.9, 4472.0], [32.0, 4473.0], [32.1, 4473.0], [32.2, 4478.0], [32.3, 4478.0], [32.4, 4479.0], [32.5, 4481.0], [32.6, 4483.0], [32.7, 4484.0], [32.8, 4484.0], [32.9, 4486.0], [33.0, 4486.0], [33.1, 4488.0], [33.2, 4488.0], [33.3, 4489.0], [33.4, 4491.0], [33.5, 4492.0], [33.6, 4493.0], [33.7, 4493.0], [33.8, 4494.0], [33.9, 4496.0], [34.0, 4496.0], [34.1, 4497.0], [34.2, 4499.0], [34.3, 4499.0], [34.4, 4500.0], [34.5, 4501.0], [34.6, 4501.0], [34.7, 4502.0], [34.8, 4504.0], [34.9, 4505.0], [35.0, 4505.0], [35.1, 4508.0], [35.2, 4508.0], [35.3, 4509.0], [35.4, 4510.0], [35.5, 4512.0], [35.6, 4513.0], [35.7, 4513.0], [35.8, 4517.0], [35.9, 4520.0], [36.0, 4522.0], [36.1, 4522.0], [36.2, 4525.0], [36.3, 4526.0], [36.4, 4527.0], [36.5, 4530.0], [36.6, 4535.0], [36.7, 4535.0], [36.8, 4537.0], [36.9, 4537.0], [37.0, 4538.0], [37.1, 4539.0], [37.2, 4539.0], [37.3, 4540.0], [37.4, 4540.0], [37.5, 4541.0], [37.6, 4543.0], [37.7, 4544.0], [37.8, 4544.0], [37.9, 4548.0], [38.0, 4550.0], [38.1, 4550.0], [38.2, 4550.0], [38.3, 4551.0], [38.4, 4556.0], [38.5, 4558.0], [38.6, 4559.0], [38.7, 4562.0], [38.8, 4563.0], [38.9, 4564.0], [39.0, 4566.0], [39.1, 4567.0], [39.2, 4568.0], [39.3, 4569.0], [39.4, 4570.0], [39.5, 4570.0], [39.6, 4571.0], [39.7, 4572.0], [39.8, 4575.0], [39.9, 4575.0], [40.0, 4576.0], [40.1, 4577.0], [40.2, 4578.0], [40.3, 4579.0], [40.4, 4580.0], [40.5, 4583.0], [40.6, 4583.0], [40.7, 4591.0], [40.8, 4592.0], [40.9, 4594.0], [41.0, 4596.0], [41.1, 4599.0], [41.2, 4599.0], [41.3, 4602.0], [41.4, 4603.0], [41.5, 4603.0], [41.6, 4604.0], [41.7, 4607.0], [41.8, 4612.0], [41.9, 4613.0], [42.0, 4614.0], [42.1, 4615.0], [42.2, 4616.0], [42.3, 4616.0], [42.4, 4617.0], [42.5, 4618.0], [42.6, 4619.0], [42.7, 4619.0], [42.8, 4621.0], [42.9, 4622.0], [43.0, 4624.0], [43.1, 4624.0], [43.2, 4625.0], [43.3, 4627.0], [43.4, 4627.0], [43.5, 4627.0], [43.6, 4628.0], [43.7, 4628.0], [43.8, 4629.0], [43.9, 4630.0], [44.0, 4631.0], [44.1, 4631.0], [44.2, 4632.0], [44.3, 4636.0], [44.4, 4637.0], [44.5, 4638.0], [44.6, 4641.0], [44.7, 4641.0], [44.8, 4641.0], [44.9, 4641.0], [45.0, 4643.0], [45.1, 4644.0], [45.2, 4645.0], [45.3, 4645.0], [45.4, 4645.0], [45.5, 4648.0], [45.6, 4649.0], [45.7, 4650.0], [45.8, 4650.0], [45.9, 4652.0], [46.0, 4652.0], [46.1, 4654.0], [46.2, 4655.0], [46.3, 4656.0], [46.4, 4658.0], [46.5, 4659.0], [46.6, 4660.0], [46.7, 4661.0], [46.8, 4662.0], [46.9, 4663.0], [47.0, 4664.0], [47.1, 4667.0], [47.2, 4668.0], [47.3, 4670.0], [47.4, 4670.0], [47.5, 4670.0], [47.6, 4673.0], [47.7, 4674.0], [47.8, 4675.0], [47.9, 4676.0], [48.0, 4679.0], [48.1, 4681.0], [48.2, 4683.0], [48.3, 4683.0], [48.4, 4684.0], [48.5, 4684.0], [48.6, 4685.0], [48.7, 4686.0], [48.8, 4686.0], [48.9, 4687.0], [49.0, 4688.0], [49.1, 4689.0], [49.2, 4689.0], [49.3, 4690.0], [49.4, 4690.0], [49.5, 4691.0], [49.6, 4691.0], [49.7, 4692.0], [49.8, 4693.0], [49.9, 4696.0], [50.0, 4699.0], [50.1, 4699.0], [50.2, 4700.0], [50.3, 4700.0], [50.4, 4701.0], [50.5, 4701.0], [50.6, 4704.0], [50.7, 4705.0], [50.8, 4706.0], [50.9, 4707.0], [51.0, 4708.0], [51.1, 4709.0], [51.2, 4710.0], [51.3, 4710.0], [51.4, 4710.0], [51.5, 4711.0], [51.6, 4712.0], [51.7, 4712.0], [51.8, 4713.0], [51.9, 4714.0], [52.0, 4716.0], [52.1, 4716.0], [52.2, 4717.0], [52.3, 4718.0], [52.4, 4719.0], [52.5, 4719.0], [52.6, 4719.0], [52.7, 4720.0], [52.8, 4720.0], [52.9, 4721.0], [53.0, 4721.0], [53.1, 4723.0], [53.2, 4724.0], [53.3, 4727.0], [53.4, 4727.0], [53.5, 4727.0], [53.6, 4727.0], [53.7, 4728.0], [53.8, 4729.0], [53.9, 4730.0], [54.0, 4733.0], [54.1, 4735.0], [54.2, 4736.0], [54.3, 4736.0], [54.4, 4737.0], [54.5, 4739.0], [54.6, 4741.0], [54.7, 4742.0], [54.8, 4744.0], [54.9, 4744.0], [55.0, 4746.0], [55.1, 4747.0], [55.2, 4748.0], [55.3, 4750.0], [55.4, 4750.0], [55.5, 4751.0], [55.6, 4752.0], [55.7, 4753.0], [55.8, 4755.0], [55.9, 4755.0], [56.0, 4756.0], [56.1, 4757.0], [56.2, 4758.0], [56.3, 4761.0], [56.4, 4762.0], [56.5, 4762.0], [56.6, 4765.0], [56.7, 4766.0], [56.8, 4767.0], [56.9, 4767.0], [57.0, 4769.0], [57.1, 4770.0], [57.2, 4771.0], [57.3, 4771.0], [57.4, 4773.0], [57.5, 4773.0], [57.6, 4774.0], [57.7, 4774.0], [57.8, 4775.0], [57.9, 4776.0], [58.0, 4776.0], [58.1, 4777.0], [58.2, 4778.0], [58.3, 4778.0], [58.4, 4779.0], [58.5, 4781.0], [58.6, 4784.0], [58.7, 4787.0], [58.8, 4787.0], [58.9, 4788.0], [59.0, 4789.0], [59.1, 4791.0], [59.2, 4791.0], [59.3, 4795.0], [59.4, 4796.0], [59.5, 4797.0], [59.6, 4799.0], [59.7, 4800.0], [59.8, 4803.0], [59.9, 4804.0], [60.0, 4806.0], [60.1, 4809.0], [60.2, 4809.0], [60.3, 4809.0], [60.4, 4810.0], [60.5, 4811.0], [60.6, 4814.0], [60.7, 4814.0], [60.8, 4814.0], [60.9, 4815.0], [61.0, 4817.0], [61.1, 4819.0], [61.2, 4819.0], [61.3, 4819.0], [61.4, 4820.0], [61.5, 4823.0], [61.6, 4824.0], [61.7, 4827.0], [61.8, 4828.0], [61.9, 4829.0], [62.0, 4829.0], [62.1, 4832.0], [62.2, 4833.0], [62.3, 4834.0], [62.4, 4835.0], [62.5, 4836.0], [62.6, 4840.0], [62.7, 4840.0], [62.8, 4842.0], [62.9, 4842.0], [63.0, 4842.0], [63.1, 4843.0], [63.2, 4843.0], [63.3, 4843.0], [63.4, 4844.0], [63.5, 4845.0], [63.6, 4845.0], [63.7, 4846.0], [63.8, 4848.0], [63.9, 4849.0], [64.0, 4849.0], [64.1, 4850.0], [64.2, 4852.0], [64.3, 4853.0], [64.4, 4855.0], [64.5, 4856.0], [64.6, 4857.0], [64.7, 4858.0], [64.8, 4859.0], [64.9, 4860.0], [65.0, 4861.0], [65.1, 4863.0], [65.2, 4864.0], [65.3, 4864.0], [65.4, 4864.0], [65.5, 4865.0], [65.6, 4866.0], [65.7, 4869.0], [65.8, 4873.0], [65.9, 4875.0], [66.0, 4876.0], [66.1, 4876.0], [66.2, 4877.0], [66.3, 4878.0], [66.4, 4878.0], [66.5, 4879.0], [66.6, 4880.0], [66.7, 4880.0], [66.8, 4882.0], [66.9, 4886.0], [67.0, 4886.0], [67.1, 4890.0], [67.2, 4890.0], [67.3, 4891.0], [67.4, 4892.0], [67.5, 4893.0], [67.6, 4893.0], [67.7, 4895.0], [67.8, 4895.0], [67.9, 4895.0], [68.0, 4896.0], [68.1, 4897.0], [68.2, 4898.0], [68.3, 4899.0], [68.4, 4901.0], [68.5, 4903.0], [68.6, 4904.0], [68.7, 4904.0], [68.8, 4905.0], [68.9, 4905.0], [69.0, 4906.0], [69.1, 4907.0], [69.2, 4907.0], [69.3, 4908.0], [69.4, 4909.0], [69.5, 4912.0], [69.6, 4914.0], [69.7, 4914.0], [69.8, 4914.0], [69.9, 4915.0], [70.0, 4918.0], [70.1, 4918.0], [70.2, 4919.0], [70.3, 4919.0], [70.4, 4921.0], [70.5, 4921.0], [70.6, 4921.0], [70.7, 4922.0], [70.8, 4922.0], [70.9, 4923.0], [71.0, 4924.0], [71.1, 4925.0], [71.2, 4925.0], [71.3, 4926.0], [71.4, 4927.0], [71.5, 4928.0], [71.6, 4929.0], [71.7, 4929.0], [71.8, 4931.0], [71.9, 4932.0], [72.0, 4934.0], [72.1, 4934.0], [72.2, 4935.0], [72.3, 4935.0], [72.4, 4936.0], [72.5, 4938.0], [72.6, 4938.0], [72.7, 4940.0], [72.8, 4941.0], [72.9, 4941.0], [73.0, 4942.0], [73.1, 4943.0], [73.2, 4944.0], [73.3, 4944.0], [73.4, 4945.0], [73.5, 4946.0], [73.6, 4948.0], [73.7, 4950.0], [73.8, 4955.0], [73.9, 4956.0], [74.0, 4956.0], [74.1, 4959.0], [74.2, 4961.0], [74.3, 4964.0], [74.4, 4965.0], [74.5, 4965.0], [74.6, 4969.0], [74.7, 4969.0], [74.8, 4969.0], [74.9, 4969.0], [75.0, 4969.0], [75.1, 4970.0], [75.2, 4973.0], [75.3, 4974.0], [75.4, 4975.0], [75.5, 4977.0], [75.6, 4977.0], [75.7, 4978.0], [75.8, 4979.0], [75.9, 4980.0], [76.0, 4983.0], [76.1, 4986.0], [76.2, 4988.0], [76.3, 4990.0], [76.4, 4990.0], [76.5, 4990.0], [76.6, 4991.0], [76.7, 4992.0], [76.8, 4993.0], [76.9, 4993.0], [77.0, 4994.0], [77.1, 4995.0], [77.2, 4997.0], [77.3, 4997.0], [77.4, 5000.0], [77.5, 5003.0], [77.6, 5010.0], [77.7, 5011.0], [77.8, 5016.0], [77.9, 5016.0], [78.0, 5016.0], [78.1, 5017.0], [78.2, 5020.0], [78.3, 5022.0], [78.4, 5024.0], [78.5, 5024.0], [78.6, 5025.0], [78.7, 5026.0], [78.8, 5026.0], [78.9, 5028.0], [79.0, 5032.0], [79.1, 5032.0], [79.2, 5034.0], [79.3, 5036.0], [79.4, 5036.0], [79.5, 5038.0], [79.6, 5039.0], [79.7, 5041.0], [79.8, 5041.0], [79.9, 5041.0], [80.0, 5042.0], [80.1, 5045.0], [80.2, 5046.0], [80.3, 5046.0], [80.4, 5048.0], [80.5, 5050.0], [80.6, 5050.0], [80.7, 5050.0], [80.8, 5051.0], [80.9, 5053.0], [81.0, 5054.0], [81.1, 5055.0], [81.2, 5058.0], [81.3, 5059.0], [81.4, 5059.0], [81.5, 5060.0], [81.6, 5062.0], [81.7, 5063.0], [81.8, 5066.0], [81.9, 5068.0], [82.0, 5068.0], [82.1, 5069.0], [82.2, 5073.0], [82.3, 5074.0], [82.4, 5075.0], [82.5, 5080.0], [82.6, 5089.0], [82.7, 5089.0], [82.8, 5089.0], [82.9, 5091.0], [83.0, 5091.0], [83.1, 5093.0], [83.2, 5097.0], [83.3, 5097.0], [83.4, 5098.0], [83.5, 5098.0], [83.6, 5098.0], [83.7, 5106.0], [83.8, 5109.0], [83.9, 5111.0], [84.0, 5115.0], [84.1, 5115.0], [84.2, 5115.0], [84.3, 5115.0], [84.4, 5121.0], [84.5, 5121.0], [84.6, 5121.0], [84.7, 5123.0], [84.8, 5123.0], [84.9, 5124.0], [85.0, 5128.0], [85.1, 5130.0], [85.2, 5134.0], [85.3, 5135.0], [85.4, 5140.0], [85.5, 5144.0], [85.6, 5146.0], [85.7, 5148.0], [85.8, 5148.0], [85.9, 5149.0], [86.0, 5149.0], [86.1, 5151.0], [86.2, 5155.0], [86.3, 5157.0], [86.4, 5163.0], [86.5, 5164.0], [86.6, 5167.0], [86.7, 5172.0], [86.8, 5173.0], [86.9, 5178.0], [87.0, 5181.0], [87.1, 5195.0], [87.2, 5195.0], [87.3, 5199.0], [87.4, 5202.0], [87.5, 5204.0], [87.6, 5207.0], [87.7, 5207.0], [87.8, 5209.0], [87.9, 5209.0], [88.0, 5212.0], [88.1, 5218.0], [88.2, 5219.0], [88.3, 5223.0], [88.4, 5224.0], [88.5, 5229.0], [88.6, 5231.0], [88.7, 5236.0], [88.8, 5238.0], [88.9, 5239.0], [89.0, 5240.0], [89.1, 5240.0], [89.2, 5241.0], [89.3, 5245.0], [89.4, 5248.0], [89.5, 5251.0], [89.6, 5259.0], [89.7, 5263.0], [89.8, 5266.0], [89.9, 5267.0], [90.0, 5270.0], [90.1, 5272.0], [90.2, 5272.0], [90.3, 5275.0], [90.4, 5276.0], [90.5, 5283.0], [90.6, 5283.0], [90.7, 5283.0], [90.8, 5290.0], [90.9, 5293.0], [91.0, 5299.0], [91.1, 5300.0], [91.2, 5306.0], [91.3, 5319.0], [91.4, 5320.0], [91.5, 5322.0], [91.6, 5322.0], [91.7, 5326.0], [91.8, 5328.0], [91.9, 5330.0], [92.0, 5337.0], [92.1, 5338.0], [92.2, 5339.0], [92.3, 5340.0], [92.4, 5348.0], [92.5, 5362.0], [92.6, 5363.0], [92.7, 5385.0], [92.8, 5387.0], [92.9, 5390.0], [93.0, 5408.0], [93.1, 5410.0], [93.2, 5415.0], [93.3, 5418.0], [93.4, 5432.0], [93.5, 5433.0], [93.6, 5436.0], [93.7, 5448.0], [93.8, 5459.0], [93.9, 5484.0], [94.0, 5491.0], [94.1, 5500.0], [94.2, 5515.0], [94.3, 5542.0], [94.4, 5605.0], [94.5, 5664.0], [94.6, 5670.0], [94.7, 5701.0], [94.8, 5712.0], [94.9, 5727.0], [95.0, 5730.0], [95.1, 5764.0], [95.2, 5772.0], [95.3, 5775.0], [95.4, 5786.0], [95.5, 5816.0], [95.6, 5820.0], [95.7, 5826.0], [95.8, 5830.0], [95.9, 5837.0], [96.0, 5859.0], [96.1, 5864.0], [96.2, 5930.0], [96.3, 5948.0], [96.4, 5973.0], [96.5, 5981.0], [96.6, 6095.0], [96.7, 6119.0], [96.8, 6148.0], [96.9, 6175.0], [97.0, 6189.0], [97.1, 6227.0], [97.2, 6369.0], [97.3, 6378.0], [97.4, 6403.0], [97.5, 6419.0], [97.6, 6455.0], [97.7, 6505.0], [97.8, 6531.0], [97.9, 6548.0], [98.0, 6606.0], [98.1, 6613.0], [98.2, 6614.0], [98.3, 6616.0], [98.4, 6624.0], [98.5, 6633.0], [98.6, 6743.0], [98.7, 6763.0], [98.8, 6814.0], [98.9, 6814.0], [99.0, 6836.0], [99.1, 6938.0], [99.2, 7101.0], [99.3, 7132.0], [99.4, 7285.0], [99.5, 7331.0], [99.6, 7920.0], [99.7, 7955.0], [99.8, 8097.0], [99.9, 8263.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 10.0], [0.1, 10.0], [0.2, 14.0], [0.3, 14.0], [0.4, 16.0], [0.5, 16.0], [0.6, 16.0], [0.7, 16.0], [0.8, 16.0], [0.9, 17.0], [1.0, 17.0], [1.1, 18.0], [1.2, 18.0], [1.3, 18.0], [1.4, 18.0], [1.5, 18.0], [1.6, 19.0], [1.7, 19.0], [1.8, 20.0], [1.9, 20.0], [2.0, 20.0], [2.1, 23.0], [2.2, 25.0], [2.3, 25.0], [2.4, 25.0], [2.5, 25.0], [2.6, 26.0], [2.7, 27.0], [2.8, 27.0], [2.9, 28.0], [3.0, 29.0], [3.1, 30.0], [3.2, 31.0], [3.3, 31.0], [3.4, 32.0], [3.5, 34.0], [3.6, 34.0], [3.7, 35.0], [3.8, 36.0], [3.9, 36.0], [4.0, 36.0], [4.1, 36.0], [4.2, 36.0], [4.3, 37.0], [4.4, 38.0], [4.5, 38.0], [4.6, 38.0], [4.7, 39.0], [4.8, 39.0], [4.9, 40.0], [5.0, 40.0], [5.1, 40.0], [5.2, 42.0], [5.3, 42.0], [5.4, 43.0], [5.5, 43.0], [5.6, 43.0], [5.7, 44.0], [5.8, 44.0], [5.9, 44.0], [6.0, 44.0], [6.1, 44.0], [6.2, 45.0], [6.3, 45.0], [6.4, 45.0], [6.5, 45.0], [6.6, 45.0], [6.7, 45.0], [6.8, 46.0], [6.9, 46.0], [7.0, 46.0], [7.1, 46.0], [7.2, 47.0], [7.3, 47.0], [7.4, 47.0], [7.5, 48.0], [7.6, 48.0], [7.7, 48.0], [7.8, 49.0], [7.9, 50.0], [8.0, 50.0], [8.1, 50.0], [8.2, 51.0], [8.3, 51.0], [8.4, 52.0], [8.5, 52.0], [8.6, 52.0], [8.7, 52.0], [8.8, 52.0], [8.9, 53.0], [9.0, 53.0], [9.1, 53.0], [9.2, 53.0], [9.3, 53.0], [9.4, 53.0], [9.5, 54.0], [9.6, 55.0], [9.7, 55.0], [9.8, 55.0], [9.9, 56.0], [10.0, 56.0], [10.1, 56.0], [10.2, 56.0], [10.3, 56.0], [10.4, 57.0], [10.5, 58.0], [10.6, 58.0], [10.7, 58.0], [10.8, 58.0], [10.9, 59.0], [11.0, 59.0], [11.1, 59.0], [11.2, 59.0], [11.3, 60.0], [11.4, 60.0], [11.5, 60.0], [11.6, 60.0], [11.7, 60.0], [11.8, 60.0], [11.9, 61.0], [12.0, 61.0], [12.1, 61.0], [12.2, 61.0], [12.3, 62.0], [12.4, 62.0], [12.5, 62.0], [12.6, 62.0], [12.7, 62.0], [12.8, 63.0], [12.9, 63.0], [13.0, 63.0], [13.1, 63.0], [13.2, 63.0], [13.3, 64.0], [13.4, 64.0], [13.5, 64.0], [13.6, 64.0], [13.7, 64.0], [13.8, 64.0], [13.9, 65.0], [14.0, 65.0], [14.1, 65.0], [14.2, 66.0], [14.3, 66.0], [14.4, 66.0], [14.5, 66.0], [14.6, 66.0], [14.7, 67.0], [14.8, 67.0], [14.9, 67.0], [15.0, 67.0], [15.1, 68.0], [15.2, 68.0], [15.3, 68.0], [15.4, 68.0], [15.5, 69.0], [15.6, 69.0], [15.7, 69.0], [15.8, 69.0], [15.9, 70.0], [16.0, 71.0], [16.1, 71.0], [16.2, 71.0], [16.3, 71.0], [16.4, 71.0], [16.5, 71.0], [16.6, 71.0], [16.7, 71.0], [16.8, 71.0], [16.9, 72.0], [17.0, 72.0], [17.1, 72.0], [17.2, 72.0], [17.3, 73.0], [17.4, 73.0], [17.5, 73.0], [17.6, 73.0], [17.7, 73.0], [17.8, 73.0], [17.9, 74.0], [18.0, 74.0], [18.1, 74.0], [18.2, 74.0], [18.3, 74.0], [18.4, 74.0], [18.5, 74.0], [18.6, 74.0], [18.7, 74.0], [18.8, 74.0], [18.9, 75.0], [19.0, 75.0], [19.1, 75.0], [19.2, 75.0], [19.3, 75.0], [19.4, 76.0], [19.5, 76.0], [19.6, 76.0], [19.7, 76.0], [19.8, 76.0], [19.9, 77.0], [20.0, 77.0], [20.1, 77.0], [20.2, 77.0], [20.3, 77.0], [20.4, 77.0], [20.5, 79.0], [20.6, 79.0], [20.7, 79.0], [20.8, 79.0], [20.9, 79.0], [21.0, 79.0], [21.1, 79.0], [21.2, 79.0], [21.3, 79.0], [21.4, 79.0], [21.5, 79.0], [21.6, 80.0], [21.7, 80.0], [21.8, 80.0], [21.9, 80.0], [22.0, 80.0], [22.1, 80.0], [22.2, 80.0], [22.3, 81.0], [22.4, 81.0], [22.5, 81.0], [22.6, 81.0], [22.7, 82.0], [22.8, 82.0], [22.9, 82.0], [23.0, 82.0], [23.1, 82.0], [23.2, 82.0], [23.3, 82.0], [23.4, 82.0], [23.5, 83.0], [23.6, 83.0], [23.7, 83.0], [23.8, 83.0], [23.9, 83.0], [24.0, 84.0], [24.1, 84.0], [24.2, 84.0], [24.3, 85.0], [24.4, 85.0], [24.5, 85.0], [24.6, 85.0], [24.7, 85.0], [24.8, 85.0], [24.9, 85.0], [25.0, 86.0], [25.1, 86.0], [25.2, 86.0], [25.3, 86.0], [25.4, 87.0], [25.5, 87.0], [25.6, 87.0], [25.7, 87.0], [25.8, 87.0], [25.9, 87.0], [26.0, 87.0], [26.1, 88.0], [26.2, 88.0], [26.3, 88.0], [26.4, 88.0], [26.5, 88.0], [26.6, 88.0], [26.7, 88.0], [26.8, 88.0], [26.9, 88.0], [27.0, 88.0], [27.1, 88.0], [27.2, 88.0], [27.3, 88.0], [27.4, 89.0], [27.5, 89.0], [27.6, 89.0], [27.7, 89.0], [27.8, 89.0], [27.9, 89.0], [28.0, 89.0], [28.1, 89.0], [28.2, 90.0], [28.3, 90.0], [28.4, 90.0], [28.5, 90.0], [28.6, 90.0], [28.7, 90.0], [28.8, 90.0], [28.9, 90.0], [29.0, 90.0], [29.1, 90.0], [29.2, 90.0], [29.3, 91.0], [29.4, 91.0], [29.5, 91.0], [29.6, 91.0], [29.7, 91.0], [29.8, 91.0], [29.9, 91.0], [30.0, 92.0], [30.1, 92.0], [30.2, 92.0], [30.3, 93.0], [30.4, 93.0], [30.5, 93.0], [30.6, 93.0], [30.7, 93.0], [30.8, 93.0], [30.9, 93.0], [31.0, 93.0], [31.1, 94.0], [31.2, 94.0], [31.3, 94.0], [31.4, 94.0], [31.5, 94.0], [31.6, 94.0], [31.7, 94.0], [31.8, 94.0], [31.9, 95.0], [32.0, 95.0], [32.1, 95.0], [32.2, 95.0], [32.3, 95.0], [32.4, 95.0], [32.5, 95.0], [32.6, 95.0], [32.7, 95.0], [32.8, 95.0], [32.9, 96.0], [33.0, 96.0], [33.1, 96.0], [33.2, 96.0], [33.3, 96.0], [33.4, 97.0], [33.5, 97.0], [33.6, 97.0], [33.7, 97.0], [33.8, 97.0], [33.9, 97.0], [34.0, 97.0], [34.1, 97.0], [34.2, 98.0], [34.3, 98.0], [34.4, 98.0], [34.5, 99.0], [34.6, 99.0], [34.7, 99.0], [34.8, 99.0], [34.9, 99.0], [35.0, 99.0], [35.1, 99.0], [35.2, 99.0], [35.3, 99.0], [35.4, 99.0], [35.5, 99.0], [35.6, 99.0], [35.7, 99.0], [35.8, 99.0], [35.9, 100.0], [36.0, 100.0], [36.1, 100.0], [36.2, 100.0], [36.3, 100.0], [36.4, 100.0], [36.5, 100.0], [36.6, 100.0], [36.7, 100.0], [36.8, 100.0], [36.9, 100.0], [37.0, 101.0], [37.1, 101.0], [37.2, 101.0], [37.3, 101.0], [37.4, 101.0], [37.5, 101.0], [37.6, 101.0], [37.7, 101.0], [37.8, 101.0], [37.9, 101.0], [38.0, 101.0], [38.1, 102.0], [38.2, 102.0], [38.3, 102.0], [38.4, 102.0], [38.5, 102.0], [38.6, 102.0], [38.7, 102.0], [38.8, 102.0], [38.9, 102.0], [39.0, 102.0], [39.1, 102.0], [39.2, 102.0], [39.3, 102.0], [39.4, 103.0], [39.5, 103.0], [39.6, 103.0], [39.7, 103.0], [39.8, 103.0], [39.9, 103.0], [40.0, 103.0], [40.1, 103.0], [40.2, 104.0], [40.3, 104.0], [40.4, 104.0], [40.5, 104.0], [40.6, 104.0], [40.7, 104.0], [40.8, 104.0], [40.9, 104.0], [41.0, 104.0], [41.1, 104.0], [41.2, 104.0], [41.3, 104.0], [41.4, 104.0], [41.5, 105.0], [41.6, 105.0], [41.7, 105.0], [41.8, 105.0], [41.9, 105.0], [42.0, 105.0], [42.1, 105.0], [42.2, 105.0], [42.3, 105.0], [42.4, 105.0], [42.5, 106.0], [42.6, 106.0], [42.7, 106.0], [42.8, 106.0], [42.9, 106.0], [43.0, 106.0], [43.1, 106.0], [43.2, 106.0], [43.3, 106.0], [43.4, 106.0], [43.5, 106.0], [43.6, 106.0], [43.7, 106.0], [43.8, 106.0], [43.9, 107.0], [44.0, 107.0], [44.1, 107.0], [44.2, 107.0], [44.3, 107.0], [44.4, 107.0], [44.5, 107.0], [44.6, 107.0], [44.7, 108.0], [44.8, 108.0], [44.9, 108.0], [45.0, 108.0], [45.1, 108.0], [45.2, 108.0], [45.3, 108.0], [45.4, 108.0], [45.5, 108.0], [45.6, 108.0], [45.7, 108.0], [45.8, 108.0], [45.9, 108.0], [46.0, 108.0], [46.1, 109.0], [46.2, 109.0], [46.3, 109.0], [46.4, 109.0], [46.5, 109.0], [46.6, 109.0], [46.7, 109.0], [46.8, 109.0], [46.9, 109.0], [47.0, 110.0], [47.1, 110.0], [47.2, 110.0], [47.3, 110.0], [47.4, 110.0], [47.5, 110.0], [47.6, 110.0], [47.7, 111.0], [47.8, 111.0], [47.9, 111.0], [48.0, 111.0], [48.1, 111.0], [48.2, 111.0], [48.3, 111.0], [48.4, 111.0], [48.5, 111.0], [48.6, 112.0], [48.7, 112.0], [48.8, 112.0], [48.9, 112.0], [49.0, 112.0], [49.1, 112.0], [49.2, 112.0], [49.3, 112.0], [49.4, 112.0], [49.5, 112.0], [49.6, 113.0], [49.7, 113.0], [49.8, 113.0], [49.9, 113.0], [50.0, 113.0], [50.1, 113.0], [50.2, 113.0], [50.3, 113.0], [50.4, 113.0], [50.5, 114.0], [50.6, 114.0], [50.7, 114.0], [50.8, 114.0], [50.9, 114.0], [51.0, 114.0], [51.1, 114.0], [51.2, 114.0], [51.3, 114.0], [51.4, 114.0], [51.5, 114.0], [51.6, 114.0], [51.7, 114.0], [51.8, 115.0], [51.9, 115.0], [52.0, 115.0], [52.1, 115.0], [52.2, 115.0], [52.3, 115.0], [52.4, 115.0], [52.5, 115.0], [52.6, 115.0], [52.7, 115.0], [52.8, 115.0], [52.9, 116.0], [53.0, 116.0], [53.1, 116.0], [53.2, 116.0], [53.3, 116.0], [53.4, 116.0], [53.5, 116.0], [53.6, 116.0], [53.7, 117.0], [53.8, 117.0], [53.9, 117.0], [54.0, 117.0], [54.1, 117.0], [54.2, 117.0], [54.3, 117.0], [54.4, 117.0], [54.5, 118.0], [54.6, 118.0], [54.7, 118.0], [54.8, 118.0], [54.9, 118.0], [55.0, 118.0], [55.1, 118.0], [55.2, 118.0], [55.3, 118.0], [55.4, 118.0], [55.5, 118.0], [55.6, 118.0], [55.7, 118.0], [55.8, 118.0], [55.9, 118.0], [56.0, 118.0], [56.1, 119.0], [56.2, 119.0], [56.3, 119.0], [56.4, 119.0], [56.5, 119.0], [56.6, 119.0], [56.7, 119.0], [56.8, 119.0], [56.9, 119.0], [57.0, 119.0], [57.1, 120.0], [57.2, 120.0], [57.3, 120.0], [57.4, 120.0], [57.5, 120.0], [57.6, 120.0], [57.7, 120.0], [57.8, 120.0], [57.9, 120.0], [58.0, 120.0], [58.1, 120.0], [58.2, 121.0], [58.3, 121.0], [58.4, 121.0], [58.5, 121.0], [58.6, 121.0], [58.7, 121.0], [58.8, 121.0], [58.9, 121.0], [59.0, 122.0], [59.1, 122.0], [59.2, 122.0], [59.3, 122.0], [59.4, 122.0], [59.5, 122.0], [59.6, 122.0], [59.7, 122.0], [59.8, 123.0], [59.9, 123.0], [60.0, 123.0], [60.1, 123.0], [60.2, 123.0], [60.3, 123.0], [60.4, 123.0], [60.5, 123.0], [60.6, 123.0], [60.7, 123.0], [60.8, 123.0], [60.9, 124.0], [61.0, 124.0], [61.1, 124.0], [61.2, 124.0], [61.3, 124.0], [61.4, 124.0], [61.5, 124.0], [61.6, 124.0], [61.7, 124.0], [61.8, 124.0], [61.9, 124.0], [62.0, 125.0], [62.1, 125.0], [62.2, 125.0], [62.3, 125.0], [62.4, 125.0], [62.5, 125.0], [62.6, 125.0], [62.7, 125.0], [62.8, 125.0], [62.9, 125.0], [63.0, 125.0], [63.1, 125.0], [63.2, 125.0], [63.3, 126.0], [63.4, 126.0], [63.5, 126.0], [63.6, 126.0], [63.7, 126.0], [63.8, 126.0], [63.9, 126.0], [64.0, 126.0], [64.1, 126.0], [64.2, 126.0], [64.3, 126.0], [64.4, 126.0], [64.5, 126.0], [64.6, 127.0], [64.7, 127.0], [64.8, 127.0], [64.9, 127.0], [65.0, 127.0], [65.1, 127.0], [65.2, 127.0], [65.3, 127.0], [65.4, 127.0], [65.5, 127.0], [65.6, 127.0], [65.7, 127.0], [65.8, 128.0], [65.9, 128.0], [66.0, 128.0], [66.1, 128.0], [66.2, 128.0], [66.3, 128.0], [66.4, 128.0], [66.5, 128.0], [66.6, 128.0], [66.7, 128.0], [66.8, 128.0], [66.9, 128.0], [67.0, 128.0], [67.1, 129.0], [67.2, 129.0], [67.3, 129.0], [67.4, 129.0], [67.5, 129.0], [67.6, 129.0], [67.7, 129.0], [67.8, 129.0], [67.9, 129.0], [68.0, 129.0], [68.1, 129.0], [68.2, 129.0], [68.3, 130.0], [68.4, 130.0], [68.5, 130.0], [68.6, 130.0], [68.7, 130.0], [68.8, 130.0], [68.9, 130.0], [69.0, 130.0], [69.1, 130.0], [69.2, 130.0], [69.3, 131.0], [69.4, 131.0], [69.5, 131.0], [69.6, 131.0], [69.7, 131.0], [69.8, 131.0], [69.9, 131.0], [70.0, 131.0], [70.1, 131.0], [70.2, 131.0], [70.3, 131.0], [70.4, 131.0], [70.5, 132.0], [70.6, 132.0], [70.7, 132.0], [70.8, 132.0], [70.9, 132.0], [71.0, 132.0], [71.1, 132.0], [71.2, 132.0], [71.3, 133.0], [71.4, 133.0], [71.5, 133.0], [71.6, 133.0], [71.7, 133.0], [71.8, 133.0], [71.9, 133.0], [72.0, 133.0], [72.1, 133.0], [72.2, 134.0], [72.3, 134.0], [72.4, 134.0], [72.5, 134.0], [72.6, 134.0], [72.7, 134.0], [72.8, 134.0], [72.9, 134.0], [73.0, 134.0], [73.1, 134.0], [73.2, 134.0], [73.3, 135.0], [73.4, 135.0], [73.5, 135.0], [73.6, 135.0], [73.7, 135.0], [73.8, 135.0], [73.9, 135.0], [74.0, 135.0], [74.1, 135.0], [74.2, 136.0], [74.3, 136.0], [74.4, 136.0], [74.5, 136.0], [74.6, 136.0], [74.7, 136.0], [74.8, 136.0], [74.9, 136.0], [75.0, 137.0], [75.1, 137.0], [75.2, 137.0], [75.3, 137.0], [75.4, 137.0], [75.5, 137.0], [75.6, 137.0], [75.7, 137.0], [75.8, 137.0], [75.9, 137.0], [76.0, 137.0], [76.1, 137.0], [76.2, 137.0], [76.3, 138.0], [76.4, 138.0], [76.5, 138.0], [76.6, 138.0], [76.7, 139.0], [76.8, 139.0], [76.9, 139.0], [77.0, 139.0], [77.1, 139.0], [77.2, 139.0], [77.3, 139.0], [77.4, 139.0], [77.5, 139.0], [77.6, 139.0], [77.7, 139.0], [77.8, 140.0], [77.9, 140.0], [78.0, 140.0], [78.1, 140.0], [78.2, 140.0], [78.3, 141.0], [78.4, 141.0], [78.5, 141.0], [78.6, 141.0], [78.7, 141.0], [78.8, 141.0], [78.9, 141.0], [79.0, 142.0], [79.1, 142.0], [79.2, 142.0], [79.3, 142.0], [79.4, 142.0], [79.5, 142.0], [79.6, 142.0], [79.7, 143.0], [79.8, 143.0], [79.9, 143.0], [80.0, 143.0], [80.1, 143.0], [80.2, 143.0], [80.3, 143.0], [80.4, 144.0], [80.5, 144.0], [80.6, 144.0], [80.7, 144.0], [80.8, 144.0], [80.9, 144.0], [81.0, 144.0], [81.1, 144.0], [81.2, 145.0], [81.3, 145.0], [81.4, 145.0], [81.5, 145.0], [81.6, 145.0], [81.7, 146.0], [81.8, 146.0], [81.9, 146.0], [82.0, 146.0], [82.1, 146.0], [82.2, 146.0], [82.3, 146.0], [82.4, 146.0], [82.5, 146.0], [82.6, 146.0], [82.7, 146.0], [82.8, 146.0], [82.9, 146.0], [83.0, 146.0], [83.1, 147.0], [83.2, 147.0], [83.3, 147.0], [83.4, 147.0], [83.5, 147.0], [83.6, 148.0], [83.7, 148.0], [83.8, 149.0], [83.9, 149.0], [84.0, 149.0], [84.1, 149.0], [84.2, 149.0], [84.3, 149.0], [84.4, 149.0], [84.5, 149.0], [84.6, 149.0], [84.7, 149.0], [84.8, 149.0], [84.9, 150.0], [85.0, 150.0], [85.1, 150.0], [85.2, 150.0], [85.3, 150.0], [85.4, 150.0], [85.5, 150.0], [85.6, 151.0], [85.7, 151.0], [85.8, 151.0], [85.9, 151.0], [86.0, 151.0], [86.1, 151.0], [86.2, 152.0], [86.3, 152.0], [86.4, 153.0], [86.5, 153.0], [86.6, 153.0], [86.7, 153.0], [86.8, 153.0], [86.9, 153.0], [87.0, 153.0], [87.1, 153.0], [87.2, 153.0], [87.3, 153.0], [87.4, 153.0], [87.5, 153.0], [87.6, 154.0], [87.7, 154.0], [87.8, 154.0], [87.9, 154.0], [88.0, 155.0], [88.1, 155.0], [88.2, 155.0], [88.3, 156.0], [88.4, 156.0], [88.5, 156.0], [88.6, 157.0], [88.7, 157.0], [88.8, 157.0], [88.9, 157.0], [89.0, 157.0], [89.1, 158.0], [89.2, 158.0], [89.3, 158.0], [89.4, 158.0], [89.5, 158.0], [89.6, 158.0], [89.7, 158.0], [89.8, 159.0], [89.9, 159.0], [90.0, 159.0], [90.1, 159.0], [90.2, 160.0], [90.3, 160.0], [90.4, 161.0], [90.5, 161.0], [90.6, 161.0], [90.7, 161.0], [90.8, 161.0], [90.9, 162.0], [91.0, 162.0], [91.1, 162.0], [91.2, 162.0], [91.3, 162.0], [91.4, 163.0], [91.5, 163.0], [91.6, 163.0], [91.7, 164.0], [91.8, 164.0], [91.9, 164.0], [92.0, 164.0], [92.1, 164.0], [92.2, 165.0], [92.3, 165.0], [92.4, 165.0], [92.5, 165.0], [92.6, 165.0], [92.7, 167.0], [92.8, 167.0], [92.9, 167.0], [93.0, 167.0], [93.1, 167.0], [93.2, 168.0], [93.3, 169.0], [93.4, 169.0], [93.5, 170.0], [93.6, 170.0], [93.7, 170.0], [93.8, 170.0], [93.9, 170.0], [94.0, 171.0], [94.1, 171.0], [94.2, 171.0], [94.3, 171.0], [94.4, 171.0], [94.5, 171.0], [94.6, 171.0], [94.7, 172.0], [94.8, 172.0], [94.9, 172.0], [95.0, 173.0], [95.1, 173.0], [95.2, 173.0], [95.3, 173.0], [95.4, 173.0], [95.5, 174.0], [95.6, 175.0], [95.7, 175.0], [95.8, 176.0], [95.9, 176.0], [96.0, 176.0], [96.1, 176.0], [96.2, 176.0], [96.3, 177.0], [96.4, 177.0], [96.5, 177.0], [96.6, 177.0], [96.7, 178.0], [96.8, 178.0], [96.9, 178.0], [97.0, 180.0], [97.1, 180.0], [97.2, 180.0], [97.3, 181.0], [97.4, 182.0], [97.5, 182.0], [97.6, 184.0], [97.7, 185.0], [97.8, 187.0], [97.9, 187.0], [98.0, 188.0], [98.1, 190.0], [98.2, 190.0], [98.3, 190.0], [98.4, 191.0], [98.5, 191.0], [98.6, 191.0], [98.7, 192.0], [98.8, 192.0], [98.9, 192.0], [99.0, 195.0], [99.1, 195.0], [99.2, 195.0], [99.3, 196.0], [99.4, 198.0], [99.5, 200.0], [99.6, 200.0], [99.7, 200.0], [99.8, 203.0], [99.9, 389.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 69.0], [0.1, 74.0], [0.2, 77.0], [0.3, 77.0], [0.4, 106.0], [0.5, 106.0], [0.6, 106.0], [0.7, 109.0], [0.8, 129.0], [0.9, 132.0], [1.0, 139.0], [1.1, 141.0], [1.2, 141.0], [1.3, 142.0], [1.4, 142.0], [1.5, 149.0], [1.6, 156.0], [1.7, 156.0], [1.8, 158.0], [1.9, 160.0], [2.0, 163.0], [2.1, 167.0], [2.2, 168.0], [2.3, 172.0], [2.4, 173.0], [2.5, 179.0], [2.6, 180.0], [2.7, 183.0], [2.8, 185.0], [2.9, 190.0], [3.0, 193.0], [3.1, 195.0], [3.2, 196.0], [3.3, 196.0], [3.4, 200.0], [3.5, 209.0], [3.6, 219.0], [3.7, 257.0], [3.8, 262.0], [3.9, 263.0], [4.0, 264.0], [4.1, 270.0], [4.2, 279.0], [4.3, 290.0], [4.4, 293.0], [4.5, 319.0], [4.6, 355.0], [4.7, 359.0], [4.8, 364.0], [4.9, 366.0], [5.0, 417.0], [5.1, 469.0], [5.2, 487.0], [5.3, 560.0], [5.4, 567.0], [5.5, 604.0], [5.6, 632.0], [5.7, 729.0], [5.8, 763.0], [5.9, 981.0], [6.0, 991.0], [6.1, 1011.0], [6.2, 1076.0], [6.3, 1107.0], [6.4, 1141.0], [6.5, 1157.0], [6.6, 1184.0], [6.7, 1521.0], [6.8, 1636.0], [6.9, 1646.0], [7.0, 1740.0], [7.1, 1885.0], [7.2, 1941.0], [7.3, 1968.0], [7.4, 1968.0], [7.5, 1984.0], [7.6, 2019.0], [7.7, 2024.0], [7.8, 2043.0], [7.9, 2067.0], [8.0, 2068.0], [8.1, 2078.0], [8.2, 2091.0], [8.3, 2093.0], [8.4, 2174.0], [8.5, 2193.0], [8.6, 2199.0], [8.7, 2203.0], [8.8, 2208.0], [8.9, 2212.0], [9.0, 2217.0], [9.1, 2223.0], [9.2, 2239.0], [9.3, 2244.0], [9.4, 2246.0], [9.5, 2263.0], [9.6, 2267.0], [9.7, 2271.0], [9.8, 2272.0], [9.9, 2276.0], [10.0, 2280.0], [10.1, 2297.0], [10.2, 2312.0], [10.3, 2321.0], [10.4, 2322.0], [10.5, 2322.0], [10.6, 2325.0], [10.7, 2326.0], [10.8, 2329.0], [10.9, 2332.0], [11.0, 2341.0], [11.1, 2345.0], [11.2, 2355.0], [11.3, 2358.0], [11.4, 2358.0], [11.5, 2365.0], [11.6, 2367.0], [11.7, 2369.0], [11.8, 2379.0], [11.9, 2383.0], [12.0, 2385.0], [12.1, 2388.0], [12.2, 2402.0], [12.3, 2405.0], [12.4, 2405.0], [12.5, 2408.0], [12.6, 2409.0], [12.7, 2413.0], [12.8, 2418.0], [12.9, 2422.0], [13.0, 2423.0], [13.1, 2431.0], [13.2, 2432.0], [13.3, 2434.0], [13.4, 2439.0], [13.5, 2441.0], [13.6, 2442.0], [13.7, 2443.0], [13.8, 2444.0], [13.9, 2447.0], [14.0, 2458.0], [14.1, 2459.0], [14.2, 2467.0], [14.3, 2474.0], [14.4, 2475.0], [14.5, 2481.0], [14.6, 2482.0], [14.7, 2483.0], [14.8, 2487.0], [14.9, 2489.0], [15.0, 2495.0], [15.1, 2497.0], [15.2, 2500.0], [15.3, 2500.0], [15.4, 2505.0], [15.5, 2506.0], [15.6, 2508.0], [15.7, 2511.0], [15.8, 2515.0], [15.9, 2517.0], [16.0, 2518.0], [16.1, 2520.0], [16.2, 2521.0], [16.3, 2521.0], [16.4, 2522.0], [16.5, 2523.0], [16.6, 2527.0], [16.7, 2536.0], [16.8, 2537.0], [16.9, 2543.0], [17.0, 2547.0], [17.1, 2552.0], [17.2, 2553.0], [17.3, 2554.0], [17.4, 2555.0], [17.5, 2556.0], [17.6, 2556.0], [17.7, 2565.0], [17.8, 2568.0], [17.9, 2569.0], [18.0, 2569.0], [18.1, 2570.0], [18.2, 2570.0], [18.3, 2579.0], [18.4, 2579.0], [18.5, 2583.0], [18.6, 2585.0], [18.7, 2585.0], [18.8, 2589.0], [18.9, 2589.0], [19.0, 2590.0], [19.1, 2590.0], [19.2, 2592.0], [19.3, 2593.0], [19.4, 2597.0], [19.5, 2597.0], [19.6, 2606.0], [19.7, 2607.0], [19.8, 2610.0], [19.9, 2610.0], [20.0, 2614.0], [20.1, 2616.0], [20.2, 2617.0], [20.3, 2622.0], [20.4, 2623.0], [20.5, 2623.0], [20.6, 2624.0], [20.7, 2625.0], [20.8, 2628.0], [20.9, 2630.0], [21.0, 2631.0], [21.1, 2637.0], [21.2, 2637.0], [21.3, 2638.0], [21.4, 2639.0], [21.5, 2640.0], [21.6, 2642.0], [21.7, 2643.0], [21.8, 2643.0], [21.9, 2644.0], [22.0, 2647.0], [22.1, 2648.0], [22.2, 2648.0], [22.3, 2650.0], [22.4, 2650.0], [22.5, 2651.0], [22.6, 2656.0], [22.7, 2657.0], [22.8, 2657.0], [22.9, 2661.0], [23.0, 2661.0], [23.1, 2663.0], [23.2, 2666.0], [23.3, 2666.0], [23.4, 2666.0], [23.5, 2667.0], [23.6, 2668.0], [23.7, 2669.0], [23.8, 2670.0], [23.9, 2671.0], [24.0, 2677.0], [24.1, 2679.0], [24.2, 2681.0], [24.3, 2681.0], [24.4, 2685.0], [24.5, 2685.0], [24.6, 2686.0], [24.7, 2688.0], [24.8, 2693.0], [24.9, 2697.0], [25.0, 2700.0], [25.1, 2701.0], [25.2, 2701.0], [25.3, 2701.0], [25.4, 2702.0], [25.5, 2703.0], [25.6, 2707.0], [25.7, 2710.0], [25.8, 2711.0], [25.9, 2712.0], [26.0, 2712.0], [26.1, 2716.0], [26.2, 2717.0], [26.3, 2717.0], [26.4, 2720.0], [26.5, 2720.0], [26.6, 2722.0], [26.7, 2722.0], [26.8, 2724.0], [26.9, 2724.0], [27.0, 2726.0], [27.1, 2731.0], [27.2, 2733.0], [27.3, 2734.0], [27.4, 2738.0], [27.5, 2740.0], [27.6, 2741.0], [27.7, 2742.0], [27.8, 2742.0], [27.9, 2743.0], [28.0, 2745.0], [28.1, 2745.0], [28.2, 2746.0], [28.3, 2750.0], [28.4, 2750.0], [28.5, 2751.0], [28.6, 2753.0], [28.7, 2753.0], [28.8, 2754.0], [28.9, 2756.0], [29.0, 2757.0], [29.1, 2757.0], [29.2, 2760.0], [29.3, 2762.0], [29.4, 2764.0], [29.5, 2766.0], [29.6, 2767.0], [29.7, 2767.0], [29.8, 2767.0], [29.9, 2767.0], [30.0, 2768.0], [30.1, 2770.0], [30.2, 2773.0], [30.3, 2773.0], [30.4, 2774.0], [30.5, 2776.0], [30.6, 2776.0], [30.7, 2778.0], [30.8, 2778.0], [30.9, 2784.0], [31.0, 2784.0], [31.1, 2788.0], [31.2, 2789.0], [31.3, 2789.0], [31.4, 2792.0], [31.5, 2794.0], [31.6, 2794.0], [31.7, 2795.0], [31.8, 2796.0], [31.9, 2796.0], [32.0, 2798.0], [32.1, 2799.0], [32.2, 2800.0], [32.3, 2800.0], [32.4, 2804.0], [32.5, 2805.0], [32.6, 2805.0], [32.7, 2807.0], [32.8, 2807.0], [32.9, 2807.0], [33.0, 2809.0], [33.1, 2809.0], [33.2, 2812.0], [33.3, 2815.0], [33.4, 2819.0], [33.5, 2821.0], [33.6, 2822.0], [33.7, 2824.0], [33.8, 2826.0], [33.9, 2826.0], [34.0, 2827.0], [34.1, 2828.0], [34.2, 2829.0], [34.3, 2829.0], [34.4, 2830.0], [34.5, 2831.0], [34.6, 2834.0], [34.7, 2834.0], [34.8, 2836.0], [34.9, 2838.0], [35.0, 2839.0], [35.1, 2839.0], [35.2, 2840.0], [35.3, 2845.0], [35.4, 2847.0], [35.5, 2850.0], [35.6, 2854.0], [35.7, 2856.0], [35.8, 2858.0], [35.9, 2858.0], [36.0, 2860.0], [36.1, 2860.0], [36.2, 2860.0], [36.3, 2862.0], [36.4, 2863.0], [36.5, 2863.0], [36.6, 2868.0], [36.7, 2871.0], [36.8, 2873.0], [36.9, 2873.0], [37.0, 2874.0], [37.1, 2875.0], [37.2, 2878.0], [37.3, 2880.0], [37.4, 2880.0], [37.5, 2882.0], [37.6, 2882.0], [37.7, 2883.0], [37.8, 2887.0], [37.9, 2889.0], [38.0, 2891.0], [38.1, 2893.0], [38.2, 2894.0], [38.3, 2895.0], [38.4, 2897.0], [38.5, 2899.0], [38.6, 2900.0], [38.7, 2900.0], [38.8, 2901.0], [38.9, 2903.0], [39.0, 2903.0], [39.1, 2904.0], [39.2, 2907.0], [39.3, 2907.0], [39.4, 2912.0], [39.5, 2915.0], [39.6, 2916.0], [39.7, 2916.0], [39.8, 2919.0], [39.9, 2923.0], [40.0, 2923.0], [40.1, 2923.0], [40.2, 2924.0], [40.3, 2925.0], [40.4, 2927.0], [40.5, 2928.0], [40.6, 2930.0], [40.7, 2930.0], [40.8, 2932.0], [40.9, 2933.0], [41.0, 2933.0], [41.1, 2936.0], [41.2, 2937.0], [41.3, 2937.0], [41.4, 2940.0], [41.5, 2940.0], [41.6, 2941.0], [41.7, 2941.0], [41.8, 2944.0], [41.9, 2945.0], [42.0, 2946.0], [42.1, 2949.0], [42.2, 2951.0], [42.3, 2952.0], [42.4, 2952.0], [42.5, 2956.0], [42.6, 2958.0], [42.7, 2959.0], [42.8, 2962.0], [42.9, 2963.0], [43.0, 2964.0], [43.1, 2966.0], [43.2, 2967.0], [43.3, 2968.0], [43.4, 2969.0], [43.5, 2972.0], [43.6, 2975.0], [43.7, 2976.0], [43.8, 2976.0], [43.9, 2977.0], [44.0, 2978.0], [44.1, 2981.0], [44.2, 2981.0], [44.3, 2983.0], [44.4, 2988.0], [44.5, 2989.0], [44.6, 2992.0], [44.7, 2994.0], [44.8, 2998.0], [44.9, 2999.0], [45.0, 2999.0], [45.1, 3000.0], [45.2, 3002.0], [45.3, 3002.0], [45.4, 3004.0], [45.5, 3008.0], [45.6, 3008.0], [45.7, 3010.0], [45.8, 3010.0], [45.9, 3011.0], [46.0, 3012.0], [46.1, 3013.0], [46.2, 3014.0], [46.3, 3018.0], [46.4, 3021.0], [46.5, 3021.0], [46.6, 3021.0], [46.7, 3022.0], [46.8, 3022.0], [46.9, 3023.0], [47.0, 3025.0], [47.1, 3025.0], [47.2, 3028.0], [47.3, 3031.0], [47.4, 3033.0], [47.5, 3034.0], [47.6, 3035.0], [47.7, 3036.0], [47.8, 3036.0], [47.9, 3037.0], [48.0, 3038.0], [48.1, 3039.0], [48.2, 3045.0], [48.3, 3047.0], [48.4, 3049.0], [48.5, 3051.0], [48.6, 3052.0], [48.7, 3054.0], [48.8, 3057.0], [48.9, 3058.0], [49.0, 3058.0], [49.1, 3060.0], [49.2, 3060.0], [49.3, 3061.0], [49.4, 3062.0], [49.5, 3062.0], [49.6, 3063.0], [49.7, 3065.0], [49.8, 3065.0], [49.9, 3066.0], [50.0, 3072.0], [50.1, 3072.0], [50.2, 3072.0], [50.3, 3073.0], [50.4, 3074.0], [50.5, 3076.0], [50.6, 3076.0], [50.7, 3077.0], [50.8, 3078.0], [50.9, 3078.0], [51.0, 3081.0], [51.1, 3083.0], [51.2, 3085.0], [51.3, 3085.0], [51.4, 3085.0], [51.5, 3087.0], [51.6, 3087.0], [51.7, 3088.0], [51.8, 3088.0], [51.9, 3089.0], [52.0, 3090.0], [52.1, 3092.0], [52.2, 3092.0], [52.3, 3094.0], [52.4, 3095.0], [52.5, 3096.0], [52.6, 3098.0], [52.7, 3101.0], [52.8, 3101.0], [52.9, 3103.0], [53.0, 3104.0], [53.1, 3105.0], [53.2, 3108.0], [53.3, 3110.0], [53.4, 3110.0], [53.5, 3111.0], [53.6, 3113.0], [53.7, 3114.0], [53.8, 3115.0], [53.9, 3117.0], [54.0, 3118.0], [54.1, 3119.0], [54.2, 3120.0], [54.3, 3120.0], [54.4, 3123.0], [54.5, 3123.0], [54.6, 3125.0], [54.7, 3125.0], [54.8, 3127.0], [54.9, 3127.0], [55.0, 3128.0], [55.1, 3129.0], [55.2, 3130.0], [55.3, 3130.0], [55.4, 3135.0], [55.5, 3135.0], [55.6, 3140.0], [55.7, 3141.0], [55.8, 3143.0], [55.9, 3143.0], [56.0, 3145.0], [56.1, 3145.0], [56.2, 3146.0], [56.3, 3146.0], [56.4, 3147.0], [56.5, 3147.0], [56.6, 3147.0], [56.7, 3148.0], [56.8, 3148.0], [56.9, 3148.0], [57.0, 3148.0], [57.1, 3148.0], [57.2, 3149.0], [57.3, 3152.0], [57.4, 3152.0], [57.5, 3154.0], [57.6, 3155.0], [57.7, 3159.0], [57.8, 3160.0], [57.9, 3163.0], [58.0, 3164.0], [58.1, 3165.0], [58.2, 3165.0], [58.3, 3166.0], [58.4, 3167.0], [58.5, 3170.0], [58.6, 3171.0], [58.7, 3171.0], [58.8, 3171.0], [58.9, 3173.0], [59.0, 3175.0], [59.1, 3176.0], [59.2, 3176.0], [59.3, 3177.0], [59.4, 3177.0], [59.5, 3178.0], [59.6, 3178.0], [59.7, 3182.0], [59.8, 3183.0], [59.9, 3184.0], [60.0, 3188.0], [60.1, 3190.0], [60.2, 3190.0], [60.3, 3191.0], [60.4, 3192.0], [60.5, 3193.0], [60.6, 3193.0], [60.7, 3198.0], [60.8, 3200.0], [60.9, 3201.0], [61.0, 3201.0], [61.1, 3204.0], [61.2, 3205.0], [61.3, 3206.0], [61.4, 3207.0], [61.5, 3210.0], [61.6, 3210.0], [61.7, 3213.0], [61.8, 3214.0], [61.9, 3215.0], [62.0, 3216.0], [62.1, 3218.0], [62.2, 3219.0], [62.3, 3219.0], [62.4, 3221.0], [62.5, 3223.0], [62.6, 3224.0], [62.7, 3225.0], [62.8, 3227.0], [62.9, 3228.0], [63.0, 3228.0], [63.1, 3229.0], [63.2, 3230.0], [63.3, 3232.0], [63.4, 3234.0], [63.5, 3234.0], [63.6, 3235.0], [63.7, 3239.0], [63.8, 3239.0], [63.9, 3242.0], [64.0, 3243.0], [64.1, 3247.0], [64.2, 3247.0], [64.3, 3248.0], [64.4, 3248.0], [64.5, 3249.0], [64.6, 3249.0], [64.7, 3249.0], [64.8, 3251.0], [64.9, 3252.0], [65.0, 3252.0], [65.1, 3252.0], [65.2, 3252.0], [65.3, 3256.0], [65.4, 3258.0], [65.5, 3262.0], [65.6, 3264.0], [65.7, 3266.0], [65.8, 3268.0], [65.9, 3268.0], [66.0, 3270.0], [66.1, 3271.0], [66.2, 3271.0], [66.3, 3275.0], [66.4, 3277.0], [66.5, 3277.0], [66.6, 3277.0], [66.7, 3279.0], [66.8, 3279.0], [66.9, 3280.0], [67.0, 3281.0], [67.1, 3281.0], [67.2, 3284.0], [67.3, 3285.0], [67.4, 3285.0], [67.5, 3286.0], [67.6, 3287.0], [67.7, 3293.0], [67.8, 3297.0], [67.9, 3298.0], [68.0, 3298.0], [68.1, 3299.0], [68.2, 3301.0], [68.3, 3301.0], [68.4, 3302.0], [68.5, 3303.0], [68.6, 3303.0], [68.7, 3306.0], [68.8, 3307.0], [68.9, 3307.0], [69.0, 3309.0], [69.1, 3310.0], [69.2, 3310.0], [69.3, 3311.0], [69.4, 3313.0], [69.5, 3314.0], [69.6, 3316.0], [69.7, 3319.0], [69.8, 3320.0], [69.9, 3325.0], [70.0, 3327.0], [70.1, 3328.0], [70.2, 3330.0], [70.3, 3330.0], [70.4, 3332.0], [70.5, 3332.0], [70.6, 3332.0], [70.7, 3333.0], [70.8, 3334.0], [70.9, 3339.0], [71.0, 3341.0], [71.1, 3341.0], [71.2, 3342.0], [71.3, 3344.0], [71.4, 3347.0], [71.5, 3348.0], [71.6, 3348.0], [71.7, 3351.0], [71.8, 3352.0], [71.9, 3353.0], [72.0, 3354.0], [72.1, 3358.0], [72.2, 3359.0], [72.3, 3361.0], [72.4, 3362.0], [72.5, 3364.0], [72.6, 3366.0], [72.7, 3366.0], [72.8, 3368.0], [72.9, 3369.0], [73.0, 3369.0], [73.1, 3370.0], [73.2, 3372.0], [73.3, 3374.0], [73.4, 3375.0], [73.5, 3375.0], [73.6, 3375.0], [73.7, 3377.0], [73.8, 3379.0], [73.9, 3381.0], [74.0, 3382.0], [74.1, 3383.0], [74.2, 3383.0], [74.3, 3383.0], [74.4, 3385.0], [74.5, 3387.0], [74.6, 3388.0], [74.7, 3388.0], [74.8, 3395.0], [74.9, 3395.0], [75.0, 3396.0], [75.1, 3396.0], [75.2, 3396.0], [75.3, 3399.0], [75.4, 3400.0], [75.5, 3400.0], [75.6, 3401.0], [75.7, 3403.0], [75.8, 3404.0], [75.9, 3407.0], [76.0, 3408.0], [76.1, 3409.0], [76.2, 3409.0], [76.3, 3413.0], [76.4, 3415.0], [76.5, 3416.0], [76.6, 3420.0], [76.7, 3420.0], [76.8, 3427.0], [76.9, 3428.0], [77.0, 3434.0], [77.1, 3434.0], [77.2, 3435.0], [77.3, 3437.0], [77.4, 3442.0], [77.5, 3442.0], [77.6, 3444.0], [77.7, 3445.0], [77.8, 3447.0], [77.9, 3448.0], [78.0, 3450.0], [78.1, 3451.0], [78.2, 3452.0], [78.3, 3452.0], [78.4, 3458.0], [78.5, 3458.0], [78.6, 3459.0], [78.7, 3460.0], [78.8, 3462.0], [78.9, 3463.0], [79.0, 3468.0], [79.1, 3469.0], [79.2, 3470.0], [79.3, 3471.0], [79.4, 3472.0], [79.5, 3475.0], [79.6, 3476.0], [79.7, 3477.0], [79.8, 3477.0], [79.9, 3478.0], [80.0, 3481.0], [80.1, 3483.0], [80.2, 3484.0], [80.3, 3490.0], [80.4, 3491.0], [80.5, 3491.0], [80.6, 3495.0], [80.7, 3504.0], [80.8, 3506.0], [80.9, 3507.0], [81.0, 3507.0], [81.1, 3510.0], [81.2, 3513.0], [81.3, 3516.0], [81.4, 3516.0], [81.5, 3517.0], [81.6, 3522.0], [81.7, 3522.0], [81.8, 3523.0], [81.9, 3524.0], [82.0, 3528.0], [82.1, 3530.0], [82.2, 3532.0], [82.3, 3534.0], [82.4, 3535.0], [82.5, 3537.0], [82.6, 3537.0], [82.7, 3537.0], [82.8, 3538.0], [82.9, 3540.0], [83.0, 3541.0], [83.1, 3543.0], [83.2, 3548.0], [83.3, 3549.0], [83.4, 3550.0], [83.5, 3550.0], [83.6, 3552.0], [83.7, 3552.0], [83.8, 3553.0], [83.9, 3553.0], [84.0, 3554.0], [84.1, 3556.0], [84.2, 3558.0], [84.3, 3559.0], [84.4, 3561.0], [84.5, 3563.0], [84.6, 3565.0], [84.7, 3565.0], [84.8, 3569.0], [84.9, 3569.0], [85.0, 3576.0], [85.1, 3578.0], [85.2, 3579.0], [85.3, 3582.0], [85.4, 3582.0], [85.5, 3585.0], [85.6, 3586.0], [85.7, 3588.0], [85.8, 3588.0], [85.9, 3589.0], [86.0, 3589.0], [86.1, 3596.0], [86.2, 3596.0], [86.3, 3600.0], [86.4, 3603.0], [86.5, 3604.0], [86.6, 3605.0], [86.7, 3608.0], [86.8, 3611.0], [86.9, 3613.0], [87.0, 3616.0], [87.1, 3616.0], [87.2, 3617.0], [87.3, 3618.0], [87.4, 3622.0], [87.5, 3624.0], [87.6, 3626.0], [87.7, 3629.0], [87.8, 3629.0], [87.9, 3630.0], [88.0, 3631.0], [88.1, 3634.0], [88.2, 3634.0], [88.3, 3636.0], [88.4, 3637.0], [88.5, 3639.0], [88.6, 3641.0], [88.7, 3642.0], [88.8, 3646.0], [88.9, 3648.0], [89.0, 3649.0], [89.1, 3652.0], [89.2, 3656.0], [89.3, 3657.0], [89.4, 3658.0], [89.5, 3658.0], [89.6, 3659.0], [89.7, 3662.0], [89.8, 3665.0], [89.9, 3666.0], [90.0, 3668.0], [90.1, 3671.0], [90.2, 3672.0], [90.3, 3688.0], [90.4, 3704.0], [90.5, 3707.0], [90.6, 3710.0], [90.7, 3712.0], [90.8, 3719.0], [90.9, 3720.0], [91.0, 3724.0], [91.1, 3724.0], [91.2, 3727.0], [91.3, 3732.0], [91.4, 3733.0], [91.5, 3734.0], [91.6, 3735.0], [91.7, 3738.0], [91.8, 3738.0], [91.9, 3741.0], [92.0, 3742.0], [92.1, 3746.0], [92.2, 3748.0], [92.3, 3757.0], [92.4, 3758.0], [92.5, 3763.0], [92.6, 3765.0], [92.7, 3767.0], [92.8, 3769.0], [92.9, 3772.0], [93.0, 3786.0], [93.1, 3787.0], [93.2, 3791.0], [93.3, 3795.0], [93.4, 3806.0], [93.5, 3807.0], [93.6, 3810.0], [93.7, 3814.0], [93.8, 3816.0], [93.9, 3824.0], [94.0, 3828.0], [94.1, 3831.0], [94.2, 3833.0], [94.3, 3837.0], [94.4, 3840.0], [94.5, 3840.0], [94.6, 3845.0], [94.7, 3846.0], [94.8, 3847.0], [94.9, 3847.0], [95.0, 3862.0], [95.1, 3862.0], [95.2, 3862.0], [95.3, 3866.0], [95.4, 3869.0], [95.5, 3879.0], [95.6, 3880.0], [95.7, 3885.0], [95.8, 3887.0], [95.9, 3889.0], [96.0, 3889.0], [96.1, 3890.0], [96.2, 3892.0], [96.3, 3895.0], [96.4, 3896.0], [96.5, 3907.0], [96.6, 3910.0], [96.7, 3924.0], [96.8, 3925.0], [96.9, 3935.0], [97.0, 3937.0], [97.1, 3940.0], [97.2, 3946.0], [97.3, 3948.0], [97.4, 3956.0], [97.5, 3958.0], [97.6, 3987.0], [97.7, 4002.0], [97.8, 4096.0], [97.9, 4101.0], [98.0, 4103.0], [98.1, 4104.0], [98.2, 4107.0], [98.3, 4153.0], [98.4, 4164.0], [98.5, 4291.0], [98.6, 4337.0], [98.7, 4353.0], [98.8, 4459.0], [98.9, 4476.0], [99.0, 4532.0], [99.1, 4555.0], [99.2, 4571.0], [99.3, 4646.0], [99.4, 4778.0], [99.5, 4916.0], [99.6, 5077.0], [99.7, 5261.0], [99.8, 5425.0], [99.9, 6872.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 636.0, "series": [{"data": [[0.0, 4.0], [600.0, 5.0], [800.0, 2.0], [1000.0, 3.0], [1100.0, 3.0], [1200.0, 5.0], [1300.0, 2.0], [1400.0, 1.0], [1700.0, 1.0], [1900.0, 3.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2600.0, 1.0], [2800.0, 2.0], [2700.0, 1.0], [2900.0, 2.0], [3200.0, 2.0], [3300.0, 1.0], [3400.0, 13.0], [3500.0, 4.0], [3600.0, 6.0], [3700.0, 13.0], [3800.0, 17.0], [3900.0, 19.0], [4000.0, 24.0], [4100.0, 47.0], [4300.0, 38.0], [4200.0, 21.0], [4400.0, 64.0], [4500.0, 69.0], [4600.0, 89.0], [4700.0, 95.0], [4800.0, 87.0], [4900.0, 90.0], [5000.0, 63.0], [5100.0, 38.0], [5200.0, 37.0], [5300.0, 19.0], [5400.0, 11.0], [5500.0, 3.0], [5600.0, 3.0], [5800.0, 7.0], [5700.0, 8.0], [5900.0, 4.0], [6100.0, 4.0], [6000.0, 1.0], [6200.0, 1.0], [6300.0, 2.0], [6400.0, 3.0], [6600.0, 6.0], [6500.0, 3.0], [6700.0, 2.0], [6800.0, 3.0], [6900.0, 1.0], [7100.0, 2.0], [7200.0, 1.0], [7300.0, 1.0], [7900.0, 2.0], [8000.0, 1.0], [8200.0, 1.0], [100.0, 7.0], [200.0, 4.0], [300.0, 1.0], [400.0, 1.0], [500.0, 23.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 359.0], [300.0, 1.0], [100.0, 636.0], [200.0, 4.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 4.0], [600.0, 2.0], [700.0, 2.0], [900.0, 2.0], [1000.0, 2.0], [1100.0, 4.0], [1500.0, 1.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 4.0], [2000.0, 8.0], [2100.0, 3.0], [2300.0, 20.0], [2200.0, 15.0], [2400.0, 30.0], [2500.0, 44.0], [2600.0, 53.0], [2700.0, 72.0], [2800.0, 64.0], [2900.0, 65.0], [3000.0, 76.0], [3100.0, 81.0], [3200.0, 74.0], [3300.0, 72.0], [3400.0, 53.0], [3500.0, 57.0], [3600.0, 41.0], [3700.0, 30.0], [3800.0, 31.0], [3900.0, 12.0], [4000.0, 2.0], [4100.0, 6.0], [4300.0, 2.0], [4200.0, 1.0], [4400.0, 2.0], [4500.0, 3.0], [4600.0, 1.0], [4700.0, 1.0], [4900.0, 1.0], [5000.0, 1.0], [5200.0, 1.0], [5400.0, 1.0], [6800.0, 1.0], [100.0, 29.0], [200.0, 12.0], [300.0, 5.0], [400.0, 3.0], [500.0, 2.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 58.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1872.0, "series": [{"data": [[0.0, 1070.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 58.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1872.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 122.88000000000017, "minX": 1.66895184E12, "maxY": 480.27200000000073, "series": [{"data": [[1.66895184E12, 480.27200000000073]], "isOverall": false, "label": "client-to-gateway-non-caching (GET)", "isController": false}, {"data": [[1.66895184E12, 464.18600000000026]], "isOverall": false, "label": "client-to-application (GET)", "isController": false}, {"data": [[1.66895184E12, 122.88000000000017]], "isOverall": false, "label": "client-to-gateway-caching (GET)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66895184E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 13.0, "minX": 1.0, "maxY": 8263.0, "series": [{"data": [[2.0, 8097.0], [3.0, 7920.0], [4.0, 7955.0], [5.0, 7331.0], [6.0, 7132.0], [7.0, 6814.0], [8.0, 7285.0], [10.0, 7019.5], [11.0, 6814.0], [12.0, 6606.0], [15.0, 6508.0], [17.0, 6394.0], [18.0, 6613.0], [19.0, 6743.0], [20.0, 6614.0], [22.0, 6582.0], [23.0, 6548.0], [24.0, 6836.0], [25.0, 6763.0], [26.0, 6148.0], [28.0, 6539.5], [29.0, 6378.0], [30.0, 6189.0], [31.0, 5820.0], [33.0, 6095.0], [32.0, 5973.0], [35.0, 6227.0], [34.0, 6175.0], [37.0, 5664.0], [36.0, 5930.0], [39.0, 5701.0], [38.0, 5670.0], [41.0, 5786.0], [40.0, 5859.0], [43.0, 5772.0], [42.0, 5775.0], [45.0, 5948.0], [44.0, 6119.0], [47.0, 5826.0], [46.0, 5605.0], [49.0, 5864.0], [48.0, 5712.0], [51.0, 5239.0], [50.0, 5981.0], [52.0, 1979.0], [53.0, 2755.5], [55.0, 5432.0], [54.0, 5542.0], [57.0, 5390.0], [56.0, 5148.0], [59.0, 5491.0], [58.0, 5816.0], [61.0, 5764.0], [60.0, 5727.0], [63.0, 5830.0], [62.0, 5730.0], [67.0, 5306.0], [66.0, 5385.0], [65.0, 5515.0], [64.0, 5195.0], [71.0, 5050.0], [70.0, 5016.0], [69.0, 5240.0], [68.0, 5319.0], [75.0, 5363.0], [74.0, 5000.0], [73.0, 5124.0], [72.0, 5202.0], [79.0, 4876.0], [78.0, 5410.0], [77.0, 5266.0], [76.0, 5240.0], [83.0, 5093.0], [82.0, 5418.0], [81.0, 5238.0], [80.0, 5251.0], [87.0, 5299.0], [86.0, 5328.0], [85.0, 5098.0], [84.0, 4919.0], [91.0, 5026.0], [90.0, 5050.0], [89.0, 4809.0], [88.0, 5433.0], [94.0, 5362.0], [93.0, 5048.0], [92.0, 5500.0], [99.0, 5484.0], [98.0, 4974.0], [97.0, 4779.0], [96.0, 4846.5], [103.0, 5252.0], [101.0, 5415.0], [100.0, 4809.0], [104.0, 2570.0], [106.0, 4852.0], [109.0, 2534.5], [111.0, 5448.0], [110.0, 5028.0], [108.0, 4843.5], [115.0, 5272.0], [114.0, 5290.0], [113.0, 5338.0], [112.0, 5069.0], [119.0, 5236.0], [118.0, 5408.0], [117.0, 5080.0], [116.0, 5091.0], [123.0, 5387.0], [122.0, 4990.0], [121.0, 4992.0], [120.0, 5097.0], [127.0, 5074.0], [125.0, 5090.0], [133.0, 3334.0], [132.0, 132.0], [135.0, 5259.0], [134.0, 4804.0], [131.0, 5126.0], [129.0, 4948.0], [128.0, 4717.0], [143.0, 4850.0], [142.0, 5074.5], [141.0, 4993.5], [140.0, 4981.666666666667], [148.0, 3797.5], [150.0, 5128.5], [145.0, 5050.5], [157.0, 5283.0], [155.0, 5195.0], [154.0, 4818.0], [153.0, 5109.0], [152.0, 4961.0], [165.0, 2588.5], [164.0, 168.0], [167.0, 176.0], [166.0, 4903.5], [163.0, 4930.666666666667], [161.0, 5073.0], [175.0, 5076.0], [172.0, 5121.0], [171.0, 5050.0], [170.0, 4969.0], [169.0, 4823.0], [168.0, 5173.0], [183.0, 4963.666666666667], [180.0, 5320.0], [179.0, 4977.5], [177.0, 4934.0], [176.0, 4686.0], [191.0, 200.0], [189.0, 4865.0], [188.0, 5034.0], [187.0, 5097.333333333333], [184.0, 5212.0], [194.0, 5091.0], [192.0, 4835.666666666667], [206.0, 4944.583333333334], [215.0, 5055.0], [213.0, 4716.0], [212.0, 5022.0], [211.0, 4671.0], [209.0, 5058.666666666667], [223.0, 5149.0], [221.0, 4932.0], [220.0, 4970.666666666667], [217.0, 4622.0], [216.0, 4815.0], [230.0, 4830.75], [227.0, 4712.0], [225.0, 4931.0], [239.0, 5067.5], [237.0, 4729.2], [232.0, 5348.0], [233.0, 4603.0], [247.0, 5086.5], [246.0, 4707.0], [244.0, 4659.0], [243.0, 5229.0], [241.0, 4710.0], [255.0, 4855.0], [254.0, 4908.0], [253.0, 5241.0], [252.0, 4907.0], [251.0, 5054.0], [249.0, 5003.666666666667], [258.0, 4877.0], [271.0, 5164.0], [270.0, 3703.75], [257.0, 4897.0], [256.0, 4810.0], [267.0, 5088.5], [265.0, 4860.0], [264.0, 4973.0], [263.0, 5172.0], [262.0, 4873.0], [261.0, 4580.0], [260.0, 4718.0], [287.0, 4951.0], [286.0, 4683.0], [284.0, 4917.857142857143], [277.0, 4843.0], [276.0, 4973.666666666667], [273.0, 4852.0], [272.0, 4857.0], [302.0, 4926.0], [292.0, 2632.5], [299.0, 4795.0], [298.0, 4824.5], [296.0, 4992.0], [294.0, 4689.0], [291.0, 4753.5], [290.0, 5293.0], [288.0, 5283.0], [317.0, 4829.0], [306.0, 3303.0], [319.0, 4875.0], [316.0, 4921.0], [307.0, 4844.0], [315.0, 4550.0], [314.0, 4850.5], [312.0, 4921.0], [311.0, 4891.0], [304.0, 4758.0], [309.0, 5322.0], [308.0, 5207.0], [323.0, 5223.0], [334.0, 5056.5], [333.0, 4660.5], [330.0, 4863.5], [328.0, 4612.0], [327.0, 5031.5], [326.0, 5121.0], [324.0, 5089.0], [322.0, 4769.0], [321.0, 4993.0], [320.0, 5000.5], [349.0, 5051.0], [351.0, 4943.5], [348.0, 4819.0], [347.0, 4841.333333333333], [344.0, 4954.2], [346.0, 4583.0], [339.0, 5181.0], [337.0, 5148.0], [336.0, 4816.5], [355.0, 5011.5], [366.0, 4562.5], [367.0, 5151.0], [364.0, 4734.5], [363.0, 5115.0], [361.0, 4809.0], [358.0, 4818.0], [356.0, 5218.0], [353.0, 4945.0], [352.0, 4997.0], [383.0, 4625.0], [376.0, 356.0], [382.0, 4998.5], [380.0, 5032.0], [379.0, 5024.0], [378.0, 4914.0], [377.0, 4961.5], [375.0, 4788.0], [368.0, 4628.0], [370.0, 5074.0], [369.0, 4983.0], [374.0, 4520.0], [373.0, 5300.0], [372.0, 4840.0], [387.0, 4896.0], [397.0, 5036.0], [399.0, 4714.5], [396.0, 4705.0], [386.0, 4922.0], [385.0, 4961.0], [395.0, 5091.0], [393.0, 4825.0], [391.0, 4803.0], [390.0, 4774.0], [389.0, 5115.0], [388.0, 4729.0], [403.0, 4781.0], [414.0, 4746.5], [412.0, 4484.0], [402.0, 4643.0], [401.0, 4634.0], [411.0, 4535.0], [410.0, 4846.5], [408.0, 4583.0], [407.0, 5134.0], [406.0, 4538.0], [405.0, 4751.0], [404.0, 4567.0], [419.0, 5155.0], [431.0, 4680.5], [430.0, 4737.5], [427.0, 4875.0], [423.0, 4829.666666666667], [420.0, 5053.0], [418.0, 4719.0], [417.0, 4925.0], [416.0, 4576.5], [445.0, 4732.666666666667], [443.0, 4762.0], [441.0, 5144.0], [440.0, 4694.5], [438.0, 4997.0], [432.0, 4918.0], [437.0, 4537.0], [436.0, 4936.0], [434.0, 4663.0], [433.0, 4632.0], [451.0, 4929.0], [463.0, 4990.0], [461.0, 4766.5], [459.0, 5106.0], [458.0, 4562.0], [456.0, 4789.0], [455.0, 4831.0], [453.0, 5130.0], [452.0, 4473.0], [450.0, 5123.0], [449.0, 4891.0], [448.0, 4743.333333333333], [476.0, 4646.5], [478.0, 4571.0], [479.0, 4513.0], [477.0, 4904.0], [474.0, 4622.0], [472.0, 5066.0], [471.0, 4969.0], [466.0, 4763.0], [464.0, 5039.0], [469.0, 4773.0], [468.0, 4588.0], [494.0, 4895.0], [495.0, 4673.0], [493.0, 4876.0], [492.0, 5157.0], [491.0, 5011.0], [490.0, 4956.0], [489.0, 4541.333333333333], [486.0, 4782.0], [482.0, 4504.0], [481.0, 4579.0], [480.0, 4935.0], [484.0, 4550.5], [510.0, 4819.0], [511.0, 4664.0], [509.0, 4864.0], [508.0, 4684.0], [507.0, 4681.0], [506.0, 4499.0], [505.0, 4750.0], [504.0, 4594.0], [503.0, 4652.0], [499.0, 4540.0], [498.0, 4543.333333333333], [502.0, 5063.0], [501.0, 4413.0], [500.0, 5036.0], [541.0, 4575.0], [542.0, 4797.0], [529.0, 4762.0], [528.0, 4416.0], [540.0, 5058.0], [539.0, 4641.0], [538.0, 4756.5], [536.0, 4753.0], [527.0, 4662.0], [513.0, 4376.0], [512.0, 4882.0], [519.0, 4683.333333333333], [516.0, 4865.333333333333], [526.0, 4721.0], [525.0, 4654.0], [524.0, 4478.5], [523.0, 4674.0], [521.0, 4354.0], [520.0, 4799.0], [535.0, 5026.0], [534.0, 4501.0], [533.0, 4694.0], [531.0, 4652.5], [568.0, 4627.0], [574.0, 4787.0], [559.0, 2546.5], [544.0, 4652.5], [547.0, 4820.0], [545.0, 4481.0], [551.0, 4455.0], [549.0, 4524.0], [558.0, 4658.0], [557.0, 4741.0], [556.0, 4497.0], [555.0, 4572.0], [554.0, 4739.0], [552.0, 4616.0], [575.0, 4679.5], [561.0, 4649.0], [560.0, 4321.0], [563.0, 4621.0], [562.0, 4990.0], [565.0, 4522.0], [564.0, 4869.0], [571.0, 4613.0], [570.0, 4479.0], [569.0, 4861.0], [567.0, 5025.0], [566.0, 4570.0], [606.0, 5046.0], [597.0, 2733.5], [596.0, 4591.0], [595.0, 4427.0], [594.0, 4777.0], [593.0, 4299.0], [592.0, 4771.0], [605.0, 4576.0], [604.0, 4569.0], [603.0, 4806.0], [602.0, 4775.5], [600.0, 4955.0], [582.0, 4950.0], [581.0, 4703.0], [580.0, 4305.0], [578.0, 4637.25], [591.0, 4690.0], [590.0, 4845.0], [588.0, 4627.0], [587.0, 4415.0], [586.0, 4809.0], [584.0, 4772.5], [599.0, 4311.0], [598.0, 4849.0], [632.0, 4284.0], [636.0, 4550.0], [615.0, 2699.0], [614.0, 4723.0], [613.0, 4687.0], [612.0, 4710.0], [611.0, 4645.0], [610.0, 4893.0], [609.0, 4341.0], [608.0, 4877.0], [622.0, 4727.0], [621.0, 4359.0], [620.0, 4765.0], [619.0, 4541.0], [618.0, 4248.0], [617.0, 4736.0], [616.0, 4864.0], [639.0, 4619.666666666667], [624.0, 4475.0], [626.0, 4350.0], [625.0, 4912.0], [628.0, 4811.0], [627.0, 4629.0], [635.0, 4814.0], [634.0, 4177.0], [633.0, 4796.0], [631.0, 4356.0], [630.0, 4336.0], [671.0, 4237.0], [663.0, 2516.5], [670.0, 4418.0], [669.0, 4332.0], [667.0, 4595.0], [664.0, 4615.0], [654.0, 4189.0], [641.0, 4554.5], [646.0, 4470.5], [644.0, 4526.333333333333], [653.0, 4660.0], [652.0, 4428.0], [650.0, 4755.0], [649.0, 4791.0], [648.0, 4767.5], [662.0, 4744.0], [661.0, 4355.0], [660.0, 4245.0], [659.0, 4421.0], [658.0, 4719.0], [657.0, 4195.0], [656.0, 4500.0], [699.0, 4220.0], [703.0, 4617.0], [694.0, 2564.0], [695.0, 4778.0], [693.0, 2554.5], [692.0, 2702.0], [691.0, 4271.0], [690.0, 4488.0], [688.0, 4699.0], [702.0, 4206.0], [701.0, 4057.0], [700.0, 4102.0], [698.0, 4084.0], [697.0, 4399.5], [687.0, 4823.0], [672.0, 4404.0], [674.0, 4556.0], [673.0, 4443.0], [676.0, 4773.0], [675.0, 4661.0], [679.0, 4770.0], [677.0, 4197.0], [686.0, 4505.0], [685.0, 4426.0], [684.0, 4502.0], [683.0, 4417.5], [681.0, 4500.0], [680.0, 4325.0], [729.0, 1834.0], [734.0, 2681.0], [709.0, 576.0], [719.0, 4357.0], [706.0, 4390.5], [704.0, 4365.0], [708.0, 4464.0], [707.0, 4088.0], [718.0, 4275.0], [717.0, 4377.0], [716.0, 4042.0], [715.0, 4408.0], [714.0, 4525.5], [712.0, 4486.0], [721.0, 2652.0], [735.0, 4447.0], [720.0, 4203.0], [724.0, 1937.3333333333333], [723.0, 4344.5], [728.0, 1200.0], [711.0, 4525.0], [710.0, 4294.0], [726.0, 1723.0], [727.0, 4631.0], [725.0, 1960.3333333333333], [733.0, 1745.0], [731.0, 1603.5], [730.0, 4277.0], [732.0, 4535.0], [761.0, 4144.0], [766.0, 4101.0], [767.0, 4390.0], [752.0, 4162.0], [755.0, 4445.5], [754.0, 4306.0], [757.0, 4675.0], [756.0, 4648.0], [765.0, 4317.0], [764.0, 4098.0], [762.0, 4246.0], [760.0, 4309.0], [743.0, 4488.0], [742.0, 4105.0], [739.0, 4461.0], [738.0, 4270.0], [737.0, 4540.0], [736.0, 4599.0], [751.0, 4530.0], [750.0, 4208.5], [748.0, 4315.0], [747.0, 4262.0], [746.0, 4422.0], [744.0, 4087.0], [759.0, 4103.0], [758.0, 4176.0], [793.0, 4450.0], [798.0, 4599.0], [799.0, 4088.0], [785.0, 4407.0], [784.0, 4487.0], [787.0, 4505.0], [786.0, 4165.0], [797.0, 4531.0], [795.0, 3840.0], [794.0, 4355.0], [792.0, 4169.0], [775.0, 4213.666666666667], [772.0, 4624.0], [771.0, 4622.0], [769.0, 4343.0], [768.0, 4563.0], [782.0, 4638.0], [781.0, 4431.0], [780.0, 4321.0], [779.0, 4395.5], [777.0, 4177.0], [776.0, 4125.0], [790.0, 4134.5], [788.0, 4175.0], [824.0, 4069.0], [828.0, 4021.0], [831.0, 4104.0], [817.0, 4355.0], [816.0, 4442.5], [821.0, 3952.3333333333335], [818.0, 4266.0], [830.0, 3770.0], [829.0, 4153.0], [827.0, 4410.0], [826.0, 3836.0], [825.0, 4448.0], [814.0, 4478.0], [801.0, 4127.0], [800.0, 4073.0], [803.0, 4373.0], [802.0, 4438.0], [805.0, 4131.0], [804.0, 4400.0], [807.0, 4578.0], [806.0, 3926.0], [813.0, 3919.0], [812.0, 4356.0], [811.0, 4478.0], [810.0, 3972.0], [809.0, 4102.0], [808.0, 4539.0], [823.0, 4089.0], [822.0, 4027.0], [858.0, 4115.0], [862.0, 3809.0], [863.0, 3689.0], [848.0, 4143.0], [850.0, 4163.0], [849.0, 3766.0], [852.0, 3890.0], [851.0, 4004.0], [861.0, 4327.0], [860.0, 4100.0], [859.0, 4079.0], [857.0, 4059.0], [838.0, 3762.0], [837.0, 4473.0], [836.0, 4099.0], [835.0, 4331.0], [834.0, 4150.0], [833.0, 3848.0], [832.0, 3926.0], [846.0, 3719.0], [845.0, 4114.0], [844.0, 4212.0], [843.0, 4447.0], [842.0, 3803.0], [840.0, 4270.0], [855.0, 4359.0], [854.0, 4038.5], [888.0, 4123.0], [893.0, 4044.0], [869.0, 2290.5], [868.0, 4052.0], [867.0, 4107.0], [866.0, 3827.0], [865.0, 3658.0], [864.0, 4125.0], [871.0, 3695.0], [870.0, 3428.0], [878.0, 3983.0], [877.0, 4092.0], [876.0, 3730.0], [875.0, 3607.0], [874.0, 3937.0], [873.0, 4170.0], [872.0, 3848.0], [894.0, 4039.0], [880.0, 3923.0], [882.0, 4153.0], [881.0, 3454.0], [885.0, 3548.0], [884.0, 3793.5], [892.0, 3430.0], [890.0, 3632.0], [889.0, 3484.0], [887.0, 4116.0], [886.0, 3961.0], [920.0, 3436.0], [924.0, 3505.0], [927.0, 2968.0], [913.0, 3489.0], [912.0, 3849.0], [915.0, 3748.0], [914.0, 3841.0], [926.0, 3244.0], [925.0, 3426.0], [923.0, 3434.0], [922.0, 3443.0], [921.0, 3555.0], [911.0, 3781.0], [896.0, 3731.0], [898.0, 3531.0], [897.0, 3854.0], [900.0, 3470.0], [899.0, 3987.0], [903.0, 3916.0], [901.0, 3436.0], [910.0, 3488.0], [909.0, 3913.0], [908.0, 3386.0], [907.0, 3958.0], [906.0, 3964.0], [905.0, 3865.0], [904.0, 3853.0], [918.0, 3772.0], [916.0, 3797.0], [954.0, 811.0], [948.0, 1156.0], [955.0, 840.0], [945.0, 1218.0], [944.0, 1289.0], [953.0, 1062.0], [952.0, 1057.0], [943.0, 1302.0], [929.0, 2921.0], [928.0, 2771.0], [931.0, 2823.0], [930.0, 2830.0], [933.0, 2246.0], [932.0, 2692.0], [935.0, 2004.0], [934.0, 2154.0], [942.0, 1276.0], [941.0, 1397.0], [940.0, 1477.0], [939.0, 1774.0], [938.0, 1909.0], [937.0, 1928.0], [936.0, 1937.0], [951.0, 1086.0], [950.0, 1134.0], [949.0, 1170.0], [947.0, 1234.0], [946.0, 1265.0], [1.0, 8263.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[480.27200000000073, 4470.201000000001]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[3.0, 129.0], [4.0, 126.0], [5.0, 113.0], [8.0, 132.5], [9.0, 167.0], [10.0, 139.0], [11.0, 156.0], [12.0, 86.0], [13.0, 20.0], [14.0, 23.5], [15.0, 123.0], [16.0, 13.0], [17.0, 48.2], [18.0, 18.333333333333332], [19.0, 92.71428571428571], [21.0, 132.5], [28.0, 89.0], [39.0, 45.0], [38.0, 143.0], [40.0, 91.66666666666666], [41.0, 99.0], [43.0, 54.0], [42.0, 66.0], [45.0, 88.0], [44.0, 107.0], [47.0, 78.625], [49.0, 122.25], [48.0, 89.0], [50.0, 83.2], [51.0, 99.0], [53.0, 54.71428571428571], [52.0, 99.14285714285714], [55.0, 89.85714285714285], [54.0, 53.25], [57.0, 65.57142857142857], [56.0, 64.66666666666667], [59.0, 73.5], [58.0, 82.0], [61.0, 68.42857142857143], [60.0, 81.16666666666667], [62.0, 48.666666666666664], [63.0, 41.333333333333336], [65.0, 34.666666666666664], [64.0, 64.125], [67.0, 67.5], [66.0, 48.0], [68.0, 54.0], [71.0, 56.55555555555556], [70.0, 51.875], [69.0, 60.0], [75.0, 37.0], [74.0, 51.75], [73.0, 36.0], [72.0, 60.25], [77.0, 61.833333333333336], [79.0, 78.42857142857143], [76.0, 99.0], [78.0, 120.5], [81.0, 64.5], [83.0, 115.0], [82.0, 67.5], [80.0, 125.6], [87.0, 85.5], [86.0, 93.0], [85.0, 92.0], [84.0, 93.5], [90.0, 78.33333333333333], [88.0, 84.5], [91.0, 110.4], [89.0, 104.33333333333333], [95.0, 106.0], [94.0, 103.0], [93.0, 85.0], [92.0, 80.71428571428571], [98.0, 117.5], [96.0, 119.0], [99.0, 88.0], [97.0, 136.0], [103.0, 97.0], [102.0, 148.8], [100.0, 123.875], [101.0, 106.0], [107.0, 119.99999999999999], [105.0, 122.0], [106.0, 139.5], [104.0, 142.0], [111.0, 92.83333333333333], [108.0, 118.5], [110.0, 116.0], [109.0, 137.0], [115.0, 104.33333333333334], [114.0, 93.125], [112.0, 96.875], [113.0, 90.25], [119.0, 108.5], [116.0, 93.99999999999999], [118.0, 97.0], [117.0, 120.33333333333334], [123.0, 91.25], [122.0, 105.77777777777779], [121.0, 105.72727272727273], [120.0, 103.71428571428572], [127.0, 98.83333333333333], [126.0, 99.07692307692308], [125.0, 110.71428571428572], [124.0, 105.54545454545456], [132.0, 111.71428571428571], [131.0, 100.36363636363636], [130.0, 109.125], [128.0, 96.9], [135.0, 120.49999999999999], [134.0, 116.16666666666667], [133.0, 108.5], [129.0, 102.25], [143.0, 121.33333333333333], [141.0, 126.2], [139.0, 121.0], [138.0, 134.66666666666666], [137.0, 110.66666666666667], [136.0, 127.85714285714286], [142.0, 133.11111111111111], [140.0, 126.66666666666666], [151.0, 116.5], [150.0, 115.5], [149.0, 123.6], [148.0, 145.83333333333334], [147.0, 130.625], [146.0, 123.42857142857143], [145.0, 133.70000000000002], [144.0, 130.85714285714286], [159.0, 115.44444444444444], [157.0, 133.0], [155.0, 138.5], [153.0, 150.66666666666666], [154.0, 139.4], [156.0, 138.36363636363637], [152.0, 136.33333333333334], [158.0, 143.0], [161.0, 142.0], [166.0, 147.83333333333331], [163.0, 128.0], [164.0, 123.5], [167.0, 153.4], [165.0, 123.5625], [162.0, 133.625], [160.0, 132.0], [175.0, 123.0], [172.0, 121.57142857142857], [169.0, 110.4], [168.0, 122.0], [174.0, 113.5], [173.0, 126.66666666666667], [171.0, 106.0], [170.0, 131.85714285714286], [182.0, 131.5], [181.0, 114.0], [180.0, 134.125], [179.0, 133.14285714285714], [178.0, 115.0], [177.0, 131.71428571428572], [183.0, 129.25], [176.0, 145.0], [186.0, 126.0], [185.0, 123.66666666666667], [184.0, 121.0], [188.0, 134.33333333333337], [191.0, 125.0], [190.0, 128.75], [189.0, 131.75], [187.0, 154.2], [198.0, 121.0], [197.0, 107.0], [196.0, 121.25], [195.0, 99.0], [193.0, 118.33333333333333], [192.0, 134.33333333333334], [194.0, 144.33333333333334], [199.0, 126.0], [205.0, 129.5], [207.0, 164.5], [206.0, 143.5], [203.0, 177.66666666666666], [201.0, 169.5], [200.0, 145.0], [204.0, 188.0], [202.0, 180.0], [211.0, 169.0], [210.0, 156.25], [209.0, 164.0], [208.0, 143.5], [215.0, 134.5], [214.0, 119.0], [213.0, 140.0], [212.0, 105.0], [216.0, 134.5], [223.0, 117.0], [222.0, 109.0], [221.0, 149.0], [219.0, 165.5], [217.0, 141.66666666666666], [218.0, 180.0], [228.0, 168.5], [227.0, 153.0], [225.0, 135.0], [224.0, 124.0], [1.0, 389.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[122.87900000000006, 110.3470000000001]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 5077.0], [3.0, 5425.0], [4.0, 5261.0], [5.0, 4459.0], [6.0, 4916.0], [7.0, 4571.0], [8.0, 4337.0], [9.0, 4646.0], [10.0, 4291.0], [11.0, 4353.0], [13.0, 4666.5], [14.0, 4103.0], [15.0, 4532.0], [16.0, 3662.0], [17.0, 4476.0], [18.0, 3639.0], [19.0, 3671.0], [20.0, 3741.0], [22.0, 3431.5], [23.0, 4104.0], [24.0, 3636.0], [25.0, 3847.0], [26.0, 3481.0], [27.0, 3734.0], [28.0, 4164.0], [29.0, 3549.0], [30.0, 3688.0], [33.0, 3765.0], [32.0, 3385.5], [35.0, 3115.0], [34.0, 4153.0], [37.0, 3763.0], [36.0, 3596.0], [40.0, 3734.0], [43.0, 3072.0], [42.0, 4104.0], [45.0, 3628.5], [47.0, 3462.0], [46.0, 3184.0], [49.0, 3374.0], [48.0, 4096.0], [50.0, 3060.0], [53.0, 3393.0], [55.0, 3221.0], [54.0, 4002.0], [57.0, 3987.0], [56.0, 3887.0], [59.0, 3482.5], [62.0, 3503.6666666666665], [67.0, 3569.0], [66.0, 3305.0], [64.0, 3139.0], [70.0, 3402.0], [68.0, 3866.0], [75.0, 3250.5], [73.0, 3552.0], [72.0, 3044.5], [78.0, 3712.0], [77.0, 3530.0], [76.0, 3021.0], [83.0, 3488.5], [82.0, 3163.0], [81.0, 3604.5], [87.0, 3576.0], [86.0, 3275.0], [85.0, 3600.0], [84.0, 3052.0], [91.0, 3285.0], [90.0, 3352.5], [89.0, 3537.0], [95.0, 3345.6666666666665], [92.0, 3147.0], [98.0, 3769.0], [97.0, 3105.0], [96.0, 3239.0], [102.0, 3388.0], [101.0, 3438.0], [106.0, 2937.0], [105.0, 3065.0], [104.0, 3467.5], [111.0, 3095.0], [110.0, 3910.0], [109.0, 3445.0], [108.0, 3580.5], [115.0, 3093.0], [113.0, 3200.0], [112.0, 3328.0], [117.0, 3550.0], [116.0, 3845.0], [120.0, 3505.0], [127.0, 3729.5], [125.0, 3461.5], [126.0, 3038.0], [134.0, 3816.0], [133.0, 3123.0], [132.0, 3021.0], [131.0, 3266.3333333333335], [128.0, 3491.0], [142.0, 3471.0], [136.0, 2969.5], [151.0, 3374.0], [150.0, 2989.0], [148.0, 3889.0], [146.0, 3416.0], [159.0, 3478.0], [158.0, 3251.6666666666665], [156.0, 3155.0], [154.0, 3388.3333333333335], [152.0, 3958.0], [167.0, 3472.0], [166.0, 3089.0], [165.0, 3484.0], [164.0, 3227.5], [162.0, 3459.0], [160.0, 3216.0], [175.0, 3000.0], [174.0, 3588.0], [173.0, 3880.0], [172.0, 3210.0], [171.0, 3643.5], [169.0, 3459.0], [183.0, 3166.0], [182.0, 2930.0], [181.0, 3941.0], [178.0, 3446.0], [191.0, 3586.0], [189.0, 3605.0], [188.0, 3652.0], [187.0, 3254.0], [184.0, 3369.0], [199.0, 3229.3333333333335], [197.0, 2937.0], [194.0, 3545.0], [193.0, 3504.0], [206.0, 3187.75], [204.0, 3552.0], [202.0, 3579.0], [201.0, 3659.0], [200.0, 3031.0], [214.0, 3320.0], [213.0, 3540.0], [211.0, 3530.3333333333335], [210.0, 3285.0], [209.0, 3469.0], [223.0, 2972.0], [222.0, 3513.5], [221.0, 3262.0], [218.0, 3003.0], [216.0, 3312.0], [228.0, 3277.0], [226.0, 3147.0], [224.0, 3366.0], [236.0, 3259.5], [234.0, 3828.0], [244.0, 69.0], [246.0, 2883.466666666667], [247.0, 3121.5], [243.0, 3058.0], [254.0, 2182.6666666666665], [252.0, 3202.3333333333335], [249.0, 3087.0], [248.0, 3145.0], [270.0, 1978.0], [271.0, 1535.0], [269.0, 3247.0], [259.0, 3733.0], [258.0, 3446.25], [267.0, 3279.5], [265.0, 3447.0], [264.0, 3119.0], [263.0, 3824.0], [262.0, 3895.0], [261.0, 3360.5], [272.0, 106.0], [287.0, 1005.1428571428571], [286.0, 509.6], [285.0, 746.6], [284.0, 2819.6000000000004], [282.0, 180.0], [275.0, 3057.0], [273.0, 3219.5], [290.0, 2529.3333333333335], [289.0, 147.33333333333334], [288.0, 877.25], [293.0, 2840.0], [292.0, 3482.5], [308.0, 219.0], [318.0, 3382.0], [316.0, 2882.0], [314.0, 3011.0], [313.0, 3462.6666666666665], [310.0, 3351.3333333333335], [307.0, 3219.0], [306.0, 3221.0000000000005], [323.0, 3022.0], [327.0, 1066.75], [328.0, 1312.3333333333333], [325.0, 2377.3333333333335], [326.0, 1371.3333333333333], [333.0, 3420.0], [332.0, 2899.0], [331.0, 3141.0], [330.0, 3731.0], [322.0, 3862.0], [321.0, 3554.5], [320.0, 3117.0], [348.0, 3377.0], [351.0, 2197.6666666666665], [345.0, 1446.6666666666667], [349.0, 2834.0], [347.0, 3366.0], [346.0, 3164.0], [343.0, 2891.0], [337.0, 3840.0], [336.0, 3316.3333333333335], [342.0, 2969.5], [341.0, 3840.0], [364.0, 2770.0], [363.0, 364.0], [367.0, 3524.5], [365.0, 3131.5], [356.0, 3170.0], [355.0, 3287.0], [354.0, 3143.0], [353.0, 3831.0], [352.0, 2815.0], [382.0, 3051.0], [368.0, 1834.5], [370.0, 3125.0], [369.0, 3746.0], [383.0, 2773.0], [379.0, 3371.5], [377.0, 3127.0], [376.0, 3419.0], [374.0, 3727.0], [373.0, 3190.0], [372.0, 3477.0], [398.0, 3259.0], [396.0, 3271.0], [395.0, 3339.0], [394.0, 3022.0], [393.0, 3277.0], [392.0, 3271.5], [390.0, 3795.0], [389.0, 3243.0], [387.0, 3008.0], [386.0, 3405.0], [415.0, 2896.6666666666665], [414.0, 2915.0], [411.0, 3262.3333333333335], [408.0, 3143.0], [405.0, 3772.0], [404.0, 3417.3333333333335], [401.0, 3168.6666666666665], [431.0, 2935.3333333333335], [425.0, 366.0], [429.0, 3649.0], [418.0, 2796.0], [417.0, 3173.0], [427.0, 3140.0], [426.0, 3045.5], [423.0, 3596.0], [422.0, 2945.5], [421.0, 3083.0], [420.0, 3176.0], [446.0, 2959.5], [444.0, 3303.0], [443.0, 2760.0], [442.0, 3159.5], [440.0, 3159.0], [439.0, 3120.0], [438.0, 3163.0], [436.0, 3210.0], [433.0, 3130.0], [432.0, 3428.0], [461.0, 3516.0], [463.0, 3004.0], [460.0, 3724.0], [459.0, 3358.0], [458.0, 3071.5], [456.0, 3290.3333333333335], [453.0, 3232.0], [452.0, 2895.0], [451.0, 3563.0], [450.0, 3298.0], [449.0, 3051.6666666666665], [479.0, 3185.0], [477.0, 3364.5], [466.0, 2807.0], [465.0, 3248.0], [464.0, 3298.0], [475.0, 2819.0], [474.0, 3616.0], [473.0, 3252.0], [472.0, 3191.0], [471.0, 3338.0], [470.0, 3448.5], [469.0, 2829.0], [483.0, 3178.0], [495.0, 3113.6666666666665], [492.0, 3135.0], [490.0, 3393.5], [488.0, 3383.0], [487.0, 3099.0], [485.0, 2702.5], [482.0, 3249.0], [481.0, 3470.5], [504.0, 2893.0], [510.0, 3176.0], [507.0, 3072.6666666666665], [503.0, 3582.0], [502.0, 2722.0], [501.0, 3234.0], [500.0, 2941.0], [499.0, 2757.0], [498.0, 3082.0], [536.0, 3458.0], [541.0, 3618.0], [527.0, 2306.0], [514.0, 2975.0], [512.0, 2977.0], [517.0, 2969.0], [515.0, 3666.0], [519.0, 2648.0], [518.0, 2883.0], [525.0, 3115.5], [523.0, 2697.0], [522.0, 3103.0], [521.0, 3556.0], [520.0, 2701.0], [542.0, 2585.0], [530.0, 2885.5], [528.0, 3120.0], [532.0, 2805.0], [531.0, 3248.0], [540.0, 3537.0], [539.0, 2772.5], [537.0, 3463.0], [535.0, 3178.0], [534.0, 3135.5], [572.0, 2644.0], [552.0, 2375.0], [555.0, 3061.0], [554.0, 3293.5], [556.0, 560.0], [575.0, 3277.0], [561.0, 2990.5], [563.0, 3491.0], [562.0, 3368.0], [574.0, 2833.0], [573.0, 3354.0], [571.0, 3077.0], [569.0, 3350.3333333333335], [559.0, 3063.0], [550.0, 2816.5], [548.0, 3401.0], [547.0, 3171.0], [546.0, 2791.6666666666665], [545.0, 3154.0], [557.0, 2966.0], [566.0, 2859.0], [564.0, 2643.0], [600.0, 2553.0], [605.0, 3078.0], [579.0, 1856.5], [578.0, 2656.0], [577.0, 2745.0], [576.0, 3506.0], [583.0, 3200.0], [581.0, 3077.0], [590.0, 3553.0], [589.0, 3049.0], [588.0, 2860.0], [587.0, 2910.0], [585.0, 3063.5], [607.0, 3166.0], [594.0, 3253.0], [592.0, 2830.0], [597.0, 3550.0], [596.0, 2900.5], [604.0, 2701.0], [603.0, 3057.0], [602.0, 2810.5], [599.0, 3096.0], [598.0, 2518.0], [633.0, 2884.5], [639.0, 2898.0], [629.0, 632.0], [638.0, 3396.0], [636.0, 2773.0], [635.0, 3009.0], [623.0, 2625.0], [610.0, 3373.0], [609.0, 2666.0], [612.0, 3286.0], [611.0, 3507.0], [615.0, 2935.0], [613.0, 2750.0], [622.0, 3073.0], [621.0, 2878.0], [620.0, 3408.0], [618.0, 3214.0], [617.0, 3176.0], [616.0, 3076.0], [631.0, 2918.0], [628.0, 3008.0], [626.0, 2856.0], [625.0, 2431.0], [624.0, 3415.0], [668.0, 2916.0], [644.0, 2274.3333333333335], [642.0, 2723.5], [640.0, 2700.0], [646.0, 2458.0], [645.0, 3468.0], [654.0, 3452.0], [653.0, 2778.0], [652.0, 2531.0], [650.0, 2800.0], [649.0, 3264.0], [648.0, 3089.0], [671.0, 3140.0], [656.0, 3035.0], [658.0, 2720.0], [657.0, 2848.0], [660.0, 2746.0], [659.0, 3148.0], [663.0, 3395.0], [661.0, 2610.0], [670.0, 2505.0], [669.0, 2968.0], [667.0, 2770.0], [666.0, 3094.0], [665.0, 3088.0], [664.0, 2403.5], [697.0, 3358.0], [702.0, 3348.0], [703.0, 3325.0], [689.0, 3279.0], [688.0, 2369.0], [691.0, 2358.0], [690.0, 3388.0], [701.0, 3134.0], [699.0, 2637.0], [698.0, 3277.0], [687.0, 3149.3333333333335], [672.0, 2916.0], [674.0, 2956.0], [673.0, 2441.0], [676.0, 2887.0], [675.0, 3177.0], [678.0, 3127.0], [677.0, 2978.0], [686.0, 3065.0], [683.0, 2738.0], [682.0, 3252.0], [681.0, 2787.6666666666665], [695.0, 3228.0], [694.0, 2776.0], [693.0, 3361.0], [692.0, 2839.0], [731.0, 2711.0], [710.0, 1769.0], [719.0, 2631.0], [704.0, 2900.0], [709.0, 2717.5], [707.0, 2537.3333333333335], [718.0, 2276.0], [717.0, 2607.0], [716.0, 2854.0], [714.0, 3193.0], [713.0, 2489.0], [712.0, 3148.0], [735.0, 2597.0], [721.0, 2788.0], [720.0, 3316.0], [723.0, 3309.0], [722.0, 2666.0], [725.0, 3268.0], [724.0, 3299.0], [734.0, 2784.0], [733.0, 3240.5], [730.0, 2246.0], [729.0, 2762.0], [728.0, 3010.0], [711.0, 2332.0], [727.0, 3301.0], [726.0, 3135.0], [743.0, 1796.5], [763.0, 2757.0], [751.0, 2341.0], [736.0, 2994.0], [739.0, 2383.0], [737.0, 2263.0], [742.0, 3028.5], [740.0, 2757.0], [750.0, 2568.0], [749.0, 2239.0], [748.0, 2329.0], [747.0, 3249.0], [745.0, 2267.0], [744.0, 2223.0], [766.0, 2712.0], [753.0, 2774.0], [752.0, 2717.0], [755.0, 2624.0], [754.0, 2812.0], [765.0, 2827.0], [764.0, 2467.0], [762.0, 2617.0], [761.0, 2643.0], [760.0, 3256.0], [759.0, 2826.0], [758.0, 2625.3333333333335], [793.0, 3147.0], [798.0, 2548.0], [799.0, 2667.0], [785.0, 2822.0], [784.0, 2203.0], [787.0, 2312.0], [786.0, 3090.0], [789.0, 2280.0], [788.0, 2405.0], [796.0, 2408.0], [795.0, 2671.0], [794.0, 2685.0], [792.0, 3149.0], [775.0, 2322.0], [774.0, 2449.0], [772.0, 2885.0], [770.0, 2415.5], [768.0, 2642.0], [783.0, 2440.0], [781.0, 2661.0], [780.0, 3206.0], [779.0, 2468.0], [777.0, 2488.0], [791.0, 2325.0], [790.0, 3164.0], [824.0, 2703.0], [828.0, 2019.0], [831.0, 2570.0], [818.0, 2068.0], [817.0, 2356.0], [821.0, 2879.5], [819.0, 3063.0], [830.0, 2521.0], [829.0, 1968.0], [827.0, 2193.0], [826.0, 3023.0], [825.0, 2873.0], [815.0, 2546.0], [800.0, 3054.0], [802.0, 2828.0], [801.0, 3039.0], [804.0, 2482.0], [803.0, 2637.0], [807.0, 2522.5], [805.0, 2067.0], [813.0, 2672.5], [811.0, 3087.0], [810.0, 2524.6666666666665], [823.0, 2555.0], [822.0, 2091.0], [857.0, 2521.0], [862.0, 2762.5], [863.0, 1885.0], [850.0, 2862.0], [848.0, 2388.0], [860.0, 2862.0], [859.0, 1968.0], [858.0, 2386.0], [847.0, 2500.0], [833.0, 2760.5], [837.0, 2345.0], [836.0, 2830.6666666666665], [839.0, 2903.0], [838.0, 2640.0], [846.0, 2882.0], [845.0, 2742.0], [844.0, 2664.5], [842.0, 2946.0], [841.0, 2444.0], [840.0, 2554.0], [855.0, 2625.5], [853.0, 2432.0], [852.0, 2874.0], [851.0, 2854.0], [889.0, 2651.0], [894.0, 2724.0], [895.0, 2409.0], [881.0, 2482.5], [883.0, 2434.0], [882.0, 2358.0], [885.0, 2385.0], [884.0, 2858.0], [893.0, 2556.0], [892.0, 2789.5], [890.0, 2537.0], [888.0, 2831.0], [871.0, 2244.0], [870.0, 2924.0], [869.0, 1941.0], [868.0, 2439.0], [867.0, 2454.5], [865.0, 2502.5], [879.0, 2871.0], [878.0, 2712.0], [877.0, 2024.0], [876.0, 2611.0], [874.0, 2701.0], [873.0, 2589.0], [872.0, 2355.0], [887.0, 2845.0], [886.0, 2702.0], [924.0, 2459.0], [927.0, 2365.0], [913.0, 2668.0], [912.0, 2593.0], [915.0, 2579.0], [914.0, 2474.0], [917.0, 2570.0], [916.0, 2583.0], [926.0, 2321.0], [925.0, 2447.0], [923.0, 2511.0], [922.0, 2483.0], [921.0, 2579.0], [920.0, 2506.0], [911.0, 2630.0], [897.0, 2805.0], [896.0, 2717.0], [899.0, 2623.0], [898.0, 2623.0], [901.0, 2650.0], [900.0, 2804.0], [903.0, 2590.0], [902.0, 2767.0], [910.0, 2418.0], [909.0, 2614.0], [908.0, 2734.0], [907.0, 2322.0], [906.0, 2413.0], [905.0, 2556.0], [904.0, 2756.0], [919.0, 2443.0], [918.0, 2592.0], [940.0, 1076.0], [941.0, 981.0], [928.0, 2367.0], [930.0, 1740.0], [929.0, 1984.0], [939.0, 991.0], [938.0, 1011.0], [937.0, 1107.0], [936.0, 1141.0], [935.0, 1170.5], [933.0, 1521.0], [932.0, 1636.0], [931.0, 1646.0], [1.0, 6872.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[464.18500000000057, 2928.6440000000025]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 955.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7416.666666666667, "minX": 1.66895184E12, "maxY": 3941470.85, "series": [{"data": [[1.66895184E12, 3941470.85]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66895184E12, 7416.666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66895184E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 110.3470000000001, "minX": 1.66895184E12, "maxY": 4470.201000000001, "series": [{"data": [[1.66895184E12, 4470.201000000001]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66895184E12, 110.3470000000001]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66895184E12, 2928.6440000000025]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66895184E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 108.98500000000001, "minX": 1.66895184E12, "maxY": 982.5090000000005, "series": [{"data": [[1.66895184E12, 982.5090000000005]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66895184E12, 108.98500000000001]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66895184E12, 835.6599999999995]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66895184E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 5.897000000000003, "minX": 1.66895184E12, "maxY": 196.37900000000013, "series": [{"data": [[1.66895184E12, 86.19399999999995]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66895184E12, 5.897000000000003]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66895184E12, 196.37900000000013]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66895184E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.66895184E12, "maxY": 8263.0, "series": [{"data": [[1.66895184E12, 8263.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66895184E12, 4921.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66895184E12, 6226.619999999992]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66895184E12, 5134.95]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66895184E12, 10.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66895184E12, 2960.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66895184E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 51.5, "minX": 4.0, "maxY": 5930.0, "series": [{"data": [[8.0, 4781.0], [566.0, 4878.0], [9.0, 2771.0], [661.0, 3049.0], [44.0, 563.5], [735.0, 125.0], [12.0, 1149.0], [201.0, 3477.0], [59.0, 193.0], [58.0, 2581.0], [4.0, 51.5], [269.0, 64.0], [18.0, 1270.5], [289.0, 4293.0], [19.0, 5141.0], [29.0, 5930.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 735.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 32.5, "minX": 4.0, "maxY": 969.0, "series": [{"data": [[8.0, 798.0], [566.0, 969.0], [9.0, 117.0], [661.0, 764.0], [44.0, 86.5], [735.0, 124.0], [12.0, 269.0], [201.0, 796.0], [59.0, 149.0], [58.0, 487.0], [4.0, 32.5], [269.0, 63.0], [18.0, 105.0], [289.0, 503.0], [19.0, 356.5], [29.0, 725.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 735.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66895184E12, "maxY": 50.0, "series": [{"data": [[1.66895184E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66895184E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66895184E12, "maxY": 50.0, "series": [{"data": [[1.66895184E12, 50.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66895184E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.66895184E12, "maxY": 16.666666666666668, "series": [{"data": [[1.66895184E12, 16.666666666666668]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66895184E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66895184E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66895184E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66895184E12, "maxY": 50.0, "series": [{"data": [[1.66895184E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66895184E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

