/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 2123.0, "series": [{"data": [[0.0, 10.0], [0.1, 14.0], [0.2, 20.0], [0.3, 20.0], [0.4, 23.0], [0.5, 24.0], [0.6, 24.0], [0.7, 27.0], [0.8, 28.0], [0.9, 32.0], [1.0, 32.0], [1.1, 32.0], [1.2, 33.0], [1.3, 34.0], [1.4, 34.0], [1.5, 35.0], [1.6, 35.0], [1.7, 36.0], [1.8, 36.0], [1.9, 36.0], [2.0, 39.0], [2.1, 41.0], [2.2, 41.0], [2.3, 41.0], [2.4, 42.0], [2.5, 43.0], [2.6, 45.0], [2.7, 46.0], [2.8, 47.0], [2.9, 47.0], [3.0, 49.0], [3.1, 49.0], [3.2, 50.0], [3.3, 50.0], [3.4, 53.0], [3.5, 54.0], [3.6, 57.0], [3.7, 59.0], [3.8, 61.0], [3.9, 63.0], [4.0, 63.0], [4.1, 63.0], [4.2, 64.0], [4.3, 74.0], [4.4, 74.0], [4.5, 78.0], [4.6, 81.0], [4.7, 87.0], [4.8, 89.0], [4.9, 90.0], [5.0, 91.0], [5.1, 93.0], [5.2, 95.0], [5.3, 100.0], [5.4, 101.0], [5.5, 101.0], [5.6, 103.0], [5.7, 105.0], [5.8, 105.0], [5.9, 105.0], [6.0, 106.0], [6.1, 108.0], [6.2, 108.0], [6.3, 109.0], [6.4, 109.0], [6.5, 109.0], [6.6, 112.0], [6.7, 114.0], [6.8, 114.0], [6.9, 114.0], [7.0, 115.0], [7.1, 118.0], [7.2, 118.0], [7.3, 121.0], [7.4, 124.0], [7.5, 126.0], [7.6, 127.0], [7.7, 127.0], [7.8, 131.0], [7.9, 133.0], [8.0, 134.0], [8.1, 134.0], [8.2, 137.0], [8.3, 137.0], [8.4, 141.0], [8.5, 141.0], [8.6, 142.0], [8.7, 144.0], [8.8, 144.0], [8.9, 147.0], [9.0, 147.0], [9.1, 149.0], [9.2, 149.0], [9.3, 154.0], [9.4, 154.0], [9.5, 158.0], [9.6, 159.0], [9.7, 159.0], [9.8, 159.0], [9.9, 160.0], [10.0, 162.0], [10.1, 165.0], [10.2, 165.0], [10.3, 166.0], [10.4, 167.0], [10.5, 167.0], [10.6, 168.0], [10.7, 170.0], [10.8, 171.0], [10.9, 172.0], [11.0, 172.0], [11.1, 172.0], [11.2, 174.0], [11.3, 174.0], [11.4, 175.0], [11.5, 176.0], [11.6, 179.0], [11.7, 184.0], [11.8, 184.0], [11.9, 185.0], [12.0, 188.0], [12.1, 188.0], [12.2, 188.0], [12.3, 189.0], [12.4, 189.0], [12.5, 191.0], [12.6, 194.0], [12.7, 195.0], [12.8, 196.0], [12.9, 198.0], [13.0, 199.0], [13.1, 199.0], [13.2, 202.0], [13.3, 203.0], [13.4, 204.0], [13.5, 204.0], [13.6, 207.0], [13.7, 209.0], [13.8, 209.0], [13.9, 210.0], [14.0, 214.0], [14.1, 216.0], [14.2, 216.0], [14.3, 217.0], [14.4, 218.0], [14.5, 218.0], [14.6, 219.0], [14.7, 221.0], [14.8, 223.0], [14.9, 226.0], [15.0, 227.0], [15.1, 232.0], [15.2, 232.0], [15.3, 233.0], [15.4, 234.0], [15.5, 235.0], [15.6, 236.0], [15.7, 237.0], [15.8, 237.0], [15.9, 238.0], [16.0, 239.0], [16.1, 242.0], [16.2, 243.0], [16.3, 243.0], [16.4, 243.0], [16.5, 245.0], [16.6, 245.0], [16.7, 247.0], [16.8, 249.0], [16.9, 250.0], [17.0, 251.0], [17.1, 252.0], [17.2, 253.0], [17.3, 254.0], [17.4, 255.0], [17.5, 255.0], [17.6, 256.0], [17.7, 256.0], [17.8, 257.0], [17.9, 257.0], [18.0, 257.0], [18.1, 258.0], [18.2, 259.0], [18.3, 259.0], [18.4, 261.0], [18.5, 262.0], [18.6, 263.0], [18.7, 264.0], [18.8, 264.0], [18.9, 264.0], [19.0, 265.0], [19.1, 265.0], [19.2, 266.0], [19.3, 266.0], [19.4, 266.0], [19.5, 268.0], [19.6, 268.0], [19.7, 269.0], [19.8, 269.0], [19.9, 270.0], [20.0, 271.0], [20.1, 272.0], [20.2, 274.0], [20.3, 274.0], [20.4, 276.0], [20.5, 276.0], [20.6, 277.0], [20.7, 278.0], [20.8, 280.0], [20.9, 282.0], [21.0, 282.0], [21.1, 283.0], [21.2, 283.0], [21.3, 283.0], [21.4, 283.0], [21.5, 284.0], [21.6, 284.0], [21.7, 286.0], [21.8, 287.0], [21.9, 287.0], [22.0, 289.0], [22.1, 290.0], [22.2, 290.0], [22.3, 290.0], [22.4, 293.0], [22.5, 294.0], [22.6, 295.0], [22.7, 295.0], [22.8, 295.0], [22.9, 296.0], [23.0, 296.0], [23.1, 298.0], [23.2, 298.0], [23.3, 298.0], [23.4, 300.0], [23.5, 301.0], [23.6, 301.0], [23.7, 302.0], [23.8, 305.0], [23.9, 305.0], [24.0, 307.0], [24.1, 308.0], [24.2, 308.0], [24.3, 309.0], [24.4, 309.0], [24.5, 310.0], [24.6, 311.0], [24.7, 311.0], [24.8, 314.0], [24.9, 315.0], [25.0, 320.0], [25.1, 321.0], [25.2, 321.0], [25.3, 322.0], [25.4, 323.0], [25.5, 325.0], [25.6, 333.0], [25.7, 333.0], [25.8, 334.0], [25.9, 335.0], [26.0, 335.0], [26.1, 335.0], [26.2, 339.0], [26.3, 343.0], [26.4, 349.0], [26.5, 349.0], [26.6, 351.0], [26.7, 353.0], [26.8, 354.0], [26.9, 355.0], [27.0, 355.0], [27.1, 356.0], [27.2, 356.0], [27.3, 359.0], [27.4, 360.0], [27.5, 360.0], [27.6, 360.0], [27.7, 360.0], [27.8, 361.0], [27.9, 363.0], [28.0, 363.0], [28.1, 364.0], [28.2, 367.0], [28.3, 369.0], [28.4, 370.0], [28.5, 370.0], [28.6, 372.0], [28.7, 374.0], [28.8, 374.0], [28.9, 374.0], [29.0, 375.0], [29.1, 376.0], [29.2, 379.0], [29.3, 382.0], [29.4, 382.0], [29.5, 383.0], [29.6, 385.0], [29.7, 386.0], [29.8, 387.0], [29.9, 387.0], [30.0, 390.0], [30.1, 391.0], [30.2, 392.0], [30.3, 393.0], [30.4, 394.0], [30.5, 394.0], [30.6, 394.0], [30.7, 394.0], [30.8, 399.0], [30.9, 401.0], [31.0, 402.0], [31.1, 402.0], [31.2, 403.0], [31.3, 404.0], [31.4, 405.0], [31.5, 405.0], [31.6, 405.0], [31.7, 406.0], [31.8, 408.0], [31.9, 409.0], [32.0, 409.0], [32.1, 411.0], [32.2, 411.0], [32.3, 412.0], [32.4, 414.0], [32.5, 416.0], [32.6, 416.0], [32.7, 417.0], [32.8, 418.0], [32.9, 418.0], [33.0, 419.0], [33.1, 421.0], [33.2, 422.0], [33.3, 423.0], [33.4, 423.0], [33.5, 424.0], [33.6, 425.0], [33.7, 426.0], [33.8, 426.0], [33.9, 427.0], [34.0, 429.0], [34.1, 430.0], [34.2, 432.0], [34.3, 434.0], [34.4, 434.0], [34.5, 434.0], [34.6, 436.0], [34.7, 438.0], [34.8, 440.0], [34.9, 441.0], [35.0, 445.0], [35.1, 449.0], [35.2, 449.0], [35.3, 450.0], [35.4, 450.0], [35.5, 451.0], [35.6, 451.0], [35.7, 451.0], [35.8, 452.0], [35.9, 453.0], [36.0, 453.0], [36.1, 453.0], [36.2, 453.0], [36.3, 454.0], [36.4, 455.0], [36.5, 456.0], [36.6, 461.0], [36.7, 462.0], [36.8, 463.0], [36.9, 464.0], [37.0, 464.0], [37.1, 465.0], [37.2, 465.0], [37.3, 467.0], [37.4, 467.0], [37.5, 468.0], [37.6, 468.0], [37.7, 469.0], [37.8, 472.0], [37.9, 474.0], [38.0, 474.0], [38.1, 477.0], [38.2, 478.0], [38.3, 479.0], [38.4, 481.0], [38.5, 485.0], [38.6, 487.0], [38.7, 488.0], [38.8, 489.0], [38.9, 491.0], [39.0, 493.0], [39.1, 495.0], [39.2, 496.0], [39.3, 497.0], [39.4, 501.0], [39.5, 503.0], [39.6, 504.0], [39.7, 510.0], [39.8, 520.0], [39.9, 521.0], [40.0, 522.0], [40.1, 525.0], [40.2, 526.0], [40.3, 530.0], [40.4, 531.0], [40.5, 534.0], [40.6, 537.0], [40.7, 540.0], [40.8, 542.0], [40.9, 543.0], [41.0, 548.0], [41.1, 548.0], [41.2, 549.0], [41.3, 551.0], [41.4, 554.0], [41.5, 555.0], [41.6, 555.0], [41.7, 557.0], [41.8, 559.0], [41.9, 561.0], [42.0, 562.0], [42.1, 565.0], [42.2, 566.0], [42.3, 568.0], [42.4, 568.0], [42.5, 568.0], [42.6, 568.0], [42.7, 569.0], [42.8, 577.0], [42.9, 578.0], [43.0, 578.0], [43.1, 580.0], [43.2, 581.0], [43.3, 582.0], [43.4, 583.0], [43.5, 585.0], [43.6, 586.0], [43.7, 591.0], [43.8, 592.0], [43.9, 592.0], [44.0, 593.0], [44.1, 593.0], [44.2, 594.0], [44.3, 595.0], [44.4, 596.0], [44.5, 596.0], [44.6, 596.0], [44.7, 597.0], [44.8, 598.0], [44.9, 601.0], [45.0, 603.0], [45.1, 604.0], [45.2, 604.0], [45.3, 605.0], [45.4, 605.0], [45.5, 606.0], [45.6, 606.0], [45.7, 610.0], [45.8, 610.0], [45.9, 611.0], [46.0, 613.0], [46.1, 613.0], [46.2, 613.0], [46.3, 615.0], [46.4, 617.0], [46.5, 617.0], [46.6, 618.0], [46.7, 618.0], [46.8, 619.0], [46.9, 619.0], [47.0, 620.0], [47.1, 621.0], [47.2, 621.0], [47.3, 622.0], [47.4, 622.0], [47.5, 624.0], [47.6, 624.0], [47.7, 626.0], [47.8, 633.0], [47.9, 635.0], [48.0, 636.0], [48.1, 639.0], [48.2, 643.0], [48.3, 644.0], [48.4, 646.0], [48.5, 647.0], [48.6, 648.0], [48.7, 648.0], [48.8, 648.0], [48.9, 650.0], [49.0, 654.0], [49.1, 655.0], [49.2, 657.0], [49.3, 657.0], [49.4, 658.0], [49.5, 659.0], [49.6, 660.0], [49.7, 660.0], [49.8, 660.0], [49.9, 663.0], [50.0, 663.0], [50.1, 664.0], [50.2, 667.0], [50.3, 669.0], [50.4, 673.0], [50.5, 674.0], [50.6, 675.0], [50.7, 675.0], [50.8, 676.0], [50.9, 677.0], [51.0, 678.0], [51.1, 679.0], [51.2, 680.0], [51.3, 680.0], [51.4, 681.0], [51.5, 682.0], [51.6, 687.0], [51.7, 687.0], [51.8, 690.0], [51.9, 692.0], [52.0, 696.0], [52.1, 696.0], [52.2, 697.0], [52.3, 697.0], [52.4, 699.0], [52.5, 699.0], [52.6, 700.0], [52.7, 701.0], [52.8, 703.0], [52.9, 703.0], [53.0, 704.0], [53.1, 705.0], [53.2, 706.0], [53.3, 707.0], [53.4, 711.0], [53.5, 712.0], [53.6, 712.0], [53.7, 715.0], [53.8, 715.0], [53.9, 719.0], [54.0, 720.0], [54.1, 720.0], [54.2, 721.0], [54.3, 722.0], [54.4, 723.0], [54.5, 724.0], [54.6, 724.0], [54.7, 726.0], [54.8, 727.0], [54.9, 728.0], [55.0, 728.0], [55.1, 734.0], [55.2, 735.0], [55.3, 736.0], [55.4, 740.0], [55.5, 744.0], [55.6, 745.0], [55.7, 746.0], [55.8, 746.0], [55.9, 746.0], [56.0, 747.0], [56.1, 747.0], [56.2, 748.0], [56.3, 748.0], [56.4, 749.0], [56.5, 752.0], [56.6, 753.0], [56.7, 756.0], [56.8, 761.0], [56.9, 762.0], [57.0, 764.0], [57.1, 768.0], [57.2, 769.0], [57.3, 773.0], [57.4, 773.0], [57.5, 774.0], [57.6, 779.0], [57.7, 780.0], [57.8, 780.0], [57.9, 782.0], [58.0, 783.0], [58.1, 786.0], [58.2, 787.0], [58.3, 792.0], [58.4, 792.0], [58.5, 794.0], [58.6, 794.0], [58.7, 797.0], [58.8, 797.0], [58.9, 799.0], [59.0, 801.0], [59.1, 801.0], [59.2, 802.0], [59.3, 804.0], [59.4, 805.0], [59.5, 807.0], [59.6, 807.0], [59.7, 811.0], [59.8, 812.0], [59.9, 812.0], [60.0, 813.0], [60.1, 818.0], [60.2, 819.0], [60.3, 820.0], [60.4, 825.0], [60.5, 826.0], [60.6, 831.0], [60.7, 831.0], [60.8, 831.0], [60.9, 835.0], [61.0, 836.0], [61.1, 839.0], [61.2, 842.0], [61.3, 843.0], [61.4, 846.0], [61.5, 846.0], [61.6, 847.0], [61.7, 848.0], [61.8, 849.0], [61.9, 850.0], [62.0, 850.0], [62.1, 850.0], [62.2, 851.0], [62.3, 857.0], [62.4, 858.0], [62.5, 860.0], [62.6, 862.0], [62.7, 864.0], [62.8, 866.0], [62.9, 868.0], [63.0, 869.0], [63.1, 870.0], [63.2, 870.0], [63.3, 872.0], [63.4, 872.0], [63.5, 873.0], [63.6, 876.0], [63.7, 876.0], [63.8, 878.0], [63.9, 879.0], [64.0, 879.0], [64.1, 881.0], [64.2, 882.0], [64.3, 884.0], [64.4, 884.0], [64.5, 886.0], [64.6, 887.0], [64.7, 891.0], [64.8, 891.0], [64.9, 891.0], [65.0, 891.0], [65.1, 892.0], [65.2, 892.0], [65.3, 895.0], [65.4, 896.0], [65.5, 896.0], [65.6, 896.0], [65.7, 898.0], [65.8, 898.0], [65.9, 898.0], [66.0, 901.0], [66.1, 901.0], [66.2, 902.0], [66.3, 902.0], [66.4, 903.0], [66.5, 906.0], [66.6, 908.0], [66.7, 909.0], [66.8, 910.0], [66.9, 912.0], [67.0, 912.0], [67.1, 913.0], [67.2, 913.0], [67.3, 913.0], [67.4, 914.0], [67.5, 914.0], [67.6, 914.0], [67.7, 915.0], [67.8, 915.0], [67.9, 915.0], [68.0, 917.0], [68.1, 917.0], [68.2, 919.0], [68.3, 922.0], [68.4, 922.0], [68.5, 923.0], [68.6, 923.0], [68.7, 925.0], [68.8, 926.0], [68.9, 926.0], [69.0, 927.0], [69.1, 929.0], [69.2, 931.0], [69.3, 932.0], [69.4, 932.0], [69.5, 934.0], [69.6, 935.0], [69.7, 936.0], [69.8, 939.0], [69.9, 940.0], [70.0, 944.0], [70.1, 945.0], [70.2, 946.0], [70.3, 947.0], [70.4, 948.0], [70.5, 950.0], [70.6, 951.0], [70.7, 952.0], [70.8, 952.0], [70.9, 954.0], [71.0, 954.0], [71.1, 954.0], [71.2, 955.0], [71.3, 956.0], [71.4, 958.0], [71.5, 959.0], [71.6, 960.0], [71.7, 960.0], [71.8, 961.0], [71.9, 964.0], [72.0, 965.0], [72.1, 971.0], [72.2, 971.0], [72.3, 978.0], [72.4, 980.0], [72.5, 981.0], [72.6, 982.0], [72.7, 988.0], [72.8, 988.0], [72.9, 988.0], [73.0, 990.0], [73.1, 994.0], [73.2, 996.0], [73.3, 996.0], [73.4, 1008.0], [73.5, 1008.0], [73.6, 1008.0], [73.7, 1008.0], [73.8, 1009.0], [73.9, 1010.0], [74.0, 1011.0], [74.1, 1016.0], [74.2, 1018.0], [74.3, 1018.0], [74.4, 1019.0], [74.5, 1019.0], [74.6, 1021.0], [74.7, 1021.0], [74.8, 1024.0], [74.9, 1025.0], [75.0, 1031.0], [75.1, 1033.0], [75.2, 1036.0], [75.3, 1037.0], [75.4, 1038.0], [75.5, 1039.0], [75.6, 1039.0], [75.7, 1042.0], [75.8, 1049.0], [75.9, 1052.0], [76.0, 1053.0], [76.1, 1053.0], [76.2, 1053.0], [76.3, 1053.0], [76.4, 1053.0], [76.5, 1053.0], [76.6, 1054.0], [76.7, 1056.0], [76.8, 1056.0], [76.9, 1058.0], [77.0, 1060.0], [77.1, 1061.0], [77.2, 1063.0], [77.3, 1064.0], [77.4, 1067.0], [77.5, 1067.0], [77.6, 1068.0], [77.7, 1069.0], [77.8, 1069.0], [77.9, 1073.0], [78.0, 1073.0], [78.1, 1075.0], [78.2, 1076.0], [78.3, 1077.0], [78.4, 1079.0], [78.5, 1079.0], [78.6, 1083.0], [78.7, 1085.0], [78.8, 1085.0], [78.9, 1087.0], [79.0, 1089.0], [79.1, 1093.0], [79.2, 1093.0], [79.3, 1095.0], [79.4, 1095.0], [79.5, 1097.0], [79.6, 1100.0], [79.7, 1102.0], [79.8, 1109.0], [79.9, 1109.0], [80.0, 1111.0], [80.1, 1113.0], [80.2, 1116.0], [80.3, 1116.0], [80.4, 1119.0], [80.5, 1123.0], [80.6, 1130.0], [80.7, 1132.0], [80.8, 1136.0], [80.9, 1136.0], [81.0, 1139.0], [81.1, 1143.0], [81.2, 1149.0], [81.3, 1152.0], [81.4, 1154.0], [81.5, 1163.0], [81.6, 1168.0], [81.7, 1170.0], [81.8, 1171.0], [81.9, 1175.0], [82.0, 1182.0], [82.1, 1182.0], [82.2, 1183.0], [82.3, 1184.0], [82.4, 1185.0], [82.5, 1186.0], [82.6, 1188.0], [82.7, 1190.0], [82.8, 1192.0], [82.9, 1200.0], [83.0, 1201.0], [83.1, 1203.0], [83.2, 1208.0], [83.3, 1211.0], [83.4, 1212.0], [83.5, 1218.0], [83.6, 1220.0], [83.7, 1228.0], [83.8, 1232.0], [83.9, 1234.0], [84.0, 1235.0], [84.1, 1236.0], [84.2, 1238.0], [84.3, 1239.0], [84.4, 1242.0], [84.5, 1245.0], [84.6, 1248.0], [84.7, 1248.0], [84.8, 1249.0], [84.9, 1252.0], [85.0, 1265.0], [85.1, 1266.0], [85.2, 1268.0], [85.3, 1269.0], [85.4, 1271.0], [85.5, 1271.0], [85.6, 1279.0], [85.7, 1280.0], [85.8, 1281.0], [85.9, 1283.0], [86.0, 1285.0], [86.1, 1289.0], [86.2, 1289.0], [86.3, 1292.0], [86.4, 1297.0], [86.5, 1298.0], [86.6, 1299.0], [86.7, 1299.0], [86.8, 1301.0], [86.9, 1308.0], [87.0, 1311.0], [87.1, 1311.0], [87.2, 1312.0], [87.3, 1314.0], [87.4, 1315.0], [87.5, 1316.0], [87.6, 1316.0], [87.7, 1321.0], [87.8, 1321.0], [87.9, 1322.0], [88.0, 1323.0], [88.1, 1325.0], [88.2, 1325.0], [88.3, 1327.0], [88.4, 1328.0], [88.5, 1330.0], [88.6, 1331.0], [88.7, 1332.0], [88.8, 1332.0], [88.9, 1334.0], [89.0, 1336.0], [89.1, 1337.0], [89.2, 1337.0], [89.3, 1337.0], [89.4, 1340.0], [89.5, 1340.0], [89.6, 1342.0], [89.7, 1343.0], [89.8, 1343.0], [89.9, 1344.0], [90.0, 1345.0], [90.1, 1345.0], [90.2, 1345.0], [90.3, 1346.0], [90.4, 1346.0], [90.5, 1347.0], [90.6, 1347.0], [90.7, 1348.0], [90.8, 1350.0], [90.9, 1350.0], [91.0, 1351.0], [91.1, 1352.0], [91.2, 1352.0], [91.3, 1354.0], [91.4, 1356.0], [91.5, 1361.0], [91.6, 1364.0], [91.7, 1365.0], [91.8, 1366.0], [91.9, 1367.0], [92.0, 1371.0], [92.1, 1371.0], [92.2, 1374.0], [92.3, 1376.0], [92.4, 1377.0], [92.5, 1381.0], [92.6, 1397.0], [92.7, 1397.0], [92.8, 1400.0], [92.9, 1400.0], [93.0, 1402.0], [93.1, 1404.0], [93.2, 1406.0], [93.3, 1407.0], [93.4, 1407.0], [93.5, 1410.0], [93.6, 1410.0], [93.7, 1411.0], [93.8, 1415.0], [93.9, 1416.0], [94.0, 1417.0], [94.1, 1418.0], [94.2, 1421.0], [94.3, 1421.0], [94.4, 1422.0], [94.5, 1423.0], [94.6, 1426.0], [94.7, 1428.0], [94.8, 1428.0], [94.9, 1429.0], [95.0, 1429.0], [95.1, 1430.0], [95.2, 1435.0], [95.3, 1438.0], [95.4, 1444.0], [95.5, 1445.0], [95.6, 1447.0], [95.7, 1450.0], [95.8, 1451.0], [95.9, 1453.0], [96.0, 1455.0], [96.1, 1457.0], [96.2, 1458.0], [96.3, 1466.0], [96.4, 1467.0], [96.5, 1476.0], [96.6, 1478.0], [96.7, 1479.0], [96.8, 1486.0], [96.9, 1489.0], [97.0, 1491.0], [97.1, 1500.0], [97.2, 1502.0], [97.3, 1502.0], [97.4, 1504.0], [97.5, 1509.0], [97.6, 1516.0], [97.7, 1518.0], [97.8, 1523.0], [97.9, 1530.0], [98.0, 1538.0], [98.1, 1539.0], [98.2, 1548.0], [98.3, 1581.0], [98.4, 1581.0], [98.5, 1589.0], [98.6, 1594.0], [98.7, 1596.0], [98.8, 1604.0], [98.9, 1607.0], [99.0, 1610.0], [99.1, 1617.0], [99.2, 1621.0], [99.3, 1645.0], [99.4, 1665.0], [99.5, 1682.0], [99.6, 1690.0], [99.7, 1698.0], [99.8, 1949.0], [99.9, 1970.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 4.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 7.0], [1.5, 8.0], [1.6, 8.0], [1.7, 8.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 12.0], [3.4, 12.0], [3.5, 12.0], [3.6, 13.0], [3.7, 13.0], [3.8, 13.0], [3.9, 13.0], [4.0, 14.0], [4.1, 14.0], [4.2, 14.0], [4.3, 15.0], [4.4, 16.0], [4.5, 17.0], [4.6, 17.0], [4.7, 18.0], [4.8, 18.0], [4.9, 18.0], [5.0, 18.0], [5.1, 18.0], [5.2, 18.0], [5.3, 19.0], [5.4, 19.0], [5.5, 19.0], [5.6, 19.0], [5.7, 19.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 20.0], [6.3, 21.0], [6.4, 21.0], [6.5, 22.0], [6.6, 22.0], [6.7, 23.0], [6.8, 23.0], [6.9, 23.0], [7.0, 24.0], [7.1, 24.0], [7.2, 25.0], [7.3, 25.0], [7.4, 25.0], [7.5, 25.0], [7.6, 25.0], [7.7, 25.0], [7.8, 25.0], [7.9, 26.0], [8.0, 26.0], [8.1, 27.0], [8.2, 27.0], [8.3, 27.0], [8.4, 27.0], [8.5, 27.0], [8.6, 28.0], [8.7, 28.0], [8.8, 28.0], [8.9, 28.0], [9.0, 28.0], [9.1, 28.0], [9.2, 28.0], [9.3, 29.0], [9.4, 29.0], [9.5, 29.0], [9.6, 29.0], [9.7, 29.0], [9.8, 29.0], [9.9, 30.0], [10.0, 30.0], [10.1, 30.0], [10.2, 30.0], [10.3, 30.0], [10.4, 31.0], [10.5, 31.0], [10.6, 31.0], [10.7, 31.0], [10.8, 31.0], [10.9, 31.0], [11.0, 31.0], [11.1, 32.0], [11.2, 32.0], [11.3, 32.0], [11.4, 32.0], [11.5, 32.0], [11.6, 32.0], [11.7, 32.0], [11.8, 32.0], [11.9, 33.0], [12.0, 33.0], [12.1, 33.0], [12.2, 33.0], [12.3, 33.0], [12.4, 33.0], [12.5, 33.0], [12.6, 33.0], [12.7, 34.0], [12.8, 34.0], [12.9, 34.0], [13.0, 34.0], [13.1, 34.0], [13.2, 34.0], [13.3, 34.0], [13.4, 34.0], [13.5, 34.0], [13.6, 34.0], [13.7, 34.0], [13.8, 35.0], [13.9, 35.0], [14.0, 35.0], [14.1, 35.0], [14.2, 35.0], [14.3, 35.0], [14.4, 36.0], [14.5, 36.0], [14.6, 36.0], [14.7, 36.0], [14.8, 36.0], [14.9, 36.0], [15.0, 36.0], [15.1, 36.0], [15.2, 36.0], [15.3, 37.0], [15.4, 37.0], [15.5, 37.0], [15.6, 37.0], [15.7, 37.0], [15.8, 37.0], [15.9, 37.0], [16.0, 37.0], [16.1, 37.0], [16.2, 37.0], [16.3, 37.0], [16.4, 37.0], [16.5, 37.0], [16.6, 38.0], [16.7, 38.0], [16.8, 38.0], [16.9, 38.0], [17.0, 38.0], [17.1, 38.0], [17.2, 38.0], [17.3, 38.0], [17.4, 38.0], [17.5, 38.0], [17.6, 38.0], [17.7, 38.0], [17.8, 38.0], [17.9, 38.0], [18.0, 38.0], [18.1, 38.0], [18.2, 38.0], [18.3, 39.0], [18.4, 39.0], [18.5, 39.0], [18.6, 39.0], [18.7, 39.0], [18.8, 39.0], [18.9, 39.0], [19.0, 39.0], [19.1, 39.0], [19.2, 39.0], [19.3, 39.0], [19.4, 39.0], [19.5, 39.0], [19.6, 39.0], [19.7, 39.0], [19.8, 40.0], [19.9, 40.0], [20.0, 40.0], [20.1, 40.0], [20.2, 40.0], [20.3, 40.0], [20.4, 40.0], [20.5, 40.0], [20.6, 40.0], [20.7, 40.0], [20.8, 40.0], [20.9, 40.0], [21.0, 40.0], [21.1, 40.0], [21.2, 40.0], [21.3, 40.0], [21.4, 41.0], [21.5, 41.0], [21.6, 41.0], [21.7, 41.0], [21.8, 41.0], [21.9, 41.0], [22.0, 41.0], [22.1, 41.0], [22.2, 41.0], [22.3, 41.0], [22.4, 42.0], [22.5, 42.0], [22.6, 42.0], [22.7, 42.0], [22.8, 42.0], [22.9, 42.0], [23.0, 42.0], [23.1, 42.0], [23.2, 42.0], [23.3, 42.0], [23.4, 42.0], [23.5, 43.0], [23.6, 43.0], [23.7, 43.0], [23.8, 43.0], [23.9, 43.0], [24.0, 43.0], [24.1, 43.0], [24.2, 43.0], [24.3, 43.0], [24.4, 43.0], [24.5, 43.0], [24.6, 43.0], [24.7, 44.0], [24.8, 44.0], [24.9, 44.0], [25.0, 44.0], [25.1, 44.0], [25.2, 44.0], [25.3, 44.0], [25.4, 44.0], [25.5, 44.0], [25.6, 44.0], [25.7, 45.0], [25.8, 45.0], [25.9, 45.0], [26.0, 45.0], [26.1, 45.0], [26.2, 45.0], [26.3, 45.0], [26.4, 45.0], [26.5, 45.0], [26.6, 45.0], [26.7, 45.0], [26.8, 46.0], [26.9, 46.0], [27.0, 46.0], [27.1, 46.0], [27.2, 46.0], [27.3, 46.0], [27.4, 46.0], [27.5, 46.0], [27.6, 46.0], [27.7, 46.0], [27.8, 46.0], [27.9, 46.0], [28.0, 46.0], [28.1, 46.0], [28.2, 46.0], [28.3, 46.0], [28.4, 46.0], [28.5, 46.0], [28.6, 46.0], [28.7, 46.0], [28.8, 46.0], [28.9, 46.0], [29.0, 46.0], [29.1, 47.0], [29.2, 47.0], [29.3, 47.0], [29.4, 47.0], [29.5, 47.0], [29.6, 47.0], [29.7, 47.0], [29.8, 47.0], [29.9, 47.0], [30.0, 47.0], [30.1, 47.0], [30.2, 47.0], [30.3, 47.0], [30.4, 47.0], [30.5, 48.0], [30.6, 48.0], [30.7, 48.0], [30.8, 48.0], [30.9, 48.0], [31.0, 48.0], [31.1, 48.0], [31.2, 48.0], [31.3, 49.0], [31.4, 49.0], [31.5, 49.0], [31.6, 49.0], [31.7, 49.0], [31.8, 49.0], [31.9, 49.0], [32.0, 49.0], [32.1, 49.0], [32.2, 49.0], [32.3, 49.0], [32.4, 49.0], [32.5, 49.0], [32.6, 49.0], [32.7, 49.0], [32.8, 49.0], [32.9, 49.0], [33.0, 49.0], [33.1, 49.0], [33.2, 50.0], [33.3, 50.0], [33.4, 50.0], [33.5, 50.0], [33.6, 50.0], [33.7, 51.0], [33.8, 51.0], [33.9, 51.0], [34.0, 51.0], [34.1, 51.0], [34.2, 51.0], [34.3, 51.0], [34.4, 51.0], [34.5, 51.0], [34.6, 51.0], [34.7, 51.0], [34.8, 51.0], [34.9, 51.0], [35.0, 51.0], [35.1, 52.0], [35.2, 52.0], [35.3, 52.0], [35.4, 52.0], [35.5, 52.0], [35.6, 52.0], [35.7, 52.0], [35.8, 52.0], [35.9, 52.0], [36.0, 52.0], [36.1, 52.0], [36.2, 52.0], [36.3, 52.0], [36.4, 52.0], [36.5, 53.0], [36.6, 53.0], [36.7, 53.0], [36.8, 53.0], [36.9, 53.0], [37.0, 53.0], [37.1, 53.0], [37.2, 53.0], [37.3, 54.0], [37.4, 54.0], [37.5, 54.0], [37.6, 54.0], [37.7, 54.0], [37.8, 54.0], [37.9, 54.0], [38.0, 54.0], [38.1, 54.0], [38.2, 54.0], [38.3, 54.0], [38.4, 55.0], [38.5, 55.0], [38.6, 55.0], [38.7, 55.0], [38.8, 55.0], [38.9, 55.0], [39.0, 55.0], [39.1, 56.0], [39.2, 56.0], [39.3, 56.0], [39.4, 56.0], [39.5, 56.0], [39.6, 56.0], [39.7, 56.0], [39.8, 56.0], [39.9, 56.0], [40.0, 56.0], [40.1, 56.0], [40.2, 56.0], [40.3, 56.0], [40.4, 56.0], [40.5, 56.0], [40.6, 56.0], [40.7, 56.0], [40.8, 56.0], [40.9, 57.0], [41.0, 57.0], [41.1, 57.0], [41.2, 57.0], [41.3, 57.0], [41.4, 57.0], [41.5, 57.0], [41.6, 57.0], [41.7, 57.0], [41.8, 57.0], [41.9, 57.0], [42.0, 58.0], [42.1, 58.0], [42.2, 58.0], [42.3, 58.0], [42.4, 58.0], [42.5, 58.0], [42.6, 58.0], [42.7, 59.0], [42.8, 60.0], [42.9, 60.0], [43.0, 60.0], [43.1, 60.0], [43.2, 60.0], [43.3, 60.0], [43.4, 60.0], [43.5, 61.0], [43.6, 61.0], [43.7, 61.0], [43.8, 61.0], [43.9, 62.0], [44.0, 62.0], [44.1, 62.0], [44.2, 62.0], [44.3, 62.0], [44.4, 62.0], [44.5, 62.0], [44.6, 62.0], [44.7, 62.0], [44.8, 62.0], [44.9, 62.0], [45.0, 62.0], [45.1, 62.0], [45.2, 62.0], [45.3, 62.0], [45.4, 62.0], [45.5, 63.0], [45.6, 63.0], [45.7, 63.0], [45.8, 63.0], [45.9, 63.0], [46.0, 63.0], [46.1, 64.0], [46.2, 64.0], [46.3, 64.0], [46.4, 64.0], [46.5, 64.0], [46.6, 64.0], [46.7, 64.0], [46.8, 64.0], [46.9, 64.0], [47.0, 65.0], [47.1, 65.0], [47.2, 65.0], [47.3, 65.0], [47.4, 66.0], [47.5, 66.0], [47.6, 66.0], [47.7, 67.0], [47.8, 67.0], [47.9, 68.0], [48.0, 69.0], [48.1, 69.0], [48.2, 69.0], [48.3, 69.0], [48.4, 69.0], [48.5, 69.0], [48.6, 69.0], [48.7, 69.0], [48.8, 70.0], [48.9, 70.0], [49.0, 70.0], [49.1, 70.0], [49.2, 70.0], [49.3, 71.0], [49.4, 71.0], [49.5, 71.0], [49.6, 71.0], [49.7, 72.0], [49.8, 72.0], [49.9, 72.0], [50.0, 72.0], [50.1, 73.0], [50.2, 73.0], [50.3, 73.0], [50.4, 73.0], [50.5, 73.0], [50.6, 74.0], [50.7, 74.0], [50.8, 74.0], [50.9, 74.0], [51.0, 74.0], [51.1, 75.0], [51.2, 75.0], [51.3, 75.0], [51.4, 75.0], [51.5, 75.0], [51.6, 75.0], [51.7, 76.0], [51.8, 76.0], [51.9, 76.0], [52.0, 76.0], [52.1, 76.0], [52.2, 76.0], [52.3, 77.0], [52.4, 77.0], [52.5, 77.0], [52.6, 77.0], [52.7, 77.0], [52.8, 77.0], [52.9, 77.0], [53.0, 78.0], [53.1, 78.0], [53.2, 78.0], [53.3, 78.0], [53.4, 78.0], [53.5, 78.0], [53.6, 79.0], [53.7, 79.0], [53.8, 79.0], [53.9, 79.0], [54.0, 79.0], [54.1, 79.0], [54.2, 79.0], [54.3, 80.0], [54.4, 80.0], [54.5, 80.0], [54.6, 80.0], [54.7, 80.0], [54.8, 80.0], [54.9, 80.0], [55.0, 80.0], [55.1, 80.0], [55.2, 81.0], [55.3, 81.0], [55.4, 81.0], [55.5, 81.0], [55.6, 82.0], [55.7, 82.0], [55.8, 83.0], [55.9, 83.0], [56.0, 83.0], [56.1, 83.0], [56.2, 83.0], [56.3, 84.0], [56.4, 85.0], [56.5, 85.0], [56.6, 86.0], [56.7, 86.0], [56.8, 86.0], [56.9, 86.0], [57.0, 86.0], [57.1, 86.0], [57.2, 87.0], [57.3, 87.0], [57.4, 87.0], [57.5, 88.0], [57.6, 88.0], [57.7, 90.0], [57.8, 91.0], [57.9, 91.0], [58.0, 91.0], [58.1, 91.0], [58.2, 92.0], [58.3, 92.0], [58.4, 92.0], [58.5, 94.0], [58.6, 94.0], [58.7, 94.0], [58.8, 94.0], [58.9, 94.0], [59.0, 95.0], [59.1, 95.0], [59.2, 96.0], [59.3, 97.0], [59.4, 98.0], [59.5, 100.0], [59.6, 101.0], [59.7, 103.0], [59.8, 104.0], [59.9, 104.0], [60.0, 104.0], [60.1, 104.0], [60.2, 104.0], [60.3, 105.0], [60.4, 105.0], [60.5, 105.0], [60.6, 108.0], [60.7, 108.0], [60.8, 108.0], [60.9, 108.0], [61.0, 108.0], [61.1, 108.0], [61.2, 109.0], [61.3, 109.0], [61.4, 109.0], [61.5, 109.0], [61.6, 111.0], [61.7, 112.0], [61.8, 113.0], [61.9, 114.0], [62.0, 115.0], [62.1, 117.0], [62.2, 117.0], [62.3, 121.0], [62.4, 122.0], [62.5, 125.0], [62.6, 125.0], [62.7, 126.0], [62.8, 127.0], [62.9, 127.0], [63.0, 128.0], [63.1, 128.0], [63.2, 129.0], [63.3, 130.0], [63.4, 130.0], [63.5, 134.0], [63.6, 139.0], [63.7, 140.0], [63.8, 144.0], [63.9, 144.0], [64.0, 159.0], [64.1, 165.0], [64.2, 167.0], [64.3, 169.0], [64.4, 172.0], [64.5, 174.0], [64.6, 178.0], [64.7, 184.0], [64.8, 185.0], [64.9, 185.0], [65.0, 187.0], [65.1, 188.0], [65.2, 188.0], [65.3, 189.0], [65.4, 189.0], [65.5, 189.0], [65.6, 190.0], [65.7, 192.0], [65.8, 192.0], [65.9, 193.0], [66.0, 193.0], [66.1, 194.0], [66.2, 194.0], [66.3, 196.0], [66.4, 198.0], [66.5, 199.0], [66.6, 200.0], [66.7, 201.0], [66.8, 201.0], [66.9, 201.0], [67.0, 202.0], [67.1, 202.0], [67.2, 203.0], [67.3, 203.0], [67.4, 203.0], [67.5, 204.0], [67.6, 204.0], [67.7, 204.0], [67.8, 205.0], [67.9, 205.0], [68.0, 205.0], [68.1, 206.0], [68.2, 206.0], [68.3, 206.0], [68.4, 206.0], [68.5, 207.0], [68.6, 207.0], [68.7, 207.0], [68.8, 207.0], [68.9, 207.0], [69.0, 208.0], [69.1, 208.0], [69.2, 208.0], [69.3, 208.0], [69.4, 209.0], [69.5, 209.0], [69.6, 209.0], [69.7, 209.0], [69.8, 209.0], [69.9, 210.0], [70.0, 210.0], [70.1, 211.0], [70.2, 211.0], [70.3, 211.0], [70.4, 212.0], [70.5, 212.0], [70.6, 212.0], [70.7, 212.0], [70.8, 212.0], [70.9, 213.0], [71.0, 213.0], [71.1, 213.0], [71.2, 213.0], [71.3, 213.0], [71.4, 213.0], [71.5, 214.0], [71.6, 214.0], [71.7, 214.0], [71.8, 215.0], [71.9, 215.0], [72.0, 215.0], [72.1, 215.0], [72.2, 215.0], [72.3, 215.0], [72.4, 215.0], [72.5, 215.0], [72.6, 215.0], [72.7, 215.0], [72.8, 215.0], [72.9, 216.0], [73.0, 216.0], [73.1, 216.0], [73.2, 217.0], [73.3, 217.0], [73.4, 217.0], [73.5, 217.0], [73.6, 218.0], [73.7, 218.0], [73.8, 218.0], [73.9, 218.0], [74.0, 218.0], [74.1, 219.0], [74.2, 219.0], [74.3, 219.0], [74.4, 219.0], [74.5, 219.0], [74.6, 220.0], [74.7, 220.0], [74.8, 220.0], [74.9, 220.0], [75.0, 220.0], [75.1, 220.0], [75.2, 220.0], [75.3, 221.0], [75.4, 221.0], [75.5, 221.0], [75.6, 221.0], [75.7, 221.0], [75.8, 221.0], [75.9, 222.0], [76.0, 222.0], [76.1, 222.0], [76.2, 223.0], [76.3, 223.0], [76.4, 224.0], [76.5, 224.0], [76.6, 224.0], [76.7, 225.0], [76.8, 225.0], [76.9, 225.0], [77.0, 225.0], [77.1, 226.0], [77.2, 226.0], [77.3, 226.0], [77.4, 226.0], [77.5, 226.0], [77.6, 226.0], [77.7, 226.0], [77.8, 227.0], [77.9, 227.0], [78.0, 227.0], [78.1, 227.0], [78.2, 227.0], [78.3, 227.0], [78.4, 227.0], [78.5, 227.0], [78.6, 227.0], [78.7, 228.0], [78.8, 228.0], [78.9, 229.0], [79.0, 229.0], [79.1, 229.0], [79.2, 229.0], [79.3, 229.0], [79.4, 229.0], [79.5, 229.0], [79.6, 229.0], [79.7, 229.0], [79.8, 230.0], [79.9, 230.0], [80.0, 230.0], [80.1, 230.0], [80.2, 230.0], [80.3, 230.0], [80.4, 230.0], [80.5, 230.0], [80.6, 230.0], [80.7, 231.0], [80.8, 231.0], [80.9, 231.0], [81.0, 231.0], [81.1, 231.0], [81.2, 231.0], [81.3, 232.0], [81.4, 232.0], [81.5, 232.0], [81.6, 232.0], [81.7, 232.0], [81.8, 233.0], [81.9, 233.0], [82.0, 233.0], [82.1, 234.0], [82.2, 234.0], [82.3, 234.0], [82.4, 234.0], [82.5, 235.0], [82.6, 236.0], [82.7, 236.0], [82.8, 236.0], [82.9, 237.0], [83.0, 238.0], [83.1, 238.0], [83.2, 238.0], [83.3, 238.0], [83.4, 238.0], [83.5, 239.0], [83.6, 239.0], [83.7, 239.0], [83.8, 239.0], [83.9, 239.0], [84.0, 239.0], [84.1, 239.0], [84.2, 240.0], [84.3, 240.0], [84.4, 241.0], [84.5, 241.0], [84.6, 241.0], [84.7, 241.0], [84.8, 241.0], [84.9, 242.0], [85.0, 242.0], [85.1, 242.0], [85.2, 242.0], [85.3, 243.0], [85.4, 243.0], [85.5, 243.0], [85.6, 244.0], [85.7, 244.0], [85.8, 244.0], [85.9, 244.0], [86.0, 246.0], [86.1, 246.0], [86.2, 246.0], [86.3, 246.0], [86.4, 247.0], [86.5, 247.0], [86.6, 247.0], [86.7, 248.0], [86.8, 248.0], [86.9, 248.0], [87.0, 248.0], [87.1, 248.0], [87.2, 248.0], [87.3, 249.0], [87.4, 249.0], [87.5, 249.0], [87.6, 249.0], [87.7, 250.0], [87.8, 251.0], [87.9, 251.0], [88.0, 253.0], [88.1, 254.0], [88.2, 254.0], [88.3, 254.0], [88.4, 255.0], [88.5, 255.0], [88.6, 256.0], [88.7, 256.0], [88.8, 256.0], [88.9, 256.0], [89.0, 257.0], [89.1, 257.0], [89.2, 257.0], [89.3, 258.0], [89.4, 259.0], [89.5, 259.0], [89.6, 260.0], [89.7, 260.0], [89.8, 260.0], [89.9, 261.0], [90.0, 262.0], [90.1, 262.0], [90.2, 263.0], [90.3, 264.0], [90.4, 265.0], [90.5, 266.0], [90.6, 266.0], [90.7, 266.0], [90.8, 266.0], [90.9, 266.0], [91.0, 267.0], [91.1, 267.0], [91.2, 267.0], [91.3, 267.0], [91.4, 267.0], [91.5, 268.0], [91.6, 271.0], [91.7, 271.0], [91.8, 272.0], [91.9, 273.0], [92.0, 274.0], [92.1, 274.0], [92.2, 275.0], [92.3, 276.0], [92.4, 283.0], [92.5, 284.0], [92.6, 285.0], [92.7, 286.0], [92.8, 287.0], [92.9, 287.0], [93.0, 291.0], [93.1, 295.0], [93.2, 295.0], [93.3, 303.0], [93.4, 304.0], [93.5, 307.0], [93.6, 316.0], [93.7, 324.0], [93.8, 327.0], [93.9, 329.0], [94.0, 329.0], [94.1, 331.0], [94.2, 332.0], [94.3, 333.0], [94.4, 333.0], [94.5, 334.0], [94.6, 335.0], [94.7, 335.0], [94.8, 336.0], [94.9, 337.0], [95.0, 338.0], [95.1, 341.0], [95.2, 348.0], [95.3, 350.0], [95.4, 351.0], [95.5, 353.0], [95.6, 354.0], [95.7, 355.0], [95.8, 358.0], [95.9, 360.0], [96.0, 362.0], [96.1, 362.0], [96.2, 367.0], [96.3, 368.0], [96.4, 375.0], [96.5, 380.0], [96.6, 395.0], [96.7, 398.0], [96.8, 402.0], [96.9, 405.0], [97.0, 410.0], [97.1, 411.0], [97.2, 413.0], [97.3, 422.0], [97.4, 425.0], [97.5, 426.0], [97.6, 437.0], [97.7, 446.0], [97.8, 447.0], [97.9, 476.0], [98.0, 478.0], [98.1, 499.0], [98.2, 500.0], [98.3, 529.0], [98.4, 529.0], [98.5, 529.0], [98.6, 532.0], [98.7, 537.0], [98.8, 549.0], [98.9, 563.0], [99.0, 574.0], [99.1, 576.0], [99.2, 624.0], [99.3, 698.0], [99.4, 774.0], [99.5, 1027.0], [99.6, 1034.0], [99.7, 1036.0], [99.8, 1218.0], [99.9, 1218.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 169.0], [0.1, 178.0], [0.2, 181.0], [0.3, 181.0], [0.4, 221.0], [0.5, 227.0], [0.6, 230.0], [0.7, 230.0], [0.8, 231.0], [0.9, 231.0], [1.0, 232.0], [1.1, 232.0], [1.2, 232.0], [1.3, 233.0], [1.4, 233.0], [1.5, 234.0], [1.6, 234.0], [1.7, 234.0], [1.8, 242.0], [1.9, 243.0], [2.0, 245.0], [2.1, 252.0], [2.2, 256.0], [2.3, 257.0], [2.4, 259.0], [2.5, 259.0], [2.6, 261.0], [2.7, 264.0], [2.8, 266.0], [2.9, 267.0], [3.0, 270.0], [3.1, 270.0], [3.2, 271.0], [3.3, 272.0], [3.4, 275.0], [3.5, 275.0], [3.6, 275.0], [3.7, 279.0], [3.8, 285.0], [3.9, 285.0], [4.0, 288.0], [4.1, 298.0], [4.2, 300.0], [4.3, 303.0], [4.4, 312.0], [4.5, 314.0], [4.6, 316.0], [4.7, 317.0], [4.8, 318.0], [4.9, 319.0], [5.0, 323.0], [5.1, 326.0], [5.2, 329.0], [5.3, 329.0], [5.4, 331.0], [5.5, 331.0], [5.6, 332.0], [5.7, 332.0], [5.8, 333.0], [5.9, 334.0], [6.0, 334.0], [6.1, 336.0], [6.2, 336.0], [6.3, 337.0], [6.4, 338.0], [6.5, 339.0], [6.6, 340.0], [6.7, 340.0], [6.8, 341.0], [6.9, 342.0], [7.0, 342.0], [7.1, 346.0], [7.2, 347.0], [7.3, 347.0], [7.4, 349.0], [7.5, 350.0], [7.6, 351.0], [7.7, 352.0], [7.8, 352.0], [7.9, 356.0], [8.0, 357.0], [8.1, 357.0], [8.2, 359.0], [8.3, 360.0], [8.4, 360.0], [8.5, 370.0], [8.6, 371.0], [8.7, 372.0], [8.8, 373.0], [8.9, 374.0], [9.0, 375.0], [9.1, 379.0], [9.2, 388.0], [9.3, 390.0], [9.4, 392.0], [9.5, 392.0], [9.6, 395.0], [9.7, 398.0], [9.8, 400.0], [9.9, 400.0], [10.0, 403.0], [10.1, 403.0], [10.2, 404.0], [10.3, 406.0], [10.4, 408.0], [10.5, 409.0], [10.6, 410.0], [10.7, 411.0], [10.8, 412.0], [10.9, 413.0], [11.0, 414.0], [11.1, 414.0], [11.2, 415.0], [11.3, 417.0], [11.4, 423.0], [11.5, 426.0], [11.6, 426.0], [11.7, 431.0], [11.8, 433.0], [11.9, 433.0], [12.0, 434.0], [12.1, 435.0], [12.2, 436.0], [12.3, 441.0], [12.4, 442.0], [12.5, 446.0], [12.6, 446.0], [12.7, 446.0], [12.8, 447.0], [12.9, 449.0], [13.0, 451.0], [13.1, 455.0], [13.2, 457.0], [13.3, 457.0], [13.4, 458.0], [13.5, 463.0], [13.6, 463.0], [13.7, 465.0], [13.8, 466.0], [13.9, 467.0], [14.0, 468.0], [14.1, 468.0], [14.2, 471.0], [14.3, 473.0], [14.4, 479.0], [14.5, 479.0], [14.6, 480.0], [14.7, 480.0], [14.8, 482.0], [14.9, 485.0], [15.0, 485.0], [15.1, 488.0], [15.2, 488.0], [15.3, 489.0], [15.4, 491.0], [15.5, 491.0], [15.6, 492.0], [15.7, 495.0], [15.8, 496.0], [15.9, 497.0], [16.0, 497.0], [16.1, 500.0], [16.2, 500.0], [16.3, 500.0], [16.4, 502.0], [16.5, 503.0], [16.6, 504.0], [16.7, 504.0], [16.8, 504.0], [16.9, 506.0], [17.0, 507.0], [17.1, 507.0], [17.2, 508.0], [17.3, 510.0], [17.4, 510.0], [17.5, 512.0], [17.6, 521.0], [17.7, 522.0], [17.8, 525.0], [17.9, 525.0], [18.0, 526.0], [18.1, 529.0], [18.2, 529.0], [18.3, 536.0], [18.4, 536.0], [18.5, 536.0], [18.6, 537.0], [18.7, 538.0], [18.8, 538.0], [18.9, 539.0], [19.0, 540.0], [19.1, 540.0], [19.2, 541.0], [19.3, 541.0], [19.4, 543.0], [19.5, 544.0], [19.6, 547.0], [19.7, 547.0], [19.8, 548.0], [19.9, 550.0], [20.0, 553.0], [20.1, 557.0], [20.2, 557.0], [20.3, 557.0], [20.4, 560.0], [20.5, 562.0], [20.6, 562.0], [20.7, 564.0], [20.8, 565.0], [20.9, 568.0], [21.0, 569.0], [21.1, 570.0], [21.2, 572.0], [21.3, 574.0], [21.4, 574.0], [21.5, 575.0], [21.6, 576.0], [21.7, 577.0], [21.8, 579.0], [21.9, 579.0], [22.0, 581.0], [22.1, 583.0], [22.2, 583.0], [22.3, 585.0], [22.4, 586.0], [22.5, 587.0], [22.6, 588.0], [22.7, 589.0], [22.8, 589.0], [22.9, 590.0], [23.0, 591.0], [23.1, 592.0], [23.2, 595.0], [23.3, 596.0], [23.4, 601.0], [23.5, 607.0], [23.6, 608.0], [23.7, 611.0], [23.8, 611.0], [23.9, 612.0], [24.0, 613.0], [24.1, 614.0], [24.2, 614.0], [24.3, 616.0], [24.4, 618.0], [24.5, 620.0], [24.6, 625.0], [24.7, 628.0], [24.8, 628.0], [24.9, 629.0], [25.0, 629.0], [25.1, 630.0], [25.2, 630.0], [25.3, 635.0], [25.4, 635.0], [25.5, 639.0], [25.6, 641.0], [25.7, 641.0], [25.8, 642.0], [25.9, 643.0], [26.0, 645.0], [26.1, 647.0], [26.2, 649.0], [26.3, 651.0], [26.4, 651.0], [26.5, 653.0], [26.6, 654.0], [26.7, 655.0], [26.8, 656.0], [26.9, 656.0], [27.0, 657.0], [27.1, 658.0], [27.2, 659.0], [27.3, 659.0], [27.4, 663.0], [27.5, 663.0], [27.6, 667.0], [27.7, 667.0], [27.8, 671.0], [27.9, 671.0], [28.0, 672.0], [28.1, 673.0], [28.2, 673.0], [28.3, 673.0], [28.4, 677.0], [28.5, 677.0], [28.6, 680.0], [28.7, 680.0], [28.8, 680.0], [28.9, 682.0], [29.0, 684.0], [29.1, 685.0], [29.2, 689.0], [29.3, 690.0], [29.4, 690.0], [29.5, 694.0], [29.6, 695.0], [29.7, 697.0], [29.8, 700.0], [29.9, 700.0], [30.0, 701.0], [30.1, 701.0], [30.2, 703.0], [30.3, 704.0], [30.4, 706.0], [30.5, 709.0], [30.6, 710.0], [30.7, 713.0], [30.8, 715.0], [30.9, 715.0], [31.0, 715.0], [31.1, 722.0], [31.2, 727.0], [31.3, 727.0], [31.4, 728.0], [31.5, 729.0], [31.6, 729.0], [31.7, 729.0], [31.8, 733.0], [31.9, 735.0], [32.0, 737.0], [32.1, 737.0], [32.2, 738.0], [32.3, 740.0], [32.4, 741.0], [32.5, 741.0], [32.6, 742.0], [32.7, 742.0], [32.8, 745.0], [32.9, 748.0], [33.0, 750.0], [33.1, 757.0], [33.2, 759.0], [33.3, 760.0], [33.4, 761.0], [33.5, 762.0], [33.6, 763.0], [33.7, 767.0], [33.8, 767.0], [33.9, 767.0], [34.0, 767.0], [34.1, 769.0], [34.2, 770.0], [34.3, 771.0], [34.4, 772.0], [34.5, 772.0], [34.6, 772.0], [34.7, 773.0], [34.8, 773.0], [34.9, 774.0], [35.0, 776.0], [35.1, 776.0], [35.2, 777.0], [35.3, 778.0], [35.4, 778.0], [35.5, 778.0], [35.6, 778.0], [35.7, 779.0], [35.8, 781.0], [35.9, 784.0], [36.0, 784.0], [36.1, 785.0], [36.2, 786.0], [36.3, 788.0], [36.4, 788.0], [36.5, 788.0], [36.6, 789.0], [36.7, 793.0], [36.8, 793.0], [36.9, 794.0], [37.0, 797.0], [37.1, 797.0], [37.2, 798.0], [37.3, 798.0], [37.4, 799.0], [37.5, 800.0], [37.6, 800.0], [37.7, 802.0], [37.8, 802.0], [37.9, 806.0], [38.0, 806.0], [38.1, 809.0], [38.2, 810.0], [38.3, 810.0], [38.4, 810.0], [38.5, 812.0], [38.6, 813.0], [38.7, 814.0], [38.8, 814.0], [38.9, 815.0], [39.0, 816.0], [39.1, 817.0], [39.2, 818.0], [39.3, 818.0], [39.4, 818.0], [39.5, 820.0], [39.6, 820.0], [39.7, 820.0], [39.8, 822.0], [39.9, 823.0], [40.0, 823.0], [40.1, 824.0], [40.2, 824.0], [40.3, 824.0], [40.4, 825.0], [40.5, 825.0], [40.6, 826.0], [40.7, 828.0], [40.8, 829.0], [40.9, 829.0], [41.0, 829.0], [41.1, 829.0], [41.2, 830.0], [41.3, 830.0], [41.4, 830.0], [41.5, 830.0], [41.6, 832.0], [41.7, 837.0], [41.8, 838.0], [41.9, 839.0], [42.0, 839.0], [42.1, 839.0], [42.2, 839.0], [42.3, 839.0], [42.4, 841.0], [42.5, 842.0], [42.6, 842.0], [42.7, 844.0], [42.8, 845.0], [42.9, 846.0], [43.0, 846.0], [43.1, 847.0], [43.2, 847.0], [43.3, 848.0], [43.4, 851.0], [43.5, 851.0], [43.6, 852.0], [43.7, 852.0], [43.8, 853.0], [43.9, 854.0], [44.0, 855.0], [44.1, 856.0], [44.2, 857.0], [44.3, 857.0], [44.4, 857.0], [44.5, 859.0], [44.6, 859.0], [44.7, 860.0], [44.8, 861.0], [44.9, 862.0], [45.0, 864.0], [45.1, 865.0], [45.2, 866.0], [45.3, 867.0], [45.4, 869.0], [45.5, 870.0], [45.6, 870.0], [45.7, 870.0], [45.8, 871.0], [45.9, 872.0], [46.0, 873.0], [46.1, 873.0], [46.2, 873.0], [46.3, 878.0], [46.4, 878.0], [46.5, 878.0], [46.6, 878.0], [46.7, 880.0], [46.8, 881.0], [46.9, 881.0], [47.0, 882.0], [47.1, 884.0], [47.2, 886.0], [47.3, 887.0], [47.4, 887.0], [47.5, 889.0], [47.6, 890.0], [47.7, 892.0], [47.8, 895.0], [47.9, 895.0], [48.0, 898.0], [48.1, 899.0], [48.2, 900.0], [48.3, 902.0], [48.4, 902.0], [48.5, 903.0], [48.6, 906.0], [48.7, 908.0], [48.8, 912.0], [48.9, 912.0], [49.0, 913.0], [49.1, 913.0], [49.2, 914.0], [49.3, 915.0], [49.4, 915.0], [49.5, 916.0], [49.6, 917.0], [49.7, 919.0], [49.8, 920.0], [49.9, 920.0], [50.0, 922.0], [50.1, 923.0], [50.2, 923.0], [50.3, 925.0], [50.4, 928.0], [50.5, 928.0], [50.6, 928.0], [50.7, 929.0], [50.8, 929.0], [50.9, 931.0], [51.0, 933.0], [51.1, 933.0], [51.2, 935.0], [51.3, 935.0], [51.4, 937.0], [51.5, 937.0], [51.6, 938.0], [51.7, 940.0], [51.8, 941.0], [51.9, 941.0], [52.0, 942.0], [52.1, 944.0], [52.2, 947.0], [52.3, 949.0], [52.4, 950.0], [52.5, 953.0], [52.6, 954.0], [52.7, 954.0], [52.8, 955.0], [52.9, 958.0], [53.0, 958.0], [53.1, 958.0], [53.2, 959.0], [53.3, 959.0], [53.4, 960.0], [53.5, 962.0], [53.6, 964.0], [53.7, 965.0], [53.8, 965.0], [53.9, 965.0], [54.0, 966.0], [54.1, 967.0], [54.2, 968.0], [54.3, 968.0], [54.4, 970.0], [54.5, 971.0], [54.6, 971.0], [54.7, 971.0], [54.8, 973.0], [54.9, 974.0], [55.0, 974.0], [55.1, 975.0], [55.2, 975.0], [55.3, 976.0], [55.4, 976.0], [55.5, 977.0], [55.6, 977.0], [55.7, 978.0], [55.8, 978.0], [55.9, 982.0], [56.0, 982.0], [56.1, 984.0], [56.2, 984.0], [56.3, 984.0], [56.4, 985.0], [56.5, 985.0], [56.6, 986.0], [56.7, 987.0], [56.8, 988.0], [56.9, 990.0], [57.0, 991.0], [57.1, 992.0], [57.2, 993.0], [57.3, 994.0], [57.4, 999.0], [57.5, 1002.0], [57.6, 1002.0], [57.7, 1004.0], [57.8, 1007.0], [57.9, 1009.0], [58.0, 1010.0], [58.1, 1011.0], [58.2, 1012.0], [58.3, 1013.0], [58.4, 1017.0], [58.5, 1017.0], [58.6, 1018.0], [58.7, 1018.0], [58.8, 1020.0], [58.9, 1020.0], [59.0, 1021.0], [59.1, 1022.0], [59.2, 1024.0], [59.3, 1024.0], [59.4, 1026.0], [59.5, 1027.0], [59.6, 1027.0], [59.7, 1028.0], [59.8, 1029.0], [59.9, 1030.0], [60.0, 1031.0], [60.1, 1034.0], [60.2, 1034.0], [60.3, 1034.0], [60.4, 1035.0], [60.5, 1035.0], [60.6, 1036.0], [60.7, 1037.0], [60.8, 1038.0], [60.9, 1040.0], [61.0, 1040.0], [61.1, 1041.0], [61.2, 1041.0], [61.3, 1041.0], [61.4, 1041.0], [61.5, 1043.0], [61.6, 1045.0], [61.7, 1047.0], [61.8, 1047.0], [61.9, 1048.0], [62.0, 1050.0], [62.1, 1052.0], [62.2, 1052.0], [62.3, 1053.0], [62.4, 1053.0], [62.5, 1053.0], [62.6, 1055.0], [62.7, 1056.0], [62.8, 1059.0], [62.9, 1060.0], [63.0, 1060.0], [63.1, 1060.0], [63.2, 1061.0], [63.3, 1061.0], [63.4, 1062.0], [63.5, 1063.0], [63.6, 1064.0], [63.7, 1064.0], [63.8, 1064.0], [63.9, 1065.0], [64.0, 1066.0], [64.1, 1069.0], [64.2, 1069.0], [64.3, 1070.0], [64.4, 1070.0], [64.5, 1070.0], [64.6, 1070.0], [64.7, 1071.0], [64.8, 1071.0], [64.9, 1071.0], [65.0, 1075.0], [65.1, 1076.0], [65.2, 1077.0], [65.3, 1077.0], [65.4, 1081.0], [65.5, 1083.0], [65.6, 1083.0], [65.7, 1084.0], [65.8, 1084.0], [65.9, 1087.0], [66.0, 1092.0], [66.1, 1093.0], [66.2, 1094.0], [66.3, 1095.0], [66.4, 1096.0], [66.5, 1097.0], [66.6, 1097.0], [66.7, 1098.0], [66.8, 1098.0], [66.9, 1098.0], [67.0, 1099.0], [67.1, 1102.0], [67.2, 1102.0], [67.3, 1102.0], [67.4, 1102.0], [67.5, 1104.0], [67.6, 1104.0], [67.7, 1109.0], [67.8, 1110.0], [67.9, 1110.0], [68.0, 1110.0], [68.1, 1112.0], [68.2, 1112.0], [68.3, 1113.0], [68.4, 1114.0], [68.5, 1117.0], [68.6, 1117.0], [68.7, 1118.0], [68.8, 1119.0], [68.9, 1119.0], [69.0, 1124.0], [69.1, 1126.0], [69.2, 1127.0], [69.3, 1128.0], [69.4, 1129.0], [69.5, 1129.0], [69.6, 1130.0], [69.7, 1130.0], [69.8, 1130.0], [69.9, 1130.0], [70.0, 1131.0], [70.1, 1133.0], [70.2, 1136.0], [70.3, 1142.0], [70.4, 1143.0], [70.5, 1143.0], [70.6, 1143.0], [70.7, 1144.0], [70.8, 1144.0], [70.9, 1144.0], [71.0, 1144.0], [71.1, 1144.0], [71.2, 1145.0], [71.3, 1149.0], [71.4, 1150.0], [71.5, 1154.0], [71.6, 1157.0], [71.7, 1159.0], [71.8, 1160.0], [71.9, 1161.0], [72.0, 1161.0], [72.1, 1162.0], [72.2, 1166.0], [72.3, 1167.0], [72.4, 1167.0], [72.5, 1169.0], [72.6, 1170.0], [72.7, 1173.0], [72.8, 1174.0], [72.9, 1176.0], [73.0, 1177.0], [73.1, 1177.0], [73.2, 1177.0], [73.3, 1179.0], [73.4, 1180.0], [73.5, 1181.0], [73.6, 1181.0], [73.7, 1181.0], [73.8, 1183.0], [73.9, 1184.0], [74.0, 1189.0], [74.1, 1191.0], [74.2, 1192.0], [74.3, 1195.0], [74.4, 1195.0], [74.5, 1201.0], [74.6, 1203.0], [74.7, 1207.0], [74.8, 1207.0], [74.9, 1208.0], [75.0, 1210.0], [75.1, 1210.0], [75.2, 1212.0], [75.3, 1213.0], [75.4, 1214.0], [75.5, 1216.0], [75.6, 1216.0], [75.7, 1216.0], [75.8, 1217.0], [75.9, 1218.0], [76.0, 1219.0], [76.1, 1221.0], [76.2, 1221.0], [76.3, 1223.0], [76.4, 1225.0], [76.5, 1226.0], [76.6, 1228.0], [76.7, 1234.0], [76.8, 1234.0], [76.9, 1234.0], [77.0, 1236.0], [77.1, 1236.0], [77.2, 1238.0], [77.3, 1241.0], [77.4, 1241.0], [77.5, 1243.0], [77.6, 1243.0], [77.7, 1244.0], [77.8, 1245.0], [77.9, 1246.0], [78.0, 1248.0], [78.1, 1252.0], [78.2, 1256.0], [78.3, 1260.0], [78.4, 1266.0], [78.5, 1270.0], [78.6, 1276.0], [78.7, 1277.0], [78.8, 1277.0], [78.9, 1279.0], [79.0, 1281.0], [79.1, 1281.0], [79.2, 1281.0], [79.3, 1284.0], [79.4, 1288.0], [79.5, 1290.0], [79.6, 1292.0], [79.7, 1292.0], [79.8, 1293.0], [79.9, 1295.0], [80.0, 1303.0], [80.1, 1306.0], [80.2, 1309.0], [80.3, 1320.0], [80.4, 1320.0], [80.5, 1320.0], [80.6, 1321.0], [80.7, 1322.0], [80.8, 1324.0], [80.9, 1326.0], [81.0, 1327.0], [81.1, 1328.0], [81.2, 1329.0], [81.3, 1329.0], [81.4, 1336.0], [81.5, 1337.0], [81.6, 1339.0], [81.7, 1346.0], [81.8, 1348.0], [81.9, 1349.0], [82.0, 1350.0], [82.1, 1352.0], [82.2, 1352.0], [82.3, 1360.0], [82.4, 1361.0], [82.5, 1364.0], [82.6, 1364.0], [82.7, 1369.0], [82.8, 1369.0], [82.9, 1369.0], [83.0, 1373.0], [83.1, 1376.0], [83.2, 1376.0], [83.3, 1376.0], [83.4, 1382.0], [83.5, 1384.0], [83.6, 1386.0], [83.7, 1390.0], [83.8, 1400.0], [83.9, 1401.0], [84.0, 1402.0], [84.1, 1403.0], [84.2, 1404.0], [84.3, 1407.0], [84.4, 1412.0], [84.5, 1416.0], [84.6, 1417.0], [84.7, 1422.0], [84.8, 1423.0], [84.9, 1427.0], [85.0, 1429.0], [85.1, 1432.0], [85.2, 1434.0], [85.3, 1435.0], [85.4, 1437.0], [85.5, 1440.0], [85.6, 1441.0], [85.7, 1447.0], [85.8, 1448.0], [85.9, 1448.0], [86.0, 1450.0], [86.1, 1451.0], [86.2, 1452.0], [86.3, 1452.0], [86.4, 1454.0], [86.5, 1455.0], [86.6, 1461.0], [86.7, 1461.0], [86.8, 1463.0], [86.9, 1463.0], [87.0, 1467.0], [87.1, 1472.0], [87.2, 1473.0], [87.3, 1478.0], [87.4, 1480.0], [87.5, 1480.0], [87.6, 1482.0], [87.7, 1482.0], [87.8, 1483.0], [87.9, 1483.0], [88.0, 1483.0], [88.1, 1483.0], [88.2, 1485.0], [88.3, 1487.0], [88.4, 1488.0], [88.5, 1488.0], [88.6, 1492.0], [88.7, 1510.0], [88.8, 1511.0], [88.9, 1518.0], [89.0, 1520.0], [89.1, 1520.0], [89.2, 1528.0], [89.3, 1528.0], [89.4, 1532.0], [89.5, 1533.0], [89.6, 1536.0], [89.7, 1537.0], [89.8, 1542.0], [89.9, 1545.0], [90.0, 1545.0], [90.1, 1547.0], [90.2, 1548.0], [90.3, 1555.0], [90.4, 1558.0], [90.5, 1564.0], [90.6, 1569.0], [90.7, 1572.0], [90.8, 1574.0], [90.9, 1578.0], [91.0, 1583.0], [91.1, 1585.0], [91.2, 1589.0], [91.3, 1590.0], [91.4, 1591.0], [91.5, 1591.0], [91.6, 1594.0], [91.7, 1595.0], [91.8, 1601.0], [91.9, 1602.0], [92.0, 1602.0], [92.1, 1604.0], [92.2, 1606.0], [92.3, 1617.0], [92.4, 1617.0], [92.5, 1617.0], [92.6, 1621.0], [92.7, 1632.0], [92.8, 1633.0], [92.9, 1644.0], [93.0, 1644.0], [93.1, 1645.0], [93.2, 1649.0], [93.3, 1656.0], [93.4, 1663.0], [93.5, 1668.0], [93.6, 1668.0], [93.7, 1672.0], [93.8, 1676.0], [93.9, 1681.0], [94.0, 1685.0], [94.1, 1693.0], [94.2, 1693.0], [94.3, 1695.0], [94.4, 1698.0], [94.5, 1704.0], [94.6, 1711.0], [94.7, 1718.0], [94.8, 1720.0], [94.9, 1724.0], [95.0, 1726.0], [95.1, 1730.0], [95.2, 1733.0], [95.3, 1734.0], [95.4, 1740.0], [95.5, 1742.0], [95.6, 1745.0], [95.7, 1748.0], [95.8, 1748.0], [95.9, 1758.0], [96.0, 1773.0], [96.1, 1777.0], [96.2, 1796.0], [96.3, 1820.0], [96.4, 1823.0], [96.5, 1828.0], [96.6, 1833.0], [96.7, 1835.0], [96.8, 1837.0], [96.9, 1845.0], [97.0, 1851.0], [97.1, 1853.0], [97.2, 1867.0], [97.3, 1872.0], [97.4, 1880.0], [97.5, 1881.0], [97.6, 1885.0], [97.7, 1888.0], [97.8, 1890.0], [97.9, 1897.0], [98.0, 1900.0], [98.1, 1916.0], [98.2, 1917.0], [98.3, 1919.0], [98.4, 1921.0], [98.5, 1928.0], [98.6, 1935.0], [98.7, 1937.0], [98.8, 1946.0], [98.9, 1962.0], [99.0, 1963.0], [99.1, 1963.0], [99.2, 2005.0], [99.3, 2024.0], [99.4, 2036.0], [99.5, 2041.0], [99.6, 2055.0], [99.7, 2087.0], [99.8, 2104.0], [99.9, 2123.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 594.0, "series": [{"data": [[0.0, 53.0], [600.0, 77.0], [700.0, 64.0], [200.0, 102.0], [800.0, 70.0], [900.0, 74.0], [1000.0, 62.0], [1100.0, 34.0], [300.0, 74.0], [1200.0, 39.0], [1300.0, 60.0], [1400.0, 43.0], [1500.0, 17.0], [100.0, 79.0], [400.0, 85.0], [1600.0, 10.0], [1900.0, 2.0], [500.0, 55.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 594.0], [300.0, 35.0], [1200.0, 2.0], [600.0, 2.0], [700.0, 1.0], [100.0, 72.0], [200.0, 267.0], [400.0, 14.0], [500.0, 10.0], [1000.0, 3.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[2100.0, 2.0], [600.0, 64.0], [700.0, 77.0], [200.0, 37.0], [800.0, 107.0], [900.0, 93.0], [1000.0, 96.0], [1100.0, 74.0], [300.0, 57.0], [1200.0, 56.0], [1300.0, 38.0], [1400.0, 49.0], [1500.0, 31.0], [400.0, 63.0], [100.0, 4.0], [1600.0, 27.0], [1700.0, 18.0], [1800.0, 17.0], [1900.0, 12.0], [500.0, 72.0], [2000.0, 6.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 141.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1540.0, "series": [{"data": [[0.0, 1540.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1319.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 141.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 80.48300000000003, "minX": 1.66886844E12, "maxY": 296.83900000000006, "series": [{"data": [[1.66886844E12, 296.83900000000006]], "isOverall": false, "label": "client-to-application", "isController": false}, {"data": [[1.66886844E12, 244.0899999999998]], "isOverall": false, "label": "client-to-gateway-non-caching", "isController": false}, {"data": [[1.66886844E12, 80.48300000000003]], "isOverall": false, "label": "client-to-gateway-caching", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66886844E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 22.75, "minX": 1.0, "maxY": 2087.0, "series": [{"data": [[2.0, 1600.0], [4.0, 1560.5], [5.0, 1682.0], [6.0, 1970.0], [7.0, 1594.0], [8.0, 766.5], [9.0, 1665.0], [10.0, 1502.0], [11.0, 1491.0], [12.0, 39.0], [13.0, 627.4], [14.0, 259.8571428571429], [15.0, 330.6], [16.0, 437.25], [17.0, 405.0], [18.0, 22.75], [19.0, 708.2], [20.0, 391.0], [21.0, 831.0], [22.0, 438.5], [23.0, 1455.0], [24.0, 1466.0], [26.0, 1533.5], [27.0, 1518.0], [28.0, 1417.0], [30.0, 1647.0], [33.0, 1596.0], [32.0, 1484.0], [35.0, 1459.5], [37.0, 1453.0], [36.0, 1426.0], [39.0, 1423.0], [38.0, 1418.0], [41.0, 509.3333333333333], [40.0, 1421.0], [43.0, 49.0], [42.0, 779.5], [44.0, 973.3333333333334], [45.0, 1479.0], [47.0, 1416.0], [46.0, 1406.0], [49.0, 1429.0], [48.0, 1451.0], [50.0, 737.0], [51.0, 1607.0], [53.0, 1347.0], [52.0, 1428.0], [55.0, 1548.0], [54.0, 1346.0], [56.0, 1371.0], [58.0, 921.6666666666666], [59.0, 782.0], [60.0, 516.3333333333333], [61.0, 1323.0], [63.0, 1354.0], [62.0, 1325.0], [67.0, 1343.0], [66.0, 1299.0], [65.0, 1356.0], [64.0, 1328.0], [71.0, 1415.0], [70.0, 1500.0], [69.0, 1538.0], [68.0, 1516.0], [75.0, 1337.0], [74.0, 1410.0], [73.0, 1346.0], [72.0, 1530.0], [79.0, 1374.0], [78.0, 1351.0], [77.0, 1344.0], [76.0, 1336.0], [83.0, 363.2], [82.0, 1293.0], [81.0, 1410.0], [87.0, 765.5], [86.0, 456.5], [84.0, 294.57142857142856], [85.0, 425.2], [91.0, 536.6666666666667], [90.0, 538.0], [89.0, 484.6666666666667], [88.0, 505.6666666666667], [95.0, 382.8], [94.0, 329.5], [93.0, 399.6], [92.0, 561.6666666666667], [99.0, 267.6363636363636], [98.0, 420.25], [97.0, 340.42857142857144], [96.0, 353.8571428571429], [102.0, 437.75], [101.0, 386.4], [100.0, 317.28571428571433], [103.0, 711.0], [104.0, 775.5], [105.0, 770.5], [107.0, 1364.0], [106.0, 1342.0], [111.0, 1400.0], [110.0, 1345.0], [109.0, 1345.0], [108.0, 1381.0], [115.0, 1366.0], [114.0, 1444.0], [113.0, 1334.0], [112.0, 1268.0], [119.0, 1182.0], [118.0, 1331.0], [117.0, 1248.0], [116.0, 1350.0], [123.0, 661.5], [122.0, 1332.0], [121.0, 1175.0], [120.0, 1428.0], [124.0, 575.0], [126.0, 539.6666666666667], [125.0, 770.0], [127.0, 1152.0], [131.0, 761.0], [133.0, 882.3333333333334], [135.0, 1310.5], [130.0, 1201.0], [129.0, 1350.0], [128.0, 1163.0], [143.0, 693.5], [142.0, 753.0], [141.0, 1252.0], [140.0, 1316.0], [139.0, 1169.0], [138.0, 1340.0], [137.0, 1281.0], [136.0, 1330.0], [144.0, 526.5], [146.0, 191.5], [145.0, 737.0], [150.0, 532.3333333333333], [151.0, 1314.0], [149.0, 1254.75], [156.0, 506.0], [158.0, 774.5], [159.0, 1183.0], [157.0, 1068.0], [155.0, 1160.5], [153.0, 1113.0], [152.0, 1321.0], [162.0, 276.25], [161.0, 566.0], [160.0, 547.6666666666667], [167.0, 1042.0], [166.0, 1130.0], [165.0, 1280.0], [164.0, 1100.0], [163.0, 1158.5], [175.0, 699.5], [174.0, 1136.0], [173.0, 1248.0], [172.0, 1144.0], [170.0, 1019.5], [168.0, 1269.0], [176.0, 372.0], [183.0, 1182.0], [182.0, 1073.0], [181.0, 1095.0], [180.0, 1235.0], [179.0, 996.0], [178.0, 1021.0], [177.0, 1218.0], [185.0, 554.3333333333333], [184.0, 661.5], [191.0, 414.2], [190.0, 640.5], [189.0, 1052.0], [188.0, 1186.0], [187.0, 1200.0], [186.0, 1008.0], [194.0, 386.1428571428571], [193.0, 415.5], [192.0, 407.42857142857144], [197.0, 406.2], [196.0, 460.0], [195.0, 494.25], [199.0, 599.5], [198.0, 522.3333333333334], [201.0, 415.2], [200.0, 418.0], [205.0, 591.0], [204.0, 585.5], [203.0, 478.33333333333337], [207.0, 1061.0], [206.0, 1008.0], [202.0, 956.0], [210.0, 553.5], [211.0, 579.0], [212.0, 573.5], [215.0, 912.0], [214.0, 960.0], [213.0, 879.0], [209.0, 950.0], [208.0, 884.0], [217.0, 350.0], [220.0, 600.0], [219.0, 583.0], [218.0, 692.3333333333334], [222.0, 831.0], [221.0, 952.0], [216.0, 1069.0], [231.0, 944.0], [230.0, 1058.0], [229.0, 835.0], [228.0, 1008.0], [227.0, 929.0], [226.0, 903.0], [225.0, 981.0], [224.0, 927.0], [238.0, 500.33333333333337], [239.0, 1008.0], [237.0, 864.5], [235.0, 901.0], [234.0, 951.0], [233.0, 873.0], [232.0, 917.0], [247.0, 520.6666666666666], [246.0, 482.0], [245.0, 579.5], [244.0, 801.0], [243.0, 886.0], [241.0, 977.0], [249.0, 507.0], [255.0, 496.5], [254.0, 620.5], [253.0, 581.5], [252.0, 593.6666666666666], [251.0, 578.0], [250.0, 589.6666666666666], [248.0, 902.0], [270.0, 563.0], [266.0, 495.5], [268.0, 649.5], [267.0, 537.7142857142858], [271.0, 505.5], [269.0, 739.0], [265.0, 541.0], [264.0, 543.6666666666666], [263.0, 643.6666666666666], [259.0, 635.0], [258.0, 725.3333333333333], [257.0, 676.0], [256.0, 784.0], [262.0, 571.6666666666666], [261.0, 612.2], [260.0, 547.25], [274.0, 534.0769230769231], [277.0, 561.3333333333333], [278.0, 621.3333333333334], [282.0, 489.0], [283.0, 714.0], [281.0, 693.6666666666667], [280.0, 469.5], [287.0, 1053.0], [286.0, 932.0], [285.0, 1203.0], [275.0, 559.8], [284.0, 596.5], [279.0, 425.42857142857144], [276.0, 442.5714285714286], [272.0, 666.5], [273.0, 333.99999999999994], [302.0, 674.0], [294.0, 561.0], [293.0, 619.5], [292.0, 945.0], [303.0, 673.0], [301.0, 738.6666666666666], [300.0, 574.25], [295.0, 923.0], [289.0, 1053.0], [288.0, 1168.0], [291.0, 1049.0], [290.0, 954.0], [299.0, 615.5], [298.0, 656.3333333333334], [297.0, 748.5], [296.0, 931.0], [318.0, 631.0], [314.0, 751.0], [316.0, 668.0], [315.0, 717.0], [319.0, 665.0], [317.0, 657.0], [313.0, 882.0], [312.0, 891.0], [311.0, 1161.0], [304.0, 1192.0], [306.0, 1064.0], [305.0, 926.0], [309.0, 915.0], [308.0, 1058.5], [334.0, 851.0], [320.0, 411.0], [321.0, 701.0], [323.0, 948.0], [322.0, 850.0], [327.0, 680.0], [326.0, 1067.0], [325.0, 812.0], [324.0, 862.0], [335.0, 842.0], [329.0, 807.0], [328.0, 797.0], [333.0, 783.0], [332.0, 1116.0], [331.0, 813.0], [330.0, 923.0], [337.0, 753.5], [338.0, 702.5], [336.0, 858.0], [340.0, 855.5], [339.0, 761.0], [343.0, 728.5], [342.0, 704.3333333333334], [341.0, 896.0], [351.0, 1109.0], [345.0, 891.0], [344.0, 812.0], [347.0, 1024.0], [346.0, 1421.0], [350.0, 773.0], [349.0, 886.0], [348.0, 769.0], [366.0, 710.0], [358.0, 994.0], [357.0, 586.0], [356.0, 722.3333333333334], [367.0, 712.6666666666666], [365.0, 858.5], [354.0, 805.5], [352.0, 780.0], [359.0, 836.0], [363.0, 746.0], [362.0, 931.0], [360.0, 868.0], [382.0, 733.5], [369.0, 703.0], [368.0, 648.0], [378.0, 641.0], [379.0, 677.0], [380.0, 688.5], [371.0, 817.0], [377.0, 721.0], [376.0, 1010.0], [375.0, 729.5], [373.0, 722.0], [372.0, 687.0], [398.0, 706.0], [392.0, 696.0], [393.0, 677.5], [391.0, 608.0], [394.0, 830.5], [399.0, 613.0], [397.0, 791.0], [387.0, 932.0], [386.0, 947.0], [385.0, 926.0], [384.0, 705.5], [395.0, 669.0], [390.0, 1190.0], [389.0, 728.0], [388.0, 697.0], [402.0, 618.25], [403.0, 713.75], [404.0, 642.0], [405.0, 726.0], [401.0, 609.0], [406.0, 745.0], [400.0, 621.0], [415.0, 879.0], [409.0, 626.0], [408.0, 665.0], [411.0, 891.0], [410.0, 606.0], [414.0, 679.0], [413.0, 720.0], [412.0, 715.0], [428.0, 596.5], [417.0, 676.3333333333334], [416.0, 675.0], [423.0, 624.0], [422.0, 811.0], [421.0, 696.0], [420.0, 687.0], [419.0, 627.2], [418.0, 734.0], [427.0, 633.5], [426.0, 845.5], [425.0, 876.0], [424.0, 655.0], [431.0, 660.0], [430.0, 1143.0], [429.0, 675.0], [447.0, 602.1428571428571], [435.0, 671.5], [434.0, 840.5], [433.0, 657.0], [432.0, 639.0], [439.0, 698.5], [437.0, 613.0], [436.0, 510.0], [444.0, 741.3333333333334], [443.0, 583.0], [446.0, 486.0], [445.0, 586.0], [442.0, 1116.0], [441.0, 604.0], [440.0, 748.0], [450.0, 605.3333333333334], [454.0, 627.5], [455.0, 609.5], [453.0, 459.0], [452.0, 646.0], [451.0, 644.25], [461.0, 617.5], [448.0, 658.0], [449.0, 606.0], [463.0, 614.3333333333334], [457.0, 794.0], [456.0, 872.0], [459.0, 1085.0], [458.0, 592.0], [462.0, 540.0], [478.0, 847.0], [465.0, 727.3333333333334], [466.0, 597.0], [464.0, 959.5], [469.0, 725.0], [468.0, 849.0], [471.0, 561.0], [470.0, 656.0], [479.0, 555.0], [476.0, 705.0], [467.0, 582.0], [475.0, 1011.0], [474.0, 965.0], [473.0, 581.0], [472.0, 526.0], [495.0, 912.0], [483.0, 818.5], [482.0, 544.75], [481.0, 554.0], [480.0, 724.0], [487.0, 848.0], [486.0, 747.0], [485.0, 818.5], [484.0, 939.0], [491.0, 808.0], [494.0, 674.0], [493.0, 994.0], [492.0, 744.0], [490.0, 913.0], [489.0, 727.0], [488.0, 786.0], [508.0, 674.6666666666666], [502.0, 816.0], [503.0, 402.0], [499.0, 735.0], [498.0, 915.0], [497.0, 964.0], [496.0, 902.0], [501.0, 845.25], [500.0, 783.0], [507.0, 850.5], [510.0, 792.0], [509.0, 660.0], [506.0, 746.0], [505.0, 390.0], [504.0, 747.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[244.0899999999998, 704.1570000000004]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 352.0], [3.0, 262.66666666666663], [4.0, 107.4], [5.0, 179.66666666666666], [6.0, 182.16666666666669], [7.0, 125.0], [8.0, 73.625], [9.0, 145.75], [10.0, 281.5], [11.0, 130.0], [12.0, 131.4], [13.0, 153.75], [14.0, 90.11111111111111], [15.0, 59.5], [16.0, 56.0], [17.0, 58.55555555555556], [18.0, 72.4], [19.0, 84.5], [20.0, 93.0], [21.0, 53.81818181818182], [22.0, 57.5], [23.0, 55.33333333333333], [24.0, 57.44444444444444], [25.0, 67.625], [26.0, 44.36363636363637], [27.0, 76.91666666666666], [28.0, 64.33333333333333], [29.0, 51.38461538461539], [30.0, 54.07142857142857], [31.0, 52.0], [33.0, 51.6], [32.0, 133.07142857142856], [35.0, 46.176470588235304], [34.0, 76.61538461538461], [36.0, 69.3076923076923], [37.0, 174.88888888888889], [39.0, 58.06249999999999], [38.0, 87.44444444444444], [40.0, 53.54545454545455], [41.0, 76.71428571428572], [43.0, 82.00000000000001], [42.0, 58.4], [45.0, 80.36363636363636], [44.0, 57.8], [46.0, 65.0], [47.0, 78.61538461538463], [49.0, 74.0], [48.0, 69.6923076923077], [51.0, 75.5], [50.0, 70.8], [52.0, 69.72727272727273], [53.0, 76.77777777777777], [54.0, 83.83333333333333], [55.0, 68.44444444444444], [57.0, 158.0], [56.0, 77.16666666666666], [59.0, 85.75], [58.0, 88.42857142857143], [60.0, 75.85714285714286], [61.0, 98.6], [62.0, 90.42857142857142], [63.0, 102.0], [67.0, 124.66666666666666], [66.0, 112.75], [65.0, 111.5], [64.0, 78.5], [71.0, 102.4], [70.0, 113.375], [69.0, 70.0], [68.0, 126.0], [72.0, 108.5], [75.0, 229.0], [74.0, 226.5], [79.0, 229.0], [78.0, 203.0], [77.0, 212.5], [82.0, 236.0], [81.0, 242.0], [80.0, 221.0], [87.0, 273.0], [85.0, 425.0], [84.0, 244.5], [91.0, 221.0], [90.0, 237.0], [89.0, 317.0], [95.0, 234.0], [94.0, 287.0], [92.0, 227.0], [99.0, 106.0], [98.0, 155.25], [97.0, 155.5], [96.0, 202.5], [103.0, 167.0], [102.0, 211.66666666666666], [101.0, 104.0], [100.0, 188.0], [107.0, 172.5], [106.0, 165.5], [105.0, 207.66666666666666], [104.0, 104.0], [111.0, 224.5], [110.0, 172.0], [109.0, 159.5], [108.0, 233.5], [115.0, 162.5], [114.0, 185.75], [113.0, 55.0], [112.0, 224.0], [119.0, 124.0], [118.0, 124.66666666666666], [117.0, 126.33333333333334], [116.0, 173.5], [123.0, 147.5], [122.0, 195.5], [121.0, 162.5], [120.0, 194.5], [127.0, 142.66666666666666], [125.0, 169.5], [124.0, 170.5], [126.0, 175.0], [134.0, 321.0], [133.0, 166.5], [132.0, 112.66666666666667], [130.0, 135.33333333333331], [128.0, 111.4], [135.0, 228.0], [131.0, 263.0], [129.0, 266.0], [138.0, 167.5], [137.0, 69.0], [136.0, 104.33333333333334], [141.0, 174.4], [143.0, 162.33333333333334], [142.0, 174.66666666666666], [139.0, 153.4], [140.0, 206.0], [146.0, 162.75], [145.0, 159.8], [151.0, 197.0], [150.0, 214.0], [149.0, 222.33333333333334], [148.0, 162.0], [147.0, 186.0], [144.0, 169.75], [158.0, 305.5], [157.0, 184.0], [156.0, 304.0], [155.0, 278.0], [154.0, 221.5], [153.0, 178.5], [152.0, 176.5], [159.0, 239.0], [167.0, 324.0], [166.0, 437.0], [165.0, 267.0], [164.0, 275.0], [163.0, 274.0], [162.0, 248.0], [161.0, 304.5], [169.0, 232.5], [175.0, 316.5], [174.0, 227.5], [173.0, 223.33333333333334], [171.0, 199.0], [172.0, 249.0], [170.0, 254.0], [168.0, 262.0], [177.0, 231.75], [176.0, 226.0], [183.0, 230.42857142857142], [182.0, 248.8], [180.0, 228.5], [179.0, 232.0], [178.0, 315.5], [181.0, 290.0], [184.0, 221.7142857142857], [189.0, 229.64285714285714], [188.0, 222.83333333333331], [187.0, 228.7857142857143], [186.0, 242.29999999999998], [185.0, 222.375], [190.0, 240.1818181818182], [191.0, 254.46153846153845], [195.0, 296.4285714285714], [194.0, 257.2], [193.0, 286.42857142857144], [192.0, 232.14285714285714], [197.0, 270.0], [196.0, 267.75], [198.0, 282.0], [199.0, 337.0], [200.0, 378.5], [202.0, 351.0], [201.0, 344.8], [206.0, 355.0], [205.0, 232.0], [204.0, 239.0], [203.0, 231.0], [1.0, 515.5]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[80.48300000000003, 132.57900000000006]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[5.0, 1686.0], [6.0, 2036.0], [7.0, 1928.0], [8.0, 1946.0], [9.0, 1698.0], [10.0, 1407.0], [11.0, 2024.0], [12.0, 1589.0], [13.0, 1400.0], [14.0, 1962.0], [15.0, 1937.0], [16.0, 1423.0], [18.0, 2010.5], [19.0, 1720.0], [20.0, 1773.0], [22.0, 1618.5], [23.0, 1572.0], [24.0, 1604.0], [25.0, 1578.0], [26.0, 1645.0], [27.0, 2055.0], [28.0, 1745.0], [29.0, 1451.0], [30.0, 1963.0], [31.0, 1695.0], [33.0, 1916.0], [32.0, 1483.0], [35.0, 1685.0], [34.0, 1963.0], [37.0, 2087.0], [36.0, 1601.0], [39.0, 1591.0], [38.0, 1885.0], [41.0, 1617.0], [40.0, 1835.0], [43.0, 1532.0], [42.0, 1594.0], [45.0, 1705.0], [47.0, 1748.0], [46.0, 1668.0], [49.0, 1632.0], [48.0, 2005.0], [51.0, 1890.0], [50.0, 1880.0], [53.0, 1324.0], [52.0, 1897.0], [55.0, 1472.0], [54.0, 1322.0], [57.0, 1935.0], [56.0, 1376.0], [59.0, 1833.0], [58.0, 1919.0], [61.0, 1352.0], [60.0, 1326.0], [63.0, 1724.0], [62.0, 1350.0], [67.0, 1742.0], [66.0, 1704.0], [65.0, 1828.0], [64.0, 1564.0], [71.0, 1851.0], [70.0, 1837.0], [69.0, 1452.0], [68.0, 1448.0], [75.0, 1455.0], [74.0, 1621.0], [73.0, 1693.0], [72.0, 1252.0], [79.0, 1376.0], [78.0, 1555.0], [77.0, 1352.0], [76.0, 1346.0], [83.0, 1221.0], [82.0, 1279.0], [81.0, 1872.0], [80.0, 1485.0], [87.0, 1417.0], [86.0, 1796.0], [85.0, 1582.0], [91.0, 1427.0], [90.0, 1730.0], [89.0, 1644.0], [88.0, 1867.0], [95.0, 1881.0], [94.0, 1726.0], [93.0, 1537.0], [92.0, 1248.0], [99.0, 1416.0], [98.0, 1633.0], [97.0, 1306.0], [96.0, 1180.0], [103.0, 1845.0], [102.0, 1740.0], [101.0, 1583.0], [100.0, 1900.0], [107.0, 1536.0], [106.0, 1290.0], [105.0, 1219.0], [104.0, 1617.0], [111.0, 1483.0], [110.0, 1327.0], [109.0, 1349.0], [108.0, 1733.0], [115.0, 1520.0], [114.0, 1320.0], [113.0, 1528.0], [112.0, 1758.0], [119.0, 1369.0], [118.0, 1668.0], [117.0, 1170.0], [116.0, 1644.0], [123.0, 1711.0], [122.0, 1292.0], [121.0, 1364.0], [120.0, 1454.0], [127.0, 1748.0], [126.0, 1150.0], [125.0, 1112.0], [124.0, 1595.0], [134.0, 1234.0], [133.0, 1467.0], [132.0, 1070.0], [131.0, 1656.0], [130.0, 1569.0], [129.0, 1480.0], [128.0, 1077.0], [143.0, 1087.0], [142.0, 1488.0], [141.0, 1154.0], [140.0, 1390.0], [139.0, 1404.0], [138.0, 1402.0], [137.0, 1207.0], [136.0, 1433.5], [151.0, 1437.0], [149.0, 1441.0], [148.0, 1591.0], [147.0, 1585.0], [146.0, 1256.0], [145.0, 1693.0], [144.0, 985.0], [159.0, 1114.0], [158.0, 958.0], [157.0, 942.0], [156.0, 1520.0], [155.0, 1369.0], [154.0, 1528.0], [153.0, 1132.0], [152.0, 1266.0], [167.0, 1382.0], [166.0, 1488.0], [165.0, 1328.0], [164.0, 1492.0], [163.0, 1447.0], [162.0, 1018.0], [161.0, 1336.0], [160.0, 1144.0], [175.0, 1216.0], [174.0, 1220.0], [172.0, 1617.0], [171.0, 1012.0], [170.0, 1590.0], [169.0, 975.0], [168.0, 1102.0], [183.0, 1229.0], [180.0, 1216.0], [179.0, 1076.0], [178.0, 994.0], [177.0, 1218.0], [176.0, 1095.0], [191.0, 1112.0], [190.0, 1129.0], [189.0, 1041.0], [188.0, 1126.0], [187.0, 929.0], [186.0, 1277.0], [185.0, 1181.0], [184.0, 937.0], [199.0, 959.0], [198.0, 1144.0], [197.0, 1047.0], [196.0, 1017.0], [194.0, 1487.0], [193.0, 1329.0], [192.0, 1545.0], [207.0, 1217.0], [206.0, 818.0], [205.0, 900.0], [204.0, 1234.0], [203.0, 870.0], [202.0, 1281.0], [201.0, 1482.0], [200.0, 1236.0], [215.0, 1177.0], [214.0, 1145.5], [212.0, 1135.5], [210.0, 1060.0], [209.0, 1176.0], [223.0, 881.0], [222.0, 935.0], [221.0, 1099.0], [220.0, 1210.0], [219.0, 977.0], [218.0, 1024.5], [216.0, 872.0], [231.0, 1030.0], [230.0, 1401.0], [229.0, 829.0], [228.0, 974.0], [227.0, 823.0], [226.0, 976.0], [225.0, 788.0], [224.0, 955.0], [239.0, 1161.0], [238.0, 1434.0], [237.0, 1450.0], [236.0, 1225.0], [235.0, 1161.0], [234.0, 1440.0], [233.0, 1173.0], [232.0, 1243.0], [246.0, 1040.0], [245.0, 848.0], [244.0, 1339.0], [243.0, 1361.0], [242.0, 1160.0], [241.0, 745.0], [240.0, 1041.0], [255.0, 689.0], [254.0, 1270.0], [253.0, 1027.0], [252.0, 842.0], [251.0, 1110.0], [250.0, 870.0], [249.0, 810.0], [248.0, 1159.5], [270.0, 916.0], [271.0, 973.5], [269.0, 901.0], [267.0, 861.6666666666666], [268.0, 1025.0], [266.0, 990.5], [265.0, 929.6666666666666], [264.0, 906.8333333333333], [263.0, 896.0], [257.0, 978.0], [256.0, 809.0], [259.0, 870.2], [258.0, 1090.0], [262.0, 858.0], [261.0, 831.4], [260.0, 926.8333333333333], [286.0, 624.0], [287.0, 628.4], [285.0, 675.6666666666666], [284.0, 894.5], [273.0, 856.0], [272.0, 740.0], [275.0, 1071.0], [274.0, 966.0], [279.0, 873.0], [278.0, 828.0], [277.0, 715.0], [276.0, 1192.0], [281.0, 856.5], [283.0, 1123.0], [282.0, 1143.0], [280.0, 826.0], [290.0, 689.5], [301.0, 482.5], [296.0, 608.3333333333334], [303.0, 798.0], [302.0, 958.5], [295.0, 487.0], [288.0, 632.0], [289.0, 759.5], [298.0, 554.3333333333334], [299.0, 998.0], [297.0, 447.0], [294.0, 516.0], [293.0, 567.6], [292.0, 592.5], [291.0, 496.0], [300.0, 912.0], [307.0, 721.75], [313.0, 724.2857142857143], [310.0, 846.6], [304.0, 668.3333333333334], [305.0, 681.6666666666666], [306.0, 991.0], [318.0, 693.0], [316.0, 861.0], [319.0, 723.3333333333334], [312.0, 814.0], [309.0, 777.1111111111111], [308.0, 810.0], [311.0, 592.25], [314.0, 660.75], [315.0, 815.5], [334.0, 794.5714285714286], [331.0, 852.0], [321.0, 939.6666666666667], [322.0, 904.125], [325.0, 993.0], [320.0, 863.0], [327.0, 1117.3333333333333], [326.0, 1136.3333333333333], [323.0, 831.2], [324.0, 849.6], [330.0, 1090.0000000000002], [335.0, 905.25], [328.0, 1055.8333333333333], [329.0, 1099.3333333333333], [332.0, 910.75], [333.0, 1082.7142857142858], [351.0, 532.2222222222222], [345.0, 361.31034482758616], [350.0, 586.7272727272727], [349.0, 518.0833333333334], [348.0, 561.6999999999999], [339.0, 782.6999999999999], [338.0, 665.0], [336.0, 685.0], [337.0, 690.3333333333333], [347.0, 395.28571428571433], [346.0, 549.8333333333333], [344.0, 588.75], [343.0, 534.5714285714287], [342.0, 792.875], [341.0, 552.125], [340.0, 1031.0], [354.0, 560.75], [357.0, 580.0], [355.0, 655.7142857142857], [356.0, 419.2], [358.0, 441.7142857142857], [359.0, 826.0], [353.0, 566.3333333333334], [352.0, 340.07692307692315], [360.0, 740.0], [367.0, 774.25], [366.0, 807.5], [365.0, 607.0], [361.0, 779.0], [363.0, 481.5], [362.0, 788.0], [364.0, 737.0], [382.0, 631.6666666666666], [368.0, 828.6666666666667], [375.0, 800.0], [374.0, 482.0], [373.0, 332.0], [372.0, 938.0], [369.0, 744.3333333333334], [383.0, 1170.5], [381.0, 808.6], [380.0, 612.0], [371.0, 788.0], [370.0, 611.0], [379.0, 968.0], [377.0, 495.0], [376.0, 1649.0], [386.0, 800.75], [387.0, 728.3333333333334], [397.0, 784.0], [396.0, 1022.0], [385.0, 694.5], [384.0, 794.6666666666666], [389.0, 520.3333333333334], [388.0, 943.0], [390.0, 460.6666666666667], [391.0, 777.0], [399.0, 751.5], [393.0, 461.0], [395.0, 352.0], [394.0, 767.0], [398.0, 548.0], [415.0, 1175.5], [400.0, 875.5], [402.0, 388.0], [401.0, 1291.0], [412.0, 802.0], [403.0, 1083.0], [407.0, 1099.75], [406.0, 784.6666666666666], [404.0, 539.0], [405.0, 730.5], [410.0, 686.0], [411.0, 390.0], [409.0, 1048.25], [408.0, 774.6666666666666], [414.0, 878.25], [413.0, 737.0], [418.0, 679.5], [416.0, 890.2], [421.0, 1019.5], [423.0, 1094.0], [422.0, 960.0], [420.0, 945.0], [419.0, 1028.0], [417.0, 1224.0], [431.0, 999.0], [425.0, 973.0], [424.0, 1545.0], [427.0, 1510.0], [426.0, 1288.0], [430.0, 1412.0], [429.0, 1452.0], [428.0, 1606.0], [434.0, 1000.8571428571428], [435.0, 987.9], [440.0, 1039.0], [447.0, 1548.0], [446.0, 1542.0], [445.0, 1386.0], [444.0, 1002.5], [433.0, 851.6666666666666], [432.0, 767.3333333333334], [436.0, 987.3333333333334], [437.0, 985.3333333333333], [438.0, 938.6], [439.0, 793.0], [442.0, 795.0], [443.0, 1265.0], [441.0, 925.0], [451.0, 1254.5], [458.0, 1010.5], [457.0, 998.6666666666666], [456.0, 1046.0], [455.0, 1332.0], [448.0, 1002.0], [450.0, 987.0], [449.0, 1718.0], [454.0, 1274.0], [453.0, 851.0], [452.0, 1284.3333333333333], [461.0, 1315.0], [460.0, 1110.0], [462.0, 902.0], [463.0, 1106.0], [478.0, 1602.0], [472.0, 1628.5], [471.0, 909.75], [469.0, 932.6666666666666], [468.0, 954.0], [470.0, 1045.5], [473.0, 1279.0], [475.0, 767.0], [474.0, 934.5], [476.0, 1116.0], [467.0, 1102.0], [466.0, 908.0], [465.0, 810.0], [464.0, 1483.0], [479.0, 1602.0], [477.0, 1097.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[296.83900000000006, 949.3309999999993]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 510.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7466.666666666667, "minX": 1.66886844E12, "maxY": 5668253.733333333, "series": [{"data": [[1.66886844E12, 5668253.733333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66886844E12, 7466.666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66886844E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 132.57900000000006, "minX": 1.66886844E12, "maxY": 949.3309999999993, "series": [{"data": [[1.66886844E12, 704.1570000000004]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66886844E12, 132.57900000000006]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66886844E12, 949.3309999999993]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66886844E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 34.181999999999995, "minX": 1.66886844E12, "maxY": 922.5560000000002, "series": [{"data": [[1.66886844E12, 668.4730000000002]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66886844E12, 34.181999999999995]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66886844E12, 922.5560000000002]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66886844E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 13.805000000000001, "minX": 1.66886844E12, "maxY": 55.91200000000002, "series": [{"data": [[1.66886844E12, 15.124]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66886844E12, 13.805000000000001]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66886844E12, 55.91200000000002]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66886844E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.66886844E12, "maxY": 2123.0, "series": [{"data": [[1.66886844E12, 2123.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66886844E12, 1330.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66886844E12, 1866.859999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66886844E12, 1484.8999999999996]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66886844E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66886844E12, 472.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66886844E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 50.0, "minX": 1.0, "maxY": 1266.0, "series": [{"data": [[1.0, 1027.0], [629.0, 50.0], [323.0, 797.0], [335.0, 1266.0], [332.0, 254.5], [21.0, 234.0], [345.0, 675.0], [344.0, 1185.5], [347.0, 235.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 629.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 20.0, "minX": 1.0, "maxY": 1213.0, "series": [{"data": [[1.0, 1025.0], [629.0, 20.0], [323.0, 771.0], [335.0, 1213.0], [332.0, 215.5], [21.0, 220.0], [345.0, 645.0], [344.0, 1149.5], [347.0, 37.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 629.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66886844E12, "maxY": 50.0, "series": [{"data": [[1.66886844E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66886844E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66886844E12, "maxY": 50.0, "series": [{"data": [[1.66886844E12, 50.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66886844E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.66886844E12, "maxY": 16.666666666666668, "series": [{"data": [[1.66886844E12, 16.666666666666668]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66886844E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66886844E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66886844E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66886844E12, "maxY": 50.0, "series": [{"data": [[1.66886844E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66886844E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

