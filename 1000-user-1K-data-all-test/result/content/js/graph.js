/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "maxY": 9529.0, "series": [{"data": [[0.0, 43.0], [0.1, 54.0], [0.2, 63.0], [0.3, 63.0], [0.4, 63.0], [0.5, 74.0], [0.6, 92.0], [0.7, 95.0], [0.8, 95.0], [0.9, 96.0], [1.0, 97.0], [1.1, 98.0], [1.2, 101.0], [1.3, 108.0], [1.4, 108.0], [1.5, 113.0], [1.6, 128.0], [1.7, 145.0], [1.8, 150.0], [1.9, 150.0], [2.0, 190.0], [2.1, 205.0], [2.2, 215.0], [2.3, 228.0], [2.4, 234.0], [2.5, 235.0], [2.6, 237.0], [2.7, 240.0], [2.8, 240.0], [2.9, 241.0], [3.0, 248.0], [3.1, 249.0], [3.2, 255.0], [3.3, 258.0], [3.4, 260.0], [3.5, 286.0], [3.6, 332.0], [3.7, 334.0], [3.8, 336.0], [3.9, 338.0], [4.0, 343.0], [4.1, 345.0], [4.2, 346.0], [4.3, 348.0], [4.4, 363.0], [4.5, 363.0], [4.6, 363.0], [4.7, 395.0], [4.8, 425.0], [4.9, 436.0], [5.0, 468.0], [5.1, 520.0], [5.2, 524.0], [5.3, 549.0], [5.4, 555.0], [5.5, 591.0], [5.6, 636.0], [5.7, 646.0], [5.8, 651.0], [5.9, 680.0], [6.0, 704.0], [6.1, 787.0], [6.2, 895.0], [6.3, 1076.0], [6.4, 1295.0], [6.5, 1319.0], [6.6, 1714.0], [6.7, 1979.0], [6.8, 2012.0], [6.9, 2408.0], [7.0, 2464.0], [7.1, 2469.0], [7.2, 2759.0], [7.3, 2780.0], [7.4, 2799.0], [7.5, 2948.0], [7.6, 2968.0], [7.7, 2972.0], [7.8, 2993.0], [7.9, 3016.0], [8.0, 3098.0], [8.1, 3104.0], [8.2, 3119.0], [8.3, 3123.0], [8.4, 3124.0], [8.5, 3132.0], [8.6, 3151.0], [8.7, 3156.0], [8.8, 3158.0], [8.9, 3164.0], [9.0, 3179.0], [9.1, 3184.0], [9.2, 3190.0], [9.3, 3243.0], [9.4, 3245.0], [9.5, 3247.0], [9.6, 3272.0], [9.7, 3280.0], [9.8, 3300.0], [9.9, 3330.0], [10.0, 3334.0], [10.1, 3343.0], [10.2, 3348.0], [10.3, 3358.0], [10.4, 3373.0], [10.5, 3376.0], [10.6, 3378.0], [10.7, 3397.0], [10.8, 3398.0], [10.9, 3405.0], [11.0, 3416.0], [11.1, 3424.0], [11.2, 3431.0], [11.3, 3431.0], [11.4, 3431.0], [11.5, 3436.0], [11.6, 3441.0], [11.7, 3444.0], [11.8, 3446.0], [11.9, 3449.0], [12.0, 3451.0], [12.1, 3452.0], [12.2, 3460.0], [12.3, 3462.0], [12.4, 3467.0], [12.5, 3472.0], [12.6, 3472.0], [12.7, 3473.0], [12.8, 3474.0], [12.9, 3475.0], [13.0, 3477.0], [13.1, 3479.0], [13.2, 3486.0], [13.3, 3488.0], [13.4, 3499.0], [13.5, 3499.0], [13.6, 3503.0], [13.7, 3505.0], [13.8, 3506.0], [13.9, 3512.0], [14.0, 3514.0], [14.1, 3515.0], [14.2, 3520.0], [14.3, 3520.0], [14.4, 3522.0], [14.5, 3527.0], [14.6, 3528.0], [14.7, 3528.0], [14.8, 3533.0], [14.9, 3535.0], [15.0, 3539.0], [15.1, 3543.0], [15.2, 3545.0], [15.3, 3550.0], [15.4, 3551.0], [15.5, 3555.0], [15.6, 3556.0], [15.7, 3558.0], [15.8, 3559.0], [15.9, 3559.0], [16.0, 3563.0], [16.1, 3564.0], [16.2, 3566.0], [16.3, 3569.0], [16.4, 3573.0], [16.5, 3582.0], [16.6, 3584.0], [16.7, 3585.0], [16.8, 3589.0], [16.9, 3596.0], [17.0, 3600.0], [17.1, 3603.0], [17.2, 3603.0], [17.3, 3604.0], [17.4, 3606.0], [17.5, 3609.0], [17.6, 3610.0], [17.7, 3616.0], [17.8, 3619.0], [17.9, 3626.0], [18.0, 3629.0], [18.1, 3630.0], [18.2, 3631.0], [18.3, 3642.0], [18.4, 3642.0], [18.5, 3645.0], [18.6, 3649.0], [18.7, 3650.0], [18.8, 3651.0], [18.9, 3651.0], [19.0, 3655.0], [19.1, 3661.0], [19.2, 3663.0], [19.3, 3665.0], [19.4, 3673.0], [19.5, 3673.0], [19.6, 3674.0], [19.7, 3674.0], [19.8, 3675.0], [19.9, 3676.0], [20.0, 3678.0], [20.1, 3680.0], [20.2, 3680.0], [20.3, 3690.0], [20.4, 3697.0], [20.5, 3697.0], [20.6, 3700.0], [20.7, 3705.0], [20.8, 3706.0], [20.9, 3707.0], [21.0, 3710.0], [21.1, 3713.0], [21.2, 3714.0], [21.3, 3716.0], [21.4, 3722.0], [21.5, 3724.0], [21.6, 3724.0], [21.7, 3724.0], [21.8, 3725.0], [21.9, 3725.0], [22.0, 3727.0], [22.1, 3728.0], [22.2, 3729.0], [22.3, 3732.0], [22.4, 3733.0], [22.5, 3735.0], [22.6, 3735.0], [22.7, 3737.0], [22.8, 3738.0], [22.9, 3739.0], [23.0, 3739.0], [23.1, 3741.0], [23.2, 3742.0], [23.3, 3744.0], [23.4, 3748.0], [23.5, 3748.0], [23.6, 3751.0], [23.7, 3752.0], [23.8, 3759.0], [23.9, 3764.0], [24.0, 3768.0], [24.1, 3770.0], [24.2, 3771.0], [24.3, 3771.0], [24.4, 3773.0], [24.5, 3774.0], [24.6, 3775.0], [24.7, 3776.0], [24.8, 3776.0], [24.9, 3776.0], [25.0, 3777.0], [25.1, 3780.0], [25.2, 3780.0], [25.3, 3783.0], [25.4, 3783.0], [25.5, 3784.0], [25.6, 3785.0], [25.7, 3787.0], [25.8, 3789.0], [25.9, 3790.0], [26.0, 3793.0], [26.1, 3794.0], [26.2, 3795.0], [26.3, 3800.0], [26.4, 3800.0], [26.5, 3803.0], [26.6, 3804.0], [26.7, 3808.0], [26.8, 3814.0], [26.9, 3815.0], [27.0, 3815.0], [27.1, 3816.0], [27.2, 3817.0], [27.3, 3817.0], [27.4, 3817.0], [27.5, 3820.0], [27.6, 3820.0], [27.7, 3821.0], [27.8, 3823.0], [27.9, 3823.0], [28.0, 3827.0], [28.1, 3828.0], [28.2, 3829.0], [28.3, 3830.0], [28.4, 3831.0], [28.5, 3833.0], [28.6, 3836.0], [28.7, 3840.0], [28.8, 3842.0], [28.9, 3842.0], [29.0, 3844.0], [29.1, 3846.0], [29.2, 3851.0], [29.3, 3853.0], [29.4, 3856.0], [29.5, 3857.0], [29.6, 3859.0], [29.7, 3860.0], [29.8, 3865.0], [29.9, 3866.0], [30.0, 3866.0], [30.1, 3867.0], [30.2, 3867.0], [30.3, 3868.0], [30.4, 3869.0], [30.5, 3871.0], [30.6, 3872.0], [30.7, 3873.0], [30.8, 3874.0], [30.9, 3876.0], [31.0, 3876.0], [31.1, 3877.0], [31.2, 3878.0], [31.3, 3879.0], [31.4, 3879.0], [31.5, 3883.0], [31.6, 3886.0], [31.7, 3888.0], [31.8, 3890.0], [31.9, 3892.0], [32.0, 3893.0], [32.1, 3893.0], [32.2, 3894.0], [32.3, 3899.0], [32.4, 3900.0], [32.5, 3901.0], [32.6, 3901.0], [32.7, 3902.0], [32.8, 3902.0], [32.9, 3903.0], [33.0, 3903.0], [33.1, 3904.0], [33.2, 3904.0], [33.3, 3906.0], [33.4, 3906.0], [33.5, 3911.0], [33.6, 3912.0], [33.7, 3913.0], [33.8, 3913.0], [33.9, 3914.0], [34.0, 3914.0], [34.1, 3915.0], [34.2, 3917.0], [34.3, 3918.0], [34.4, 3919.0], [34.5, 3921.0], [34.6, 3922.0], [34.7, 3922.0], [34.8, 3924.0], [34.9, 3927.0], [35.0, 3930.0], [35.1, 3932.0], [35.2, 3933.0], [35.3, 3933.0], [35.4, 3935.0], [35.5, 3938.0], [35.6, 3941.0], [35.7, 3945.0], [35.8, 3946.0], [35.9, 3946.0], [36.0, 3948.0], [36.1, 3950.0], [36.2, 3951.0], [36.3, 3951.0], [36.4, 3955.0], [36.5, 3955.0], [36.6, 3957.0], [36.7, 3958.0], [36.8, 3958.0], [36.9, 3958.0], [37.0, 3959.0], [37.1, 3959.0], [37.2, 3959.0], [37.3, 3961.0], [37.4, 3962.0], [37.5, 3965.0], [37.6, 3965.0], [37.7, 3966.0], [37.8, 3967.0], [37.9, 3968.0], [38.0, 3968.0], [38.1, 3969.0], [38.2, 3970.0], [38.3, 3970.0], [38.4, 3970.0], [38.5, 3970.0], [38.6, 3971.0], [38.7, 3972.0], [38.8, 3974.0], [38.9, 3976.0], [39.0, 3977.0], [39.1, 3977.0], [39.2, 3978.0], [39.3, 3979.0], [39.4, 3979.0], [39.5, 3979.0], [39.6, 3980.0], [39.7, 3980.0], [39.8, 3982.0], [39.9, 3984.0], [40.0, 3985.0], [40.1, 3986.0], [40.2, 3987.0], [40.3, 3987.0], [40.4, 3989.0], [40.5, 3989.0], [40.6, 3991.0], [40.7, 3991.0], [40.8, 3992.0], [40.9, 3995.0], [41.0, 3995.0], [41.1, 3995.0], [41.2, 3995.0], [41.3, 3995.0], [41.4, 3996.0], [41.5, 3996.0], [41.6, 3996.0], [41.7, 3997.0], [41.8, 3998.0], [41.9, 3999.0], [42.0, 3999.0], [42.1, 4001.0], [42.2, 4003.0], [42.3, 4005.0], [42.4, 4007.0], [42.5, 4009.0], [42.6, 4009.0], [42.7, 4010.0], [42.8, 4012.0], [42.9, 4013.0], [43.0, 4015.0], [43.1, 4015.0], [43.2, 4016.0], [43.3, 4017.0], [43.4, 4017.0], [43.5, 4018.0], [43.6, 4018.0], [43.7, 4019.0], [43.8, 4020.0], [43.9, 4021.0], [44.0, 4021.0], [44.1, 4024.0], [44.2, 4025.0], [44.3, 4025.0], [44.4, 4026.0], [44.5, 4027.0], [44.6, 4027.0], [44.7, 4028.0], [44.8, 4028.0], [44.9, 4029.0], [45.0, 4030.0], [45.1, 4030.0], [45.2, 4030.0], [45.3, 4031.0], [45.4, 4031.0], [45.5, 4033.0], [45.6, 4033.0], [45.7, 4033.0], [45.8, 4033.0], [45.9, 4037.0], [46.0, 4038.0], [46.1, 4038.0], [46.2, 4038.0], [46.3, 4038.0], [46.4, 4039.0], [46.5, 4039.0], [46.6, 4041.0], [46.7, 4042.0], [46.8, 4045.0], [46.9, 4045.0], [47.0, 4046.0], [47.1, 4051.0], [47.2, 4053.0], [47.3, 4054.0], [47.4, 4056.0], [47.5, 4058.0], [47.6, 4060.0], [47.7, 4060.0], [47.8, 4061.0], [47.9, 4061.0], [48.0, 4061.0], [48.1, 4062.0], [48.2, 4064.0], [48.3, 4066.0], [48.4, 4067.0], [48.5, 4068.0], [48.6, 4068.0], [48.7, 4068.0], [48.8, 4069.0], [48.9, 4069.0], [49.0, 4070.0], [49.1, 4070.0], [49.2, 4072.0], [49.3, 4072.0], [49.4, 4074.0], [49.5, 4074.0], [49.6, 4074.0], [49.7, 4074.0], [49.8, 4075.0], [49.9, 4076.0], [50.0, 4079.0], [50.1, 4079.0], [50.2, 4082.0], [50.3, 4082.0], [50.4, 4083.0], [50.5, 4083.0], [50.6, 4084.0], [50.7, 4084.0], [50.8, 4084.0], [50.9, 4084.0], [51.0, 4084.0], [51.1, 4085.0], [51.2, 4086.0], [51.3, 4086.0], [51.4, 4086.0], [51.5, 4086.0], [51.6, 4087.0], [51.7, 4087.0], [51.8, 4090.0], [51.9, 4091.0], [52.0, 4092.0], [52.1, 4092.0], [52.2, 4093.0], [52.3, 4094.0], [52.4, 4097.0], [52.5, 4097.0], [52.6, 4098.0], [52.7, 4099.0], [52.8, 4100.0], [52.9, 4101.0], [53.0, 4103.0], [53.1, 4103.0], [53.2, 4104.0], [53.3, 4107.0], [53.4, 4107.0], [53.5, 4109.0], [53.6, 4109.0], [53.7, 4110.0], [53.8, 4113.0], [53.9, 4115.0], [54.0, 4115.0], [54.1, 4115.0], [54.2, 4116.0], [54.3, 4117.0], [54.4, 4117.0], [54.5, 4119.0], [54.6, 4120.0], [54.7, 4120.0], [54.8, 4120.0], [54.9, 4120.0], [55.0, 4121.0], [55.1, 4121.0], [55.2, 4123.0], [55.3, 4123.0], [55.4, 4123.0], [55.5, 4124.0], [55.6, 4124.0], [55.7, 4125.0], [55.8, 4130.0], [55.9, 4131.0], [56.0, 4134.0], [56.1, 4137.0], [56.2, 4137.0], [56.3, 4139.0], [56.4, 4139.0], [56.5, 4140.0], [56.6, 4142.0], [56.7, 4143.0], [56.8, 4144.0], [56.9, 4144.0], [57.0, 4145.0], [57.1, 4146.0], [57.2, 4147.0], [57.3, 4148.0], [57.4, 4148.0], [57.5, 4150.0], [57.6, 4150.0], [57.7, 4150.0], [57.8, 4150.0], [57.9, 4151.0], [58.0, 4153.0], [58.1, 4153.0], [58.2, 4153.0], [58.3, 4154.0], [58.4, 4154.0], [58.5, 4156.0], [58.6, 4157.0], [58.7, 4159.0], [58.8, 4159.0], [58.9, 4160.0], [59.0, 4163.0], [59.1, 4163.0], [59.2, 4164.0], [59.3, 4165.0], [59.4, 4167.0], [59.5, 4168.0], [59.6, 4168.0], [59.7, 4169.0], [59.8, 4169.0], [59.9, 4172.0], [60.0, 4172.0], [60.1, 4174.0], [60.2, 4174.0], [60.3, 4175.0], [60.4, 4176.0], [60.5, 4179.0], [60.6, 4182.0], [60.7, 4184.0], [60.8, 4185.0], [60.9, 4186.0], [61.0, 4186.0], [61.1, 4188.0], [61.2, 4189.0], [61.3, 4191.0], [61.4, 4191.0], [61.5, 4193.0], [61.6, 4194.0], [61.7, 4194.0], [61.8, 4196.0], [61.9, 4196.0], [62.0, 4197.0], [62.1, 4198.0], [62.2, 4199.0], [62.3, 4199.0], [62.4, 4200.0], [62.5, 4200.0], [62.6, 4201.0], [62.7, 4202.0], [62.8, 4204.0], [62.9, 4204.0], [63.0, 4204.0], [63.1, 4207.0], [63.2, 4209.0], [63.3, 4210.0], [63.4, 4210.0], [63.5, 4211.0], [63.6, 4213.0], [63.7, 4215.0], [63.8, 4219.0], [63.9, 4220.0], [64.0, 4222.0], [64.1, 4222.0], [64.2, 4226.0], [64.3, 4226.0], [64.4, 4232.0], [64.5, 4236.0], [64.6, 4237.0], [64.7, 4238.0], [64.8, 4238.0], [64.9, 4238.0], [65.0, 4239.0], [65.1, 4241.0], [65.2, 4241.0], [65.3, 4243.0], [65.4, 4244.0], [65.5, 4246.0], [65.6, 4248.0], [65.7, 4254.0], [65.8, 4257.0], [65.9, 4257.0], [66.0, 4258.0], [66.1, 4259.0], [66.2, 4260.0], [66.3, 4263.0], [66.4, 4265.0], [66.5, 4268.0], [66.6, 4268.0], [66.7, 4269.0], [66.8, 4269.0], [66.9, 4269.0], [67.0, 4272.0], [67.1, 4273.0], [67.2, 4273.0], [67.3, 4275.0], [67.4, 4275.0], [67.5, 4276.0], [67.6, 4277.0], [67.7, 4277.0], [67.8, 4278.0], [67.9, 4280.0], [68.0, 4280.0], [68.1, 4281.0], [68.2, 4282.0], [68.3, 4282.0], [68.4, 4283.0], [68.5, 4284.0], [68.6, 4284.0], [68.7, 4285.0], [68.8, 4288.0], [68.9, 4288.0], [69.0, 4292.0], [69.1, 4292.0], [69.2, 4293.0], [69.3, 4293.0], [69.4, 4294.0], [69.5, 4296.0], [69.6, 4296.0], [69.7, 4297.0], [69.8, 4299.0], [69.9, 4301.0], [70.0, 4302.0], [70.1, 4303.0], [70.2, 4305.0], [70.3, 4307.0], [70.4, 4308.0], [70.5, 4308.0], [70.6, 4310.0], [70.7, 4310.0], [70.8, 4313.0], [70.9, 4317.0], [71.0, 4317.0], [71.1, 4318.0], [71.2, 4318.0], [71.3, 4319.0], [71.4, 4320.0], [71.5, 4321.0], [71.6, 4321.0], [71.7, 4323.0], [71.8, 4326.0], [71.9, 4326.0], [72.0, 4326.0], [72.1, 4330.0], [72.2, 4330.0], [72.3, 4335.0], [72.4, 4335.0], [72.5, 4335.0], [72.6, 4336.0], [72.7, 4339.0], [72.8, 4339.0], [72.9, 4340.0], [73.0, 4341.0], [73.1, 4342.0], [73.2, 4343.0], [73.3, 4343.0], [73.4, 4346.0], [73.5, 4346.0], [73.6, 4346.0], [73.7, 4352.0], [73.8, 4352.0], [73.9, 4353.0], [74.0, 4354.0], [74.1, 4355.0], [74.2, 4356.0], [74.3, 4356.0], [74.4, 4362.0], [74.5, 4363.0], [74.6, 4363.0], [74.7, 4365.0], [74.8, 4370.0], [74.9, 4371.0], [75.0, 4372.0], [75.1, 4372.0], [75.2, 4374.0], [75.3, 4375.0], [75.4, 4379.0], [75.5, 4379.0], [75.6, 4380.0], [75.7, 4380.0], [75.8, 4382.0], [75.9, 4384.0], [76.0, 4386.0], [76.1, 4388.0], [76.2, 4388.0], [76.3, 4388.0], [76.4, 4393.0], [76.5, 4394.0], [76.6, 4394.0], [76.7, 4395.0], [76.8, 4396.0], [76.9, 4397.0], [77.0, 4397.0], [77.1, 4400.0], [77.2, 4402.0], [77.3, 4403.0], [77.4, 4403.0], [77.5, 4403.0], [77.6, 4404.0], [77.7, 4406.0], [77.8, 4407.0], [77.9, 4408.0], [78.0, 4408.0], [78.1, 4408.0], [78.2, 4410.0], [78.3, 4410.0], [78.4, 4411.0], [78.5, 4412.0], [78.6, 4414.0], [78.7, 4414.0], [78.8, 4418.0], [78.9, 4418.0], [79.0, 4418.0], [79.1, 4419.0], [79.2, 4420.0], [79.3, 4422.0], [79.4, 4423.0], [79.5, 4423.0], [79.6, 4424.0], [79.7, 4425.0], [79.8, 4432.0], [79.9, 4435.0], [80.0, 4436.0], [80.1, 4437.0], [80.2, 4437.0], [80.3, 4438.0], [80.4, 4438.0], [80.5, 4439.0], [80.6, 4441.0], [80.7, 4447.0], [80.8, 4450.0], [80.9, 4451.0], [81.0, 4451.0], [81.1, 4452.0], [81.2, 4453.0], [81.3, 4453.0], [81.4, 4454.0], [81.5, 4454.0], [81.6, 4454.0], [81.7, 4455.0], [81.8, 4457.0], [81.9, 4459.0], [82.0, 4462.0], [82.1, 4468.0], [82.2, 4471.0], [82.3, 4474.0], [82.4, 4476.0], [82.5, 4476.0], [82.6, 4477.0], [82.7, 4480.0], [82.8, 4484.0], [82.9, 4485.0], [83.0, 4485.0], [83.1, 4487.0], [83.2, 4488.0], [83.3, 4489.0], [83.4, 4491.0], [83.5, 4491.0], [83.6, 4491.0], [83.7, 4494.0], [83.8, 4494.0], [83.9, 4498.0], [84.0, 4499.0], [84.1, 4499.0], [84.2, 4500.0], [84.3, 4503.0], [84.4, 4507.0], [84.5, 4510.0], [84.6, 4511.0], [84.7, 4513.0], [84.8, 4515.0], [84.9, 4518.0], [85.0, 4519.0], [85.1, 4520.0], [85.2, 4521.0], [85.3, 4523.0], [85.4, 4524.0], [85.5, 4525.0], [85.6, 4527.0], [85.7, 4530.0], [85.8, 4540.0], [85.9, 4543.0], [86.0, 4547.0], [86.1, 4548.0], [86.2, 4548.0], [86.3, 4548.0], [86.4, 4549.0], [86.5, 4549.0], [86.6, 4557.0], [86.7, 4558.0], [86.8, 4559.0], [86.9, 4559.0], [87.0, 4559.0], [87.1, 4566.0], [87.2, 4568.0], [87.3, 4568.0], [87.4, 4570.0], [87.5, 4571.0], [87.6, 4575.0], [87.7, 4575.0], [87.8, 4576.0], [87.9, 4577.0], [88.0, 4577.0], [88.1, 4582.0], [88.2, 4584.0], [88.3, 4589.0], [88.4, 4591.0], [88.5, 4597.0], [88.6, 4597.0], [88.7, 4598.0], [88.8, 4602.0], [88.9, 4604.0], [89.0, 4609.0], [89.1, 4611.0], [89.2, 4612.0], [89.3, 4617.0], [89.4, 4624.0], [89.5, 4625.0], [89.6, 4626.0], [89.7, 4626.0], [89.8, 4627.0], [89.9, 4627.0], [90.0, 4633.0], [90.1, 4635.0], [90.2, 4639.0], [90.3, 4640.0], [90.4, 4641.0], [90.5, 4642.0], [90.6, 4643.0], [90.7, 4647.0], [90.8, 4650.0], [90.9, 4650.0], [91.0, 4651.0], [91.1, 4658.0], [91.2, 4663.0], [91.3, 4665.0], [91.4, 4677.0], [91.5, 4678.0], [91.6, 4679.0], [91.7, 4688.0], [91.8, 4699.0], [91.9, 4702.0], [92.0, 4710.0], [92.1, 4724.0], [92.2, 4724.0], [92.3, 4731.0], [92.4, 4735.0], [92.5, 4736.0], [92.6, 4736.0], [92.7, 4739.0], [92.8, 4752.0], [92.9, 4756.0], [93.0, 4759.0], [93.1, 4761.0], [93.2, 4762.0], [93.3, 4768.0], [93.4, 4771.0], [93.5, 4780.0], [93.6, 4794.0], [93.7, 4807.0], [93.8, 4814.0], [93.9, 4822.0], [94.0, 4823.0], [94.1, 4858.0], [94.2, 4875.0], [94.3, 4903.0], [94.4, 4930.0], [94.5, 4942.0], [94.6, 4981.0], [94.7, 4991.0], [94.8, 4994.0], [94.9, 5009.0], [95.0, 5015.0], [95.1, 5016.0], [95.2, 5037.0], [95.3, 5053.0], [95.4, 5071.0], [95.5, 5092.0], [95.6, 5123.0], [95.7, 5160.0], [95.8, 5182.0], [95.9, 5221.0], [96.0, 5279.0], [96.1, 5288.0], [96.2, 5290.0], [96.3, 5399.0], [96.4, 5426.0], [96.5, 5457.0], [96.6, 5476.0], [96.7, 5512.0], [96.8, 5516.0], [96.9, 5530.0], [97.0, 5613.0], [97.1, 5656.0], [97.2, 5720.0], [97.3, 5729.0], [97.4, 5749.0], [97.5, 5884.0], [97.6, 5919.0], [97.7, 5979.0], [97.8, 6008.0], [97.9, 6010.0], [98.0, 6027.0], [98.1, 6129.0], [98.2, 6170.0], [98.3, 6239.0], [98.4, 6251.0], [98.5, 6301.0], [98.6, 6334.0], [98.7, 6416.0], [98.8, 6461.0], [98.9, 6461.0], [99.0, 6498.0], [99.1, 6504.0], [99.2, 6512.0], [99.3, 6519.0], [99.4, 6595.0], [99.5, 6595.0], [99.6, 6730.0], [99.7, 6767.0], [99.8, 6798.0], [99.9, 9529.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 6.0], [0.1, 8.0], [0.2, 8.0], [0.3, 8.0], [0.4, 10.0], [0.5, 11.0], [0.6, 16.0], [0.7, 17.0], [0.8, 25.0], [0.9, 25.0], [1.0, 32.0], [1.1, 33.0], [1.2, 33.0], [1.3, 34.0], [1.4, 35.0], [1.5, 36.0], [1.6, 36.0], [1.7, 39.0], [1.8, 42.0], [1.9, 46.0], [2.0, 60.0], [2.1, 61.0], [2.2, 61.0], [2.3, 62.0], [2.4, 63.0], [2.5, 63.0], [2.6, 63.0], [2.7, 64.0], [2.8, 64.0], [2.9, 65.0], [3.0, 65.0], [3.1, 66.0], [3.2, 66.0], [3.3, 67.0], [3.4, 67.0], [3.5, 67.0], [3.6, 67.0], [3.7, 68.0], [3.8, 68.0], [3.9, 69.0], [4.0, 71.0], [4.1, 71.0], [4.2, 72.0], [4.3, 79.0], [4.4, 94.0], [4.5, 101.0], [4.6, 101.0], [4.7, 101.0], [4.8, 103.0], [4.9, 103.0], [5.0, 104.0], [5.1, 104.0], [5.2, 105.0], [5.3, 105.0], [5.4, 105.0], [5.5, 107.0], [5.6, 112.0], [5.7, 112.0], [5.8, 113.0], [5.9, 118.0], [6.0, 120.0], [6.1, 120.0], [6.2, 127.0], [6.3, 127.0], [6.4, 128.0], [6.5, 144.0], [6.6, 150.0], [6.7, 151.0], [6.8, 152.0], [6.9, 152.0], [7.0, 153.0], [7.1, 153.0], [7.2, 154.0], [7.3, 155.0], [7.4, 156.0], [7.5, 158.0], [7.6, 159.0], [7.7, 165.0], [7.8, 167.0], [7.9, 175.0], [8.0, 181.0], [8.1, 181.0], [8.2, 182.0], [8.3, 185.0], [8.4, 187.0], [8.5, 189.0], [8.6, 192.0], [8.7, 193.0], [8.8, 193.0], [8.9, 197.0], [9.0, 197.0], [9.1, 198.0], [9.2, 199.0], [9.3, 199.0], [9.4, 200.0], [9.5, 206.0], [9.6, 209.0], [9.7, 210.0], [9.8, 211.0], [9.9, 211.0], [10.0, 211.0], [10.1, 212.0], [10.2, 213.0], [10.3, 213.0], [10.4, 218.0], [10.5, 226.0], [10.6, 227.0], [10.7, 229.0], [10.8, 231.0], [10.9, 237.0], [11.0, 237.0], [11.1, 237.0], [11.2, 240.0], [11.3, 244.0], [11.4, 244.0], [11.5, 247.0], [11.6, 248.0], [11.7, 256.0], [11.8, 257.0], [11.9, 258.0], [12.0, 258.0], [12.1, 258.0], [12.2, 259.0], [12.3, 259.0], [12.4, 261.0], [12.5, 263.0], [12.6, 265.0], [12.7, 267.0], [12.8, 272.0], [12.9, 280.0], [13.0, 281.0], [13.1, 285.0], [13.2, 287.0], [13.3, 291.0], [13.4, 296.0], [13.5, 297.0], [13.6, 300.0], [13.7, 303.0], [13.8, 304.0], [13.9, 304.0], [14.0, 305.0], [14.1, 307.0], [14.2, 316.0], [14.3, 320.0], [14.4, 323.0], [14.5, 324.0], [14.6, 326.0], [14.7, 329.0], [14.8, 329.0], [14.9, 330.0], [15.0, 332.0], [15.1, 333.0], [15.2, 338.0], [15.3, 341.0], [15.4, 347.0], [15.5, 349.0], [15.6, 350.0], [15.7, 353.0], [15.8, 361.0], [15.9, 361.0], [16.0, 362.0], [16.1, 362.0], [16.2, 368.0], [16.3, 371.0], [16.4, 373.0], [16.5, 374.0], [16.6, 374.0], [16.7, 377.0], [16.8, 388.0], [16.9, 390.0], [17.0, 393.0], [17.1, 394.0], [17.2, 395.0], [17.3, 396.0], [17.4, 402.0], [17.5, 414.0], [17.6, 417.0], [17.7, 419.0], [17.8, 420.0], [17.9, 422.0], [18.0, 422.0], [18.1, 424.0], [18.2, 440.0], [18.3, 442.0], [18.4, 444.0], [18.5, 444.0], [18.6, 450.0], [18.7, 452.0], [18.8, 453.0], [18.9, 453.0], [19.0, 467.0], [19.1, 468.0], [19.2, 468.0], [19.3, 468.0], [19.4, 468.0], [19.5, 468.0], [19.6, 468.0], [19.7, 468.0], [19.8, 469.0], [19.9, 477.0], [20.0, 478.0], [20.1, 484.0], [20.2, 490.0], [20.3, 493.0], [20.4, 493.0], [20.5, 494.0], [20.6, 494.0], [20.7, 495.0], [20.8, 498.0], [20.9, 499.0], [21.0, 503.0], [21.1, 503.0], [21.2, 503.0], [21.3, 503.0], [21.4, 506.0], [21.5, 506.0], [21.6, 506.0], [21.7, 507.0], [21.8, 508.0], [21.9, 508.0], [22.0, 511.0], [22.1, 511.0], [22.2, 511.0], [22.3, 513.0], [22.4, 517.0], [22.5, 519.0], [22.6, 519.0], [22.7, 519.0], [22.8, 519.0], [22.9, 520.0], [23.0, 521.0], [23.1, 524.0], [23.2, 528.0], [23.3, 535.0], [23.4, 538.0], [23.5, 539.0], [23.6, 546.0], [23.7, 551.0], [23.8, 553.0], [23.9, 554.0], [24.0, 554.0], [24.1, 559.0], [24.2, 559.0], [24.3, 565.0], [24.4, 567.0], [24.5, 569.0], [24.6, 571.0], [24.7, 577.0], [24.8, 580.0], [24.9, 588.0], [25.0, 595.0], [25.1, 596.0], [25.2, 597.0], [25.3, 597.0], [25.4, 597.0], [25.5, 600.0], [25.6, 605.0], [25.7, 606.0], [25.8, 608.0], [25.9, 618.0], [26.0, 620.0], [26.1, 622.0], [26.2, 626.0], [26.3, 628.0], [26.4, 629.0], [26.5, 630.0], [26.6, 631.0], [26.7, 631.0], [26.8, 633.0], [26.9, 633.0], [27.0, 634.0], [27.1, 634.0], [27.2, 634.0], [27.3, 635.0], [27.4, 638.0], [27.5, 645.0], [27.6, 648.0], [27.7, 649.0], [27.8, 649.0], [27.9, 652.0], [28.0, 653.0], [28.1, 653.0], [28.2, 656.0], [28.3, 659.0], [28.4, 660.0], [28.5, 660.0], [28.6, 660.0], [28.7, 661.0], [28.8, 662.0], [28.9, 663.0], [29.0, 663.0], [29.1, 663.0], [29.2, 663.0], [29.3, 664.0], [29.4, 664.0], [29.5, 667.0], [29.6, 667.0], [29.7, 668.0], [29.8, 669.0], [29.9, 670.0], [30.0, 670.0], [30.1, 670.0], [30.2, 672.0], [30.3, 673.0], [30.4, 674.0], [30.5, 674.0], [30.6, 677.0], [30.7, 678.0], [30.8, 678.0], [30.9, 678.0], [31.0, 683.0], [31.1, 684.0], [31.2, 687.0], [31.3, 687.0], [31.4, 688.0], [31.5, 689.0], [31.6, 692.0], [31.7, 692.0], [31.8, 693.0], [31.9, 694.0], [32.0, 699.0], [32.1, 701.0], [32.2, 706.0], [32.3, 707.0], [32.4, 708.0], [32.5, 713.0], [32.6, 724.0], [32.7, 726.0], [32.8, 727.0], [32.9, 728.0], [33.0, 729.0], [33.1, 732.0], [33.2, 733.0], [33.3, 733.0], [33.4, 734.0], [33.5, 734.0], [33.6, 734.0], [33.7, 735.0], [33.8, 735.0], [33.9, 735.0], [34.0, 735.0], [34.1, 740.0], [34.2, 740.0], [34.3, 746.0], [34.4, 753.0], [34.5, 754.0], [34.6, 760.0], [34.7, 761.0], [34.8, 761.0], [34.9, 766.0], [35.0, 767.0], [35.1, 767.0], [35.2, 769.0], [35.3, 771.0], [35.4, 772.0], [35.5, 774.0], [35.6, 775.0], [35.7, 775.0], [35.8, 775.0], [35.9, 776.0], [36.0, 776.0], [36.1, 777.0], [36.2, 778.0], [36.3, 778.0], [36.4, 782.0], [36.5, 782.0], [36.6, 783.0], [36.7, 785.0], [36.8, 787.0], [36.9, 788.0], [37.0, 789.0], [37.1, 789.0], [37.2, 796.0], [37.3, 797.0], [37.4, 797.0], [37.5, 797.0], [37.6, 798.0], [37.7, 803.0], [37.8, 810.0], [37.9, 818.0], [38.0, 819.0], [38.1, 819.0], [38.2, 819.0], [38.3, 821.0], [38.4, 821.0], [38.5, 826.0], [38.6, 826.0], [38.7, 827.0], [38.8, 827.0], [38.9, 834.0], [39.0, 842.0], [39.1, 849.0], [39.2, 849.0], [39.3, 850.0], [39.4, 850.0], [39.5, 853.0], [39.6, 854.0], [39.7, 855.0], [39.8, 856.0], [39.9, 857.0], [40.0, 857.0], [40.1, 858.0], [40.2, 858.0], [40.3, 858.0], [40.4, 859.0], [40.5, 859.0], [40.6, 860.0], [40.7, 860.0], [40.8, 860.0], [40.9, 860.0], [41.0, 860.0], [41.1, 860.0], [41.2, 860.0], [41.3, 861.0], [41.4, 863.0], [41.5, 863.0], [41.6, 863.0], [41.7, 864.0], [41.8, 864.0], [41.9, 864.0], [42.0, 866.0], [42.1, 868.0], [42.2, 869.0], [42.3, 869.0], [42.4, 870.0], [42.5, 870.0], [42.6, 871.0], [42.7, 873.0], [42.8, 873.0], [42.9, 873.0], [43.0, 873.0], [43.1, 873.0], [43.2, 875.0], [43.3, 875.0], [43.4, 875.0], [43.5, 876.0], [43.6, 876.0], [43.7, 879.0], [43.8, 879.0], [43.9, 880.0], [44.0, 880.0], [44.1, 881.0], [44.2, 882.0], [44.3, 882.0], [44.4, 885.0], [44.5, 885.0], [44.6, 885.0], [44.7, 893.0], [44.8, 897.0], [44.9, 905.0], [45.0, 909.0], [45.1, 911.0], [45.2, 911.0], [45.3, 912.0], [45.4, 913.0], [45.5, 917.0], [45.6, 917.0], [45.7, 917.0], [45.8, 917.0], [45.9, 918.0], [46.0, 918.0], [46.1, 920.0], [46.2, 928.0], [46.3, 932.0], [46.4, 939.0], [46.5, 939.0], [46.6, 944.0], [46.7, 955.0], [46.8, 956.0], [46.9, 956.0], [47.0, 956.0], [47.1, 957.0], [47.2, 957.0], [47.3, 958.0], [47.4, 958.0], [47.5, 960.0], [47.6, 963.0], [47.7, 970.0], [47.8, 970.0], [47.9, 986.0], [48.0, 987.0], [48.1, 988.0], [48.2, 989.0], [48.3, 990.0], [48.4, 990.0], [48.5, 991.0], [48.6, 992.0], [48.7, 993.0], [48.8, 995.0], [48.9, 996.0], [49.0, 996.0], [49.1, 997.0], [49.2, 1005.0], [49.3, 1009.0], [49.4, 1013.0], [49.5, 1015.0], [49.6, 1015.0], [49.7, 1015.0], [49.8, 1016.0], [49.9, 1016.0], [50.0, 1018.0], [50.1, 1020.0], [50.2, 1023.0], [50.3, 1025.0], [50.4, 1037.0], [50.5, 1038.0], [50.6, 1043.0], [50.7, 1045.0], [50.8, 1046.0], [50.9, 1046.0], [51.0, 1048.0], [51.1, 1056.0], [51.2, 1057.0], [51.3, 1064.0], [51.4, 1064.0], [51.5, 1065.0], [51.6, 1079.0], [51.7, 1080.0], [51.8, 1080.0], [51.9, 1083.0], [52.0, 1086.0], [52.1, 1087.0], [52.2, 1087.0], [52.3, 1089.0], [52.4, 1090.0], [52.5, 1090.0], [52.6, 1090.0], [52.7, 1093.0], [52.8, 1093.0], [52.9, 1099.0], [53.0, 1100.0], [53.1, 1102.0], [53.2, 1110.0], [53.3, 1115.0], [53.4, 1121.0], [53.5, 1132.0], [53.6, 1132.0], [53.7, 1137.0], [53.8, 1138.0], [53.9, 1138.0], [54.0, 1138.0], [54.1, 1140.0], [54.2, 1142.0], [54.3, 1144.0], [54.4, 1147.0], [54.5, 1147.0], [54.6, 1147.0], [54.7, 1148.0], [54.8, 1148.0], [54.9, 1148.0], [55.0, 1149.0], [55.1, 1151.0], [55.2, 1153.0], [55.3, 1154.0], [55.4, 1155.0], [55.5, 1155.0], [55.6, 1157.0], [55.7, 1157.0], [55.8, 1157.0], [55.9, 1158.0], [56.0, 1158.0], [56.1, 1159.0], [56.2, 1160.0], [56.3, 1160.0], [56.4, 1160.0], [56.5, 1161.0], [56.6, 1161.0], [56.7, 1161.0], [56.8, 1161.0], [56.9, 1162.0], [57.0, 1162.0], [57.1, 1163.0], [57.2, 1163.0], [57.3, 1163.0], [57.4, 1163.0], [57.5, 1163.0], [57.6, 1164.0], [57.7, 1165.0], [57.8, 1167.0], [57.9, 1168.0], [58.0, 1171.0], [58.1, 1172.0], [58.2, 1172.0], [58.3, 1172.0], [58.4, 1173.0], [58.5, 1173.0], [58.6, 1174.0], [58.7, 1176.0], [58.8, 1176.0], [58.9, 1177.0], [59.0, 1177.0], [59.1, 1177.0], [59.2, 1180.0], [59.3, 1181.0], [59.4, 1182.0], [59.5, 1188.0], [59.6, 1188.0], [59.7, 1190.0], [59.8, 1190.0], [59.9, 1191.0], [60.0, 1192.0], [60.1, 1194.0], [60.2, 1194.0], [60.3, 1196.0], [60.4, 1197.0], [60.5, 1197.0], [60.6, 1205.0], [60.7, 1211.0], [60.8, 1212.0], [60.9, 1221.0], [61.0, 1221.0], [61.1, 1221.0], [61.2, 1223.0], [61.3, 1228.0], [61.4, 1229.0], [61.5, 1229.0], [61.6, 1230.0], [61.7, 1237.0], [61.8, 1244.0], [61.9, 1245.0], [62.0, 1250.0], [62.1, 1250.0], [62.2, 1254.0], [62.3, 1255.0], [62.4, 1257.0], [62.5, 1268.0], [62.6, 1271.0], [62.7, 1275.0], [62.8, 1279.0], [62.9, 1282.0], [63.0, 1286.0], [63.1, 1288.0], [63.2, 1289.0], [63.3, 1292.0], [63.4, 1299.0], [63.5, 1299.0], [63.6, 1303.0], [63.7, 1304.0], [63.8, 1304.0], [63.9, 1305.0], [64.0, 1305.0], [64.1, 1305.0], [64.2, 1306.0], [64.3, 1308.0], [64.4, 1313.0], [64.5, 1317.0], [64.6, 1318.0], [64.7, 1318.0], [64.8, 1318.0], [64.9, 1319.0], [65.0, 1319.0], [65.1, 1321.0], [65.2, 1321.0], [65.3, 1321.0], [65.4, 1322.0], [65.5, 1322.0], [65.6, 1324.0], [65.7, 1326.0], [65.8, 1328.0], [65.9, 1330.0], [66.0, 1331.0], [66.1, 1331.0], [66.2, 1332.0], [66.3, 1333.0], [66.4, 1334.0], [66.5, 1335.0], [66.6, 1336.0], [66.7, 1336.0], [66.8, 1337.0], [66.9, 1338.0], [67.0, 1338.0], [67.1, 1338.0], [67.2, 1340.0], [67.3, 1341.0], [67.4, 1341.0], [67.5, 1342.0], [67.6, 1348.0], [67.7, 1350.0], [67.8, 1351.0], [67.9, 1368.0], [68.0, 1372.0], [68.1, 1373.0], [68.2, 1374.0], [68.3, 1375.0], [68.4, 1375.0], [68.5, 1377.0], [68.6, 1382.0], [68.7, 1383.0], [68.8, 1386.0], [68.9, 1386.0], [69.0, 1387.0], [69.1, 1402.0], [69.2, 1410.0], [69.3, 1414.0], [69.4, 1415.0], [69.5, 1418.0], [69.6, 1423.0], [69.7, 1423.0], [69.8, 1423.0], [69.9, 1425.0], [70.0, 1427.0], [70.1, 1428.0], [70.2, 1428.0], [70.3, 1429.0], [70.4, 1433.0], [70.5, 1434.0], [70.6, 1437.0], [70.7, 1440.0], [70.8, 1441.0], [70.9, 1446.0], [71.0, 1447.0], [71.1, 1451.0], [71.2, 1455.0], [71.3, 1461.0], [71.4, 1462.0], [71.5, 1462.0], [71.6, 1463.0], [71.7, 1464.0], [71.8, 1464.0], [71.9, 1467.0], [72.0, 1471.0], [72.1, 1477.0], [72.2, 1478.0], [72.3, 1478.0], [72.4, 1478.0], [72.5, 1479.0], [72.6, 1481.0], [72.7, 1481.0], [72.8, 1481.0], [72.9, 1483.0], [73.0, 1485.0], [73.1, 1485.0], [73.2, 1485.0], [73.3, 1491.0], [73.4, 1495.0], [73.5, 1497.0], [73.6, 1497.0], [73.7, 1498.0], [73.8, 1498.0], [73.9, 1499.0], [74.0, 1499.0], [74.1, 1500.0], [74.2, 1508.0], [74.3, 1509.0], [74.4, 1512.0], [74.5, 1512.0], [74.6, 1513.0], [74.7, 1513.0], [74.8, 1514.0], [74.9, 1514.0], [75.0, 1515.0], [75.1, 1519.0], [75.2, 1520.0], [75.3, 1522.0], [75.4, 1532.0], [75.5, 1541.0], [75.6, 1542.0], [75.7, 1548.0], [75.8, 1548.0], [75.9, 1553.0], [76.0, 1556.0], [76.1, 1556.0], [76.2, 1557.0], [76.3, 1558.0], [76.4, 1558.0], [76.5, 1558.0], [76.6, 1559.0], [76.7, 1578.0], [76.8, 1578.0], [76.9, 1583.0], [77.0, 1584.0], [77.1, 1584.0], [77.2, 1585.0], [77.3, 1585.0], [77.4, 1587.0], [77.5, 1587.0], [77.6, 1587.0], [77.7, 1591.0], [77.8, 1601.0], [77.9, 1601.0], [78.0, 1601.0], [78.1, 1612.0], [78.2, 1616.0], [78.3, 1618.0], [78.4, 1629.0], [78.5, 1633.0], [78.6, 1634.0], [78.7, 1634.0], [78.8, 1634.0], [78.9, 1635.0], [79.0, 1635.0], [79.1, 1635.0], [79.2, 1638.0], [79.3, 1639.0], [79.4, 1639.0], [79.5, 1639.0], [79.6, 1639.0], [79.7, 1640.0], [79.8, 1640.0], [79.9, 1640.0], [80.0, 1640.0], [80.1, 1641.0], [80.2, 1641.0], [80.3, 1642.0], [80.4, 1644.0], [80.5, 1645.0], [80.6, 1645.0], [80.7, 1646.0], [80.8, 1646.0], [80.9, 1646.0], [81.0, 1647.0], [81.1, 1647.0], [81.2, 1647.0], [81.3, 1647.0], [81.4, 1647.0], [81.5, 1647.0], [81.6, 1647.0], [81.7, 1647.0], [81.8, 1648.0], [81.9, 1649.0], [82.0, 1650.0], [82.1, 1651.0], [82.2, 1653.0], [82.3, 1653.0], [82.4, 1654.0], [82.5, 1655.0], [82.6, 1657.0], [82.7, 1657.0], [82.8, 1657.0], [82.9, 1659.0], [83.0, 1660.0], [83.1, 1665.0], [83.2, 1668.0], [83.3, 1676.0], [83.4, 1681.0], [83.5, 1682.0], [83.6, 1686.0], [83.7, 1688.0], [83.8, 1693.0], [83.9, 1693.0], [84.0, 1696.0], [84.1, 1698.0], [84.2, 1700.0], [84.3, 1704.0], [84.4, 1708.0], [84.5, 1715.0], [84.6, 1715.0], [84.7, 1718.0], [84.8, 1723.0], [84.9, 1727.0], [85.0, 1728.0], [85.1, 1728.0], [85.2, 1728.0], [85.3, 1730.0], [85.4, 1730.0], [85.5, 1730.0], [85.6, 1731.0], [85.7, 1735.0], [85.8, 1737.0], [85.9, 1737.0], [86.0, 1737.0], [86.1, 1747.0], [86.2, 1751.0], [86.3, 1753.0], [86.4, 1754.0], [86.5, 1758.0], [86.6, 1761.0], [86.7, 1762.0], [86.8, 1762.0], [86.9, 1763.0], [87.0, 1764.0], [87.1, 1764.0], [87.2, 1766.0], [87.3, 1770.0], [87.4, 1771.0], [87.5, 1771.0], [87.6, 1784.0], [87.7, 1784.0], [87.8, 1786.0], [87.9, 1794.0], [88.0, 1795.0], [88.1, 1795.0], [88.2, 1796.0], [88.3, 1797.0], [88.4, 1797.0], [88.5, 1797.0], [88.6, 1798.0], [88.7, 1800.0], [88.8, 1809.0], [88.9, 1823.0], [89.0, 1825.0], [89.1, 1826.0], [89.2, 1826.0], [89.3, 1828.0], [89.4, 1830.0], [89.5, 1831.0], [89.6, 1833.0], [89.7, 1843.0], [89.8, 1855.0], [89.9, 1860.0], [90.0, 1861.0], [90.1, 1862.0], [90.2, 1862.0], [90.3, 1864.0], [90.4, 1865.0], [90.5, 1865.0], [90.6, 1865.0], [90.7, 1867.0], [90.8, 1868.0], [90.9, 1869.0], [91.0, 1870.0], [91.1, 1872.0], [91.2, 1873.0], [91.3, 1874.0], [91.4, 1879.0], [91.5, 1881.0], [91.6, 1883.0], [91.7, 1884.0], [91.8, 1884.0], [91.9, 1888.0], [92.0, 1890.0], [92.1, 1891.0], [92.2, 1892.0], [92.3, 1893.0], [92.4, 1896.0], [92.5, 1897.0], [92.6, 1897.0], [92.7, 1897.0], [92.8, 1898.0], [92.9, 1899.0], [93.0, 1899.0], [93.1, 1899.0], [93.2, 1899.0], [93.3, 1899.0], [93.4, 1900.0], [93.5, 1901.0], [93.6, 1902.0], [93.7, 1903.0], [93.8, 1904.0], [93.9, 1909.0], [94.0, 1910.0], [94.1, 1914.0], [94.2, 1915.0], [94.3, 1915.0], [94.4, 1915.0], [94.5, 1915.0], [94.6, 1916.0], [94.7, 1916.0], [94.8, 1916.0], [94.9, 1917.0], [95.0, 1919.0], [95.1, 1920.0], [95.2, 1920.0], [95.3, 1920.0], [95.4, 1921.0], [95.5, 1924.0], [95.6, 1930.0], [95.7, 1932.0], [95.8, 1934.0], [95.9, 1939.0], [96.0, 1939.0], [96.1, 1939.0], [96.2, 1939.0], [96.3, 1946.0], [96.4, 1948.0], [96.5, 1949.0], [96.6, 1953.0], [96.7, 1953.0], [96.8, 1954.0], [96.9, 1961.0], [97.0, 1981.0], [97.1, 1981.0], [97.2, 1985.0], [97.3, 1994.0], [97.4, 1995.0], [97.5, 1995.0], [97.6, 1996.0], [97.7, 1996.0], [97.8, 1998.0], [97.9, 2005.0], [98.0, 2005.0], [98.1, 2006.0], [98.2, 2008.0], [98.3, 2009.0], [98.4, 2016.0], [98.5, 2017.0], [98.6, 2018.0], [98.7, 2021.0], [98.8, 2022.0], [98.9, 2023.0], [99.0, 2023.0], [99.1, 2024.0], [99.2, 2025.0], [99.3, 2025.0], [99.4, 2026.0], [99.5, 2026.0], [99.6, 2026.0], [99.7, 2028.0], [99.8, 2036.0], [99.9, 2039.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 147.0], [0.1, 180.0], [0.2, 190.0], [0.3, 190.0], [0.4, 192.0], [0.5, 194.0], [0.6, 194.0], [0.7, 217.0], [0.8, 232.0], [0.9, 236.0], [1.0, 243.0], [1.1, 266.0], [1.2, 283.0], [1.3, 307.0], [1.4, 307.0], [1.5, 310.0], [1.6, 311.0], [1.7, 317.0], [1.8, 322.0], [1.9, 336.0], [2.0, 337.0], [2.1, 344.0], [2.2, 344.0], [2.3, 344.0], [2.4, 348.0], [2.5, 348.0], [2.6, 349.0], [2.7, 353.0], [2.8, 353.0], [2.9, 353.0], [3.0, 361.0], [3.1, 363.0], [3.2, 364.0], [3.3, 368.0], [3.4, 371.0], [3.5, 376.0], [3.6, 376.0], [3.7, 378.0], [3.8, 400.0], [3.9, 404.0], [4.0, 419.0], [4.1, 1064.0], [4.2, 2021.0], [4.3, 2061.0], [4.4, 2096.0], [4.5, 2137.0], [4.6, 2153.0], [4.7, 2175.0], [4.8, 2190.0], [4.9, 2193.0], [5.0, 2205.0], [5.1, 2213.0], [5.2, 2231.0], [5.3, 2248.0], [5.4, 2334.0], [5.5, 2370.0], [5.6, 2381.0], [5.7, 2398.0], [5.8, 2433.0], [5.9, 2461.0], [6.0, 2491.0], [6.1, 2492.0], [6.2, 2509.0], [6.3, 2524.0], [6.4, 2530.0], [6.5, 2549.0], [6.6, 2554.0], [6.7, 2556.0], [6.8, 2563.0], [6.9, 2569.0], [7.0, 2573.0], [7.1, 2581.0], [7.2, 2594.0], [7.3, 2597.0], [7.4, 2606.0], [7.5, 2612.0], [7.6, 2617.0], [7.7, 2619.0], [7.8, 2621.0], [7.9, 2651.0], [8.0, 2654.0], [8.1, 2654.0], [8.2, 2671.0], [8.3, 2677.0], [8.4, 2677.0], [8.5, 2678.0], [8.6, 2681.0], [8.7, 2686.0], [8.8, 2722.0], [8.9, 2734.0], [9.0, 2741.0], [9.1, 2744.0], [9.2, 2761.0], [9.3, 2766.0], [9.4, 2779.0], [9.5, 2785.0], [9.6, 2796.0], [9.7, 2796.0], [9.8, 2801.0], [9.9, 2804.0], [10.0, 2808.0], [10.1, 2809.0], [10.2, 2812.0], [10.3, 2814.0], [10.4, 2818.0], [10.5, 2825.0], [10.6, 2829.0], [10.7, 2830.0], [10.8, 2836.0], [10.9, 2837.0], [11.0, 2840.0], [11.1, 2846.0], [11.2, 2850.0], [11.3, 2851.0], [11.4, 2854.0], [11.5, 2874.0], [11.6, 2875.0], [11.7, 2876.0], [11.8, 2880.0], [11.9, 2884.0], [12.0, 2888.0], [12.1, 2889.0], [12.2, 2891.0], [12.3, 2893.0], [12.4, 2896.0], [12.5, 2901.0], [12.6, 2903.0], [12.7, 2903.0], [12.8, 2908.0], [12.9, 2908.0], [13.0, 2909.0], [13.1, 2910.0], [13.2, 2914.0], [13.3, 2915.0], [13.4, 2916.0], [13.5, 2920.0], [13.6, 2927.0], [13.7, 2929.0], [13.8, 2934.0], [13.9, 2934.0], [14.0, 2935.0], [14.1, 2942.0], [14.2, 2946.0], [14.3, 2947.0], [14.4, 2950.0], [14.5, 2950.0], [14.6, 2953.0], [14.7, 2955.0], [14.8, 2962.0], [14.9, 2965.0], [15.0, 2965.0], [15.1, 2970.0], [15.2, 2971.0], [15.3, 2974.0], [15.4, 2978.0], [15.5, 2989.0], [15.6, 2991.0], [15.7, 2992.0], [15.8, 2994.0], [15.9, 2994.0], [16.0, 3001.0], [16.1, 3005.0], [16.2, 3005.0], [16.3, 3009.0], [16.4, 3012.0], [16.5, 3026.0], [16.6, 3030.0], [16.7, 3032.0], [16.8, 3033.0], [16.9, 3033.0], [17.0, 3035.0], [17.1, 3036.0], [17.2, 3037.0], [17.3, 3042.0], [17.4, 3043.0], [17.5, 3049.0], [17.6, 3050.0], [17.7, 3050.0], [17.8, 3057.0], [17.9, 3059.0], [18.0, 3064.0], [18.1, 3067.0], [18.2, 3069.0], [18.3, 3069.0], [18.4, 3073.0], [18.5, 3073.0], [18.6, 3078.0], [18.7, 3080.0], [18.8, 3084.0], [18.9, 3086.0], [19.0, 3096.0], [19.1, 3097.0], [19.2, 3098.0], [19.3, 3100.0], [19.4, 3101.0], [19.5, 3103.0], [19.6, 3106.0], [19.7, 3108.0], [19.8, 3110.0], [19.9, 3111.0], [20.0, 3112.0], [20.1, 3114.0], [20.2, 3116.0], [20.3, 3118.0], [20.4, 3118.0], [20.5, 3125.0], [20.6, 3126.0], [20.7, 3128.0], [20.8, 3130.0], [20.9, 3135.0], [21.0, 3136.0], [21.1, 3137.0], [21.2, 3137.0], [21.3, 3143.0], [21.4, 3144.0], [21.5, 3151.0], [21.6, 3153.0], [21.7, 3154.0], [21.8, 3158.0], [21.9, 3161.0], [22.0, 3162.0], [22.1, 3166.0], [22.2, 3166.0], [22.3, 3166.0], [22.4, 3170.0], [22.5, 3172.0], [22.6, 3174.0], [22.7, 3177.0], [22.8, 3179.0], [22.9, 3184.0], [23.0, 3185.0], [23.1, 3186.0], [23.2, 3190.0], [23.3, 3191.0], [23.4, 3199.0], [23.5, 3200.0], [23.6, 3200.0], [23.7, 3204.0], [23.8, 3204.0], [23.9, 3211.0], [24.0, 3214.0], [24.1, 3215.0], [24.2, 3217.0], [24.3, 3221.0], [24.4, 3222.0], [24.5, 3223.0], [24.6, 3225.0], [24.7, 3227.0], [24.8, 3231.0], [24.9, 3232.0], [25.0, 3236.0], [25.1, 3242.0], [25.2, 3242.0], [25.3, 3248.0], [25.4, 3251.0], [25.5, 3253.0], [25.6, 3258.0], [25.7, 3260.0], [25.8, 3261.0], [25.9, 3262.0], [26.0, 3262.0], [26.1, 3263.0], [26.2, 3263.0], [26.3, 3264.0], [26.4, 3264.0], [26.5, 3265.0], [26.6, 3266.0], [26.7, 3266.0], [26.8, 3268.0], [26.9, 3269.0], [27.0, 3272.0], [27.1, 3273.0], [27.2, 3273.0], [27.3, 3275.0], [27.4, 3278.0], [27.5, 3278.0], [27.6, 3283.0], [27.7, 3286.0], [27.8, 3291.0], [27.9, 3294.0], [28.0, 3296.0], [28.1, 3297.0], [28.2, 3298.0], [28.3, 3299.0], [28.4, 3299.0], [28.5, 3300.0], [28.6, 3302.0], [28.7, 3303.0], [28.8, 3306.0], [28.9, 3306.0], [29.0, 3308.0], [29.1, 3308.0], [29.2, 3308.0], [29.3, 3309.0], [29.4, 3311.0], [29.5, 3311.0], [29.6, 3311.0], [29.7, 3315.0], [29.8, 3316.0], [29.9, 3316.0], [30.0, 3319.0], [30.1, 3320.0], [30.2, 3320.0], [30.3, 3321.0], [30.4, 3323.0], [30.5, 3324.0], [30.6, 3326.0], [30.7, 3327.0], [30.8, 3328.0], [30.9, 3328.0], [31.0, 3330.0], [31.1, 3330.0], [31.2, 3333.0], [31.3, 3335.0], [31.4, 3336.0], [31.5, 3336.0], [31.6, 3337.0], [31.7, 3341.0], [31.8, 3342.0], [31.9, 3343.0], [32.0, 3344.0], [32.1, 3344.0], [32.2, 3344.0], [32.3, 3347.0], [32.4, 3347.0], [32.5, 3349.0], [32.6, 3351.0], [32.7, 3354.0], [32.8, 3355.0], [32.9, 3356.0], [33.0, 3357.0], [33.1, 3364.0], [33.2, 3365.0], [33.3, 3367.0], [33.4, 3367.0], [33.5, 3367.0], [33.6, 3368.0], [33.7, 3369.0], [33.8, 3369.0], [33.9, 3369.0], [34.0, 3371.0], [34.1, 3371.0], [34.2, 3373.0], [34.3, 3373.0], [34.4, 3373.0], [34.5, 3374.0], [34.6, 3374.0], [34.7, 3375.0], [34.8, 3379.0], [34.9, 3380.0], [35.0, 3381.0], [35.1, 3383.0], [35.2, 3387.0], [35.3, 3388.0], [35.4, 3390.0], [35.5, 3392.0], [35.6, 3395.0], [35.7, 3396.0], [35.8, 3397.0], [35.9, 3398.0], [36.0, 3398.0], [36.1, 3400.0], [36.2, 3401.0], [36.3, 3402.0], [36.4, 3403.0], [36.5, 3403.0], [36.6, 3408.0], [36.7, 3409.0], [36.8, 3409.0], [36.9, 3410.0], [37.0, 3411.0], [37.1, 3412.0], [37.2, 3414.0], [37.3, 3415.0], [37.4, 3416.0], [37.5, 3416.0], [37.6, 3421.0], [37.7, 3421.0], [37.8, 3421.0], [37.9, 3423.0], [38.0, 3423.0], [38.1, 3426.0], [38.2, 3427.0], [38.3, 3427.0], [38.4, 3428.0], [38.5, 3429.0], [38.6, 3429.0], [38.7, 3430.0], [38.8, 3430.0], [38.9, 3431.0], [39.0, 3431.0], [39.1, 3432.0], [39.2, 3432.0], [39.3, 3432.0], [39.4, 3433.0], [39.5, 3435.0], [39.6, 3436.0], [39.7, 3436.0], [39.8, 3437.0], [39.9, 3439.0], [40.0, 3439.0], [40.1, 3440.0], [40.2, 3440.0], [40.3, 3442.0], [40.4, 3443.0], [40.5, 3443.0], [40.6, 3443.0], [40.7, 3444.0], [40.8, 3444.0], [40.9, 3445.0], [41.0, 3445.0], [41.1, 3447.0], [41.2, 3449.0], [41.3, 3449.0], [41.4, 3449.0], [41.5, 3451.0], [41.6, 3451.0], [41.7, 3452.0], [41.8, 3453.0], [41.9, 3454.0], [42.0, 3455.0], [42.1, 3455.0], [42.2, 3457.0], [42.3, 3457.0], [42.4, 3457.0], [42.5, 3458.0], [42.6, 3458.0], [42.7, 3459.0], [42.8, 3459.0], [42.9, 3461.0], [43.0, 3462.0], [43.1, 3463.0], [43.2, 3464.0], [43.3, 3466.0], [43.4, 3467.0], [43.5, 3468.0], [43.6, 3468.0], [43.7, 3469.0], [43.8, 3470.0], [43.9, 3474.0], [44.0, 3474.0], [44.1, 3474.0], [44.2, 3475.0], [44.3, 3480.0], [44.4, 3481.0], [44.5, 3481.0], [44.6, 3482.0], [44.7, 3483.0], [44.8, 3483.0], [44.9, 3484.0], [45.0, 3485.0], [45.1, 3485.0], [45.2, 3486.0], [45.3, 3487.0], [45.4, 3487.0], [45.5, 3487.0], [45.6, 3490.0], [45.7, 3491.0], [45.8, 3491.0], [45.9, 3493.0], [46.0, 3493.0], [46.1, 3497.0], [46.2, 3501.0], [46.3, 3502.0], [46.4, 3505.0], [46.5, 3505.0], [46.6, 3506.0], [46.7, 3507.0], [46.8, 3507.0], [46.9, 3507.0], [47.0, 3509.0], [47.1, 3512.0], [47.2, 3513.0], [47.3, 3514.0], [47.4, 3514.0], [47.5, 3515.0], [47.6, 3519.0], [47.7, 3519.0], [47.8, 3519.0], [47.9, 3523.0], [48.0, 3524.0], [48.1, 3524.0], [48.2, 3526.0], [48.3, 3526.0], [48.4, 3528.0], [48.5, 3528.0], [48.6, 3529.0], [48.7, 3531.0], [48.8, 3533.0], [48.9, 3533.0], [49.0, 3533.0], [49.1, 3536.0], [49.2, 3536.0], [49.3, 3536.0], [49.4, 3536.0], [49.5, 3537.0], [49.6, 3540.0], [49.7, 3542.0], [49.8, 3542.0], [49.9, 3542.0], [50.0, 3545.0], [50.1, 3546.0], [50.2, 3546.0], [50.3, 3547.0], [50.4, 3548.0], [50.5, 3548.0], [50.6, 3550.0], [50.7, 3551.0], [50.8, 3551.0], [50.9, 3552.0], [51.0, 3552.0], [51.1, 3553.0], [51.2, 3553.0], [51.3, 3553.0], [51.4, 3556.0], [51.5, 3557.0], [51.6, 3559.0], [51.7, 3560.0], [51.8, 3562.0], [51.9, 3562.0], [52.0, 3563.0], [52.1, 3565.0], [52.2, 3568.0], [52.3, 3570.0], [52.4, 3570.0], [52.5, 3570.0], [52.6, 3570.0], [52.7, 3573.0], [52.8, 3573.0], [52.9, 3574.0], [53.0, 3576.0], [53.1, 3576.0], [53.2, 3576.0], [53.3, 3577.0], [53.4, 3579.0], [53.5, 3582.0], [53.6, 3583.0], [53.7, 3583.0], [53.8, 3584.0], [53.9, 3584.0], [54.0, 3584.0], [54.1, 3584.0], [54.2, 3587.0], [54.3, 3588.0], [54.4, 3590.0], [54.5, 3592.0], [54.6, 3594.0], [54.7, 3595.0], [54.8, 3595.0], [54.9, 3595.0], [55.0, 3595.0], [55.1, 3595.0], [55.2, 3600.0], [55.3, 3600.0], [55.4, 3600.0], [55.5, 3601.0], [55.6, 3601.0], [55.7, 3603.0], [55.8, 3603.0], [55.9, 3603.0], [56.0, 3603.0], [56.1, 3605.0], [56.2, 3605.0], [56.3, 3606.0], [56.4, 3607.0], [56.5, 3607.0], [56.6, 3607.0], [56.7, 3608.0], [56.8, 3609.0], [56.9, 3612.0], [57.0, 3615.0], [57.1, 3616.0], [57.2, 3616.0], [57.3, 3617.0], [57.4, 3618.0], [57.5, 3618.0], [57.6, 3618.0], [57.7, 3618.0], [57.8, 3619.0], [57.9, 3620.0], [58.0, 3621.0], [58.1, 3621.0], [58.2, 3624.0], [58.3, 3624.0], [58.4, 3624.0], [58.5, 3627.0], [58.6, 3627.0], [58.7, 3627.0], [58.8, 3627.0], [58.9, 3629.0], [59.0, 3632.0], [59.1, 3632.0], [59.2, 3633.0], [59.3, 3633.0], [59.4, 3633.0], [59.5, 3634.0], [59.6, 3635.0], [59.7, 3637.0], [59.8, 3637.0], [59.9, 3639.0], [60.0, 3640.0], [60.1, 3642.0], [60.2, 3644.0], [60.3, 3644.0], [60.4, 3644.0], [60.5, 3647.0], [60.6, 3649.0], [60.7, 3650.0], [60.8, 3652.0], [60.9, 3654.0], [61.0, 3656.0], [61.1, 3656.0], [61.2, 3656.0], [61.3, 3658.0], [61.4, 3658.0], [61.5, 3660.0], [61.6, 3668.0], [61.7, 3669.0], [61.8, 3669.0], [61.9, 3670.0], [62.0, 3674.0], [62.1, 3677.0], [62.2, 3678.0], [62.3, 3680.0], [62.4, 3680.0], [62.5, 3681.0], [62.6, 3682.0], [62.7, 3688.0], [62.8, 3689.0], [62.9, 3691.0], [63.0, 3693.0], [63.1, 3695.0], [63.2, 3697.0], [63.3, 3698.0], [63.4, 3700.0], [63.5, 3701.0], [63.6, 3703.0], [63.7, 3706.0], [63.8, 3706.0], [63.9, 3710.0], [64.0, 3716.0], [64.1, 3716.0], [64.2, 3716.0], [64.3, 3719.0], [64.4, 3719.0], [64.5, 3722.0], [64.6, 3723.0], [64.7, 3724.0], [64.8, 3724.0], [64.9, 3725.0], [65.0, 3727.0], [65.1, 3730.0], [65.2, 3732.0], [65.3, 3734.0], [65.4, 3737.0], [65.5, 3738.0], [65.6, 3740.0], [65.7, 3742.0], [65.8, 3742.0], [65.9, 3743.0], [66.0, 3743.0], [66.1, 3744.0], [66.2, 3749.0], [66.3, 3756.0], [66.4, 3756.0], [66.5, 3758.0], [66.6, 3759.0], [66.7, 3767.0], [66.8, 3768.0], [66.9, 3768.0], [67.0, 3769.0], [67.1, 3770.0], [67.2, 3773.0], [67.3, 3773.0], [67.4, 3774.0], [67.5, 3778.0], [67.6, 3778.0], [67.7, 3780.0], [67.8, 3781.0], [67.9, 3781.0], [68.0, 3785.0], [68.1, 3787.0], [68.2, 3789.0], [68.3, 3789.0], [68.4, 3790.0], [68.5, 3791.0], [68.6, 3793.0], [68.7, 3794.0], [68.8, 3795.0], [68.9, 3797.0], [69.0, 3804.0], [69.1, 3804.0], [69.2, 3804.0], [69.3, 3805.0], [69.4, 3807.0], [69.5, 3807.0], [69.6, 3807.0], [69.7, 3810.0], [69.8, 3811.0], [69.9, 3813.0], [70.0, 3814.0], [70.1, 3814.0], [70.2, 3814.0], [70.3, 3814.0], [70.4, 3815.0], [70.5, 3820.0], [70.6, 3823.0], [70.7, 3824.0], [70.8, 3826.0], [70.9, 3830.0], [71.0, 3831.0], [71.1, 3831.0], [71.2, 3831.0], [71.3, 3836.0], [71.4, 3842.0], [71.5, 3843.0], [71.6, 3843.0], [71.7, 3844.0], [71.8, 3849.0], [71.9, 3851.0], [72.0, 3852.0], [72.1, 3856.0], [72.2, 3856.0], [72.3, 3861.0], [72.4, 3862.0], [72.5, 3862.0], [72.6, 3864.0], [72.7, 3865.0], [72.8, 3866.0], [72.9, 3867.0], [73.0, 3869.0], [73.1, 3872.0], [73.2, 3873.0], [73.3, 3873.0], [73.4, 3880.0], [73.5, 3893.0], [73.6, 3894.0], [73.7, 3895.0], [73.8, 3897.0], [73.9, 3898.0], [74.0, 3898.0], [74.1, 3898.0], [74.2, 3901.0], [74.3, 3903.0], [74.4, 3906.0], [74.5, 3906.0], [74.6, 3908.0], [74.7, 3912.0], [74.8, 3913.0], [74.9, 3917.0], [75.0, 3919.0], [75.1, 3919.0], [75.2, 3923.0], [75.3, 3931.0], [75.4, 3935.0], [75.5, 3938.0], [75.6, 3944.0], [75.7, 3946.0], [75.8, 3946.0], [75.9, 3948.0], [76.0, 3954.0], [76.1, 3954.0], [76.2, 3962.0], [76.3, 3963.0], [76.4, 3964.0], [76.5, 3964.0], [76.6, 3972.0], [76.7, 3972.0], [76.8, 3973.0], [76.9, 3975.0], [77.0, 3976.0], [77.1, 3978.0], [77.2, 3981.0], [77.3, 3984.0], [77.4, 3985.0], [77.5, 3985.0], [77.6, 3989.0], [77.7, 3993.0], [77.8, 4001.0], [77.9, 4001.0], [78.0, 4004.0], [78.1, 4010.0], [78.2, 4014.0], [78.3, 4014.0], [78.4, 4016.0], [78.5, 4018.0], [78.6, 4021.0], [78.7, 4024.0], [78.8, 4025.0], [78.9, 4025.0], [79.0, 4026.0], [79.1, 4027.0], [79.2, 4028.0], [79.3, 4031.0], [79.4, 4031.0], [79.5, 4032.0], [79.6, 4033.0], [79.7, 4042.0], [79.8, 4044.0], [79.9, 4045.0], [80.0, 4045.0], [80.1, 4048.0], [80.2, 4048.0], [80.3, 4049.0], [80.4, 4051.0], [80.5, 4053.0], [80.6, 4055.0], [80.7, 4058.0], [80.8, 4058.0], [80.9, 4061.0], [81.0, 4065.0], [81.1, 4068.0], [81.2, 4070.0], [81.3, 4072.0], [81.4, 4080.0], [81.5, 4080.0], [81.6, 4082.0], [81.7, 4094.0], [81.8, 4102.0], [81.9, 4104.0], [82.0, 4107.0], [82.1, 4108.0], [82.2, 4108.0], [82.3, 4111.0], [82.4, 4116.0], [82.5, 4119.0], [82.6, 4121.0], [82.7, 4123.0], [82.8, 4125.0], [82.9, 4125.0], [83.0, 4127.0], [83.1, 4127.0], [83.2, 4128.0], [83.3, 4131.0], [83.4, 4141.0], [83.5, 4142.0], [83.6, 4145.0], [83.7, 4146.0], [83.8, 4151.0], [83.9, 4153.0], [84.0, 4157.0], [84.1, 4161.0], [84.2, 4162.0], [84.3, 4162.0], [84.4, 4166.0], [84.5, 4167.0], [84.6, 4168.0], [84.7, 4169.0], [84.8, 4170.0], [84.9, 4174.0], [85.0, 4177.0], [85.1, 4179.0], [85.2, 4182.0], [85.3, 4185.0], [85.4, 4189.0], [85.5, 4190.0], [85.6, 4191.0], [85.7, 4192.0], [85.8, 4197.0], [85.9, 4199.0], [86.0, 4204.0], [86.1, 4204.0], [86.2, 4205.0], [86.3, 4206.0], [86.4, 4207.0], [86.5, 4210.0], [86.6, 4211.0], [86.7, 4212.0], [86.8, 4214.0], [86.9, 4215.0], [87.0, 4216.0], [87.1, 4220.0], [87.2, 4224.0], [87.3, 4226.0], [87.4, 4227.0], [87.5, 4229.0], [87.6, 4235.0], [87.7, 4235.0], [87.8, 4236.0], [87.9, 4239.0], [88.0, 4239.0], [88.1, 4240.0], [88.2, 4243.0], [88.3, 4244.0], [88.4, 4245.0], [88.5, 4249.0], [88.6, 4251.0], [88.7, 4254.0], [88.8, 4255.0], [88.9, 4258.0], [89.0, 4262.0], [89.1, 4264.0], [89.2, 4274.0], [89.3, 4274.0], [89.4, 4279.0], [89.5, 4285.0], [89.6, 4290.0], [89.7, 4290.0], [89.8, 4292.0], [89.9, 4294.0], [90.0, 4299.0], [90.1, 4301.0], [90.2, 4301.0], [90.3, 4302.0], [90.4, 4303.0], [90.5, 4305.0], [90.6, 4306.0], [90.7, 4313.0], [90.8, 4316.0], [90.9, 4318.0], [91.0, 4322.0], [91.1, 4323.0], [91.2, 4324.0], [91.3, 4328.0], [91.4, 4337.0], [91.5, 4338.0], [91.6, 4347.0], [91.7, 4349.0], [91.8, 4351.0], [91.9, 4352.0], [92.0, 4353.0], [92.1, 4355.0], [92.2, 4364.0], [92.3, 4366.0], [92.4, 4370.0], [92.5, 4374.0], [92.6, 4378.0], [92.7, 4383.0], [92.8, 4387.0], [92.9, 4391.0], [93.0, 4397.0], [93.1, 4397.0], [93.2, 4398.0], [93.3, 4398.0], [93.4, 4399.0], [93.5, 4410.0], [93.6, 4411.0], [93.7, 4411.0], [93.8, 4414.0], [93.9, 4415.0], [94.0, 4418.0], [94.1, 4419.0], [94.2, 4421.0], [94.3, 4421.0], [94.4, 4425.0], [94.5, 4430.0], [94.6, 4430.0], [94.7, 4430.0], [94.8, 4434.0], [94.9, 4441.0], [95.0, 4447.0], [95.1, 4449.0], [95.2, 4451.0], [95.3, 4462.0], [95.4, 4463.0], [95.5, 4466.0], [95.6, 4476.0], [95.7, 4482.0], [95.8, 4487.0], [95.9, 4487.0], [96.0, 4489.0], [96.1, 4490.0], [96.2, 4493.0], [96.3, 4526.0], [96.4, 4532.0], [96.5, 4535.0], [96.6, 4545.0], [96.7, 4564.0], [96.8, 4566.0], [96.9, 4576.0], [97.0, 4576.0], [97.1, 4589.0], [97.2, 4591.0], [97.3, 4664.0], [97.4, 4692.0], [97.5, 4717.0], [97.6, 4739.0], [97.7, 4752.0], [97.8, 4803.0], [97.9, 4964.0], [98.0, 5014.0], [98.1, 5023.0], [98.2, 5075.0], [98.3, 5086.0], [98.4, 5143.0], [98.5, 5146.0], [98.6, 5173.0], [98.7, 5330.0], [98.8, 5337.0], [98.9, 5420.0], [99.0, 5461.0], [99.1, 5592.0], [99.2, 5645.0], [99.3, 5734.0], [99.4, 5903.0], [99.5, 6005.0], [99.6, 6028.0], [99.7, 6187.0], [99.8, 6660.0], [99.9, 7483.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 107.0, "series": [{"data": [[0.0, 12.0], [600.0, 4.0], [700.0, 2.0], [800.0, 1.0], [1000.0, 1.0], [1200.0, 1.0], [1300.0, 1.0], [1700.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2400.0, 3.0], [2700.0, 3.0], [2900.0, 4.0], [3000.0, 2.0], [3100.0, 12.0], [3300.0, 11.0], [3200.0, 5.0], [3400.0, 27.0], [3500.0, 34.0], [3600.0, 35.0], [3700.0, 57.0], [3800.0, 61.0], [3900.0, 97.0], [4000.0, 107.0], [4100.0, 96.0], [4200.0, 75.0], [4300.0, 72.0], [4400.0, 72.0], [4500.0, 46.0], [4600.0, 31.0], [4700.0, 18.0], [4800.0, 6.0], [4900.0, 6.0], [5100.0, 3.0], [5000.0, 7.0], [5200.0, 4.0], [5300.0, 1.0], [5400.0, 3.0], [5500.0, 3.0], [5600.0, 2.0], [5700.0, 3.0], [5800.0, 1.0], [5900.0, 2.0], [6000.0, 3.0], [6100.0, 2.0], [6200.0, 2.0], [6300.0, 2.0], [6500.0, 5.0], [6400.0, 4.0], [6700.0, 3.0], [9500.0, 1.0], [100.0, 8.0], [200.0, 15.0], [300.0, 13.0], [400.0, 3.0], [500.0, 5.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 45.0], [600.0, 66.0], [700.0, 56.0], [200.0, 42.0], [800.0, 72.0], [900.0, 43.0], [1000.0, 38.0], [1100.0, 76.0], [300.0, 38.0], [1200.0, 30.0], [1300.0, 55.0], [1400.0, 50.0], [1500.0, 38.0], [100.0, 49.0], [400.0, 35.0], [1600.0, 64.0], [1700.0, 45.0], [1800.0, 47.0], [1900.0, 45.0], [500.0, 45.0], [2000.0, 21.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1000.0, 1.0], [1400.0, 1.0], [100.0, 7.0], [2000.0, 3.0], [2100.0, 5.0], [2200.0, 4.0], [2300.0, 4.0], [2400.0, 4.0], [2500.0, 12.0], [2600.0, 14.0], [2700.0, 10.0], [2800.0, 27.0], [2900.0, 35.0], [3000.0, 33.0], [3100.0, 41.0], [200.0, 6.0], [3200.0, 50.0], [3300.0, 76.0], [3400.0, 101.0], [3500.0, 90.0], [3600.0, 82.0], [3700.0, 56.0], [3800.0, 52.0], [3900.0, 37.0], [4000.0, 40.0], [4100.0, 42.0], [4200.0, 41.0], [4300.0, 34.0], [4400.0, 28.0], [4500.0, 10.0], [4600.0, 2.0], [300.0, 24.0], [4700.0, 3.0], [4800.0, 1.0], [4900.0, 1.0], [5000.0, 4.0], [5100.0, 3.0], [5300.0, 2.0], [5400.0, 2.0], [5600.0, 1.0], [5500.0, 1.0], [5700.0, 1.0], [5900.0, 1.0], [6000.0, 2.0], [6100.0, 1.0], [400.0, 3.0], [6600.0, 1.0], [7400.0, 1.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 300.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2151.0, "series": [{"data": [[0.0, 300.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 549.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2151.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 25.08163265306123, "minX": 1.6689621E12, "maxY": 483.85278654048335, "series": [{"data": [[1.6689621E12, 483.85278654048335], [1.66896216E12, 25.08163265306123]], "isOverall": false, "label": "client-to-gateway-non-caching (GET)", "isController": false}, {"data": [[1.6689621E12, 476.6170000000003]], "isOverall": false, "label": "client-to-application (GET)", "isController": false}, {"data": [[1.66896216E12, 368.76900000000023]], "isOverall": false, "label": "client-to-gateway-caching (GET)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896216E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 9529.0, "series": [{"data": [[2.0, 6334.0], [3.0, 6504.0], [4.0, 6461.0], [5.0, 6595.0], [6.0, 6798.0], [7.0, 6301.0], [9.0, 6382.5], [10.0, 6498.0], [11.0, 6767.0], [12.0, 6730.0], [13.0, 6027.0], [14.0, 6512.0], [15.0, 6129.0], [16.0, 6416.0], [17.0, 6461.0], [18.0, 6519.0], [19.0, 6010.0], [21.0, 6245.0], [22.0, 6008.0], [23.0, 5656.0], [24.0, 5749.0], [25.0, 5613.0], [26.0, 5979.0], [27.0, 5884.0], [28.0, 5919.0], [29.0, 5720.0], [30.0, 5399.0], [33.0, 5053.0], [32.0, 5523.0], [35.0, 5457.0], [34.0, 5729.0], [37.0, 5092.0], [36.0, 5426.0], [39.0, 5512.0], [38.0, 5160.0], [41.0, 4875.0], [40.0, 5476.0], [43.0, 4823.0], [42.0, 5279.0], [44.0, 2632.0], [45.0, 5290.0], [47.0, 5016.0], [46.0, 5288.0], [49.0, 4826.0], [50.0, 2618.0], [51.0, 5071.0], [53.0, 4822.0], [52.0, 5037.0], [55.0, 4930.0], [54.0, 5009.0], [57.0, 2438.5], [56.0, 1713.6666666666667], [59.0, 4503.0], [58.0, 5123.0], [61.0, 4388.0], [60.0, 4425.0], [62.0, 2241.0], [63.0, 4418.0], [67.0, 4736.0], [66.0, 4423.0], [65.0, 4625.0], [71.0, 4768.0], [70.0, 4942.0], [69.0, 4981.0], [68.0, 4994.0], [75.0, 4903.0], [74.0, 4570.0], [73.0, 4488.0], [72.0, 4597.0], [78.0, 2215.5], [77.0, 2994.3333333333335], [76.0, 95.0], [79.0, 4424.0], [82.0, 2159.5], [81.0, 2258.0], [80.0, 1729.0], [83.0, 4665.0], [87.0, 4724.0], [86.0, 4577.0], [85.0, 4243.0], [84.0, 4288.0], [90.0, 3103.3333333333335], [91.0, 4257.0], [88.0, 4651.0], [95.0, 4476.0], [94.0, 4780.0], [93.0, 4154.0], [92.0, 4624.0], [99.0, 4438.0], [98.0, 4525.0], [97.0, 4458.5], [103.0, 4324.0], [101.0, 4315.5], [106.0, 2443.5], [105.0, 3010.0], [107.0, 4756.0], [111.0, 4086.0], [110.0, 4417.5], [108.0, 4559.0], [115.0, 4307.5], [113.0, 4209.0], [119.0, 4731.0], [118.0, 4366.0], [116.0, 4060.0], [123.0, 2108.5], [122.0, 4254.0], [121.0, 4688.0], [127.0, 4239.0], [126.0, 4688.0], [125.0, 4771.0], [124.0, 4452.0], [132.0, 4202.0], [131.0, 4762.0], [130.0, 4807.0], [129.0, 4752.0], [128.0, 4411.0], [137.0, 2172.0], [143.0, 4543.0], [142.0, 4143.0], [141.0, 4085.0], [140.0, 4431.5], [138.0, 4602.0], [136.0, 4321.0], [150.0, 4663.0], [149.0, 4626.0], [148.0, 4529.5], [147.0, 4109.0], [146.0, 4160.0], [156.0, 2846.0], [159.0, 4432.0], [157.0, 4640.0], [154.0, 4363.5], [152.0, 4404.0], [166.0, 4116.0], [165.0, 4080.0], [163.0, 4235.0], [162.0, 4090.6666666666665], [174.0, 4344.0], [173.0, 4455.0], [172.0, 4739.0], [170.0, 4199.0], [169.0, 4381.0], [168.0, 4435.0], [182.0, 4133.333333333333], [181.0, 4584.0], [178.0, 4428.5], [176.0, 4294.0], [190.0, 4061.0], [189.0, 4627.0], [188.0, 4280.0], [187.0, 4457.333333333333], [184.0, 4431.5], [196.0, 4285.0], [195.0, 4549.0], [194.0, 4548.0], [193.0, 4168.0], [192.0, 4195.5], [207.0, 4033.0], [205.0, 4633.0], [204.0, 4228.750000000001], [214.0, 4235.5], [213.0, 4259.0], [212.0, 4016.0], [211.0, 4643.0], [210.0, 4275.0], [209.0, 4384.0], [208.0, 4090.0], [217.0, 2240.25], [223.0, 4060.0], [222.0, 4490.0], [221.0, 4040.0], [220.0, 4443.5], [218.0, 4418.0], [231.0, 4403.666666666667], [228.0, 4391.0], [226.0, 4059.0], [225.0, 4403.0], [237.0, 4208.5], [235.0, 4702.0], [234.0, 4330.0], [233.0, 4186.5], [241.0, 3515.8], [247.0, 2105.0], [246.0, 4290.666666666667], [243.0, 4536.0], [248.0, 228.0], [255.0, 235.5], [254.0, 4214.0], [259.0, 2417.5], [257.0, 1291.75], [256.0, 2869.0], [262.0, 4017.0], [258.0, 2274.0], [261.0, 2412.0], [260.0, 2441.5], [271.0, 4389.0], [265.0, 4192.333333333333], [269.0, 4074.5], [268.0, 4280.5], [284.0, 286.0], [287.0, 4548.0], [278.0, 4442.5], [275.0, 3914.0], [274.0, 4650.0], [273.0, 4201.0], [272.0, 4597.0], [301.0, 4355.0], [299.0, 4291.0], [298.0, 4137.0], [296.0, 4303.0], [295.0, 4282.0], [288.0, 4336.0], [294.0, 4037.5], [292.0, 4485.0], [291.0, 4494.0], [289.0, 4317.800000000001], [305.0, 4436.0], [316.0, 4206.5], [315.0, 4647.0], [311.0, 4062.0], [310.0, 3903.0], [309.0, 4438.0], [308.0, 4342.5], [306.0, 4196.0], [304.0, 4198.25], [335.0, 4310.0], [333.0, 4066.0], [332.0, 4179.0], [329.0, 4306.666666666667], [328.0, 4018.0], [324.0, 4383.0], [327.0, 4086.0], [347.0, 4401.5], [345.0, 3876.0], [344.0, 4191.0], [343.0, 4152.5], [341.0, 4070.0], [340.0, 4627.0], [339.0, 4291.0], [337.0, 4426.5], [366.0, 4222.5], [356.0, 338.0], [367.0, 3986.0], [364.0, 4305.0], [354.0, 4568.0], [353.0, 4235.8], [352.0, 4258.0], [363.0, 3971.5], [362.0, 4317.0], [361.0, 4074.5], [358.0, 3901.0], [357.0, 4280.666666666667], [371.0, 4159.0], [382.0, 4486.5], [383.0, 3970.0], [380.0, 4246.0], [378.0, 4357.5], [376.0, 4192.5], [374.0, 4326.0], [373.0, 4547.0], [372.0, 4028.0], [370.0, 3866.0], [369.0, 3868.0], [368.0, 4012.0], [385.0, 2387.5], [389.0, 348.0], [388.0, 2909.6666666666665], [387.0, 341.0], [391.0, 343.6666666666667], [390.0, 4183.333333333333], [399.0, 4387.25], [395.0, 4209.5], [393.0, 4062.5], [392.0, 4134.0], [412.0, 4193.0], [414.0, 4172.0], [415.0, 4074.0], [413.0, 3972.0], [411.0, 4527.0], [410.0, 4410.0], [407.0, 4410.0], [402.0, 3899.0], [406.0, 4507.0], [405.0, 4083.0], [404.0, 4041.0], [429.0, 4186.0], [428.0, 2110.0], [418.0, 4018.0], [417.0, 4159.5], [427.0, 4068.0], [426.0, 4339.0], [425.0, 4491.0], [424.0, 4379.0], [422.0, 3869.0], [421.0, 4604.0], [420.0, 4237.5], [447.0, 4494.0], [446.0, 4136.666666666667], [443.0, 4121.0], [442.0, 3840.0], [441.0, 4001.5], [439.0, 4171.0], [436.0, 4422.0], [435.0, 4265.5], [433.0, 4065.25], [452.0, 2433.5], [463.0, 4236.0], [462.0, 4079.0], [458.0, 4075.6666666666665], [455.0, 4105.0], [451.0, 4269.0], [450.0, 4268.0], [449.0, 4194.0], [478.0, 4072.0], [477.0, 4029.0], [476.0, 4238.5], [474.0, 4093.0], [473.0, 4086.0], [472.0, 4033.0], [470.0, 4032.142857142857], [469.0, 3965.0], [493.0, 3830.0], [485.0, 3076.3333333333335], [495.0, 4146.0], [492.0, 4196.0], [482.0, 4200.0], [481.0, 4296.0], [480.0, 3856.0], [491.0, 4178.0], [489.0, 4099.0], [488.0, 3955.0], [487.0, 3905.5], [484.0, 4172.0], [509.0, 3950.0], [510.0, 4167.0], [508.0, 4480.0], [499.0, 4419.0], [498.0, 3800.0], [497.0, 4372.0], [496.0, 3977.0], [507.0, 3817.0], [506.0, 4521.0], [505.0, 3951.0], [504.0, 3992.0], [503.0, 3974.0], [502.0, 4054.0], [501.0, 3955.0], [500.0, 4123.0], [519.0, 4277.0], [542.0, 2169.5], [526.0, 2643.6666666666665], [524.0, 4083.0], [522.0, 4471.0], [521.0, 4403.0], [520.0, 4150.0], [543.0, 2100.5], [529.0, 4099.5], [528.0, 4450.0], [541.0, 3804.0], [540.0, 4200.0], [539.0, 3738.0], [518.0, 4070.0], [517.0, 4226.0], [515.0, 4408.0], [514.0, 4330.0], [513.0, 3995.0], [512.0, 3891.0], [535.0, 4120.333333333333], [532.0, 4189.0], [531.0, 4451.0], [530.0, 4453.0], [574.0, 4356.0], [575.0, 4454.0], [561.0, 4099.5], [573.0, 3748.0], [572.0, 4318.5], [570.0, 4125.0], [569.0, 4090.5], [559.0, 4437.0], [545.0, 4014.0], [548.0, 4066.5], [546.0, 4166.0], [550.0, 3930.0], [549.0, 3735.0], [558.0, 3786.5], [556.0, 4259.0], [554.0, 3921.75], [567.0, 4142.5], [565.0, 4211.0], [563.0, 4115.0], [562.0, 3780.0], [606.0, 3741.0], [605.0, 2820.6666666666665], [607.0, 4087.0], [594.0, 3866.0], [592.0, 4335.0], [603.0, 3724.0], [602.0, 3893.0], [600.0, 3787.0], [591.0, 3723.0], [577.0, 4033.0], [576.0, 3933.0], [579.0, 3996.0], [578.0, 4039.0], [583.0, 4241.0], [580.0, 3932.0], [589.0, 3980.0], [588.0, 4087.5], [586.0, 4288.0], [584.0, 4362.0], [599.0, 4075.0], [598.0, 4040.0], [596.0, 3968.0], [595.0, 4195.0], [636.0, 3977.0], [612.0, 2474.5], [611.0, 2316.5], [610.0, 3998.0], [609.0, 4370.0], [623.0, 3962.0], [622.0, 3645.0], [621.0, 3995.0], [620.0, 3821.0], [619.0, 3663.0], [618.0, 4254.5], [616.0, 4215.0], [639.0, 4204.0], [625.0, 4031.0], [624.0, 4335.0], [628.0, 4087.5], [626.0, 3836.0], [631.0, 4021.0], [629.0, 3879.0], [638.0, 3814.0], [637.0, 3700.0], [635.0, 3729.0], [634.0, 3946.0], [633.0, 3919.0], [615.0, 3737.0], [614.0, 3943.5], [665.0, 4030.0], [671.0, 3996.0], [657.0, 2367.0], [656.0, 3727.0], [661.0, 3853.5], [659.0, 4008.5], [668.0, 2931.3333333333335], [670.0, 4107.0], [666.0, 3874.0], [664.0, 4124.0], [647.0, 4093.0], [646.0, 3853.0], [645.0, 3991.5], [643.0, 3606.0], [642.0, 3945.0], [641.0, 4284.0], [640.0, 3987.0], [655.0, 4302.0], [654.0, 4117.0], [653.0, 3893.0], [652.0, 3661.0], [651.0, 4063.0], [649.0, 3925.5], [663.0, 3582.0], [662.0, 3585.0], [696.0, 4133.0], [702.0, 4101.0], [703.0, 4176.0], [690.0, 3806.0], [688.0, 3918.5], [701.0, 4087.0], [699.0, 3786.0], [697.0, 4246.0], [686.0, 4079.0], [673.0, 3978.5], [677.0, 4058.5], [675.0, 3927.0], [679.0, 4340.0], [678.0, 3770.0], [685.0, 4210.0], [684.0, 3771.0], [683.0, 3816.0], [682.0, 3871.0], [680.0, 4371.0], [694.0, 4020.0], [693.0, 3600.0], [692.0, 4120.0], [691.0, 3697.0], [729.0, 4062.0], [733.0, 3725.0], [734.0, 3690.0], [721.0, 3732.0], [720.0, 4092.0], [732.0, 3998.0], [731.0, 4280.0], [730.0, 3999.0], [719.0, 3967.0], [704.0, 3997.0], [707.0, 3566.0], [706.0, 3844.5], [710.0, 4070.5], [708.0, 4148.0], [718.0, 3499.0], [717.0, 3899.5], [715.0, 4211.0], [714.0, 3883.0], [713.0, 3716.5], [712.0, 3922.0], [727.0, 4131.0], [726.0, 3632.0], [724.0, 3674.0], [723.0, 3982.5], [762.0, 4015.0], [744.0, 2346.0], [745.0, 3569.0], [747.0, 3631.0], [746.0, 3678.0], [749.0, 4027.0], [748.0, 4082.0], [751.0, 3505.0], [736.0, 3761.0], [739.0, 3959.5], [738.0, 3906.0], [741.0, 3886.0], [740.0, 3604.0], [750.0, 3528.0], [743.0, 2594.6666666666665], [767.0, 3563.0], [753.0, 4120.0], [752.0, 3823.0], [757.0, 4260.0], [756.0, 4026.3333333333335], [766.0, 3872.0], [764.0, 3618.5], [761.0, 3968.0], [760.0, 4144.0], [759.0, 3906.0], [758.0, 3436.0], [796.0, 4013.0], [782.0, 636.0], [781.0, 3985.0], [780.0, 3913.0], [779.0, 4119.0], [778.0, 3520.0], [777.0, 3760.3333333333335], [783.0, 3624.5], [770.0, 3548.5], [768.0, 3773.0], [772.0, 3707.0], [771.0, 3520.0], [774.0, 3759.0], [773.0, 4001.0], [799.0, 3744.0], [784.0, 3846.0], [787.0, 3522.0], [786.0, 4072.0], [789.0, 3473.0], [788.0, 3676.0], [791.0, 4061.0], [790.0, 3475.0], [798.0, 3775.0], [797.0, 4069.0], [795.0, 3831.0], [794.0, 3462.0], [793.0, 3559.0], [792.0, 3872.0], [828.0, 3979.0], [808.0, 2138.0], [809.0, 3842.0], [812.0, 3595.0], [810.0, 3828.0], [815.0, 3716.0], [801.0, 3472.0], [800.0, 3827.0], [803.0, 3705.0], [802.0, 4066.0], [805.0, 3776.0], [804.0, 3610.0], [807.0, 3820.0], [806.0, 3499.0], [814.0, 4133.0], [831.0, 3859.0], [817.0, 3584.0], [816.0, 3991.0], [819.0, 3808.0], [818.0, 3794.0], [821.0, 3697.0], [820.0, 3551.0], [823.0, 3724.0], [822.0, 3999.0], [830.0, 3416.0], [829.0, 3300.0], [827.0, 3948.0], [826.0, 3995.0], [825.0, 3649.0], [824.0, 4153.0], [861.0, 3548.5], [849.0, 1992.0], [848.0, 3564.0], [851.0, 3533.0], [850.0, 3603.0], [853.0, 3397.0], [852.0, 3550.0], [863.0, 3515.0], [862.0, 3851.0], [859.0, 3477.0], [858.0, 3817.0], [857.0, 3675.0], [856.0, 3820.0], [847.0, 3739.0], [832.0, 3958.0], [835.0, 3776.0], [834.0, 3711.0], [839.0, 4037.0], [838.0, 3730.3333333333335], [846.0, 3334.0], [845.0, 3543.0], [844.0, 3555.0], [843.0, 3706.0], [842.0, 3919.0], [841.0, 3441.0], [840.0, 3957.0], [855.0, 3431.0], [854.0, 3629.0], [892.0, 3123.0], [895.0, 3616.0], [881.0, 3793.0], [880.0, 3452.0], [883.0, 3815.0], [882.0, 3431.0], [885.0, 3151.0], [884.0, 3424.0], [894.0, 3673.0], [893.0, 3119.0], [891.0, 3559.0], [890.0, 3506.0], [889.0, 3190.0], [888.0, 3156.0], [879.0, 3783.0], [865.0, 3823.0], [864.0, 3833.0], [867.0, 3651.0], [866.0, 3378.0], [869.0, 3472.0], [868.0, 3247.0], [871.0, 3642.0], [870.0, 3904.0], [878.0, 3503.0], [877.0, 3158.0], [876.0, 3272.0], [875.0, 3626.0], [873.0, 3535.0], [872.0, 3680.0], [887.0, 3710.0], [886.0, 3405.0], [924.0, 3104.0], [904.0, 2067.5], [905.0, 3376.0], [907.0, 2993.0], [906.0, 3451.0], [909.0, 3358.0], [908.0, 3665.0], [911.0, 3343.0], [896.0, 3626.0], [899.0, 3164.0], [898.0, 3343.5], [901.0, 3474.0], [900.0, 3545.0], [903.0, 2972.0], [902.0, 3609.0], [910.0, 3512.0], [927.0, 2799.0], [913.0, 3446.0], [912.0, 3245.0], [915.0, 3124.0], [914.0, 3098.0], [917.0, 3479.0], [916.0, 2948.0], [919.0, 3179.0], [918.0, 3016.0], [926.0, 2780.0], [925.0, 2968.0], [923.0, 3132.0], [922.0, 3330.0], [921.0, 3398.0], [920.0, 3431.0], [932.0, 1979.0], [938.0, 895.0], [929.0, 2464.0], [928.0, 2759.0], [937.0, 1076.0], [936.0, 1295.0], [935.0, 1319.0], [934.0, 1714.0], [933.0, 2012.0], [931.0, 2408.0], [930.0, 2469.0], [1.0, 9529.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[461.3729999999997, 3908.9159999999974]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 2036.0], [3.0, 2028.0], [5.0, 2025.5], [6.0, 2025.0], [8.0, 2024.5], [10.0, 2018.5], [11.0, 2026.0], [12.0, 2024.0], [13.0, 2017.0], [14.0, 11.0], [15.0, 1351.6666666666667], [16.0, 1013.5], [17.0, 2006.0], [18.0, 1008.5], [19.0, 674.0], [20.0, 1011.0], [21.0, 682.0], [22.0, 1010.5], [23.0, 1994.0], [25.0, 1995.0], [26.0, 1996.5], [27.0, 1996.0], [28.0, 1985.0], [30.0, 1981.0], [31.0, 515.0], [32.0, 994.5], [35.0, 991.5], [34.0, 995.5], [37.0, 1946.0], [36.0, 1949.0], [38.0, 1939.0], [41.0, 1939.0], [40.0, 1939.0], [43.0, 1934.0], [42.0, 1932.0], [45.0, 1930.0], [47.0, 1920.0], [46.0, 1919.5], [49.0, 1915.0], [48.0, 1915.0], [53.0, 979.5], [52.0, 1919.0], [55.0, 1916.0], [54.0, 1916.0], [57.0, 1914.0], [56.0, 1915.0], [59.0, 1915.0], [58.0, 1924.0], [61.0, 1909.0], [60.0, 1900.0], [63.0, 1892.0], [62.0, 1904.0], [66.0, 1893.0], [65.0, 1903.0], [64.0, 1902.0], [68.0, 1282.0], [71.0, 1899.0], [70.0, 1897.0], [69.0, 1899.0], [75.0, 1899.0], [74.0, 1899.0], [73.0, 1899.0], [72.0, 1896.0], [79.0, 1897.0], [78.0, 1898.0], [77.0, 1897.0], [76.0, 1901.0], [83.0, 1886.0], [80.0, 1891.0], [86.0, 1879.0], [85.0, 1884.0], [84.0, 1882.0], [91.0, 1864.0], [90.0, 1860.0], [89.0, 1862.0], [88.0, 1872.0], [94.0, 1865.0], [92.0, 1873.0], [99.0, 1869.6666666666667], [96.0, 1866.0], [103.0, 1843.0], [102.0, 1855.0], [101.0, 1862.0], [100.0, 1861.0], [107.0, 1825.0], [106.0, 1830.0], [105.0, 1831.0], [104.0, 1833.0], [111.0, 1826.0], [110.0, 1826.0], [109.0, 1825.5], [115.0, 1795.0], [113.0, 1809.0], [112.0, 1797.0], [119.0, 932.0], [118.0, 1797.0], [117.0, 1798.0], [116.0, 1796.0], [123.0, 493.0], [120.0, 639.6666666666666], [122.0, 1786.0], [121.0, 1797.0], [127.0, 1771.0], [126.0, 1770.0], [125.0, 1771.0], [124.0, 1784.0], [135.0, 1760.0], [133.0, 1762.0], [132.0, 1761.0], [131.0, 1764.0], [130.0, 1766.0], [129.0, 1764.0], [128.0, 1763.0], [143.0, 899.5], [142.0, 1737.0], [140.0, 1737.0], [139.0, 1747.0], [138.0, 1752.6666666666667], [144.0, 900.0], [151.0, 1175.6666666666667], [149.0, 1727.5], [147.0, 1735.0], [146.0, 1729.0], [153.0, 476.25], [155.0, 476.25], [154.0, 890.5], [152.0, 895.0], [159.0, 1693.0], [158.0, 1696.0], [157.0, 1704.0], [156.0, 1718.0], [164.0, 610.3333333333334], [162.0, 882.5], [163.0, 875.5], [167.0, 1676.0], [166.0, 1681.5], [161.0, 1688.0], [160.0, 1693.0], [171.0, 864.75], [175.0, 1648.0], [173.0, 1650.0], [172.0, 1644.0], [169.0, 1654.0], [168.0, 1668.0], [181.0, 863.0], [183.0, 1640.0], [182.0, 1647.0], [180.0, 1646.0], [179.0, 1645.0], [178.0, 1657.0], [177.0, 1649.0], [176.0, 1647.0], [191.0, 1640.0], [190.0, 1655.0], [188.0, 1640.0], [187.0, 1652.5], [185.0, 1639.0], [184.0, 1639.0], [199.0, 1646.0], [198.0, 1642.5], [196.0, 1657.0], [195.0, 1653.0], [194.0, 1656.5], [192.0, 1642.0], [204.0, 608.6666666666666], [207.0, 618.6666666666667], [205.0, 110.0], [203.0, 877.5], [202.0, 618.3333333333334], [206.0, 729.2], [201.0, 1647.0], [200.0, 1647.0], [210.0, 118.66666666666667], [209.0, 612.3333333333333], [208.0, 487.75], [211.0, 881.0], [215.0, 1636.0], [212.0, 1635.0], [223.0, 1591.0], [222.0, 1601.0], [221.0, 1601.0], [220.0, 1601.0], [219.0, 1612.0], [218.0, 1616.0], [217.0, 1618.0], [216.0, 1629.0], [231.0, 1103.6666666666667], [229.0, 1585.0], [228.0, 1584.0], [227.0, 1587.0], [225.0, 1587.0], [239.0, 853.5], [238.0, 621.0], [237.0, 858.25], [235.0, 1556.0], [234.0, 1559.0], [233.0, 1578.0], [232.0, 1578.0], [242.0, 754.7142857142857], [247.0, 616.3333333333333], [246.0, 1541.0], [245.0, 1542.0], [244.0, 1548.0], [243.0, 1548.0], [252.0, 840.0], [251.0, 837.5], [254.0, 844.0], [253.0, 1514.0], [250.0, 1519.0], [249.0, 1512.0], [248.0, 1520.0], [270.0, 450.8], [260.0, 511.0], [261.0, 1498.0], [271.0, 413.0], [269.0, 626.0], [268.0, 839.0], [267.0, 1491.0], [266.0, 1496.5], [264.0, 1499.0], [263.0, 1497.0], [257.0, 1514.0], [256.0, 1512.5], [259.0, 1509.0], [258.0, 1499.0], [262.0, 1497.0], [275.0, 529.0], [272.0, 460.2], [274.0, 1478.0], [273.0, 1481.0], [279.0, 1479.0], [278.0, 1477.5], [277.0, 209.0], [276.0, 844.5], [280.0, 870.0], [281.0, 1471.0], [287.0, 639.3333333333333], [286.0, 846.5], [285.0, 1465.5], [283.0, 1463.0], [282.0, 1464.0], [300.0, 841.75], [288.0, 843.5], [292.0, 641.6666666666667], [290.0, 237.0], [289.0, 1455.0], [291.0, 1446.5], [293.0, 542.25], [295.0, 1434.0], [294.0, 1440.0], [299.0, 257.0], [298.0, 652.3333333333333], [297.0, 843.5], [296.0, 1437.0], [302.0, 494.6], [303.0, 256.0], [301.0, 843.5], [317.0, 281.0], [318.0, 1010.0], [316.0, 1383.0], [307.0, 1415.0], [306.0, 1418.0], [305.0, 1423.0], [304.0, 1423.0], [315.0, 1377.0], [314.0, 1382.0], [313.0, 1386.0], [312.0, 1386.0], [311.0, 1387.0], [310.0, 1402.0], [309.0, 1414.0], [308.0, 1410.0], [333.0, 816.0], [330.0, 812.0], [331.0, 811.5], [329.0, 815.5], [332.0, 816.0], [323.0, 1351.0], [322.0, 1368.0], [321.0, 1373.0], [334.0, 1334.0], [328.0, 1341.0], [327.0, 1341.5], [325.0, 1349.0], [351.0, 810.0], [347.0, 809.0], [346.0, 812.0], [345.0, 811.5], [350.0, 1321.0], [349.0, 1319.0], [348.0, 1318.0], [337.0, 1335.6666666666667], [344.0, 1332.0], [343.0, 1331.0], [342.0, 1326.0], [341.0, 1328.0], [340.0, 1333.0], [365.0, 571.25], [353.0, 814.0], [352.0, 813.5], [359.0, 1308.0], [358.0, 1306.0], [357.0, 1318.0], [356.0, 1317.0], [366.0, 649.0], [364.0, 649.3333333333333], [355.0, 1322.0], [354.0, 1321.0], [363.0, 573.5], [367.0, 1299.0], [362.0, 1304.0], [361.0, 1304.0], [360.0, 1305.0], [382.0, 1245.0], [376.0, 804.5], [377.0, 797.5], [383.0, 647.0], [381.0, 799.5], [380.0, 1250.0], [379.0, 1254.0], [378.0, 1255.0], [375.0, 1271.0], [368.0, 1292.0], [371.0, 1286.0], [370.0, 1288.5], [374.0, 1275.0], [373.0, 1282.0], [372.0, 1279.0], [392.0, 791.0], [395.0, 779.0], [394.0, 928.0], [393.0, 362.0], [391.0, 791.5], [385.0, 1229.0], [384.0, 1237.0], [387.0, 1230.0], [386.0, 1229.0], [390.0, 1221.0], [389.0, 1223.0], [388.0, 1228.0], [399.0, 1194.0], [398.0, 1197.0], [397.0, 1196.0], [396.0, 1197.0], [403.0, 646.6666666666667], [405.0, 368.0], [406.0, 780.75], [407.0, 1181.0], [402.0, 1192.0], [401.0, 1191.0], [400.0, 1194.0], [404.0, 781.0], [415.0, 1172.0], [409.0, 1176.0], [408.0, 1182.0], [414.0, 1172.0], [413.0, 1180.0], [412.0, 1174.0], [411.0, 1173.0], [410.0, 1173.0], [429.0, 1164.0], [431.0, 1171.0], [424.0, 645.0], [430.0, 777.5], [428.0, 1164.0], [419.0, 1175.0], [416.0, 1168.0], [426.0, 1162.0], [425.0, 1163.0], [423.0, 1157.0], [422.0, 1158.0], [421.0, 1163.0], [420.0, 1163.0], [446.0, 778.0], [432.0, 590.25], [433.0, 1167.0], [435.0, 1158.0], [434.0, 1161.0], [447.0, 1177.0], [445.0, 1153.0], [444.0, 1151.0], [443.0, 1160.5], [441.0, 1162.0], [440.0, 1162.0], [438.0, 1160.0], [437.0, 1159.0], [461.0, 1138.0], [462.0, 657.0], [460.0, 1140.0], [451.0, 1156.0], [449.0, 1149.5], [459.0, 1147.0], [458.0, 1148.0], [457.0, 1147.0], [456.0, 1148.0], [455.0, 1149.0], [454.0, 1147.0], [453.0, 1148.0], [452.0, 1142.0], [477.0, 865.3333333333334], [476.0, 417.0], [467.0, 1115.0], [466.0, 1132.0], [464.0, 1137.5], [479.0, 1086.0], [478.0, 1087.0], [475.0, 1091.5], [473.0, 1093.0], [472.0, 1101.0], [470.0, 1099.0], [469.0, 1110.0], [468.0, 1121.0], [493.0, 1037.0], [484.0, 861.0], [485.0, 1083.0], [483.0, 422.0], [495.0, 1046.5], [492.0, 1046.0], [491.0, 1043.0], [490.0, 1057.0], [489.0, 1060.0], [487.0, 1064.0], [482.0, 1080.0], [481.0, 1090.0], [486.0, 1065.0], [499.0, 1023.0], [509.0, 1005.0], [508.0, 1009.0], [498.0, 1025.0], [497.0, 1038.0], [496.0, 1046.0], [507.0, 1013.0], [506.0, 1018.0], [505.0, 1015.0], [503.0, 1020.0], [502.0, 1016.0], [501.0, 1015.0], [500.0, 1016.0], [540.0, 920.0], [523.0, 618.6666666666666], [521.0, 623.6666666666666], [520.0, 989.0], [522.0, 986.0], [543.0, 917.0], [530.0, 955.5], [528.0, 956.0], [533.0, 957.5], [531.0, 957.0], [535.0, 939.0], [534.0, 960.0], [542.0, 917.0], [541.0, 918.0], [539.0, 930.0], [537.0, 939.0], [536.0, 944.0], [519.0, 989.0], [517.0, 992.0], [515.0, 990.0], [514.0, 992.0], [513.0, 996.0], [526.0, 958.0], [525.0, 963.0], [524.0, 970.0], [569.0, 670.0], [559.0, 673.0], [546.0, 684.0], [544.0, 685.5], [561.0, 743.0], [562.0, 879.0], [564.0, 882.0], [563.0, 880.0], [567.0, 873.0], [566.0, 875.0], [560.0, 468.0], [568.0, 673.5], [551.0, 905.0], [550.0, 911.0], [548.0, 912.0], [547.0, 913.0], [575.0, 860.0], [574.0, 853.0], [573.0, 860.0], [572.0, 857.0], [570.0, 861.0], [558.0, 676.5], [557.0, 676.25], [556.0, 468.0], [554.0, 681.0], [553.0, 897.0], [552.0, 909.0], [555.0, 882.0], [607.0, 688.5], [595.0, 617.3333333333334], [586.0, 678.5], [585.0, 873.0], [587.0, 866.0], [589.0, 751.3333333333334], [588.0, 511.0], [591.0, 691.0], [577.0, 865.0], [579.0, 863.0], [578.0, 863.0], [581.0, 860.0], [580.0, 868.0], [583.0, 871.0], [582.0, 869.0], [590.0, 693.0], [596.0, 586.75], [594.0, 594.75], [599.0, 617.0], [598.0, 592.0], [597.0, 620.0], [600.0, 685.0], [593.0, 584.4], [592.0, 691.0], [606.0, 525.6666666666666], [605.0, 686.5], [604.0, 856.0], [603.0, 858.0], [602.0, 857.0], [601.0, 858.0], [632.0, 785.0], [608.0, 685.5], [620.0, 726.0], [619.0, 535.0], [618.0, 826.0], [617.0, 819.0], [616.0, 826.0], [623.0, 674.5], [622.0, 810.0], [621.0, 818.0], [635.0, 633.6666666666666], [637.0, 776.0], [636.0, 798.0], [634.0, 668.0], [633.0, 671.5], [615.0, 821.0], [614.0, 827.0], [613.0, 827.0], [612.0, 834.0], [611.0, 842.0], [610.0, 850.0], [609.0, 859.0], [639.0, 775.0], [625.0, 808.0], [627.0, 797.0], [626.0, 788.0], [629.0, 783.0], [628.0, 787.0], [631.0, 789.0], [630.0, 796.0], [638.0, 782.0], [664.0, 681.3333333333334], [641.0, 626.3333333333334], [640.0, 766.0], [643.0, 772.0], [642.0, 777.0], [655.0, 761.0], [654.0, 760.0], [653.0, 767.0], [651.0, 769.0], [650.0, 775.0], [649.0, 774.0], [648.0, 776.0], [645.0, 704.6666666666666], [647.0, 775.0], [646.0, 778.0], [644.0, 567.0], [660.0, 571.0], [662.0, 740.0], [661.0, 737.5], [659.0, 651.5], [665.0, 656.5], [666.0, 735.0], [668.0, 727.0], [667.0, 728.0], [671.0, 734.5], [658.0, 746.0], [657.0, 753.5], [669.0, 732.0], [696.0, 674.0], [700.0, 630.0], [689.0, 598.5], [673.0, 658.5], [672.0, 735.0], [674.0, 726.0], [676.0, 713.0], [675.0, 724.0], [679.0, 706.5], [677.0, 708.0], [687.0, 687.0], [686.0, 688.0], [685.0, 692.5], [684.0, 692.0], [683.0, 694.0], [681.0, 701.0], [680.0, 699.0], [697.0, 672.0], [690.0, 654.6666666666666], [692.0, 677.0], [691.0, 689.0], [695.0, 678.0], [693.0, 678.0], [702.0, 606.0], [701.0, 601.5], [699.0, 647.6666666666666], [698.0, 605.0], [703.0, 663.3333333333334], [688.0, 687.0], [728.0, 633.0], [732.0, 633.0], [735.0, 620.0], [722.0, 656.0], [721.0, 652.5], [724.0, 649.0], [723.0, 649.0], [734.0, 626.0], [733.0, 634.0], [731.0, 634.0], [730.0, 638.0], [729.0, 639.5], [719.0, 653.0], [707.0, 670.0], [705.0, 665.0], [709.0, 668.0], [708.0, 667.0], [711.0, 664.0], [710.0, 670.0], [718.0, 659.5], [716.0, 660.0], [715.0, 660.0], [714.0, 663.0], [713.0, 662.0], [712.0, 667.0], [726.0, 635.0], [725.0, 648.0], [742.0, 618.0], [741.0, 628.0], [740.0, 629.0], [739.0, 622.0], [738.0, 630.5], [736.0, 631.0], [1.0, 2039.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[368.76800000000037, 1034.7239999999997]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 6660.0], [5.0, 5935.666666666667], [6.0, 6005.0], [7.0, 5075.0], [8.0, 5461.0], [9.0, 5903.0], [10.0, 5734.0], [11.0, 5645.0], [13.0, 4918.5], [14.0, 5330.0], [15.0, 5420.0], [16.0, 5337.0], [17.0, 5014.0], [18.0, 5086.0], [19.0, 5143.0], [20.0, 5146.0], [21.0, 4322.0], [22.0, 4717.0], [23.0, 4292.0], [24.0, 5023.0], [25.0, 4236.0], [26.0, 4964.0], [27.0, 3964.0], [28.0, 4355.0], [29.0, 4027.0], [30.0, 4262.0], [31.0, 4111.0], [33.0, 4058.0], [32.0, 4564.0], [35.0, 4803.0], [34.0, 3913.0], [37.0, 4421.0], [36.0, 3898.0], [39.0, 4739.0], [38.0, 4752.0], [41.0, 4692.0], [40.0, 4397.0], [43.0, 3956.5], [45.0, 4185.0], [44.0, 4430.0], [47.0, 3706.0], [46.0, 4545.0], [49.0, 3864.0], [48.0, 4191.0], [51.0, 4206.0], [50.0, 4591.0], [53.0, 4589.0], [52.0, 3813.0], [55.0, 4070.0], [54.0, 4434.0], [57.0, 4299.0], [56.0, 4014.0], [59.0, 3719.0], [61.0, 3993.0], [60.0, 3880.0], [63.0, 4229.5], [67.0, 4258.0], [66.0, 4048.5], [65.0, 4224.0], [71.0, 3553.0], [70.0, 4031.0], [69.0, 4204.0], [68.0, 4476.0], [75.0, 3831.0], [74.0, 4056.3333333333335], [79.0, 4025.0], [78.0, 3919.3333333333335], [83.0, 3647.0], [82.0, 4399.0], [81.0, 4260.5], [87.0, 3570.0], [86.0, 3830.5], [85.0, 3658.0], [91.0, 3533.0], [90.0, 4243.0], [89.0, 4301.0], [88.0, 3981.0], [94.0, 3932.0], [97.0, 3600.0], [96.0, 4063.5], [102.0, 3689.0], [101.0, 3732.0], [100.0, 3793.0], [105.0, 3866.0], [110.0, 3794.0], [111.0, 4031.0], [109.0, 4535.0], [108.0, 3856.0], [113.0, 3946.6666666666665], [119.0, 3873.0], [118.0, 3624.0], [117.0, 4198.5], [116.0, 4387.0], [122.0, 3844.6666666666665], [120.0, 4532.0], [127.0, 3789.0], [126.0, 3562.0], [125.0, 3531.0], [134.0, 3694.6666666666665], [132.0, 4466.0], [130.0, 3790.0], [128.0, 3804.0], [143.0, 3511.5], [141.0, 4192.0], [140.0, 3948.0], [137.0, 3844.0], [151.0, 3905.0], [149.0, 3710.0], [148.0, 3486.0], [146.0, 3467.0], [145.0, 3916.0], [159.0, 3829.0], [158.0, 4168.0], [153.0, 4119.5], [163.0, 3767.0], [162.0, 4489.0], [175.0, 4020.5], [173.0, 3706.0], [174.0, 4482.0], [172.0, 3723.0], [171.0, 4102.0], [170.0, 4037.285714285714], [168.0, 3728.0], [182.0, 4102.0], [180.0, 3515.0], [179.0, 3426.0], [178.0, 4451.0], [177.0, 4419.0], [176.0, 3449.0], [189.0, 3491.0], [188.0, 3591.0], [186.0, 3781.0], [185.0, 4323.0], [184.0, 3743.0], [196.0, 4425.0], [195.0, 4074.0], [193.0, 3884.5], [192.0, 3995.5], [202.0, 3985.166666666667], [215.0, 4079.6666666666665], [212.0, 3481.0], [211.0, 3811.8888888888887], [222.0, 3490.5], [220.0, 3643.5], [218.0, 3443.0], [217.0, 3478.0], [229.0, 3938.5], [227.0, 3444.0], [226.0, 4055.0], [225.0, 3450.6666666666665], [237.0, 3806.6666666666665], [234.0, 3652.2], [247.0, 3506.3333333333335], [244.0, 4248.0], [242.0, 3796.0], [240.0, 3672.0], [255.0, 3898.0], [253.0, 3573.0], [252.0, 3401.5], [250.0, 3933.5], [249.0, 3463.0], [270.0, 3797.25], [266.0, 3814.0], [267.0, 3894.0], [268.0, 4418.0], [263.0, 3623.0], [260.0, 4353.0], [259.0, 4168.0], [256.0, 3704.5], [274.0, 4364.0], [287.0, 3778.0], [286.0, 163.5], [283.0, 4050.25], [282.0, 4068.0], [278.0, 4116.0], [277.0, 4019.5], [276.0, 4370.0], [273.0, 3458.0], [272.0, 3941.5], [300.0, 3430.5], [290.0, 192.2], [288.0, 3443.0], [291.0, 3871.3333333333335], [303.0, 217.0], [302.0, 4046.0], [301.0, 3804.0], [298.0, 3708.5], [295.0, 3703.0], [294.0, 3897.0], [292.0, 3400.0], [310.0, 1793.0], [317.0, 4047.0], [315.0, 3939.0], [312.0, 3529.0], [308.0, 3723.0], [305.0, 4321.0], [304.0, 3513.0], [321.0, 3432.0], [328.0, 234.0], [327.0, 266.0], [335.0, 3413.0], [332.0, 3849.5], [330.0, 4127.0], [324.0, 3669.6666666666665], [320.0, 3375.0], [322.0, 4051.0], [339.0, 3347.0], [351.0, 3585.5], [350.0, 3835.0], [347.0, 3533.0], [346.0, 4316.0], [345.0, 3747.5], [343.0, 3482.0], [342.0, 4096.0], [340.0, 3742.0], [338.0, 3369.0], [337.0, 3676.0], [353.0, 283.0], [365.0, 3566.0], [362.0, 3874.25], [358.0, 3514.5], [356.0, 3323.0], [355.0, 4032.0], [354.0, 3666.0], [352.0, 3583.0], [382.0, 3475.5], [383.0, 1886.0], [380.0, 3640.0], [379.0, 3371.0], [378.0, 3804.0], [376.0, 3815.0], [375.0, 3688.0], [374.0, 3892.6666666666665], [371.0, 4149.666666666667], [368.0, 3496.6666666666665], [386.0, 2485.6666666666665], [391.0, 1145.75], [388.0, 307.0], [385.0, 335.75], [396.0, 3781.0], [387.0, 3336.0], [394.0, 4153.0], [393.0, 3263.0], [392.0, 4182.0], [390.0, 3953.5], [389.0, 4211.0], [414.0, 3603.0], [410.0, 1280.75], [411.0, 3433.0], [408.0, 1422.3333333333333], [407.0, 1934.0], [403.0, 357.5], [402.0, 3490.0], [400.0, 3684.75], [405.0, 2707.6666666666665], [404.0, 4053.0], [406.0, 353.0], [415.0, 4212.0], [413.0, 3296.0], [412.0, 4254.0], [430.0, 4072.0], [431.0, 3976.0], [429.0, 3529.0], [419.0, 3294.0], [417.0, 3637.0], [416.0, 3507.0], [427.0, 3368.0], [426.0, 3315.0], [425.0, 4182.5], [423.0, 3769.0], [422.0, 4245.0], [421.0, 4255.0], [420.0, 3991.5], [435.0, 3278.0], [447.0, 3545.5], [446.0, 3411.5], [444.0, 3682.0], [443.0, 3696.0], [439.0, 3821.0], [436.0, 4104.0], [434.0, 3438.5], [432.0, 3308.0], [462.0, 3703.5], [460.0, 3661.5], [458.0, 4151.0], [457.0, 3546.3333333333335], [454.0, 3841.0], [452.0, 3387.0], [451.0, 3926.5], [449.0, 3727.0], [476.0, 4244.0], [475.0, 3892.0], [473.0, 3899.0], [471.0, 3667.5], [469.0, 3745.5], [468.0, 3373.0], [467.0, 3778.0], [466.0, 3773.3333333333335], [492.0, 3833.5], [489.0, 3637.0], [487.0, 4239.0], [486.0, 3278.0], [485.0, 4070.0], [483.0, 3273.0], [482.0, 3474.5], [509.0, 4048.0], [510.0, 3679.6666666666665], [508.0, 4235.0], [505.0, 3954.0], [502.0, 3440.5], [501.0, 3466.0], [500.0, 3179.0], [499.0, 3588.0], [497.0, 3618.0], [537.0, 3537.0], [542.0, 3615.0], [543.0, 3349.0], [530.0, 3705.5], [528.0, 3627.0], [533.0, 3745.0], [531.0, 4174.0], [540.0, 3452.0], [539.0, 3440.0], [538.0, 3327.0], [536.0, 3576.0], [518.0, 3697.0], [517.0, 3248.0], [516.0, 3560.0], [515.0, 3703.6666666666665], [512.0, 3493.0], [527.0, 3487.0], [526.0, 3322.0], [524.0, 3429.0], [523.0, 3412.5], [522.0, 3946.0], [521.0, 4197.0], [535.0, 4166.0], [534.0, 4210.0], [572.0, 3582.0], [575.0, 3660.0], [561.0, 3449.0], [560.0, 4177.0], [563.0, 3242.0], [562.0, 4170.0], [565.0, 3101.0], [564.0, 4169.0], [574.0, 3770.0], [573.0, 3265.0], [571.0, 4125.0], [570.0, 3300.0], [569.0, 3811.0], [568.0, 3807.0], [559.0, 3154.0], [547.0, 4065.0], [545.0, 3321.5], [550.0, 3697.0], [548.0, 3790.5], [558.0, 4145.0], [557.0, 4157.0], [556.0, 3162.0], [555.0, 3620.0], [554.0, 3609.0], [553.0, 3403.0], [552.0, 3420.0], [567.0, 4161.0], [566.0, 4131.0], [601.0, 3266.5], [605.0, 4016.0], [606.0, 3398.0], [593.0, 3546.0], [592.0, 3342.0], [595.0, 4045.0], [594.0, 3432.0], [604.0, 3097.0], [603.0, 3174.0], [602.0, 3069.0], [591.0, 3768.0], [578.0, 3758.0], [577.0, 3799.0], [580.0, 3493.0], [579.0, 3130.0], [583.0, 3737.0], [582.0, 3551.0], [590.0, 3322.5], [588.0, 3453.0], [587.0, 3204.0], [586.0, 3064.0], [585.0, 3186.0], [584.0, 3251.0], [599.0, 4028.0], [598.0, 3512.0], [597.0, 3114.0], [596.0, 3519.0], [636.0, 3862.0], [639.0, 3626.0], [624.0, 3172.0], [626.0, 3078.0], [625.0, 3371.0], [635.0, 2934.0], [634.0, 3743.0], [633.0, 4001.0], [632.0, 3112.0], [622.0, 3319.0], [609.0, 4048.0], [608.0, 3319.5], [611.0, 3895.0], [610.0, 3606.0], [615.0, 3962.0], [614.0, 3273.0], [620.0, 3517.0], [618.0, 3174.6666666666665], [630.0, 4004.0], [629.0, 3906.0], [628.0, 3973.0], [627.0, 3624.0], [665.0, 3694.0], [670.0, 3084.0], [671.0, 3459.0], [656.0, 3483.0], [669.0, 3268.0], [668.0, 3108.0], [667.0, 3306.0], [655.0, 3105.5], [641.0, 3067.0], [640.0, 3985.0], [643.0, 3584.0], [642.0, 3553.0], [645.0, 3634.0], [644.0, 3436.0], [647.0, 2965.0], [646.0, 3454.0], [653.0, 3318.0], [651.0, 3005.0], [650.0, 3140.0], [648.0, 2994.0], [663.0, 3658.0], [661.0, 3532.0], [659.0, 3807.0], [658.0, 3278.5], [701.0, 3334.0], [703.0, 3526.0], [699.0, 3009.0], [698.0, 3471.5], [696.0, 3510.5], [679.0, 3421.0], [678.0, 3493.0], [677.0, 3409.0], [676.0, 3649.0], [675.0, 3863.5], [672.0, 3601.0], [694.0, 3482.6666666666665], [691.0, 3662.0], [689.0, 3112.0], [686.0, 3166.0], [685.0, 2965.0], [684.0, 3380.0], [683.0, 3576.0], [681.0, 3303.0], [680.0, 3716.0], [729.0, 3820.0], [723.0, 3852.0], [733.0, 3605.0], [735.0, 3707.0], [722.0, 3150.0], [721.0, 3519.0], [732.0, 3396.0], [728.0, 2796.0], [710.0, 3689.5], [708.0, 3528.0], [707.0, 3618.0], [706.0, 3215.0], [705.0, 3402.0], [704.0, 3185.0], [719.0, 3601.0], [718.0, 2979.5], [716.0, 3253.0], [715.0, 3814.0], [713.0, 3327.0], [727.0, 2950.0], [726.0, 3399.5], [724.0, 3851.0], [764.0, 3732.0], [767.0, 3474.0], [753.0, 3578.0], [755.0, 2836.0], [754.0, 2804.0], [766.0, 3742.0], [765.0, 3740.0], [763.0, 3351.0], [762.0, 2741.0], [761.0, 3807.0], [760.0, 3418.5], [751.0, 3709.0], [738.0, 3144.0], [737.0, 3035.5], [743.0, 3826.0], [741.0, 3491.3333333333335], [749.0, 3454.0], [746.0, 3022.5], [744.0, 3285.0], [758.0, 2812.0], [757.0, 3206.5], [796.0, 2950.0], [799.0, 3073.0], [785.0, 3487.0], [784.0, 2814.0], [787.0, 3681.0], [786.0, 3734.0], [789.0, 3678.0], [788.0, 2678.0], [798.0, 2808.0], [797.0, 3677.0], [795.0, 3335.0], [794.0, 3542.0], [793.0, 2891.0], [792.0, 3437.0], [783.0, 2962.0], [769.0, 3062.0], [773.0, 3274.5], [771.0, 3626.0], [775.0, 3299.0], [774.0, 3756.0], [782.0, 3119.3333333333335], [781.0, 2908.0], [778.0, 3455.0], [776.0, 3151.0], [791.0, 2846.0], [790.0, 3137.0], [828.0, 2524.0], [831.0, 2840.0], [816.0, 3607.0], [819.0, 3111.0], [817.0, 3559.0], [821.0, 3576.0], [820.0, 3269.0], [830.0, 3502.0], [829.0, 2509.0], [827.0, 2851.0], [826.0, 3321.0], [825.0, 3542.0], [824.0, 3236.0], [815.0, 3208.3333333333335], [800.0, 3263.0], [802.0, 3650.0], [801.0, 3658.0], [807.0, 2745.6666666666665], [804.0, 3393.0], [812.0, 2994.0], [811.0, 3306.0], [810.0, 2801.0], [809.0, 3624.0], [808.0, 2929.0], [823.0, 3514.0], [822.0, 3427.0], [857.0, 2722.0], [862.0, 3112.0], [863.0, 2491.0], [848.0, 3049.0], [850.0, 3128.0], [849.0, 2554.0], [852.0, 3069.0], [851.0, 3111.0], [861.0, 2619.0], [860.0, 2997.5], [858.0, 3439.0], [856.0, 3035.0], [839.0, 3264.0], [838.0, 2829.0], [837.0, 3299.0], [836.0, 2569.0], [835.0, 3059.0], [834.0, 3268.5], [832.0, 3057.0], [847.0, 2573.0], [846.0, 2875.0], [845.0, 3184.0], [844.0, 3474.0], [843.0, 2606.0], [842.0, 2903.0], [841.0, 3430.0], [840.0, 3033.0], [855.0, 3395.0], [854.0, 3074.0], [892.0, 3204.0], [895.0, 3042.0], [880.0, 3116.0], [883.0, 3336.0], [882.0, 3054.0], [885.0, 3110.0], [884.0, 3126.0], [894.0, 3275.0], [893.0, 3291.0], [891.0, 3309.0], [890.0, 2796.0], [889.0, 3308.0], [888.0, 3311.0], [879.0, 3390.0], [865.0, 2549.0], [864.0, 3428.0], [867.0, 2433.0], [866.0, 2398.0], [869.0, 3137.0], [868.0, 3036.0], [871.0, 3073.0], [870.0, 3367.0], [878.0, 3135.0], [877.0, 2779.0], [876.0, 3354.0], [875.0, 3299.5], [873.0, 2370.0], [872.0, 2970.0], [887.0, 2563.0], [886.0, 3326.0], [924.0, 2876.0], [927.0, 2492.0], [913.0, 2761.0], [912.0, 3199.0], [915.0, 2621.0], [914.0, 2153.0], [917.0, 2581.0], [916.0, 2915.0], [926.0, 2213.0], [925.0, 2231.0], [923.0, 2888.0], [922.0, 2880.0], [921.0, 2893.0], [920.0, 2381.0], [911.0, 2953.0], [899.0, 3153.0], [898.0, 2987.3333333333335], [901.0, 3125.0], [900.0, 2955.0], [903.0, 3214.0], [902.0, 3158.0], [910.0, 3225.0], [909.0, 2766.0], [908.0, 3231.0], [907.0, 2190.0], [906.0, 3223.0], [905.0, 3227.0], [904.0, 2744.0], [919.0, 2654.0], [918.0, 3161.0], [952.0, 2597.0], [956.0, 2193.0], [959.0, 1473.0], [947.0, 2475.5], [945.0, 2701.0], [949.0, 2671.0], [948.0, 2248.0], [958.0, 2175.0], [957.0, 2096.0], [955.0, 2612.0], [954.0, 2061.0], [953.0, 2785.0], [940.0, 2864.5], [929.0, 2021.0], [928.0, 2916.0], [931.0, 2681.0], [930.0, 2205.0], [933.0, 2874.0], [932.0, 2978.0], [935.0, 2908.0], [934.0, 2971.0], [938.0, 2869.0], [936.0, 2914.0], [951.0, 2137.0], [950.0, 2530.0], [960.0, 1064.0], [1.0, 7483.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[476.6170000000003, 3478.0650000000005]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 960.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3287.05, "minX": 1.6689621E12, "maxY": 3659411.6333333333, "series": [{"data": [[1.6689621E12, 3659411.6333333333], [1.66896216E12, 1963250.4]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6689621E12, 4129.616666666667], [1.66896216E12, 3287.05]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896216E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1034.7239999999997, "minX": 1.6689621E12, "maxY": 5901.387755102041, "series": [{"data": [[1.6689621E12, 3806.2544689800184], [1.66896216E12, 5901.387755102041]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66896216E12, 1034.7239999999997]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6689621E12, 3478.0650000000005]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896216E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 695.460999999999, "minX": 1.6689621E12, "maxY": 1290.3877551020407, "series": [{"data": [[1.6689621E12, 708.1240799158785], [1.66896216E12, 1290.3877551020407]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66896216E12, 1013.9429999999996]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6689621E12, 695.460999999999]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896216E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 6.575000000000001, "minX": 1.6689621E12, "maxY": 223.9200000000002, "series": [{"data": [[1.6689621E12, 36.829652996845454], [1.66896216E12, 30.918367346938776]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66896216E12, 6.575000000000001]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6689621E12, 223.9200000000002]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896216E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 6.0, "minX": 1.6689621E12, "maxY": 9529.0, "series": [{"data": [[1.6689621E12, 7483.0], [1.66896216E12, 9529.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6689621E12, 4445.799999999999], [1.66896216E12, 1915.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6689621E12, 5080.280000000001], [1.66896216E12, 6479.5]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6689621E12, 4585.999999999999], [1.66896216E12, 2027.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6689621E12, 43.0], [1.66896216E12, 6.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6689621E12, 3817.0], [1.66896216E12, 1090.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896216E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 63.0, "minX": 2.0, "maxY": 6461.0, "series": [{"data": [[2.0, 1268.5], [8.0, 5954.0], [9.0, 2563.5], [40.0, 340.5], [667.0, 3649.0], [654.0, 4195.0], [43.0, 215.0], [48.0, 63.0], [219.0, 3676.0], [233.0, 1797.0], [250.0, 3135.5], [4.0, 1846.5], [21.0, 6461.0], [344.0, 509.5], [23.0, 2629.5], [376.0, 1169.5], [27.0, 5426.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 667.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 37.0, "minX": 2.0, "maxY": 1791.0, "series": [{"data": [[2.0, 359.0], [8.0, 371.0], [9.0, 280.5], [40.0, 305.5], [667.0, 589.0], [654.0, 696.5], [43.0, 77.0], [48.0, 37.0], [219.0, 221.0], [233.0, 1791.0], [250.0, 431.5], [4.0, 125.0], [21.0, 457.0], [344.0, 482.5], [23.0, 131.0], [376.0, 1153.0], [27.0, 383.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 667.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.6689621E12, "maxY": 33.333333333333336, "series": [{"data": [[1.6689621E12, 33.333333333333336], [1.66896216E12, 16.666666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896216E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 17.483333333333334, "minX": 1.6689621E12, "maxY": 32.516666666666666, "series": [{"data": [[1.6689621E12, 32.516666666666666], [1.66896216E12, 17.483333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896216E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.8166666666666667, "minX": 1.6689621E12, "maxY": 16.666666666666668, "series": [{"data": [[1.6689621E12, 16.666666666666668]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66896216E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.6689621E12, 15.85], [1.66896216E12, 0.8166666666666667]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896216E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 17.483333333333334, "minX": 1.6689621E12, "maxY": 32.516666666666666, "series": [{"data": [[1.6689621E12, 32.516666666666666], [1.66896216E12, 17.483333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896216E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

