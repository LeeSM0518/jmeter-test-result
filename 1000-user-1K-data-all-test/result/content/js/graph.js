/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 7.0, "minX": 0.0, "maxY": 9523.0, "series": [{"data": [[0.0, 29.0], [0.1, 31.0], [0.2, 69.0], [0.3, 69.0], [0.4, 76.0], [0.5, 83.0], [0.6, 85.0], [0.7, 86.0], [0.8, 88.0], [0.9, 94.0], [1.0, 96.0], [1.1, 108.0], [1.2, 109.0], [1.3, 112.0], [1.4, 112.0], [1.5, 113.0], [1.6, 117.0], [1.7, 119.0], [1.8, 119.0], [1.9, 121.0], [2.0, 123.0], [2.1, 123.0], [2.2, 124.0], [2.3, 124.0], [2.4, 128.0], [2.5, 129.0], [2.6, 131.0], [2.7, 132.0], [2.8, 133.0], [2.9, 134.0], [3.0, 135.0], [3.1, 138.0], [3.2, 144.0], [3.3, 145.0], [3.4, 163.0], [3.5, 170.0], [3.6, 170.0], [3.7, 182.0], [3.8, 183.0], [3.9, 207.0], [4.0, 217.0], [4.1, 227.0], [4.2, 247.0], [4.3, 256.0], [4.4, 339.0], [4.5, 356.0], [4.6, 356.0], [4.7, 360.0], [4.8, 499.0], [4.9, 501.0], [5.0, 532.0], [5.1, 538.0], [5.2, 608.0], [5.3, 688.0], [5.4, 995.0], [5.5, 1029.0], [5.6, 1046.0], [5.7, 1065.0], [5.8, 1068.0], [5.9, 1146.0], [6.0, 1308.0], [6.1, 1489.0], [6.2, 1726.0], [6.3, 1835.0], [6.4, 1928.0], [6.5, 2035.0], [6.6, 2096.0], [6.7, 2163.0], [6.8, 2207.0], [6.9, 2283.0], [7.0, 2283.0], [7.1, 2366.0], [7.2, 2370.0], [7.3, 2385.0], [7.4, 2462.0], [7.5, 2539.0], [7.6, 3056.0], [7.7, 3127.0], [7.8, 3197.0], [7.9, 3327.0], [8.0, 3353.0], [8.1, 3381.0], [8.2, 3382.0], [8.3, 3396.0], [8.4, 3401.0], [8.5, 3431.0], [8.6, 3449.0], [8.7, 3456.0], [8.8, 3468.0], [8.9, 3478.0], [9.0, 3496.0], [9.1, 3496.0], [9.2, 3512.0], [9.3, 3516.0], [9.4, 3532.0], [9.5, 3533.0], [9.6, 3564.0], [9.7, 3577.0], [9.8, 3599.0], [9.9, 3599.0], [10.0, 3613.0], [10.1, 3634.0], [10.2, 3668.0], [10.3, 3672.0], [10.4, 3679.0], [10.5, 3681.0], [10.6, 3694.0], [10.7, 3703.0], [10.8, 3711.0], [10.9, 3728.0], [11.0, 3730.0], [11.1, 3745.0], [11.2, 3754.0], [11.3, 3761.0], [11.4, 3762.0], [11.5, 3766.0], [11.6, 3775.0], [11.7, 3780.0], [11.8, 3790.0], [11.9, 3791.0], [12.0, 3801.0], [12.1, 3804.0], [12.2, 3805.0], [12.3, 3810.0], [12.4, 3814.0], [12.5, 3815.0], [12.6, 3818.0], [12.7, 3820.0], [12.8, 3824.0], [12.9, 3826.0], [13.0, 3833.0], [13.1, 3835.0], [13.2, 3839.0], [13.3, 3841.0], [13.4, 3847.0], [13.5, 3851.0], [13.6, 3852.0], [13.7, 3856.0], [13.8, 3860.0], [13.9, 3874.0], [14.0, 3881.0], [14.1, 3886.0], [14.2, 3889.0], [14.3, 3897.0], [14.4, 3900.0], [14.5, 3909.0], [14.6, 3912.0], [14.7, 3913.0], [14.8, 3914.0], [14.9, 3921.0], [15.0, 3921.0], [15.1, 3925.0], [15.2, 3926.0], [15.3, 3927.0], [15.4, 3930.0], [15.5, 3932.0], [15.6, 3945.0], [15.7, 3949.0], [15.8, 3950.0], [15.9, 3951.0], [16.0, 3958.0], [16.1, 3960.0], [16.2, 3962.0], [16.3, 3967.0], [16.4, 3967.0], [16.5, 3968.0], [16.6, 3970.0], [16.7, 3972.0], [16.8, 3978.0], [16.9, 3981.0], [17.0, 3984.0], [17.1, 3988.0], [17.2, 3989.0], [17.3, 3990.0], [17.4, 3991.0], [17.5, 3994.0], [17.6, 3996.0], [17.7, 3997.0], [17.8, 3997.0], [17.9, 3998.0], [18.0, 4003.0], [18.1, 4008.0], [18.2, 4010.0], [18.3, 4011.0], [18.4, 4017.0], [18.5, 4017.0], [18.6, 4022.0], [18.7, 4022.0], [18.8, 4024.0], [18.9, 4025.0], [19.0, 4026.0], [19.1, 4030.0], [19.2, 4031.0], [19.3, 4031.0], [19.4, 4032.0], [19.5, 4035.0], [19.6, 4039.0], [19.7, 4041.0], [19.8, 4044.0], [19.9, 4046.0], [20.0, 4048.0], [20.1, 4050.0], [20.2, 4050.0], [20.3, 4052.0], [20.4, 4061.0], [20.5, 4062.0], [20.6, 4062.0], [20.7, 4063.0], [20.8, 4063.0], [20.9, 4066.0], [21.0, 4066.0], [21.1, 4068.0], [21.2, 4069.0], [21.3, 4071.0], [21.4, 4076.0], [21.5, 4077.0], [21.6, 4082.0], [21.7, 4083.0], [21.8, 4092.0], [21.9, 4092.0], [22.0, 4097.0], [22.1, 4102.0], [22.2, 4102.0], [22.3, 4105.0], [22.4, 4111.0], [22.5, 4114.0], [22.6, 4119.0], [22.7, 4119.0], [22.8, 4120.0], [22.9, 4126.0], [23.0, 4128.0], [23.1, 4129.0], [23.2, 4129.0], [23.3, 4130.0], [23.4, 4131.0], [23.5, 4135.0], [23.6, 4135.0], [23.7, 4135.0], [23.8, 4136.0], [23.9, 4138.0], [24.0, 4141.0], [24.1, 4142.0], [24.2, 4145.0], [24.3, 4145.0], [24.4, 4146.0], [24.5, 4146.0], [24.6, 4147.0], [24.7, 4148.0], [24.8, 4149.0], [24.9, 4151.0], [25.0, 4151.0], [25.1, 4152.0], [25.2, 4156.0], [25.3, 4160.0], [25.4, 4163.0], [25.5, 4165.0], [25.6, 4171.0], [25.7, 4172.0], [25.8, 4172.0], [25.9, 4176.0], [26.0, 4177.0], [26.1, 4179.0], [26.2, 4179.0], [26.3, 4179.0], [26.4, 4180.0], [26.5, 4180.0], [26.6, 4181.0], [26.7, 4184.0], [26.8, 4185.0], [26.9, 4189.0], [27.0, 4195.0], [27.1, 4196.0], [27.2, 4197.0], [27.3, 4197.0], [27.4, 4198.0], [27.5, 4198.0], [27.6, 4199.0], [27.7, 4204.0], [27.8, 4207.0], [27.9, 4207.0], [28.0, 4208.0], [28.1, 4209.0], [28.2, 4210.0], [28.3, 4213.0], [28.4, 4214.0], [28.5, 4217.0], [28.6, 4224.0], [28.7, 4224.0], [28.8, 4229.0], [28.9, 4231.0], [29.0, 4232.0], [29.1, 4233.0], [29.2, 4234.0], [29.3, 4235.0], [29.4, 4236.0], [29.5, 4236.0], [29.6, 4237.0], [29.7, 4238.0], [29.8, 4239.0], [29.9, 4241.0], [30.0, 4241.0], [30.1, 4242.0], [30.2, 4243.0], [30.3, 4243.0], [30.4, 4245.0], [30.5, 4249.0], [30.6, 4250.0], [30.7, 4251.0], [30.8, 4251.0], [30.9, 4255.0], [31.0, 4256.0], [31.1, 4256.0], [31.2, 4256.0], [31.3, 4258.0], [31.4, 4259.0], [31.5, 4260.0], [31.6, 4261.0], [31.7, 4261.0], [31.8, 4264.0], [31.9, 4266.0], [32.0, 4268.0], [32.1, 4270.0], [32.2, 4272.0], [32.3, 4282.0], [32.4, 4282.0], [32.5, 4283.0], [32.6, 4284.0], [32.7, 4284.0], [32.8, 4285.0], [32.9, 4286.0], [33.0, 4286.0], [33.1, 4287.0], [33.2, 4288.0], [33.3, 4288.0], [33.4, 4288.0], [33.5, 4291.0], [33.6, 4294.0], [33.7, 4294.0], [33.8, 4295.0], [33.9, 4298.0], [34.0, 4298.0], [34.1, 4298.0], [34.2, 4300.0], [34.3, 4300.0], [34.4, 4302.0], [34.5, 4302.0], [34.6, 4303.0], [34.7, 4303.0], [34.8, 4303.0], [34.9, 4308.0], [35.0, 4309.0], [35.1, 4311.0], [35.2, 4313.0], [35.3, 4313.0], [35.4, 4314.0], [35.5, 4315.0], [35.6, 4316.0], [35.7, 4317.0], [35.8, 4318.0], [35.9, 4319.0], [36.0, 4322.0], [36.1, 4322.0], [36.2, 4322.0], [36.3, 4322.0], [36.4, 4325.0], [36.5, 4327.0], [36.6, 4330.0], [36.7, 4331.0], [36.8, 4331.0], [36.9, 4332.0], [37.0, 4332.0], [37.1, 4333.0], [37.2, 4333.0], [37.3, 4333.0], [37.4, 4336.0], [37.5, 4336.0], [37.6, 4338.0], [37.7, 4339.0], [37.8, 4339.0], [37.9, 4339.0], [38.0, 4340.0], [38.1, 4341.0], [38.2, 4343.0], [38.3, 4345.0], [38.4, 4345.0], [38.5, 4348.0], [38.6, 4349.0], [38.7, 4349.0], [38.8, 4349.0], [38.9, 4350.0], [39.0, 4355.0], [39.1, 4355.0], [39.2, 4357.0], [39.3, 4357.0], [39.4, 4359.0], [39.5, 4359.0], [39.6, 4361.0], [39.7, 4362.0], [39.8, 4362.0], [39.9, 4364.0], [40.0, 4366.0], [40.1, 4368.0], [40.2, 4368.0], [40.3, 4368.0], [40.4, 4369.0], [40.5, 4372.0], [40.6, 4372.0], [40.7, 4373.0], [40.8, 4374.0], [40.9, 4375.0], [41.0, 4378.0], [41.1, 4382.0], [41.2, 4383.0], [41.3, 4386.0], [41.4, 4388.0], [41.5, 4389.0], [41.6, 4390.0], [41.7, 4390.0], [41.8, 4391.0], [41.9, 4391.0], [42.0, 4391.0], [42.1, 4391.0], [42.2, 4392.0], [42.3, 4392.0], [42.4, 4393.0], [42.5, 4394.0], [42.6, 4396.0], [42.7, 4398.0], [42.8, 4399.0], [42.9, 4401.0], [43.0, 4401.0], [43.1, 4402.0], [43.2, 4403.0], [43.3, 4403.0], [43.4, 4405.0], [43.5, 4405.0], [43.6, 4407.0], [43.7, 4407.0], [43.8, 4408.0], [43.9, 4409.0], [44.0, 4411.0], [44.1, 4412.0], [44.2, 4413.0], [44.3, 4415.0], [44.4, 4417.0], [44.5, 4417.0], [44.6, 4419.0], [44.7, 4419.0], [44.8, 4423.0], [44.9, 4423.0], [45.0, 4423.0], [45.1, 4424.0], [45.2, 4425.0], [45.3, 4425.0], [45.4, 4426.0], [45.5, 4426.0], [45.6, 4426.0], [45.7, 4427.0], [45.8, 4429.0], [45.9, 4431.0], [46.0, 4435.0], [46.1, 4435.0], [46.2, 4436.0], [46.3, 4438.0], [46.4, 4439.0], [46.5, 4441.0], [46.6, 4442.0], [46.7, 4443.0], [46.8, 4444.0], [46.9, 4444.0], [47.0, 4446.0], [47.1, 4447.0], [47.2, 4448.0], [47.3, 4449.0], [47.4, 4449.0], [47.5, 4449.0], [47.6, 4450.0], [47.7, 4450.0], [47.8, 4450.0], [47.9, 4453.0], [48.0, 4453.0], [48.1, 4455.0], [48.2, 4455.0], [48.3, 4457.0], [48.4, 4459.0], [48.5, 4461.0], [48.6, 4461.0], [48.7, 4463.0], [48.8, 4464.0], [48.9, 4466.0], [49.0, 4468.0], [49.1, 4468.0], [49.2, 4474.0], [49.3, 4475.0], [49.4, 4476.0], [49.5, 4478.0], [49.6, 4479.0], [49.7, 4481.0], [49.8, 4481.0], [49.9, 4482.0], [50.0, 4483.0], [50.1, 4484.0], [50.2, 4485.0], [50.3, 4485.0], [50.4, 4488.0], [50.5, 4490.0], [50.6, 4491.0], [50.7, 4491.0], [50.8, 4492.0], [50.9, 4492.0], [51.0, 4497.0], [51.1, 4497.0], [51.2, 4497.0], [51.3, 4499.0], [51.4, 4499.0], [51.5, 4499.0], [51.6, 4500.0], [51.7, 4502.0], [51.8, 4504.0], [51.9, 4504.0], [52.0, 4505.0], [52.1, 4506.0], [52.2, 4508.0], [52.3, 4508.0], [52.4, 4508.0], [52.5, 4508.0], [52.6, 4510.0], [52.7, 4514.0], [52.8, 4516.0], [52.9, 4522.0], [53.0, 4522.0], [53.1, 4523.0], [53.2, 4525.0], [53.3, 4525.0], [53.4, 4526.0], [53.5, 4526.0], [53.6, 4528.0], [53.7, 4531.0], [53.8, 4534.0], [53.9, 4535.0], [54.0, 4538.0], [54.1, 4538.0], [54.2, 4538.0], [54.3, 4543.0], [54.4, 4543.0], [54.5, 4544.0], [54.6, 4547.0], [54.7, 4547.0], [54.8, 4548.0], [54.9, 4548.0], [55.0, 4549.0], [55.1, 4549.0], [55.2, 4549.0], [55.3, 4549.0], [55.4, 4550.0], [55.5, 4554.0], [55.6, 4555.0], [55.7, 4556.0], [55.8, 4558.0], [55.9, 4558.0], [56.0, 4562.0], [56.1, 4563.0], [56.2, 4563.0], [56.3, 4563.0], [56.4, 4563.0], [56.5, 4563.0], [56.6, 4567.0], [56.7, 4567.0], [56.8, 4568.0], [56.9, 4569.0], [57.0, 4570.0], [57.1, 4571.0], [57.2, 4572.0], [57.3, 4572.0], [57.4, 4572.0], [57.5, 4573.0], [57.6, 4578.0], [57.7, 4579.0], [57.8, 4582.0], [57.9, 4583.0], [58.0, 4583.0], [58.1, 4586.0], [58.2, 4587.0], [58.3, 4587.0], [58.4, 4588.0], [58.5, 4588.0], [58.6, 4590.0], [58.7, 4594.0], [58.8, 4597.0], [58.9, 4597.0], [59.0, 4598.0], [59.1, 4599.0], [59.2, 4602.0], [59.3, 4603.0], [59.4, 4605.0], [59.5, 4606.0], [59.6, 4606.0], [59.7, 4607.0], [59.8, 4609.0], [59.9, 4609.0], [60.0, 4610.0], [60.1, 4612.0], [60.2, 4614.0], [60.3, 4615.0], [60.4, 4617.0], [60.5, 4619.0], [60.6, 4619.0], [60.7, 4620.0], [60.8, 4620.0], [60.9, 4621.0], [61.0, 4621.0], [61.1, 4623.0], [61.2, 4624.0], [61.3, 4624.0], [61.4, 4626.0], [61.5, 4626.0], [61.6, 4626.0], [61.7, 4627.0], [61.8, 4630.0], [61.9, 4632.0], [62.0, 4635.0], [62.1, 4635.0], [62.2, 4636.0], [62.3, 4637.0], [62.4, 4637.0], [62.5, 4639.0], [62.6, 4639.0], [62.7, 4639.0], [62.8, 4640.0], [62.9, 4641.0], [63.0, 4642.0], [63.1, 4643.0], [63.2, 4644.0], [63.3, 4645.0], [63.4, 4647.0], [63.5, 4647.0], [63.6, 4647.0], [63.7, 4648.0], [63.8, 4649.0], [63.9, 4650.0], [64.0, 4651.0], [64.1, 4651.0], [64.2, 4652.0], [64.3, 4652.0], [64.4, 4654.0], [64.5, 4657.0], [64.6, 4657.0], [64.7, 4658.0], [64.8, 4658.0], [64.9, 4658.0], [65.0, 4658.0], [65.1, 4659.0], [65.2, 4659.0], [65.3, 4660.0], [65.4, 4661.0], [65.5, 4666.0], [65.6, 4666.0], [65.7, 4668.0], [65.8, 4668.0], [65.9, 4669.0], [66.0, 4673.0], [66.1, 4674.0], [66.2, 4675.0], [66.3, 4678.0], [66.4, 4682.0], [66.5, 4682.0], [66.6, 4683.0], [66.7, 4684.0], [66.8, 4685.0], [66.9, 4687.0], [67.0, 4688.0], [67.1, 4689.0], [67.2, 4690.0], [67.3, 4690.0], [67.4, 4691.0], [67.5, 4691.0], [67.6, 4692.0], [67.7, 4692.0], [67.8, 4694.0], [67.9, 4695.0], [68.0, 4695.0], [68.1, 4696.0], [68.2, 4696.0], [68.3, 4697.0], [68.4, 4697.0], [68.5, 4698.0], [68.6, 4698.0], [68.7, 4699.0], [68.8, 4700.0], [68.9, 4700.0], [69.0, 4701.0], [69.1, 4702.0], [69.2, 4702.0], [69.3, 4704.0], [69.4, 4704.0], [69.5, 4705.0], [69.6, 4706.0], [69.7, 4706.0], [69.8, 4707.0], [69.9, 4708.0], [70.0, 4709.0], [70.1, 4710.0], [70.2, 4711.0], [70.3, 4712.0], [70.4, 4713.0], [70.5, 4713.0], [70.6, 4714.0], [70.7, 4714.0], [70.8, 4716.0], [70.9, 4723.0], [71.0, 4727.0], [71.1, 4727.0], [71.2, 4730.0], [71.3, 4731.0], [71.4, 4733.0], [71.5, 4733.0], [71.6, 4734.0], [71.7, 4735.0], [71.8, 4735.0], [71.9, 4736.0], [72.0, 4736.0], [72.1, 4738.0], [72.2, 4739.0], [72.3, 4740.0], [72.4, 4742.0], [72.5, 4743.0], [72.6, 4744.0], [72.7, 4744.0], [72.8, 4745.0], [72.9, 4746.0], [73.0, 4747.0], [73.1, 4749.0], [73.2, 4751.0], [73.3, 4751.0], [73.4, 4752.0], [73.5, 4752.0], [73.6, 4753.0], [73.7, 4753.0], [73.8, 4755.0], [73.9, 4756.0], [74.0, 4758.0], [74.1, 4758.0], [74.2, 4759.0], [74.3, 4761.0], [74.4, 4762.0], [74.5, 4762.0], [74.6, 4763.0], [74.7, 4765.0], [74.8, 4765.0], [74.9, 4765.0], [75.0, 4767.0], [75.1, 4768.0], [75.2, 4769.0], [75.3, 4771.0], [75.4, 4771.0], [75.5, 4774.0], [75.6, 4776.0], [75.7, 4778.0], [75.8, 4778.0], [75.9, 4783.0], [76.0, 4784.0], [76.1, 4785.0], [76.2, 4791.0], [76.3, 4793.0], [76.4, 4796.0], [76.5, 4797.0], [76.6, 4799.0], [76.7, 4799.0], [76.8, 4799.0], [76.9, 4800.0], [77.0, 4801.0], [77.1, 4802.0], [77.2, 4808.0], [77.3, 4813.0], [77.4, 4813.0], [77.5, 4814.0], [77.6, 4815.0], [77.7, 4817.0], [77.8, 4821.0], [77.9, 4822.0], [78.0, 4824.0], [78.1, 4828.0], [78.2, 4829.0], [78.3, 4832.0], [78.4, 4833.0], [78.5, 4833.0], [78.6, 4834.0], [78.7, 4836.0], [78.8, 4838.0], [78.9, 4839.0], [79.0, 4840.0], [79.1, 4840.0], [79.2, 4843.0], [79.3, 4843.0], [79.4, 4843.0], [79.5, 4850.0], [79.6, 4856.0], [79.7, 4856.0], [79.8, 4856.0], [79.9, 4856.0], [80.0, 4859.0], [80.1, 4859.0], [80.2, 4860.0], [80.3, 4861.0], [80.4, 4862.0], [80.5, 4862.0], [80.6, 4864.0], [80.7, 4865.0], [80.8, 4867.0], [80.9, 4868.0], [81.0, 4873.0], [81.1, 4878.0], [81.2, 4878.0], [81.3, 4880.0], [81.4, 4881.0], [81.5, 4882.0], [81.6, 4886.0], [81.7, 4888.0], [81.8, 4888.0], [81.9, 4895.0], [82.0, 4897.0], [82.1, 4898.0], [82.2, 4904.0], [82.3, 4907.0], [82.4, 4908.0], [82.5, 4908.0], [82.6, 4912.0], [82.7, 4913.0], [82.8, 4914.0], [82.9, 4916.0], [83.0, 4917.0], [83.1, 4918.0], [83.2, 4919.0], [83.3, 4922.0], [83.4, 4922.0], [83.5, 4923.0], [83.6, 4927.0], [83.7, 4928.0], [83.8, 4928.0], [83.9, 4931.0], [84.0, 4932.0], [84.1, 4934.0], [84.2, 4936.0], [84.3, 4936.0], [84.4, 4936.0], [84.5, 4938.0], [84.6, 4940.0], [84.7, 4941.0], [84.8, 4943.0], [84.9, 4943.0], [85.0, 4945.0], [85.1, 4947.0], [85.2, 4947.0], [85.3, 4949.0], [85.4, 4951.0], [85.5, 4952.0], [85.6, 4952.0], [85.7, 4953.0], [85.8, 4953.0], [85.9, 4957.0], [86.0, 4958.0], [86.1, 4964.0], [86.2, 4969.0], [86.3, 4975.0], [86.4, 4979.0], [86.5, 4980.0], [86.6, 4980.0], [86.7, 4980.0], [86.8, 4981.0], [86.9, 4983.0], [87.0, 4985.0], [87.1, 4987.0], [87.2, 4987.0], [87.3, 4989.0], [87.4, 4991.0], [87.5, 4995.0], [87.6, 4997.0], [87.7, 5001.0], [87.8, 5004.0], [87.9, 5004.0], [88.0, 5005.0], [88.1, 5008.0], [88.2, 5011.0], [88.3, 5011.0], [88.4, 5015.0], [88.5, 5018.0], [88.6, 5021.0], [88.7, 5022.0], [88.8, 5024.0], [88.9, 5024.0], [89.0, 5025.0], [89.1, 5032.0], [89.2, 5032.0], [89.3, 5033.0], [89.4, 5033.0], [89.5, 5034.0], [89.6, 5036.0], [89.7, 5037.0], [89.8, 5049.0], [89.9, 5050.0], [90.0, 5052.0], [90.1, 5060.0], [90.2, 5066.0], [90.3, 5067.0], [90.4, 5067.0], [90.5, 5086.0], [90.6, 5087.0], [90.7, 5090.0], [90.8, 5097.0], [90.9, 5099.0], [91.0, 5103.0], [91.1, 5108.0], [91.2, 5115.0], [91.3, 5116.0], [91.4, 5119.0], [91.5, 5125.0], [91.6, 5127.0], [91.7, 5128.0], [91.8, 5132.0], [91.9, 5135.0], [92.0, 5139.0], [92.1, 5139.0], [92.2, 5143.0], [92.3, 5144.0], [92.4, 5147.0], [92.5, 5166.0], [92.6, 5167.0], [92.7, 5189.0], [92.8, 5190.0], [92.9, 5192.0], [93.0, 5197.0], [93.1, 5205.0], [93.2, 5227.0], [93.3, 5228.0], [93.4, 5242.0], [93.5, 5244.0], [93.6, 5296.0], [93.7, 5302.0], [93.8, 5317.0], [93.9, 5320.0], [94.0, 5358.0], [94.1, 5386.0], [94.2, 5391.0], [94.3, 5406.0], [94.4, 5408.0], [94.5, 5413.0], [94.6, 5426.0], [94.7, 5429.0], [94.8, 5429.0], [94.9, 5437.0], [95.0, 5445.0], [95.1, 5546.0], [95.2, 5559.0], [95.3, 5620.0], [95.4, 5632.0], [95.5, 5632.0], [95.6, 5649.0], [95.7, 5657.0], [95.8, 5722.0], [95.9, 5747.0], [96.0, 5748.0], [96.1, 5756.0], [96.2, 5827.0], [96.3, 5874.0], [96.4, 5904.0], [96.5, 5909.0], [96.6, 5939.0], [96.7, 5998.0], [96.8, 6070.0], [96.9, 6078.0], [97.0, 6098.0], [97.1, 6102.0], [97.2, 6180.0], [97.3, 6244.0], [97.4, 6266.0], [97.5, 6308.0], [97.6, 6312.0], [97.7, 6355.0], [97.8, 6431.0], [97.9, 6432.0], [98.0, 6461.0], [98.1, 6475.0], [98.2, 6489.0], [98.3, 6515.0], [98.4, 6660.0], [98.5, 6707.0], [98.6, 6707.0], [98.7, 6738.0], [98.8, 6928.0], [98.9, 6981.0], [99.0, 7249.0], [99.1, 7493.0], [99.2, 7840.0], [99.3, 7915.0], [99.4, 8096.0], [99.5, 8096.0], [99.6, 8400.0], [99.7, 8460.0], [99.8, 9493.0], [99.9, 9523.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 7.0], [0.1, 8.0], [0.2, 10.0], [0.3, 10.0], [0.4, 12.0], [0.5, 13.0], [0.6, 14.0], [0.7, 18.0], [0.8, 20.0], [0.9, 23.0], [1.0, 26.0], [1.1, 30.0], [1.2, 37.0], [1.3, 39.0], [1.4, 39.0], [1.5, 42.0], [1.6, 52.0], [1.7, 56.0], [1.8, 64.0], [1.9, 79.0], [2.0, 80.0], [2.1, 81.0], [2.2, 82.0], [2.3, 84.0], [2.4, 86.0], [2.5, 88.0], [2.6, 88.0], [2.7, 89.0], [2.8, 103.0], [2.9, 107.0], [3.0, 107.0], [3.1, 109.0], [3.2, 109.0], [3.3, 109.0], [3.4, 111.0], [3.5, 111.0], [3.6, 112.0], [3.7, 113.0], [3.8, 113.0], [3.9, 113.0], [4.0, 118.0], [4.1, 120.0], [4.2, 128.0], [4.3, 133.0], [4.4, 134.0], [4.5, 145.0], [4.6, 148.0], [4.7, 160.0], [4.8, 161.0], [4.9, 173.0], [5.0, 178.0], [5.1, 178.0], [5.2, 178.0], [5.3, 179.0], [5.4, 181.0], [5.5, 181.0], [5.6, 183.0], [5.7, 183.0], [5.8, 184.0], [5.9, 184.0], [6.0, 184.0], [6.1, 184.0], [6.2, 185.0], [6.3, 187.0], [6.4, 187.0], [6.5, 189.0], [6.6, 190.0], [6.7, 191.0], [6.8, 192.0], [6.9, 192.0], [7.0, 192.0], [7.1, 193.0], [7.2, 195.0], [7.3, 195.0], [7.4, 196.0], [7.5, 199.0], [7.6, 201.0], [7.7, 202.0], [7.8, 202.0], [7.9, 203.0], [8.0, 205.0], [8.1, 206.0], [8.2, 208.0], [8.3, 208.0], [8.4, 209.0], [8.5, 210.0], [8.6, 210.0], [8.7, 211.0], [8.8, 211.0], [8.9, 212.0], [9.0, 212.0], [9.1, 213.0], [9.2, 213.0], [9.3, 213.0], [9.4, 214.0], [9.5, 215.0], [9.6, 215.0], [9.7, 215.0], [9.8, 215.0], [9.9, 215.0], [10.0, 216.0], [10.1, 216.0], [10.2, 216.0], [10.3, 216.0], [10.4, 216.0], [10.5, 217.0], [10.6, 218.0], [10.7, 218.0], [10.8, 219.0], [10.9, 219.0], [11.0, 221.0], [11.1, 221.0], [11.2, 221.0], [11.3, 222.0], [11.4, 224.0], [11.5, 225.0], [11.6, 225.0], [11.7, 225.0], [11.8, 227.0], [11.9, 227.0], [12.0, 228.0], [12.1, 229.0], [12.2, 230.0], [12.3, 230.0], [12.4, 231.0], [12.5, 231.0], [12.6, 231.0], [12.7, 232.0], [12.8, 233.0], [12.9, 233.0], [13.0, 234.0], [13.1, 236.0], [13.2, 240.0], [13.3, 240.0], [13.4, 241.0], [13.5, 241.0], [13.6, 241.0], [13.7, 243.0], [13.8, 244.0], [13.9, 245.0], [14.0, 245.0], [14.1, 245.0], [14.2, 245.0], [14.3, 247.0], [14.4, 248.0], [14.5, 249.0], [14.6, 250.0], [14.7, 250.0], [14.8, 250.0], [14.9, 251.0], [15.0, 252.0], [15.1, 253.0], [15.2, 253.0], [15.3, 253.0], [15.4, 254.0], [15.5, 255.0], [15.6, 255.0], [15.7, 255.0], [15.8, 256.0], [15.9, 256.0], [16.0, 256.0], [16.1, 257.0], [16.2, 257.0], [16.3, 257.0], [16.4, 258.0], [16.5, 259.0], [16.6, 259.0], [16.7, 259.0], [16.8, 260.0], [16.9, 260.0], [17.0, 260.0], [17.1, 261.0], [17.2, 261.0], [17.3, 262.0], [17.4, 263.0], [17.5, 263.0], [17.6, 264.0], [17.7, 266.0], [17.8, 266.0], [17.9, 266.0], [18.0, 266.0], [18.1, 267.0], [18.2, 267.0], [18.3, 267.0], [18.4, 267.0], [18.5, 268.0], [18.6, 268.0], [18.7, 268.0], [18.8, 268.0], [18.9, 269.0], [19.0, 269.0], [19.1, 269.0], [19.2, 270.0], [19.3, 270.0], [19.4, 270.0], [19.5, 270.0], [19.6, 270.0], [19.7, 270.0], [19.8, 270.0], [19.9, 272.0], [20.0, 272.0], [20.1, 272.0], [20.2, 272.0], [20.3, 272.0], [20.4, 272.0], [20.5, 273.0], [20.6, 273.0], [20.7, 274.0], [20.8, 274.0], [20.9, 274.0], [21.0, 274.0], [21.1, 274.0], [21.2, 274.0], [21.3, 274.0], [21.4, 274.0], [21.5, 275.0], [21.6, 275.0], [21.7, 276.0], [21.8, 277.0], [21.9, 277.0], [22.0, 278.0], [22.1, 278.0], [22.2, 278.0], [22.3, 278.0], [22.4, 279.0], [22.5, 280.0], [22.6, 280.0], [22.7, 281.0], [22.8, 281.0], [22.9, 281.0], [23.0, 282.0], [23.1, 283.0], [23.2, 284.0], [23.3, 284.0], [23.4, 285.0], [23.5, 285.0], [23.6, 285.0], [23.7, 286.0], [23.8, 286.0], [23.9, 288.0], [24.0, 288.0], [24.1, 288.0], [24.2, 292.0], [24.3, 292.0], [24.4, 293.0], [24.5, 294.0], [24.6, 295.0], [24.7, 295.0], [24.8, 295.0], [24.9, 295.0], [25.0, 295.0], [25.1, 295.0], [25.2, 296.0], [25.3, 297.0], [25.4, 298.0], [25.5, 298.0], [25.6, 299.0], [25.7, 299.0], [25.8, 299.0], [25.9, 300.0], [26.0, 300.0], [26.1, 300.0], [26.2, 300.0], [26.3, 302.0], [26.4, 303.0], [26.5, 304.0], [26.6, 304.0], [26.7, 307.0], [26.8, 307.0], [26.9, 310.0], [27.0, 310.0], [27.1, 311.0], [27.2, 311.0], [27.3, 312.0], [27.4, 312.0], [27.5, 312.0], [27.6, 313.0], [27.7, 313.0], [27.8, 313.0], [27.9, 314.0], [28.0, 316.0], [28.1, 317.0], [28.2, 317.0], [28.3, 318.0], [28.4, 318.0], [28.5, 318.0], [28.6, 318.0], [28.7, 319.0], [28.8, 319.0], [28.9, 320.0], [29.0, 321.0], [29.1, 321.0], [29.2, 322.0], [29.3, 322.0], [29.4, 322.0], [29.5, 322.0], [29.6, 323.0], [29.7, 323.0], [29.8, 324.0], [29.9, 324.0], [30.0, 324.0], [30.1, 325.0], [30.2, 326.0], [30.3, 328.0], [30.4, 328.0], [30.5, 330.0], [30.6, 332.0], [30.7, 332.0], [30.8, 332.0], [30.9, 332.0], [31.0, 333.0], [31.1, 335.0], [31.2, 335.0], [31.3, 336.0], [31.4, 336.0], [31.5, 336.0], [31.6, 338.0], [31.7, 338.0], [31.8, 338.0], [31.9, 338.0], [32.0, 338.0], [32.1, 339.0], [32.2, 340.0], [32.3, 340.0], [32.4, 340.0], [32.5, 342.0], [32.6, 342.0], [32.7, 343.0], [32.8, 343.0], [32.9, 343.0], [33.0, 344.0], [33.1, 344.0], [33.2, 345.0], [33.3, 345.0], [33.4, 346.0], [33.5, 348.0], [33.6, 349.0], [33.7, 350.0], [33.8, 350.0], [33.9, 350.0], [34.0, 353.0], [34.1, 353.0], [34.2, 354.0], [34.3, 354.0], [34.4, 355.0], [34.5, 355.0], [34.6, 357.0], [34.7, 357.0], [34.8, 358.0], [34.9, 358.0], [35.0, 359.0], [35.1, 360.0], [35.2, 360.0], [35.3, 360.0], [35.4, 362.0], [35.5, 362.0], [35.6, 363.0], [35.7, 363.0], [35.8, 365.0], [35.9, 365.0], [36.0, 366.0], [36.1, 366.0], [36.2, 366.0], [36.3, 366.0], [36.4, 367.0], [36.5, 368.0], [36.6, 368.0], [36.7, 368.0], [36.8, 369.0], [36.9, 369.0], [37.0, 369.0], [37.1, 369.0], [37.2, 369.0], [37.3, 370.0], [37.4, 371.0], [37.5, 372.0], [37.6, 373.0], [37.7, 374.0], [37.8, 376.0], [37.9, 377.0], [38.0, 377.0], [38.1, 377.0], [38.2, 380.0], [38.3, 380.0], [38.4, 381.0], [38.5, 381.0], [38.6, 382.0], [38.7, 384.0], [38.8, 385.0], [38.9, 385.0], [39.0, 386.0], [39.1, 387.0], [39.2, 388.0], [39.3, 388.0], [39.4, 389.0], [39.5, 389.0], [39.6, 389.0], [39.7, 390.0], [39.8, 391.0], [39.9, 391.0], [40.0, 391.0], [40.1, 391.0], [40.2, 392.0], [40.3, 393.0], [40.4, 394.0], [40.5, 395.0], [40.6, 395.0], [40.7, 395.0], [40.8, 396.0], [40.9, 397.0], [41.0, 398.0], [41.1, 398.0], [41.2, 398.0], [41.3, 398.0], [41.4, 398.0], [41.5, 399.0], [41.6, 400.0], [41.7, 400.0], [41.8, 402.0], [41.9, 402.0], [42.0, 403.0], [42.1, 405.0], [42.2, 406.0], [42.3, 409.0], [42.4, 410.0], [42.5, 412.0], [42.6, 413.0], [42.7, 413.0], [42.8, 414.0], [42.9, 414.0], [43.0, 415.0], [43.1, 416.0], [43.2, 416.0], [43.3, 418.0], [43.4, 418.0], [43.5, 419.0], [43.6, 419.0], [43.7, 420.0], [43.8, 420.0], [43.9, 421.0], [44.0, 421.0], [44.1, 421.0], [44.2, 421.0], [44.3, 421.0], [44.4, 421.0], [44.5, 422.0], [44.6, 425.0], [44.7, 425.0], [44.8, 425.0], [44.9, 425.0], [45.0, 426.0], [45.1, 426.0], [45.2, 427.0], [45.3, 429.0], [45.4, 429.0], [45.5, 429.0], [45.6, 430.0], [45.7, 431.0], [45.8, 431.0], [45.9, 431.0], [46.0, 431.0], [46.1, 431.0], [46.2, 431.0], [46.3, 431.0], [46.4, 432.0], [46.5, 432.0], [46.6, 433.0], [46.7, 436.0], [46.8, 437.0], [46.9, 438.0], [47.0, 439.0], [47.1, 440.0], [47.2, 442.0], [47.3, 443.0], [47.4, 443.0], [47.5, 443.0], [47.6, 443.0], [47.7, 444.0], [47.8, 444.0], [47.9, 444.0], [48.0, 445.0], [48.1, 446.0], [48.2, 446.0], [48.3, 446.0], [48.4, 446.0], [48.5, 448.0], [48.6, 448.0], [48.7, 449.0], [48.8, 449.0], [48.9, 449.0], [49.0, 450.0], [49.1, 450.0], [49.2, 451.0], [49.3, 451.0], [49.4, 452.0], [49.5, 453.0], [49.6, 453.0], [49.7, 454.0], [49.8, 455.0], [49.9, 457.0], [50.0, 457.0], [50.1, 458.0], [50.2, 458.0], [50.3, 460.0], [50.4, 461.0], [50.5, 461.0], [50.6, 462.0], [50.7, 463.0], [50.8, 463.0], [50.9, 463.0], [51.0, 463.0], [51.1, 464.0], [51.2, 465.0], [51.3, 466.0], [51.4, 467.0], [51.5, 468.0], [51.6, 469.0], [51.7, 469.0], [51.8, 470.0], [51.9, 471.0], [52.0, 472.0], [52.1, 473.0], [52.2, 474.0], [52.3, 476.0], [52.4, 476.0], [52.5, 477.0], [52.6, 477.0], [52.7, 478.0], [52.8, 479.0], [52.9, 479.0], [53.0, 480.0], [53.1, 482.0], [53.2, 483.0], [53.3, 483.0], [53.4, 484.0], [53.5, 485.0], [53.6, 486.0], [53.7, 487.0], [53.8, 487.0], [53.9, 488.0], [54.0, 488.0], [54.1, 488.0], [54.2, 488.0], [54.3, 489.0], [54.4, 489.0], [54.5, 489.0], [54.6, 490.0], [54.7, 490.0], [54.8, 491.0], [54.9, 492.0], [55.0, 492.0], [55.1, 492.0], [55.2, 493.0], [55.3, 494.0], [55.4, 494.0], [55.5, 494.0], [55.6, 494.0], [55.7, 495.0], [55.8, 495.0], [55.9, 496.0], [56.0, 497.0], [56.1, 500.0], [56.2, 500.0], [56.3, 500.0], [56.4, 501.0], [56.5, 501.0], [56.6, 504.0], [56.7, 505.0], [56.8, 505.0], [56.9, 507.0], [57.0, 508.0], [57.1, 508.0], [57.2, 510.0], [57.3, 511.0], [57.4, 511.0], [57.5, 512.0], [57.6, 512.0], [57.7, 512.0], [57.8, 513.0], [57.9, 514.0], [58.0, 514.0], [58.1, 514.0], [58.2, 516.0], [58.3, 517.0], [58.4, 517.0], [58.5, 519.0], [58.6, 519.0], [58.7, 521.0], [58.8, 522.0], [58.9, 522.0], [59.0, 522.0], [59.1, 526.0], [59.2, 526.0], [59.3, 528.0], [59.4, 528.0], [59.5, 528.0], [59.6, 532.0], [59.7, 532.0], [59.8, 534.0], [59.9, 535.0], [60.0, 535.0], [60.1, 536.0], [60.2, 536.0], [60.3, 536.0], [60.4, 536.0], [60.5, 537.0], [60.6, 537.0], [60.7, 537.0], [60.8, 538.0], [60.9, 538.0], [61.0, 539.0], [61.1, 539.0], [61.2, 540.0], [61.3, 541.0], [61.4, 542.0], [61.5, 542.0], [61.6, 543.0], [61.7, 543.0], [61.8, 543.0], [61.9, 544.0], [62.0, 544.0], [62.1, 545.0], [62.2, 546.0], [62.3, 549.0], [62.4, 550.0], [62.5, 550.0], [62.6, 552.0], [62.7, 552.0], [62.8, 555.0], [62.9, 555.0], [63.0, 556.0], [63.1, 557.0], [63.2, 560.0], [63.3, 561.0], [63.4, 566.0], [63.5, 567.0], [63.6, 568.0], [63.7, 568.0], [63.8, 568.0], [63.9, 569.0], [64.0, 570.0], [64.1, 570.0], [64.2, 571.0], [64.3, 572.0], [64.4, 574.0], [64.5, 574.0], [64.6, 575.0], [64.7, 575.0], [64.8, 575.0], [64.9, 575.0], [65.0, 576.0], [65.1, 577.0], [65.2, 577.0], [65.3, 578.0], [65.4, 578.0], [65.5, 580.0], [65.6, 580.0], [65.7, 581.0], [65.8, 581.0], [65.9, 582.0], [66.0, 582.0], [66.1, 583.0], [66.2, 585.0], [66.3, 588.0], [66.4, 590.0], [66.5, 591.0], [66.6, 591.0], [66.7, 591.0], [66.8, 591.0], [66.9, 592.0], [67.0, 595.0], [67.1, 595.0], [67.2, 596.0], [67.3, 597.0], [67.4, 597.0], [67.5, 597.0], [67.6, 598.0], [67.7, 599.0], [67.8, 600.0], [67.9, 601.0], [68.0, 602.0], [68.1, 602.0], [68.2, 602.0], [68.3, 602.0], [68.4, 603.0], [68.5, 603.0], [68.6, 604.0], [68.7, 605.0], [68.8, 607.0], [68.9, 608.0], [69.0, 609.0], [69.1, 610.0], [69.2, 611.0], [69.3, 617.0], [69.4, 618.0], [69.5, 619.0], [69.6, 622.0], [69.7, 623.0], [69.8, 625.0], [69.9, 625.0], [70.0, 625.0], [70.1, 626.0], [70.2, 630.0], [70.3, 634.0], [70.4, 634.0], [70.5, 635.0], [70.6, 635.0], [70.7, 636.0], [70.8, 637.0], [70.9, 638.0], [71.0, 638.0], [71.1, 638.0], [71.2, 638.0], [71.3, 639.0], [71.4, 640.0], [71.5, 640.0], [71.6, 641.0], [71.7, 641.0], [71.8, 641.0], [71.9, 643.0], [72.0, 643.0], [72.1, 643.0], [72.2, 644.0], [72.3, 644.0], [72.4, 645.0], [72.5, 646.0], [72.6, 646.0], [72.7, 646.0], [72.8, 646.0], [72.9, 646.0], [73.0, 647.0], [73.1, 647.0], [73.2, 648.0], [73.3, 649.0], [73.4, 649.0], [73.5, 650.0], [73.6, 650.0], [73.7, 651.0], [73.8, 652.0], [73.9, 653.0], [74.0, 653.0], [74.1, 653.0], [74.2, 654.0], [74.3, 655.0], [74.4, 655.0], [74.5, 655.0], [74.6, 657.0], [74.7, 660.0], [74.8, 661.0], [74.9, 661.0], [75.0, 662.0], [75.1, 663.0], [75.2, 663.0], [75.3, 664.0], [75.4, 664.0], [75.5, 664.0], [75.6, 665.0], [75.7, 665.0], [75.8, 667.0], [75.9, 668.0], [76.0, 668.0], [76.1, 669.0], [76.2, 669.0], [76.3, 670.0], [76.4, 670.0], [76.5, 670.0], [76.6, 671.0], [76.7, 672.0], [76.8, 673.0], [76.9, 673.0], [77.0, 673.0], [77.1, 675.0], [77.2, 675.0], [77.3, 676.0], [77.4, 676.0], [77.5, 676.0], [77.6, 676.0], [77.7, 677.0], [77.8, 679.0], [77.9, 679.0], [78.0, 679.0], [78.1, 680.0], [78.2, 681.0], [78.3, 681.0], [78.4, 684.0], [78.5, 684.0], [78.6, 685.0], [78.7, 685.0], [78.8, 685.0], [78.9, 686.0], [79.0, 686.0], [79.1, 687.0], [79.2, 688.0], [79.3, 688.0], [79.4, 689.0], [79.5, 691.0], [79.6, 691.0], [79.7, 693.0], [79.8, 694.0], [79.9, 695.0], [80.0, 695.0], [80.1, 698.0], [80.2, 698.0], [80.3, 698.0], [80.4, 699.0], [80.5, 699.0], [80.6, 701.0], [80.7, 701.0], [80.8, 702.0], [80.9, 703.0], [81.0, 704.0], [81.1, 704.0], [81.2, 705.0], [81.3, 705.0], [81.4, 706.0], [81.5, 706.0], [81.6, 708.0], [81.7, 708.0], [81.8, 708.0], [81.9, 709.0], [82.0, 710.0], [82.1, 711.0], [82.2, 711.0], [82.3, 711.0], [82.4, 712.0], [82.5, 712.0], [82.6, 712.0], [82.7, 713.0], [82.8, 713.0], [82.9, 716.0], [83.0, 716.0], [83.1, 716.0], [83.2, 718.0], [83.3, 718.0], [83.4, 721.0], [83.5, 722.0], [83.6, 723.0], [83.7, 723.0], [83.8, 723.0], [83.9, 724.0], [84.0, 725.0], [84.1, 726.0], [84.2, 727.0], [84.3, 727.0], [84.4, 728.0], [84.5, 728.0], [84.6, 728.0], [84.7, 729.0], [84.8, 729.0], [84.9, 729.0], [85.0, 729.0], [85.1, 730.0], [85.2, 732.0], [85.3, 732.0], [85.4, 733.0], [85.5, 735.0], [85.6, 735.0], [85.7, 735.0], [85.8, 736.0], [85.9, 737.0], [86.0, 737.0], [86.1, 738.0], [86.2, 738.0], [86.3, 739.0], [86.4, 739.0], [86.5, 739.0], [86.6, 741.0], [86.7, 741.0], [86.8, 741.0], [86.9, 741.0], [87.0, 742.0], [87.1, 742.0], [87.2, 742.0], [87.3, 742.0], [87.4, 744.0], [87.5, 746.0], [87.6, 746.0], [87.7, 747.0], [87.8, 748.0], [87.9, 748.0], [88.0, 749.0], [88.1, 750.0], [88.2, 750.0], [88.3, 751.0], [88.4, 751.0], [88.5, 752.0], [88.6, 752.0], [88.7, 753.0], [88.8, 754.0], [88.9, 754.0], [89.0, 756.0], [89.1, 756.0], [89.2, 756.0], [89.3, 756.0], [89.4, 756.0], [89.5, 757.0], [89.6, 757.0], [89.7, 758.0], [89.8, 758.0], [89.9, 759.0], [90.0, 760.0], [90.1, 760.0], [90.2, 760.0], [90.3, 760.0], [90.4, 761.0], [90.5, 761.0], [90.6, 763.0], [90.7, 764.0], [90.8, 764.0], [90.9, 765.0], [91.0, 765.0], [91.1, 765.0], [91.2, 766.0], [91.3, 767.0], [91.4, 767.0], [91.5, 768.0], [91.6, 769.0], [91.7, 769.0], [91.8, 769.0], [91.9, 769.0], [92.0, 770.0], [92.1, 770.0], [92.2, 770.0], [92.3, 770.0], [92.4, 770.0], [92.5, 771.0], [92.6, 771.0], [92.7, 772.0], [92.8, 773.0], [92.9, 773.0], [93.0, 774.0], [93.1, 774.0], [93.2, 775.0], [93.3, 775.0], [93.4, 775.0], [93.5, 775.0], [93.6, 777.0], [93.7, 778.0], [93.8, 778.0], [93.9, 778.0], [94.0, 779.0], [94.1, 779.0], [94.2, 780.0], [94.3, 780.0], [94.4, 780.0], [94.5, 781.0], [94.6, 781.0], [94.7, 782.0], [94.8, 783.0], [94.9, 784.0], [95.0, 786.0], [95.1, 786.0], [95.2, 787.0], [95.3, 787.0], [95.4, 787.0], [95.5, 788.0], [95.6, 789.0], [95.7, 789.0], [95.8, 789.0], [95.9, 789.0], [96.0, 790.0], [96.1, 791.0], [96.2, 791.0], [96.3, 791.0], [96.4, 792.0], [96.5, 792.0], [96.6, 792.0], [96.7, 793.0], [96.8, 793.0], [96.9, 794.0], [97.0, 794.0], [97.1, 794.0], [97.2, 794.0], [97.3, 794.0], [97.4, 795.0], [97.5, 795.0], [97.6, 795.0], [97.7, 795.0], [97.8, 796.0], [97.9, 796.0], [98.0, 796.0], [98.1, 796.0], [98.2, 797.0], [98.3, 798.0], [98.4, 798.0], [98.5, 798.0], [98.6, 798.0], [98.7, 798.0], [98.8, 798.0], [98.9, 799.0], [99.0, 800.0], [99.1, 801.0], [99.2, 802.0], [99.3, 802.0], [99.4, 802.0], [99.5, 803.0], [99.6, 804.0], [99.7, 807.0], [99.8, 807.0], [99.9, 812.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 262.0], [0.1, 270.0], [0.2, 275.0], [0.3, 275.0], [0.4, 276.0], [0.5, 277.0], [0.6, 277.0], [0.7, 282.0], [0.8, 338.0], [0.9, 342.0], [1.0, 343.0], [1.1, 343.0], [1.2, 344.0], [1.3, 344.0], [1.4, 345.0], [1.5, 345.0], [1.6, 348.0], [1.7, 352.0], [1.8, 356.0], [1.9, 356.0], [2.0, 369.0], [2.1, 371.0], [2.2, 372.0], [2.3, 372.0], [2.4, 380.0], [2.5, 387.0], [2.6, 519.0], [2.7, 553.0], [2.8, 558.0], [2.9, 565.0], [3.0, 575.0], [3.1, 600.0], [3.2, 611.0], [3.3, 613.0], [3.4, 616.0], [3.5, 617.0], [3.6, 626.0], [3.7, 631.0], [3.8, 633.0], [3.9, 646.0], [4.0, 660.0], [4.1, 666.0], [4.2, 668.0], [4.3, 670.0], [4.4, 674.0], [4.5, 674.0], [4.6, 674.0], [4.7, 687.0], [4.8, 688.0], [4.9, 690.0], [5.0, 691.0], [5.1, 695.0], [5.2, 696.0], [5.3, 703.0], [5.4, 715.0], [5.5, 718.0], [5.6, 721.0], [5.7, 725.0], [5.8, 726.0], [5.9, 727.0], [6.0, 728.0], [6.1, 730.0], [6.2, 731.0], [6.3, 737.0], [6.4, 737.0], [6.5, 739.0], [6.6, 740.0], [6.7, 743.0], [6.8, 743.0], [6.9, 747.0], [7.0, 748.0], [7.1, 751.0], [7.2, 751.0], [7.3, 753.0], [7.4, 754.0], [7.5, 755.0], [7.6, 759.0], [7.7, 759.0], [7.8, 759.0], [7.9, 760.0], [8.0, 762.0], [8.1, 762.0], [8.2, 763.0], [8.3, 771.0], [8.4, 771.0], [8.5, 775.0], [8.6, 779.0], [8.7, 781.0], [8.8, 781.0], [8.9, 789.0], [9.0, 795.0], [9.1, 796.0], [9.2, 799.0], [9.3, 801.0], [9.4, 817.0], [9.5, 819.0], [9.6, 822.0], [9.7, 825.0], [9.8, 828.0], [9.9, 831.0], [10.0, 835.0], [10.1, 836.0], [10.2, 841.0], [10.3, 842.0], [10.4, 843.0], [10.5, 846.0], [10.6, 857.0], [10.7, 859.0], [10.8, 859.0], [10.9, 863.0], [11.0, 884.0], [11.1, 889.0], [11.2, 892.0], [11.3, 893.0], [11.4, 894.0], [11.5, 894.0], [11.6, 895.0], [11.7, 895.0], [11.8, 897.0], [11.9, 898.0], [12.0, 906.0], [12.1, 908.0], [12.2, 908.0], [12.3, 908.0], [12.4, 912.0], [12.5, 918.0], [12.6, 925.0], [12.7, 927.0], [12.8, 937.0], [12.9, 942.0], [13.0, 945.0], [13.1, 952.0], [13.2, 955.0], [13.3, 961.0], [13.4, 965.0], [13.5, 971.0], [13.6, 973.0], [13.7, 974.0], [13.8, 982.0], [13.9, 986.0], [14.0, 989.0], [14.1, 1000.0], [14.2, 1001.0], [14.3, 1002.0], [14.4, 1002.0], [14.5, 1004.0], [14.6, 1005.0], [14.7, 1007.0], [14.8, 1009.0], [14.9, 1009.0], [15.0, 1013.0], [15.1, 1015.0], [15.2, 1018.0], [15.3, 1020.0], [15.4, 1021.0], [15.5, 1027.0], [15.6, 1029.0], [15.7, 1034.0], [15.8, 1041.0], [15.9, 1050.0], [16.0, 1051.0], [16.1, 1055.0], [16.2, 1075.0], [16.3, 1075.0], [16.4, 1076.0], [16.5, 1084.0], [16.6, 1085.0], [16.7, 1086.0], [16.8, 1088.0], [16.9, 1092.0], [17.0, 1107.0], [17.1, 1119.0], [17.2, 1126.0], [17.3, 1211.0], [17.4, 1250.0], [17.5, 1311.0], [17.6, 1895.0], [17.7, 1909.0], [17.8, 1966.0], [17.9, 1990.0], [18.0, 2006.0], [18.1, 2043.0], [18.2, 2049.0], [18.3, 2049.0], [18.4, 2081.0], [18.5, 2083.0], [18.6, 2115.0], [18.7, 2119.0], [18.8, 2127.0], [18.9, 2127.0], [19.0, 2133.0], [19.1, 2133.0], [19.2, 2141.0], [19.3, 2191.0], [19.4, 2196.0], [19.5, 2226.0], [19.6, 2227.0], [19.7, 2227.0], [19.8, 2234.0], [19.9, 2235.0], [20.0, 2237.0], [20.1, 2240.0], [20.2, 2241.0], [20.3, 2242.0], [20.4, 2250.0], [20.5, 2252.0], [20.6, 2253.0], [20.7, 2255.0], [20.8, 2261.0], [20.9, 2265.0], [21.0, 2267.0], [21.1, 2277.0], [21.2, 2285.0], [21.3, 2290.0], [21.4, 2296.0], [21.5, 2296.0], [21.6, 2307.0], [21.7, 2314.0], [21.8, 2315.0], [21.9, 2315.0], [22.0, 2315.0], [22.1, 2325.0], [22.2, 2328.0], [22.3, 2330.0], [22.4, 2332.0], [22.5, 2334.0], [22.6, 2340.0], [22.7, 2342.0], [22.8, 2348.0], [22.9, 2354.0], [23.0, 2366.0], [23.1, 2369.0], [23.2, 2370.0], [23.3, 2375.0], [23.4, 2385.0], [23.5, 2393.0], [23.6, 2397.0], [23.7, 2401.0], [23.8, 2405.0], [23.9, 2418.0], [24.0, 2423.0], [24.1, 2424.0], [24.2, 2438.0], [24.3, 2442.0], [24.4, 2446.0], [24.5, 2448.0], [24.6, 2451.0], [24.7, 2460.0], [24.8, 2463.0], [24.9, 2468.0], [25.0, 2475.0], [25.1, 2476.0], [25.2, 2484.0], [25.3, 2488.0], [25.4, 2489.0], [25.5, 2499.0], [25.6, 2500.0], [25.7, 2502.0], [25.8, 2508.0], [25.9, 2510.0], [26.0, 2512.0], [26.1, 2515.0], [26.2, 2516.0], [26.3, 2518.0], [26.4, 2526.0], [26.5, 2529.0], [26.6, 2530.0], [26.7, 2531.0], [26.8, 2538.0], [26.9, 2538.0], [27.0, 2540.0], [27.1, 2543.0], [27.2, 2550.0], [27.3, 2558.0], [27.4, 2558.0], [27.5, 2559.0], [27.6, 2561.0], [27.7, 2566.0], [27.8, 2567.0], [27.9, 2572.0], [28.0, 2575.0], [28.1, 2581.0], [28.2, 2590.0], [28.3, 2592.0], [28.4, 2593.0], [28.5, 2597.0], [28.6, 2601.0], [28.7, 2608.0], [28.8, 2611.0], [28.9, 2611.0], [29.0, 2611.0], [29.1, 2617.0], [29.2, 2621.0], [29.3, 2632.0], [29.4, 2634.0], [29.5, 2636.0], [29.6, 2637.0], [29.7, 2640.0], [29.8, 2647.0], [29.9, 2650.0], [30.0, 2654.0], [30.1, 2657.0], [30.2, 2657.0], [30.3, 2664.0], [30.4, 2667.0], [30.5, 2672.0], [30.6, 2672.0], [30.7, 2674.0], [30.8, 2675.0], [30.9, 2676.0], [31.0, 2687.0], [31.1, 2691.0], [31.2, 2691.0], [31.3, 2699.0], [31.4, 2702.0], [31.5, 2705.0], [31.6, 2705.0], [31.7, 2706.0], [31.8, 2706.0], [31.9, 2707.0], [32.0, 2708.0], [32.1, 2714.0], [32.2, 2715.0], [32.3, 2716.0], [32.4, 2717.0], [32.5, 2727.0], [32.6, 2729.0], [32.7, 2730.0], [32.8, 2731.0], [32.9, 2731.0], [33.0, 2733.0], [33.1, 2737.0], [33.2, 2739.0], [33.3, 2749.0], [33.4, 2753.0], [33.5, 2753.0], [33.6, 2759.0], [33.7, 2759.0], [33.8, 2763.0], [33.9, 2764.0], [34.0, 2765.0], [34.1, 2767.0], [34.2, 2773.0], [34.3, 2774.0], [34.4, 2776.0], [34.5, 2778.0], [34.6, 2780.0], [34.7, 2781.0], [34.8, 2787.0], [34.9, 2789.0], [35.0, 2797.0], [35.1, 2797.0], [35.2, 2798.0], [35.3, 2798.0], [35.4, 2800.0], [35.5, 2801.0], [35.6, 2802.0], [35.7, 2803.0], [35.8, 2803.0], [35.9, 2807.0], [36.0, 2810.0], [36.1, 2813.0], [36.2, 2817.0], [36.3, 2821.0], [36.4, 2823.0], [36.5, 2824.0], [36.6, 2826.0], [36.7, 2826.0], [36.8, 2833.0], [36.9, 2833.0], [37.0, 2838.0], [37.1, 2841.0], [37.2, 2841.0], [37.3, 2845.0], [37.4, 2848.0], [37.5, 2849.0], [37.6, 2852.0], [37.7, 2852.0], [37.8, 2853.0], [37.9, 2857.0], [38.0, 2858.0], [38.1, 2862.0], [38.2, 2863.0], [38.3, 2863.0], [38.4, 2864.0], [38.5, 2866.0], [38.6, 2868.0], [38.7, 2871.0], [38.8, 2873.0], [38.9, 2873.0], [39.0, 2874.0], [39.1, 2874.0], [39.2, 2875.0], [39.3, 2877.0], [39.4, 2879.0], [39.5, 2879.0], [39.6, 2888.0], [39.7, 2892.0], [39.8, 2895.0], [39.9, 2896.0], [40.0, 2896.0], [40.1, 2899.0], [40.2, 2900.0], [40.3, 2902.0], [40.4, 2902.0], [40.5, 2903.0], [40.6, 2903.0], [40.7, 2904.0], [40.8, 2904.0], [40.9, 2905.0], [41.0, 2905.0], [41.1, 2907.0], [41.2, 2907.0], [41.3, 2908.0], [41.4, 2912.0], [41.5, 2912.0], [41.6, 2912.0], [41.7, 2913.0], [41.8, 2914.0], [41.9, 2923.0], [42.0, 2927.0], [42.1, 2929.0], [42.2, 2933.0], [42.3, 2933.0], [42.4, 2937.0], [42.5, 2939.0], [42.6, 2939.0], [42.7, 2944.0], [42.8, 2951.0], [42.9, 2953.0], [43.0, 2954.0], [43.1, 2955.0], [43.2, 2955.0], [43.3, 2956.0], [43.4, 2956.0], [43.5, 2956.0], [43.6, 2957.0], [43.7, 2961.0], [43.8, 2962.0], [43.9, 2964.0], [44.0, 2965.0], [44.1, 2967.0], [44.2, 2971.0], [44.3, 2975.0], [44.4, 2975.0], [44.5, 2978.0], [44.6, 2979.0], [44.7, 2979.0], [44.8, 2985.0], [44.9, 2986.0], [45.0, 2986.0], [45.1, 2988.0], [45.2, 2989.0], [45.3, 2989.0], [45.4, 2990.0], [45.5, 2990.0], [45.6, 2991.0], [45.7, 2994.0], [45.8, 2994.0], [45.9, 2999.0], [46.0, 3003.0], [46.1, 3003.0], [46.2, 3004.0], [46.3, 3012.0], [46.4, 3012.0], [46.5, 3015.0], [46.6, 3017.0], [46.7, 3018.0], [46.8, 3021.0], [46.9, 3022.0], [47.0, 3026.0], [47.1, 3027.0], [47.2, 3034.0], [47.3, 3037.0], [47.4, 3041.0], [47.5, 3043.0], [47.6, 3048.0], [47.7, 3048.0], [47.8, 3050.0], [47.9, 3058.0], [48.0, 3058.0], [48.1, 3061.0], [48.2, 3062.0], [48.3, 3063.0], [48.4, 3064.0], [48.5, 3065.0], [48.6, 3066.0], [48.7, 3066.0], [48.8, 3066.0], [48.9, 3067.0], [49.0, 3068.0], [49.1, 3069.0], [49.2, 3069.0], [49.3, 3075.0], [49.4, 3076.0], [49.5, 3077.0], [49.6, 3077.0], [49.7, 3078.0], [49.8, 3081.0], [49.9, 3081.0], [50.0, 3081.0], [50.1, 3081.0], [50.2, 3083.0], [50.3, 3085.0], [50.4, 3085.0], [50.5, 3086.0], [50.6, 3086.0], [50.7, 3086.0], [50.8, 3087.0], [50.9, 3088.0], [51.0, 3088.0], [51.1, 3089.0], [51.2, 3089.0], [51.3, 3091.0], [51.4, 3092.0], [51.5, 3094.0], [51.6, 3094.0], [51.7, 3098.0], [51.8, 3101.0], [51.9, 3102.0], [52.0, 3107.0], [52.1, 3107.0], [52.2, 3110.0], [52.3, 3111.0], [52.4, 3112.0], [52.5, 3112.0], [52.6, 3113.0], [52.7, 3117.0], [52.8, 3117.0], [52.9, 3117.0], [53.0, 3118.0], [53.1, 3122.0], [53.2, 3122.0], [53.3, 3123.0], [53.4, 3127.0], [53.5, 3129.0], [53.6, 3131.0], [53.7, 3134.0], [53.8, 3136.0], [53.9, 3138.0], [54.0, 3140.0], [54.1, 3141.0], [54.2, 3142.0], [54.3, 3145.0], [54.4, 3148.0], [54.5, 3148.0], [54.6, 3149.0], [54.7, 3149.0], [54.8, 3149.0], [54.9, 3151.0], [55.0, 3151.0], [55.1, 3152.0], [55.2, 3152.0], [55.3, 3152.0], [55.4, 3159.0], [55.5, 3163.0], [55.6, 3170.0], [55.7, 3171.0], [55.8, 3172.0], [55.9, 3174.0], [56.0, 3174.0], [56.1, 3176.0], [56.2, 3177.0], [56.3, 3177.0], [56.4, 3179.0], [56.5, 3183.0], [56.6, 3183.0], [56.7, 3185.0], [56.8, 3185.0], [56.9, 3188.0], [57.0, 3191.0], [57.1, 3192.0], [57.2, 3194.0], [57.3, 3195.0], [57.4, 3198.0], [57.5, 3203.0], [57.6, 3203.0], [57.7, 3207.0], [57.8, 3207.0], [57.9, 3212.0], [58.0, 3212.0], [58.1, 3214.0], [58.2, 3214.0], [58.3, 3220.0], [58.4, 3222.0], [58.5, 3223.0], [58.6, 3227.0], [58.7, 3229.0], [58.8, 3230.0], [58.9, 3230.0], [59.0, 3232.0], [59.1, 3239.0], [59.2, 3239.0], [59.3, 3239.0], [59.4, 3239.0], [59.5, 3240.0], [59.6, 3240.0], [59.7, 3244.0], [59.8, 3244.0], [59.9, 3245.0], [60.0, 3246.0], [60.1, 3249.0], [60.2, 3249.0], [60.3, 3250.0], [60.4, 3251.0], [60.5, 3254.0], [60.6, 3254.0], [60.7, 3255.0], [60.8, 3257.0], [60.9, 3258.0], [61.0, 3264.0], [61.1, 3266.0], [61.2, 3267.0], [61.3, 3271.0], [61.4, 3276.0], [61.5, 3278.0], [61.6, 3280.0], [61.7, 3282.0], [61.8, 3287.0], [61.9, 3288.0], [62.0, 3289.0], [62.1, 3289.0], [62.2, 3291.0], [62.3, 3294.0], [62.4, 3298.0], [62.5, 3298.0], [62.6, 3298.0], [62.7, 3298.0], [62.8, 3301.0], [62.9, 3306.0], [63.0, 3307.0], [63.1, 3309.0], [63.2, 3309.0], [63.3, 3310.0], [63.4, 3310.0], [63.5, 3312.0], [63.6, 3313.0], [63.7, 3315.0], [63.8, 3318.0], [63.9, 3319.0], [64.0, 3320.0], [64.1, 3322.0], [64.2, 3325.0], [64.3, 3326.0], [64.4, 3326.0], [64.5, 3327.0], [64.6, 3327.0], [64.7, 3327.0], [64.8, 3336.0], [64.9, 3336.0], [65.0, 3338.0], [65.1, 3341.0], [65.2, 3343.0], [65.3, 3344.0], [65.4, 3347.0], [65.5, 3351.0], [65.6, 3357.0], [65.7, 3360.0], [65.8, 3360.0], [65.9, 3360.0], [66.0, 3372.0], [66.1, 3375.0], [66.2, 3377.0], [66.3, 3378.0], [66.4, 3383.0], [66.5, 3383.0], [66.6, 3384.0], [66.7, 3385.0], [66.8, 3389.0], [66.9, 3392.0], [67.0, 3393.0], [67.1, 3396.0], [67.2, 3397.0], [67.3, 3398.0], [67.4, 3400.0], [67.5, 3401.0], [67.6, 3402.0], [67.7, 3403.0], [67.8, 3404.0], [67.9, 3405.0], [68.0, 3405.0], [68.1, 3406.0], [68.2, 3408.0], [68.3, 3408.0], [68.4, 3412.0], [68.5, 3414.0], [68.6, 3414.0], [68.7, 3415.0], [68.8, 3415.0], [68.9, 3416.0], [69.0, 3416.0], [69.1, 3418.0], [69.2, 3419.0], [69.3, 3420.0], [69.4, 3420.0], [69.5, 3420.0], [69.6, 3420.0], [69.7, 3420.0], [69.8, 3420.0], [69.9, 3425.0], [70.0, 3426.0], [70.1, 3428.0], [70.2, 3430.0], [70.3, 3431.0], [70.4, 3434.0], [70.5, 3437.0], [70.6, 3439.0], [70.7, 3441.0], [70.8, 3442.0], [70.9, 3444.0], [71.0, 3444.0], [71.1, 3445.0], [71.2, 3447.0], [71.3, 3447.0], [71.4, 3448.0], [71.5, 3449.0], [71.6, 3450.0], [71.7, 3469.0], [71.8, 3469.0], [71.9, 3477.0], [72.0, 3478.0], [72.1, 3478.0], [72.2, 3479.0], [72.3, 3482.0], [72.4, 3486.0], [72.5, 3486.0], [72.6, 3487.0], [72.7, 3488.0], [72.8, 3489.0], [72.9, 3490.0], [73.0, 3492.0], [73.1, 3496.0], [73.2, 3496.0], [73.3, 3498.0], [73.4, 3498.0], [73.5, 3499.0], [73.6, 3500.0], [73.7, 3502.0], [73.8, 3506.0], [73.9, 3507.0], [74.0, 3513.0], [74.1, 3514.0], [74.2, 3519.0], [74.3, 3520.0], [74.4, 3522.0], [74.5, 3523.0], [74.6, 3524.0], [74.7, 3524.0], [74.8, 3530.0], [74.9, 3531.0], [75.0, 3532.0], [75.1, 3533.0], [75.2, 3535.0], [75.3, 3538.0], [75.4, 3540.0], [75.5, 3540.0], [75.6, 3540.0], [75.7, 3540.0], [75.8, 3544.0], [75.9, 3545.0], [76.0, 3545.0], [76.1, 3545.0], [76.2, 3549.0], [76.3, 3554.0], [76.4, 3558.0], [76.5, 3558.0], [76.6, 3563.0], [76.7, 3563.0], [76.8, 3564.0], [76.9, 3569.0], [77.0, 3570.0], [77.1, 3571.0], [77.2, 3572.0], [77.3, 3572.0], [77.4, 3573.0], [77.5, 3574.0], [77.6, 3575.0], [77.7, 3575.0], [77.8, 3576.0], [77.9, 3588.0], [78.0, 3591.0], [78.1, 3599.0], [78.2, 3601.0], [78.3, 3601.0], [78.4, 3602.0], [78.5, 3603.0], [78.6, 3606.0], [78.7, 3608.0], [78.8, 3609.0], [78.9, 3610.0], [79.0, 3616.0], [79.1, 3616.0], [79.2, 3618.0], [79.3, 3627.0], [79.4, 3628.0], [79.5, 3628.0], [79.6, 3629.0], [79.7, 3630.0], [79.8, 3631.0], [79.9, 3634.0], [80.0, 3638.0], [80.1, 3639.0], [80.2, 3641.0], [80.3, 3641.0], [80.4, 3645.0], [80.5, 3647.0], [80.6, 3651.0], [80.7, 3652.0], [80.8, 3661.0], [80.9, 3670.0], [81.0, 3673.0], [81.1, 3676.0], [81.2, 3679.0], [81.3, 3679.0], [81.4, 3681.0], [81.5, 3681.0], [81.6, 3687.0], [81.7, 3687.0], [81.8, 3687.0], [81.9, 3688.0], [82.0, 3689.0], [82.1, 3690.0], [82.2, 3690.0], [82.3, 3692.0], [82.4, 3694.0], [82.5, 3694.0], [82.6, 3694.0], [82.7, 3695.0], [82.8, 3696.0], [82.9, 3698.0], [83.0, 3698.0], [83.1, 3700.0], [83.2, 3701.0], [83.3, 3704.0], [83.4, 3705.0], [83.5, 3717.0], [83.6, 3718.0], [83.7, 3725.0], [83.8, 3727.0], [83.9, 3727.0], [84.0, 3731.0], [84.1, 3732.0], [84.2, 3736.0], [84.3, 3741.0], [84.4, 3741.0], [84.5, 3743.0], [84.6, 3744.0], [84.7, 3746.0], [84.8, 3747.0], [84.9, 3748.0], [85.0, 3749.0], [85.1, 3753.0], [85.2, 3754.0], [85.3, 3755.0], [85.4, 3756.0], [85.5, 3758.0], [85.6, 3763.0], [85.7, 3763.0], [85.8, 3775.0], [85.9, 3775.0], [86.0, 3776.0], [86.1, 3776.0], [86.2, 3782.0], [86.3, 3786.0], [86.4, 3788.0], [86.5, 3789.0], [86.6, 3791.0], [86.7, 3793.0], [86.8, 3794.0], [86.9, 3796.0], [87.0, 3798.0], [87.1, 3803.0], [87.2, 3803.0], [87.3, 3804.0], [87.4, 3805.0], [87.5, 3806.0], [87.6, 3808.0], [87.7, 3809.0], [87.8, 3809.0], [87.9, 3809.0], [88.0, 3814.0], [88.1, 3814.0], [88.2, 3815.0], [88.3, 3816.0], [88.4, 3818.0], [88.5, 3818.0], [88.6, 3825.0], [88.7, 3828.0], [88.8, 3839.0], [88.9, 3841.0], [89.0, 3841.0], [89.1, 3845.0], [89.2, 3846.0], [89.3, 3851.0], [89.4, 3861.0], [89.5, 3863.0], [89.6, 3866.0], [89.7, 3870.0], [89.8, 3870.0], [89.9, 3875.0], [90.0, 3876.0], [90.1, 3881.0], [90.2, 3881.0], [90.3, 3884.0], [90.4, 3885.0], [90.5, 3889.0], [90.6, 3892.0], [90.7, 3897.0], [90.8, 3903.0], [90.9, 3904.0], [91.0, 3908.0], [91.1, 3909.0], [91.2, 3909.0], [91.3, 3911.0], [91.4, 3922.0], [91.5, 3926.0], [91.6, 3931.0], [91.7, 3932.0], [91.8, 3933.0], [91.9, 3937.0], [92.0, 3940.0], [92.1, 3941.0], [92.2, 3946.0], [92.3, 3947.0], [92.4, 3948.0], [92.5, 3951.0], [92.6, 3952.0], [92.7, 3953.0], [92.8, 3963.0], [92.9, 3969.0], [93.0, 3973.0], [93.1, 3986.0], [93.2, 3990.0], [93.3, 3992.0], [93.4, 3994.0], [93.5, 3994.0], [93.6, 3995.0], [93.7, 3998.0], [93.8, 3999.0], [93.9, 4001.0], [94.0, 4003.0], [94.1, 4004.0], [94.2, 4005.0], [94.3, 4007.0], [94.4, 4010.0], [94.5, 4012.0], [94.6, 4014.0], [94.7, 4019.0], [94.8, 4020.0], [94.9, 4020.0], [95.0, 4021.0], [95.1, 4022.0], [95.2, 4023.0], [95.3, 4025.0], [95.4, 4026.0], [95.5, 4031.0], [95.6, 4031.0], [95.7, 4031.0], [95.8, 4032.0], [95.9, 4034.0], [96.0, 4042.0], [96.1, 4043.0], [96.2, 4045.0], [96.3, 4046.0], [96.4, 4056.0], [96.5, 4057.0], [96.6, 4060.0], [96.7, 4070.0], [96.8, 4076.0], [96.9, 4087.0], [97.0, 4107.0], [97.1, 4122.0], [97.2, 4122.0], [97.3, 4130.0], [97.4, 4136.0], [97.5, 4136.0], [97.6, 4170.0], [97.7, 4194.0], [97.8, 4200.0], [97.9, 4231.0], [98.0, 4234.0], [98.1, 4242.0], [98.2, 4286.0], [98.3, 4308.0], [98.4, 4314.0], [98.5, 4363.0], [98.6, 4409.0], [98.7, 4415.0], [98.8, 4419.0], [98.9, 4453.0], [99.0, 4507.0], [99.1, 4518.0], [99.2, 4611.0], [99.3, 4653.0], [99.4, 4669.0], [99.5, 4685.0], [99.6, 5211.0], [99.7, 5374.0], [99.8, 5399.0], [99.9, 5640.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 185.0, "series": [{"data": [[0.0, 11.0], [600.0, 2.0], [900.0, 1.0], [1000.0, 4.0], [1100.0, 1.0], [1300.0, 1.0], [1400.0, 1.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 1.0], [2200.0, 3.0], [2300.0, 3.0], [2400.0, 1.0], [2500.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 5.0], [3400.0, 8.0], [3500.0, 8.0], [3700.0, 13.0], [3600.0, 7.0], [3800.0, 24.0], [3900.0, 36.0], [4000.0, 40.0], [4200.0, 65.0], [4100.0, 56.0], [4300.0, 87.0], [4400.0, 87.0], [4500.0, 76.0], [4600.0, 96.0], [4700.0, 81.0], [4800.0, 54.0], [4900.0, 55.0], [5000.0, 33.0], [5100.0, 21.0], [5200.0, 6.0], [5300.0, 6.0], [5400.0, 8.0], [5600.0, 5.0], [5500.0, 2.0], [5700.0, 4.0], [5800.0, 2.0], [5900.0, 4.0], [6100.0, 2.0], [6000.0, 3.0], [6200.0, 2.0], [6300.0, 3.0], [6400.0, 5.0], [6600.0, 1.0], [6500.0, 1.0], [6700.0, 3.0], [6900.0, 2.0], [7200.0, 1.0], [7400.0, 1.0], [7900.0, 1.0], [7800.0, 1.0], [8000.0, 2.0], [8400.0, 2.0], [9400.0, 1.0], [9500.0, 1.0], [100.0, 27.0], [200.0, 5.0], [300.0, 5.0], [400.0, 1.0], [500.0, 3.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 27.0], [300.0, 156.0], [600.0, 128.0], [700.0, 185.0], [100.0, 49.0], [200.0, 183.0], [400.0, 145.0], [800.0, 10.0], [500.0, 117.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[600.0, 23.0], [700.0, 40.0], [800.0, 27.0], [900.0, 21.0], [1000.0, 29.0], [1100.0, 3.0], [1200.0, 2.0], [1300.0, 1.0], [1800.0, 1.0], [1900.0, 3.0], [2000.0, 6.0], [2100.0, 9.0], [2300.0, 21.0], [2200.0, 20.0], [2400.0, 19.0], [2500.0, 30.0], [2600.0, 28.0], [2800.0, 48.0], [2700.0, 40.0], [2900.0, 58.0], [3000.0, 58.0], [3100.0, 57.0], [200.0, 8.0], [3200.0, 53.0], [3300.0, 46.0], [3400.0, 62.0], [3500.0, 46.0], [3600.0, 50.0], [3700.0, 40.0], [3800.0, 37.0], [3900.0, 31.0], [4000.0, 31.0], [4100.0, 8.0], [4200.0, 5.0], [4300.0, 3.0], [4400.0, 4.0], [4500.0, 2.0], [4600.0, 4.0], [300.0, 17.0], [5200.0, 1.0], [5300.0, 2.0], [5600.0, 1.0], [500.0, 5.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 74.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1762.0, "series": [{"data": [[0.0, 74.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 164.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1762.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1000.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 312.2889999999998, "minX": 1.66896138E12, "maxY": 464.317, "series": [{"data": [[1.66896138E12, 457.8160000000006]], "isOverall": false, "label": "client-to-gateway-non-caching (GET)", "isController": false}, {"data": [[1.66896138E12, 464.317]], "isOverall": false, "label": "client-to-application (GET)", "isController": false}, {"data": [[1.66896138E12, 312.2889999999998]], "isOverall": false, "label": "client-to-gateway-caching (GET)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896138E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 18.0, "minX": 1.0, "maxY": 9523.0, "series": [{"data": [[2.0, 9493.0], [3.0, 8400.0], [4.0, 8096.0], [5.0, 8460.0], [6.0, 8096.0], [7.0, 7840.0], [8.0, 7915.0], [10.0, 7371.0], [11.0, 6981.0], [12.0, 6738.0], [13.0, 6515.0], [14.0, 6660.0], [15.0, 6707.0], [16.0, 6928.0], [17.0, 6475.0], [18.0, 6461.0], [19.0, 6078.0], [20.0, 6312.0], [22.0, 6569.0], [23.0, 6355.0], [24.0, 6308.0], [25.0, 3231.5], [26.0, 3104.5], [27.0, 5998.0], [28.0, 6489.0], [29.0, 6070.0], [30.0, 5827.0], [31.0, 5546.0], [33.0, 5939.0], [32.0, 5904.0], [35.0, 5620.0], [34.0, 6098.0], [37.0, 5946.5], [39.0, 6266.0], [38.0, 6102.0], [41.0, 5205.0], [40.0, 5413.0], [42.0, 5632.0], [44.0, 5770.5], [47.0, 5408.0], [46.0, 5815.0], [49.0, 5302.0], [48.0, 5748.0], [51.0, 5128.0], [50.0, 5189.0], [53.0, 5722.0], [52.0, 5022.0], [55.0, 5317.0], [54.0, 5406.0], [57.0, 5087.0], [56.0, 5429.0], [59.0, 5747.0], [58.0, 5559.0], [61.0, 2543.5], [60.0, 2749.5], [63.0, 5386.0], [62.0, 5144.0], [66.0, 1830.3333333333333], [64.0, 2871.0], [67.0, 4916.0], [65.0, 5437.0], [70.0, 2390.0], [69.0, 4727.0], [68.0, 4980.0], [75.0, 4668.0], [74.0, 5244.0], [73.0, 5099.0], [72.0, 5072.0], [79.0, 5391.0], [78.0, 5190.0], [77.0, 4707.0], [76.0, 5032.0], [83.0, 1808.0], [82.0, 2421.0], [81.0, 102.0], [80.0, 4913.0], [85.0, 1729.3333333333333], [84.0, 2443.25], [87.0, 1132.2], [86.0, 4640.0], [89.0, 2094.0], [91.0, 5426.0], [90.0, 5228.0], [94.0, 4759.0], [93.0, 4951.5], [98.0, 1756.0], [99.0, 2546.0], [97.0, 4605.0], [96.0, 4826.0], [100.0, 1242.0], [103.0, 5015.0], [102.0, 4691.0], [101.0, 4738.0], [105.0, 2421.0], [104.0, 2532.0], [111.0, 4685.5], [109.0, 4525.0], [108.0, 4886.0], [115.0, 4900.5], [113.0, 4567.0], [112.0, 4868.0], [119.0, 4502.0], [118.0, 4856.0], [117.0, 4932.0], [116.0, 4797.0], [120.0, 148.5], [123.0, 1644.0], [122.0, 3593.75], [121.0, 170.0], [127.0, 4874.5], [125.0, 5034.0], [124.0, 4558.0], [135.0, 4987.0], [134.0, 4492.0], [133.0, 4474.0], [132.0, 4920.4], [143.0, 4776.0], [142.0, 4751.0], [141.0, 4446.0], [140.0, 5052.0], [139.0, 4687.0], [138.0, 4959.0], [136.0, 5049.0], [147.0, 207.0], [146.0, 2355.0], [145.0, 2668.0], [151.0, 5197.0], [150.0, 4677.5], [148.0, 4913.0], [144.0, 4699.0], [159.0, 5117.0], [156.0, 4403.0], [155.0, 4419.0], [154.0, 4808.0], [153.0, 5011.0], [152.0, 5008.0], [163.0, 256.0], [167.0, 4780.333333333333], [164.0, 4896.5], [162.0, 4747.0], [161.0, 4584.0], [160.0, 4985.0], [175.0, 4817.0], [174.0, 4442.0], [173.0, 5090.0], [171.0, 4755.5], [183.0, 4938.5], [180.0, 4575.5], [178.0, 4650.0], [177.0, 4621.0], [185.0, 2429.5], [191.0, 4495.333333333333], [189.0, 4731.0], [187.0, 4763.5], [184.0, 4571.5], [197.0, 4455.0], [196.0, 4774.0], [194.0, 4508.0], [193.0, 4372.0], [192.0, 4619.0], [207.0, 4650.0], [205.0, 4736.0], [204.0, 4947.0], [203.0, 4835.0], [201.0, 4493.0], [209.0, 4526.0], [208.0, 4843.0], [229.0, 4760.526315789473], [227.0, 4508.0], [239.0, 4709.0], [238.0, 4824.5], [236.0, 4969.0], [235.0, 4657.0], [234.0, 4710.5], [233.0, 5025.0], [244.0, 4597.0], [243.0, 4758.0], [242.0, 4753.0], [241.0, 4703.0], [255.0, 4951.5], [253.0, 4651.0], [252.0, 4684.25], [270.0, 4700.0], [271.0, 4873.0], [269.0, 4652.0], [268.0, 4573.0], [266.0, 4904.0], [265.0, 4349.0], [264.0, 4635.0], [263.0, 4567.0], [259.0, 4450.0], [258.0, 4752.666666666667], [262.0, 4699.0], [260.0, 4953.0], [286.0, 4666.0], [287.0, 4357.0], [285.0, 4408.0], [284.0, 4476.0], [283.0, 4609.0], [282.0, 4617.5], [280.0, 4470.0], [278.0, 4431.0], [276.0, 4536.25], [301.0, 4746.0], [303.0, 4407.0], [300.0, 4860.0], [291.0, 5037.0], [290.0, 4682.5], [288.0, 4463.0], [299.0, 4888.0], [298.0, 4810.5], [297.0, 5005.0], [295.0, 4497.0], [294.0, 4563.0], [293.0, 4774.5], [307.0, 4859.0], [318.0, 4743.0], [319.0, 4627.0], [316.0, 4674.0], [314.0, 4824.0], [313.0, 4952.0], [311.0, 4893.0], [309.0, 4822.0], [308.0, 5097.0], [306.0, 4840.0], [305.0, 4722.5], [334.0, 4799.0], [335.0, 5024.0], [333.0, 4909.0], [331.0, 4975.0], [329.0, 4695.0], [328.0, 4744.333333333333], [326.0, 4591.666666666667], [323.0, 4594.0], [322.0, 4796.0], [350.0, 4283.0], [351.0, 4516.0], [349.0, 4330.0], [348.0, 4864.0], [347.0, 4765.0], [346.0, 4522.0], [345.0, 4288.0], [344.0, 4416.5], [343.0, 4632.0], [338.0, 4602.0], [337.0, 4865.0], [336.0, 4774.0], [340.0, 4722.5], [364.0, 2464.0], [352.0, 2339.0], [355.0, 4302.0], [354.0, 4319.5], [363.0, 356.0], [367.0, 4980.0], [366.0, 4861.0], [365.0, 4629.0], [362.0, 5086.0], [361.0, 4513.0], [358.0, 4530.5], [374.0, 1903.0], [380.0, 4778.666666666667], [377.0, 4729.5], [375.0, 4331.0], [373.0, 4598.0], [371.0, 4629.0], [369.0, 4587.0], [368.0, 4793.0], [392.0, 4778.0], [397.0, 4820.0], [395.0, 4928.0], [394.0, 4372.0], [393.0, 4339.0], [391.0, 4554.0], [389.0, 4713.5], [387.0, 4586.5], [386.0, 4505.0], [384.0, 4681.5], [413.0, 4815.0], [415.0, 4431.5], [412.0, 4636.0], [403.0, 4585.0], [400.0, 4430.0], [411.0, 4232.0], [409.0, 4606.0], [408.0, 4742.0], [406.0, 4563.0], [405.0, 4243.0], [404.0, 4712.0], [428.0, 4878.0], [430.0, 4523.0], [431.0, 4742.0], [429.0, 4583.0], [427.0, 4441.5], [425.0, 4579.0], [423.0, 4838.0], [416.0, 4255.0], [419.0, 4297.5], [418.0, 4843.0], [422.0, 4355.0], [421.0, 4642.0], [447.0, 4442.0], [445.0, 4600.5], [443.0, 4683.333333333333], [440.0, 4829.0], [439.0, 4217.0], [438.0, 4615.0], [437.0, 4892.666666666667], [434.0, 4435.0], [433.0, 4445.0], [451.0, 4504.0], [461.0, 4393.0], [460.0, 4609.0], [458.0, 4656.0], [455.0, 4886.0], [454.0, 4708.0], [453.0, 4914.0], [452.0, 4639.0], [450.0, 4679.5], [449.0, 4361.0], [477.0, 4833.0], [479.0, 4584.0], [476.0, 4199.0], [466.0, 4313.0], [465.0, 4695.0], [464.0, 4654.333333333333], [475.0, 4771.0], [474.0, 4300.0], [473.0, 4689.0], [472.0, 4817.0], [471.0, 4636.0], [470.0, 4412.0], [469.0, 4556.0], [468.0, 4373.0], [483.0, 4241.0], [494.0, 4621.8], [495.0, 4210.0], [493.0, 4763.0], [489.0, 4949.0], [487.0, 4720.5], [485.0, 4558.0], [484.0, 4678.0], [482.0, 4692.0], [481.0, 4768.0], [480.0, 4343.0], [509.0, 4745.0], [499.0, 1797.3333333333333], [510.0, 4362.0], [508.0, 4322.0], [507.0, 4284.0], [506.0, 4862.0], [505.0, 4448.5], [503.0, 4839.0], [498.0, 4765.0], [497.0, 4712.0], [502.0, 4348.0], [501.0, 4165.0], [500.0, 4180.0], [536.0, 4525.0], [541.0, 4409.5], [543.0, 4650.0], [528.0, 4619.0], [530.0, 4630.0], [529.0, 4802.0], [539.0, 4535.0], [538.0, 4338.0], [537.0, 4694.0], [527.0, 4957.0], [513.0, 4850.0], [512.0, 4619.5], [515.0, 4405.0], [514.0, 4791.0], [519.0, 4361.666666666667], [516.0, 4749.0], [526.0, 4555.5], [524.0, 4444.0], [523.0, 4425.0], [521.0, 4762.0], [520.0, 4927.0], [535.0, 4239.0], [534.0, 4735.0], [533.0, 4419.0], [532.0, 4714.5], [569.0, 4398.0], [574.0, 4160.0], [547.0, 1891.0], [546.0, 4979.0], [545.0, 4643.0], [544.0, 4288.0], [550.0, 4441.5], [548.0, 4208.0], [559.0, 4479.0], [558.0, 4765.0], [557.0, 4413.0], [556.0, 4943.0], [555.0, 4511.0], [553.0, 4651.0], [552.0, 4295.0], [575.0, 4415.0], [561.0, 4527.5], [564.0, 4404.5], [562.0, 4411.0], [573.0, 4345.0], [572.0, 4103.0], [570.0, 4713.0], [567.0, 4394.0], [566.0, 4216.5], [600.0, 4714.0], [606.0, 4620.0], [607.0, 4464.0], [592.0, 4449.0], [594.0, 4908.0], [593.0, 4931.0], [605.0, 4659.0], [604.0, 4593.5], [602.0, 4448.5], [591.0, 4488.0], [577.0, 4092.0], [576.0, 4594.0], [579.0, 4649.0], [578.0, 4366.0], [582.0, 4069.0], [581.0, 4681.5], [590.0, 4637.0], [589.0, 4120.0], [588.0, 4163.0], [587.0, 4136.0], [586.0, 4936.0], [585.0, 4828.0], [584.0, 4224.0], [599.0, 4656.0], [597.0, 4744.0], [596.0, 4242.0], [595.0, 4207.0], [635.0, 4295.0], [613.0, 2645.0], [623.0, 4066.0], [608.0, 4647.0], [610.0, 4231.0], [609.0, 4606.0], [612.0, 4172.0], [611.0, 4548.0], [622.0, 4030.0], [621.0, 4031.0], [620.0, 4674.0], [619.0, 4149.0], [618.0, 4450.0], [617.0, 4563.0], [616.0, 4208.0], [639.0, 4398.0], [625.0, 4402.0], [627.0, 3991.0], [626.0, 4241.0], [629.0, 4266.0], [628.0, 4510.0], [638.0, 4626.0], [637.0, 4349.5], [634.0, 4570.0], [633.0, 4650.0], [632.0, 4490.0], [614.0, 4171.0], [631.0, 4571.0], [630.0, 4767.0], [668.0, 4236.0], [670.0, 4332.0], [658.0, 4286.0], [657.0, 4625.5], [667.0, 4233.0], [666.0, 4209.0], [665.0, 4046.0], [664.0, 4402.0], [655.0, 4470.5], [642.0, 4448.0], [641.0, 4696.0], [644.0, 3972.0], [643.0, 4258.0], [646.0, 4549.0], [645.0, 4261.0], [653.0, 4048.5], [651.0, 4286.666666666667], [648.0, 4232.5], [662.0, 4543.0], [661.0, 4531.0], [660.0, 4044.0], [659.0, 4569.0], [696.0, 3951.0], [700.0, 4336.0], [703.0, 3860.0], [689.0, 4187.5], [693.0, 4392.0], [690.0, 4156.0], [702.0, 4668.0], [701.0, 4357.0], [699.0, 4506.0], [698.0, 4362.0], [697.0, 4082.0], [687.0, 4314.0], [672.0, 4428.0], [674.0, 4697.0], [673.0, 4543.0], [676.0, 4482.0], [675.0, 4425.0], [679.0, 4549.0], [678.0, 4294.5], [686.0, 4389.0], [685.0, 4443.0], [684.0, 4265.5], [682.0, 4567.0], [680.0, 4485.0], [695.0, 4587.0], [694.0, 4050.0], [728.0, 3852.0], [732.0, 4332.0], [711.0, 3118.0], [709.0, 4426.0], [708.0, 4424.0], [707.0, 4704.0], [706.0, 4356.0], [704.0, 4062.0], [719.0, 4148.0], [718.0, 4333.0], [717.0, 4334.5], [715.0, 4497.0], [714.0, 4071.0], [713.0, 4399.5], [735.0, 4181.0], [722.0, 4201.5], [720.0, 4449.0], [724.0, 4666.0], [723.0, 4245.0], [727.0, 4054.0], [725.0, 4024.0], [734.0, 4461.0], [733.0, 3981.0], [731.0, 4264.0], [730.0, 4141.0], [729.0, 4375.0], [761.0, 4322.0], [766.0, 3841.0], [767.0, 4407.0], [752.0, 4322.0], [755.0, 4003.0], [753.0, 4145.0], [757.0, 3874.0], [756.0, 4232.0], [765.0, 3818.0], [764.0, 4129.0], [763.0, 4166.5], [760.0, 4179.0], [742.0, 3990.0], [741.0, 4207.0], [740.0, 4583.0], [739.0, 4402.0], [738.0, 4512.5], [736.0, 3988.0], [751.0, 4146.0], [750.0, 4298.0], [749.0, 4068.0], [748.0, 4331.0], [747.0, 4573.0], [746.0, 4447.0], [745.0, 4083.0], [744.0, 4089.0], [759.0, 4017.0], [758.0, 4660.0], [794.0, 4373.0], [798.0, 4063.0], [799.0, 4010.0], [785.0, 4184.0], [784.0, 4350.5], [787.0, 3833.0], [786.0, 4179.0], [789.0, 3984.0], [788.0, 4224.0], [797.0, 4427.0], [796.0, 3815.0], [795.0, 3962.0], [792.0, 4196.0], [775.0, 4039.0], [774.0, 3791.0], [773.0, 4147.0], [772.0, 4298.0], [771.0, 4528.0], [770.0, 4161.0], [768.0, 3728.0], [782.0, 4243.0], [781.0, 4142.0], [779.0, 3997.0], [778.0, 4102.0], [777.0, 4256.0], [776.0, 4359.0], [791.0, 4270.0], [790.0, 3790.0], [825.0, 4449.0], [830.0, 3694.0], [831.0, 4313.0], [817.0, 4146.0], [816.0, 3945.0], [820.0, 3799.5], [818.0, 4303.0], [829.0, 4287.0], [828.0, 4025.5], [826.0, 4135.0], [824.0, 4091.5], [807.0, 4236.0], [806.0, 3970.0], [805.0, 4288.0], [804.0, 4142.0], [803.0, 4177.0], [802.0, 3997.0], [801.0, 4256.0], [800.0, 3897.0], [815.0, 4349.0], [814.0, 4026.0], [813.0, 3835.0], [812.0, 4138.0], [811.0, 4401.0], [810.0, 4251.0], [809.0, 4198.0], [808.0, 3994.0], [822.0, 4339.0], [821.0, 4180.0], [857.0, 4238.0], [862.0, 4176.0], [863.0, 4128.0], [849.0, 3913.0], [848.0, 4018.0], [852.0, 3932.5], [851.0, 4179.0], [861.0, 4224.0], [860.0, 3745.0], [859.0, 4098.0], [856.0, 3960.0], [839.0, 4294.0], [838.0, 3730.0], [836.0, 4268.0], [835.0, 3912.0], [834.0, 3998.0], [833.0, 4341.0], [832.0, 4152.0], [845.0, 3766.0], [844.0, 3933.0], [842.0, 3847.0], [841.0, 4048.0], [840.0, 3921.0], [855.0, 3914.0], [854.0, 3995.0], [892.0, 3353.0], [895.0, 3754.0], [880.0, 3456.0], [882.0, 3780.0], [881.0, 4063.0], [885.0, 3930.0], [884.0, 3627.5], [894.0, 3564.0], [893.0, 3496.0], [891.0, 3839.0], [890.0, 3762.0], [889.0, 3396.0], [888.0, 3932.0], [879.0, 3823.0], [864.0, 3958.0], [866.0, 4008.0], [865.0, 3978.0], [868.0, 4213.0], [867.0, 4114.0], [870.0, 3761.0], [869.0, 3996.0], [877.0, 3516.0], [876.0, 3856.0], [875.0, 3742.5], [873.0, 3804.0], [872.0, 3903.5], [887.0, 3468.0], [886.0, 3989.0], [924.0, 3127.0], [927.0, 2366.0], [913.0, 3679.0], [912.0, 3909.0], [915.0, 3801.0], [914.0, 3775.0], [917.0, 3711.0], [916.0, 3512.0], [926.0, 2283.0], [925.0, 2462.0], [923.0, 3327.0], [922.0, 3532.0], [921.0, 3496.0], [920.0, 3382.0], [911.0, 3599.0], [897.0, 3672.0], [896.0, 3810.0], [900.0, 3936.5], [898.0, 4052.0], [903.0, 3401.0], [902.0, 3556.0], [910.0, 3814.0], [909.0, 3949.0], [908.0, 3381.0], [907.0, 3449.0], [906.0, 3681.0], [905.0, 3703.0], [904.0, 3613.0], [919.0, 3056.0], [918.0, 3197.0], [943.0, 1065.0], [946.0, 995.0], [945.0, 1046.0], [944.0, 1029.0], [935.0, 2035.0], [934.0, 2096.0], [933.0, 2163.0], [932.0, 2283.0], [931.0, 2385.0], [930.0, 2370.0], [929.0, 2207.0], [928.0, 2539.0], [942.0, 1068.0], [941.0, 1146.0], [940.0, 1308.0], [939.0, 1489.0], [938.0, 1726.0], [937.0, 1835.0], [936.0, 1928.0], [1.0, 9523.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[457.8160000000006, 4292.090999999995]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 782.0], [3.0, 778.0], [4.0, 791.0], [5.0, 774.0], [6.0, 779.0], [7.0, 802.0], [8.0, 775.0], [9.0, 789.0], [10.0, 802.0], [11.0, 780.0], [12.0, 763.0], [13.0, 798.0], [14.0, 760.0], [15.0, 789.0], [16.0, 764.0], [17.0, 779.0], [18.0, 790.0], [19.0, 202.75], [20.0, 260.33333333333337], [21.0, 402.5], [22.0, 404.5], [23.0, 794.0], [24.0, 761.0], [25.0, 18.0], [26.0, 778.0], [27.0, 802.0], [28.0, 767.0], [29.0, 748.0], [30.0, 796.0], [31.0, 798.0], [33.0, 781.0], [32.0, 774.0], [34.0, 410.0], [35.0, 796.0], [37.0, 798.0], [36.0, 746.0], [39.0, 756.0], [38.0, 769.0], [41.0, 793.0], [40.0, 794.0], [43.0, 775.0], [42.0, 728.0], [45.0, 728.0], [44.0, 760.0], [47.0, 791.0], [46.0, 792.0], [49.0, 756.0], [48.0, 752.0], [51.0, 735.0], [50.0, 792.0], [53.0, 274.33333333333337], [52.0, 391.0], [55.0, 765.0], [54.0, 795.0], [57.0, 749.0], [56.0, 753.0], [59.0, 770.0], [58.0, 786.0], [61.0, 795.0], [60.0, 739.0], [63.0, 787.0], [62.0, 772.0], [67.0, 796.0], [66.0, 775.0], [65.0, 760.0], [64.0, 756.0], [71.0, 803.0], [70.0, 739.0], [69.0, 742.0], [68.0, 737.0], [75.0, 771.0], [74.0, 751.0], [73.0, 754.0], [72.0, 770.0], [79.0, 695.0], [78.0, 778.0], [77.0, 807.0], [76.0, 756.0], [83.0, 739.0], [82.0, 737.0], [81.0, 772.0], [87.0, 275.66666666666663], [86.0, 409.5], [85.0, 741.0], [84.0, 693.0], [91.0, 761.0], [90.0, 702.0], [89.0, 738.0], [88.0, 695.0], [95.0, 789.0], [94.0, 733.0], [93.0, 780.0], [92.0, 748.0], [99.0, 730.0], [98.0, 801.0], [97.0, 735.0], [96.0, 729.0], [103.0, 404.5], [102.0, 742.0], [101.0, 804.0], [100.0, 795.0], [106.0, 378.5], [107.0, 725.0], [105.0, 765.0], [104.0, 699.0], [109.0, 396.0], [111.0, 317.0], [110.0, 799.0], [108.0, 769.0], [112.0, 241.0], [115.0, 788.0], [114.0, 723.0], [113.0, 736.0], [119.0, 313.0], [118.0, 792.0], [117.0, 723.0], [116.0, 797.0], [120.0, 386.5], [123.0, 718.0], [122.0, 769.0], [121.0, 793.0], [124.0, 443.0], [127.0, 807.0], [126.0, 711.0], [125.0, 795.0], [135.0, 412.0], [134.0, 684.0], [133.0, 766.0], [132.0, 716.0], [131.0, 798.0], [130.0, 710.0], [129.0, 705.0], [128.0, 726.0], [137.0, 208.33333333333331], [136.0, 338.0], [138.0, 233.0], [143.0, 794.0], [142.0, 698.0], [141.0, 727.0], [140.0, 794.0], [139.0, 706.0], [146.0, 305.66666666666663], [144.0, 327.0], [145.0, 424.5], [148.0, 443.0], [151.0, 675.0], [150.0, 738.0], [149.0, 673.0], [147.0, 724.0], [157.0, 464.0], [159.0, 770.0], [158.0, 680.0], [156.0, 747.0], [155.0, 679.0], [154.0, 742.0], [153.0, 679.0], [152.0, 741.0], [160.0, 417.0], [163.0, 422.5], [167.0, 433.0], [166.0, 732.0], [165.0, 742.0], [164.0, 781.0], [162.0, 773.0], [161.0, 679.0], [175.0, 477.0], [174.0, 430.0], [173.0, 379.66666666666663], [172.0, 448.5], [171.0, 351.33333333333337], [170.0, 240.99999999999997], [169.0, 384.66666666666663], [168.0, 465.5], [180.0, 481.0], [179.0, 375.0], [178.0, 375.33333333333337], [177.0, 436.5], [176.0, 358.33333333333337], [182.0, 336.5], [183.0, 789.0], [181.0, 741.0], [190.0, 289.6666666666667], [189.0, 339.0], [191.0, 232.0], [188.0, 460.5], [187.0, 767.0], [186.0, 708.0], [185.0, 794.0], [184.0, 688.0], [192.0, 381.5], [194.0, 210.83333333333334], [195.0, 476.0], [193.0, 322.2], [199.0, 773.0], [198.0, 675.0], [197.0, 670.0], [196.0, 664.0], [207.0, 687.0], [206.0, 709.0], [205.0, 691.0], [204.0, 677.0], [203.0, 653.0], [202.0, 676.0], [201.0, 673.0], [200.0, 750.0], [215.0, 685.0], [214.0, 681.0], [213.0, 739.5], [211.0, 646.0], [210.0, 602.0], [209.0, 597.0], [208.0, 676.0], [223.0, 759.0], [222.0, 649.0], [221.0, 607.0], [220.0, 691.0], [219.0, 669.0], [218.0, 603.0], [217.0, 644.0], [216.0, 757.0], [231.0, 432.5], [230.0, 393.0], [229.0, 768.0], [228.0, 647.0], [227.0, 765.0], [226.0, 665.0], [225.0, 685.0], [224.0, 729.0], [232.0, 448.5], [235.0, 516.0], [239.0, 645.0], [238.0, 660.0], [237.0, 638.0], [236.0, 640.0], [234.0, 637.0], [233.0, 641.0], [247.0, 381.0], [246.0, 760.0], [245.0, 646.0], [244.0, 634.0], [243.0, 754.0], [242.0, 639.0], [241.0, 667.0], [240.0, 698.0], [248.0, 479.0], [250.0, 387.0], [252.0, 485.5], [253.0, 362.5], [255.0, 480.5], [254.0, 638.0], [251.0, 668.0], [249.0, 638.0], [269.0, 330.2], [257.0, 470.5], [256.0, 492.0], [258.0, 465.0], [261.0, 499.0], [260.0, 568.0], [262.0, 665.0], [263.0, 664.0], [265.0, 456.0], [264.0, 556.0], [267.0, 454.0], [266.0, 681.0], [270.0, 359.5], [271.0, 346.8], [268.0, 456.0], [259.0, 661.0], [284.0, 397.5], [272.0, 379.3333333333333], [273.0, 390.66666666666663], [275.0, 462.5], [274.0, 641.0], [277.0, 410.0], [276.0, 673.0], [278.0, 643.0], [279.0, 603.0], [287.0, 638.0], [281.0, 610.0], [280.0, 536.0], [286.0, 705.0], [285.0, 611.0], [283.0, 703.0], [282.0, 636.0], [302.0, 420.0], [291.0, 368.25], [296.0, 358.6666666666667], [295.0, 399.66666666666663], [288.0, 663.0], [290.0, 664.0], [289.0, 536.0], [294.0, 641.0], [293.0, 543.0], [292.0, 582.0], [297.0, 383.66666666666663], [299.0, 395.0], [298.0, 604.0], [301.0, 444.0], [300.0, 364.6666666666667], [303.0, 418.0], [318.0, 383.0], [311.0, 370.3333333333333], [304.0, 495.5], [305.0, 588.0], [307.0, 592.0], [306.0, 711.0], [309.0, 482.5], [308.0, 653.0], [310.0, 650.0], [315.0, 445.5], [319.0, 599.0], [313.0, 535.0], [312.0, 646.0], [317.0, 623.0], [316.0, 591.0], [314.0, 619.0], [332.0, 449.5], [320.0, 463.5], [321.0, 644.0], [322.0, 414.0], [323.0, 461.0], [326.0, 422.0], [325.0, 539.0], [324.0, 602.0], [327.0, 591.0], [328.0, 445.5], [329.0, 625.0], [331.0, 600.0], [330.0, 538.0], [334.0, 494.5], [335.0, 473.5], [333.0, 643.0], [350.0, 432.5], [337.0, 449.5], [339.0, 375.0], [338.0, 570.0], [341.0, 337.0], [340.0, 605.0], [342.0, 413.0], [343.0, 609.0], [336.0, 647.0], [351.0, 272.0], [345.0, 574.0], [344.0, 522.0], [349.0, 653.0], [348.0, 597.0], [347.0, 618.0], [346.0, 598.0], [367.0, 451.0], [356.0, 359.0], [357.0, 536.0], [359.0, 505.0], [353.0, 602.0], [352.0, 625.5], [355.0, 517.0], [354.0, 571.0], [358.0, 597.0], [360.0, 394.0], [364.0, 351.66666666666663], [365.0, 421.0], [366.0, 514.0], [363.0, 508.0], [362.0, 581.0], [361.0, 591.0], [382.0, 529.0], [376.0, 323.0], [375.0, 440.0], [377.0, 478.0], [379.0, 361.5], [383.0, 567.0], [380.0, 577.0], [371.0, 580.0], [370.0, 585.0], [369.0, 576.5], [378.0, 608.0], [374.0, 546.0], [373.0, 511.0], [372.0, 544.0], [387.0, 364.0], [391.0, 328.5], [392.0, 332.75], [396.0, 382.0], [398.0, 575.0], [397.0, 474.0], [399.0, 479.0], [390.0, 355.0], [389.0, 344.6], [388.0, 357.6666666666667], [386.0, 439.5], [385.0, 393.0], [384.0, 568.0], [393.0, 347.6666666666667], [394.0, 384.5], [395.0, 352.6666666666667], [415.0, 489.0], [405.0, 300.0], [404.0, 575.0], [407.0, 540.0], [401.0, 485.0], [400.0, 574.0], [406.0, 490.0], [403.0, 348.3333333333333], [412.0, 493.0], [402.0, 390.6666666666667], [411.0, 375.0], [410.0, 468.3333333333333], [409.0, 300.0], [408.0, 489.0], [414.0, 541.0], [413.0, 537.0], [429.0, 500.0], [418.0, 359.5], [416.0, 420.0], [419.0, 374.0], [428.0, 500.0], [417.0, 416.5], [420.0, 378.0], [421.0, 494.0], [423.0, 526.0], [422.0, 536.0], [425.0, 299.0], [424.0, 534.0], [427.0, 560.0], [426.0, 516.0], [431.0, 521.0], [430.0, 532.0], [434.0, 285.0], [436.0, 408.5], [438.0, 412.6], [437.0, 244.0], [439.0, 427.0], [433.0, 484.0], [432.0, 528.0], [442.0, 305.25], [441.0, 338.4], [440.0, 421.5], [446.0, 322.3333333333333], [447.0, 359.875], [443.0, 331.8571428571429], [444.0, 332.7142857142857], [435.0, 523.5], [445.0, 339.3333333333333], [450.0, 342.77777777777777], [449.0, 339.8888888888889], [451.0, 357.2], [460.0, 497.0], [462.0, 414.0], [461.0, 394.5], [448.0, 321.44444444444446], [456.0, 382.5], [457.0, 488.0], [455.0, 387.6666666666667], [454.0, 341.5], [453.0, 389.5], [452.0, 512.0], [463.0, 288.0], [466.0, 434.3333333333333], [474.0, 392.3333333333333], [473.0, 458.0], [475.0, 469.0], [472.0, 439.3333333333333], [471.0, 335.0], [464.0, 481.0], [469.0, 374.42857142857144], [468.0, 403.0], [467.0, 374.0], [477.0, 488.0], [470.0, 390.5], [479.0, 477.0], [478.0, 476.0], [493.0, 383.0], [489.0, 387.7142857142857], [488.0, 382.4], [490.0, 387.77777777777777], [492.0, 383.5], [483.0, 477.0], [482.0, 453.0], [481.0, 466.0], [480.0, 458.0], [491.0, 388.5], [487.0, 421.0], [486.0, 411.0], [485.0, 465.0], [484.0, 476.0], [494.0, 420.5], [495.0, 412.0], [510.0, 431.0], [496.0, 412.5], [497.0, 444.0], [499.0, 462.0], [498.0, 460.0], [503.0, 457.0], [502.0, 461.0], [501.0, 431.0], [500.0, 443.0], [511.0, 451.0], [509.0, 491.0], [508.0, 444.0], [507.0, 430.0], [506.0, 449.0], [505.0, 454.0], [504.0, 431.0], [536.0, 431.0], [527.0, 436.0], [522.0, 413.0], [521.0, 426.0], [520.0, 440.0], [523.0, 422.0], [524.0, 419.5], [526.0, 445.0], [525.0, 425.0], [528.0, 403.5], [530.0, 432.0], [529.0, 448.0], [533.0, 440.0], [531.0, 419.0], [535.0, 420.0], [534.0, 486.0], [541.0, 412.0], [542.0, 427.0], [543.0, 414.0], [540.0, 415.5], [539.0, 404.0], [538.0, 402.3333333333333], [537.0, 410.0], [519.0, 437.0], [518.0, 496.0], [517.0, 426.0], [516.0, 449.0], [515.0, 450.0], [514.0, 431.0], [513.0, 452.0], [512.0, 450.0], [546.0, 420.3333333333333], [548.0, 408.2857142857143], [544.0, 433.0], [545.0, 446.0], [556.0, 427.5], [547.0, 423.5], [551.0, 412.4], [555.0, 434.5], [554.0, 418.5], [553.0, 416.0], [552.0, 419.75], [550.0, 410.66666666666663], [549.0, 417.25], [1.0, 780.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[312.2889999999998, 471.1510000000002]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 5399.0], [3.0, 5374.0], [4.0, 4314.0], [5.0, 5211.0], [6.0, 4653.0], [7.0, 4234.0], [8.0, 4669.0], [9.0, 4453.0], [10.0, 4415.0], [11.0, 4685.0], [12.0, 4611.0], [13.0, 4308.0], [14.0, 4060.0], [15.0, 4130.0], [16.0, 4518.0], [17.0, 3545.0], [19.0, 4102.5], [20.0, 4231.0], [21.0, 3634.0], [22.0, 4363.0], [23.0, 3616.0], [24.0, 3931.0], [25.0, 3744.0], [27.0, 3986.5], [28.0, 3687.0], [29.0, 4409.0], [30.0, 4076.0], [31.0, 3786.0], [33.0, 3524.0], [32.0, 4286.0], [35.0, 4107.0], [34.0, 3490.0], [37.0, 3574.0], [36.0, 4242.0], [39.0, 3258.0], [38.0, 4056.0], [41.0, 3645.0], [40.0, 3705.0], [43.0, 3533.0], [42.0, 4194.0], [45.0, 3416.0], [44.0, 3638.0], [47.0, 3642.5], [48.0, 4136.0], [51.0, 3087.0], [50.0, 3550.0], [53.0, 3616.0], [52.0, 3214.0], [54.0, 3151.0], [57.0, 4170.0], [56.0, 3187.5], [60.0, 3824.3333333333335], [62.0, 3887.0], [67.0, 3521.5], [65.0, 4136.0], [64.0, 3918.5], [71.0, 4122.0], [70.0, 3679.0], [68.0, 3990.0], [75.0, 3973.0], [74.0, 3506.0], [72.0, 4122.0], [79.0, 3152.0], [78.0, 3406.0], [77.0, 3414.0], [76.0, 2990.0], [83.0, 2989.0], [82.0, 3576.0], [81.0, 3469.0], [80.0, 2988.0], [86.0, 3393.0], [85.0, 4070.0], [84.0, 3941.0], [90.0, 3573.0], [89.0, 3320.0], [88.0, 3685.5], [93.0, 3362.6666666666665], [99.0, 3499.5], [98.0, 3291.0], [103.0, 3661.0], [101.0, 3742.5], [107.0, 3531.5], [105.0, 3086.0], [104.0, 3271.0], [109.0, 3742.5], [115.0, 3476.3333333333335], [114.0, 4046.0], [118.0, 3520.0], [117.0, 3496.0], [116.0, 3250.3333333333335], [123.0, 3777.0], [121.0, 3565.3333333333335], [127.0, 3500.5], [125.0, 3896.5], [135.0, 3136.0], [134.0, 3576.5], [131.0, 3749.0], [130.0, 3643.6666666666665], [143.0, 3136.0], [141.0, 3522.75], [137.0, 3740.5], [150.0, 3298.0], [148.0, 3690.0], [147.0, 3341.5], [152.0, 3587.0], [175.0, 4023.0], [172.0, 3889.0], [180.0, 3814.0], [181.0, 3081.0], [196.0, 3572.0540540540537], [197.0, 3769.5], [195.0, 3222.0], [207.0, 3540.0], [204.0, 3680.25], [201.0, 3540.0], [203.0, 4022.0], [200.0, 3946.0], [213.0, 3309.0], [210.0, 3823.5], [223.0, 3496.0], [221.0, 3212.0], [220.0, 3556.5], [216.0, 3568.25], [231.0, 3500.0], [230.0, 4001.0], [229.0, 3681.3333333333335], [228.0, 3599.0], [227.0, 3102.0], [237.0, 3718.3333333333335], [236.0, 2888.0], [234.0, 3897.0], [233.0, 2961.0], [246.0, 3107.0], [242.0, 3669.5], [241.0, 2979.0], [240.0, 3677.0], [254.0, 3487.0], [253.0, 3846.0], [252.0, 3375.0], [250.0, 3401.0], [249.0, 3401.5], [248.0, 3693.0], [271.0, 3336.0], [270.0, 3969.0], [269.0, 3679.0], [268.0, 3286.5], [267.0, 3209.25], [262.0, 3333.0], [259.0, 3389.0], [256.0, 3625.5], [275.0, 3725.0], [287.0, 3540.0], [284.0, 3541.3333333333335], [283.0, 2823.0], [280.0, 3026.5], [278.0, 2896.0], [277.0, 3307.0], [276.0, 3628.0], [274.0, 3763.0], [273.0, 2838.0], [272.0, 3696.0], [291.0, 3095.0], [301.0, 3392.0], [300.0, 3283.3333333333335], [297.0, 3400.0], [296.0, 3545.0], [294.0, 2833.0], [293.0, 3613.5], [289.0, 3498.0], [288.0, 3177.0], [311.0, 3110.0], [310.0, 3798.0], [309.0, 3408.0], [307.0, 3698.0], [306.0, 3230.0], [305.0, 3291.0], [304.0, 3607.0], [334.0, 3494.5], [335.0, 3803.0], [332.0, 3179.0], [331.0, 3799.5], [329.0, 3416.0], [328.0, 3798.0], [327.0, 3861.0], [325.0, 3313.0], [324.0, 3402.4615384615386], [350.0, 3139.5], [351.0, 3420.0], [348.0, 3772.5], [347.0, 3187.0], [345.0, 3422.5], [341.0, 3278.0], [339.0, 2840.0], [338.0, 2903.0], [336.0, 2845.0], [366.0, 2841.0], [367.0, 3351.0], [365.0, 2948.0], [354.0, 3532.0], [352.0, 2774.0], [363.0, 2902.0], [362.0, 3492.3333333333335], [359.0, 3881.0], [358.0, 3437.0], [357.0, 3088.0], [356.0, 3053.0], [383.0, 2989.0], [381.0, 3477.5], [379.0, 3111.0], [376.0, 3398.5], [373.0, 3188.0], [372.0, 3111.5], [369.0, 2975.0], [368.0, 2899.0], [398.0, 2849.0], [399.0, 3694.0], [397.0, 3111.0], [396.0, 3433.0], [395.0, 3803.0], [393.0, 3841.0], [392.0, 2826.0], [391.0, 2809.0], [384.0, 3263.5], [387.0, 2749.0], [386.0, 2816.0], [389.0, 3194.0], [388.0, 3288.0], [412.0, 2716.0], [410.0, 3591.0], [409.0, 3035.3333333333335], [406.0, 3325.0], [405.0, 2846.0], [404.0, 2731.0], [402.0, 3375.5], [400.0, 3418.0], [430.0, 3775.0], [431.0, 2764.0], [429.0, 3679.0], [428.0, 3678.0], [426.0, 3782.0], [425.0, 3473.5], [424.0, 3309.0], [422.0, 3280.142857142857], [419.0, 3476.5], [418.0, 3294.0], [445.0, 2896.0], [447.0, 3108.5], [444.0, 2928.5], [442.0, 2895.0], [441.0, 3569.0], [440.0, 3363.0], [438.0, 3641.6666666666665], [436.0, 3289.0], [434.0, 3285.5], [432.0, 2787.0], [451.0, 2929.0], [461.0, 2705.0], [463.0, 2991.5], [460.0, 3130.5], [458.0, 3338.6666666666665], [455.0, 2996.5], [453.0, 3558.0], [452.0, 3572.0], [450.0, 3298.5], [448.0, 3753.0], [476.0, 637.7777777777778], [469.0, 1587.5], [468.0, 3433.3333333333335], [478.0, 1289.3333333333335], [479.0, 387.0], [477.0, 3240.0], [475.0, 2844.0], [473.0, 2948.0], [471.0, 3631.0], [466.0, 2905.0], [465.0, 3601.0], [470.0, 3758.0], [493.0, 2672.0], [481.0, 701.2222222222222], [480.0, 344.2], [495.0, 3180.5], [492.0, 2707.0], [483.0, 3480.5], [482.0, 3382.0], [491.0, 2958.5], [489.0, 3077.0], [488.0, 3426.0], [487.0, 2990.0], [486.0, 3756.0], [485.0, 3601.0], [511.0, 3432.875], [509.0, 3270.0], [505.0, 2611.0], [508.0, 3276.0], [507.0, 2657.0], [497.0, 3161.5], [542.0, 3197.0], [531.0, 2767.0], [543.0, 2878.0], [528.0, 3211.5], [530.0, 3092.0], [529.0, 2863.0], [541.0, 2597.0], [538.0, 3254.0], [536.0, 3695.0], [518.0, 3609.0], [516.0, 3026.0], [515.0, 2826.0], [513.0, 3518.5], [526.0, 3422.5], [525.0, 3694.0], [524.0, 3191.0], [523.0, 2657.0], [521.0, 2884.3333333333335], [535.0, 3324.5], [533.0, 2664.0], [532.0, 3185.0], [573.0, 3016.0], [574.0, 3058.0], [562.0, 2699.0], [561.0, 3608.0], [571.0, 3639.0], [570.0, 3641.0], [569.0, 3112.0], [568.0, 3129.0], [559.0, 2727.0], [547.0, 3310.5], [545.0, 3155.5], [550.0, 3239.0], [548.0, 3444.0], [558.0, 2789.5], [556.0, 3105.5], [554.0, 3017.0], [552.0, 3685.5], [567.0, 3564.0], [565.0, 2516.0], [564.0, 2672.0], [563.0, 3544.0], [604.0, 2954.0], [578.0, 519.0], [590.0, 3037.0], [577.0, 3628.0], [576.0, 2799.0], [589.0, 3603.0], [588.0, 2879.0], [587.0, 2817.0], [586.0, 3061.0], [585.0, 2753.0], [584.0, 2923.0], [598.0, 558.0], [607.0, 3176.5], [605.0, 3535.0], [603.0, 3398.0], [602.0, 2788.0], [600.0, 3408.0], [583.0, 3258.0], [581.0, 3506.0], [582.0, 2529.0], [580.0, 3077.0], [579.0, 2526.0], [597.0, 3575.0], [596.0, 2621.0], [595.0, 2970.0], [593.0, 3405.0], [592.0, 3108.5], [637.0, 2824.5], [608.0, 1962.5], [623.0, 3385.0], [622.0, 3020.0], [620.0, 2753.0], [619.0, 3098.0], [618.0, 3538.0], [617.0, 2567.0], [616.0, 2647.0], [609.0, 1556.5], [628.0, 1732.0], [627.0, 2499.0], [626.0, 2862.0], [625.0, 3531.0], [624.0, 3405.0], [629.0, 2489.0], [631.0, 2773.0], [630.0, 2892.0], [638.0, 617.0], [639.0, 3167.0], [635.0, 2716.0], [634.0, 2875.0], [633.0, 3383.0], [632.0, 3434.0], [615.0, 2650.0], [614.0, 2967.0], [613.0, 2561.0], [612.0, 3016.5], [610.0, 2903.0], [667.0, 2401.0], [643.0, 1775.0], [654.0, 1661.0], [653.0, 3360.0], [652.0, 3012.5], [650.0, 2632.0], [649.0, 2839.0], [648.0, 2476.0], [655.0, 2674.0], [642.0, 2759.0], [640.0, 3198.0], [671.0, 3267.0], [656.0, 3063.0], [658.0, 2636.0], [657.0, 2484.0], [661.0, 2315.0], [660.0, 2676.5], [663.0, 3404.0], [662.0, 3447.0], [670.0, 2506.0], [668.0, 2853.0], [666.0, 3327.0], [665.0, 3425.0], [664.0, 2559.0], [646.0, 3180.0], [644.0, 2759.0], [679.0, 1258.0], [675.0, 725.3333333333334], [678.0, 1236.3333333333335], [677.0, 1269.25], [676.0, 1330.5714285714284], [673.0, 712.25], [674.0, 1836.8333333333335], [691.0, 2453.0], [693.0, 771.0], [692.0, 1344.25], [695.0, 628.0], [694.0, 1535.8], [690.0, 769.6666666666666], [698.0, 756.5], [699.0, 1352.0], [701.0, 3343.0], [700.0, 2687.5], [703.0, 796.0], [688.0, 2928.75], [702.0, 3223.0], [696.0, 1964.3333333333333], [697.0, 1504.0], [672.0, 750.0], [682.0, 1654.0], [681.0, 3397.0], [680.0, 2515.0], [684.0, 1848.0], [683.0, 3081.0], [685.0, 730.0], [730.0, 2455.5], [734.0, 1355.3333333333333], [719.0, 784.5], [707.0, 1588.0], [706.0, 2530.0], [705.0, 2370.0], [704.0, 2921.0], [708.0, 2640.0], [710.0, 2705.0], [709.0, 2446.0], [728.0, 2488.0], [711.0, 2296.0], [731.0, 3066.0], [733.0, 1363.0], [732.0, 2191.0], [717.0, 1382.0], [718.0, 3310.0], [715.0, 1589.5], [721.0, 2013.4], [714.0, 1555.0], [713.0, 3310.0], [712.0, 2277.0], [723.0, 1649.5], [722.0, 3176.0], [724.0, 3113.0], [726.0, 3207.0], [725.0, 3254.0], [735.0, 1764.5], [763.0, 2325.0], [767.0, 1571.3333333333335], [736.0, 835.0], [737.0, 3191.5], [739.0, 2267.0], [738.0, 3174.0], [751.0, 2127.0], [750.0, 2488.0], [749.0, 3227.0], [748.0, 2645.0], [746.0, 2798.0], [745.0, 2119.0], [744.0, 2907.0], [740.0, 1403.0], [753.0, 890.5], [752.0, 2241.0], [754.0, 2413.5], [755.0, 1750.5], [756.0, 1187.5], [757.0, 1273.75], [759.0, 2250.0], [758.0, 2348.0], [760.0, 1405.0], [743.0, 2188.0], [741.0, 2265.0], [762.0, 3214.0], [761.0, 3195.0], [764.0, 2296.0], [765.0, 1808.5], [766.0, 2512.0], [794.0, 1621.3333333333335], [770.0, 1352.25], [772.0, 1369.6666666666667], [771.0, 2438.0], [773.0, 2252.0], [775.0, 2575.0], [774.0, 2601.0], [769.0, 1429.3333333333333], [768.0, 1403.3333333333333], [783.0, 2328.0], [782.0, 1990.0], [781.0, 2255.0], [780.0, 2662.5], [778.0, 2873.0], [777.0, 2006.0], [776.0, 3148.0], [784.0, 819.0], [786.0, 3089.0], [785.0, 2301.0], [788.0, 2676.0], [787.0, 2315.0], [790.0, 2081.0], [789.0, 3117.0], [793.0, 1968.0], [792.0, 2024.5], [799.0, 1817.5], [797.0, 2241.5], [804.0, 958.0], [800.0, 1640.5], [807.0, 1495.25], [825.0, 1311.0], [824.0, 1909.0], [827.0, 1211.0], [826.0, 1250.0], [817.0, 1407.0], [819.0, 1529.3333333333333], [820.0, 2566.0], [818.0, 1595.0], [822.0, 1489.5], [823.0, 1262.0], [821.0, 1378.25], [816.0, 1690.3333333333335], [806.0, 1289.5], [805.0, 1715.75], [803.0, 1427.5], [808.0, 1676.3333333333335], [809.0, 2991.0], [802.0, 1696.0], [801.0, 2739.0], [810.0, 1675.0], [815.0, 2914.0], [814.0, 2642.5], [812.0, 2933.0], [811.0, 2858.0], [1.0, 5640.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[464.3160000000005, 2801.355000000005]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 946.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7416.666666666667, "minX": 1.66896138E12, "maxY": 3755555.433333333, "series": [{"data": [[1.66896138E12, 3755555.433333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66896138E12, 7416.666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896138E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 471.1510000000002, "minX": 1.66896138E12, "maxY": 4292.090999999995, "series": [{"data": [[1.66896138E12, 4292.090999999995]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66896138E12, 471.1510000000002]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66896138E12, 2801.355000000005]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896138E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 471.13899999999995, "minX": 1.66896138E12, "maxY": 1182.4480000000015, "series": [{"data": [[1.66896138E12, 939.8279999999997]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66896138E12, 471.13899999999995]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66896138E12, 1182.4480000000015]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896138E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 2.024999999999998, "minX": 1.66896138E12, "maxY": 88.20399999999997, "series": [{"data": [[1.66896138E12, 5.954999999999995]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66896138E12, 2.024999999999998]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66896138E12, 88.20399999999997]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896138E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 29.0, "minX": 1.66896138E12, "maxY": 9523.0, "series": [{"data": [[1.66896138E12, 9523.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66896138E12, 4862.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66896138E12, 6460.71]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66896138E12, 5067.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66896138E12, 29.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66896138E12, 3808.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896138E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 131.5, "minX": 3.0, "maxY": 9508.0, "series": [{"data": [[39.0, 4107.0], [10.0, 2065.5], [173.0, 779.0], [714.0, 3247.5], [732.0, 4532.5], [3.0, 8400.0], [52.0, 131.5], [13.0, 995.0], [64.0, 2406.5], [67.0, 5228.0], [20.0, 6446.5], [5.0, 7840.0], [93.0, 3839.0], [6.0, 1603.0], [7.0, 2462.0], [125.0, 9508.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[675.0, 431.0], [202.0, 756.0], [125.0, 184.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 732.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 93.0, "minX": 3.0, "maxY": 1717.0, "series": [{"data": [[39.0, 1330.0], [10.0, 146.0], [173.0, 408.0], [714.0, 1232.0], [732.0, 915.0], [3.0, 245.0], [52.0, 93.0], [13.0, 135.0], [64.0, 998.0], [67.0, 649.0], [20.0, 1014.5], [5.0, 499.0], [93.0, 482.0], [6.0, 923.0], [7.0, 230.0], [125.0, 1717.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[675.0, 431.0], [202.0, 756.0], [125.0, 184.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 732.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66896138E12, "maxY": 50.0, "series": [{"data": [[1.66896138E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896138E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.66896138E12, "maxY": 33.333333333333336, "series": [{"data": [[1.66896138E12, 33.333333333333336]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.66896138E12, 16.666666666666668]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896138E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.66896138E12, "maxY": 16.666666666666668, "series": [{"data": [[1.66896138E12, 16.666666666666668]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66896138E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client with caching-failure", "isController": false}, {"data": [[1.66896138E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896138E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.66896138E12, "maxY": 33.333333333333336, "series": [{"data": [[1.66896138E12, 33.333333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.66896138E12, 16.666666666666668]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896138E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

