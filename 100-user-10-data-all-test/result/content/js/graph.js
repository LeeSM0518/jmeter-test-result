/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4055.0, "minX": 0.0, "maxY": 62892.0, "series": [{"data": [[0.0, 6597.0], [0.1, 6597.0], [0.2, 6597.0], [0.3, 6597.0], [0.4, 6597.0], [0.5, 6597.0], [0.6, 6597.0], [0.7, 6597.0], [0.8, 6597.0], [0.9, 6597.0], [1.0, 6663.0], [1.1, 6663.0], [1.2, 6663.0], [1.3, 6663.0], [1.4, 6663.0], [1.5, 6663.0], [1.6, 6663.0], [1.7, 6663.0], [1.8, 6663.0], [1.9, 6663.0], [2.0, 6737.0], [2.1, 6737.0], [2.2, 6737.0], [2.3, 6737.0], [2.4, 6737.0], [2.5, 6737.0], [2.6, 6737.0], [2.7, 6737.0], [2.8, 6737.0], [2.9, 6737.0], [3.0, 7012.0], [3.1, 7012.0], [3.2, 7012.0], [3.3, 7012.0], [3.4, 7012.0], [3.5, 7012.0], [3.6, 7012.0], [3.7, 7012.0], [3.8, 7012.0], [3.9, 7012.0], [4.0, 7121.0], [4.1, 7121.0], [4.2, 7121.0], [4.3, 7121.0], [4.4, 7121.0], [4.5, 7121.0], [4.6, 7121.0], [4.7, 7121.0], [4.8, 7121.0], [4.9, 7121.0], [5.0, 7513.0], [5.1, 7513.0], [5.2, 7513.0], [5.3, 7513.0], [5.4, 7513.0], [5.5, 7513.0], [5.6, 7513.0], [5.7, 7513.0], [5.8, 7513.0], [5.9, 7513.0], [6.0, 7708.0], [6.1, 7708.0], [6.2, 7708.0], [6.3, 7708.0], [6.4, 7708.0], [6.5, 7708.0], [6.6, 7708.0], [6.7, 7708.0], [6.8, 7708.0], [6.9, 7708.0], [7.0, 7717.0], [7.1, 7717.0], [7.2, 7717.0], [7.3, 7717.0], [7.4, 7717.0], [7.5, 7717.0], [7.6, 7717.0], [7.7, 7717.0], [7.8, 7717.0], [7.9, 7717.0], [8.0, 8044.0], [8.1, 8044.0], [8.2, 8044.0], [8.3, 8044.0], [8.4, 8044.0], [8.5, 8044.0], [8.6, 8044.0], [8.7, 8044.0], [8.8, 8044.0], [8.9, 8044.0], [9.0, 8131.0], [9.1, 8131.0], [9.2, 8131.0], [9.3, 8131.0], [9.4, 8131.0], [9.5, 8131.0], [9.6, 8131.0], [9.7, 8131.0], [9.8, 8131.0], [9.9, 8131.0], [10.0, 12158.0], [10.1, 12158.0], [10.2, 12158.0], [10.3, 12158.0], [10.4, 12158.0], [10.5, 12158.0], [10.6, 12158.0], [10.7, 12158.0], [10.8, 12158.0], [10.9, 12158.0], [11.0, 12262.0], [11.1, 12262.0], [11.2, 12262.0], [11.3, 12262.0], [11.4, 12262.0], [11.5, 12262.0], [11.6, 12262.0], [11.7, 12262.0], [11.8, 12262.0], [11.9, 12262.0], [12.0, 12544.0], [12.1, 12544.0], [12.2, 12544.0], [12.3, 12544.0], [12.4, 12544.0], [12.5, 12544.0], [12.6, 12544.0], [12.7, 12544.0], [12.8, 12544.0], [12.9, 12544.0], [13.0, 12955.0], [13.1, 12955.0], [13.2, 12955.0], [13.3, 12955.0], [13.4, 12955.0], [13.5, 12955.0], [13.6, 12955.0], [13.7, 12955.0], [13.8, 12955.0], [13.9, 12955.0], [14.0, 13164.0], [14.1, 13164.0], [14.2, 13164.0], [14.3, 13164.0], [14.4, 13164.0], [14.5, 13164.0], [14.6, 13164.0], [14.7, 13164.0], [14.8, 13164.0], [14.9, 13164.0], [15.0, 13278.0], [15.1, 13278.0], [15.2, 13278.0], [15.3, 13278.0], [15.4, 13278.0], [15.5, 13278.0], [15.6, 13278.0], [15.7, 13278.0], [15.8, 13278.0], [15.9, 13278.0], [16.0, 13547.0], [16.1, 13547.0], [16.2, 13547.0], [16.3, 13547.0], [16.4, 13547.0], [16.5, 13547.0], [16.6, 13547.0], [16.7, 13547.0], [16.8, 13547.0], [16.9, 13547.0], [17.0, 13747.0], [17.1, 13747.0], [17.2, 13747.0], [17.3, 13747.0], [17.4, 13747.0], [17.5, 13747.0], [17.6, 13747.0], [17.7, 13747.0], [17.8, 13747.0], [17.9, 13747.0], [18.0, 14131.0], [18.1, 14131.0], [18.2, 14131.0], [18.3, 14131.0], [18.4, 14131.0], [18.5, 14131.0], [18.6, 14131.0], [18.7, 14131.0], [18.8, 14131.0], [18.9, 14131.0], [19.0, 14154.0], [19.1, 14154.0], [19.2, 14154.0], [19.3, 14154.0], [19.4, 14154.0], [19.5, 14154.0], [19.6, 14154.0], [19.7, 14154.0], [19.8, 14154.0], [19.9, 14154.0], [20.0, 18187.0], [20.1, 18187.0], [20.2, 18187.0], [20.3, 18187.0], [20.4, 18187.0], [20.5, 18187.0], [20.6, 18187.0], [20.7, 18187.0], [20.8, 18187.0], [20.9, 18187.0], [21.0, 18414.0], [21.1, 18414.0], [21.2, 18414.0], [21.3, 18414.0], [21.4, 18414.0], [21.5, 18414.0], [21.6, 18414.0], [21.7, 18414.0], [21.8, 18414.0], [21.9, 18414.0], [22.0, 18698.0], [22.1, 18698.0], [22.2, 18698.0], [22.3, 18698.0], [22.4, 18698.0], [22.5, 18698.0], [22.6, 18698.0], [22.7, 18698.0], [22.8, 18698.0], [22.9, 18698.0], [23.0, 19465.0], [23.1, 19465.0], [23.2, 19465.0], [23.3, 19465.0], [23.4, 19465.0], [23.5, 19465.0], [23.6, 19465.0], [23.7, 19465.0], [23.8, 19465.0], [23.9, 19465.0], [24.0, 19481.0], [24.1, 19481.0], [24.2, 19481.0], [24.3, 19481.0], [24.4, 19481.0], [24.5, 19481.0], [24.6, 19481.0], [24.7, 19481.0], [24.8, 19481.0], [24.9, 19481.0], [25.0, 19491.0], [25.1, 19491.0], [25.2, 19491.0], [25.3, 19491.0], [25.4, 19491.0], [25.5, 19491.0], [25.6, 19491.0], [25.7, 19491.0], [25.8, 19491.0], [25.9, 19491.0], [26.0, 19510.0], [26.1, 19510.0], [26.2, 19510.0], [26.3, 19510.0], [26.4, 19510.0], [26.5, 19510.0], [26.6, 19510.0], [26.7, 19510.0], [26.8, 19510.0], [26.9, 19510.0], [27.0, 19663.0], [27.1, 19663.0], [27.2, 19663.0], [27.3, 19663.0], [27.4, 19663.0], [27.5, 19663.0], [27.6, 19663.0], [27.7, 19663.0], [27.8, 19663.0], [27.9, 19663.0], [28.0, 19761.0], [28.1, 19761.0], [28.2, 19761.0], [28.3, 19761.0], [28.4, 19761.0], [28.5, 19761.0], [28.6, 19761.0], [28.7, 19761.0], [28.8, 19761.0], [28.9, 19761.0], [29.0, 20460.0], [29.1, 20460.0], [29.2, 20460.0], [29.3, 20460.0], [29.4, 20460.0], [29.5, 20460.0], [29.6, 20460.0], [29.7, 20460.0], [29.8, 20460.0], [29.9, 20460.0], [30.0, 23163.0], [30.1, 23163.0], [30.2, 23163.0], [30.3, 23163.0], [30.4, 23163.0], [30.5, 23163.0], [30.6, 23163.0], [30.7, 23163.0], [30.8, 23163.0], [30.9, 23163.0], [31.0, 23462.0], [31.1, 23462.0], [31.2, 23462.0], [31.3, 23462.0], [31.4, 23462.0], [31.5, 23462.0], [31.6, 23462.0], [31.7, 23462.0], [31.8, 23462.0], [31.9, 23462.0], [32.0, 25108.0], [32.1, 25108.0], [32.2, 25108.0], [32.3, 25108.0], [32.4, 25108.0], [32.5, 25108.0], [32.6, 25108.0], [32.7, 25108.0], [32.8, 25108.0], [32.9, 25108.0], [33.0, 25201.0], [33.1, 25201.0], [33.2, 25201.0], [33.3, 25201.0], [33.4, 25201.0], [33.5, 25201.0], [33.6, 25201.0], [33.7, 25201.0], [33.8, 25201.0], [33.9, 25201.0], [34.0, 25390.0], [34.1, 25390.0], [34.2, 25390.0], [34.3, 25390.0], [34.4, 25390.0], [34.5, 25390.0], [34.6, 25390.0], [34.7, 25390.0], [34.8, 25390.0], [34.9, 25390.0], [35.0, 25415.0], [35.1, 25415.0], [35.2, 25415.0], [35.3, 25415.0], [35.4, 25415.0], [35.5, 25415.0], [35.6, 25415.0], [35.7, 25415.0], [35.8, 25415.0], [35.9, 25415.0], [36.0, 25449.0], [36.1, 25449.0], [36.2, 25449.0], [36.3, 25449.0], [36.4, 25449.0], [36.5, 25449.0], [36.6, 25449.0], [36.7, 25449.0], [36.8, 25449.0], [36.9, 25449.0], [37.0, 25728.0], [37.1, 25728.0], [37.2, 25728.0], [37.3, 25728.0], [37.4, 25728.0], [37.5, 25728.0], [37.6, 25728.0], [37.7, 25728.0], [37.8, 25728.0], [37.9, 25728.0], [38.0, 25915.0], [38.1, 25915.0], [38.2, 25915.0], [38.3, 25915.0], [38.4, 25915.0], [38.5, 25915.0], [38.6, 25915.0], [38.7, 25915.0], [38.8, 25915.0], [38.9, 25915.0], [39.0, 26406.0], [39.1, 26406.0], [39.2, 26406.0], [39.3, 26406.0], [39.4, 26406.0], [39.5, 26406.0], [39.6, 26406.0], [39.7, 26406.0], [39.8, 26406.0], [39.9, 26406.0], [40.0, 29080.0], [40.1, 29080.0], [40.2, 29080.0], [40.3, 29080.0], [40.4, 29080.0], [40.5, 29080.0], [40.6, 29080.0], [40.7, 29080.0], [40.8, 29080.0], [40.9, 29080.0], [41.0, 30354.0], [41.1, 30354.0], [41.2, 30354.0], [41.3, 30354.0], [41.4, 30354.0], [41.5, 30354.0], [41.6, 30354.0], [41.7, 30354.0], [41.8, 30354.0], [41.9, 30354.0], [42.0, 31764.0], [42.1, 31764.0], [42.2, 31764.0], [42.3, 31764.0], [42.4, 31764.0], [42.5, 31764.0], [42.6, 31764.0], [42.7, 31764.0], [42.8, 31764.0], [42.9, 31764.0], [43.0, 32089.0], [43.1, 32089.0], [43.2, 32089.0], [43.3, 32089.0], [43.4, 32089.0], [43.5, 32089.0], [43.6, 32089.0], [43.7, 32089.0], [43.8, 32089.0], [43.9, 32089.0], [44.0, 32102.0], [44.1, 32102.0], [44.2, 32102.0], [44.3, 32102.0], [44.4, 32102.0], [44.5, 32102.0], [44.6, 32102.0], [44.7, 32102.0], [44.8, 32102.0], [44.9, 32102.0], [45.0, 32476.0], [45.1, 32476.0], [45.2, 32476.0], [45.3, 32476.0], [45.4, 32476.0], [45.5, 32476.0], [45.6, 32476.0], [45.7, 32476.0], [45.8, 32476.0], [45.9, 32476.0], [46.0, 32549.0], [46.1, 32549.0], [46.2, 32549.0], [46.3, 32549.0], [46.4, 32549.0], [46.5, 32549.0], [46.6, 32549.0], [46.7, 32549.0], [46.8, 32549.0], [46.9, 32549.0], [47.0, 32562.0], [47.1, 32562.0], [47.2, 32562.0], [47.3, 32562.0], [47.4, 32562.0], [47.5, 32562.0], [47.6, 32562.0], [47.7, 32562.0], [47.8, 32562.0], [47.9, 32562.0], [48.0, 32566.0], [48.1, 32566.0], [48.2, 32566.0], [48.3, 32566.0], [48.4, 32566.0], [48.5, 32566.0], [48.6, 32566.0], [48.7, 32566.0], [48.8, 32566.0], [48.9, 32566.0], [49.0, 32722.0], [49.1, 32722.0], [49.2, 32722.0], [49.3, 32722.0], [49.4, 32722.0], [49.5, 32722.0], [49.6, 32722.0], [49.7, 32722.0], [49.8, 32722.0], [49.9, 32722.0], [50.0, 34850.0], [50.1, 34850.0], [50.2, 34850.0], [50.3, 34850.0], [50.4, 34850.0], [50.5, 34850.0], [50.6, 34850.0], [50.7, 34850.0], [50.8, 34850.0], [50.9, 34850.0], [51.0, 35599.0], [51.1, 35599.0], [51.2, 35599.0], [51.3, 35599.0], [51.4, 35599.0], [51.5, 35599.0], [51.6, 35599.0], [51.7, 35599.0], [51.8, 35599.0], [51.9, 35599.0], [52.0, 37507.0], [52.1, 37507.0], [52.2, 37507.0], [52.3, 37507.0], [52.4, 37507.0], [52.5, 37507.0], [52.6, 37507.0], [52.7, 37507.0], [52.8, 37507.0], [52.9, 37507.0], [53.0, 37800.0], [53.1, 37800.0], [53.2, 37800.0], [53.3, 37800.0], [53.4, 37800.0], [53.5, 37800.0], [53.6, 37800.0], [53.7, 37800.0], [53.8, 37800.0], [53.9, 37800.0], [54.0, 38205.0], [54.1, 38205.0], [54.2, 38205.0], [54.3, 38205.0], [54.4, 38205.0], [54.5, 38205.0], [54.6, 38205.0], [54.7, 38205.0], [54.8, 38205.0], [54.9, 38205.0], [55.0, 38254.0], [55.1, 38254.0], [55.2, 38254.0], [55.3, 38254.0], [55.4, 38254.0], [55.5, 38254.0], [55.6, 38254.0], [55.7, 38254.0], [55.8, 38254.0], [55.9, 38254.0], [56.0, 38605.0], [56.1, 38605.0], [56.2, 38605.0], [56.3, 38605.0], [56.4, 38605.0], [56.5, 38605.0], [56.6, 38605.0], [56.7, 38605.0], [56.8, 38605.0], [56.9, 38605.0], [57.0, 38913.0], [57.1, 38913.0], [57.2, 38913.0], [57.3, 38913.0], [57.4, 38913.0], [57.5, 38913.0], [57.6, 38913.0], [57.7, 38913.0], [57.8, 38913.0], [57.9, 38913.0], [58.0, 38950.0], [58.1, 38950.0], [58.2, 38950.0], [58.3, 38950.0], [58.4, 38950.0], [58.5, 38950.0], [58.6, 38950.0], [58.7, 38950.0], [58.8, 38950.0], [58.9, 38950.0], [59.0, 39156.0], [59.1, 39156.0], [59.2, 39156.0], [59.3, 39156.0], [59.4, 39156.0], [59.5, 39156.0], [59.6, 39156.0], [59.7, 39156.0], [59.8, 39156.0], [59.9, 39156.0], [60.0, 39818.0], [60.1, 39818.0], [60.2, 39818.0], [60.3, 39818.0], [60.4, 39818.0], [60.5, 39818.0], [60.6, 39818.0], [60.7, 39818.0], [60.8, 39818.0], [60.9, 39818.0], [61.0, 40792.0], [61.1, 40792.0], [61.2, 40792.0], [61.3, 40792.0], [61.4, 40792.0], [61.5, 40792.0], [61.6, 40792.0], [61.7, 40792.0], [61.8, 40792.0], [61.9, 40792.0], [62.0, 43576.0], [62.1, 43576.0], [62.2, 43576.0], [62.3, 43576.0], [62.4, 43576.0], [62.5, 43576.0], [62.6, 43576.0], [62.7, 43576.0], [62.8, 43576.0], [62.9, 43576.0], [63.0, 44179.0], [63.1, 44179.0], [63.2, 44179.0], [63.3, 44179.0], [63.4, 44179.0], [63.5, 44179.0], [63.6, 44179.0], [63.7, 44179.0], [63.8, 44179.0], [63.9, 44179.0], [64.0, 44311.0], [64.1, 44311.0], [64.2, 44311.0], [64.3, 44311.0], [64.4, 44311.0], [64.5, 44311.0], [64.6, 44311.0], [64.7, 44311.0], [64.8, 44311.0], [64.9, 44311.0], [65.0, 44512.0], [65.1, 44512.0], [65.2, 44512.0], [65.3, 44512.0], [65.4, 44512.0], [65.5, 44512.0], [65.6, 44512.0], [65.7, 44512.0], [65.8, 44512.0], [65.9, 44512.0], [66.0, 44553.0], [66.1, 44553.0], [66.2, 44553.0], [66.3, 44553.0], [66.4, 44553.0], [66.5, 44553.0], [66.6, 44553.0], [66.7, 44553.0], [66.8, 44553.0], [66.9, 44553.0], [67.0, 45122.0], [67.1, 45122.0], [67.2, 45122.0], [67.3, 45122.0], [67.4, 45122.0], [67.5, 45122.0], [67.6, 45122.0], [67.7, 45122.0], [67.8, 45122.0], [67.9, 45122.0], [68.0, 45315.0], [68.1, 45315.0], [68.2, 45315.0], [68.3, 45315.0], [68.4, 45315.0], [68.5, 45315.0], [68.6, 45315.0], [68.7, 45315.0], [68.8, 45315.0], [68.9, 45315.0], [69.0, 45376.0], [69.1, 45376.0], [69.2, 45376.0], [69.3, 45376.0], [69.4, 45376.0], [69.5, 45376.0], [69.6, 45376.0], [69.7, 45376.0], [69.8, 45376.0], [69.9, 45376.0], [70.0, 45389.0], [70.1, 45389.0], [70.2, 45389.0], [70.3, 45389.0], [70.4, 45389.0], [70.5, 45389.0], [70.6, 45389.0], [70.7, 45389.0], [70.8, 45389.0], [70.9, 45389.0], [71.0, 46696.0], [71.1, 46696.0], [71.2, 46696.0], [71.3, 46696.0], [71.4, 46696.0], [71.5, 46696.0], [71.6, 46696.0], [71.7, 46696.0], [71.8, 46696.0], [71.9, 46696.0], [72.0, 48663.0], [72.1, 48663.0], [72.2, 48663.0], [72.3, 48663.0], [72.4, 48663.0], [72.5, 48663.0], [72.6, 48663.0], [72.7, 48663.0], [72.8, 48663.0], [72.9, 48663.0], [73.0, 49375.0], [73.1, 49375.0], [73.2, 49375.0], [73.3, 49375.0], [73.4, 49375.0], [73.5, 49375.0], [73.6, 49375.0], [73.7, 49375.0], [73.8, 49375.0], [73.9, 49375.0], [74.0, 50895.0], [74.1, 50895.0], [74.2, 50895.0], [74.3, 50895.0], [74.4, 50895.0], [74.5, 50895.0], [74.6, 50895.0], [74.7, 50895.0], [74.8, 50895.0], [74.9, 50895.0], [75.0, 51507.0], [75.1, 51507.0], [75.2, 51507.0], [75.3, 51507.0], [75.4, 51507.0], [75.5, 51507.0], [75.6, 51507.0], [75.7, 51507.0], [75.8, 51507.0], [75.9, 51507.0], [76.0, 51611.0], [76.1, 51611.0], [76.2, 51611.0], [76.3, 51611.0], [76.4, 51611.0], [76.5, 51611.0], [76.6, 51611.0], [76.7, 51611.0], [76.8, 51611.0], [76.9, 51611.0], [77.0, 51964.0], [77.1, 51964.0], [77.2, 51964.0], [77.3, 51964.0], [77.4, 51964.0], [77.5, 51964.0], [77.6, 51964.0], [77.7, 51964.0], [77.8, 51964.0], [77.9, 51964.0], [78.0, 52198.0], [78.1, 52198.0], [78.2, 52198.0], [78.3, 52198.0], [78.4, 52198.0], [78.5, 52198.0], [78.6, 52198.0], [78.7, 52198.0], [78.8, 52198.0], [78.9, 52198.0], [79.0, 52527.0], [79.1, 52527.0], [79.2, 52527.0], [79.3, 52527.0], [79.4, 52527.0], [79.5, 52527.0], [79.6, 52527.0], [79.7, 52527.0], [79.8, 52527.0], [79.9, 52527.0], [80.0, 52852.0], [80.1, 52852.0], [80.2, 52852.0], [80.3, 52852.0], [80.4, 52852.0], [80.5, 52852.0], [80.6, 52852.0], [80.7, 52852.0], [80.8, 52852.0], [80.9, 52852.0], [81.0, 52879.0], [81.1, 52879.0], [81.2, 52879.0], [81.3, 52879.0], [81.4, 52879.0], [81.5, 52879.0], [81.6, 52879.0], [81.7, 52879.0], [81.8, 52879.0], [81.9, 52879.0], [82.0, 54167.0], [82.1, 54167.0], [82.2, 54167.0], [82.3, 54167.0], [82.4, 54167.0], [82.5, 54167.0], [82.6, 54167.0], [82.7, 54167.0], [82.8, 54167.0], [82.9, 54167.0], [83.0, 55091.0], [83.1, 55091.0], [83.2, 55091.0], [83.3, 55091.0], [83.4, 55091.0], [83.5, 55091.0], [83.6, 55091.0], [83.7, 55091.0], [83.8, 55091.0], [83.9, 55091.0], [84.0, 56930.0], [84.1, 56930.0], [84.2, 56930.0], [84.3, 56930.0], [84.4, 56930.0], [84.5, 56930.0], [84.6, 56930.0], [84.7, 56930.0], [84.8, 56930.0], [84.9, 56930.0], [85.0, 57471.0], [85.1, 57471.0], [85.2, 57471.0], [85.3, 57471.0], [85.4, 57471.0], [85.5, 57471.0], [85.6, 57471.0], [85.7, 57471.0], [85.8, 57471.0], [85.9, 57471.0], [86.0, 57568.0], [86.1, 57568.0], [86.2, 57568.0], [86.3, 57568.0], [86.4, 57568.0], [86.5, 57568.0], [86.6, 57568.0], [86.7, 57568.0], [86.8, 57568.0], [86.9, 57568.0], [87.0, 57851.0], [87.1, 57851.0], [87.2, 57851.0], [87.3, 57851.0], [87.4, 57851.0], [87.5, 57851.0], [87.6, 57851.0], [87.7, 57851.0], [87.8, 57851.0], [87.9, 57851.0], [88.0, 57937.0], [88.1, 57937.0], [88.2, 57937.0], [88.3, 57937.0], [88.4, 57937.0], [88.5, 57937.0], [88.6, 57937.0], [88.7, 57937.0], [88.8, 57937.0], [88.9, 57937.0], [89.0, 57987.0], [89.1, 57987.0], [89.2, 57987.0], [89.3, 57987.0], [89.4, 57987.0], [89.5, 57987.0], [89.6, 57987.0], [89.7, 57987.0], [89.8, 57987.0], [89.9, 57987.0], [90.0, 58333.0], [90.1, 58333.0], [90.2, 58333.0], [90.3, 58333.0], [90.4, 58333.0], [90.5, 58333.0], [90.6, 58333.0], [90.7, 58333.0], [90.8, 58333.0], [90.9, 58333.0], [91.0, 58604.0], [91.1, 58604.0], [91.2, 58604.0], [91.3, 58604.0], [91.4, 58604.0], [91.5, 58604.0], [91.6, 58604.0], [91.7, 58604.0], [91.8, 58604.0], [91.9, 58604.0], [92.0, 58837.0], [92.1, 58837.0], [92.2, 58837.0], [92.3, 58837.0], [92.4, 58837.0], [92.5, 58837.0], [92.6, 58837.0], [92.7, 58837.0], [92.8, 58837.0], [92.9, 58837.0], [93.0, 59981.0], [93.1, 59981.0], [93.2, 59981.0], [93.3, 59981.0], [93.4, 59981.0], [93.5, 59981.0], [93.6, 59981.0], [93.7, 59981.0], [93.8, 59981.0], [93.9, 59981.0], [94.0, 60176.0], [94.1, 60176.0], [94.2, 60176.0], [94.3, 60176.0], [94.4, 60176.0], [94.5, 60176.0], [94.6, 60176.0], [94.7, 60176.0], [94.8, 60176.0], [94.9, 60176.0], [95.0, 60690.0], [95.1, 60690.0], [95.2, 60690.0], [95.3, 60690.0], [95.4, 60690.0], [95.5, 60690.0], [95.6, 60690.0], [95.7, 60690.0], [95.8, 60690.0], [95.9, 60690.0], [96.0, 60784.0], [96.1, 60784.0], [96.2, 60784.0], [96.3, 60784.0], [96.4, 60784.0], [96.5, 60784.0], [96.6, 60784.0], [96.7, 60784.0], [96.8, 60784.0], [96.9, 60784.0], [97.0, 60917.0], [97.1, 60917.0], [97.2, 60917.0], [97.3, 60917.0], [97.4, 60917.0], [97.5, 60917.0], [97.6, 60917.0], [97.7, 60917.0], [97.8, 60917.0], [97.9, 60917.0], [98.0, 60971.0], [98.1, 60971.0], [98.2, 60971.0], [98.3, 60971.0], [98.4, 60971.0], [98.5, 60971.0], [98.6, 60971.0], [98.7, 60971.0], [98.8, 60971.0], [98.9, 60971.0], [99.0, 61011.0], [99.1, 61011.0], [99.2, 61011.0], [99.3, 61011.0], [99.4, 61011.0], [99.5, 61011.0], [99.6, 61011.0], [99.7, 61011.0], [99.8, 61011.0], [99.9, 61011.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 16207.0], [0.1, 16207.0], [0.2, 16207.0], [0.3, 16207.0], [0.4, 16207.0], [0.5, 16207.0], [0.6, 16207.0], [0.7, 16207.0], [0.8, 16207.0], [0.9, 16207.0], [1.0, 17792.0], [1.1, 17792.0], [1.2, 17792.0], [1.3, 17792.0], [1.4, 17792.0], [1.5, 17792.0], [1.6, 17792.0], [1.7, 17792.0], [1.8, 17792.0], [1.9, 17792.0], [2.0, 18694.0], [2.1, 18694.0], [2.2, 18694.0], [2.3, 18694.0], [2.4, 18694.0], [2.5, 18694.0], [2.6, 18694.0], [2.7, 18694.0], [2.8, 18694.0], [2.9, 18694.0], [3.0, 18943.0], [3.1, 18943.0], [3.2, 18943.0], [3.3, 18943.0], [3.4, 18943.0], [3.5, 18943.0], [3.6, 18943.0], [3.7, 18943.0], [3.8, 18943.0], [3.9, 18943.0], [4.0, 19478.0], [4.1, 19478.0], [4.2, 19478.0], [4.3, 19478.0], [4.4, 19478.0], [4.5, 19478.0], [4.6, 19478.0], [4.7, 19478.0], [4.8, 19478.0], [4.9, 19478.0], [5.0, 19939.0], [5.1, 19939.0], [5.2, 19939.0], [5.3, 19939.0], [5.4, 19939.0], [5.5, 19939.0], [5.6, 19939.0], [5.7, 19939.0], [5.8, 19939.0], [5.9, 19939.0], [6.0, 20305.0], [6.1, 20305.0], [6.2, 20305.0], [6.3, 20305.0], [6.4, 20305.0], [6.5, 20305.0], [6.6, 20305.0], [6.7, 20305.0], [6.8, 20305.0], [6.9, 20305.0], [7.0, 20354.0], [7.1, 20354.0], [7.2, 20354.0], [7.3, 20354.0], [7.4, 20354.0], [7.5, 20354.0], [7.6, 20354.0], [7.7, 20354.0], [7.8, 20354.0], [7.9, 20354.0], [8.0, 20439.0], [8.1, 20439.0], [8.2, 20439.0], [8.3, 20439.0], [8.4, 20439.0], [8.5, 20439.0], [8.6, 20439.0], [8.7, 20439.0], [8.8, 20439.0], [8.9, 20439.0], [9.0, 20459.0], [9.1, 20459.0], [9.2, 20459.0], [9.3, 20459.0], [9.4, 20459.0], [9.5, 20459.0], [9.6, 20459.0], [9.7, 20459.0], [9.8, 20459.0], [9.9, 20459.0], [10.0, 20646.0], [10.1, 20646.0], [10.2, 20646.0], [10.3, 20646.0], [10.4, 20646.0], [10.5, 20646.0], [10.6, 20646.0], [10.7, 20646.0], [10.8, 20646.0], [10.9, 20646.0], [11.0, 20715.0], [11.1, 20715.0], [11.2, 20715.0], [11.3, 20715.0], [11.4, 20715.0], [11.5, 20715.0], [11.6, 20715.0], [11.7, 20715.0], [11.8, 20715.0], [11.9, 20715.0], [12.0, 20738.0], [12.1, 20738.0], [12.2, 20738.0], [12.3, 20738.0], [12.4, 20738.0], [12.5, 20738.0], [12.6, 20738.0], [12.7, 20738.0], [12.8, 20738.0], [12.9, 20738.0], [13.0, 20768.0], [13.1, 20768.0], [13.2, 20768.0], [13.3, 20768.0], [13.4, 20768.0], [13.5, 20768.0], [13.6, 20768.0], [13.7, 20768.0], [13.8, 20768.0], [13.9, 20768.0], [14.0, 20795.0], [14.1, 20795.0], [14.2, 20795.0], [14.3, 20795.0], [14.4, 20795.0], [14.5, 20795.0], [14.6, 20795.0], [14.7, 20795.0], [14.8, 20795.0], [14.9, 20795.0], [15.0, 20811.0], [15.1, 20811.0], [15.2, 20811.0], [15.3, 20811.0], [15.4, 20811.0], [15.5, 20811.0], [15.6, 20811.0], [15.7, 20811.0], [15.8, 20811.0], [15.9, 20811.0], [16.0, 20839.0], [16.1, 20839.0], [16.2, 20839.0], [16.3, 20839.0], [16.4, 20839.0], [16.5, 20839.0], [16.6, 20839.0], [16.7, 20839.0], [16.8, 20839.0], [16.9, 20839.0], [17.0, 20859.0], [17.1, 20859.0], [17.2, 20859.0], [17.3, 20859.0], [17.4, 20859.0], [17.5, 20859.0], [17.6, 20859.0], [17.7, 20859.0], [17.8, 20859.0], [17.9, 20859.0], [18.0, 20875.0], [18.1, 20875.0], [18.2, 20875.0], [18.3, 20875.0], [18.4, 20875.0], [18.5, 20875.0], [18.6, 20875.0], [18.7, 20875.0], [18.8, 20875.0], [18.9, 20875.0], [19.0, 20882.0], [19.1, 20882.0], [19.2, 20882.0], [19.3, 20882.0], [19.4, 20882.0], [19.5, 20882.0], [19.6, 20882.0], [19.7, 20882.0], [19.8, 20882.0], [19.9, 20882.0], [20.0, 20895.0], [20.1, 20895.0], [20.2, 20895.0], [20.3, 20895.0], [20.4, 20895.0], [20.5, 20895.0], [20.6, 20895.0], [20.7, 20895.0], [20.8, 20895.0], [20.9, 20895.0], [21.0, 20898.0], [21.1, 20898.0], [21.2, 20898.0], [21.3, 20898.0], [21.4, 20898.0], [21.5, 20898.0], [21.6, 20898.0], [21.7, 20898.0], [21.8, 20898.0], [21.9, 20898.0], [22.0, 20902.0], [22.1, 20902.0], [22.2, 20902.0], [22.3, 20902.0], [22.4, 20902.0], [22.5, 20902.0], [22.6, 20902.0], [22.7, 20902.0], [22.8, 20902.0], [22.9, 20902.0], [23.0, 20904.0], [23.1, 20904.0], [23.2, 20904.0], [23.3, 20904.0], [23.4, 20904.0], [23.5, 20904.0], [23.6, 20904.0], [23.7, 20904.0], [23.8, 20904.0], [23.9, 20904.0], [24.0, 20935.0], [24.1, 20935.0], [24.2, 20935.0], [24.3, 20935.0], [24.4, 20935.0], [24.5, 20935.0], [24.6, 20935.0], [24.7, 20935.0], [24.8, 20935.0], [24.9, 20935.0], [25.0, 20938.0], [25.1, 20938.0], [25.2, 20938.0], [25.3, 20938.0], [25.4, 20938.0], [25.5, 20938.0], [25.6, 20938.0], [25.7, 20938.0], [25.8, 20938.0], [25.9, 20938.0], [26.0, 21006.0], [26.1, 21006.0], [26.2, 21006.0], [26.3, 21006.0], [26.4, 21006.0], [26.5, 21006.0], [26.6, 21006.0], [26.7, 21006.0], [26.8, 21006.0], [26.9, 21006.0], [27.0, 21017.0], [27.1, 21017.0], [27.2, 21017.0], [27.3, 21017.0], [27.4, 21017.0], [27.5, 21017.0], [27.6, 21017.0], [27.7, 21017.0], [27.8, 21017.0], [27.9, 21017.0], [28.0, 21035.0], [28.1, 21035.0], [28.2, 21035.0], [28.3, 21035.0], [28.4, 21035.0], [28.5, 21035.0], [28.6, 21035.0], [28.7, 21035.0], [28.8, 21035.0], [28.9, 21035.0], [29.0, 21083.0], [29.1, 21083.0], [29.2, 21083.0], [29.3, 21083.0], [29.4, 21083.0], [29.5, 21083.0], [29.6, 21083.0], [29.7, 21083.0], [29.8, 21083.0], [29.9, 21083.0], [30.0, 21101.0], [30.1, 21101.0], [30.2, 21101.0], [30.3, 21101.0], [30.4, 21101.0], [30.5, 21101.0], [30.6, 21101.0], [30.7, 21101.0], [30.8, 21101.0], [30.9, 21101.0], [31.0, 21160.0], [31.1, 21160.0], [31.2, 21160.0], [31.3, 21160.0], [31.4, 21160.0], [31.5, 21160.0], [31.6, 21160.0], [31.7, 21160.0], [31.8, 21160.0], [31.9, 21160.0], [32.0, 21210.0], [32.1, 21210.0], [32.2, 21210.0], [32.3, 21210.0], [32.4, 21210.0], [32.5, 21210.0], [32.6, 21210.0], [32.7, 21210.0], [32.8, 21210.0], [32.9, 21210.0], [33.0, 21212.0], [33.1, 21212.0], [33.2, 21212.0], [33.3, 21212.0], [33.4, 21212.0], [33.5, 21212.0], [33.6, 21212.0], [33.7, 21212.0], [33.8, 21212.0], [33.9, 21212.0], [34.0, 21236.0], [34.1, 21236.0], [34.2, 21236.0], [34.3, 21236.0], [34.4, 21236.0], [34.5, 21236.0], [34.6, 21236.0], [34.7, 21236.0], [34.8, 21236.0], [34.9, 21236.0], [35.0, 21263.0], [35.1, 21263.0], [35.2, 21263.0], [35.3, 21263.0], [35.4, 21263.0], [35.5, 21263.0], [35.6, 21263.0], [35.7, 21263.0], [35.8, 21263.0], [35.9, 21263.0], [36.0, 21283.0], [36.1, 21283.0], [36.2, 21283.0], [36.3, 21283.0], [36.4, 21283.0], [36.5, 21283.0], [36.6, 21283.0], [36.7, 21283.0], [36.8, 21283.0], [36.9, 21283.0], [37.0, 21286.0], [37.1, 21286.0], [37.2, 21286.0], [37.3, 21286.0], [37.4, 21286.0], [37.5, 21286.0], [37.6, 21286.0], [37.7, 21286.0], [37.8, 21286.0], [37.9, 21286.0], [38.0, 21300.0], [38.1, 21300.0], [38.2, 21300.0], [38.3, 21300.0], [38.4, 21300.0], [38.5, 21300.0], [38.6, 21300.0], [38.7, 21300.0], [38.8, 21300.0], [38.9, 21300.0], [39.0, 21300.0], [39.1, 21300.0], [39.2, 21300.0], [39.3, 21300.0], [39.4, 21300.0], [39.5, 21300.0], [39.6, 21300.0], [39.7, 21300.0], [39.8, 21300.0], [39.9, 21300.0], [40.0, 21329.0], [40.1, 21329.0], [40.2, 21329.0], [40.3, 21329.0], [40.4, 21329.0], [40.5, 21329.0], [40.6, 21329.0], [40.7, 21329.0], [40.8, 21329.0], [40.9, 21329.0], [41.0, 21331.0], [41.1, 21331.0], [41.2, 21331.0], [41.3, 21331.0], [41.4, 21331.0], [41.5, 21331.0], [41.6, 21331.0], [41.7, 21331.0], [41.8, 21331.0], [41.9, 21331.0], [42.0, 21333.0], [42.1, 21333.0], [42.2, 21333.0], [42.3, 21333.0], [42.4, 21333.0], [42.5, 21333.0], [42.6, 21333.0], [42.7, 21333.0], [42.8, 21333.0], [42.9, 21333.0], [43.0, 21336.0], [43.1, 21336.0], [43.2, 21336.0], [43.3, 21336.0], [43.4, 21336.0], [43.5, 21336.0], [43.6, 21336.0], [43.7, 21336.0], [43.8, 21336.0], [43.9, 21336.0], [44.0, 21339.0], [44.1, 21339.0], [44.2, 21339.0], [44.3, 21339.0], [44.4, 21339.0], [44.5, 21339.0], [44.6, 21339.0], [44.7, 21339.0], [44.8, 21339.0], [44.9, 21339.0], [45.0, 21347.0], [45.1, 21347.0], [45.2, 21347.0], [45.3, 21347.0], [45.4, 21347.0], [45.5, 21347.0], [45.6, 21347.0], [45.7, 21347.0], [45.8, 21347.0], [45.9, 21347.0], [46.0, 21355.0], [46.1, 21355.0], [46.2, 21355.0], [46.3, 21355.0], [46.4, 21355.0], [46.5, 21355.0], [46.6, 21355.0], [46.7, 21355.0], [46.8, 21355.0], [46.9, 21355.0], [47.0, 21356.0], [47.1, 21356.0], [47.2, 21356.0], [47.3, 21356.0], [47.4, 21356.0], [47.5, 21356.0], [47.6, 21356.0], [47.7, 21356.0], [47.8, 21356.0], [47.9, 21356.0], [48.0, 21358.0], [48.1, 21358.0], [48.2, 21358.0], [48.3, 21358.0], [48.4, 21358.0], [48.5, 21358.0], [48.6, 21358.0], [48.7, 21358.0], [48.8, 21358.0], [48.9, 21358.0], [49.0, 21360.0], [49.1, 21360.0], [49.2, 21360.0], [49.3, 21360.0], [49.4, 21360.0], [49.5, 21360.0], [49.6, 21360.0], [49.7, 21360.0], [49.8, 21360.0], [49.9, 21360.0], [50.0, 21361.0], [50.1, 21361.0], [50.2, 21361.0], [50.3, 21361.0], [50.4, 21361.0], [50.5, 21361.0], [50.6, 21361.0], [50.7, 21361.0], [50.8, 21361.0], [50.9, 21361.0], [51.0, 21363.0], [51.1, 21363.0], [51.2, 21363.0], [51.3, 21363.0], [51.4, 21363.0], [51.5, 21363.0], [51.6, 21363.0], [51.7, 21363.0], [51.8, 21363.0], [51.9, 21363.0], [52.0, 21378.0], [52.1, 21378.0], [52.2, 21378.0], [52.3, 21378.0], [52.4, 21378.0], [52.5, 21378.0], [52.6, 21378.0], [52.7, 21378.0], [52.8, 21378.0], [52.9, 21378.0], [53.0, 21378.0], [53.1, 21378.0], [53.2, 21378.0], [53.3, 21378.0], [53.4, 21378.0], [53.5, 21378.0], [53.6, 21378.0], [53.7, 21378.0], [53.8, 21378.0], [53.9, 21378.0], [54.0, 21378.0], [54.1, 21378.0], [54.2, 21378.0], [54.3, 21378.0], [54.4, 21378.0], [54.5, 21378.0], [54.6, 21378.0], [54.7, 21378.0], [54.8, 21378.0], [54.9, 21378.0], [55.0, 21380.0], [55.1, 21380.0], [55.2, 21380.0], [55.3, 21380.0], [55.4, 21380.0], [55.5, 21380.0], [55.6, 21380.0], [55.7, 21380.0], [55.8, 21380.0], [55.9, 21380.0], [56.0, 21382.0], [56.1, 21382.0], [56.2, 21382.0], [56.3, 21382.0], [56.4, 21382.0], [56.5, 21382.0], [56.6, 21382.0], [56.7, 21382.0], [56.8, 21382.0], [56.9, 21382.0], [57.0, 21382.0], [57.1, 21382.0], [57.2, 21382.0], [57.3, 21382.0], [57.4, 21382.0], [57.5, 21382.0], [57.6, 21382.0], [57.7, 21382.0], [57.8, 21382.0], [57.9, 21382.0], [58.0, 21383.0], [58.1, 21383.0], [58.2, 21383.0], [58.3, 21383.0], [58.4, 21383.0], [58.5, 21383.0], [58.6, 21383.0], [58.7, 21383.0], [58.8, 21383.0], [58.9, 21383.0], [59.0, 21385.0], [59.1, 21385.0], [59.2, 21385.0], [59.3, 21385.0], [59.4, 21385.0], [59.5, 21385.0], [59.6, 21385.0], [59.7, 21385.0], [59.8, 21385.0], [59.9, 21385.0], [60.0, 21393.0], [60.1, 21393.0], [60.2, 21393.0], [60.3, 21393.0], [60.4, 21393.0], [60.5, 21393.0], [60.6, 21393.0], [60.7, 21393.0], [60.8, 21393.0], [60.9, 21393.0], [61.0, 21396.0], [61.1, 21396.0], [61.2, 21396.0], [61.3, 21396.0], [61.4, 21396.0], [61.5, 21396.0], [61.6, 21396.0], [61.7, 21396.0], [61.8, 21396.0], [61.9, 21396.0], [62.0, 21399.0], [62.1, 21399.0], [62.2, 21399.0], [62.3, 21399.0], [62.4, 21399.0], [62.5, 21399.0], [62.6, 21399.0], [62.7, 21399.0], [62.8, 21399.0], [62.9, 21399.0], [63.0, 21400.0], [63.1, 21400.0], [63.2, 21400.0], [63.3, 21400.0], [63.4, 21400.0], [63.5, 21400.0], [63.6, 21400.0], [63.7, 21400.0], [63.8, 21400.0], [63.9, 21400.0], [64.0, 21407.0], [64.1, 21407.0], [64.2, 21407.0], [64.3, 21407.0], [64.4, 21407.0], [64.5, 21407.0], [64.6, 21407.0], [64.7, 21407.0], [64.8, 21407.0], [64.9, 21407.0], [65.0, 21419.0], [65.1, 21419.0], [65.2, 21419.0], [65.3, 21419.0], [65.4, 21419.0], [65.5, 21419.0], [65.6, 21419.0], [65.7, 21419.0], [65.8, 21419.0], [65.9, 21419.0], [66.0, 21422.0], [66.1, 21422.0], [66.2, 21422.0], [66.3, 21422.0], [66.4, 21422.0], [66.5, 21422.0], [66.6, 21422.0], [66.7, 21422.0], [66.8, 21422.0], [66.9, 21422.0], [67.0, 21428.0], [67.1, 21428.0], [67.2, 21428.0], [67.3, 21428.0], [67.4, 21428.0], [67.5, 21428.0], [67.6, 21428.0], [67.7, 21428.0], [67.8, 21428.0], [67.9, 21428.0], [68.0, 21432.0], [68.1, 21432.0], [68.2, 21432.0], [68.3, 21432.0], [68.4, 21432.0], [68.5, 21432.0], [68.6, 21432.0], [68.7, 21432.0], [68.8, 21432.0], [68.9, 21432.0], [69.0, 21440.0], [69.1, 21440.0], [69.2, 21440.0], [69.3, 21440.0], [69.4, 21440.0], [69.5, 21440.0], [69.6, 21440.0], [69.7, 21440.0], [69.8, 21440.0], [69.9, 21440.0], [70.0, 21445.0], [70.1, 21445.0], [70.2, 21445.0], [70.3, 21445.0], [70.4, 21445.0], [70.5, 21445.0], [70.6, 21445.0], [70.7, 21445.0], [70.8, 21445.0], [70.9, 21445.0], [71.0, 21450.0], [71.1, 21450.0], [71.2, 21450.0], [71.3, 21450.0], [71.4, 21450.0], [71.5, 21450.0], [71.6, 21450.0], [71.7, 21450.0], [71.8, 21450.0], [71.9, 21450.0], [72.0, 21450.0], [72.1, 21450.0], [72.2, 21450.0], [72.3, 21450.0], [72.4, 21450.0], [72.5, 21450.0], [72.6, 21450.0], [72.7, 21450.0], [72.8, 21450.0], [72.9, 21450.0], [73.0, 21454.0], [73.1, 21454.0], [73.2, 21454.0], [73.3, 21454.0], [73.4, 21454.0], [73.5, 21454.0], [73.6, 21454.0], [73.7, 21454.0], [73.8, 21454.0], [73.9, 21454.0], [74.0, 21455.0], [74.1, 21455.0], [74.2, 21455.0], [74.3, 21455.0], [74.4, 21455.0], [74.5, 21455.0], [74.6, 21455.0], [74.7, 21455.0], [74.8, 21455.0], [74.9, 21455.0], [75.0, 21464.0], [75.1, 21464.0], [75.2, 21464.0], [75.3, 21464.0], [75.4, 21464.0], [75.5, 21464.0], [75.6, 21464.0], [75.7, 21464.0], [75.8, 21464.0], [75.9, 21464.0], [76.0, 21468.0], [76.1, 21468.0], [76.2, 21468.0], [76.3, 21468.0], [76.4, 21468.0], [76.5, 21468.0], [76.6, 21468.0], [76.7, 21468.0], [76.8, 21468.0], [76.9, 21468.0], [77.0, 21468.0], [77.1, 21468.0], [77.2, 21468.0], [77.3, 21468.0], [77.4, 21468.0], [77.5, 21468.0], [77.6, 21468.0], [77.7, 21468.0], [77.8, 21468.0], [77.9, 21468.0], [78.0, 21469.0], [78.1, 21469.0], [78.2, 21469.0], [78.3, 21469.0], [78.4, 21469.0], [78.5, 21469.0], [78.6, 21469.0], [78.7, 21469.0], [78.8, 21469.0], [78.9, 21469.0], [79.0, 21471.0], [79.1, 21471.0], [79.2, 21471.0], [79.3, 21471.0], [79.4, 21471.0], [79.5, 21471.0], [79.6, 21471.0], [79.7, 21471.0], [79.8, 21471.0], [79.9, 21471.0], [80.0, 21478.0], [80.1, 21478.0], [80.2, 21478.0], [80.3, 21478.0], [80.4, 21478.0], [80.5, 21478.0], [80.6, 21478.0], [80.7, 21478.0], [80.8, 21478.0], [80.9, 21478.0], [81.0, 21482.0], [81.1, 21482.0], [81.2, 21482.0], [81.3, 21482.0], [81.4, 21482.0], [81.5, 21482.0], [81.6, 21482.0], [81.7, 21482.0], [81.8, 21482.0], [81.9, 21482.0], [82.0, 21489.0], [82.1, 21489.0], [82.2, 21489.0], [82.3, 21489.0], [82.4, 21489.0], [82.5, 21489.0], [82.6, 21489.0], [82.7, 21489.0], [82.8, 21489.0], [82.9, 21489.0], [83.0, 21490.0], [83.1, 21490.0], [83.2, 21490.0], [83.3, 21490.0], [83.4, 21490.0], [83.5, 21490.0], [83.6, 21490.0], [83.7, 21490.0], [83.8, 21490.0], [83.9, 21490.0], [84.0, 21494.0], [84.1, 21494.0], [84.2, 21494.0], [84.3, 21494.0], [84.4, 21494.0], [84.5, 21494.0], [84.6, 21494.0], [84.7, 21494.0], [84.8, 21494.0], [84.9, 21494.0], [85.0, 21507.0], [85.1, 21507.0], [85.2, 21507.0], [85.3, 21507.0], [85.4, 21507.0], [85.5, 21507.0], [85.6, 21507.0], [85.7, 21507.0], [85.8, 21507.0], [85.9, 21507.0], [86.0, 21522.0], [86.1, 21522.0], [86.2, 21522.0], [86.3, 21522.0], [86.4, 21522.0], [86.5, 21522.0], [86.6, 21522.0], [86.7, 21522.0], [86.8, 21522.0], [86.9, 21522.0], [87.0, 21524.0], [87.1, 21524.0], [87.2, 21524.0], [87.3, 21524.0], [87.4, 21524.0], [87.5, 21524.0], [87.6, 21524.0], [87.7, 21524.0], [87.8, 21524.0], [87.9, 21524.0], [88.0, 21527.0], [88.1, 21527.0], [88.2, 21527.0], [88.3, 21527.0], [88.4, 21527.0], [88.5, 21527.0], [88.6, 21527.0], [88.7, 21527.0], [88.8, 21527.0], [88.9, 21527.0], [89.0, 21531.0], [89.1, 21531.0], [89.2, 21531.0], [89.3, 21531.0], [89.4, 21531.0], [89.5, 21531.0], [89.6, 21531.0], [89.7, 21531.0], [89.8, 21531.0], [89.9, 21531.0], [90.0, 21534.0], [90.1, 21534.0], [90.2, 21534.0], [90.3, 21534.0], [90.4, 21534.0], [90.5, 21534.0], [90.6, 21534.0], [90.7, 21534.0], [90.8, 21534.0], [90.9, 21534.0], [91.0, 21549.0], [91.1, 21549.0], [91.2, 21549.0], [91.3, 21549.0], [91.4, 21549.0], [91.5, 21549.0], [91.6, 21549.0], [91.7, 21549.0], [91.8, 21549.0], [91.9, 21549.0], [92.0, 21552.0], [92.1, 21552.0], [92.2, 21552.0], [92.3, 21552.0], [92.4, 21552.0], [92.5, 21552.0], [92.6, 21552.0], [92.7, 21552.0], [92.8, 21552.0], [92.9, 21552.0], [93.0, 21569.0], [93.1, 21569.0], [93.2, 21569.0], [93.3, 21569.0], [93.4, 21569.0], [93.5, 21569.0], [93.6, 21569.0], [93.7, 21569.0], [93.8, 21569.0], [93.9, 21569.0], [94.0, 21572.0], [94.1, 21572.0], [94.2, 21572.0], [94.3, 21572.0], [94.4, 21572.0], [94.5, 21572.0], [94.6, 21572.0], [94.7, 21572.0], [94.8, 21572.0], [94.9, 21572.0], [95.0, 21577.0], [95.1, 21577.0], [95.2, 21577.0], [95.3, 21577.0], [95.4, 21577.0], [95.5, 21577.0], [95.6, 21577.0], [95.7, 21577.0], [95.8, 21577.0], [95.9, 21577.0], [96.0, 21582.0], [96.1, 21582.0], [96.2, 21582.0], [96.3, 21582.0], [96.4, 21582.0], [96.5, 21582.0], [96.6, 21582.0], [96.7, 21582.0], [96.8, 21582.0], [96.9, 21582.0], [97.0, 21600.0], [97.1, 21600.0], [97.2, 21600.0], [97.3, 21600.0], [97.4, 21600.0], [97.5, 21600.0], [97.6, 21600.0], [97.7, 21600.0], [97.8, 21600.0], [97.9, 21600.0], [98.0, 21607.0], [98.1, 21607.0], [98.2, 21607.0], [98.3, 21607.0], [98.4, 21607.0], [98.5, 21607.0], [98.6, 21607.0], [98.7, 21607.0], [98.8, 21607.0], [98.9, 21607.0], [99.0, 21609.0], [99.1, 21609.0], [99.2, 21609.0], [99.3, 21609.0], [99.4, 21609.0], [99.5, 21609.0], [99.6, 21609.0], [99.7, 21609.0], [99.8, 21609.0], [99.9, 21609.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 4055.0], [0.1, 4055.0], [0.2, 4055.0], [0.3, 4055.0], [0.4, 4055.0], [0.5, 4055.0], [0.6, 4055.0], [0.7, 4055.0], [0.8, 4055.0], [0.9, 4055.0], [1.0, 6427.0], [1.1, 6427.0], [1.2, 6427.0], [1.3, 6427.0], [1.4, 6427.0], [1.5, 6427.0], [1.6, 6427.0], [1.7, 6427.0], [1.8, 6427.0], [1.9, 6427.0], [2.0, 7025.0], [2.1, 7025.0], [2.2, 7025.0], [2.3, 7025.0], [2.4, 7025.0], [2.5, 7025.0], [2.6, 7025.0], [2.7, 7025.0], [2.8, 7025.0], [2.9, 7025.0], [3.0, 7187.0], [3.1, 7187.0], [3.2, 7187.0], [3.3, 7187.0], [3.4, 7187.0], [3.5, 7187.0], [3.6, 7187.0], [3.7, 7187.0], [3.8, 7187.0], [3.9, 7187.0], [4.0, 7255.0], [4.1, 7255.0], [4.2, 7255.0], [4.3, 7255.0], [4.4, 7255.0], [4.5, 7255.0], [4.6, 7255.0], [4.7, 7255.0], [4.8, 7255.0], [4.9, 7255.0], [5.0, 7269.0], [5.1, 7269.0], [5.2, 7269.0], [5.3, 7269.0], [5.4, 7269.0], [5.5, 7269.0], [5.6, 7269.0], [5.7, 7269.0], [5.8, 7269.0], [5.9, 7269.0], [6.0, 7295.0], [6.1, 7295.0], [6.2, 7295.0], [6.3, 7295.0], [6.4, 7295.0], [6.5, 7295.0], [6.6, 7295.0], [6.7, 7295.0], [6.8, 7295.0], [6.9, 7295.0], [7.0, 7685.0], [7.1, 7685.0], [7.2, 7685.0], [7.3, 7685.0], [7.4, 7685.0], [7.5, 7685.0], [7.6, 7685.0], [7.7, 7685.0], [7.8, 7685.0], [7.9, 7685.0], [8.0, 7732.0], [8.1, 7732.0], [8.2, 7732.0], [8.3, 7732.0], [8.4, 7732.0], [8.5, 7732.0], [8.6, 7732.0], [8.7, 7732.0], [8.8, 7732.0], [8.9, 7732.0], [9.0, 7741.0], [9.1, 7741.0], [9.2, 7741.0], [9.3, 7741.0], [9.4, 7741.0], [9.5, 7741.0], [9.6, 7741.0], [9.7, 7741.0], [9.8, 7741.0], [9.9, 7741.0], [10.0, 9112.0], [10.1, 9112.0], [10.2, 9112.0], [10.3, 9112.0], [10.4, 9112.0], [10.5, 9112.0], [10.6, 9112.0], [10.7, 9112.0], [10.8, 9112.0], [10.9, 9112.0], [11.0, 11733.0], [11.1, 11733.0], [11.2, 11733.0], [11.3, 11733.0], [11.4, 11733.0], [11.5, 11733.0], [11.6, 11733.0], [11.7, 11733.0], [11.8, 11733.0], [11.9, 11733.0], [12.0, 13246.0], [12.1, 13246.0], [12.2, 13246.0], [12.3, 13246.0], [12.4, 13246.0], [12.5, 13246.0], [12.6, 13246.0], [12.7, 13246.0], [12.8, 13246.0], [12.9, 13246.0], [13.0, 13557.0], [13.1, 13557.0], [13.2, 13557.0], [13.3, 13557.0], [13.4, 13557.0], [13.5, 13557.0], [13.6, 13557.0], [13.7, 13557.0], [13.8, 13557.0], [13.9, 13557.0], [14.0, 13826.0], [14.1, 13826.0], [14.2, 13826.0], [14.3, 13826.0], [14.4, 13826.0], [14.5, 13826.0], [14.6, 13826.0], [14.7, 13826.0], [14.8, 13826.0], [14.9, 13826.0], [15.0, 14127.0], [15.1, 14127.0], [15.2, 14127.0], [15.3, 14127.0], [15.4, 14127.0], [15.5, 14127.0], [15.6, 14127.0], [15.7, 14127.0], [15.8, 14127.0], [15.9, 14127.0], [16.0, 14462.0], [16.1, 14462.0], [16.2, 14462.0], [16.3, 14462.0], [16.4, 14462.0], [16.5, 14462.0], [16.6, 14462.0], [16.7, 14462.0], [16.8, 14462.0], [16.9, 14462.0], [17.0, 14528.0], [17.1, 14528.0], [17.2, 14528.0], [17.3, 14528.0], [17.4, 14528.0], [17.5, 14528.0], [17.6, 14528.0], [17.7, 14528.0], [17.8, 14528.0], [17.9, 14528.0], [18.0, 14800.0], [18.1, 14800.0], [18.2, 14800.0], [18.3, 14800.0], [18.4, 14800.0], [18.5, 14800.0], [18.6, 14800.0], [18.7, 14800.0], [18.8, 14800.0], [18.9, 14800.0], [19.0, 14942.0], [19.1, 14942.0], [19.2, 14942.0], [19.3, 14942.0], [19.4, 14942.0], [19.5, 14942.0], [19.6, 14942.0], [19.7, 14942.0], [19.8, 14942.0], [19.9, 14942.0], [20.0, 14987.0], [20.1, 14987.0], [20.2, 14987.0], [20.3, 14987.0], [20.4, 14987.0], [20.5, 14987.0], [20.6, 14987.0], [20.7, 14987.0], [20.8, 14987.0], [20.9, 14987.0], [21.0, 17350.0], [21.1, 17350.0], [21.2, 17350.0], [21.3, 17350.0], [21.4, 17350.0], [21.5, 17350.0], [21.6, 17350.0], [21.7, 17350.0], [21.8, 17350.0], [21.9, 17350.0], [22.0, 18296.0], [22.1, 18296.0], [22.2, 18296.0], [22.3, 18296.0], [22.4, 18296.0], [22.5, 18296.0], [22.6, 18296.0], [22.7, 18296.0], [22.8, 18296.0], [22.9, 18296.0], [23.0, 18426.0], [23.1, 18426.0], [23.2, 18426.0], [23.3, 18426.0], [23.4, 18426.0], [23.5, 18426.0], [23.6, 18426.0], [23.7, 18426.0], [23.8, 18426.0], [23.9, 18426.0], [24.0, 19792.0], [24.1, 19792.0], [24.2, 19792.0], [24.3, 19792.0], [24.4, 19792.0], [24.5, 19792.0], [24.6, 19792.0], [24.7, 19792.0], [24.8, 19792.0], [24.9, 19792.0], [25.0, 20563.0], [25.1, 20563.0], [25.2, 20563.0], [25.3, 20563.0], [25.4, 20563.0], [25.5, 20563.0], [25.6, 20563.0], [25.7, 20563.0], [25.8, 20563.0], [25.9, 20563.0], [26.0, 20600.0], [26.1, 20600.0], [26.2, 20600.0], [26.3, 20600.0], [26.4, 20600.0], [26.5, 20600.0], [26.6, 20600.0], [26.7, 20600.0], [26.8, 20600.0], [26.9, 20600.0], [27.0, 20727.0], [27.1, 20727.0], [27.2, 20727.0], [27.3, 20727.0], [27.4, 20727.0], [27.5, 20727.0], [27.6, 20727.0], [27.7, 20727.0], [27.8, 20727.0], [27.9, 20727.0], [28.0, 20728.0], [28.1, 20728.0], [28.2, 20728.0], [28.3, 20728.0], [28.4, 20728.0], [28.5, 20728.0], [28.6, 20728.0], [28.7, 20728.0], [28.8, 20728.0], [28.9, 20728.0], [29.0, 20761.0], [29.1, 20761.0], [29.2, 20761.0], [29.3, 20761.0], [29.4, 20761.0], [29.5, 20761.0], [29.6, 20761.0], [29.7, 20761.0], [29.8, 20761.0], [29.9, 20761.0], [30.0, 21662.0], [30.1, 21662.0], [30.2, 21662.0], [30.3, 21662.0], [30.4, 21662.0], [30.5, 21662.0], [30.6, 21662.0], [30.7, 21662.0], [30.8, 21662.0], [30.9, 21662.0], [31.0, 23223.0], [31.1, 23223.0], [31.2, 23223.0], [31.3, 23223.0], [31.4, 23223.0], [31.5, 23223.0], [31.6, 23223.0], [31.7, 23223.0], [31.8, 23223.0], [31.9, 23223.0], [32.0, 25283.0], [32.1, 25283.0], [32.2, 25283.0], [32.3, 25283.0], [32.4, 25283.0], [32.5, 25283.0], [32.6, 25283.0], [32.7, 25283.0], [32.8, 25283.0], [32.9, 25283.0], [33.0, 25678.0], [33.1, 25678.0], [33.2, 25678.0], [33.3, 25678.0], [33.4, 25678.0], [33.5, 25678.0], [33.6, 25678.0], [33.7, 25678.0], [33.8, 25678.0], [33.9, 25678.0], [34.0, 25734.0], [34.1, 25734.0], [34.2, 25734.0], [34.3, 25734.0], [34.4, 25734.0], [34.5, 25734.0], [34.6, 25734.0], [34.7, 25734.0], [34.8, 25734.0], [34.9, 25734.0], [35.0, 26987.0], [35.1, 26987.0], [35.2, 26987.0], [35.3, 26987.0], [35.4, 26987.0], [35.5, 26987.0], [35.6, 26987.0], [35.7, 26987.0], [35.8, 26987.0], [35.9, 26987.0], [36.0, 27288.0], [36.1, 27288.0], [36.2, 27288.0], [36.3, 27288.0], [36.4, 27288.0], [36.5, 27288.0], [36.6, 27288.0], [36.7, 27288.0], [36.8, 27288.0], [36.9, 27288.0], [37.0, 27365.0], [37.1, 27365.0], [37.2, 27365.0], [37.3, 27365.0], [37.4, 27365.0], [37.5, 27365.0], [37.6, 27365.0], [37.7, 27365.0], [37.8, 27365.0], [37.9, 27365.0], [38.0, 27451.0], [38.1, 27451.0], [38.2, 27451.0], [38.3, 27451.0], [38.4, 27451.0], [38.5, 27451.0], [38.6, 27451.0], [38.7, 27451.0], [38.8, 27451.0], [38.9, 27451.0], [39.0, 27967.0], [39.1, 27967.0], [39.2, 27967.0], [39.3, 27967.0], [39.4, 27967.0], [39.5, 27967.0], [39.6, 27967.0], [39.7, 27967.0], [39.8, 27967.0], [39.9, 27967.0], [40.0, 27984.0], [40.1, 27984.0], [40.2, 27984.0], [40.3, 27984.0], [40.4, 27984.0], [40.5, 27984.0], [40.6, 27984.0], [40.7, 27984.0], [40.8, 27984.0], [40.9, 27984.0], [41.0, 29161.0], [41.1, 29161.0], [41.2, 29161.0], [41.3, 29161.0], [41.4, 29161.0], [41.5, 29161.0], [41.6, 29161.0], [41.7, 29161.0], [41.8, 29161.0], [41.9, 29161.0], [42.0, 30683.0], [42.1, 30683.0], [42.2, 30683.0], [42.3, 30683.0], [42.4, 30683.0], [42.5, 30683.0], [42.6, 30683.0], [42.7, 30683.0], [42.8, 30683.0], [42.9, 30683.0], [43.0, 31723.0], [43.1, 31723.0], [43.2, 31723.0], [43.3, 31723.0], [43.4, 31723.0], [43.5, 31723.0], [43.6, 31723.0], [43.7, 31723.0], [43.8, 31723.0], [43.9, 31723.0], [44.0, 32505.0], [44.1, 32505.0], [44.2, 32505.0], [44.3, 32505.0], [44.4, 32505.0], [44.5, 32505.0], [44.6, 32505.0], [44.7, 32505.0], [44.8, 32505.0], [44.9, 32505.0], [45.0, 33221.0], [45.1, 33221.0], [45.2, 33221.0], [45.3, 33221.0], [45.4, 33221.0], [45.5, 33221.0], [45.6, 33221.0], [45.7, 33221.0], [45.8, 33221.0], [45.9, 33221.0], [46.0, 33366.0], [46.1, 33366.0], [46.2, 33366.0], [46.3, 33366.0], [46.4, 33366.0], [46.5, 33366.0], [46.6, 33366.0], [46.7, 33366.0], [46.8, 33366.0], [46.9, 33366.0], [47.0, 34113.0], [47.1, 34113.0], [47.2, 34113.0], [47.3, 34113.0], [47.4, 34113.0], [47.5, 34113.0], [47.6, 34113.0], [47.7, 34113.0], [47.8, 34113.0], [47.9, 34113.0], [48.0, 34279.0], [48.1, 34279.0], [48.2, 34279.0], [48.3, 34279.0], [48.4, 34279.0], [48.5, 34279.0], [48.6, 34279.0], [48.7, 34279.0], [48.8, 34279.0], [48.9, 34279.0], [49.0, 34317.0], [49.1, 34317.0], [49.2, 34317.0], [49.3, 34317.0], [49.4, 34317.0], [49.5, 34317.0], [49.6, 34317.0], [49.7, 34317.0], [49.8, 34317.0], [49.9, 34317.0], [50.0, 34588.0], [50.1, 34588.0], [50.2, 34588.0], [50.3, 34588.0], [50.4, 34588.0], [50.5, 34588.0], [50.6, 34588.0], [50.7, 34588.0], [50.8, 34588.0], [50.9, 34588.0], [51.0, 34686.0], [51.1, 34686.0], [51.2, 34686.0], [51.3, 34686.0], [51.4, 34686.0], [51.5, 34686.0], [51.6, 34686.0], [51.7, 34686.0], [51.8, 34686.0], [51.9, 34686.0], [52.0, 35958.0], [52.1, 35958.0], [52.2, 35958.0], [52.3, 35958.0], [52.4, 35958.0], [52.5, 35958.0], [52.6, 35958.0], [52.7, 35958.0], [52.8, 35958.0], [52.9, 35958.0], [53.0, 36987.0], [53.1, 36987.0], [53.2, 36987.0], [53.3, 36987.0], [53.4, 36987.0], [53.5, 36987.0], [53.6, 36987.0], [53.7, 36987.0], [53.8, 36987.0], [53.9, 36987.0], [54.0, 37711.0], [54.1, 37711.0], [54.2, 37711.0], [54.3, 37711.0], [54.4, 37711.0], [54.5, 37711.0], [54.6, 37711.0], [54.7, 37711.0], [54.8, 37711.0], [54.9, 37711.0], [55.0, 39736.0], [55.1, 39736.0], [55.2, 39736.0], [55.3, 39736.0], [55.4, 39736.0], [55.5, 39736.0], [55.6, 39736.0], [55.7, 39736.0], [55.8, 39736.0], [55.9, 39736.0], [56.0, 39764.0], [56.1, 39764.0], [56.2, 39764.0], [56.3, 39764.0], [56.4, 39764.0], [56.5, 39764.0], [56.6, 39764.0], [56.7, 39764.0], [56.8, 39764.0], [56.9, 39764.0], [57.0, 40402.0], [57.1, 40402.0], [57.2, 40402.0], [57.3, 40402.0], [57.4, 40402.0], [57.5, 40402.0], [57.6, 40402.0], [57.7, 40402.0], [57.8, 40402.0], [57.9, 40402.0], [58.0, 40723.0], [58.1, 40723.0], [58.2, 40723.0], [58.3, 40723.0], [58.4, 40723.0], [58.5, 40723.0], [58.6, 40723.0], [58.7, 40723.0], [58.8, 40723.0], [58.9, 40723.0], [59.0, 40978.0], [59.1, 40978.0], [59.2, 40978.0], [59.3, 40978.0], [59.4, 40978.0], [59.5, 40978.0], [59.6, 40978.0], [59.7, 40978.0], [59.8, 40978.0], [59.9, 40978.0], [60.0, 41002.0], [60.1, 41002.0], [60.2, 41002.0], [60.3, 41002.0], [60.4, 41002.0], [60.5, 41002.0], [60.6, 41002.0], [60.7, 41002.0], [60.8, 41002.0], [60.9, 41002.0], [61.0, 41298.0], [61.1, 41298.0], [61.2, 41298.0], [61.3, 41298.0], [61.4, 41298.0], [61.5, 41298.0], [61.6, 41298.0], [61.7, 41298.0], [61.8, 41298.0], [61.9, 41298.0], [62.0, 42612.0], [62.1, 42612.0], [62.2, 42612.0], [62.3, 42612.0], [62.4, 42612.0], [62.5, 42612.0], [62.6, 42612.0], [62.7, 42612.0], [62.8, 42612.0], [62.9, 42612.0], [63.0, 43921.0], [63.1, 43921.0], [63.2, 43921.0], [63.3, 43921.0], [63.4, 43921.0], [63.5, 43921.0], [63.6, 43921.0], [63.7, 43921.0], [63.8, 43921.0], [63.9, 43921.0], [64.0, 44378.0], [64.1, 44378.0], [64.2, 44378.0], [64.3, 44378.0], [64.4, 44378.0], [64.5, 44378.0], [64.6, 44378.0], [64.7, 44378.0], [64.8, 44378.0], [64.9, 44378.0], [65.0, 46017.0], [65.1, 46017.0], [65.2, 46017.0], [65.3, 46017.0], [65.4, 46017.0], [65.5, 46017.0], [65.6, 46017.0], [65.7, 46017.0], [65.8, 46017.0], [65.9, 46017.0], [66.0, 46311.0], [66.1, 46311.0], [66.2, 46311.0], [66.3, 46311.0], [66.4, 46311.0], [66.5, 46311.0], [66.6, 46311.0], [66.7, 46311.0], [66.8, 46311.0], [66.9, 46311.0], [67.0, 47272.0], [67.1, 47272.0], [67.2, 47272.0], [67.3, 47272.0], [67.4, 47272.0], [67.5, 47272.0], [67.6, 47272.0], [67.7, 47272.0], [67.8, 47272.0], [67.9, 47272.0], [68.0, 47657.0], [68.1, 47657.0], [68.2, 47657.0], [68.3, 47657.0], [68.4, 47657.0], [68.5, 47657.0], [68.6, 47657.0], [68.7, 47657.0], [68.8, 47657.0], [68.9, 47657.0], [69.0, 48002.0], [69.1, 48002.0], [69.2, 48002.0], [69.3, 48002.0], [69.4, 48002.0], [69.5, 48002.0], [69.6, 48002.0], [69.7, 48002.0], [69.8, 48002.0], [69.9, 48002.0], [70.0, 48003.0], [70.1, 48003.0], [70.2, 48003.0], [70.3, 48003.0], [70.4, 48003.0], [70.5, 48003.0], [70.6, 48003.0], [70.7, 48003.0], [70.8, 48003.0], [70.9, 48003.0], [71.0, 48052.0], [71.1, 48052.0], [71.2, 48052.0], [71.3, 48052.0], [71.4, 48052.0], [71.5, 48052.0], [71.6, 48052.0], [71.7, 48052.0], [71.8, 48052.0], [71.9, 48052.0], [72.0, 48521.0], [72.1, 48521.0], [72.2, 48521.0], [72.3, 48521.0], [72.4, 48521.0], [72.5, 48521.0], [72.6, 48521.0], [72.7, 48521.0], [72.8, 48521.0], [72.9, 48521.0], [73.0, 50455.0], [73.1, 50455.0], [73.2, 50455.0], [73.3, 50455.0], [73.4, 50455.0], [73.5, 50455.0], [73.6, 50455.0], [73.7, 50455.0], [73.8, 50455.0], [73.9, 50455.0], [74.0, 51318.0], [74.1, 51318.0], [74.2, 51318.0], [74.3, 51318.0], [74.4, 51318.0], [74.5, 51318.0], [74.6, 51318.0], [74.7, 51318.0], [74.8, 51318.0], [74.9, 51318.0], [75.0, 51777.0], [75.1, 51777.0], [75.2, 51777.0], [75.3, 51777.0], [75.4, 51777.0], [75.5, 51777.0], [75.6, 51777.0], [75.7, 51777.0], [75.8, 51777.0], [75.9, 51777.0], [76.0, 52440.0], [76.1, 52440.0], [76.2, 52440.0], [76.3, 52440.0], [76.4, 52440.0], [76.5, 52440.0], [76.6, 52440.0], [76.7, 52440.0], [76.8, 52440.0], [76.9, 52440.0], [77.0, 53285.0], [77.1, 53285.0], [77.2, 53285.0], [77.3, 53285.0], [77.4, 53285.0], [77.5, 53285.0], [77.6, 53285.0], [77.7, 53285.0], [77.8, 53285.0], [77.9, 53285.0], [78.0, 53416.0], [78.1, 53416.0], [78.2, 53416.0], [78.3, 53416.0], [78.4, 53416.0], [78.5, 53416.0], [78.6, 53416.0], [78.7, 53416.0], [78.8, 53416.0], [78.9, 53416.0], [79.0, 53551.0], [79.1, 53551.0], [79.2, 53551.0], [79.3, 53551.0], [79.4, 53551.0], [79.5, 53551.0], [79.6, 53551.0], [79.7, 53551.0], [79.8, 53551.0], [79.9, 53551.0], [80.0, 53687.0], [80.1, 53687.0], [80.2, 53687.0], [80.3, 53687.0], [80.4, 53687.0], [80.5, 53687.0], [80.6, 53687.0], [80.7, 53687.0], [80.8, 53687.0], [80.9, 53687.0], [81.0, 53916.0], [81.1, 53916.0], [81.2, 53916.0], [81.3, 53916.0], [81.4, 53916.0], [81.5, 53916.0], [81.6, 53916.0], [81.7, 53916.0], [81.8, 53916.0], [81.9, 53916.0], [82.0, 54148.0], [82.1, 54148.0], [82.2, 54148.0], [82.3, 54148.0], [82.4, 54148.0], [82.5, 54148.0], [82.6, 54148.0], [82.7, 54148.0], [82.8, 54148.0], [82.9, 54148.0], [83.0, 55778.0], [83.1, 55778.0], [83.2, 55778.0], [83.3, 55778.0], [83.4, 55778.0], [83.5, 55778.0], [83.6, 55778.0], [83.7, 55778.0], [83.8, 55778.0], [83.9, 55778.0], [84.0, 56494.0], [84.1, 56494.0], [84.2, 56494.0], [84.3, 56494.0], [84.4, 56494.0], [84.5, 56494.0], [84.6, 56494.0], [84.7, 56494.0], [84.8, 56494.0], [84.9, 56494.0], [85.0, 58174.0], [85.1, 58174.0], [85.2, 58174.0], [85.3, 58174.0], [85.4, 58174.0], [85.5, 58174.0], [85.6, 58174.0], [85.7, 58174.0], [85.8, 58174.0], [85.9, 58174.0], [86.0, 58598.0], [86.1, 58598.0], [86.2, 58598.0], [86.3, 58598.0], [86.4, 58598.0], [86.5, 58598.0], [86.6, 58598.0], [86.7, 58598.0], [86.8, 58598.0], [86.9, 58598.0], [87.0, 59452.0], [87.1, 59452.0], [87.2, 59452.0], [87.3, 59452.0], [87.4, 59452.0], [87.5, 59452.0], [87.6, 59452.0], [87.7, 59452.0], [87.8, 59452.0], [87.9, 59452.0], [88.0, 59632.0], [88.1, 59632.0], [88.2, 59632.0], [88.3, 59632.0], [88.4, 59632.0], [88.5, 59632.0], [88.6, 59632.0], [88.7, 59632.0], [88.8, 59632.0], [88.9, 59632.0], [89.0, 59688.0], [89.1, 59688.0], [89.2, 59688.0], [89.3, 59688.0], [89.4, 59688.0], [89.5, 59688.0], [89.6, 59688.0], [89.7, 59688.0], [89.8, 59688.0], [89.9, 59688.0], [90.0, 59708.0], [90.1, 59708.0], [90.2, 59708.0], [90.3, 59708.0], [90.4, 59708.0], [90.5, 59708.0], [90.6, 59708.0], [90.7, 59708.0], [90.8, 59708.0], [90.9, 59708.0], [91.0, 59943.0], [91.1, 59943.0], [91.2, 59943.0], [91.3, 59943.0], [91.4, 59943.0], [91.5, 59943.0], [91.6, 59943.0], [91.7, 59943.0], [91.8, 59943.0], [91.9, 59943.0], [92.0, 60069.0], [92.1, 60069.0], [92.2, 60069.0], [92.3, 60069.0], [92.4, 60069.0], [92.5, 60069.0], [92.6, 60069.0], [92.7, 60069.0], [92.8, 60069.0], [92.9, 60069.0], [93.0, 61392.0], [93.1, 61392.0], [93.2, 61392.0], [93.3, 61392.0], [93.4, 61392.0], [93.5, 61392.0], [93.6, 61392.0], [93.7, 61392.0], [93.8, 61392.0], [93.9, 61392.0], [94.0, 61730.0], [94.1, 61730.0], [94.2, 61730.0], [94.3, 61730.0], [94.4, 61730.0], [94.5, 61730.0], [94.6, 61730.0], [94.7, 61730.0], [94.8, 61730.0], [94.9, 61730.0], [95.0, 62519.0], [95.1, 62519.0], [95.2, 62519.0], [95.3, 62519.0], [95.4, 62519.0], [95.5, 62519.0], [95.6, 62519.0], [95.7, 62519.0], [95.8, 62519.0], [95.9, 62519.0], [96.0, 62765.0], [96.1, 62765.0], [96.2, 62765.0], [96.3, 62765.0], [96.4, 62765.0], [96.5, 62765.0], [96.6, 62765.0], [96.7, 62765.0], [96.8, 62765.0], [96.9, 62765.0], [97.0, 62823.0], [97.1, 62823.0], [97.2, 62823.0], [97.3, 62823.0], [97.4, 62823.0], [97.5, 62823.0], [97.6, 62823.0], [97.7, 62823.0], [97.8, 62823.0], [97.9, 62823.0], [98.0, 62856.0], [98.1, 62856.0], [98.2, 62856.0], [98.3, 62856.0], [98.4, 62856.0], [98.5, 62856.0], [98.6, 62856.0], [98.7, 62856.0], [98.8, 62856.0], [98.9, 62856.0], [99.0, 62892.0], [99.1, 62892.0], [99.2, 62892.0], [99.3, 62892.0], [99.4, 62892.0], [99.5, 62892.0], [99.6, 62892.0], [99.7, 62892.0], [99.8, 62892.0], [99.9, 62892.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 4000.0, "maxY": 25.0, "series": [{"data": [[6500.0, 1.0], [6600.0, 1.0], [6700.0, 1.0], [7000.0, 1.0], [7100.0, 1.0], [7500.0, 1.0], [7700.0, 2.0], [8000.0, 1.0], [8100.0, 1.0], [12100.0, 1.0], [12200.0, 1.0], [12500.0, 1.0], [12900.0, 1.0], [13100.0, 1.0], [13200.0, 1.0], [13500.0, 1.0], [13700.0, 1.0], [14100.0, 2.0], [18100.0, 1.0], [18400.0, 1.0], [18600.0, 1.0], [19400.0, 3.0], [19500.0, 1.0], [19600.0, 1.0], [19700.0, 1.0], [20400.0, 1.0], [23100.0, 1.0], [23400.0, 1.0], [25100.0, 1.0], [25200.0, 1.0], [25300.0, 1.0], [25400.0, 2.0], [25700.0, 1.0], [25900.0, 1.0], [26400.0, 1.0], [29000.0, 1.0], [30300.0, 1.0], [31700.0, 1.0], [32000.0, 1.0], [32100.0, 1.0], [32400.0, 1.0], [32500.0, 3.0], [32700.0, 1.0], [34800.0, 1.0], [35500.0, 1.0], [37500.0, 1.0], [37800.0, 1.0], [38200.0, 2.0], [38600.0, 1.0], [38900.0, 2.0], [39100.0, 1.0], [39800.0, 1.0], [40700.0, 1.0], [43500.0, 1.0], [44100.0, 1.0], [44300.0, 1.0], [44500.0, 2.0], [45100.0, 1.0], [45300.0, 3.0], [46600.0, 1.0], [48600.0, 1.0], [49300.0, 1.0], [50800.0, 1.0], [51500.0, 1.0], [51600.0, 1.0], [51900.0, 1.0], [52100.0, 1.0], [52500.0, 1.0], [52800.0, 2.0], [54100.0, 1.0], [55000.0, 1.0], [56900.0, 1.0], [57400.0, 1.0], [57500.0, 1.0], [57800.0, 1.0], [57900.0, 2.0], [58300.0, 1.0], [58600.0, 1.0], [58800.0, 1.0], [59900.0, 1.0], [60100.0, 1.0], [60600.0, 1.0], [60700.0, 1.0], [61000.0, 1.0], [60900.0, 2.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[16200.0, 1.0], [17700.0, 1.0], [18600.0, 1.0], [18900.0, 1.0], [19400.0, 1.0], [19900.0, 1.0], [20300.0, 2.0], [20400.0, 2.0], [21300.0, 25.0], [20600.0, 1.0], [20700.0, 4.0], [20800.0, 7.0], [21000.0, 4.0], [20900.0, 4.0], [21100.0, 2.0], [21200.0, 6.0], [21400.0, 22.0], [21500.0, 12.0], [21600.0, 3.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[4000.0, 1.0], [6400.0, 1.0], [7000.0, 1.0], [7100.0, 1.0], [7200.0, 3.0], [7600.0, 1.0], [7700.0, 2.0], [9100.0, 1.0], [11700.0, 1.0], [13200.0, 1.0], [13500.0, 1.0], [13800.0, 1.0], [14100.0, 1.0], [14400.0, 1.0], [14500.0, 1.0], [14800.0, 1.0], [14900.0, 2.0], [17300.0, 1.0], [18200.0, 1.0], [18400.0, 1.0], [19700.0, 1.0], [20500.0, 1.0], [20600.0, 1.0], [20700.0, 3.0], [21600.0, 1.0], [23200.0, 1.0], [25200.0, 1.0], [25600.0, 1.0], [25700.0, 1.0], [26900.0, 1.0], [27200.0, 1.0], [27300.0, 1.0], [27400.0, 1.0], [27900.0, 2.0], [29100.0, 1.0], [30600.0, 1.0], [31700.0, 1.0], [32500.0, 1.0], [33200.0, 1.0], [33300.0, 1.0], [34100.0, 1.0], [34200.0, 1.0], [34300.0, 1.0], [34500.0, 1.0], [34600.0, 1.0], [35900.0, 1.0], [36900.0, 1.0], [37700.0, 1.0], [39700.0, 2.0], [40400.0, 1.0], [40700.0, 1.0], [40900.0, 1.0], [41000.0, 1.0], [41200.0, 1.0], [42600.0, 1.0], [43900.0, 1.0], [44300.0, 1.0], [46000.0, 1.0], [46300.0, 1.0], [47200.0, 1.0], [47600.0, 1.0], [48000.0, 3.0], [48500.0, 1.0], [50400.0, 1.0], [51300.0, 1.0], [51700.0, 1.0], [52400.0, 1.0], [53200.0, 1.0], [53400.0, 1.0], [53500.0, 1.0], [53600.0, 1.0], [53900.0, 1.0], [54100.0, 1.0], [55700.0, 1.0], [56400.0, 1.0], [58100.0, 1.0], [58500.0, 1.0], [59400.0, 1.0], [59600.0, 2.0], [59700.0, 1.0], [59900.0, 1.0], [60000.0, 1.0], [61300.0, 1.0], [61700.0, 1.0], [62500.0, 1.0], [62700.0, 1.0], [62800.0, 3.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 62800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 300.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 300.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 300.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 40.0126582278481, "minX": 1.66885764E12, "maxY": 93.5, "series": [{"data": [[1.66885764E12, 90.0], [1.6688577E12, 40.0126582278481]], "isOverall": false, "label": "client-to-application", "isController": false}, {"data": [[1.66885776E12, 43.5], [1.6688577E12, 93.5]], "isOverall": false, "label": "client-to-gateway-non-caching", "isController": false}, {"data": [[1.66885782E12, 57.33999999999998]], "isOverall": false, "label": "client-to-gateway-caching", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66885782E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4055.0, "minX": 1.0, "maxY": 62892.0, "series": [{"data": [[2.0, 60971.0], [3.0, 61011.0], [4.0, 60784.0], [5.0, 60690.0], [6.0, 60176.0], [7.0, 59981.0], [8.0, 58837.0], [9.0, 58604.0], [10.0, 58333.0], [11.0, 57987.0], [12.0, 57937.0], [13.0, 57851.0], [14.0, 57568.0], [15.0, 57471.0], [16.0, 56930.0], [17.0, 55091.0], [18.0, 54167.0], [19.0, 52879.0], [20.0, 52852.0], [21.0, 52527.0], [22.0, 52198.0], [23.0, 51964.0], [24.0, 51611.0], [25.0, 51507.0], [26.0, 50895.0], [27.0, 49375.0], [28.0, 48663.0], [29.0, 46696.0], [30.0, 45389.0], [31.0, 45376.0], [33.0, 45122.0], [32.0, 45315.0], [35.0, 44512.0], [34.0, 44553.0], [37.0, 44179.0], [36.0, 44311.0], [39.0, 40792.0], [38.0, 43576.0], [41.0, 39156.0], [40.0, 39818.0], [43.0, 38913.0], [42.0, 38950.0], [45.0, 38205.0], [44.0, 38605.0], [47.0, 37800.0], [46.0, 38254.0], [49.0, 35599.0], [48.0, 37507.0], [51.0, 32722.0], [50.0, 34850.0], [53.0, 32549.0], [52.0, 32566.0], [55.0, 32476.0], [54.0, 32562.0], [57.0, 32089.0], [56.0, 32102.0], [59.0, 30354.0], [58.0, 31764.0], [61.0, 26406.0], [60.0, 29080.0], [63.0, 25728.0], [62.0, 25915.0], [67.0, 25201.0], [66.0, 25390.0], [65.0, 25415.0], [64.0, 25449.0], [71.0, 20460.0], [70.0, 23163.0], [69.0, 23462.0], [68.0, 25108.0], [75.0, 19465.0], [74.0, 19491.0], [73.0, 19663.0], [72.0, 19761.0], [79.0, 18414.0], [78.0, 18698.0], [77.0, 19481.0], [76.0, 19510.0], [83.0, 13747.0], [82.0, 14131.0], [81.0, 14154.0], [80.0, 18187.0], [87.0, 12955.0], [86.0, 13164.0], [85.0, 13278.0], [84.0, 13547.0], [91.0, 8131.0], [90.0, 12158.0], [89.0, 12262.0], [88.0, 12544.0], [95.0, 7513.0], [94.0, 7708.0], [93.0, 7717.0], [92.0, 8044.0], [99.0, 6663.0], [98.0, 6737.0], [97.0, 7012.0], [96.0, 7121.0], [100.0, 6597.0], [1.0, 60917.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[50.5, 34450.69]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[6.0, 21552.0], [8.0, 21557.0], [9.0, 21549.0], [11.0, 21590.5], [12.0, 21480.0], [13.0, 21471.0], [15.0, 21554.0], [17.0, 21440.0], [18.0, 21454.0], [19.0, 21464.0], [20.0, 21468.0], [22.0, 21534.0], [23.0, 21575.5], [24.0, 21445.0], [25.0, 21524.0], [26.0, 21488.666666666668], [27.0, 21378.0], [44.0, 21339.0], [51.0, 21455.0], [54.0, 21390.5], [59.0, 21378.0], [61.0, 21368.5], [60.0, 21422.0], [63.0, 21430.5], [62.0, 21360.0], [67.0, 21212.0], [66.0, 21352.041666666668], [65.0, 21489.0], [64.0, 21407.0], [71.0, 21083.0], [70.0, 21101.0], [69.0, 21160.0], [68.0, 21263.0], [75.0, 20902.0], [74.0, 20935.0], [73.0, 20938.0], [72.0, 21035.0], [79.0, 20904.0], [78.0, 20895.0], [83.0, 20859.0], [82.0, 20890.0], [81.0, 21006.0], [80.0, 20946.0], [87.0, 20768.0], [86.0, 20795.0], [85.0, 20811.0], [84.0, 20839.0], [91.0, 20459.0], [90.0, 20646.0], [89.0, 20715.0], [88.0, 20738.0], [95.0, 19939.0], [94.0, 20305.0], [93.0, 20354.0], [92.0, 20439.0], [99.0, 17792.0], [98.0, 18694.0], [97.0, 18943.0], [96.0, 19478.0], [100.0, 16207.0], [1.0, 21522.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[57.33999999999998, 21092.410000000003]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 62856.0], [3.0, 62823.0], [4.0, 62765.0], [5.0, 62519.0], [6.0, 61730.0], [7.0, 61392.0], [8.0, 60069.0], [9.0, 59943.0], [10.0, 59708.0], [11.0, 59688.0], [12.0, 59632.0], [13.0, 59452.0], [14.0, 58598.0], [15.0, 58174.0], [16.0, 56494.0], [17.0, 55778.0], [18.0, 54148.0], [19.0, 53916.0], [20.0, 53687.0], [21.0, 53551.0], [22.0, 53416.0], [23.0, 53285.0], [24.0, 52440.0], [25.0, 51777.0], [26.0, 51318.0], [27.0, 50455.0], [28.0, 48521.0], [29.0, 48002.0], [30.0, 48003.0], [31.0, 48052.0], [33.0, 47272.0], [32.0, 47657.0], [35.0, 46017.0], [34.0, 46311.0], [37.0, 43921.0], [36.0, 44378.0], [39.0, 41298.0], [38.0, 42612.0], [41.0, 40978.0], [40.0, 41002.0], [43.0, 40402.0], [42.0, 40723.0], [45.0, 39736.0], [44.0, 39764.0], [47.0, 36987.0], [46.0, 37711.0], [49.0, 34686.0], [48.0, 35958.0], [51.0, 34317.0], [50.0, 34588.0], [53.0, 34113.0], [52.0, 34279.0], [55.0, 33221.0], [54.0, 33366.0], [57.0, 31723.0], [56.0, 32505.0], [59.0, 29161.0], [58.0, 30683.0], [61.0, 27967.0], [60.0, 27984.0], [63.0, 27365.0], [62.0, 27451.0], [67.0, 25678.0], [66.0, 25734.0], [65.0, 26987.0], [64.0, 27288.0], [71.0, 20761.0], [70.0, 21662.0], [69.0, 23223.0], [68.0, 25283.0], [75.0, 20563.0], [74.0, 20600.0], [73.0, 20727.5], [79.0, 17350.0], [78.0, 18296.0], [77.0, 18426.0], [76.0, 19792.0], [83.0, 14528.0], [82.0, 14800.0], [81.0, 14942.0], [80.0, 14987.0], [87.0, 13557.0], [86.0, 13826.0], [85.0, 14127.0], [84.0, 14462.0], [91.0, 7741.0], [90.0, 9112.0], [89.0, 11733.0], [88.0, 13246.0], [95.0, 7269.0], [94.0, 7295.0], [93.0, 7685.0], [92.0, 7732.0], [99.0, 6427.0], [98.0, 7025.0], [97.0, 7187.0], [96.0, 7255.0], [100.0, 4055.0], [1.0, 62892.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[50.509999999999984, 35033.09000000001]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 44.8, "minX": 1.66885764E12, "maxY": 1.8863903333333332E7, "series": [{"data": [[1.66885776E12, 1.6249503483333332E7], [1.66885782E12, 1.8863903333333332E7], [1.66885764E12, 3965314.85], [1.6688577E12, 1.7561932116666667E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66885776E12, 183.46666666666667], [1.66885782E12, 320.0], [1.66885764E12, 44.8], [1.6688577E12, 198.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66885782E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8797.285714285716, "minX": 1.66885764E12, "maxY": 41573.64556962027, "series": [{"data": [[1.66885776E12, 38626.825581395344], [1.6688577E12, 8797.285714285716]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66885782E12, 21092.410000000003]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66885764E12, 10428.142857142859], [1.6688577E12, 41573.64556962027]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66885782E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2514.010000000001, "minX": 1.66885764E12, "maxY": 38985.3164556962, "series": [{"data": [[1.66885776E12, 36339.11627906978], [1.6688577E12, 6581.5]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66885782E12, 2514.010000000001]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66885764E12, 8228.666666666666], [1.6688577E12, 38985.3164556962]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66885782E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.9400000000000001, "minX": 1.66885764E12, "maxY": 49.683544303797476, "series": [{"data": [[1.66885776E12, 1.4418604651162796], [1.6688577E12, 1.6428571428571428]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66885782E12, 0.9400000000000001]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66885764E12, 38.80952380952381], [1.6688577E12, 49.683544303797476]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66885782E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4055.0, "minX": 1.66885764E12, "maxY": 62892.0, "series": [{"data": [[1.66885776E12, 61011.0], [1.66885782E12, 21609.0], [1.66885764E12, 14987.0], [1.6688577E12, 62892.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66885776E12, 58673.9], [1.66885782E12, 21533.7], [1.66885764E12, 14913.6], [1.6688577E12, 59849.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66885776E12, 61011.0], [1.66885782E12, 21608.98], [1.66885764E12, 14987.0], [1.6688577E12, 62892.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66885776E12, 60751.1], [1.66885782E12, 21576.75], [1.66885764E12, 14982.5], [1.6688577E12, 62592.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66885776E12, 13164.0], [1.66885782E12, 16207.0], [1.66885764E12, 4055.0], [1.6688577E12, 6597.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66885776E12, 38759.0], [1.66885782E12, 21360.5], [1.66885764E12, 9112.0], [1.6688577E12, 36987.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66885782E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 7282.0, "minX": 1.0, "maxY": 50242.5, "series": [{"data": [[1.0, 33677.5], [8.0, 7282.0], [2.0, 39446.0], [4.0, 50242.5], [5.0, 31040.0], [83.0, 21383.0], [3.0, 21990.5], [6.0, 22434.5], [12.0, 20680.5], [7.0, 32549.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 83.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1725.5, "minX": 1.0, "maxY": 47785.5, "series": [{"data": [[1.0, 31031.5], [8.0, 5229.5], [2.0, 36417.5], [4.0, 47785.5], [5.0, 28462.5], [83.0, 2823.0], [3.0, 19531.5], [6.0, 19766.5], [12.0, 1725.5], [7.0, 29983.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 83.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.66885764E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.66885776E12, 1.6666666666666667], [1.66885764E12, 1.6666666666666667], [1.6688577E12, 1.6666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66885776E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.35, "minX": 1.66885764E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.66885776E12, 1.4333333333333333], [1.66885782E12, 1.6666666666666667], [1.66885764E12, 0.35], [1.6688577E12, 1.55]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66885782E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.66885764E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.66885764E12, 0.35], [1.6688577E12, 1.3166666666666667]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66885782E12, 1.6666666666666667]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66885776E12, 1.4333333333333333], [1.6688577E12, 0.23333333333333334]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66885782E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.35, "minX": 1.66885764E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.66885776E12, 1.4333333333333333], [1.66885782E12, 1.6666666666666667], [1.66885764E12, 0.35], [1.6688577E12, 1.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66885782E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

