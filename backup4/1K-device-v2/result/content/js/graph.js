/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 3051.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 6.0], [0.3, 6.0], [0.4, 12.0], [0.5, 19.0], [0.6, 24.0], [0.7, 30.0], [0.8, 30.0], [0.9, 31.0], [1.0, 31.0], [1.1, 32.0], [1.2, 32.0], [1.3, 33.0], [1.4, 34.0], [1.5, 35.0], [1.6, 37.0], [1.7, 39.0], [1.8, 40.0], [1.9, 40.0], [2.0, 41.0], [2.1, 42.0], [2.2, 44.0], [2.3, 46.0], [2.4, 46.0], [2.5, 47.0], [2.6, 47.0], [2.7, 48.0], [2.8, 48.0], [2.9, 48.0], [3.0, 49.0], [3.1, 49.0], [3.2, 50.0], [3.3, 50.0], [3.4, 51.0], [3.5, 52.0], [3.6, 53.0], [3.7, 54.0], [3.8, 54.0], [3.9, 54.0], [4.0, 55.0], [4.1, 55.0], [4.2, 55.0], [4.3, 56.0], [4.4, 56.0], [4.5, 56.0], [4.6, 57.0], [4.7, 57.0], [4.8, 57.0], [4.9, 57.0], [5.0, 58.0], [5.1, 58.0], [5.2, 58.0], [5.3, 59.0], [5.4, 59.0], [5.5, 60.0], [5.6, 60.0], [5.7, 61.0], [5.8, 61.0], [5.9, 61.0], [6.0, 62.0], [6.1, 62.0], [6.2, 62.0], [6.3, 62.0], [6.4, 63.0], [6.5, 63.0], [6.6, 64.0], [6.7, 64.0], [6.8, 64.0], [6.9, 64.0], [7.0, 64.0], [7.1, 65.0], [7.2, 65.0], [7.3, 65.0], [7.4, 65.0], [7.5, 65.0], [7.6, 66.0], [7.7, 66.0], [7.8, 66.0], [7.9, 66.0], [8.0, 67.0], [8.1, 67.0], [8.2, 67.0], [8.3, 67.0], [8.4, 67.0], [8.5, 68.0], [8.6, 68.0], [8.7, 68.0], [8.8, 68.0], [8.9, 69.0], [9.0, 69.0], [9.1, 69.0], [9.2, 69.0], [9.3, 70.0], [9.4, 70.0], [9.5, 70.0], [9.6, 70.0], [9.7, 70.0], [9.8, 71.0], [9.9, 71.0], [10.0, 71.0], [10.1, 71.0], [10.2, 72.0], [10.3, 72.0], [10.4, 72.0], [10.5, 72.0], [10.6, 72.0], [10.7, 73.0], [10.8, 73.0], [10.9, 73.0], [11.0, 73.0], [11.1, 74.0], [11.2, 74.0], [11.3, 74.0], [11.4, 75.0], [11.5, 75.0], [11.6, 75.0], [11.7, 75.0], [11.8, 75.0], [11.9, 76.0], [12.0, 76.0], [12.1, 76.0], [12.2, 76.0], [12.3, 76.0], [12.4, 77.0], [12.5, 77.0], [12.6, 77.0], [12.7, 77.0], [12.8, 78.0], [12.9, 78.0], [13.0, 78.0], [13.1, 78.0], [13.2, 79.0], [13.3, 79.0], [13.4, 79.0], [13.5, 79.0], [13.6, 79.0], [13.7, 80.0], [13.8, 80.0], [13.9, 80.0], [14.0, 80.0], [14.1, 81.0], [14.2, 81.0], [14.3, 81.0], [14.4, 82.0], [14.5, 82.0], [14.6, 82.0], [14.7, 82.0], [14.8, 83.0], [14.9, 83.0], [15.0, 83.0], [15.1, 83.0], [15.2, 84.0], [15.3, 84.0], [15.4, 84.0], [15.5, 84.0], [15.6, 85.0], [15.7, 85.0], [15.8, 86.0], [15.9, 86.0], [16.0, 86.0], [16.1, 86.0], [16.2, 87.0], [16.3, 87.0], [16.4, 87.0], [16.5, 87.0], [16.6, 88.0], [16.7, 88.0], [16.8, 88.0], [16.9, 88.0], [17.0, 88.0], [17.1, 88.0], [17.2, 89.0], [17.3, 89.0], [17.4, 89.0], [17.5, 89.0], [17.6, 90.0], [17.7, 90.0], [17.8, 90.0], [17.9, 90.0], [18.0, 91.0], [18.1, 91.0], [18.2, 92.0], [18.3, 92.0], [18.4, 92.0], [18.5, 93.0], [18.6, 93.0], [18.7, 93.0], [18.8, 94.0], [18.9, 94.0], [19.0, 94.0], [19.1, 94.0], [19.2, 95.0], [19.3, 95.0], [19.4, 95.0], [19.5, 96.0], [19.6, 96.0], [19.7, 96.0], [19.8, 96.0], [19.9, 96.0], [20.0, 97.0], [20.1, 97.0], [20.2, 97.0], [20.3, 97.0], [20.4, 98.0], [20.5, 98.0], [20.6, 98.0], [20.7, 99.0], [20.8, 99.0], [20.9, 100.0], [21.0, 100.0], [21.1, 100.0], [21.2, 101.0], [21.3, 101.0], [21.4, 101.0], [21.5, 102.0], [21.6, 102.0], [21.7, 102.0], [21.8, 102.0], [21.9, 103.0], [22.0, 103.0], [22.1, 103.0], [22.2, 104.0], [22.3, 104.0], [22.4, 104.0], [22.5, 104.0], [22.6, 105.0], [22.7, 105.0], [22.8, 105.0], [22.9, 105.0], [23.0, 106.0], [23.1, 106.0], [23.2, 106.0], [23.3, 106.0], [23.4, 107.0], [23.5, 107.0], [23.6, 108.0], [23.7, 108.0], [23.8, 108.0], [23.9, 109.0], [24.0, 109.0], [24.1, 110.0], [24.2, 110.0], [24.3, 110.0], [24.4, 111.0], [24.5, 111.0], [24.6, 111.0], [24.7, 111.0], [24.8, 111.0], [24.9, 112.0], [25.0, 112.0], [25.1, 112.0], [25.2, 113.0], [25.3, 113.0], [25.4, 113.0], [25.5, 114.0], [25.6, 114.0], [25.7, 114.0], [25.8, 115.0], [25.9, 115.0], [26.0, 115.0], [26.1, 115.0], [26.2, 116.0], [26.3, 116.0], [26.4, 116.0], [26.5, 117.0], [26.6, 118.0], [26.7, 118.0], [26.8, 119.0], [26.9, 119.0], [27.0, 119.0], [27.1, 119.0], [27.2, 120.0], [27.3, 120.0], [27.4, 120.0], [27.5, 120.0], [27.6, 121.0], [27.7, 121.0], [27.8, 121.0], [27.9, 122.0], [28.0, 122.0], [28.1, 122.0], [28.2, 123.0], [28.3, 123.0], [28.4, 124.0], [28.5, 124.0], [28.6, 124.0], [28.7, 125.0], [28.8, 125.0], [28.9, 126.0], [29.0, 126.0], [29.1, 127.0], [29.2, 127.0], [29.3, 128.0], [29.4, 128.0], [29.5, 128.0], [29.6, 129.0], [29.7, 129.0], [29.8, 129.0], [29.9, 129.0], [30.0, 130.0], [30.1, 130.0], [30.2, 130.0], [30.3, 131.0], [30.4, 131.0], [30.5, 132.0], [30.6, 132.0], [30.7, 132.0], [30.8, 133.0], [30.9, 133.0], [31.0, 134.0], [31.1, 134.0], [31.2, 135.0], [31.3, 135.0], [31.4, 135.0], [31.5, 136.0], [31.6, 136.0], [31.7, 136.0], [31.8, 137.0], [31.9, 137.0], [32.0, 137.0], [32.1, 138.0], [32.2, 138.0], [32.3, 139.0], [32.4, 139.0], [32.5, 139.0], [32.6, 140.0], [32.7, 140.0], [32.8, 141.0], [32.9, 141.0], [33.0, 142.0], [33.1, 143.0], [33.2, 143.0], [33.3, 144.0], [33.4, 144.0], [33.5, 144.0], [33.6, 145.0], [33.7, 146.0], [33.8, 146.0], [33.9, 146.0], [34.0, 147.0], [34.1, 148.0], [34.2, 148.0], [34.3, 148.0], [34.4, 149.0], [34.5, 149.0], [34.6, 150.0], [34.7, 150.0], [34.8, 150.0], [34.9, 151.0], [35.0, 151.0], [35.1, 152.0], [35.2, 152.0], [35.3, 153.0], [35.4, 153.0], [35.5, 153.0], [35.6, 154.0], [35.7, 154.0], [35.8, 155.0], [35.9, 155.0], [36.0, 156.0], [36.1, 156.0], [36.2, 156.0], [36.3, 157.0], [36.4, 158.0], [36.5, 158.0], [36.6, 159.0], [36.7, 159.0], [36.8, 159.0], [36.9, 160.0], [37.0, 160.0], [37.1, 160.0], [37.2, 160.0], [37.3, 161.0], [37.4, 161.0], [37.5, 161.0], [37.6, 162.0], [37.7, 162.0], [37.8, 162.0], [37.9, 163.0], [38.0, 163.0], [38.1, 164.0], [38.2, 164.0], [38.3, 165.0], [38.4, 165.0], [38.5, 165.0], [38.6, 166.0], [38.7, 166.0], [38.8, 166.0], [38.9, 167.0], [39.0, 167.0], [39.1, 167.0], [39.2, 167.0], [39.3, 168.0], [39.4, 168.0], [39.5, 168.0], [39.6, 168.0], [39.7, 169.0], [39.8, 170.0], [39.9, 170.0], [40.0, 170.0], [40.1, 171.0], [40.2, 171.0], [40.3, 172.0], [40.4, 172.0], [40.5, 172.0], [40.6, 173.0], [40.7, 173.0], [40.8, 173.0], [40.9, 174.0], [41.0, 174.0], [41.1, 174.0], [41.2, 175.0], [41.3, 175.0], [41.4, 175.0], [41.5, 175.0], [41.6, 176.0], [41.7, 176.0], [41.8, 176.0], [41.9, 177.0], [42.0, 177.0], [42.1, 177.0], [42.2, 178.0], [42.3, 178.0], [42.4, 179.0], [42.5, 179.0], [42.6, 179.0], [42.7, 180.0], [42.8, 180.0], [42.9, 180.0], [43.0, 181.0], [43.1, 181.0], [43.2, 181.0], [43.3, 182.0], [43.4, 182.0], [43.5, 182.0], [43.6, 183.0], [43.7, 183.0], [43.8, 183.0], [43.9, 184.0], [44.0, 184.0], [44.1, 184.0], [44.2, 185.0], [44.3, 185.0], [44.4, 185.0], [44.5, 185.0], [44.6, 185.0], [44.7, 186.0], [44.8, 186.0], [44.9, 186.0], [45.0, 187.0], [45.1, 187.0], [45.2, 187.0], [45.3, 188.0], [45.4, 188.0], [45.5, 188.0], [45.6, 189.0], [45.7, 189.0], [45.8, 189.0], [45.9, 190.0], [46.0, 190.0], [46.1, 190.0], [46.2, 191.0], [46.3, 191.0], [46.4, 191.0], [46.5, 192.0], [46.6, 192.0], [46.7, 192.0], [46.8, 192.0], [46.9, 193.0], [47.0, 193.0], [47.1, 193.0], [47.2, 194.0], [47.3, 194.0], [47.4, 195.0], [47.5, 195.0], [47.6, 196.0], [47.7, 196.0], [47.8, 196.0], [47.9, 197.0], [48.0, 197.0], [48.1, 198.0], [48.2, 198.0], [48.3, 199.0], [48.4, 199.0], [48.5, 199.0], [48.6, 200.0], [48.7, 200.0], [48.8, 200.0], [48.9, 201.0], [49.0, 201.0], [49.1, 201.0], [49.2, 202.0], [49.3, 202.0], [49.4, 203.0], [49.5, 203.0], [49.6, 204.0], [49.7, 204.0], [49.8, 204.0], [49.9, 205.0], [50.0, 206.0], [50.1, 206.0], [50.2, 207.0], [50.3, 207.0], [50.4, 208.0], [50.5, 208.0], [50.6, 208.0], [50.7, 209.0], [50.8, 209.0], [50.9, 209.0], [51.0, 210.0], [51.1, 211.0], [51.2, 211.0], [51.3, 211.0], [51.4, 212.0], [51.5, 212.0], [51.6, 213.0], [51.7, 213.0], [51.8, 214.0], [51.9, 215.0], [52.0, 215.0], [52.1, 216.0], [52.2, 216.0], [52.3, 217.0], [52.4, 217.0], [52.5, 217.0], [52.6, 218.0], [52.7, 218.0], [52.8, 219.0], [52.9, 219.0], [53.0, 220.0], [53.1, 220.0], [53.2, 220.0], [53.3, 221.0], [53.4, 222.0], [53.5, 222.0], [53.6, 223.0], [53.7, 223.0], [53.8, 223.0], [53.9, 224.0], [54.0, 224.0], [54.1, 225.0], [54.2, 225.0], [54.3, 226.0], [54.4, 226.0], [54.5, 227.0], [54.6, 227.0], [54.7, 227.0], [54.8, 228.0], [54.9, 228.0], [55.0, 228.0], [55.1, 229.0], [55.2, 230.0], [55.3, 230.0], [55.4, 230.0], [55.5, 231.0], [55.6, 231.0], [55.7, 232.0], [55.8, 232.0], [55.9, 233.0], [56.0, 233.0], [56.1, 233.0], [56.2, 234.0], [56.3, 234.0], [56.4, 235.0], [56.5, 235.0], [56.6, 235.0], [56.7, 236.0], [56.8, 236.0], [56.9, 236.0], [57.0, 236.0], [57.1, 237.0], [57.2, 237.0], [57.3, 237.0], [57.4, 238.0], [57.5, 239.0], [57.6, 239.0], [57.7, 239.0], [57.8, 239.0], [57.9, 240.0], [58.0, 240.0], [58.1, 241.0], [58.2, 241.0], [58.3, 241.0], [58.4, 242.0], [58.5, 242.0], [58.6, 243.0], [58.7, 243.0], [58.8, 243.0], [58.9, 244.0], [59.0, 244.0], [59.1, 245.0], [59.2, 245.0], [59.3, 245.0], [59.4, 246.0], [59.5, 246.0], [59.6, 246.0], [59.7, 247.0], [59.8, 247.0], [59.9, 248.0], [60.0, 248.0], [60.1, 248.0], [60.2, 249.0], [60.3, 249.0], [60.4, 250.0], [60.5, 250.0], [60.6, 250.0], [60.7, 251.0], [60.8, 251.0], [60.9, 252.0], [61.0, 252.0], [61.1, 252.0], [61.2, 253.0], [61.3, 253.0], [61.4, 254.0], [61.5, 254.0], [61.6, 255.0], [61.7, 256.0], [61.8, 256.0], [61.9, 257.0], [62.0, 257.0], [62.1, 258.0], [62.2, 259.0], [62.3, 259.0], [62.4, 259.0], [62.5, 260.0], [62.6, 260.0], [62.7, 261.0], [62.8, 261.0], [62.9, 262.0], [63.0, 262.0], [63.1, 262.0], [63.2, 263.0], [63.3, 263.0], [63.4, 264.0], [63.5, 264.0], [63.6, 265.0], [63.7, 265.0], [63.8, 266.0], [63.9, 266.0], [64.0, 267.0], [64.1, 267.0], [64.2, 267.0], [64.3, 268.0], [64.4, 268.0], [64.5, 269.0], [64.6, 269.0], [64.7, 270.0], [64.8, 271.0], [64.9, 272.0], [65.0, 272.0], [65.1, 273.0], [65.2, 273.0], [65.3, 274.0], [65.4, 274.0], [65.5, 275.0], [65.6, 275.0], [65.7, 275.0], [65.8, 276.0], [65.9, 276.0], [66.0, 276.0], [66.1, 276.0], [66.2, 277.0], [66.3, 277.0], [66.4, 278.0], [66.5, 278.0], [66.6, 279.0], [66.7, 279.0], [66.8, 279.0], [66.9, 280.0], [67.0, 280.0], [67.1, 281.0], [67.2, 281.0], [67.3, 282.0], [67.4, 282.0], [67.5, 283.0], [67.6, 283.0], [67.7, 284.0], [67.8, 284.0], [67.9, 284.0], [68.0, 285.0], [68.1, 285.0], [68.2, 285.0], [68.3, 286.0], [68.4, 286.0], [68.5, 287.0], [68.6, 288.0], [68.7, 288.0], [68.8, 288.0], [68.9, 289.0], [69.0, 289.0], [69.1, 290.0], [69.2, 290.0], [69.3, 291.0], [69.4, 291.0], [69.5, 291.0], [69.6, 291.0], [69.7, 292.0], [69.8, 292.0], [69.9, 292.0], [70.0, 293.0], [70.1, 294.0], [70.2, 294.0], [70.3, 294.0], [70.4, 295.0], [70.5, 295.0], [70.6, 296.0], [70.7, 296.0], [70.8, 296.0], [70.9, 297.0], [71.0, 298.0], [71.1, 298.0], [71.2, 299.0], [71.3, 299.0], [71.4, 299.0], [71.5, 300.0], [71.6, 300.0], [71.7, 300.0], [71.8, 301.0], [71.9, 301.0], [72.0, 302.0], [72.1, 302.0], [72.2, 302.0], [72.3, 303.0], [72.4, 303.0], [72.5, 304.0], [72.6, 304.0], [72.7, 305.0], [72.8, 305.0], [72.9, 305.0], [73.0, 306.0], [73.1, 306.0], [73.2, 306.0], [73.3, 307.0], [73.4, 307.0], [73.5, 307.0], [73.6, 308.0], [73.7, 308.0], [73.8, 308.0], [73.9, 309.0], [74.0, 309.0], [74.1, 309.0], [74.2, 310.0], [74.3, 310.0], [74.4, 310.0], [74.5, 311.0], [74.6, 311.0], [74.7, 311.0], [74.8, 312.0], [74.9, 312.0], [75.0, 313.0], [75.1, 313.0], [75.2, 313.0], [75.3, 314.0], [75.4, 314.0], [75.5, 314.0], [75.6, 315.0], [75.7, 315.0], [75.8, 315.0], [75.9, 316.0], [76.0, 316.0], [76.1, 316.0], [76.2, 316.0], [76.3, 317.0], [76.4, 317.0], [76.5, 318.0], [76.6, 318.0], [76.7, 319.0], [76.8, 319.0], [76.9, 320.0], [77.0, 320.0], [77.1, 320.0], [77.2, 321.0], [77.3, 321.0], [77.4, 322.0], [77.5, 322.0], [77.6, 323.0], [77.7, 323.0], [77.8, 323.0], [77.9, 324.0], [78.0, 324.0], [78.1, 325.0], [78.2, 325.0], [78.3, 325.0], [78.4, 326.0], [78.5, 326.0], [78.6, 327.0], [78.7, 327.0], [78.8, 328.0], [78.9, 328.0], [79.0, 328.0], [79.1, 329.0], [79.2, 329.0], [79.3, 329.0], [79.4, 330.0], [79.5, 330.0], [79.6, 330.0], [79.7, 331.0], [79.8, 331.0], [79.9, 332.0], [80.0, 332.0], [80.1, 333.0], [80.2, 333.0], [80.3, 334.0], [80.4, 334.0], [80.5, 335.0], [80.6, 335.0], [80.7, 336.0], [80.8, 336.0], [80.9, 336.0], [81.0, 337.0], [81.1, 337.0], [81.2, 338.0], [81.3, 339.0], [81.4, 339.0], [81.5, 340.0], [81.6, 340.0], [81.7, 341.0], [81.8, 342.0], [81.9, 342.0], [82.0, 343.0], [82.1, 344.0], [82.2, 344.0], [82.3, 345.0], [82.4, 346.0], [82.5, 347.0], [82.6, 348.0], [82.7, 348.0], [82.8, 349.0], [82.9, 349.0], [83.0, 350.0], [83.1, 351.0], [83.2, 352.0], [83.3, 352.0], [83.4, 353.0], [83.5, 353.0], [83.6, 354.0], [83.7, 354.0], [83.8, 355.0], [83.9, 356.0], [84.0, 356.0], [84.1, 357.0], [84.2, 358.0], [84.3, 359.0], [84.4, 360.0], [84.5, 361.0], [84.6, 361.0], [84.7, 362.0], [84.8, 363.0], [84.9, 364.0], [85.0, 364.0], [85.1, 365.0], [85.2, 366.0], [85.3, 366.0], [85.4, 367.0], [85.5, 368.0], [85.6, 368.0], [85.7, 369.0], [85.8, 370.0], [85.9, 371.0], [86.0, 372.0], [86.1, 372.0], [86.2, 373.0], [86.3, 374.0], [86.4, 375.0], [86.5, 376.0], [86.6, 377.0], [86.7, 377.0], [86.8, 378.0], [86.9, 380.0], [87.0, 381.0], [87.1, 382.0], [87.2, 383.0], [87.3, 384.0], [87.4, 385.0], [87.5, 386.0], [87.6, 387.0], [87.7, 387.0], [87.8, 388.0], [87.9, 389.0], [88.0, 390.0], [88.1, 391.0], [88.2, 392.0], [88.3, 392.0], [88.4, 393.0], [88.5, 394.0], [88.6, 396.0], [88.7, 396.0], [88.8, 397.0], [88.9, 398.0], [89.0, 399.0], [89.1, 400.0], [89.2, 401.0], [89.3, 402.0], [89.4, 403.0], [89.5, 404.0], [89.6, 405.0], [89.7, 405.0], [89.8, 407.0], [89.9, 408.0], [90.0, 410.0], [90.1, 411.0], [90.2, 411.0], [90.3, 412.0], [90.4, 413.0], [90.5, 413.0], [90.6, 415.0], [90.7, 416.0], [90.8, 418.0], [90.9, 419.0], [91.0, 419.0], [91.1, 421.0], [91.2, 423.0], [91.3, 424.0], [91.4, 425.0], [91.5, 426.0], [91.6, 428.0], [91.7, 429.0], [91.8, 430.0], [91.9, 432.0], [92.0, 433.0], [92.1, 434.0], [92.2, 435.0], [92.3, 436.0], [92.4, 438.0], [92.5, 440.0], [92.6, 442.0], [92.7, 444.0], [92.8, 447.0], [92.9, 450.0], [93.0, 452.0], [93.1, 453.0], [93.2, 454.0], [93.3, 457.0], [93.4, 459.0], [93.5, 460.0], [93.6, 461.0], [93.7, 463.0], [93.8, 466.0], [93.9, 467.0], [94.0, 468.0], [94.1, 470.0], [94.2, 473.0], [94.3, 474.0], [94.4, 477.0], [94.5, 479.0], [94.6, 482.0], [94.7, 484.0], [94.8, 487.0], [94.9, 491.0], [95.0, 493.0], [95.1, 498.0], [95.2, 501.0], [95.3, 507.0], [95.4, 512.0], [95.5, 515.0], [95.6, 518.0], [95.7, 522.0], [95.8, 526.0], [95.9, 531.0], [96.0, 539.0], [96.1, 546.0], [96.2, 550.0], [96.3, 556.0], [96.4, 559.0], [96.5, 563.0], [96.6, 565.0], [96.7, 569.0], [96.8, 576.0], [96.9, 580.0], [97.0, 583.0], [97.1, 591.0], [97.2, 598.0], [97.3, 608.0], [97.4, 613.0], [97.5, 622.0], [97.6, 636.0], [97.7, 651.0], [97.8, 680.0], [97.9, 698.0], [98.0, 737.0], [98.1, 785.0], [98.2, 1008.0], [98.3, 1026.0], [98.4, 1041.0], [98.5, 1044.0], [98.6, 1051.0], [98.7, 1072.0], [98.8, 1079.0], [98.9, 1084.0], [99.0, 1088.0], [99.1, 1091.0], [99.2, 1093.0], [99.3, 1096.0], [99.4, 1099.0], [99.5, 1116.0], [99.6, 1155.0], [99.7, 1257.0], [99.8, 1307.0], [99.9, 1371.0], [100.0, 3051.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 82.0], [0.1, 145.0], [0.2, 170.0], [0.3, 182.0], [0.4, 197.0], [0.5, 209.0], [0.6, 223.0], [0.7, 229.0], [0.8, 232.0], [0.9, 235.0], [1.0, 237.0], [1.1, 240.0], [1.2, 242.0], [1.3, 243.0], [1.4, 247.0], [1.5, 251.0], [1.6, 253.0], [1.7, 258.0], [1.8, 261.0], [1.9, 264.0], [2.0, 268.0], [2.1, 272.0], [2.2, 275.0], [2.3, 278.0], [2.4, 281.0], [2.5, 284.0], [2.6, 286.0], [2.7, 287.0], [2.8, 290.0], [2.9, 292.0], [3.0, 293.0], [3.1, 295.0], [3.2, 297.0], [3.3, 299.0], [3.4, 300.0], [3.5, 302.0], [3.6, 302.0], [3.7, 303.0], [3.8, 305.0], [3.9, 307.0], [4.0, 307.0], [4.1, 308.0], [4.2, 309.0], [4.3, 310.0], [4.4, 311.0], [4.5, 313.0], [4.6, 314.0], [4.7, 315.0], [4.8, 316.0], [4.9, 317.0], [5.0, 318.0], [5.1, 320.0], [5.2, 322.0], [5.3, 324.0], [5.4, 325.0], [5.5, 325.0], [5.6, 326.0], [5.7, 329.0], [5.8, 331.0], [5.9, 333.0], [6.0, 334.0], [6.1, 335.0], [6.2, 337.0], [6.3, 338.0], [6.4, 340.0], [6.5, 340.0], [6.6, 341.0], [6.7, 344.0], [6.8, 346.0], [6.9, 347.0], [7.0, 348.0], [7.1, 349.0], [7.2, 350.0], [7.3, 351.0], [7.4, 352.0], [7.5, 353.0], [7.6, 356.0], [7.7, 357.0], [7.8, 359.0], [7.9, 360.0], [8.0, 362.0], [8.1, 363.0], [8.2, 366.0], [8.3, 367.0], [8.4, 369.0], [8.5, 371.0], [8.6, 374.0], [8.7, 375.0], [8.8, 377.0], [8.9, 378.0], [9.0, 382.0], [9.1, 386.0], [9.2, 389.0], [9.3, 391.0], [9.4, 394.0], [9.5, 397.0], [9.6, 400.0], [9.7, 403.0], [9.8, 405.0], [9.9, 408.0], [10.0, 409.0], [10.1, 411.0], [10.2, 412.0], [10.3, 416.0], [10.4, 417.0], [10.5, 418.0], [10.6, 420.0], [10.7, 421.0], [10.8, 422.0], [10.9, 423.0], [11.0, 425.0], [11.1, 426.0], [11.2, 428.0], [11.3, 428.0], [11.4, 429.0], [11.5, 431.0], [11.6, 432.0], [11.7, 433.0], [11.8, 434.0], [11.9, 435.0], [12.0, 437.0], [12.1, 438.0], [12.2, 439.0], [12.3, 440.0], [12.4, 441.0], [12.5, 442.0], [12.6, 443.0], [12.7, 444.0], [12.8, 446.0], [12.9, 447.0], [13.0, 447.0], [13.1, 448.0], [13.2, 449.0], [13.3, 450.0], [13.4, 451.0], [13.5, 452.0], [13.6, 452.0], [13.7, 453.0], [13.8, 454.0], [13.9, 455.0], [14.0, 455.0], [14.1, 456.0], [14.2, 458.0], [14.3, 458.0], [14.4, 459.0], [14.5, 460.0], [14.6, 462.0], [14.7, 464.0], [14.8, 467.0], [14.9, 468.0], [15.0, 469.0], [15.1, 471.0], [15.2, 472.0], [15.3, 472.0], [15.4, 474.0], [15.5, 476.0], [15.6, 478.0], [15.7, 479.0], [15.8, 479.0], [15.9, 480.0], [16.0, 481.0], [16.1, 482.0], [16.2, 483.0], [16.3, 484.0], [16.4, 485.0], [16.5, 486.0], [16.6, 487.0], [16.7, 488.0], [16.8, 488.0], [16.9, 489.0], [17.0, 490.0], [17.1, 490.0], [17.2, 491.0], [17.3, 492.0], [17.4, 493.0], [17.5, 494.0], [17.6, 494.0], [17.7, 495.0], [17.8, 496.0], [17.9, 497.0], [18.0, 498.0], [18.1, 500.0], [18.2, 501.0], [18.3, 502.0], [18.4, 503.0], [18.5, 504.0], [18.6, 506.0], [18.7, 507.0], [18.8, 508.0], [18.9, 509.0], [19.0, 510.0], [19.1, 511.0], [19.2, 512.0], [19.3, 513.0], [19.4, 515.0], [19.5, 516.0], [19.6, 518.0], [19.7, 519.0], [19.8, 519.0], [19.9, 521.0], [20.0, 522.0], [20.1, 524.0], [20.2, 526.0], [20.3, 526.0], [20.4, 527.0], [20.5, 529.0], [20.6, 530.0], [20.7, 531.0], [20.8, 532.0], [20.9, 532.0], [21.0, 534.0], [21.1, 534.0], [21.2, 536.0], [21.3, 537.0], [21.4, 539.0], [21.5, 540.0], [21.6, 541.0], [21.7, 542.0], [21.8, 543.0], [21.9, 544.0], [22.0, 546.0], [22.1, 547.0], [22.2, 548.0], [22.3, 549.0], [22.4, 550.0], [22.5, 551.0], [22.6, 553.0], [22.7, 553.0], [22.8, 554.0], [22.9, 555.0], [23.0, 555.0], [23.1, 557.0], [23.2, 558.0], [23.3, 558.0], [23.4, 559.0], [23.5, 560.0], [23.6, 561.0], [23.7, 562.0], [23.8, 563.0], [23.9, 564.0], [24.0, 565.0], [24.1, 566.0], [24.2, 567.0], [24.3, 567.0], [24.4, 568.0], [24.5, 569.0], [24.6, 569.0], [24.7, 570.0], [24.8, 570.0], [24.9, 571.0], [25.0, 571.0], [25.1, 572.0], [25.2, 572.0], [25.3, 573.0], [25.4, 574.0], [25.5, 574.0], [25.6, 575.0], [25.7, 575.0], [25.8, 575.0], [25.9, 576.0], [26.0, 577.0], [26.1, 577.0], [26.2, 577.0], [26.3, 578.0], [26.4, 579.0], [26.5, 579.0], [26.6, 580.0], [26.7, 580.0], [26.8, 581.0], [26.9, 582.0], [27.0, 582.0], [27.1, 583.0], [27.2, 583.0], [27.3, 584.0], [27.4, 585.0], [27.5, 585.0], [27.6, 586.0], [27.7, 586.0], [27.8, 587.0], [27.9, 587.0], [28.0, 588.0], [28.1, 589.0], [28.2, 589.0], [28.3, 590.0], [28.4, 591.0], [28.5, 592.0], [28.6, 592.0], [28.7, 592.0], [28.8, 593.0], [28.9, 593.0], [29.0, 594.0], [29.1, 595.0], [29.2, 596.0], [29.3, 596.0], [29.4, 597.0], [29.5, 598.0], [29.6, 599.0], [29.7, 599.0], [29.8, 600.0], [29.9, 601.0], [30.0, 602.0], [30.1, 602.0], [30.2, 603.0], [30.3, 604.0], [30.4, 605.0], [30.5, 605.0], [30.6, 606.0], [30.7, 606.0], [30.8, 607.0], [30.9, 607.0], [31.0, 608.0], [31.1, 609.0], [31.2, 609.0], [31.3, 610.0], [31.4, 611.0], [31.5, 612.0], [31.6, 612.0], [31.7, 612.0], [31.8, 613.0], [31.9, 613.0], [32.0, 614.0], [32.1, 615.0], [32.2, 616.0], [32.3, 617.0], [32.4, 617.0], [32.5, 618.0], [32.6, 619.0], [32.7, 619.0], [32.8, 620.0], [32.9, 620.0], [33.0, 621.0], [33.1, 622.0], [33.2, 623.0], [33.3, 623.0], [33.4, 624.0], [33.5, 625.0], [33.6, 626.0], [33.7, 626.0], [33.8, 628.0], [33.9, 628.0], [34.0, 629.0], [34.1, 630.0], [34.2, 631.0], [34.3, 633.0], [34.4, 634.0], [34.5, 635.0], [34.6, 635.0], [34.7, 636.0], [34.8, 637.0], [34.9, 639.0], [35.0, 641.0], [35.1, 642.0], [35.2, 643.0], [35.3, 644.0], [35.4, 645.0], [35.5, 646.0], [35.6, 647.0], [35.7, 647.0], [35.8, 648.0], [35.9, 649.0], [36.0, 650.0], [36.1, 651.0], [36.2, 652.0], [36.3, 653.0], [36.4, 654.0], [36.5, 655.0], [36.6, 655.0], [36.7, 656.0], [36.8, 656.0], [36.9, 657.0], [37.0, 658.0], [37.1, 659.0], [37.2, 659.0], [37.3, 660.0], [37.4, 660.0], [37.5, 661.0], [37.6, 662.0], [37.7, 662.0], [37.8, 663.0], [37.9, 664.0], [38.0, 665.0], [38.1, 665.0], [38.2, 666.0], [38.3, 666.0], [38.4, 667.0], [38.5, 668.0], [38.6, 668.0], [38.7, 669.0], [38.8, 670.0], [38.9, 671.0], [39.0, 671.0], [39.1, 672.0], [39.2, 672.0], [39.3, 674.0], [39.4, 674.0], [39.5, 674.0], [39.6, 675.0], [39.7, 675.0], [39.8, 676.0], [39.9, 677.0], [40.0, 677.0], [40.1, 678.0], [40.2, 678.0], [40.3, 679.0], [40.4, 680.0], [40.5, 680.0], [40.6, 681.0], [40.7, 682.0], [40.8, 682.0], [40.9, 683.0], [41.0, 684.0], [41.1, 684.0], [41.2, 685.0], [41.3, 685.0], [41.4, 686.0], [41.5, 687.0], [41.6, 687.0], [41.7, 687.0], [41.8, 688.0], [41.9, 688.0], [42.0, 689.0], [42.1, 690.0], [42.2, 690.0], [42.3, 691.0], [42.4, 691.0], [42.5, 692.0], [42.6, 692.0], [42.7, 693.0], [42.8, 694.0], [42.9, 694.0], [43.0, 694.0], [43.1, 695.0], [43.2, 696.0], [43.3, 696.0], [43.4, 696.0], [43.5, 696.0], [43.6, 697.0], [43.7, 697.0], [43.8, 698.0], [43.9, 698.0], [44.0, 699.0], [44.1, 699.0], [44.2, 699.0], [44.3, 700.0], [44.4, 700.0], [44.5, 700.0], [44.6, 701.0], [44.7, 702.0], [44.8, 702.0], [44.9, 703.0], [45.0, 703.0], [45.1, 703.0], [45.2, 704.0], [45.3, 704.0], [45.4, 705.0], [45.5, 705.0], [45.6, 706.0], [45.7, 706.0], [45.8, 707.0], [45.9, 707.0], [46.0, 707.0], [46.1, 708.0], [46.2, 708.0], [46.3, 709.0], [46.4, 709.0], [46.5, 710.0], [46.6, 710.0], [46.7, 711.0], [46.8, 711.0], [46.9, 712.0], [47.0, 712.0], [47.1, 712.0], [47.2, 713.0], [47.3, 713.0], [47.4, 714.0], [47.5, 715.0], [47.6, 715.0], [47.7, 716.0], [47.8, 716.0], [47.9, 717.0], [48.0, 717.0], [48.1, 718.0], [48.2, 718.0], [48.3, 718.0], [48.4, 719.0], [48.5, 719.0], [48.6, 720.0], [48.7, 720.0], [48.8, 721.0], [48.9, 721.0], [49.0, 722.0], [49.1, 722.0], [49.2, 723.0], [49.3, 723.0], [49.4, 724.0], [49.5, 725.0], [49.6, 725.0], [49.7, 725.0], [49.8, 726.0], [49.9, 726.0], [50.0, 727.0], [50.1, 727.0], [50.2, 728.0], [50.3, 728.0], [50.4, 728.0], [50.5, 728.0], [50.6, 729.0], [50.7, 729.0], [50.8, 730.0], [50.9, 730.0], [51.0, 731.0], [51.1, 731.0], [51.2, 732.0], [51.3, 732.0], [51.4, 732.0], [51.5, 733.0], [51.6, 733.0], [51.7, 734.0], [51.8, 734.0], [51.9, 735.0], [52.0, 735.0], [52.1, 736.0], [52.2, 736.0], [52.3, 736.0], [52.4, 737.0], [52.5, 737.0], [52.6, 738.0], [52.7, 738.0], [52.8, 739.0], [52.9, 739.0], [53.0, 740.0], [53.1, 740.0], [53.2, 741.0], [53.3, 741.0], [53.4, 741.0], [53.5, 742.0], [53.6, 742.0], [53.7, 743.0], [53.8, 743.0], [53.9, 744.0], [54.0, 744.0], [54.1, 745.0], [54.2, 745.0], [54.3, 746.0], [54.4, 746.0], [54.5, 747.0], [54.6, 748.0], [54.7, 748.0], [54.8, 749.0], [54.9, 749.0], [55.0, 750.0], [55.1, 750.0], [55.2, 750.0], [55.3, 751.0], [55.4, 751.0], [55.5, 752.0], [55.6, 752.0], [55.7, 752.0], [55.8, 753.0], [55.9, 753.0], [56.0, 754.0], [56.1, 754.0], [56.2, 755.0], [56.3, 755.0], [56.4, 756.0], [56.5, 756.0], [56.6, 757.0], [56.7, 757.0], [56.8, 758.0], [56.9, 758.0], [57.0, 758.0], [57.1, 758.0], [57.2, 759.0], [57.3, 759.0], [57.4, 759.0], [57.5, 760.0], [57.6, 760.0], [57.7, 760.0], [57.8, 760.0], [57.9, 761.0], [58.0, 761.0], [58.1, 762.0], [58.2, 762.0], [58.3, 763.0], [58.4, 763.0], [58.5, 764.0], [58.6, 765.0], [58.7, 765.0], [58.8, 766.0], [58.9, 766.0], [59.0, 766.0], [59.1, 767.0], [59.2, 767.0], [59.3, 768.0], [59.4, 768.0], [59.5, 768.0], [59.6, 769.0], [59.7, 770.0], [59.8, 770.0], [59.9, 771.0], [60.0, 771.0], [60.1, 772.0], [60.2, 772.0], [60.3, 772.0], [60.4, 773.0], [60.5, 773.0], [60.6, 773.0], [60.7, 774.0], [60.8, 774.0], [60.9, 774.0], [61.0, 775.0], [61.1, 775.0], [61.2, 776.0], [61.3, 776.0], [61.4, 776.0], [61.5, 777.0], [61.6, 777.0], [61.7, 778.0], [61.8, 778.0], [61.9, 778.0], [62.0, 779.0], [62.1, 779.0], [62.2, 779.0], [62.3, 780.0], [62.4, 780.0], [62.5, 781.0], [62.6, 781.0], [62.7, 782.0], [62.8, 782.0], [62.9, 782.0], [63.0, 783.0], [63.1, 783.0], [63.2, 783.0], [63.3, 784.0], [63.4, 784.0], [63.5, 784.0], [63.6, 784.0], [63.7, 784.0], [63.8, 785.0], [63.9, 785.0], [64.0, 786.0], [64.1, 786.0], [64.2, 786.0], [64.3, 786.0], [64.4, 787.0], [64.5, 787.0], [64.6, 788.0], [64.7, 788.0], [64.8, 788.0], [64.9, 789.0], [65.0, 789.0], [65.1, 789.0], [65.2, 789.0], [65.3, 790.0], [65.4, 790.0], [65.5, 791.0], [65.6, 791.0], [65.7, 791.0], [65.8, 792.0], [65.9, 792.0], [66.0, 792.0], [66.1, 792.0], [66.2, 792.0], [66.3, 792.0], [66.4, 793.0], [66.5, 793.0], [66.6, 794.0], [66.7, 794.0], [66.8, 795.0], [66.9, 795.0], [67.0, 796.0], [67.1, 796.0], [67.2, 796.0], [67.3, 796.0], [67.4, 797.0], [67.5, 797.0], [67.6, 797.0], [67.7, 798.0], [67.8, 798.0], [67.9, 798.0], [68.0, 799.0], [68.1, 799.0], [68.2, 799.0], [68.3, 800.0], [68.4, 800.0], [68.5, 800.0], [68.6, 800.0], [68.7, 800.0], [68.8, 801.0], [68.9, 801.0], [69.0, 802.0], [69.1, 802.0], [69.2, 803.0], [69.3, 803.0], [69.4, 804.0], [69.5, 804.0], [69.6, 804.0], [69.7, 804.0], [69.8, 805.0], [69.9, 805.0], [70.0, 806.0], [70.1, 806.0], [70.2, 806.0], [70.3, 807.0], [70.4, 807.0], [70.5, 807.0], [70.6, 808.0], [70.7, 808.0], [70.8, 808.0], [70.9, 808.0], [71.0, 809.0], [71.1, 809.0], [71.2, 810.0], [71.3, 810.0], [71.4, 810.0], [71.5, 811.0], [71.6, 812.0], [71.7, 812.0], [71.8, 812.0], [71.9, 813.0], [72.0, 813.0], [72.1, 813.0], [72.2, 814.0], [72.3, 815.0], [72.4, 815.0], [72.5, 815.0], [72.6, 816.0], [72.7, 816.0], [72.8, 816.0], [72.9, 817.0], [73.0, 817.0], [73.1, 818.0], [73.2, 818.0], [73.3, 819.0], [73.4, 819.0], [73.5, 819.0], [73.6, 820.0], [73.7, 820.0], [73.8, 820.0], [73.9, 821.0], [74.0, 821.0], [74.1, 821.0], [74.2, 822.0], [74.3, 822.0], [74.4, 823.0], [74.5, 823.0], [74.6, 823.0], [74.7, 824.0], [74.8, 824.0], [74.9, 824.0], [75.0, 825.0], [75.1, 825.0], [75.2, 826.0], [75.3, 826.0], [75.4, 827.0], [75.5, 828.0], [75.6, 828.0], [75.7, 828.0], [75.8, 828.0], [75.9, 829.0], [76.0, 829.0], [76.1, 830.0], [76.2, 830.0], [76.3, 831.0], [76.4, 831.0], [76.5, 831.0], [76.6, 832.0], [76.7, 832.0], [76.8, 832.0], [76.9, 833.0], [77.0, 833.0], [77.1, 834.0], [77.2, 834.0], [77.3, 834.0], [77.4, 835.0], [77.5, 835.0], [77.6, 835.0], [77.7, 836.0], [77.8, 836.0], [77.9, 836.0], [78.0, 836.0], [78.1, 837.0], [78.2, 837.0], [78.3, 837.0], [78.4, 838.0], [78.5, 838.0], [78.6, 839.0], [78.7, 839.0], [78.8, 839.0], [78.9, 840.0], [79.0, 840.0], [79.1, 840.0], [79.2, 840.0], [79.3, 841.0], [79.4, 841.0], [79.5, 842.0], [79.6, 842.0], [79.7, 842.0], [79.8, 843.0], [79.9, 843.0], [80.0, 844.0], [80.1, 844.0], [80.2, 844.0], [80.3, 845.0], [80.4, 845.0], [80.5, 846.0], [80.6, 846.0], [80.7, 846.0], [80.8, 847.0], [80.9, 847.0], [81.0, 847.0], [81.1, 848.0], [81.2, 848.0], [81.3, 848.0], [81.4, 849.0], [81.5, 849.0], [81.6, 849.0], [81.7, 850.0], [81.8, 850.0], [81.9, 851.0], [82.0, 851.0], [82.1, 851.0], [82.2, 852.0], [82.3, 852.0], [82.4, 852.0], [82.5, 852.0], [82.6, 853.0], [82.7, 853.0], [82.8, 853.0], [82.9, 854.0], [83.0, 854.0], [83.1, 854.0], [83.2, 855.0], [83.3, 855.0], [83.4, 856.0], [83.5, 856.0], [83.6, 856.0], [83.7, 857.0], [83.8, 857.0], [83.9, 857.0], [84.0, 858.0], [84.1, 858.0], [84.2, 858.0], [84.3, 858.0], [84.4, 859.0], [84.5, 859.0], [84.6, 859.0], [84.7, 860.0], [84.8, 860.0], [84.9, 860.0], [85.0, 860.0], [85.1, 861.0], [85.2, 861.0], [85.3, 861.0], [85.4, 862.0], [85.5, 862.0], [85.6, 862.0], [85.7, 862.0], [85.8, 863.0], [85.9, 863.0], [86.0, 864.0], [86.1, 864.0], [86.2, 864.0], [86.3, 864.0], [86.4, 865.0], [86.5, 865.0], [86.6, 865.0], [86.7, 866.0], [86.8, 866.0], [86.9, 866.0], [87.0, 866.0], [87.1, 867.0], [87.2, 867.0], [87.3, 867.0], [87.4, 868.0], [87.5, 868.0], [87.6, 868.0], [87.7, 868.0], [87.8, 869.0], [87.9, 869.0], [88.0, 869.0], [88.1, 870.0], [88.2, 870.0], [88.3, 870.0], [88.4, 871.0], [88.5, 871.0], [88.6, 871.0], [88.7, 872.0], [88.8, 872.0], [88.9, 872.0], [89.0, 872.0], [89.1, 873.0], [89.2, 873.0], [89.3, 873.0], [89.4, 874.0], [89.5, 874.0], [89.6, 874.0], [89.7, 875.0], [89.8, 875.0], [89.9, 876.0], [90.0, 876.0], [90.1, 876.0], [90.2, 876.0], [90.3, 877.0], [90.4, 877.0], [90.5, 878.0], [90.6, 878.0], [90.7, 879.0], [90.8, 879.0], [90.9, 880.0], [91.0, 880.0], [91.1, 880.0], [91.2, 881.0], [91.3, 881.0], [91.4, 882.0], [91.5, 882.0], [91.6, 883.0], [91.7, 883.0], [91.8, 883.0], [91.9, 884.0], [92.0, 884.0], [92.1, 884.0], [92.2, 885.0], [92.3, 885.0], [92.4, 886.0], [92.5, 887.0], [92.6, 887.0], [92.7, 888.0], [92.8, 888.0], [92.9, 888.0], [93.0, 888.0], [93.1, 889.0], [93.2, 889.0], [93.3, 889.0], [93.4, 890.0], [93.5, 891.0], [93.6, 891.0], [93.7, 892.0], [93.8, 892.0], [93.9, 893.0], [94.0, 894.0], [94.1, 895.0], [94.2, 896.0], [94.3, 896.0], [94.4, 896.0], [94.5, 897.0], [94.6, 897.0], [94.7, 898.0], [94.8, 899.0], [94.9, 900.0], [95.0, 900.0], [95.1, 902.0], [95.2, 903.0], [95.3, 904.0], [95.4, 904.0], [95.5, 904.0], [95.6, 905.0], [95.7, 906.0], [95.8, 907.0], [95.9, 908.0], [96.0, 908.0], [96.1, 908.0], [96.2, 908.0], [96.3, 910.0], [96.4, 911.0], [96.5, 912.0], [96.6, 912.0], [96.7, 914.0], [96.8, 915.0], [96.9, 915.0], [97.0, 915.0], [97.1, 915.0], [97.2, 916.0], [97.3, 916.0], [97.4, 917.0], [97.5, 918.0], [97.6, 919.0], [97.7, 921.0], [97.8, 923.0], [97.9, 924.0], [98.0, 925.0], [98.1, 927.0], [98.2, 928.0], [98.3, 932.0], [98.4, 935.0], [98.5, 936.0], [98.6, 939.0], [98.7, 942.0], [98.8, 948.0], [98.9, 951.0], [99.0, 952.0], [99.1, 956.0], [99.2, 961.0], [99.3, 966.0], [99.4, 971.0], [99.5, 974.0], [99.6, 981.0], [99.7, 990.0], [99.8, 1017.0], [99.9, 1022.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 9.0], [0.1, 32.0], [0.2, 34.0], [0.3, 37.0], [0.4, 39.0], [0.5, 46.0], [0.6, 51.0], [0.7, 56.0], [0.8, 58.0], [0.9, 60.0], [1.0, 62.0], [1.1, 65.0], [1.2, 68.0], [1.3, 70.0], [1.4, 72.0], [1.5, 73.0], [1.6, 75.0], [1.7, 76.0], [1.8, 77.0], [1.9, 79.0], [2.0, 80.0], [2.1, 81.0], [2.2, 83.0], [2.3, 85.0], [2.4, 86.0], [2.5, 89.0], [2.6, 91.0], [2.7, 92.0], [2.8, 93.0], [2.9, 95.0], [3.0, 96.0], [3.1, 98.0], [3.2, 100.0], [3.3, 102.0], [3.4, 103.0], [3.5, 105.0], [3.6, 107.0], [3.7, 108.0], [3.8, 109.0], [3.9, 110.0], [4.0, 111.0], [4.1, 112.0], [4.2, 113.0], [4.3, 113.0], [4.4, 115.0], [4.5, 116.0], [4.6, 117.0], [4.7, 119.0], [4.8, 121.0], [4.9, 123.0], [5.0, 124.0], [5.1, 125.0], [5.2, 127.0], [5.3, 129.0], [5.4, 131.0], [5.5, 133.0], [5.6, 134.0], [5.7, 136.0], [5.8, 137.0], [5.9, 139.0], [6.0, 140.0], [6.1, 141.0], [6.2, 143.0], [6.3, 144.0], [6.4, 144.0], [6.5, 145.0], [6.6, 146.0], [6.7, 148.0], [6.8, 150.0], [6.9, 151.0], [7.0, 152.0], [7.1, 152.0], [7.2, 153.0], [7.3, 154.0], [7.4, 155.0], [7.5, 156.0], [7.6, 156.0], [7.7, 157.0], [7.8, 158.0], [7.9, 159.0], [8.0, 159.0], [8.1, 160.0], [8.2, 160.0], [8.3, 161.0], [8.4, 162.0], [8.5, 163.0], [8.6, 163.0], [8.7, 163.0], [8.8, 164.0], [8.9, 164.0], [9.0, 165.0], [9.1, 166.0], [9.2, 166.0], [9.3, 167.0], [9.4, 167.0], [9.5, 168.0], [9.6, 168.0], [9.7, 169.0], [9.8, 170.0], [9.9, 171.0], [10.0, 171.0], [10.1, 172.0], [10.2, 172.0], [10.3, 173.0], [10.4, 173.0], [10.5, 174.0], [10.6, 175.0], [10.7, 175.0], [10.8, 176.0], [10.9, 176.0], [11.0, 177.0], [11.1, 178.0], [11.2, 180.0], [11.3, 180.0], [11.4, 180.0], [11.5, 181.0], [11.6, 181.0], [11.7, 182.0], [11.8, 182.0], [11.9, 183.0], [12.0, 184.0], [12.1, 185.0], [12.2, 185.0], [12.3, 186.0], [12.4, 187.0], [12.5, 188.0], [12.6, 188.0], [12.7, 189.0], [12.8, 190.0], [12.9, 191.0], [13.0, 191.0], [13.1, 192.0], [13.2, 192.0], [13.3, 193.0], [13.4, 193.0], [13.5, 194.0], [13.6, 195.0], [13.7, 195.0], [13.8, 195.0], [13.9, 196.0], [14.0, 197.0], [14.1, 197.0], [14.2, 198.0], [14.3, 199.0], [14.4, 200.0], [14.5, 200.0], [14.6, 201.0], [14.7, 202.0], [14.8, 202.0], [14.9, 203.0], [15.0, 204.0], [15.1, 204.0], [15.2, 205.0], [15.3, 205.0], [15.4, 206.0], [15.5, 206.0], [15.6, 207.0], [15.7, 208.0], [15.8, 208.0], [15.9, 209.0], [16.0, 209.0], [16.1, 210.0], [16.2, 211.0], [16.3, 211.0], [16.4, 212.0], [16.5, 213.0], [16.6, 213.0], [16.7, 214.0], [16.8, 214.0], [16.9, 215.0], [17.0, 215.0], [17.1, 215.0], [17.2, 215.0], [17.3, 216.0], [17.4, 216.0], [17.5, 216.0], [17.6, 217.0], [17.7, 217.0], [17.8, 218.0], [17.9, 218.0], [18.0, 219.0], [18.1, 219.0], [18.2, 220.0], [18.3, 220.0], [18.4, 221.0], [18.5, 221.0], [18.6, 222.0], [18.7, 222.0], [18.8, 223.0], [18.9, 223.0], [19.0, 223.0], [19.1, 223.0], [19.2, 224.0], [19.3, 224.0], [19.4, 224.0], [19.5, 224.0], [19.6, 225.0], [19.7, 225.0], [19.8, 225.0], [19.9, 225.0], [20.0, 226.0], [20.1, 226.0], [20.2, 226.0], [20.3, 227.0], [20.4, 227.0], [20.5, 227.0], [20.6, 227.0], [20.7, 228.0], [20.8, 228.0], [20.9, 228.0], [21.0, 229.0], [21.1, 229.0], [21.2, 229.0], [21.3, 230.0], [21.4, 230.0], [21.5, 230.0], [21.6, 231.0], [21.7, 232.0], [21.8, 232.0], [21.9, 232.0], [22.0, 232.0], [22.1, 233.0], [22.2, 233.0], [22.3, 233.0], [22.4, 234.0], [22.5, 234.0], [22.6, 234.0], [22.7, 234.0], [22.8, 235.0], [22.9, 235.0], [23.0, 235.0], [23.1, 235.0], [23.2, 236.0], [23.3, 236.0], [23.4, 236.0], [23.5, 237.0], [23.6, 237.0], [23.7, 237.0], [23.8, 238.0], [23.9, 238.0], [24.0, 239.0], [24.1, 239.0], [24.2, 239.0], [24.3, 240.0], [24.4, 240.0], [24.5, 240.0], [24.6, 240.0], [24.7, 241.0], [24.8, 241.0], [24.9, 241.0], [25.0, 242.0], [25.1, 242.0], [25.2, 242.0], [25.3, 242.0], [25.4, 242.0], [25.5, 243.0], [25.6, 243.0], [25.7, 243.0], [25.8, 243.0], [25.9, 244.0], [26.0, 244.0], [26.1, 244.0], [26.2, 245.0], [26.3, 245.0], [26.4, 245.0], [26.5, 246.0], [26.6, 246.0], [26.7, 246.0], [26.8, 247.0], [26.9, 247.0], [27.0, 247.0], [27.1, 248.0], [27.2, 248.0], [27.3, 248.0], [27.4, 248.0], [27.5, 249.0], [27.6, 249.0], [27.7, 250.0], [27.8, 250.0], [27.9, 250.0], [28.0, 250.0], [28.1, 251.0], [28.2, 251.0], [28.3, 251.0], [28.4, 251.0], [28.5, 252.0], [28.6, 252.0], [28.7, 252.0], [28.8, 252.0], [28.9, 252.0], [29.0, 253.0], [29.1, 253.0], [29.2, 253.0], [29.3, 253.0], [29.4, 254.0], [29.5, 254.0], [29.6, 254.0], [29.7, 255.0], [29.8, 255.0], [29.9, 255.0], [30.0, 256.0], [30.1, 256.0], [30.2, 256.0], [30.3, 256.0], [30.4, 257.0], [30.5, 257.0], [30.6, 258.0], [30.7, 258.0], [30.8, 258.0], [30.9, 258.0], [31.0, 259.0], [31.1, 259.0], [31.2, 259.0], [31.3, 260.0], [31.4, 260.0], [31.5, 261.0], [31.6, 261.0], [31.7, 261.0], [31.8, 262.0], [31.9, 262.0], [32.0, 262.0], [32.1, 263.0], [32.2, 263.0], [32.3, 263.0], [32.4, 264.0], [32.5, 264.0], [32.6, 264.0], [32.7, 264.0], [32.8, 265.0], [32.9, 265.0], [33.0, 266.0], [33.1, 266.0], [33.2, 266.0], [33.3, 267.0], [33.4, 267.0], [33.5, 267.0], [33.6, 267.0], [33.7, 268.0], [33.8, 268.0], [33.9, 268.0], [34.0, 269.0], [34.1, 269.0], [34.2, 269.0], [34.3, 270.0], [34.4, 270.0], [34.5, 271.0], [34.6, 271.0], [34.7, 271.0], [34.8, 271.0], [34.9, 272.0], [35.0, 272.0], [35.1, 272.0], [35.2, 273.0], [35.3, 273.0], [35.4, 273.0], [35.5, 273.0], [35.6, 274.0], [35.7, 274.0], [35.8, 274.0], [35.9, 275.0], [36.0, 275.0], [36.1, 275.0], [36.2, 275.0], [36.3, 276.0], [36.4, 276.0], [36.5, 276.0], [36.6, 277.0], [36.7, 277.0], [36.8, 277.0], [36.9, 278.0], [37.0, 278.0], [37.1, 278.0], [37.2, 278.0], [37.3, 279.0], [37.4, 279.0], [37.5, 280.0], [37.6, 280.0], [37.7, 280.0], [37.8, 281.0], [37.9, 281.0], [38.0, 281.0], [38.1, 282.0], [38.2, 282.0], [38.3, 282.0], [38.4, 283.0], [38.5, 283.0], [38.6, 283.0], [38.7, 284.0], [38.8, 284.0], [38.9, 284.0], [39.0, 285.0], [39.1, 285.0], [39.2, 285.0], [39.3, 286.0], [39.4, 286.0], [39.5, 286.0], [39.6, 287.0], [39.7, 287.0], [39.8, 287.0], [39.9, 287.0], [40.0, 288.0], [40.1, 288.0], [40.2, 288.0], [40.3, 289.0], [40.4, 289.0], [40.5, 289.0], [40.6, 290.0], [40.7, 290.0], [40.8, 290.0], [40.9, 290.0], [41.0, 291.0], [41.1, 291.0], [41.2, 291.0], [41.3, 292.0], [41.4, 292.0], [41.5, 293.0], [41.6, 293.0], [41.7, 293.0], [41.8, 294.0], [41.9, 294.0], [42.0, 294.0], [42.1, 295.0], [42.2, 295.0], [42.3, 296.0], [42.4, 296.0], [42.5, 296.0], [42.6, 297.0], [42.7, 297.0], [42.8, 298.0], [42.9, 298.0], [43.0, 298.0], [43.1, 299.0], [43.2, 299.0], [43.3, 299.0], [43.4, 300.0], [43.5, 300.0], [43.6, 300.0], [43.7, 301.0], [43.8, 301.0], [43.9, 301.0], [44.0, 302.0], [44.1, 302.0], [44.2, 302.0], [44.3, 303.0], [44.4, 303.0], [44.5, 304.0], [44.6, 305.0], [44.7, 305.0], [44.8, 306.0], [44.9, 306.0], [45.0, 306.0], [45.1, 307.0], [45.2, 307.0], [45.3, 307.0], [45.4, 308.0], [45.5, 308.0], [45.6, 308.0], [45.7, 309.0], [45.8, 309.0], [45.9, 309.0], [46.0, 310.0], [46.1, 310.0], [46.2, 310.0], [46.3, 311.0], [46.4, 311.0], [46.5, 311.0], [46.6, 312.0], [46.7, 312.0], [46.8, 312.0], [46.9, 313.0], [47.0, 313.0], [47.1, 313.0], [47.2, 313.0], [47.3, 314.0], [47.4, 314.0], [47.5, 314.0], [47.6, 315.0], [47.7, 315.0], [47.8, 315.0], [47.9, 316.0], [48.0, 316.0], [48.1, 317.0], [48.2, 317.0], [48.3, 317.0], [48.4, 318.0], [48.5, 318.0], [48.6, 318.0], [48.7, 319.0], [48.8, 319.0], [48.9, 319.0], [49.0, 320.0], [49.1, 320.0], [49.2, 321.0], [49.3, 321.0], [49.4, 321.0], [49.5, 322.0], [49.6, 322.0], [49.7, 322.0], [49.8, 323.0], [49.9, 323.0], [50.0, 323.0], [50.1, 323.0], [50.2, 324.0], [50.3, 324.0], [50.4, 324.0], [50.5, 325.0], [50.6, 325.0], [50.7, 325.0], [50.8, 326.0], [50.9, 326.0], [51.0, 326.0], [51.1, 327.0], [51.2, 327.0], [51.3, 328.0], [51.4, 328.0], [51.5, 328.0], [51.6, 328.0], [51.7, 329.0], [51.8, 329.0], [51.9, 329.0], [52.0, 330.0], [52.1, 330.0], [52.2, 331.0], [52.3, 331.0], [52.4, 331.0], [52.5, 332.0], [52.6, 332.0], [52.7, 333.0], [52.8, 333.0], [52.9, 333.0], [53.0, 334.0], [53.1, 334.0], [53.2, 334.0], [53.3, 335.0], [53.4, 335.0], [53.5, 335.0], [53.6, 336.0], [53.7, 336.0], [53.8, 336.0], [53.9, 337.0], [54.0, 337.0], [54.1, 337.0], [54.2, 338.0], [54.3, 338.0], [54.4, 338.0], [54.5, 339.0], [54.6, 340.0], [54.7, 340.0], [54.8, 340.0], [54.9, 341.0], [55.0, 341.0], [55.1, 342.0], [55.2, 342.0], [55.3, 343.0], [55.4, 343.0], [55.5, 343.0], [55.6, 344.0], [55.7, 344.0], [55.8, 344.0], [55.9, 345.0], [56.0, 345.0], [56.1, 346.0], [56.2, 346.0], [56.3, 347.0], [56.4, 347.0], [56.5, 348.0], [56.6, 349.0], [56.7, 349.0], [56.8, 350.0], [56.9, 351.0], [57.0, 351.0], [57.1, 352.0], [57.2, 352.0], [57.3, 353.0], [57.4, 353.0], [57.5, 354.0], [57.6, 354.0], [57.7, 355.0], [57.8, 356.0], [57.9, 356.0], [58.0, 357.0], [58.1, 358.0], [58.2, 359.0], [58.3, 359.0], [58.4, 360.0], [58.5, 360.0], [58.6, 361.0], [58.7, 362.0], [58.8, 362.0], [58.9, 363.0], [59.0, 364.0], [59.1, 364.0], [59.2, 365.0], [59.3, 366.0], [59.4, 366.0], [59.5, 367.0], [59.6, 368.0], [59.7, 368.0], [59.8, 369.0], [59.9, 369.0], [60.0, 370.0], [60.1, 371.0], [60.2, 372.0], [60.3, 373.0], [60.4, 373.0], [60.5, 374.0], [60.6, 375.0], [60.7, 376.0], [60.8, 376.0], [60.9, 377.0], [61.0, 377.0], [61.1, 378.0], [61.2, 379.0], [61.3, 380.0], [61.4, 380.0], [61.5, 381.0], [61.6, 382.0], [61.7, 383.0], [61.8, 384.0], [61.9, 384.0], [62.0, 385.0], [62.1, 386.0], [62.2, 386.0], [62.3, 387.0], [62.4, 388.0], [62.5, 388.0], [62.6, 389.0], [62.7, 390.0], [62.8, 391.0], [62.9, 391.0], [63.0, 392.0], [63.1, 393.0], [63.2, 394.0], [63.3, 394.0], [63.4, 395.0], [63.5, 396.0], [63.6, 397.0], [63.7, 397.0], [63.8, 398.0], [63.9, 398.0], [64.0, 399.0], [64.1, 399.0], [64.2, 400.0], [64.3, 400.0], [64.4, 401.0], [64.5, 401.0], [64.6, 402.0], [64.7, 403.0], [64.8, 403.0], [64.9, 404.0], [65.0, 404.0], [65.1, 405.0], [65.2, 406.0], [65.3, 406.0], [65.4, 407.0], [65.5, 408.0], [65.6, 408.0], [65.7, 409.0], [65.8, 410.0], [65.9, 410.0], [66.0, 411.0], [66.1, 411.0], [66.2, 412.0], [66.3, 412.0], [66.4, 413.0], [66.5, 413.0], [66.6, 413.0], [66.7, 414.0], [66.8, 415.0], [66.9, 415.0], [67.0, 415.0], [67.1, 415.0], [67.2, 416.0], [67.3, 417.0], [67.4, 417.0], [67.5, 418.0], [67.6, 419.0], [67.7, 420.0], [67.8, 421.0], [67.9, 421.0], [68.0, 423.0], [68.1, 423.0], [68.2, 424.0], [68.3, 424.0], [68.4, 425.0], [68.5, 426.0], [68.6, 427.0], [68.7, 427.0], [68.8, 428.0], [68.9, 429.0], [69.0, 429.0], [69.1, 430.0], [69.2, 431.0], [69.3, 431.0], [69.4, 432.0], [69.5, 432.0], [69.6, 433.0], [69.7, 434.0], [69.8, 435.0], [69.9, 436.0], [70.0, 437.0], [70.1, 438.0], [70.2, 439.0], [70.3, 439.0], [70.4, 441.0], [70.5, 442.0], [70.6, 443.0], [70.7, 444.0], [70.8, 444.0], [70.9, 445.0], [71.0, 446.0], [71.1, 447.0], [71.2, 448.0], [71.3, 449.0], [71.4, 450.0], [71.5, 452.0], [71.6, 453.0], [71.7, 454.0], [71.8, 455.0], [71.9, 456.0], [72.0, 457.0], [72.1, 458.0], [72.2, 460.0], [72.3, 461.0], [72.4, 464.0], [72.5, 464.0], [72.6, 466.0], [72.7, 467.0], [72.8, 468.0], [72.9, 471.0], [73.0, 472.0], [73.1, 473.0], [73.2, 475.0], [73.3, 477.0], [73.4, 479.0], [73.5, 480.0], [73.6, 483.0], [73.7, 486.0], [73.8, 488.0], [73.9, 489.0], [74.0, 492.0], [74.1, 494.0], [74.2, 498.0], [74.3, 503.0], [74.4, 506.0], [74.5, 508.0], [74.6, 510.0], [74.7, 515.0], [74.8, 517.0], [74.9, 520.0], [75.0, 522.0], [75.1, 524.0], [75.2, 527.0], [75.3, 529.0], [75.4, 531.0], [75.5, 535.0], [75.6, 537.0], [75.7, 542.0], [75.8, 544.0], [75.9, 548.0], [76.0, 554.0], [76.1, 558.0], [76.2, 564.0], [76.3, 569.0], [76.4, 574.0], [76.5, 580.0], [76.6, 583.0], [76.7, 588.0], [76.8, 596.0], [76.9, 600.0], [77.0, 606.0], [77.1, 620.0], [77.2, 636.0], [77.3, 639.0], [77.4, 648.0], [77.5, 656.0], [77.6, 668.0], [77.7, 681.0], [77.8, 685.0], [77.9, 689.0], [78.0, 697.0], [78.1, 703.0], [78.2, 710.0], [78.3, 714.0], [78.4, 720.0], [78.5, 726.0], [78.6, 729.0], [78.7, 737.0], [78.8, 743.0], [78.9, 749.0], [79.0, 752.0], [79.1, 758.0], [79.2, 761.0], [79.3, 767.0], [79.4, 772.0], [79.5, 775.0], [79.6, 779.0], [79.7, 782.0], [79.8, 787.0], [79.9, 790.0], [80.0, 798.0], [80.1, 803.0], [80.2, 810.0], [80.3, 813.0], [80.4, 822.0], [80.5, 825.0], [80.6, 828.0], [80.7, 831.0], [80.8, 833.0], [80.9, 837.0], [81.0, 840.0], [81.1, 844.0], [81.2, 846.0], [81.3, 851.0], [81.4, 855.0], [81.5, 857.0], [81.6, 860.0], [81.7, 861.0], [81.8, 864.0], [81.9, 867.0], [82.0, 869.0], [82.1, 872.0], [82.2, 875.0], [82.3, 879.0], [82.4, 882.0], [82.5, 885.0], [82.6, 891.0], [82.7, 894.0], [82.8, 895.0], [82.9, 899.0], [83.0, 904.0], [83.1, 907.0], [83.2, 912.0], [83.3, 916.0], [83.4, 919.0], [83.5, 922.0], [83.6, 925.0], [83.7, 930.0], [83.8, 932.0], [83.9, 936.0], [84.0, 941.0], [84.1, 946.0], [84.2, 950.0], [84.3, 952.0], [84.4, 954.0], [84.5, 958.0], [84.6, 960.0], [84.7, 963.0], [84.8, 966.0], [84.9, 971.0], [85.0, 974.0], [85.1, 977.0], [85.2, 985.0], [85.3, 991.0], [85.4, 994.0], [85.5, 997.0], [85.6, 1001.0], [85.7, 1004.0], [85.8, 1006.0], [85.9, 1010.0], [86.0, 1012.0], [86.1, 1014.0], [86.2, 1016.0], [86.3, 1020.0], [86.4, 1023.0], [86.5, 1026.0], [86.6, 1031.0], [86.7, 1036.0], [86.8, 1039.0], [86.9, 1042.0], [87.0, 1048.0], [87.1, 1052.0], [87.2, 1056.0], [87.3, 1061.0], [87.4, 1066.0], [87.5, 1072.0], [87.6, 1083.0], [87.7, 1095.0], [87.8, 1105.0], [87.9, 1121.0], [88.0, 1131.0], [88.1, 1142.0], [88.2, 1165.0], [88.3, 1171.0], [88.4, 1179.0], [88.5, 1182.0], [88.6, 1190.0], [88.7, 1195.0], [88.8, 1200.0], [88.9, 1203.0], [89.0, 1208.0], [89.1, 1219.0], [89.2, 1229.0], [89.3, 1241.0], [89.4, 1256.0], [89.5, 1276.0], [89.6, 1287.0], [89.7, 1299.0], [89.8, 1319.0], [89.9, 1346.0], [90.0, 1457.0], [90.1, 1528.0], [90.2, 1552.0], [90.3, 1564.0], [90.4, 1573.0], [90.5, 1580.0], [90.6, 1589.0], [90.7, 1598.0], [90.8, 1607.0], [90.9, 1613.0], [91.0, 1620.0], [91.1, 1625.0], [91.2, 1633.0], [91.3, 1641.0], [91.4, 1647.0], [91.5, 1654.0], [91.6, 1660.0], [91.7, 1666.0], [91.8, 1672.0], [91.9, 1680.0], [92.0, 1689.0], [92.1, 1700.0], [92.2, 1715.0], [92.3, 1722.0], [92.4, 1738.0], [92.5, 1747.0], [92.6, 1754.0], [92.7, 1762.0], [92.8, 1770.0], [92.9, 1780.0], [93.0, 1788.0], [93.1, 1792.0], [93.2, 1797.0], [93.3, 1805.0], [93.4, 1812.0], [93.5, 1819.0], [93.6, 1824.0], [93.7, 1831.0], [93.8, 1840.0], [93.9, 1844.0], [94.0, 1850.0], [94.1, 1861.0], [94.2, 1870.0], [94.3, 1886.0], [94.4, 1892.0], [94.5, 1897.0], [94.6, 1912.0], [94.7, 1918.0], [94.8, 1928.0], [94.9, 1937.0], [95.0, 1948.0], [95.1, 1958.0], [95.2, 1968.0], [95.3, 1983.0], [95.4, 1990.0], [95.5, 2002.0], [95.6, 2007.0], [95.7, 2013.0], [95.8, 2027.0], [95.9, 2042.0], [96.0, 2063.0], [96.1, 2081.0], [96.2, 2101.0], [96.3, 2115.0], [96.4, 2132.0], [96.5, 2138.0], [96.6, 2144.0], [96.7, 2159.0], [96.8, 2172.0], [96.9, 2187.0], [97.0, 2201.0], [97.1, 2210.0], [97.2, 2224.0], [97.3, 2232.0], [97.4, 2244.0], [97.5, 2253.0], [97.6, 2265.0], [97.7, 2274.0], [97.8, 2290.0], [97.9, 2312.0], [98.0, 2337.0], [98.1, 2353.0], [98.2, 2367.0], [98.3, 2383.0], [98.4, 2398.0], [98.5, 2412.0], [98.6, 2445.0], [98.7, 2462.0], [98.8, 2492.0], [98.9, 2510.0], [99.0, 2547.0], [99.1, 2560.0], [99.2, 2577.0], [99.3, 2590.0], [99.4, 2604.0], [99.5, 2625.0], [99.6, 2651.0], [99.7, 2672.0], [99.8, 2717.0], [99.9, 2843.0], [100.0, 3003.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2903.0, "series": [{"data": [[0.0, 2089.0], [600.0, 72.0], [700.0, 18.0], [3000.0, 2.0], [200.0, 2290.0], [800.0, 5.0], [900.0, 3.0], [1000.0, 122.0], [1100.0, 23.0], [300.0, 1757.0], [1200.0, 16.0], [1300.0, 15.0], [1400.0, 3.0], [1500.0, 1.0], [400.0, 613.0], [100.0, 2766.0], [500.0, 205.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 3.0], [1100.0, 1.0], [300.0, 627.0], [600.0, 1448.0], [700.0, 2399.0], [200.0, 290.0], [400.0, 850.0], [100.0, 40.0], [800.0, 2658.0], [900.0, 497.0], [500.0, 1167.0], [1000.0, 20.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 315.0], [600.0, 113.0], [700.0, 201.0], [800.0, 289.0], [900.0, 263.0], [1000.0, 218.0], [1100.0, 102.0], [1200.0, 95.0], [1300.0, 26.0], [1400.0, 6.0], [1500.0, 68.0], [1600.0, 138.0], [100.0, 1121.0], [1700.0, 116.0], [1800.0, 128.0], [1900.0, 95.0], [2000.0, 70.0], [2100.0, 81.0], [2200.0, 87.0], [2300.0, 55.0], [2400.0, 45.0], [2500.0, 51.0], [2600.0, 39.0], [2700.0, 11.0], [2800.0, 5.0], [2900.0, 8.0], [3000.0, 1.0], [200.0, 2903.0], [300.0, 2072.0], [400.0, 1012.0], [500.0, 266.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1001.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 18762.0, "series": [{"data": [[0.0, 18762.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 10237.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1001.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 588.7309124767223, "minX": 1.66955322E12, "maxY": 900.9787999999998, "series": [{"data": [[1.66955328E12, 877.4202999999984]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.66955322E12, 588.7309124767223], [1.66955328E12, 826.3849428635451]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.66955322E12, 900.9787999999998]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66955328E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.0, "maxY": 1090.5, "series": [{"data": [[2.0, 386.37499999999994], [3.0, 1020.0], [4.0, 5.666666666666667], [5.0, 1033.0], [6.0, 5.0], [7.0, 9.5], [8.0, 1022.0], [9.0, 6.0], [10.0, 5.666666666666667], [11.0, 510.0], [12.0, 1016.0], [13.0, 6.0], [14.0, 6.0], [15.0, 528.0], [16.0, 9.5], [17.0, 438.42857142857144], [18.0, 8.0], [19.0, 5.0], [20.0, 5.0], [21.0, 6.0], [23.0, 13.333333333333334], [24.0, 12.0], [25.0, 31.0], [26.0, 31.5], [27.0, 32.0], [28.0, 32.0], [29.0, 37.0], [31.0, 30.6], [35.0, 35.0], [34.0, 36.0], [37.0, 34.666666666666664], [39.0, 31.0], [38.0, 34.0], [41.0, 35.4], [45.0, 31.0], [44.0, 38.5], [47.0, 32.0], [46.0, 38.857142857142854], [48.0, 39.5], [50.0, 34.0], [53.0, 31.5], [52.0, 35.25], [54.0, 32.888888888888886], [57.0, 28.0], [56.0, 30.0], [59.0, 30.0], [58.0, 30.0], [61.0, 34.0], [60.0, 45.5], [63.0, 32.5], [62.0, 32.0], [67.0, 389.33333333333337], [65.0, 61.8], [64.0, 45.666666666666664], [71.0, 50.333333333333336], [69.0, 50.111111111111114], [68.0, 56.0], [75.0, 52.57142857142858], [73.0, 53.44444444444444], [78.0, 43.2], [77.0, 44.0], [83.0, 31.833333333333332], [82.0, 38.8], [81.0, 46.75], [80.0, 46.2], [87.0, 497.1333333333333], [86.0, 528.5], [85.0, 30.0], [84.0, 30.5], [91.0, 1090.5], [90.0, 396.6666666666667], [89.0, 807.0], [95.0, 507.0], [93.0, 744.3333333333334], [92.0, 776.2], [99.0, 576.5], [98.0, 752.0], [96.0, 38.0], [103.0, 405.33333333333337], [102.0, 775.55], [100.0, 625.3333333333334], [107.0, 39.0], [106.0, 1050.8571428571427], [105.0, 1060.0], [104.0, 1076.142857142857], [109.0, 39.666666666666664], [115.0, 32.0], [114.0, 41.0], [112.0, 32.0], [118.0, 32.0], [117.0, 31.0], [116.0, 28.666666666666668], [121.0, 547.0], [123.0, 42.0], [120.0, 34.333333333333336], [127.0, 956.7272727272726], [126.0, 37.833333333333336], [124.0, 44.666666666666664], [135.0, 54.666666666666664], [134.0, 51.5], [133.0, 49.5], [131.0, 49.0], [129.0, 50.0], [143.0, 51.57142857142858], [142.0, 51.5], [141.0, 53.0], [140.0, 51.0], [137.0, 51.666666666666664], [136.0, 60.0], [150.0, 46.5], [149.0, 48.0], [148.0, 47.0], [146.0, 52.75], [144.0, 49.333333333333336], [159.0, 45.0], [158.0, 45.0], [157.0, 40.2], [156.0, 39.6], [153.0, 47.333333333333336], [152.0, 45.5], [167.0, 49.333333333333336], [166.0, 44.0], [165.0, 39.0], [162.0, 40.0], [163.0, 50.0], [164.0, 49.0], [160.0, 40.0], [172.0, 55.5], [171.0, 50.666666666666664], [170.0, 85.38461538461539], [169.0, 55.0], [183.0, 63.53846153846154], [182.0, 57.285714285714285], [180.0, 55.0], [190.0, 60.5], [188.0, 67.0], [187.0, 64.0], [186.0, 54.5], [185.0, 58.666666666666664], [184.0, 62.36363636363637], [199.0, 49.666666666666664], [198.0, 59.0], [197.0, 53.0], [196.0, 61.66666666666667], [195.0, 54.0], [193.0, 55.5], [192.0, 55.0], [207.0, 131.33333333333334], [206.0, 49.0], [205.0, 273.0], [204.0, 53.25], [203.0, 50.0], [202.0, 48.5], [201.0, 48.0], [200.0, 54.0], [215.0, 41.0], [214.0, 329.0], [213.0, 171.25], [211.0, 50.0], [210.0, 108.25], [209.0, 277.5], [208.0, 55.0], [223.0, 464.0], [222.0, 354.5], [221.0, 39.0], [220.0, 330.3333333333333], [218.0, 383.44444444444446], [217.0, 495.5], [216.0, 443.0], [231.0, 182.0], [230.0, 67.5], [229.0, 81.0], [228.0, 63.0], [227.0, 56.0], [226.0, 44.0], [225.0, 58.0], [224.0, 38.0], [239.0, 292.5], [237.0, 694.4], [235.0, 69.0], [234.0, 306.45454545454544], [233.0, 280.75], [232.0, 265.0], [250.0, 52.0], [254.0, 66.0], [269.0, 62.714285714285715], [271.0, 63.333333333333336], [258.0, 73.33333333333333], [257.0, 68.0], [262.0, 77.0], [260.0, 54.0], [259.0, 62.0], [261.0, 34.0], [275.0, 269.0], [280.0, 361.0], [272.0, 76.60000000000001], [281.0, 178.2], [284.0, 69.0], [274.0, 68.66666666666667], [273.0, 59.0], [283.0, 57.5], [282.0, 61.5], [279.0, 65.5], [278.0, 129.83333333333331], [277.0, 64.0], [301.0, 159.66666666666666], [299.0, 152.25], [300.0, 227.5], [290.0, 62.0], [289.0, 75.75], [303.0, 162.0], [302.0, 57.2], [297.0, 69.33333333333333], [296.0, 69.6], [295.0, 66.0], [293.0, 75.5], [292.0, 71.73333333333333], [317.0, 387.0], [304.0, 378.0], [310.0, 52.0], [309.0, 59.5], [305.0, 128.5], [306.0, 105.33333333333334], [313.0, 268.5555555555556], [312.0, 55.0], [318.0, 222.16666666666669], [319.0, 219.5], [316.0, 56.0], [307.0, 144.5], [315.0, 57.0], [314.0, 56.0], [335.0, 206.0], [320.0, 394.6666666666667], [321.0, 61.333333333333336], [322.0, 103.57142857142857], [328.0, 192.8], [329.0, 106.0], [331.0, 156.22222222222223], [330.0, 60.2], [332.0, 402.0], [334.0, 74.0], [333.0, 63.666666666666664], [349.0, 67.8], [351.0, 345.75], [340.0, 313.7500000000001], [341.0, 65.0], [345.0, 306.0], [350.0, 64.33333333333333], [347.0, 71.5], [344.0, 69.66666666666667], [343.0, 49.0], [337.0, 72.0], [336.0, 72.0], [339.0, 60.5], [338.0, 76.66666666666667], [342.0, 64.5], [352.0, 167.0], [355.0, 348.1428571428571], [361.0, 352.6923076923077], [366.0, 271.3636363636364], [364.0, 66.25], [362.0, 65.63636363636364], [360.0, 74.0], [371.0, 281.3999999999999], [372.0, 187.63636363636363], [375.0, 195.3809523809524], [380.0, 316.6666666666667], [376.0, 69.4], [374.0, 67.0], [373.0, 68.77272727272725], [368.0, 76.6], [397.0, 177.75], [390.0, 273.27777777777777], [398.0, 74.33333333333333], [396.0, 80.7659574468085], [395.0, 69.0], [392.0, 77.0], [391.0, 95.0], [386.0, 72.5], [388.0, 92.0], [403.0, 275.3461538461538], [406.0, 320.4285714285714], [400.0, 78.85714285714286], [411.0, 273.8], [414.0, 66.1], [415.0, 74.0], [413.0, 76.45454545454547], [410.0, 82.0], [402.0, 80.77777777777777], [401.0, 70.5], [430.0, 145.12500000000003], [416.0, 185.00000000000003], [421.0, 253.27272727272728], [420.0, 86.0], [426.0, 208.2], [428.0, 65.66666666666667], [419.0, 74.0], [418.0, 73.66666666666667], [417.0, 68.66666666666667], [427.0, 64.0], [425.0, 67.5], [424.0, 82.5], [423.0, 80.5], [435.0, 293.54545454545456], [436.0, 184.33333333333334], [440.0, 356.4736842105263], [441.0, 406.42857142857144], [444.0, 213.83333333333334], [446.0, 73.5], [443.0, 68.66666666666667], [442.0, 71.27272727272728], [439.0, 74.66666666666666], [438.0, 68.77777777777777], [463.0, 80.5], [448.0, 179.0], [453.0, 240.0], [452.0, 75.0], [455.0, 75.2], [454.0, 71.77777777777777], [458.0, 95.22222222222223], [462.0, 73.57142857142858], [460.0, 85.79999999999998], [459.0, 86.8], [457.0, 72.0], [456.0, 80.89999999999999], [467.0, 148.66666666666666], [464.0, 157.62499999999997], [479.0, 93.0], [478.0, 147.0], [472.0, 82.75], [470.0, 69.33333333333333], [469.0, 88.75], [468.0, 97.0], [466.0, 79.0], [465.0, 83.0], [483.0, 95.53846153846153], [482.0, 207.8], [481.0, 91.75], [490.0, 228.0], [494.0, 191.5], [495.0, 703.5], [493.0, 132.0], [492.0, 130.20000000000002], [487.0, 125.33333333333333], [485.0, 128.16666666666666], [484.0, 108.72], [510.0, 120.0], [504.0, 317.5000000000001], [500.0, 280.12000000000006], [501.0, 82.0], [503.0, 85.66666666666667], [499.0, 146.0], [497.0, 102.33333333333333], [502.0, 83.5], [505.0, 432.5], [507.0, 281.6], [511.0, 104.0], [509.0, 92.0], [508.0, 114.0], [506.0, 136.77777777777777], [536.0, 394.87999999999994], [541.0, 625.0], [512.0, 312.5833333333333], [513.0, 227.8], [518.0, 206.8], [517.0, 441.5], [516.0, 264.625], [515.0, 108.33333333333333], [514.0, 124.0], [519.0, 303.57142857142856], [537.0, 284.8], [538.0, 293.5], [522.0, 224.81818181818184], [521.0, 384.22222222222223], [520.0, 460.25], [524.0, 245.66666666666666], [523.0, 184.5], [526.0, 106.33333333333333], [530.0, 260.96551724137936], [532.0, 255.16666666666669], [533.0, 169.66666666666666], [542.0, 303.85714285714283], [540.0, 223.0], [539.0, 504.15624999999983], [574.0, 263.6666666666667], [569.0, 265.1666666666667], [554.0, 281.74358974358984], [553.0, 394.1428571428571], [555.0, 307.0], [558.0, 290.0], [556.0, 299.0], [575.0, 273.6666666666667], [561.0, 267.25], [560.0, 287.25], [563.0, 276.8333333333333], [562.0, 312.0], [565.0, 273.5], [564.0, 286.25], [573.0, 294.5], [572.0, 283.25], [570.0, 259.0], [568.0, 283.5], [551.0, 287.6842105263157], [550.0, 281.25], [544.0, 282.83333333333337], [559.0, 308.3333333333333], [567.0, 272.6666666666667], [566.0, 267.6666666666667], [583.0, 251.65000000000003], [588.0, 297.0], [587.0, 242.0], [586.0, 250.25], [585.0, 255.85714285714286], [584.0, 376.5], [589.0, 258.5], [590.0, 270.0], [591.0, 188.33333333333334], [582.0, 244.5], [581.0, 268.5833333333333], [580.0, 269.0], [579.0, 250.0], [577.0, 240.0], [576.0, 267.6666666666667], [606.0, 99.0], [592.0, 225.0], [594.0, 237.66666666666666], [595.0, 209.5], [597.0, 210.14285714285714], [596.0, 217.07692307692307], [599.0, 257.0], [598.0, 226.75], [605.0, 235.0], [604.0, 213.5], [603.0, 234.74999999999997], [602.0, 214.33333333333334], [601.0, 221.0], [600.0, 230.5], [635.0, 199.11111111111111], [637.0, 246.22727272727275], [614.0, 273.6666666666667], [613.0, 201.0], [612.0, 173.71428571428572], [611.0, 176.44444444444446], [615.0, 219.57142857142856], [618.0, 197.66666666666666], [617.0, 266.6666666666667], [616.0, 349.6666666666667], [638.0, 243.0], [639.0, 180.0], [636.0, 156.25], [633.0, 195.5], [634.0, 203.0], [632.0, 249.33333333333334], [631.0, 204.0], [630.0, 156.4], [629.0, 167.73333333333332], [628.0, 187.06666666666666], [626.0, 142.5], [664.0, 334.7647058823529], [668.0, 379.0], [658.0, 417.8], [670.0, 282.1538461538462], [671.0, 246.5], [667.0, 357.3333333333333], [666.0, 290.0], [665.0, 329.5], [655.0, 327.5], [640.0, 144.0], [643.0, 207.0], [641.0, 187.0], [645.0, 250.33333333333334], [644.0, 174.33333333333334], [647.0, 340.0], [646.0, 259.25], [654.0, 326.4], [653.0, 336.49999999999994], [652.0, 413.5], [651.0, 344.75], [649.0, 337.0], [648.0, 379.50000000000006], [657.0, 436.4], [656.0, 528.0], [699.0, 301.8], [672.0, 320.3333333333333], [677.0, 248.5185185185185], [675.0, 297.2], [674.0, 302.75], [673.0, 301.4], [678.0, 199.28571428571428], [696.0, 299.0], [679.0, 299.0], [698.0, 287.0], [697.0, 325.0], [683.0, 288.9411764705882], [682.0, 289.0], [681.0, 275.3333333333333], [680.0, 270.0], [684.0, 448.625], [686.0, 419.25], [701.0, 262.235294117647], [702.0, 232.0], [703.0, 268.0], [695.0, 314.25], [694.0, 301.25], [693.0, 277.0], [692.0, 306.83333333333337], [691.0, 326.9230769230769], [690.0, 308.2857142857143], [688.0, 452.85714285714283], [700.0, 278.5], [709.0, 242.48979591836735], [713.0, 230.12903225806448], [725.0, 204.86274509803917], [729.0, 251.30392156862732], [728.0, 299.0], [714.0, 236.83333333333334], [717.0, 289.125], [719.0, 257.0], [718.0, 304.0], [712.0, 292.5454545454545], [711.0, 239.0], [750.0, 142.71428571428572], [745.0, 204.6022727272727], [744.0, 293.0], [746.0, 142.0], [747.0, 190.5], [749.0, 110.6], [748.0, 115.0], [751.0, 189.55555555555554], [737.0, 281.5], [741.0, 248.0], [743.0, 146.5333333333333], [764.0, 157.55555555555554], [760.0, 204.0], [752.0, 135.66666666666666], [757.0, 163.3], [756.0, 212.63636363636365], [755.0, 407.11111111111114], [753.0, 121.0], [759.0, 130.0], [758.0, 109.0], [767.0, 236.75], [766.0, 114.0], [765.0, 181.66666666666666], [794.0, 545.0], [798.0, 176.4], [775.0, 168.6875], [776.0, 163.66666666666666], [779.0, 107.0], [778.0, 110.5], [781.0, 127.0], [780.0, 106.0], [783.0, 105.33333333333333], [768.0, 157.88888888888889], [770.0, 236.0], [769.0, 424.2], [772.0, 110.0], [771.0, 131.75], [774.0, 476.1538461538461], [773.0, 181.8], [782.0, 121.5], [790.0, 372.26086956521743], [791.0, 230.16666666666669], [799.0, 312.0], [785.0, 110.6], [784.0, 124.0], [787.0, 228.5], [786.0, 289.6363636363636], [789.0, 272.45000000000005], [788.0, 424.25], [797.0, 483.71428571428567], [796.0, 329.0], [795.0, 597.8571428571429], [793.0, 568.3333333333334], [792.0, 505.46666666666664], [830.0, 236.0], [813.0, 173.0], [815.0, 308.9473684210526], [816.0, 231.00000000000003], [829.0, 206.375], [831.0, 217.0], [828.0, 398.7096774193549], [825.0, 621.625], [805.0, 414.3333333333333], [804.0, 320.25], [803.0, 595.0], [801.0, 192.0], [822.0, 88.0], [820.0, 96.25], [817.0, 124.0], [857.0, 182.83720930232553], [836.0, 397.5], [847.0, 102.66666666666667], [834.0, 340.140350877193], [832.0, 749.0], [856.0, 126.66666666666667], [839.0, 338.5], [838.0, 217.50000000000003], [837.0, 202.3170731707317], [844.0, 214.82142857142858], [843.0, 221.49999999999997], [842.0, 95.2], [841.0, 639.5], [840.0, 133.08333333333331], [845.0, 229.0], [863.0, 124.0], [848.0, 104.5], [850.0, 95.5], [849.0, 100.75], [853.0, 108.77777777777777], [851.0, 97.85714285714285], [855.0, 188.8461538461538], [854.0, 109.28571428571429], [862.0, 123.6923076923077], [860.0, 122.0], [859.0, 114.5], [858.0, 114.22222222222223], [892.0, 217.19230769230768], [866.0, 158.72222222222223], [868.0, 194.53124999999994], [869.0, 133.57142857142858], [870.0, 130.85714285714286], [871.0, 120.75], [889.0, 141.2], [888.0, 151.33333333333334], [891.0, 218.3846153846154], [890.0, 125.0], [875.0, 224.23404255319147], [874.0, 131.66666666666666], [873.0, 133.47058823529412], [876.0, 130.375], [878.0, 228.57142857142853], [879.0, 214.2222222222222], [864.0, 126.66666666666667], [885.0, 189.74999999999997], [886.0, 188.11111111111111], [887.0, 149.0], [895.0, 164.0], [882.0, 220.0625], [881.0, 137.4], [884.0, 163.0], [883.0, 157.4], [894.0, 144.66666666666666], [893.0, 141.5], [923.0, 135.0], [897.0, 224.19444444444443], [896.0, 159.0], [898.0, 163.7142857142857], [903.0, 191.16666666666666], [902.0, 149.0], [901.0, 145.5], [900.0, 151.0], [899.0, 151.0], [920.0, 213.37500000000003], [906.0, 214.72727272727272], [905.0, 151.0], [904.0, 165.25531914893614], [908.0, 115.0], [907.0, 269.3125], [910.0, 188.66666666666666], [909.0, 147.0], [911.0, 301.28571428571433], [917.0, 236.4], [916.0, 209.25], [915.0, 253.21428571428572], [914.0, 136.8], [913.0, 235.45833333333334], [912.0, 289.5], [919.0, 233.3846153846154], [918.0, 208.6], [927.0, 180.66666666666666], [924.0, 133.5], [922.0, 211.83333333333334], [921.0, 331.8333333333333], [956.0, 390.0], [943.0, 210.14285714285714], [929.0, 221.36363636363635], [928.0, 128.0], [931.0, 304.04761904761904], [930.0, 178.0], [933.0, 341.43750000000006], [932.0, 346.1538461538462], [935.0, 332.7142857142857], [934.0, 270.14285714285717], [942.0, 240.56756756756758], [941.0, 331.2], [940.0, 162.00000000000003], [939.0, 269.76190476190476], [938.0, 107.5], [937.0, 344.45454545454544], [936.0, 300.33333333333337], [959.0, 287.58139534883725], [945.0, 122.9090909090909], [944.0, 201.0], [947.0, 137.66666666666666], [946.0, 206.72727272727272], [949.0, 239.75], [948.0, 261.0], [951.0, 246.0], [950.0, 206.9], [958.0, 260.0], [957.0, 179.33333333333334], [955.0, 174.08333333333334], [954.0, 298.83333333333337], [953.0, 208.9], [952.0, 231.3], [990.0, 87.37037037037035], [979.0, 77.33333333333333], [991.0, 73.5], [976.0, 221.71428571428572], [987.0, 247.38988095238088], [967.0, 88.0], [966.0, 295.3333333333333], [964.0, 190.7142857142857], [963.0, 53.39999999999999], [962.0, 276.75], [961.0, 186.85714285714286], [975.0, 95.43749999999999], [974.0, 329.0], [973.0, 177.6], [972.0, 191.72727272727272], [971.0, 78.33333333333333], [968.0, 194.20588235294113], [983.0, 190.89473684210526], [981.0, 72.5], [980.0, 197.57142857142858], [978.0, 170.66666666666666], [977.0, 173.50000000000003], [1000.0, 257.7191874828434], [999.0, 321.2328042328042], [998.0, 231.80496453900702], [997.0, 136.39130434782606], [996.0, 95.41176470588235], [995.0, 111.65000000000002], [993.0, 91.25], [992.0, 117.69135802469133], [1.0, 5.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[800.8609000000001, 238.17439999999928]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 194.0], [3.0, 212.0], [4.0, 229.0], [7.0, 259.5], [9.0, 281.3333333333333], [10.0, 178.0], [11.0, 225.0], [12.0, 213.0], [13.0, 198.0], [14.0, 340.0], [15.0, 370.0], [16.0, 313.0], [17.0, 356.0], [19.0, 340.0], [20.0, 325.0], [21.0, 316.0], [22.0, 300.0], [23.0, 276.0], [24.0, 388.0], [26.0, 254.33333333333334], [28.0, 345.5], [30.0, 354.5], [31.0, 409.0], [33.0, 244.5], [35.0, 409.0], [34.0, 326.0], [37.0, 320.0], [38.0, 296.0], [41.0, 260.0], [40.0, 420.0], [42.0, 194.0], [44.0, 130.0], [46.0, 144.0], [48.0, 301.3333333333333], [51.0, 220.0], [52.0, 421.0], [55.0, 181.33333333333334], [57.0, 196.5], [59.0, 306.5], [61.0, 266.5], [62.0, 182.0], [67.0, 398.5], [65.0, 199.0], [64.0, 138.5], [71.0, 367.0], [69.0, 206.5], [74.0, 214.5], [73.0, 150.0], [72.0, 223.0], [79.0, 209.33333333333334], [76.0, 174.5], [81.0, 335.0], [87.0, 224.33333333333334], [84.0, 241.0], [90.0, 272.3333333333333], [95.0, 270.0], [94.0, 361.0], [93.0, 162.0], [92.0, 276.75], [99.0, 242.0], [98.0, 219.5], [96.0, 442.0], [103.0, 371.0], [102.0, 218.33333333333334], [106.0, 238.0], [105.0, 82.0], [111.0, 249.0], [110.0, 239.5], [108.0, 302.6666666666667], [115.0, 277.0], [114.0, 89.0], [113.0, 239.0], [112.0, 237.0], [119.0, 180.5], [116.0, 290.0], [123.0, 150.0], [122.0, 244.0], [121.0, 334.3333333333333], [125.0, 212.0], [124.0, 316.0], [134.0, 259.0], [133.0, 193.0], [132.0, 272.0], [131.0, 158.0], [130.0, 131.0], [129.0, 286.0], [128.0, 125.0], [143.0, 253.0], [142.0, 227.66666666666666], [139.0, 214.0], [138.0, 399.5], [137.0, 241.0], [136.0, 238.0], [151.0, 234.0], [150.0, 236.25], [149.0, 211.0], [144.0, 268.0], [159.0, 269.0], [158.0, 257.5], [156.0, 262.0], [154.0, 265.0], [153.0, 403.0], [167.0, 303.0], [166.0, 263.0], [165.0, 271.0], [164.0, 265.0], [163.0, 263.0], [162.0, 248.0], [161.0, 409.0], [175.0, 451.0], [174.0, 285.5], [172.0, 259.6666666666667], [169.0, 374.0], [168.0, 310.0], [183.0, 375.0], [180.0, 389.0], [179.0, 321.5], [177.0, 326.0], [191.0, 293.5], [188.0, 316.0], [186.0, 349.0], [199.0, 299.0], [198.0, 363.0], [197.0, 469.0], [196.0, 305.0], [195.0, 348.5], [193.0, 338.6666666666667], [207.0, 322.0], [205.0, 308.0], [203.0, 434.5], [202.0, 374.0], [200.0, 365.0], [215.0, 492.0], [214.0, 388.0], [213.0, 385.0], [212.0, 359.0], [210.0, 366.0], [222.0, 320.0], [221.0, 320.0], [220.0, 286.0], [219.0, 277.0], [218.0, 316.0], [217.0, 393.0], [216.0, 445.0], [231.0, 293.5], [229.0, 367.0], [227.0, 402.0], [225.0, 289.0], [238.0, 357.5], [236.0, 346.0], [234.0, 351.5], [232.0, 371.0], [245.0, 359.0], [244.0, 282.0], [243.0, 374.0], [240.0, 384.25], [252.0, 325.0], [253.0, 321.0], [255.0, 464.0], [254.0, 399.0], [250.0, 331.3333333333333], [248.0, 401.0], [257.0, 359.25], [262.0, 341.0], [267.0, 377.0], [271.0, 340.0], [270.0, 349.25], [268.0, 374.0], [264.0, 381.25], [259.0, 345.0], [256.0, 325.0], [273.0, 315.11111111111114], [272.0, 402.6666666666667], [274.0, 398.0], [287.0, 375.0], [285.0, 349.0], [282.0, 424.0], [281.0, 398.0], [278.0, 388.25], [275.0, 308.0], [303.0, 281.0], [298.0, 369.5], [299.0, 374.4], [300.0, 316.3333333333333], [290.0, 425.0], [289.0, 432.0], [288.0, 350.0], [301.0, 388.6666666666667], [302.0, 341.0], [297.0, 350.0], [296.0, 351.0], [295.0, 386.0], [294.0, 445.0], [293.0, 414.0], [292.0, 430.0], [317.0, 407.18181818181813], [304.0, 355.1666666666667], [319.0, 484.0], [318.0, 493.0], [316.0, 422.0], [307.0, 341.0], [306.0, 362.0], [315.0, 450.0], [313.0, 405.0], [312.0, 329.0], [311.0, 386.0], [309.0, 414.5], [334.0, 403.83333333333337], [322.0, 377.3333333333333], [328.0, 363.6666666666667], [335.0, 449.0], [331.0, 479.4], [329.0, 416.0], [327.0, 370.0], [326.0, 467.0], [325.0, 408.0], [324.0, 504.5], [338.0, 392.0], [342.0, 394.4285714285714], [341.0, 409.0], [340.0, 482.0], [345.0, 394.55555555555554], [346.0, 435.0], [351.0, 496.0], [349.0, 398.0], [339.0, 401.0], [347.0, 442.5], [344.0, 501.0], [343.0, 470.0], [337.0, 386.0], [336.0, 506.5], [364.0, 325.0], [354.0, 366.5625], [353.0, 472.0], [358.0, 378.16666666666663], [359.0, 384.6666666666667], [363.0, 374.85714285714283], [367.0, 501.0], [366.0, 511.0], [360.0, 409.0], [357.0, 514.0], [356.0, 475.0], [381.0, 337.79999999999995], [369.0, 377.1578947368421], [368.0, 410.0], [370.0, 515.0], [374.0, 332.11111111111114], [373.0, 422.0], [375.0, 361.05263157894734], [382.0, 561.0], [380.0, 484.8], [371.0, 402.0], [379.0, 422.0], [378.0, 534.0], [377.0, 484.5], [386.0, 304.7], [390.0, 307.2727272727273], [385.0, 399.0], [384.0, 479.0], [395.0, 315.55555555555554], [399.0, 591.0], [398.0, 532.0], [397.0, 453.6666666666667], [387.0, 457.0], [394.0, 418.0], [392.0, 471.3333333333333], [389.0, 516.0], [388.0, 464.0], [412.0, 516.0], [407.0, 299.8571428571429], [402.0, 305.3333333333333], [401.0, 485.5], [400.0, 467.5], [403.0, 468.0], [406.0, 435.6666666666667], [405.0, 474.0], [404.0, 519.0], [409.0, 403.25], [415.0, 477.0], [413.0, 537.5], [411.0, 464.0], [410.0, 541.0], [430.0, 335.33333333333337], [425.0, 326.2], [418.0, 300.8], [426.0, 287.0], [431.0, 500.6666666666667], [428.0, 491.0], [419.0, 526.0], [427.0, 539.6666666666666], [424.0, 521.0], [422.0, 476.5], [416.0, 509.0], [421.0, 481.0], [447.0, 449.0], [439.0, 382.0], [437.0, 576.25], [436.0, 562.0], [440.0, 382.2], [445.0, 345.6666666666667], [446.0, 320.33333333333337], [444.0, 453.0], [435.0, 545.1666666666666], [434.0, 489.0], [433.0, 486.5], [432.0, 472.25], [443.0, 458.0], [442.0, 575.0], [441.0, 512.25], [462.0, 466.0], [451.0, 371.85714285714283], [450.0, 451.0], [449.0, 471.5], [448.0, 574.0], [457.0, 442.0], [463.0, 362.33333333333337], [461.0, 482.0], [460.0, 551.6666666666666], [458.0, 506.0], [456.0, 492.5], [455.0, 491.0], [454.0, 483.0], [453.0, 508.0], [452.0, 514.3333333333334], [477.0, 541.0], [470.0, 466.57142857142856], [469.0, 333.9444444444444], [468.0, 488.0], [475.0, 471.0], [476.0, 319.0], [471.0, 548.3333333333334], [464.0, 571.3333333333334], [467.0, 514.5], [479.0, 374.2857142857143], [478.0, 488.0], [474.0, 545.5], [473.0, 515.5], [495.0, 560.0], [480.0, 343.6666666666667], [485.0, 418.6666666666667], [484.0, 537.0], [494.0, 524.0], [483.0, 564.5], [482.0, 547.3], [491.0, 479.0], [490.0, 552.0], [489.0, 538.0], [488.0, 543.0], [487.0, 572.0], [486.0, 487.0], [509.0, 462.25], [505.0, 323.0], [504.0, 494.75], [506.0, 438.4], [507.0, 479.3333333333333], [508.0, 420.25], [499.0, 546.3333333333334], [498.0, 553.3333333333334], [497.0, 554.0], [496.0, 554.0], [510.0, 387.74999999999994], [511.0, 373.3333333333333], [503.0, 604.0], [502.0, 509.0], [501.0, 567.5], [500.0, 495.0], [539.0, 342.92857142857133], [518.0, 343.5], [512.0, 358.6666666666667], [513.0, 453.75], [514.0, 381.1000000000001], [515.0, 577.6666666666666], [517.0, 612.6666666666666], [516.0, 525.0833333333333], [523.0, 431.2], [522.0, 568.0], [521.0, 518.5], [520.0, 500.6666666666667], [524.0, 488.5], [526.0, 474.0], [525.0, 494.25], [527.0, 580.0], [530.0, 416.3333333333333], [529.0, 513.8333333333334], [528.0, 554.25], [531.0, 464.0], [533.0, 556.8888888888889], [532.0, 559.6], [535.0, 666.0], [534.0, 491.6], [543.0, 468.5], [542.0, 479.0], [541.0, 625.0], [540.0, 517.6666666666666], [536.0, 474.91666666666663], [519.0, 511.0], [537.0, 339.59999999999997], [538.0, 365.4], [569.0, 344.5], [550.0, 456.2], [549.0, 404.0], [548.0, 494.0], [547.0, 482.5], [546.0, 495.5], [545.0, 495.0], [544.0, 569.2], [559.0, 542.0], [558.0, 453.0], [557.0, 460.5], [555.0, 592.6666666666666], [554.0, 489.0], [553.0, 546.3333333333334], [552.0, 553.5], [551.0, 420.125], [560.0, 315.404761904762], [561.0, 332.7692307692308], [562.0, 508.66666666666663], [564.0, 549.5], [563.0, 489.3333333333333], [566.0, 506.7333333333333], [565.0, 622.0], [568.0, 356.5833333333333], [575.0, 338.0], [574.0, 627.0], [573.0, 567.75], [572.0, 487.8333333333333], [571.0, 542.25], [570.0, 467.5], [601.0, 537.6666666666666], [582.0, 373.75], [583.0, 400.2857142857143], [600.0, 503.0], [585.0, 402.20000000000005], [584.0, 469.0], [586.0, 401.75], [591.0, 514.0], [576.0, 444.0], [578.0, 525.1111111111111], [577.0, 571.25], [581.0, 578.3333333333334], [579.0, 517.5], [590.0, 518.6666666666666], [588.0, 726.3333333333334], [587.0, 709.0], [595.0, 394.88888888888886], [594.0, 633.0], [593.0, 484.5], [592.0, 324.0], [597.0, 726.0], [596.0, 556.0], [599.0, 602.25], [598.0, 575.0], [602.0, 468.0], [603.0, 568.1], [604.0, 422.0], [606.0, 458.6666666666667], [605.0, 642.3333333333334], [607.0, 580.5], [634.0, 693.0], [619.0, 420.42857142857144], [615.0, 362.1333333333333], [614.0, 690.25], [612.0, 397.5], [611.0, 602.6666666666666], [610.0, 607.0], [609.0, 662.4], [608.0, 592.0], [623.0, 717.3333333333334], [622.0, 649.3333333333334], [620.0, 565.3333333333334], [633.0, 547.1666666666666], [632.0, 821.0], [635.0, 746.2], [637.0, 709.0], [636.0, 641.4166666666666], [616.0, 389.625], [617.0, 327.0], [618.0, 394.5238095238095], [628.0, 636.5], [631.0, 457.23529411764713], [630.0, 730.5], [629.0, 687.5], [639.0, 732.0], [625.0, 717.0], [624.0, 515.4], [627.0, 701.5], [626.0, 697.0], [638.0, 710.0], [667.0, 746.4285714285714], [640.0, 422.06666666666666], [641.0, 448.5], [642.0, 599.625], [644.0, 917.0], [643.0, 590.0], [646.0, 478.75], [645.0, 625.0], [664.0, 805.0], [647.0, 526.0], [655.0, 359.70000000000005], [654.0, 648.0], [653.0, 596.5], [652.0, 493.5], [651.0, 579.6], [650.0, 652.0], [649.0, 507.75], [648.0, 504.0], [670.0, 799.2222222222222], [657.0, 655.0], [656.0, 639.5], [659.0, 754.6666666666666], [658.0, 671.0], [661.0, 831.6666666666666], [660.0, 794.5], [663.0, 770.5], [662.0, 759.75], [669.0, 785.0], [668.0, 852.6666666666666], [666.0, 787.6666666666666], [665.0, 763.6666666666666], [696.0, 606.8823529411765], [673.0, 455.4166666666667], [674.0, 464.0], [676.0, 844.0], [679.0, 842.0], [678.0, 787.1666666666666], [683.0, 539.6666666666666], [682.0, 785.3333333333334], [681.0, 762.6666666666666], [680.0, 864.5], [684.0, 746.5], [687.0, 789.6666666666666], [672.0, 829.0], [686.0, 753.0], [685.0, 866.0], [695.0, 697.75], [694.0, 828.6], [692.0, 807.0], [691.0, 796.6666666666666], [690.0, 768.0], [689.0, 795.3333333333333], [703.0, 826.6249999999999], [702.0, 790.0], [701.0, 824.75], [700.0, 853.5], [699.0, 832.0], [698.0, 845.0], [730.0, 831.6666666666666], [708.0, 615.1428571428571], [707.0, 461.5625], [706.0, 819.6666666666666], [705.0, 842.1428571428572], [704.0, 803.0], [719.0, 832.25], [717.0, 822.1666666666667], [716.0, 813.25], [715.0, 876.0], [714.0, 840.75], [712.0, 835.0], [724.0, 567.923076923077], [722.0, 856.6666666666666], [721.0, 828.25], [720.0, 845.5], [725.0, 825.8571428571429], [727.0, 824.4], [726.0, 821.5], [731.0, 798.9285714285714], [732.0, 531.25], [735.0, 841.6], [734.0, 836.0], [729.0, 820.5], [728.0, 822.0], [711.0, 825.0], [710.0, 846.6], [709.0, 809.0], [763.0, 827.8333333333334], [740.0, 738.6], [741.0, 556.3571428571428], [743.0, 844.75], [742.0, 836.0], [749.0, 683.4782608695652], [748.0, 849.0], [747.0, 839.5], [746.0, 837.7142857142857], [745.0, 811.6], [744.0, 819.4], [751.0, 794.6666666666666], [737.0, 833.0], [736.0, 808.6666666666666], [739.0, 821.0], [738.0, 856.5], [750.0, 836.875], [765.0, 623.6666666666666], [766.0, 705.625], [767.0, 747.0], [759.0, 801.6666666666666], [758.0, 819.8333333333334], [757.0, 821.0], [756.0, 795.3333333333334], [755.0, 801.0], [754.0, 836.6666666666666], [753.0, 834.0], [752.0, 819.0], [764.0, 808.3333333333333], [762.0, 766.5], [761.0, 831.0], [796.0, 773.0], [770.0, 352.8571428571429], [783.0, 785.0], [769.0, 740.0], [781.0, 793.5], [780.0, 831.0], [779.0, 802.6666666666666], [778.0, 762.8], [777.0, 804.4444444444445], [776.0, 810.2222222222222], [799.0, 773.0], [785.0, 819.3333333333334], [784.0, 743.0], [787.0, 799.8749999999999], [786.0, 793.6666666666666], [789.0, 801.0], [788.0, 788.0], [798.0, 771.0], [797.0, 781.7142857142858], [795.0, 812.0], [794.0, 786.3636363636364], [793.0, 757.3333333333334], [775.0, 800.0], [774.0, 802.0], [773.0, 809.0], [772.0, 794.8181818181819], [771.0, 813.6666666666666], [791.0, 771.3333333333334], [790.0, 783.2727272727273], [828.0, 805.5], [802.0, 622.0833333333334], [808.0, 546.5625], [809.0, 826.0], [811.0, 793.0], [810.0, 815.4545454545454], [813.0, 794.0], [812.0, 872.5], [814.0, 409.6666666666667], [815.0, 784.7142857142857], [801.0, 750.5], [800.0, 760.6666666666666], [831.0, 847.0], [816.0, 862.3333333333334], [818.0, 851.0], [817.0, 838.2857142857143], [820.0, 831.5], [819.0, 850.0], [823.0, 840.0], [822.0, 835.5714285714286], [830.0, 767.5], [829.0, 855.0], [827.0, 854.3333333333334], [826.0, 854.0], [825.0, 794.3333333333334], [824.0, 842.0], [807.0, 837.0], [806.0, 830.5], [805.0, 801.125], [804.0, 794.75], [803.0, 801.6666666666666], [857.0, 762.75], [836.0, 654.0], [847.0, 771.8333333333333], [835.0, 806.0], [834.0, 843.0], [846.0, 763.0], [845.0, 763.625], [844.0, 763.3333333333334], [842.0, 397.75], [841.0, 760.6666666666666], [840.0, 759.6666666666666], [843.0, 603.1428571428571], [860.0, 613.1999999999999], [863.0, 739.0], [855.0, 759.0], [854.0, 753.0], [853.0, 761.0], [852.0, 797.0], [851.0, 760.0], [849.0, 758.0], [848.0, 759.0], [862.0, 754.5], [858.0, 768.3333333333334], [856.0, 768.9333333333333], [839.0, 755.0], [838.0, 718.0], [837.0, 734.5], [893.0, 704.8333333333334], [866.0, 568.75], [879.0, 729.9999999999999], [865.0, 792.0], [864.0, 761.6666666666666], [878.0, 775.6666666666666], [877.0, 773.3333333333334], [874.0, 816.4285714285713], [873.0, 746.4], [872.0, 786.5], [888.0, 712.5], [871.0, 736.0], [870.0, 774.0], [869.0, 738.0], [868.0, 834.6666666666666], [867.0, 783.8], [881.0, 643.1818181818181], [880.0, 758.2857142857143], [882.0, 753.0], [884.0, 742.3333333333334], [883.0, 710.5], [887.0, 825.0], [885.0, 714.3333333333334], [889.0, 460.44444444444446], [895.0, 721.2], [894.0, 723.0], [892.0, 730.0], [891.0, 699.5], [890.0, 734.75], [920.0, 697.0], [924.0, 736.5], [926.0, 510.625], [927.0, 693.4], [914.0, 653.0], [912.0, 734.0], [925.0, 680.4], [923.0, 633.0], [922.0, 703.5], [921.0, 698.0], [911.0, 679.2222222222222], [897.0, 698.6666666666666], [896.0, 809.0], [899.0, 686.2857142857143], [898.0, 732.8], [901.0, 687.4], [900.0, 648.0], [903.0, 725.5], [902.0, 733.6666666666666], [910.0, 715.0], [909.0, 652.0], [908.0, 699.0], [907.0, 692.0], [906.0, 687.0], [905.0, 715.0], [904.0, 708.5], [919.0, 684.1428571428571], [918.0, 778.0], [935.0, 689.0], [959.0, 683.0], [945.0, 428.25], [958.0, 656.0], [955.0, 660.0], [953.0, 705.0], [934.0, 717.5], [933.0, 679.5], [931.0, 674.0], [930.0, 718.6666666666666], [929.0, 656.0], [928.0, 693.0], [950.0, 690.0], [949.0, 684.0], [944.0, 698.5714285714286], [943.0, 679.6666666666666], [942.0, 703.8], [941.0, 700.6666666666666], [940.0, 672.0], [939.0, 651.7272727272727], [938.0, 640.0], [937.0, 660.25], [936.0, 703.0], [989.0, 782.5], [962.0, 633.4166666666667], [975.0, 753.6666666666666], [961.0, 736.625], [974.0, 724.8], [973.0, 712.153846153846], [972.0, 704.5], [971.0, 730.0], [970.0, 775.0], [969.0, 791.0], [968.0, 667.3333333333334], [984.0, 759.6666666666666], [967.0, 707.0], [966.0, 703.7142857142858], [964.0, 724.0], [963.0, 699.0], [981.0, 680.9047619047619], [980.0, 772.0], [979.0, 745.248322147651], [978.0, 698.0], [977.0, 766.5], [976.0, 748.625], [983.0, 785.25], [982.0, 775.8], [991.0, 774.8], [990.0, 765.1212121212121], [988.0, 788.7272727272726], [987.0, 782.0], [986.0, 765.4999999999999], [985.0, 757.8750000000001], [996.0, 487.5], [1000.0, 737.30588423409], [999.0, 644.1304347826086], [998.0, 695.5787234042551], [997.0, 769.7741935483872], [995.0, 774.5789473684208], [994.0, 824.2], [993.0, 788.4313725490196], [992.0, 769.578947368421], [1.0, 179.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[877.4202999999984, 682.2731999999967]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[3.0, 14.5], [4.0, 1015.25], [5.0, 13.0], [7.0, 41.0], [8.0, 39.333333333333336], [9.0, 45.0], [11.0, 44.0], [12.0, 44.0], [13.0, 39.0], [14.0, 42.0], [15.0, 41.0], [17.0, 38.0], [18.0, 39.0], [21.0, 40.0], [23.0, 38.0], [26.0, 32.5], [27.0, 30.0], [28.0, 33.0], [30.0, 33.333333333333336], [33.0, 34.0], [40.0, 37.57142857142857], [42.0, 37.0], [44.0, 35.0], [47.0, 34.0], [46.0, 34.5], [51.0, 64.75], [50.0, 47.0], [87.0, 51.0], [90.0, 52.0], [89.0, 57.0], [88.0, 62.17948717948718], [93.0, 59.0], [92.0, 59.0], [97.0, 65.33333333333333], [96.0, 60.0], [101.0, 68.75], [123.0, 81.66666666666667], [122.0, 80.74074074074075], [121.0, 105.0], [127.0, 95.0], [124.0, 77.0], [132.0, 91.25], [130.0, 82.5], [129.0, 65.25000000000001], [128.0, 79.0], [141.0, 76.83333333333333], [148.0, 89.5], [150.0, 60.0], [149.0, 97.0], [156.0, 74.33333333333333], [155.0, 86.5], [152.0, 78.85714285714285], [167.0, 130.0], [166.0, 119.0], [165.0, 113.0], [164.0, 86.0], [163.0, 116.5], [162.0, 104.0], [161.0, 63.0], [160.0, 79.12499999999999], [182.0, 94.5], [180.0, 92.0], [178.0, 115.0], [177.0, 91.2], [176.0, 80.25], [187.0, 95.0], [185.0, 107.0], [184.0, 96.5], [207.0, 73.0], [212.0, 99.6], [210.0, 99.4], [209.0, 100.82758620689656], [211.0, 87.5], [223.0, 104.0], [222.0, 104.0], [220.0, 104.0], [218.0, 92.5], [217.0, 71.0], [216.0, 104.50000000000001], [227.0, 74.0], [225.0, 92.71428571428571], [236.0, 156.66666666666666], [234.0, 123.6], [233.0, 111.0], [232.0, 98.14285714285714], [255.0, 137.0], [254.0, 141.86666666666665], [253.0, 160.0], [264.0, 117.5], [268.0, 147.75], [258.0, 111.0], [256.0, 126.0], [267.0, 139.0], [266.0, 143.0], [265.0, 168.0], [263.0, 150.25], [262.0, 120.0], [261.0, 102.0], [260.0, 109.0], [285.0, 115.8], [282.0, 127.84615384615384], [303.0, 135.2], [297.0, 149.0], [302.0, 111.0], [293.0, 140.0], [295.0, 146.0], [319.0, 154.66666666666666], [317.0, 103.0], [316.0, 114.15384615384616], [312.0, 165.5], [307.0, 145.0], [322.0, 165.5], [321.0, 160.0], [347.0, 152.33333333333334], [349.0, 291.0], [342.0, 227.0], [340.0, 156.125], [341.0, 367.3333333333333], [338.0, 135.0], [381.0, 184.11111111111111], [379.0, 207.0], [378.0, 406.0], [382.0, 287.0], [387.0, 205.37142857142854], [394.0, 171.25], [393.0, 242.33333333333334], [392.0, 143.5], [391.0, 256.5], [390.0, 429.0], [388.0, 214.2], [386.0, 193.66666666666666], [385.0, 236.0], [413.0, 170.25], [415.0, 173.75], [412.0, 219.0], [411.0, 178.33333333333334], [410.0, 195.5], [409.0, 241.33333333333331], [408.0, 392.0], [407.0, 169.0], [406.0, 192.2307692307692], [405.0, 155.0], [428.0, 189.66666666666666], [427.0, 166.0], [425.0, 167.5], [424.0, 177.0], [423.0, 174.66666666666666], [422.0, 162.75], [420.0, 194.42857142857142], [418.0, 258.5], [446.0, 229.0], [445.0, 162.4], [443.0, 203.66666666666666], [441.0, 263.5], [439.0, 171.33333333333334], [437.0, 137.0], [436.0, 185.71428571428572], [435.0, 181.8], [433.0, 222.5], [463.0, 270.0], [461.0, 456.0], [451.0, 156.0], [459.0, 283.4], [457.0, 196.5], [458.0, 181.0], [456.0, 158.66666666666666], [454.0, 323.25], [452.0, 211.6], [450.0, 251.6], [449.0, 198.16666666666666], [479.0, 286.175], [465.0, 297.5], [464.0, 527.0], [495.0, 258.0], [494.0, 249.5], [493.0, 352.0], [490.0, 357.5238095238095], [483.0, 297.5], [481.0, 475.0], [480.0, 319.14285714285717], [511.0, 363.5], [510.0, 385.12903225806446], [498.0, 351.0], [497.0, 285.3333333333333], [541.0, 331.6666666666667], [543.0, 336.0], [539.0, 326.0], [538.0, 338.1666666666667], [537.0, 418.3333333333333], [535.0, 335.0], [534.0, 391.59999999999997], [533.0, 361.48148148148147], [518.0, 344.0], [517.0, 438.5714285714286], [516.0, 350.5], [514.0, 369.6666666666667], [513.0, 445.0], [512.0, 330.75], [562.0, 371.00000000000006], [573.0, 365.5], [571.0, 381.75], [570.0, 310.0], [547.0, 337.0], [546.0, 436.0], [545.0, 332.3333333333333], [544.0, 332.14285714285717], [567.0, 404.0], [566.0, 362.6666666666667], [564.0, 382.0], [561.0, 384.6666666666667], [559.0, 380.0], [554.0, 393.5833333333333], [552.0, 343.0], [555.0, 325.0], [558.0, 319.0], [601.0, 378.6], [606.0, 370.3333333333333], [607.0, 376.0], [592.0, 388.85714285714283], [595.0, 356.0], [593.0, 360.0], [604.0, 408.5], [603.0, 398.2857142857143], [602.0, 394.0], [600.0, 379.0], [583.0, 374.6666666666667], [582.0, 405.3333333333333], [580.0, 514.0], [579.0, 429.6], [578.0, 364.87500000000006], [576.0, 520.0], [591.0, 413.0], [589.0, 381.25], [588.0, 397.4285714285714], [587.0, 328.0], [586.0, 317.0], [585.0, 386.3333333333333], [584.0, 388.0], [598.0, 390.0], [596.0, 412.25], [624.0, 366.6666666666667], [638.0, 345.0], [611.0, 350.0], [610.0, 348.0], [609.0, 350.0], [608.0, 364.33333333333337], [629.0, 390.3333333333333], [627.0, 376.0], [626.0, 367.0], [622.0, 353.3333333333333], [621.0, 372.6666666666667], [620.0, 366.0], [619.0, 362.0], [618.0, 405.0], [617.0, 418.0], [616.0, 367.62500000000006], [670.0, 270.875], [671.0, 291.0], [656.0, 376.66666666666663], [658.0, 328.0], [657.0, 365.6666666666667], [660.0, 329.6666666666667], [659.0, 321.6666666666667], [669.0, 369.0909090909091], [668.0, 323.0], [666.0, 316.0], [665.0, 319.0], [664.0, 318.0], [647.0, 347.5], [646.0, 368.3255813953488], [641.0, 379.7333333333334], [654.0, 376.0], [653.0, 364.5], [651.0, 388.875], [650.0, 332.8], [649.0, 294.0], [648.0, 320.3333333333333], [663.0, 300.2857142857143], [662.0, 328.25], [702.0, 265.6666666666667], [703.0, 246.0], [688.0, 307.5], [690.0, 346.0], [689.0, 295.6], [701.0, 294.3333333333333], [699.0, 300.5], [698.0, 279.6666666666667], [696.0, 368.3333333333333], [674.0, 273.6666666666667], [672.0, 312.5], [687.0, 303.0], [686.0, 354.25], [685.0, 353.0], [684.0, 333.0], [683.0, 313.25], [682.0, 281.53846153846155], [697.0, 326.0], [695.0, 241.0], [694.0, 318.0], [693.0, 283.5], [691.0, 281.0], [733.0, 235.5], [735.0, 282.6], [725.0, 279.7272727272727], [732.0, 275.0], [731.0, 274.3333333333333], [730.0, 165.0], [729.0, 253.0], [728.0, 175.5], [708.0, 276.75], [707.0, 242.5], [705.0, 301.40000000000003], [704.0, 289.0], [718.0, 321.0], [717.0, 272.3333333333333], [716.0, 277.0], [715.0, 279.0], [714.0, 286.3333333333333], [713.0, 264.0], [727.0, 286.0], [726.0, 277.0], [760.0, 317.3333333333333], [764.0, 294.3333333333333], [767.0, 346.25], [753.0, 263.6666666666667], [752.0, 163.0], [756.0, 216.5], [754.0, 116.0], [766.0, 330.25], [765.0, 342.6666666666667], [763.0, 287.0], [762.0, 284.3333333333333], [761.0, 412.0], [751.0, 269.0], [737.0, 327.0], [736.0, 184.0], [739.0, 236.0], [738.0, 310.0], [741.0, 219.0], [740.0, 269.5], [743.0, 257.8], [742.0, 214.66666666666666], [750.0, 282.3333333333333], [749.0, 255.5], [748.0, 230.0], [747.0, 438.0], [746.0, 254.8], [745.0, 251.6], [744.0, 282.6666666666667], [758.0, 270.5], [757.0, 267.0], [797.0, 249.81818181818178], [798.0, 238.85714285714286], [796.0, 277.0], [770.0, 343.5], [769.0, 321.6666666666667], [788.0, 252.33333333333331], [787.0, 258.8], [786.0, 259.25], [784.0, 265.0], [783.0, 261.0], [782.0, 286.0526315789474], [819.0, 249.0], [831.0, 278.1666666666667], [830.0, 280.3333333333333], [807.0, 243.5], [805.0, 238.0], [803.0, 246.16666666666666], [801.0, 257.125], [810.0, 254.66666666666666], [809.0, 247.8], [808.0, 230.0], [822.0, 274.8], [821.0, 267.6666666666667], [820.0, 225.66666666666666], [818.0, 288.0], [817.0, 249.0], [816.0, 256.61538461538464], [857.0, 221.0], [852.0, 262.0], [862.0, 240.7], [863.0, 258.95454545454544], [851.0, 238.99999999999997], [850.0, 236.6], [860.0, 236.8888888888889], [856.0, 269.2], [838.0, 240.82758620689657], [837.0, 244.14285714285714], [836.0, 236.0], [832.0, 248.0], [847.0, 273.0], [846.0, 237.0], [845.0, 256.0], [844.0, 285.90909090909093], [843.0, 265.6], [842.0, 234.75], [840.0, 239.0], [855.0, 239.33333333333334], [854.0, 252.5], [853.0, 225.0], [888.0, 266.5], [892.0, 255.33333333333334], [895.0, 248.33333333333334], [881.0, 241.2], [880.0, 252.6], [885.0, 272.0], [884.0, 239.0], [894.0, 244.5], [893.0, 247.25], [891.0, 270.75], [890.0, 235.5], [889.0, 235.33333333333334], [879.0, 244.16666666666666], [865.0, 259.5], [864.0, 249.33333333333334], [869.0, 251.9230769230769], [866.0, 244.66666666666666], [871.0, 256.6666666666667], [870.0, 270.5], [878.0, 249.52631578947364], [876.0, 254.0], [875.0, 247.57142857142858], [874.0, 258.875], [872.0, 282.25], [873.0, 310.0], [887.0, 266.0], [886.0, 283.0], [924.0, 337.4], [927.0, 487.5], [913.0, 281.76119402985074], [914.0, 772.0], [912.0, 436.3333333333333], [916.0, 348.20000000000005], [915.0, 291.8275862068965], [926.0, 407.95833333333337], [925.0, 430.00000000000006], [923.0, 293.125], [922.0, 249.0], [921.0, 242.0], [920.0, 325.9230769230769], [910.0, 251.0], [901.0, 273.3333333333333], [900.0, 246.0], [899.0, 225.0], [898.0, 251.66666666666666], [897.0, 222.0], [909.0, 459.5], [919.0, 391.2857142857143], [918.0, 427.99999999999994], [952.0, 375.6666666666667], [956.0, 252.0], [959.0, 275.6363636363636], [946.0, 261.3333333333333], [944.0, 324.7619047619048], [949.0, 348.6666666666667], [948.0, 252.91666666666669], [958.0, 456.07142857142856], [957.0, 297.7619047619048], [955.0, 263.0], [954.0, 361.2857142857143], [953.0, 347.54545454545456], [943.0, 254.4], [928.0, 222.66666666666666], [930.0, 412.28571428571433], [929.0, 386.3333333333333], [932.0, 234.5], [931.0, 357.42857142857144], [934.0, 307.7142857142857], [933.0, 250.66666666666669], [942.0, 258.6666666666667], [940.0, 443.3333333333333], [939.0, 295.1176470588236], [938.0, 245.0], [936.0, 233.66666666666666], [951.0, 242.0], [950.0, 349.5], [988.0, 414.0], [991.0, 303.6052631578948], [977.0, 303.0], [976.0, 423.2631578947368], [979.0, 408.75], [978.0, 407.15873015873007], [981.0, 551.6666666666667], [980.0, 319.0], [990.0, 251.0], [989.0, 375.3898305084747], [987.0, 457.1666666666667], [986.0, 432.5714285714286], [985.0, 228.0], [984.0, 407.92307692307685], [975.0, 447.5], [961.0, 247.0], [960.0, 253.5], [963.0, 251.0], [962.0, 245.0], [965.0, 288.4848484848485], [964.0, 331.35294117647055], [967.0, 266.4], [966.0, 338.59259259259255], [974.0, 394.94444444444446], [973.0, 538.4166666666666], [972.0, 589.6666666666666], [971.0, 330.25], [970.0, 360.0], [969.0, 306.0], [968.0, 333.8235294117647], [983.0, 361.95833333333326], [982.0, 452.5147058823529], [1000.0, 697.529955385597], [999.0, 271.1994750656169], [998.0, 372.9933774834437], [997.0, 424.15384615384613], [996.0, 559.7142857142856], [995.0, 462.0], [994.0, 405.80952380952374], [993.0, 261.5], [992.0, 479.4761904761905]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[900.9786999999992, 546.7144000000018]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 29768.066666666666, "minX": 1.66955322E12, "maxY": 86316.96666666666, "series": [{"data": [[1.66955322E12, 32398.6], [1.66955328E12, 29768.066666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66955322E12, 44849.7], [1.66955328E12, 86316.96666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66955328E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 235.28344163118965, "minX": 1.66955322E12, "maxY": 682.2731999999967, "series": [{"data": [[1.66955322E12, 262.2011173184354], [1.66955328E12, 235.28344163118965]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66955328E12, 682.2731999999967]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66955322E12, 546.7144000000018]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66955328E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 235.27929643737403, "minX": 1.66955322E12, "maxY": 681.9207000000004, "series": [{"data": [[1.66955322E12, 262.19180633147084], [1.66955328E12, 235.27929643737403]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66955328E12, 681.9207000000004]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66955322E12, 546.225699999998]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66955328E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 5.744878957169457, "minX": 1.66955322E12, "maxY": 30.589737844499155, "series": [{"data": [[1.66955322E12, 5.744878957169457], [1.66955328E12, 30.589737844499155]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66955328E12, 25.895100000000053]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66955322E12, 12.086999999999989]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66955328E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.66955322E12, "maxY": 3051.0, "series": [{"data": [[1.66955322E12, 3003.0], [1.66955328E12, 3051.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66955322E12, 1204.5], [1.66955328E12, 854.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66955322E12, 2512.25], [1.66955328E12, 1020.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66955322E12, 1896.0], [1.66955328E12, 886.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66955322E12, 9.0], [1.66955328E12, 5.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66955322E12, 313.0], [1.66955328E12, 442.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66955328E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 77.0, "minX": 153.0, "maxY": 1989.0, "series": [{"data": [[153.0, 338.0], [2617.0, 400.0], [2715.0, 253.0], [3168.0, 262.0], [3433.0, 245.0], [840.0, 461.0], [239.0, 1989.0], [3728.0, 152.0], [1074.0, 249.0], [1051.0, 388.0], [1171.0, 812.0], [1193.0, 828.0], [1208.0, 790.0], [1261.0, 1651.0], [1352.0, 849.0], [1408.0, 676.0], [1647.0, 644.0], [1742.0, 77.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3728.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 76.0, "minX": 153.0, "maxY": 1969.0, "series": [{"data": [[153.0, 338.0], [2617.0, 400.0], [2715.0, 253.0], [3168.0, 262.0], [3433.0, 245.0], [840.0, 461.0], [239.0, 1969.0], [3728.0, 152.0], [1074.0, 249.0], [1051.0, 388.0], [1171.0, 812.0], [1193.0, 828.0], [1208.0, 790.0], [1261.0, 1651.0], [1352.0, 848.0], [1408.0, 676.0], [1647.0, 643.0], [1742.0, 76.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3728.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 199.03333333333333, "minX": 1.66955322E12, "maxY": 300.96666666666664, "series": [{"data": [[1.66955322E12, 199.03333333333333], [1.66955328E12, 300.96666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66955328E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 184.56666666666666, "minX": 1.66955322E12, "maxY": 315.43333333333334, "series": [{"data": [[1.66955322E12, 184.56666666666666], [1.66955328E12, 315.43333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66955328E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 17.9, "minX": 1.66955322E12, "maxY": 166.66666666666666, "series": [{"data": [[1.66955322E12, 166.66666666666666]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66955328E12, 166.66666666666666]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66955322E12, 17.9], [1.66955328E12, 148.76666666666668]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66955328E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 184.56666666666666, "minX": 1.66955322E12, "maxY": 315.43333333333334, "series": [{"data": [[1.66955322E12, 184.56666666666666], [1.66955328E12, 315.43333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66955328E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

