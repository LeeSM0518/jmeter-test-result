/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 3076.0, "series": [{"data": [[0.0, 146.0], [0.1, 148.0], [0.2, 155.0], [0.3, 157.0], [0.4, 159.0], [0.5, 160.0], [0.6, 161.0], [0.7, 161.0], [0.8, 164.0], [0.9, 165.0], [1.0, 166.0], [1.1, 166.0], [1.2, 167.0], [1.3, 168.0], [1.4, 169.0], [1.5, 169.0], [1.6, 170.0], [1.7, 170.0], [1.8, 171.0], [1.9, 171.0], [2.0, 171.0], [2.1, 171.0], [2.2, 172.0], [2.3, 173.0], [2.4, 173.0], [2.5, 173.0], [2.6, 174.0], [2.7, 174.0], [2.8, 174.0], [2.9, 175.0], [3.0, 175.0], [3.1, 175.0], [3.2, 176.0], [3.3, 176.0], [3.4, 176.0], [3.5, 176.0], [3.6, 177.0], [3.7, 177.0], [3.8, 177.0], [3.9, 178.0], [4.0, 179.0], [4.1, 179.0], [4.2, 180.0], [4.3, 181.0], [4.4, 181.0], [4.5, 181.0], [4.6, 181.0], [4.7, 182.0], [4.8, 182.0], [4.9, 182.0], [5.0, 182.0], [5.1, 183.0], [5.2, 183.0], [5.3, 183.0], [5.4, 183.0], [5.5, 184.0], [5.6, 184.0], [5.7, 184.0], [5.8, 184.0], [5.9, 185.0], [6.0, 185.0], [6.1, 185.0], [6.2, 185.0], [6.3, 185.0], [6.4, 186.0], [6.5, 186.0], [6.6, 187.0], [6.7, 187.0], [6.8, 188.0], [6.9, 188.0], [7.0, 188.0], [7.1, 189.0], [7.2, 189.0], [7.3, 189.0], [7.4, 190.0], [7.5, 190.0], [7.6, 190.0], [7.7, 190.0], [7.8, 191.0], [7.9, 191.0], [8.0, 191.0], [8.1, 192.0], [8.2, 192.0], [8.3, 192.0], [8.4, 192.0], [8.5, 193.0], [8.6, 193.0], [8.7, 193.0], [8.8, 194.0], [8.9, 194.0], [9.0, 194.0], [9.1, 195.0], [9.2, 195.0], [9.3, 195.0], [9.4, 196.0], [9.5, 196.0], [9.6, 196.0], [9.7, 197.0], [9.8, 197.0], [9.9, 197.0], [10.0, 197.0], [10.1, 198.0], [10.2, 198.0], [10.3, 199.0], [10.4, 199.0], [10.5, 199.0], [10.6, 200.0], [10.7, 200.0], [10.8, 200.0], [10.9, 200.0], [11.0, 201.0], [11.1, 201.0], [11.2, 201.0], [11.3, 201.0], [11.4, 202.0], [11.5, 202.0], [11.6, 203.0], [11.7, 203.0], [11.8, 203.0], [11.9, 203.0], [12.0, 204.0], [12.1, 204.0], [12.2, 204.0], [12.3, 205.0], [12.4, 205.0], [12.5, 205.0], [12.6, 205.0], [12.7, 206.0], [12.8, 206.0], [12.9, 206.0], [13.0, 206.0], [13.1, 207.0], [13.2, 207.0], [13.3, 207.0], [13.4, 207.0], [13.5, 208.0], [13.6, 208.0], [13.7, 208.0], [13.8, 208.0], [13.9, 208.0], [14.0, 208.0], [14.1, 209.0], [14.2, 209.0], [14.3, 209.0], [14.4, 209.0], [14.5, 210.0], [14.6, 210.0], [14.7, 210.0], [14.8, 211.0], [14.9, 211.0], [15.0, 211.0], [15.1, 211.0], [15.2, 211.0], [15.3, 212.0], [15.4, 212.0], [15.5, 213.0], [15.6, 213.0], [15.7, 213.0], [15.8, 213.0], [15.9, 213.0], [16.0, 214.0], [16.1, 214.0], [16.2, 214.0], [16.3, 214.0], [16.4, 215.0], [16.5, 215.0], [16.6, 216.0], [16.7, 216.0], [16.8, 216.0], [16.9, 216.0], [17.0, 216.0], [17.1, 217.0], [17.2, 217.0], [17.3, 218.0], [17.4, 218.0], [17.5, 218.0], [17.6, 218.0], [17.7, 219.0], [17.8, 219.0], [17.9, 219.0], [18.0, 219.0], [18.1, 219.0], [18.2, 219.0], [18.3, 220.0], [18.4, 220.0], [18.5, 220.0], [18.6, 220.0], [18.7, 221.0], [18.8, 221.0], [18.9, 221.0], [19.0, 222.0], [19.1, 222.0], [19.2, 222.0], [19.3, 223.0], [19.4, 223.0], [19.5, 223.0], [19.6, 224.0], [19.7, 224.0], [19.8, 224.0], [19.9, 224.0], [20.0, 225.0], [20.1, 225.0], [20.2, 226.0], [20.3, 226.0], [20.4, 226.0], [20.5, 226.0], [20.6, 226.0], [20.7, 226.0], [20.8, 227.0], [20.9, 227.0], [21.0, 228.0], [21.1, 229.0], [21.2, 229.0], [21.3, 229.0], [21.4, 229.0], [21.5, 229.0], [21.6, 230.0], [21.7, 230.0], [21.8, 230.0], [21.9, 230.0], [22.0, 231.0], [22.1, 231.0], [22.2, 231.0], [22.3, 231.0], [22.4, 232.0], [22.5, 232.0], [22.6, 232.0], [22.7, 233.0], [22.8, 233.0], [22.9, 233.0], [23.0, 233.0], [23.1, 233.0], [23.2, 234.0], [23.3, 234.0], [23.4, 234.0], [23.5, 235.0], [23.6, 236.0], [23.7, 236.0], [23.8, 236.0], [23.9, 237.0], [24.0, 237.0], [24.1, 237.0], [24.2, 237.0], [24.3, 238.0], [24.4, 238.0], [24.5, 238.0], [24.6, 239.0], [24.7, 239.0], [24.8, 239.0], [24.9, 240.0], [25.0, 240.0], [25.1, 241.0], [25.2, 241.0], [25.3, 241.0], [25.4, 242.0], [25.5, 242.0], [25.6, 242.0], [25.7, 243.0], [25.8, 243.0], [25.9, 243.0], [26.0, 243.0], [26.1, 243.0], [26.2, 243.0], [26.3, 244.0], [26.4, 244.0], [26.5, 244.0], [26.6, 244.0], [26.7, 245.0], [26.8, 245.0], [26.9, 245.0], [27.0, 245.0], [27.1, 245.0], [27.2, 246.0], [27.3, 246.0], [27.4, 246.0], [27.5, 246.0], [27.6, 246.0], [27.7, 246.0], [27.8, 247.0], [27.9, 247.0], [28.0, 247.0], [28.1, 248.0], [28.2, 248.0], [28.3, 248.0], [28.4, 248.0], [28.5, 249.0], [28.6, 249.0], [28.7, 249.0], [28.8, 250.0], [28.9, 250.0], [29.0, 250.0], [29.1, 251.0], [29.2, 251.0], [29.3, 251.0], [29.4, 251.0], [29.5, 252.0], [29.6, 252.0], [29.7, 252.0], [29.8, 252.0], [29.9, 253.0], [30.0, 253.0], [30.1, 254.0], [30.2, 254.0], [30.3, 254.0], [30.4, 254.0], [30.5, 255.0], [30.6, 255.0], [30.7, 255.0], [30.8, 255.0], [30.9, 256.0], [31.0, 256.0], [31.1, 256.0], [31.2, 257.0], [31.3, 257.0], [31.4, 257.0], [31.5, 257.0], [31.6, 258.0], [31.7, 258.0], [31.8, 258.0], [31.9, 259.0], [32.0, 259.0], [32.1, 259.0], [32.2, 260.0], [32.3, 260.0], [32.4, 260.0], [32.5, 260.0], [32.6, 261.0], [32.7, 262.0], [32.8, 262.0], [32.9, 263.0], [33.0, 263.0], [33.1, 263.0], [33.2, 264.0], [33.3, 264.0], [33.4, 265.0], [33.5, 265.0], [33.6, 265.0], [33.7, 265.0], [33.8, 265.0], [33.9, 266.0], [34.0, 266.0], [34.1, 266.0], [34.2, 266.0], [34.3, 266.0], [34.4, 267.0], [34.5, 267.0], [34.6, 267.0], [34.7, 267.0], [34.8, 268.0], [34.9, 268.0], [35.0, 268.0], [35.1, 268.0], [35.2, 269.0], [35.3, 269.0], [35.4, 270.0], [35.5, 270.0], [35.6, 270.0], [35.7, 270.0], [35.8, 271.0], [35.9, 271.0], [36.0, 271.0], [36.1, 272.0], [36.2, 272.0], [36.3, 273.0], [36.4, 274.0], [36.5, 274.0], [36.6, 275.0], [36.7, 275.0], [36.8, 275.0], [36.9, 276.0], [37.0, 276.0], [37.1, 276.0], [37.2, 276.0], [37.3, 277.0], [37.4, 277.0], [37.5, 277.0], [37.6, 277.0], [37.7, 278.0], [37.8, 278.0], [37.9, 278.0], [38.0, 279.0], [38.1, 279.0], [38.2, 279.0], [38.3, 280.0], [38.4, 280.0], [38.5, 281.0], [38.6, 281.0], [38.7, 282.0], [38.8, 282.0], [38.9, 282.0], [39.0, 282.0], [39.1, 282.0], [39.2, 283.0], [39.3, 284.0], [39.4, 284.0], [39.5, 284.0], [39.6, 285.0], [39.7, 285.0], [39.8, 285.0], [39.9, 286.0], [40.0, 287.0], [40.1, 287.0], [40.2, 288.0], [40.3, 288.0], [40.4, 288.0], [40.5, 289.0], [40.6, 289.0], [40.7, 290.0], [40.8, 290.0], [40.9, 291.0], [41.0, 291.0], [41.1, 291.0], [41.2, 292.0], [41.3, 292.0], [41.4, 293.0], [41.5, 293.0], [41.6, 294.0], [41.7, 295.0], [41.8, 295.0], [41.9, 295.0], [42.0, 296.0], [42.1, 296.0], [42.2, 297.0], [42.3, 298.0], [42.4, 299.0], [42.5, 299.0], [42.6, 300.0], [42.7, 300.0], [42.8, 301.0], [42.9, 302.0], [43.0, 303.0], [43.1, 303.0], [43.2, 304.0], [43.3, 305.0], [43.4, 306.0], [43.5, 306.0], [43.6, 306.0], [43.7, 307.0], [43.8, 308.0], [43.9, 309.0], [44.0, 310.0], [44.1, 310.0], [44.2, 311.0], [44.3, 311.0], [44.4, 312.0], [44.5, 313.0], [44.6, 313.0], [44.7, 313.0], [44.8, 314.0], [44.9, 315.0], [45.0, 316.0], [45.1, 317.0], [45.2, 318.0], [45.3, 319.0], [45.4, 319.0], [45.5, 320.0], [45.6, 321.0], [45.7, 321.0], [45.8, 324.0], [45.9, 325.0], [46.0, 325.0], [46.1, 326.0], [46.2, 327.0], [46.3, 329.0], [46.4, 331.0], [46.5, 332.0], [46.6, 332.0], [46.7, 333.0], [46.8, 334.0], [46.9, 335.0], [47.0, 336.0], [47.1, 337.0], [47.2, 339.0], [47.3, 341.0], [47.4, 342.0], [47.5, 343.0], [47.6, 344.0], [47.7, 346.0], [47.8, 346.0], [47.9, 347.0], [48.0, 350.0], [48.1, 352.0], [48.2, 354.0], [48.3, 355.0], [48.4, 358.0], [48.5, 361.0], [48.6, 367.0], [48.7, 370.0], [48.8, 371.0], [48.9, 372.0], [49.0, 374.0], [49.1, 376.0], [49.2, 377.0], [49.3, 377.0], [49.4, 380.0], [49.5, 380.0], [49.6, 383.0], [49.7, 385.0], [49.8, 387.0], [49.9, 388.0], [50.0, 391.0], [50.1, 392.0], [50.2, 394.0], [50.3, 395.0], [50.4, 395.0], [50.5, 396.0], [50.6, 396.0], [50.7, 398.0], [50.8, 400.0], [50.9, 402.0], [51.0, 402.0], [51.1, 404.0], [51.2, 405.0], [51.3, 407.0], [51.4, 408.0], [51.5, 408.0], [51.6, 410.0], [51.7, 411.0], [51.8, 413.0], [51.9, 415.0], [52.0, 421.0], [52.1, 422.0], [52.2, 425.0], [52.3, 426.0], [52.4, 427.0], [52.5, 428.0], [52.6, 430.0], [52.7, 431.0], [52.8, 433.0], [52.9, 435.0], [53.0, 436.0], [53.1, 436.0], [53.2, 437.0], [53.3, 438.0], [53.4, 440.0], [53.5, 442.0], [53.6, 443.0], [53.7, 443.0], [53.8, 445.0], [53.9, 446.0], [54.0, 448.0], [54.1, 449.0], [54.2, 451.0], [54.3, 453.0], [54.4, 455.0], [54.5, 455.0], [54.6, 456.0], [54.7, 457.0], [54.8, 458.0], [54.9, 460.0], [55.0, 462.0], [55.1, 464.0], [55.2, 468.0], [55.3, 471.0], [55.4, 473.0], [55.5, 474.0], [55.6, 475.0], [55.7, 478.0], [55.8, 479.0], [55.9, 483.0], [56.0, 485.0], [56.1, 489.0], [56.2, 491.0], [56.3, 492.0], [56.4, 492.0], [56.5, 494.0], [56.6, 497.0], [56.7, 497.0], [56.8, 498.0], [56.9, 498.0], [57.0, 500.0], [57.1, 501.0], [57.2, 503.0], [57.3, 504.0], [57.4, 505.0], [57.5, 505.0], [57.6, 506.0], [57.7, 508.0], [57.8, 509.0], [57.9, 510.0], [58.0, 511.0], [58.1, 512.0], [58.2, 513.0], [58.3, 513.0], [58.4, 513.0], [58.5, 514.0], [58.6, 514.0], [58.7, 515.0], [58.8, 516.0], [58.9, 517.0], [59.0, 518.0], [59.1, 520.0], [59.2, 521.0], [59.3, 521.0], [59.4, 523.0], [59.5, 524.0], [59.6, 525.0], [59.7, 525.0], [59.8, 526.0], [59.9, 526.0], [60.0, 527.0], [60.1, 528.0], [60.2, 529.0], [60.3, 530.0], [60.4, 531.0], [60.5, 532.0], [60.6, 534.0], [60.7, 535.0], [60.8, 535.0], [60.9, 536.0], [61.0, 537.0], [61.1, 538.0], [61.2, 538.0], [61.3, 539.0], [61.4, 539.0], [61.5, 541.0], [61.6, 542.0], [61.7, 542.0], [61.8, 544.0], [61.9, 545.0], [62.0, 546.0], [62.1, 547.0], [62.2, 549.0], [62.3, 552.0], [62.4, 553.0], [62.5, 554.0], [62.6, 556.0], [62.7, 556.0], [62.8, 556.0], [62.9, 558.0], [63.0, 560.0], [63.1, 562.0], [63.2, 564.0], [63.3, 565.0], [63.4, 566.0], [63.5, 568.0], [63.6, 570.0], [63.7, 571.0], [63.8, 572.0], [63.9, 572.0], [64.0, 573.0], [64.1, 574.0], [64.2, 574.0], [64.3, 575.0], [64.4, 576.0], [64.5, 576.0], [64.6, 577.0], [64.7, 578.0], [64.8, 579.0], [64.9, 580.0], [65.0, 581.0], [65.1, 582.0], [65.2, 583.0], [65.3, 586.0], [65.4, 589.0], [65.5, 589.0], [65.6, 590.0], [65.7, 592.0], [65.8, 593.0], [65.9, 593.0], [66.0, 593.0], [66.1, 594.0], [66.2, 596.0], [66.3, 597.0], [66.4, 597.0], [66.5, 598.0], [66.6, 599.0], [66.7, 600.0], [66.8, 601.0], [66.9, 601.0], [67.0, 602.0], [67.1, 603.0], [67.2, 606.0], [67.3, 607.0], [67.4, 610.0], [67.5, 612.0], [67.6, 612.0], [67.7, 613.0], [67.8, 617.0], [67.9, 618.0], [68.0, 619.0], [68.1, 620.0], [68.2, 621.0], [68.3, 626.0], [68.4, 627.0], [68.5, 628.0], [68.6, 629.0], [68.7, 629.0], [68.8, 632.0], [68.9, 635.0], [69.0, 637.0], [69.1, 639.0], [69.2, 641.0], [69.3, 643.0], [69.4, 644.0], [69.5, 648.0], [69.6, 650.0], [69.7, 653.0], [69.8, 656.0], [69.9, 661.0], [70.0, 664.0], [70.1, 665.0], [70.2, 669.0], [70.3, 675.0], [70.4, 678.0], [70.5, 683.0], [70.6, 690.0], [70.7, 691.0], [70.8, 694.0], [70.9, 696.0], [71.0, 698.0], [71.1, 702.0], [71.2, 707.0], [71.3, 709.0], [71.4, 713.0], [71.5, 714.0], [71.6, 716.0], [71.7, 720.0], [71.8, 722.0], [71.9, 723.0], [72.0, 724.0], [72.1, 725.0], [72.2, 727.0], [72.3, 728.0], [72.4, 730.0], [72.5, 733.0], [72.6, 735.0], [72.7, 737.0], [72.8, 741.0], [72.9, 743.0], [73.0, 745.0], [73.1, 749.0], [73.2, 751.0], [73.3, 754.0], [73.4, 760.0], [73.5, 760.0], [73.6, 763.0], [73.7, 764.0], [73.8, 765.0], [73.9, 767.0], [74.0, 769.0], [74.1, 770.0], [74.2, 772.0], [74.3, 775.0], [74.4, 778.0], [74.5, 779.0], [74.6, 781.0], [74.7, 784.0], [74.8, 784.0], [74.9, 785.0], [75.0, 788.0], [75.1, 789.0], [75.2, 789.0], [75.3, 792.0], [75.4, 792.0], [75.5, 793.0], [75.6, 796.0], [75.7, 799.0], [75.8, 802.0], [75.9, 803.0], [76.0, 805.0], [76.1, 808.0], [76.2, 810.0], [76.3, 811.0], [76.4, 812.0], [76.5, 813.0], [76.6, 816.0], [76.7, 818.0], [76.8, 818.0], [76.9, 821.0], [77.0, 824.0], [77.1, 827.0], [77.2, 829.0], [77.3, 831.0], [77.4, 831.0], [77.5, 833.0], [77.6, 836.0], [77.7, 838.0], [77.8, 838.0], [77.9, 839.0], [78.0, 841.0], [78.1, 842.0], [78.2, 842.0], [78.3, 843.0], [78.4, 843.0], [78.5, 843.0], [78.6, 846.0], [78.7, 847.0], [78.8, 849.0], [78.9, 852.0], [79.0, 854.0], [79.1, 855.0], [79.2, 856.0], [79.3, 860.0], [79.4, 860.0], [79.5, 863.0], [79.6, 865.0], [79.7, 868.0], [79.8, 872.0], [79.9, 874.0], [80.0, 876.0], [80.1, 880.0], [80.2, 881.0], [80.3, 884.0], [80.4, 885.0], [80.5, 887.0], [80.6, 888.0], [80.7, 890.0], [80.8, 891.0], [80.9, 891.0], [81.0, 892.0], [81.1, 894.0], [81.2, 894.0], [81.3, 898.0], [81.4, 898.0], [81.5, 900.0], [81.6, 900.0], [81.7, 902.0], [81.8, 904.0], [81.9, 905.0], [82.0, 907.0], [82.1, 908.0], [82.2, 910.0], [82.3, 911.0], [82.4, 913.0], [82.5, 917.0], [82.6, 919.0], [82.7, 921.0], [82.8, 925.0], [82.9, 927.0], [83.0, 929.0], [83.1, 932.0], [83.2, 934.0], [83.3, 934.0], [83.4, 938.0], [83.5, 942.0], [83.6, 944.0], [83.7, 947.0], [83.8, 951.0], [83.9, 954.0], [84.0, 956.0], [84.1, 958.0], [84.2, 962.0], [84.3, 963.0], [84.4, 966.0], [84.5, 968.0], [84.6, 969.0], [84.7, 971.0], [84.8, 976.0], [84.9, 978.0], [85.0, 982.0], [85.1, 988.0], [85.2, 991.0], [85.3, 995.0], [85.4, 999.0], [85.5, 1003.0], [85.6, 1005.0], [85.7, 1008.0], [85.8, 1010.0], [85.9, 1014.0], [86.0, 1016.0], [86.1, 1018.0], [86.2, 1024.0], [86.3, 1025.0], [86.4, 1031.0], [86.5, 1034.0], [86.6, 1039.0], [86.7, 1043.0], [86.8, 1046.0], [86.9, 1051.0], [87.0, 1056.0], [87.1, 1061.0], [87.2, 1062.0], [87.3, 1064.0], [87.4, 1069.0], [87.5, 1072.0], [87.6, 1073.0], [87.7, 1075.0], [87.8, 1076.0], [87.9, 1076.0], [88.0, 1077.0], [88.1, 1079.0], [88.2, 1082.0], [88.3, 1084.0], [88.4, 1085.0], [88.5, 1086.0], [88.6, 1088.0], [88.7, 1090.0], [88.8, 1091.0], [88.9, 1094.0], [89.0, 1096.0], [89.1, 1097.0], [89.2, 1099.0], [89.3, 1101.0], [89.4, 1101.0], [89.5, 1104.0], [89.6, 1107.0], [89.7, 1108.0], [89.8, 1111.0], [89.9, 1116.0], [90.0, 1118.0], [90.1, 1119.0], [90.2, 1121.0], [90.3, 1124.0], [90.4, 1126.0], [90.5, 1129.0], [90.6, 1130.0], [90.7, 1131.0], [90.8, 1132.0], [90.9, 1133.0], [91.0, 1138.0], [91.1, 1139.0], [91.2, 1142.0], [91.3, 1144.0], [91.4, 1146.0], [91.5, 1149.0], [91.6, 1151.0], [91.7, 1152.0], [91.8, 1153.0], [91.9, 1155.0], [92.0, 1156.0], [92.1, 1157.0], [92.2, 1158.0], [92.3, 1159.0], [92.4, 1163.0], [92.5, 1164.0], [92.6, 1166.0], [92.7, 1168.0], [92.8, 1170.0], [92.9, 1172.0], [93.0, 1176.0], [93.1, 1177.0], [93.2, 1180.0], [93.3, 1183.0], [93.4, 1183.0], [93.5, 1185.0], [93.6, 1187.0], [93.7, 1190.0], [93.8, 1193.0], [93.9, 1196.0], [94.0, 1199.0], [94.1, 1199.0], [94.2, 1200.0], [94.3, 1202.0], [94.4, 1205.0], [94.5, 1206.0], [94.6, 1207.0], [94.7, 1210.0], [94.8, 1212.0], [94.9, 1214.0], [95.0, 1217.0], [95.1, 1220.0], [95.2, 1221.0], [95.3, 1222.0], [95.4, 1228.0], [95.5, 1231.0], [95.6, 1233.0], [95.7, 1237.0], [95.8, 1239.0], [95.9, 1244.0], [96.0, 1245.0], [96.1, 1249.0], [96.2, 1251.0], [96.3, 1259.0], [96.4, 1265.0], [96.5, 1267.0], [96.6, 1275.0], [96.7, 1283.0], [96.8, 1291.0], [96.9, 1300.0], [97.0, 1306.0], [97.1, 1308.0], [97.2, 1310.0], [97.3, 1318.0], [97.4, 1323.0], [97.5, 1328.0], [97.6, 1336.0], [97.7, 1342.0], [97.8, 1348.0], [97.9, 1354.0], [98.0, 1360.0], [98.1, 1366.0], [98.2, 1371.0], [98.3, 1376.0], [98.4, 1381.0], [98.5, 1384.0], [98.6, 1391.0], [98.7, 1413.0], [98.8, 1418.0], [98.9, 1426.0], [99.0, 1445.0], [99.1, 1466.0], [99.2, 1485.0], [99.3, 1504.0], [99.4, 1533.0], [99.5, 1559.0], [99.6, 1571.0], [99.7, 2074.0], [99.8, 2301.0], [99.9, 3056.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 2.0], [0.1, 10.0], [0.2, 12.0], [0.3, 14.0], [0.4, 15.0], [0.5, 16.0], [0.6, 17.0], [0.7, 17.0], [0.8, 18.0], [0.9, 19.0], [1.0, 20.0], [1.1, 21.0], [1.2, 22.0], [1.3, 23.0], [1.4, 24.0], [1.5, 25.0], [1.6, 26.0], [1.7, 27.0], [1.8, 27.0], [1.9, 27.0], [2.0, 29.0], [2.1, 29.0], [2.2, 29.0], [2.3, 30.0], [2.4, 31.0], [2.5, 31.0], [2.6, 32.0], [2.7, 32.0], [2.8, 32.0], [2.9, 32.0], [3.0, 33.0], [3.1, 33.0], [3.2, 34.0], [3.3, 34.0], [3.4, 35.0], [3.5, 35.0], [3.6, 35.0], [3.7, 36.0], [3.8, 36.0], [3.9, 37.0], [4.0, 38.0], [4.1, 38.0], [4.2, 38.0], [4.3, 39.0], [4.4, 39.0], [4.5, 39.0], [4.6, 40.0], [4.7, 41.0], [4.8, 41.0], [4.9, 42.0], [5.0, 42.0], [5.1, 43.0], [5.2, 43.0], [5.3, 44.0], [5.4, 44.0], [5.5, 45.0], [5.6, 45.0], [5.7, 45.0], [5.8, 45.0], [5.9, 46.0], [6.0, 47.0], [6.1, 47.0], [6.2, 47.0], [6.3, 47.0], [6.4, 48.0], [6.5, 48.0], [6.6, 49.0], [6.7, 49.0], [6.8, 50.0], [6.9, 50.0], [7.0, 51.0], [7.1, 51.0], [7.2, 52.0], [7.3, 52.0], [7.4, 52.0], [7.5, 53.0], [7.6, 53.0], [7.7, 53.0], [7.8, 54.0], [7.9, 54.0], [8.0, 56.0], [8.1, 56.0], [8.2, 57.0], [8.3, 58.0], [8.4, 59.0], [8.5, 59.0], [8.6, 60.0], [8.7, 61.0], [8.8, 61.0], [8.9, 62.0], [9.0, 62.0], [9.1, 63.0], [9.2, 63.0], [9.3, 63.0], [9.4, 64.0], [9.5, 64.0], [9.6, 65.0], [9.7, 66.0], [9.8, 67.0], [9.9, 67.0], [10.0, 67.0], [10.1, 68.0], [10.2, 68.0], [10.3, 68.0], [10.4, 69.0], [10.5, 69.0], [10.6, 70.0], [10.7, 70.0], [10.8, 70.0], [10.9, 71.0], [11.0, 71.0], [11.1, 71.0], [11.2, 72.0], [11.3, 73.0], [11.4, 74.0], [11.5, 74.0], [11.6, 74.0], [11.7, 75.0], [11.8, 75.0], [11.9, 75.0], [12.0, 75.0], [12.1, 76.0], [12.2, 76.0], [12.3, 76.0], [12.4, 76.0], [12.5, 76.0], [12.6, 77.0], [12.7, 77.0], [12.8, 77.0], [12.9, 77.0], [13.0, 77.0], [13.1, 78.0], [13.2, 78.0], [13.3, 78.0], [13.4, 78.0], [13.5, 78.0], [13.6, 78.0], [13.7, 79.0], [13.8, 79.0], [13.9, 80.0], [14.0, 81.0], [14.1, 81.0], [14.2, 82.0], [14.3, 82.0], [14.4, 82.0], [14.5, 82.0], [14.6, 83.0], [14.7, 83.0], [14.8, 83.0], [14.9, 83.0], [15.0, 84.0], [15.1, 84.0], [15.2, 84.0], [15.3, 84.0], [15.4, 84.0], [15.5, 84.0], [15.6, 85.0], [15.7, 85.0], [15.8, 85.0], [15.9, 85.0], [16.0, 85.0], [16.1, 86.0], [16.2, 86.0], [16.3, 86.0], [16.4, 86.0], [16.5, 86.0], [16.6, 86.0], [16.7, 86.0], [16.8, 86.0], [16.9, 87.0], [17.0, 87.0], [17.1, 87.0], [17.2, 87.0], [17.3, 87.0], [17.4, 87.0], [17.5, 88.0], [17.6, 88.0], [17.7, 88.0], [17.8, 89.0], [17.9, 89.0], [18.0, 89.0], [18.1, 90.0], [18.2, 90.0], [18.3, 90.0], [18.4, 90.0], [18.5, 91.0], [18.6, 91.0], [18.7, 92.0], [18.8, 92.0], [18.9, 92.0], [19.0, 93.0], [19.1, 93.0], [19.2, 93.0], [19.3, 94.0], [19.4, 94.0], [19.5, 95.0], [19.6, 96.0], [19.7, 96.0], [19.8, 98.0], [19.9, 98.0], [20.0, 99.0], [20.1, 99.0], [20.2, 99.0], [20.3, 100.0], [20.4, 100.0], [20.5, 101.0], [20.6, 102.0], [20.7, 103.0], [20.8, 104.0], [20.9, 104.0], [21.0, 105.0], [21.1, 106.0], [21.2, 107.0], [21.3, 107.0], [21.4, 109.0], [21.5, 110.0], [21.6, 111.0], [21.7, 113.0], [21.8, 114.0], [21.9, 114.0], [22.0, 116.0], [22.1, 117.0], [22.2, 118.0], [22.3, 118.0], [22.4, 119.0], [22.5, 122.0], [22.6, 123.0], [22.7, 124.0], [22.8, 125.0], [22.9, 126.0], [23.0, 128.0], [23.1, 129.0], [23.2, 129.0], [23.3, 131.0], [23.4, 132.0], [23.5, 132.0], [23.6, 133.0], [23.7, 134.0], [23.8, 135.0], [23.9, 136.0], [24.0, 136.0], [24.1, 137.0], [24.2, 138.0], [24.3, 138.0], [24.4, 139.0], [24.5, 140.0], [24.6, 140.0], [24.7, 141.0], [24.8, 142.0], [24.9, 142.0], [25.0, 143.0], [25.1, 143.0], [25.2, 144.0], [25.3, 145.0], [25.4, 145.0], [25.5, 145.0], [25.6, 146.0], [25.7, 146.0], [25.8, 147.0], [25.9, 147.0], [26.0, 147.0], [26.1, 148.0], [26.2, 148.0], [26.3, 149.0], [26.4, 150.0], [26.5, 150.0], [26.6, 151.0], [26.7, 151.0], [26.8, 151.0], [26.9, 151.0], [27.0, 152.0], [27.1, 153.0], [27.2, 153.0], [27.3, 153.0], [27.4, 154.0], [27.5, 155.0], [27.6, 155.0], [27.7, 155.0], [27.8, 157.0], [27.9, 157.0], [28.0, 158.0], [28.1, 159.0], [28.2, 159.0], [28.3, 160.0], [28.4, 160.0], [28.5, 161.0], [28.6, 161.0], [28.7, 161.0], [28.8, 161.0], [28.9, 161.0], [29.0, 162.0], [29.1, 162.0], [29.2, 163.0], [29.3, 163.0], [29.4, 164.0], [29.5, 164.0], [29.6, 165.0], [29.7, 166.0], [29.8, 166.0], [29.9, 166.0], [30.0, 166.0], [30.1, 166.0], [30.2, 167.0], [30.3, 167.0], [30.4, 167.0], [30.5, 167.0], [30.6, 167.0], [30.7, 168.0], [30.8, 168.0], [30.9, 168.0], [31.0, 168.0], [31.1, 169.0], [31.2, 169.0], [31.3, 169.0], [31.4, 170.0], [31.5, 170.0], [31.6, 171.0], [31.7, 171.0], [31.8, 171.0], [31.9, 172.0], [32.0, 172.0], [32.1, 172.0], [32.2, 173.0], [32.3, 173.0], [32.4, 174.0], [32.5, 174.0], [32.6, 175.0], [32.7, 175.0], [32.8, 175.0], [32.9, 175.0], [33.0, 176.0], [33.1, 176.0], [33.2, 177.0], [33.3, 178.0], [33.4, 178.0], [33.5, 179.0], [33.6, 179.0], [33.7, 180.0], [33.8, 181.0], [33.9, 182.0], [34.0, 184.0], [34.1, 184.0], [34.2, 185.0], [34.3, 186.0], [34.4, 186.0], [34.5, 186.0], [34.6, 187.0], [34.7, 187.0], [34.8, 187.0], [34.9, 188.0], [35.0, 189.0], [35.1, 189.0], [35.2, 190.0], [35.3, 190.0], [35.4, 191.0], [35.5, 193.0], [35.6, 194.0], [35.7, 195.0], [35.8, 197.0], [35.9, 197.0], [36.0, 198.0], [36.1, 199.0], [36.2, 200.0], [36.3, 201.0], [36.4, 201.0], [36.5, 203.0], [36.6, 204.0], [36.7, 205.0], [36.8, 205.0], [36.9, 205.0], [37.0, 206.0], [37.1, 208.0], [37.2, 209.0], [37.3, 211.0], [37.4, 212.0], [37.5, 214.0], [37.6, 216.0], [37.7, 218.0], [37.8, 221.0], [37.9, 224.0], [38.0, 226.0], [38.1, 227.0], [38.2, 229.0], [38.3, 233.0], [38.4, 238.0], [38.5, 241.0], [38.6, 242.0], [38.7, 243.0], [38.8, 243.0], [38.9, 247.0], [39.0, 249.0], [39.1, 251.0], [39.2, 251.0], [39.3, 251.0], [39.4, 252.0], [39.5, 252.0], [39.6, 257.0], [39.7, 261.0], [39.8, 262.0], [39.9, 263.0], [40.0, 263.0], [40.1, 264.0], [40.2, 266.0], [40.3, 268.0], [40.4, 269.0], [40.5, 271.0], [40.6, 272.0], [40.7, 272.0], [40.8, 273.0], [40.9, 273.0], [41.0, 274.0], [41.1, 276.0], [41.2, 276.0], [41.3, 276.0], [41.4, 277.0], [41.5, 277.0], [41.6, 277.0], [41.7, 278.0], [41.8, 279.0], [41.9, 279.0], [42.0, 279.0], [42.1, 280.0], [42.2, 281.0], [42.3, 281.0], [42.4, 281.0], [42.5, 282.0], [42.6, 282.0], [42.7, 282.0], [42.8, 283.0], [42.9, 283.0], [43.0, 284.0], [43.1, 284.0], [43.2, 285.0], [43.3, 285.0], [43.4, 285.0], [43.5, 286.0], [43.6, 286.0], [43.7, 286.0], [43.8, 287.0], [43.9, 287.0], [44.0, 287.0], [44.1, 288.0], [44.2, 289.0], [44.3, 289.0], [44.4, 289.0], [44.5, 290.0], [44.6, 290.0], [44.7, 290.0], [44.8, 290.0], [44.9, 291.0], [45.0, 291.0], [45.1, 291.0], [45.2, 291.0], [45.3, 292.0], [45.4, 292.0], [45.5, 293.0], [45.6, 293.0], [45.7, 294.0], [45.8, 294.0], [45.9, 295.0], [46.0, 295.0], [46.1, 296.0], [46.2, 296.0], [46.3, 296.0], [46.4, 297.0], [46.5, 297.0], [46.6, 298.0], [46.7, 298.0], [46.8, 298.0], [46.9, 299.0], [47.0, 299.0], [47.1, 299.0], [47.2, 300.0], [47.3, 300.0], [47.4, 301.0], [47.5, 301.0], [47.6, 302.0], [47.7, 302.0], [47.8, 303.0], [47.9, 303.0], [48.0, 304.0], [48.1, 304.0], [48.2, 305.0], [48.3, 306.0], [48.4, 306.0], [48.5, 307.0], [48.6, 307.0], [48.7, 307.0], [48.8, 308.0], [48.9, 308.0], [49.0, 310.0], [49.1, 310.0], [49.2, 310.0], [49.3, 311.0], [49.4, 311.0], [49.5, 311.0], [49.6, 311.0], [49.7, 312.0], [49.8, 312.0], [49.9, 312.0], [50.0, 313.0], [50.1, 313.0], [50.2, 314.0], [50.3, 314.0], [50.4, 315.0], [50.5, 315.0], [50.6, 315.0], [50.7, 316.0], [50.8, 317.0], [50.9, 317.0], [51.0, 318.0], [51.1, 318.0], [51.2, 318.0], [51.3, 319.0], [51.4, 319.0], [51.5, 320.0], [51.6, 320.0], [51.7, 321.0], [51.8, 321.0], [51.9, 321.0], [52.0, 322.0], [52.1, 323.0], [52.2, 323.0], [52.3, 323.0], [52.4, 324.0], [52.5, 324.0], [52.6, 324.0], [52.7, 325.0], [52.8, 325.0], [52.9, 325.0], [53.0, 326.0], [53.1, 326.0], [53.2, 326.0], [53.3, 327.0], [53.4, 327.0], [53.5, 327.0], [53.6, 327.0], [53.7, 328.0], [53.8, 328.0], [53.9, 328.0], [54.0, 329.0], [54.1, 329.0], [54.2, 330.0], [54.3, 330.0], [54.4, 330.0], [54.5, 330.0], [54.6, 331.0], [54.7, 331.0], [54.8, 331.0], [54.9, 331.0], [55.0, 332.0], [55.1, 333.0], [55.2, 333.0], [55.3, 333.0], [55.4, 333.0], [55.5, 334.0], [55.6, 334.0], [55.7, 334.0], [55.8, 334.0], [55.9, 334.0], [56.0, 335.0], [56.1, 335.0], [56.2, 336.0], [56.3, 336.0], [56.4, 337.0], [56.5, 337.0], [56.6, 337.0], [56.7, 338.0], [56.8, 339.0], [56.9, 339.0], [57.0, 340.0], [57.1, 340.0], [57.2, 341.0], [57.3, 341.0], [57.4, 342.0], [57.5, 342.0], [57.6, 342.0], [57.7, 342.0], [57.8, 343.0], [57.9, 343.0], [58.0, 343.0], [58.1, 343.0], [58.2, 344.0], [58.3, 344.0], [58.4, 344.0], [58.5, 345.0], [58.6, 346.0], [58.7, 346.0], [58.8, 347.0], [58.9, 347.0], [59.0, 348.0], [59.1, 348.0], [59.2, 349.0], [59.3, 349.0], [59.4, 350.0], [59.5, 350.0], [59.6, 351.0], [59.7, 351.0], [59.8, 352.0], [59.9, 352.0], [60.0, 352.0], [60.1, 352.0], [60.2, 353.0], [60.3, 354.0], [60.4, 354.0], [60.5, 354.0], [60.6, 354.0], [60.7, 355.0], [60.8, 356.0], [60.9, 356.0], [61.0, 356.0], [61.1, 357.0], [61.2, 358.0], [61.3, 359.0], [61.4, 359.0], [61.5, 360.0], [61.6, 361.0], [61.7, 362.0], [61.8, 363.0], [61.9, 363.0], [62.0, 365.0], [62.1, 366.0], [62.2, 366.0], [62.3, 367.0], [62.4, 369.0], [62.5, 370.0], [62.6, 371.0], [62.7, 373.0], [62.8, 378.0], [62.9, 381.0], [63.0, 383.0], [63.1, 385.0], [63.2, 388.0], [63.3, 390.0], [63.4, 394.0], [63.5, 396.0], [63.6, 399.0], [63.7, 402.0], [63.8, 406.0], [63.9, 412.0], [64.0, 413.0], [64.1, 413.0], [64.2, 414.0], [64.3, 421.0], [64.4, 422.0], [64.5, 423.0], [64.6, 423.0], [64.7, 425.0], [64.8, 433.0], [64.9, 434.0], [65.0, 439.0], [65.1, 439.0], [65.2, 440.0], [65.3, 443.0], [65.4, 444.0], [65.5, 445.0], [65.6, 445.0], [65.7, 446.0], [65.8, 447.0], [65.9, 448.0], [66.0, 448.0], [66.1, 451.0], [66.2, 453.0], [66.3, 454.0], [66.4, 455.0], [66.5, 460.0], [66.6, 461.0], [66.7, 461.0], [66.8, 466.0], [66.9, 468.0], [67.0, 470.0], [67.1, 470.0], [67.2, 472.0], [67.3, 472.0], [67.4, 473.0], [67.5, 474.0], [67.6, 475.0], [67.7, 476.0], [67.8, 477.0], [67.9, 478.0], [68.0, 478.0], [68.1, 479.0], [68.2, 480.0], [68.3, 480.0], [68.4, 481.0], [68.5, 482.0], [68.6, 483.0], [68.7, 483.0], [68.8, 484.0], [68.9, 484.0], [69.0, 485.0], [69.1, 485.0], [69.2, 486.0], [69.3, 487.0], [69.4, 488.0], [69.5, 489.0], [69.6, 489.0], [69.7, 490.0], [69.8, 490.0], [69.9, 491.0], [70.0, 491.0], [70.1, 492.0], [70.2, 494.0], [70.3, 494.0], [70.4, 495.0], [70.5, 496.0], [70.6, 497.0], [70.7, 498.0], [70.8, 499.0], [70.9, 499.0], [71.0, 500.0], [71.1, 500.0], [71.2, 501.0], [71.3, 501.0], [71.4, 502.0], [71.5, 502.0], [71.6, 503.0], [71.7, 504.0], [71.8, 505.0], [71.9, 506.0], [72.0, 507.0], [72.1, 508.0], [72.2, 509.0], [72.3, 510.0], [72.4, 510.0], [72.5, 511.0], [72.6, 512.0], [72.7, 513.0], [72.8, 514.0], [72.9, 515.0], [73.0, 516.0], [73.1, 517.0], [73.2, 518.0], [73.3, 520.0], [73.4, 522.0], [73.5, 522.0], [73.6, 523.0], [73.7, 524.0], [73.8, 525.0], [73.9, 525.0], [74.0, 526.0], [74.1, 527.0], [74.2, 527.0], [74.3, 528.0], [74.4, 528.0], [74.5, 530.0], [74.6, 531.0], [74.7, 532.0], [74.8, 532.0], [74.9, 533.0], [75.0, 533.0], [75.1, 535.0], [75.2, 536.0], [75.3, 538.0], [75.4, 539.0], [75.5, 541.0], [75.6, 541.0], [75.7, 541.0], [75.8, 542.0], [75.9, 543.0], [76.0, 544.0], [76.1, 545.0], [76.2, 546.0], [76.3, 546.0], [76.4, 547.0], [76.5, 548.0], [76.6, 548.0], [76.7, 548.0], [76.8, 549.0], [76.9, 549.0], [77.0, 549.0], [77.1, 550.0], [77.2, 550.0], [77.3, 550.0], [77.4, 551.0], [77.5, 551.0], [77.6, 551.0], [77.7, 551.0], [77.8, 552.0], [77.9, 554.0], [78.0, 554.0], [78.1, 554.0], [78.2, 555.0], [78.3, 555.0], [78.4, 556.0], [78.5, 556.0], [78.6, 556.0], [78.7, 556.0], [78.8, 556.0], [78.9, 557.0], [79.0, 557.0], [79.1, 557.0], [79.2, 557.0], [79.3, 558.0], [79.4, 558.0], [79.5, 558.0], [79.6, 559.0], [79.7, 560.0], [79.8, 560.0], [79.9, 560.0], [80.0, 560.0], [80.1, 561.0], [80.2, 561.0], [80.3, 562.0], [80.4, 562.0], [80.5, 562.0], [80.6, 563.0], [80.7, 563.0], [80.8, 563.0], [80.9, 563.0], [81.0, 564.0], [81.1, 564.0], [81.2, 564.0], [81.3, 564.0], [81.4, 565.0], [81.5, 565.0], [81.6, 565.0], [81.7, 565.0], [81.8, 565.0], [81.9, 566.0], [82.0, 566.0], [82.1, 566.0], [82.2, 566.0], [82.3, 566.0], [82.4, 567.0], [82.5, 567.0], [82.6, 568.0], [82.7, 568.0], [82.8, 568.0], [82.9, 569.0], [83.0, 569.0], [83.1, 570.0], [83.2, 570.0], [83.3, 571.0], [83.4, 571.0], [83.5, 571.0], [83.6, 572.0], [83.7, 572.0], [83.8, 572.0], [83.9, 572.0], [84.0, 573.0], [84.1, 573.0], [84.2, 573.0], [84.3, 574.0], [84.4, 574.0], [84.5, 574.0], [84.6, 574.0], [84.7, 575.0], [84.8, 576.0], [84.9, 578.0], [85.0, 579.0], [85.1, 579.0], [85.2, 580.0], [85.3, 580.0], [85.4, 580.0], [85.5, 581.0], [85.6, 582.0], [85.7, 583.0], [85.8, 583.0], [85.9, 586.0], [86.0, 587.0], [86.1, 588.0], [86.2, 590.0], [86.3, 592.0], [86.4, 594.0], [86.5, 595.0], [86.6, 596.0], [86.7, 597.0], [86.8, 600.0], [86.9, 600.0], [87.0, 601.0], [87.1, 601.0], [87.2, 602.0], [87.3, 602.0], [87.4, 603.0], [87.5, 604.0], [87.6, 604.0], [87.7, 605.0], [87.8, 606.0], [87.9, 606.0], [88.0, 606.0], [88.1, 607.0], [88.2, 607.0], [88.3, 607.0], [88.4, 609.0], [88.5, 609.0], [88.6, 610.0], [88.7, 610.0], [88.8, 610.0], [88.9, 611.0], [89.0, 611.0], [89.1, 612.0], [89.2, 612.0], [89.3, 612.0], [89.4, 613.0], [89.5, 613.0], [89.6, 613.0], [89.7, 614.0], [89.8, 614.0], [89.9, 614.0], [90.0, 615.0], [90.1, 615.0], [90.2, 615.0], [90.3, 616.0], [90.4, 616.0], [90.5, 617.0], [90.6, 617.0], [90.7, 617.0], [90.8, 617.0], [90.9, 618.0], [91.0, 619.0], [91.1, 619.0], [91.2, 619.0], [91.3, 620.0], [91.4, 620.0], [91.5, 620.0], [91.6, 620.0], [91.7, 621.0], [91.8, 621.0], [91.9, 621.0], [92.0, 621.0], [92.1, 622.0], [92.2, 622.0], [92.3, 622.0], [92.4, 622.0], [92.5, 622.0], [92.6, 622.0], [92.7, 622.0], [92.8, 623.0], [92.9, 624.0], [93.0, 624.0], [93.1, 624.0], [93.2, 625.0], [93.3, 625.0], [93.4, 625.0], [93.5, 626.0], [93.6, 626.0], [93.7, 626.0], [93.8, 626.0], [93.9, 627.0], [94.0, 627.0], [94.1, 627.0], [94.2, 628.0], [94.3, 628.0], [94.4, 628.0], [94.5, 628.0], [94.6, 628.0], [94.7, 629.0], [94.8, 629.0], [94.9, 629.0], [95.0, 630.0], [95.1, 630.0], [95.2, 631.0], [95.3, 632.0], [95.4, 632.0], [95.5, 632.0], [95.6, 632.0], [95.7, 633.0], [95.8, 633.0], [95.9, 634.0], [96.0, 634.0], [96.1, 635.0], [96.2, 635.0], [96.3, 635.0], [96.4, 636.0], [96.5, 636.0], [96.6, 636.0], [96.7, 636.0], [96.8, 637.0], [96.9, 637.0], [97.0, 638.0], [97.1, 639.0], [97.2, 639.0], [97.3, 641.0], [97.4, 643.0], [97.5, 643.0], [97.6, 645.0], [97.7, 646.0], [97.8, 647.0], [97.9, 648.0], [98.0, 649.0], [98.1, 650.0], [98.2, 652.0], [98.3, 654.0], [98.4, 655.0], [98.5, 657.0], [98.6, 658.0], [98.7, 660.0], [98.8, 660.0], [98.9, 662.0], [99.0, 664.0], [99.1, 665.0], [99.2, 669.0], [99.3, 671.0], [99.4, 674.0], [99.5, 676.0], [99.6, 678.0], [99.7, 686.0], [99.8, 687.0], [99.9, 690.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 77.0], [0.1, 82.0], [0.2, 92.0], [0.3, 115.0], [0.4, 118.0], [0.5, 120.0], [0.6, 122.0], [0.7, 123.0], [0.8, 124.0], [0.9, 125.0], [1.0, 126.0], [1.1, 127.0], [1.2, 128.0], [1.3, 128.0], [1.4, 128.0], [1.5, 128.0], [1.6, 129.0], [1.7, 129.0], [1.8, 129.0], [1.9, 130.0], [2.0, 130.0], [2.1, 130.0], [2.2, 131.0], [2.3, 131.0], [2.4, 131.0], [2.5, 131.0], [2.6, 132.0], [2.7, 132.0], [2.8, 132.0], [2.9, 132.0], [3.0, 132.0], [3.1, 133.0], [3.2, 133.0], [3.3, 133.0], [3.4, 134.0], [3.5, 134.0], [3.6, 134.0], [3.7, 135.0], [3.8, 135.0], [3.9, 135.0], [4.0, 135.0], [4.1, 135.0], [4.2, 135.0], [4.3, 136.0], [4.4, 136.0], [4.5, 136.0], [4.6, 136.0], [4.7, 136.0], [4.8, 136.0], [4.9, 136.0], [5.0, 137.0], [5.1, 137.0], [5.2, 137.0], [5.3, 137.0], [5.4, 137.0], [5.5, 137.0], [5.6, 137.0], [5.7, 138.0], [5.8, 138.0], [5.9, 138.0], [6.0, 138.0], [6.1, 138.0], [6.2, 138.0], [6.3, 138.0], [6.4, 138.0], [6.5, 139.0], [6.6, 139.0], [6.7, 139.0], [6.8, 139.0], [6.9, 139.0], [7.0, 139.0], [7.1, 139.0], [7.2, 139.0], [7.3, 140.0], [7.4, 140.0], [7.5, 140.0], [7.6, 140.0], [7.7, 140.0], [7.8, 140.0], [7.9, 140.0], [8.0, 141.0], [8.1, 141.0], [8.2, 141.0], [8.3, 141.0], [8.4, 141.0], [8.5, 141.0], [8.6, 141.0], [8.7, 141.0], [8.8, 141.0], [8.9, 142.0], [9.0, 142.0], [9.1, 142.0], [9.2, 142.0], [9.3, 142.0], [9.4, 143.0], [9.5, 143.0], [9.6, 143.0], [9.7, 143.0], [9.8, 143.0], [9.9, 143.0], [10.0, 144.0], [10.1, 144.0], [10.2, 144.0], [10.3, 144.0], [10.4, 144.0], [10.5, 144.0], [10.6, 144.0], [10.7, 144.0], [10.8, 145.0], [10.9, 145.0], [11.0, 145.0], [11.1, 145.0], [11.2, 145.0], [11.3, 145.0], [11.4, 146.0], [11.5, 146.0], [11.6, 146.0], [11.7, 146.0], [11.8, 146.0], [11.9, 146.0], [12.0, 146.0], [12.1, 146.0], [12.2, 146.0], [12.3, 146.0], [12.4, 146.0], [12.5, 147.0], [12.6, 147.0], [12.7, 147.0], [12.8, 147.0], [12.9, 147.0], [13.0, 147.0], [13.1, 147.0], [13.2, 147.0], [13.3, 147.0], [13.4, 147.0], [13.5, 147.0], [13.6, 147.0], [13.7, 148.0], [13.8, 148.0], [13.9, 148.0], [14.0, 148.0], [14.1, 148.0], [14.2, 148.0], [14.3, 148.0], [14.4, 148.0], [14.5, 148.0], [14.6, 148.0], [14.7, 148.0], [14.8, 148.0], [14.9, 149.0], [15.0, 149.0], [15.1, 149.0], [15.2, 149.0], [15.3, 149.0], [15.4, 149.0], [15.5, 149.0], [15.6, 149.0], [15.7, 149.0], [15.8, 149.0], [15.9, 149.0], [16.0, 150.0], [16.1, 150.0], [16.2, 150.0], [16.3, 150.0], [16.4, 150.0], [16.5, 150.0], [16.6, 150.0], [16.7, 150.0], [16.8, 150.0], [16.9, 150.0], [17.0, 150.0], [17.1, 151.0], [17.2, 151.0], [17.3, 151.0], [17.4, 151.0], [17.5, 151.0], [17.6, 151.0], [17.7, 151.0], [17.8, 151.0], [17.9, 151.0], [18.0, 151.0], [18.1, 151.0], [18.2, 151.0], [18.3, 152.0], [18.4, 152.0], [18.5, 152.0], [18.6, 152.0], [18.7, 152.0], [18.8, 152.0], [18.9, 152.0], [19.0, 152.0], [19.1, 152.0], [19.2, 152.0], [19.3, 152.0], [19.4, 152.0], [19.5, 152.0], [19.6, 152.0], [19.7, 153.0], [19.8, 153.0], [19.9, 153.0], [20.0, 153.0], [20.1, 153.0], [20.2, 153.0], [20.3, 153.0], [20.4, 153.0], [20.5, 153.0], [20.6, 153.0], [20.7, 153.0], [20.8, 153.0], [20.9, 153.0], [21.0, 153.0], [21.1, 153.0], [21.2, 153.0], [21.3, 154.0], [21.4, 154.0], [21.5, 154.0], [21.6, 154.0], [21.7, 154.0], [21.8, 154.0], [21.9, 154.0], [22.0, 154.0], [22.1, 155.0], [22.2, 155.0], [22.3, 155.0], [22.4, 155.0], [22.5, 155.0], [22.6, 155.0], [22.7, 155.0], [22.8, 155.0], [22.9, 155.0], [23.0, 155.0], [23.1, 155.0], [23.2, 155.0], [23.3, 155.0], [23.4, 156.0], [23.5, 156.0], [23.6, 156.0], [23.7, 156.0], [23.8, 156.0], [23.9, 156.0], [24.0, 156.0], [24.1, 156.0], [24.2, 156.0], [24.3, 157.0], [24.4, 157.0], [24.5, 157.0], [24.6, 157.0], [24.7, 157.0], [24.8, 157.0], [24.9, 157.0], [25.0, 157.0], [25.1, 157.0], [25.2, 157.0], [25.3, 157.0], [25.4, 157.0], [25.5, 158.0], [25.6, 158.0], [25.7, 158.0], [25.8, 158.0], [25.9, 158.0], [26.0, 158.0], [26.1, 158.0], [26.2, 158.0], [26.3, 158.0], [26.4, 158.0], [26.5, 158.0], [26.6, 159.0], [26.7, 159.0], [26.8, 159.0], [26.9, 159.0], [27.0, 159.0], [27.1, 159.0], [27.2, 159.0], [27.3, 159.0], [27.4, 159.0], [27.5, 159.0], [27.6, 159.0], [27.7, 159.0], [27.8, 160.0], [27.9, 160.0], [28.0, 160.0], [28.1, 160.0], [28.2, 160.0], [28.3, 160.0], [28.4, 160.0], [28.5, 160.0], [28.6, 160.0], [28.7, 160.0], [28.8, 160.0], [28.9, 160.0], [29.0, 160.0], [29.1, 160.0], [29.2, 161.0], [29.3, 161.0], [29.4, 161.0], [29.5, 161.0], [29.6, 161.0], [29.7, 161.0], [29.8, 161.0], [29.9, 161.0], [30.0, 161.0], [30.1, 161.0], [30.2, 161.0], [30.3, 161.0], [30.4, 161.0], [30.5, 161.0], [30.6, 161.0], [30.7, 162.0], [30.8, 162.0], [30.9, 162.0], [31.0, 162.0], [31.1, 162.0], [31.2, 162.0], [31.3, 162.0], [31.4, 162.0], [31.5, 162.0], [31.6, 162.0], [31.7, 162.0], [31.8, 162.0], [31.9, 163.0], [32.0, 163.0], [32.1, 163.0], [32.2, 163.0], [32.3, 163.0], [32.4, 163.0], [32.5, 163.0], [32.6, 163.0], [32.7, 163.0], [32.8, 163.0], [32.9, 163.0], [33.0, 163.0], [33.1, 163.0], [33.2, 164.0], [33.3, 164.0], [33.4, 164.0], [33.5, 164.0], [33.6, 164.0], [33.7, 164.0], [33.8, 164.0], [33.9, 164.0], [34.0, 164.0], [34.1, 164.0], [34.2, 164.0], [34.3, 164.0], [34.4, 165.0], [34.5, 165.0], [34.6, 165.0], [34.7, 165.0], [34.8, 165.0], [34.9, 165.0], [35.0, 165.0], [35.1, 165.0], [35.2, 165.0], [35.3, 165.0], [35.4, 165.0], [35.5, 166.0], [35.6, 166.0], [35.7, 166.0], [35.8, 166.0], [35.9, 166.0], [36.0, 166.0], [36.1, 166.0], [36.2, 166.0], [36.3, 166.0], [36.4, 167.0], [36.5, 167.0], [36.6, 167.0], [36.7, 167.0], [36.8, 167.0], [36.9, 167.0], [37.0, 167.0], [37.1, 167.0], [37.2, 167.0], [37.3, 167.0], [37.4, 167.0], [37.5, 167.0], [37.6, 168.0], [37.7, 168.0], [37.8, 168.0], [37.9, 168.0], [38.0, 168.0], [38.1, 168.0], [38.2, 168.0], [38.3, 168.0], [38.4, 168.0], [38.5, 168.0], [38.6, 168.0], [38.7, 169.0], [38.8, 169.0], [38.9, 169.0], [39.0, 169.0], [39.1, 169.0], [39.2, 169.0], [39.3, 169.0], [39.4, 169.0], [39.5, 170.0], [39.6, 170.0], [39.7, 170.0], [39.8, 170.0], [39.9, 170.0], [40.0, 170.0], [40.1, 170.0], [40.2, 170.0], [40.3, 171.0], [40.4, 171.0], [40.5, 171.0], [40.6, 171.0], [40.7, 171.0], [40.8, 171.0], [40.9, 171.0], [41.0, 171.0], [41.1, 171.0], [41.2, 171.0], [41.3, 171.0], [41.4, 171.0], [41.5, 171.0], [41.6, 171.0], [41.7, 171.0], [41.8, 172.0], [41.9, 172.0], [42.0, 172.0], [42.1, 172.0], [42.2, 172.0], [42.3, 172.0], [42.4, 172.0], [42.5, 172.0], [42.6, 172.0], [42.7, 172.0], [42.8, 172.0], [42.9, 173.0], [43.0, 173.0], [43.1, 173.0], [43.2, 173.0], [43.3, 173.0], [43.4, 173.0], [43.5, 173.0], [43.6, 173.0], [43.7, 173.0], [43.8, 173.0], [43.9, 173.0], [44.0, 173.0], [44.1, 174.0], [44.2, 174.0], [44.3, 174.0], [44.4, 174.0], [44.5, 174.0], [44.6, 174.0], [44.7, 174.0], [44.8, 174.0], [44.9, 174.0], [45.0, 174.0], [45.1, 175.0], [45.2, 175.0], [45.3, 175.0], [45.4, 175.0], [45.5, 175.0], [45.6, 175.0], [45.7, 175.0], [45.8, 175.0], [45.9, 175.0], [46.0, 175.0], [46.1, 175.0], [46.2, 176.0], [46.3, 176.0], [46.4, 176.0], [46.5, 176.0], [46.6, 176.0], [46.7, 176.0], [46.8, 176.0], [46.9, 176.0], [47.0, 177.0], [47.1, 177.0], [47.2, 177.0], [47.3, 177.0], [47.4, 177.0], [47.5, 177.0], [47.6, 177.0], [47.7, 177.0], [47.8, 177.0], [47.9, 178.0], [48.0, 178.0], [48.1, 178.0], [48.2, 178.0], [48.3, 178.0], [48.4, 178.0], [48.5, 178.0], [48.6, 178.0], [48.7, 178.0], [48.8, 178.0], [48.9, 178.0], [49.0, 178.0], [49.1, 178.0], [49.2, 178.0], [49.3, 179.0], [49.4, 179.0], [49.5, 179.0], [49.6, 179.0], [49.7, 179.0], [49.8, 179.0], [49.9, 179.0], [50.0, 179.0], [50.1, 179.0], [50.2, 179.0], [50.3, 179.0], [50.4, 179.0], [50.5, 180.0], [50.6, 180.0], [50.7, 180.0], [50.8, 180.0], [50.9, 180.0], [51.0, 180.0], [51.1, 180.0], [51.2, 180.0], [51.3, 180.0], [51.4, 180.0], [51.5, 180.0], [51.6, 180.0], [51.7, 181.0], [51.8, 181.0], [51.9, 181.0], [52.0, 181.0], [52.1, 181.0], [52.2, 181.0], [52.3, 181.0], [52.4, 181.0], [52.5, 181.0], [52.6, 181.0], [52.7, 182.0], [52.8, 182.0], [52.9, 182.0], [53.0, 182.0], [53.1, 182.0], [53.2, 182.0], [53.3, 182.0], [53.4, 182.0], [53.5, 183.0], [53.6, 183.0], [53.7, 183.0], [53.8, 183.0], [53.9, 183.0], [54.0, 183.0], [54.1, 184.0], [54.2, 184.0], [54.3, 184.0], [54.4, 184.0], [54.5, 184.0], [54.6, 184.0], [54.7, 184.0], [54.8, 184.0], [54.9, 184.0], [55.0, 185.0], [55.1, 185.0], [55.2, 185.0], [55.3, 185.0], [55.4, 185.0], [55.5, 185.0], [55.6, 186.0], [55.7, 186.0], [55.8, 186.0], [55.9, 186.0], [56.0, 186.0], [56.1, 186.0], [56.2, 186.0], [56.3, 187.0], [56.4, 187.0], [56.5, 187.0], [56.6, 187.0], [56.7, 187.0], [56.8, 187.0], [56.9, 187.0], [57.0, 188.0], [57.1, 188.0], [57.2, 188.0], [57.3, 188.0], [57.4, 188.0], [57.5, 188.0], [57.6, 188.0], [57.7, 188.0], [57.8, 189.0], [57.9, 189.0], [58.0, 189.0], [58.1, 189.0], [58.2, 189.0], [58.3, 189.0], [58.4, 189.0], [58.5, 189.0], [58.6, 189.0], [58.7, 189.0], [58.8, 189.0], [58.9, 190.0], [59.0, 190.0], [59.1, 190.0], [59.2, 190.0], [59.3, 190.0], [59.4, 190.0], [59.5, 190.0], [59.6, 190.0], [59.7, 190.0], [59.8, 191.0], [59.9, 191.0], [60.0, 191.0], [60.1, 191.0], [60.2, 191.0], [60.3, 191.0], [60.4, 191.0], [60.5, 191.0], [60.6, 191.0], [60.7, 192.0], [60.8, 192.0], [60.9, 192.0], [61.0, 192.0], [61.1, 192.0], [61.2, 192.0], [61.3, 192.0], [61.4, 192.0], [61.5, 192.0], [61.6, 192.0], [61.7, 193.0], [61.8, 193.0], [61.9, 193.0], [62.0, 193.0], [62.1, 193.0], [62.2, 193.0], [62.3, 193.0], [62.4, 193.0], [62.5, 193.0], [62.6, 194.0], [62.7, 194.0], [62.8, 194.0], [62.9, 194.0], [63.0, 194.0], [63.1, 194.0], [63.2, 194.0], [63.3, 195.0], [63.4, 195.0], [63.5, 195.0], [63.6, 195.0], [63.7, 195.0], [63.8, 195.0], [63.9, 195.0], [64.0, 195.0], [64.1, 195.0], [64.2, 196.0], [64.3, 196.0], [64.4, 196.0], [64.5, 196.0], [64.6, 196.0], [64.7, 196.0], [64.8, 197.0], [64.9, 197.0], [65.0, 197.0], [65.1, 197.0], [65.2, 197.0], [65.3, 198.0], [65.4, 198.0], [65.5, 198.0], [65.6, 198.0], [65.7, 198.0], [65.8, 198.0], [65.9, 198.0], [66.0, 199.0], [66.1, 199.0], [66.2, 199.0], [66.3, 199.0], [66.4, 199.0], [66.5, 200.0], [66.6, 200.0], [66.7, 200.0], [66.8, 200.0], [66.9, 200.0], [67.0, 200.0], [67.1, 200.0], [67.2, 200.0], [67.3, 201.0], [67.4, 201.0], [67.5, 201.0], [67.6, 201.0], [67.7, 201.0], [67.8, 201.0], [67.9, 202.0], [68.0, 202.0], [68.1, 202.0], [68.2, 202.0], [68.3, 202.0], [68.4, 202.0], [68.5, 203.0], [68.6, 203.0], [68.7, 203.0], [68.8, 203.0], [68.9, 203.0], [69.0, 204.0], [69.1, 204.0], [69.2, 204.0], [69.3, 204.0], [69.4, 204.0], [69.5, 204.0], [69.6, 204.0], [69.7, 205.0], [69.8, 205.0], [69.9, 205.0], [70.0, 205.0], [70.1, 205.0], [70.2, 205.0], [70.3, 205.0], [70.4, 206.0], [70.5, 206.0], [70.6, 206.0], [70.7, 206.0], [70.8, 206.0], [70.9, 207.0], [71.0, 207.0], [71.1, 207.0], [71.2, 207.0], [71.3, 207.0], [71.4, 207.0], [71.5, 207.0], [71.6, 207.0], [71.7, 208.0], [71.8, 208.0], [71.9, 208.0], [72.0, 208.0], [72.1, 208.0], [72.2, 208.0], [72.3, 208.0], [72.4, 208.0], [72.5, 209.0], [72.6, 209.0], [72.7, 209.0], [72.8, 209.0], [72.9, 209.0], [73.0, 209.0], [73.1, 209.0], [73.2, 209.0], [73.3, 209.0], [73.4, 210.0], [73.5, 210.0], [73.6, 210.0], [73.7, 210.0], [73.8, 210.0], [73.9, 211.0], [74.0, 211.0], [74.1, 211.0], [74.2, 211.0], [74.3, 211.0], [74.4, 211.0], [74.5, 211.0], [74.6, 212.0], [74.7, 212.0], [74.8, 212.0], [74.9, 212.0], [75.0, 212.0], [75.1, 212.0], [75.2, 213.0], [75.3, 213.0], [75.4, 213.0], [75.5, 213.0], [75.6, 213.0], [75.7, 213.0], [75.8, 214.0], [75.9, 214.0], [76.0, 214.0], [76.1, 214.0], [76.2, 214.0], [76.3, 214.0], [76.4, 215.0], [76.5, 215.0], [76.6, 215.0], [76.7, 215.0], [76.8, 215.0], [76.9, 215.0], [77.0, 215.0], [77.1, 215.0], [77.2, 216.0], [77.3, 216.0], [77.4, 216.0], [77.5, 216.0], [77.6, 216.0], [77.7, 216.0], [77.8, 217.0], [77.9, 217.0], [78.0, 217.0], [78.1, 217.0], [78.2, 217.0], [78.3, 218.0], [78.4, 218.0], [78.5, 218.0], [78.6, 219.0], [78.7, 219.0], [78.8, 219.0], [78.9, 219.0], [79.0, 220.0], [79.1, 220.0], [79.2, 220.0], [79.3, 220.0], [79.4, 221.0], [79.5, 221.0], [79.6, 221.0], [79.7, 221.0], [79.8, 222.0], [79.9, 222.0], [80.0, 222.0], [80.1, 222.0], [80.2, 222.0], [80.3, 222.0], [80.4, 223.0], [80.5, 223.0], [80.6, 223.0], [80.7, 223.0], [80.8, 224.0], [80.9, 224.0], [81.0, 224.0], [81.1, 224.0], [81.2, 224.0], [81.3, 225.0], [81.4, 225.0], [81.5, 225.0], [81.6, 225.0], [81.7, 226.0], [81.8, 226.0], [81.9, 226.0], [82.0, 226.0], [82.1, 227.0], [82.2, 227.0], [82.3, 227.0], [82.4, 227.0], [82.5, 228.0], [82.6, 228.0], [82.7, 228.0], [82.8, 228.0], [82.9, 229.0], [83.0, 229.0], [83.1, 229.0], [83.2, 229.0], [83.3, 229.0], [83.4, 230.0], [83.5, 230.0], [83.6, 231.0], [83.7, 231.0], [83.8, 231.0], [83.9, 231.0], [84.0, 232.0], [84.1, 232.0], [84.2, 232.0], [84.3, 233.0], [84.4, 233.0], [84.5, 233.0], [84.6, 233.0], [84.7, 233.0], [84.8, 234.0], [84.9, 234.0], [85.0, 234.0], [85.1, 234.0], [85.2, 235.0], [85.3, 235.0], [85.4, 235.0], [85.5, 236.0], [85.6, 237.0], [85.7, 237.0], [85.8, 237.0], [85.9, 237.0], [86.0, 238.0], [86.1, 238.0], [86.2, 238.0], [86.3, 238.0], [86.4, 239.0], [86.5, 239.0], [86.6, 239.0], [86.7, 239.0], [86.8, 239.0], [86.9, 240.0], [87.0, 240.0], [87.1, 240.0], [87.2, 241.0], [87.3, 241.0], [87.4, 242.0], [87.5, 242.0], [87.6, 243.0], [87.7, 243.0], [87.8, 243.0], [87.9, 244.0], [88.0, 244.0], [88.1, 245.0], [88.2, 245.0], [88.3, 245.0], [88.4, 246.0], [88.5, 246.0], [88.6, 246.0], [88.7, 247.0], [88.8, 247.0], [88.9, 248.0], [89.0, 248.0], [89.1, 249.0], [89.2, 249.0], [89.3, 250.0], [89.4, 251.0], [89.5, 251.0], [89.6, 253.0], [89.7, 253.0], [89.8, 253.0], [89.9, 254.0], [90.0, 254.0], [90.1, 255.0], [90.2, 256.0], [90.3, 257.0], [90.4, 258.0], [90.5, 259.0], [90.6, 261.0], [90.7, 261.0], [90.8, 264.0], [90.9, 266.0], [91.0, 267.0], [91.1, 271.0], [91.2, 275.0], [91.3, 282.0], [91.4, 288.0], [91.5, 291.0], [91.6, 303.0], [91.7, 315.0], [91.8, 320.0], [91.9, 325.0], [92.0, 326.0], [92.1, 332.0], [92.2, 335.0], [92.3, 337.0], [92.4, 341.0], [92.5, 346.0], [92.6, 350.0], [92.7, 354.0], [92.8, 356.0], [92.9, 359.0], [93.0, 367.0], [93.1, 372.0], [93.2, 372.0], [93.3, 374.0], [93.4, 376.0], [93.5, 380.0], [93.6, 383.0], [93.7, 389.0], [93.8, 394.0], [93.9, 396.0], [94.0, 398.0], [94.1, 398.0], [94.2, 403.0], [94.3, 406.0], [94.4, 409.0], [94.5, 411.0], [94.6, 414.0], [94.7, 416.0], [94.8, 419.0], [94.9, 421.0], [95.0, 424.0], [95.1, 425.0], [95.2, 426.0], [95.3, 428.0], [95.4, 429.0], [95.5, 431.0], [95.6, 436.0], [95.7, 440.0], [95.8, 442.0], [95.9, 448.0], [96.0, 454.0], [96.1, 456.0], [96.2, 459.0], [96.3, 463.0], [96.4, 466.0], [96.5, 470.0], [96.6, 472.0], [96.7, 474.0], [96.8, 476.0], [96.9, 481.0], [97.0, 485.0], [97.1, 488.0], [97.2, 491.0], [97.3, 495.0], [97.4, 496.0], [97.5, 497.0], [97.6, 498.0], [97.7, 502.0], [97.8, 506.0], [97.9, 508.0], [98.0, 514.0], [98.1, 517.0], [98.2, 520.0], [98.3, 522.0], [98.4, 531.0], [98.5, 535.0], [98.6, 539.0], [98.7, 550.0], [98.8, 554.0], [98.9, 557.0], [99.0, 558.0], [99.1, 574.0], [99.2, 583.0], [99.3, 590.0], [99.4, 598.0], [99.5, 605.0], [99.6, 631.0], [99.7, 640.0], [99.8, 694.0], [99.9, 1143.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1986.0, "series": [{"data": [[2100.0, 1.0], [2300.0, 1.0], [600.0, 132.0], [700.0, 140.0], [3000.0, 5.0], [200.0, 961.0], [800.0, 173.0], [900.0, 119.0], [1000.0, 113.0], [1100.0, 147.0], [300.0, 245.0], [1200.0, 83.0], [1300.0, 53.0], [1400.0, 19.0], [1500.0, 10.0], [100.0, 316.0], [400.0, 186.0], [1800.0, 1.0], [500.0, 292.0], [2000.0, 3.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 609.0], [300.0, 495.0], [600.0, 395.0], [700.0, 1.0], [100.0, 475.0], [200.0, 329.0], [400.0, 220.0], [500.0, 476.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 7.0], [1100.0, 2.0], [300.0, 76.0], [600.0, 12.0], [1400.0, 1.0], [100.0, 1986.0], [200.0, 755.0], [400.0, 105.0], [500.0, 54.0], [1000.0, 2.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 865.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6000.0, "series": [{"data": [[0.0, 2135.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 865.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 6000.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 189.28699999999964, "minX": 1.6722276E12, "maxY": 542.3123333333347, "series": [{"data": [[1.6722276E12, 432.7960000000003]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.6722276E12, 542.3123333333347]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.6722276E12, 189.28699999999964]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6722276E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 16.571428571428573, "minX": 1.0, "maxY": 3076.0, "series": [{"data": [[3.0, 3060.5], [4.0, 3056.0], [6.0, 2072.0], [7.0, 3047.0], [8.0, 2074.0], [9.0, 1127.0], [10.0, 1124.0], [11.0, 1116.0], [12.0, 1130.0], [13.0, 1128.0], [14.0, 1121.0], [15.0, 1155.0], [16.0, 1108.0], [17.0, 1167.0], [18.0, 1157.0], [19.0, 1158.0], [20.0, 1165.0], [21.0, 1156.0], [22.0, 1159.0], [23.0, 1177.0], [24.0, 1176.0], [25.0, 1164.0], [26.0, 1150.0], [27.0, 1170.0], [28.0, 1157.0], [29.0, 1177.0], [30.0, 1139.0], [31.0, 1132.0], [33.0, 1153.0], [32.0, 1139.0], [35.0, 1155.0], [34.0, 1173.0], [37.0, 1159.0], [36.0, 1148.0], [39.0, 1171.0], [38.0, 1156.0], [41.0, 1056.0], [45.0, 1067.5], [47.0, 1096.0], [49.0, 1072.0], [48.0, 1096.0], [51.0, 1076.0], [50.0, 1083.0], [52.0, 1069.0], [55.0, 1085.0], [54.0, 1083.5], [56.0, 1077.0], [59.0, 1074.0], [58.0, 1074.0], [61.0, 1067.0], [62.0, 1318.0], [67.0, 1249.0], [65.0, 974.6666666666666], [71.0, 1255.0], [70.0, 1310.0], [68.0, 1241.0], [74.0, 1198.0], [73.0, 1234.5], [78.0, 1215.75], [82.0, 983.5], [81.0, 1035.0], [87.0, 1378.0], [84.0, 1191.5], [88.0, 1166.3333333333333], [94.0, 1014.0], [93.0, 1464.0], [92.0, 1174.3333333333333], [98.0, 1138.5], [96.0, 1239.5], [102.0, 1199.0], [101.0, 910.0], [106.0, 1298.0], [105.0, 1096.6666666666667], [110.0, 1206.0], [108.0, 1247.0], [112.0, 1390.0], [119.0, 963.0], [117.0, 956.0], [116.0, 947.0], [123.0, 1046.0], [122.0, 1092.0], [121.0, 1129.5], [127.0, 960.5], [126.0, 1219.0], [135.0, 1026.142857142857], [134.0, 965.0], [142.0, 874.6], [141.0, 912.5], [137.0, 1131.0], [147.0, 1009.8], [159.0, 1045.5], [158.0, 1030.5], [157.0, 947.0], [156.0, 911.0], [155.0, 920.0], [154.0, 1128.5], [167.0, 1084.0], [166.0, 843.0], [165.0, 952.5], [162.0, 1054.3333333333333], [173.0, 910.0], [182.0, 847.6666666666666], [179.0, 958.5], [177.0, 955.6666666666666], [176.0, 1014.1666666666667], [191.0, 1173.6666666666667], [190.0, 1864.0], [189.0, 1130.0], [188.0, 1193.0], [186.0, 814.0], [184.0, 852.0], [198.0, 889.6666666666666], [196.0, 972.5], [207.0, 942.0], [204.0, 948.8333333333334], [206.0, 831.0], [215.0, 908.6666666666666], [212.0, 945.5], [210.0, 1001.3333333333334], [222.0, 230.0], [221.0, 261.0], [219.0, 254.5], [223.0, 204.5], [220.0, 1001.6666666666666], [217.0, 825.5], [216.0, 1075.0], [231.0, 686.6999999999999], [229.0, 245.66666666666669], [227.0, 253.33333333333334], [228.0, 203.0], [226.0, 211.66666666666666], [225.0, 301.25], [230.0, 191.5], [239.0, 211.28571428571428], [236.0, 244.45454545454547], [234.0, 456.6], [233.0, 218.33333333333331], [232.0, 211.76923076923077], [237.0, 263.375], [238.0, 333.8], [235.0, 468.44444444444446], [241.0, 388.42857142857144], [240.0, 340.9166666666667], [243.0, 234.29999999999998], [242.0, 433.90909090909093], [245.0, 327.7857142857143], [247.0, 327.42857142857144], [244.0, 189.12500000000003], [246.0, 249.8], [255.0, 405.83333333333337], [254.0, 741.0], [253.0, 236.0], [252.0, 188.0], [251.0, 428.0], [250.0, 223.0], [249.0, 230.0], [248.0, 493.7142857142857], [270.0, 347.1538461538462], [271.0, 393.5], [269.0, 286.3636363636364], [268.0, 508.6875], [267.0, 248.0], [266.0, 242.0], [265.0, 265.6], [264.0, 406.25], [263.0, 215.0], [256.0, 330.5], [257.0, 272.0], [259.0, 888.8333333333333], [258.0, 721.0], [262.0, 706.0], [260.0, 567.0], [261.0, 717.5], [275.0, 222.55555555555557], [286.0, 373.2], [285.0, 370.33333333333337], [284.0, 327.7368421052632], [283.0, 238.8], [281.0, 376.33333333333337], [280.0, 678.0], [282.0, 691.5], [287.0, 307.5], [277.0, 498.14285714285717], [276.0, 460.75], [274.0, 242.85714285714283], [273.0, 290.0], [272.0, 429.83333333333337], [279.0, 655.25], [278.0, 254.0], [291.0, 219.27272727272728], [296.0, 265.2857142857143], [303.0, 370.06666666666666], [302.0, 225.66666666666669], [301.0, 212.51851851851856], [300.0, 247.35], [294.0, 204.33333333333334], [292.0, 198.9090909090909], [290.0, 207.0], [299.0, 229.61904761904762], [298.0, 348.85714285714283], [297.0, 240.27272727272725], [295.0, 625.4285714285713], [288.0, 246.8], [293.0, 224.0], [289.0, 367.23076923076917], [317.0, 351.8333333333333], [316.0, 472.72727272727275], [307.0, 295.90909090909093], [305.0, 362.33333333333337], [304.0, 227.64285714285717], [306.0, 296.0], [315.0, 280.4285714285714], [314.0, 338.5454545454546], [319.0, 367.0909090909091], [318.0, 323.99999999999994], [313.0, 231.66666666666669], [312.0, 362.99999999999994], [311.0, 294.2], [310.0, 234.304347826087], [309.0, 294.9545454545455], [308.0, 209.58620689655172], [334.0, 203.75], [321.0, 366.7142857142857], [322.0, 296.75], [323.0, 361.25], [320.0, 305.6666666666667], [327.0, 278.375], [326.0, 202.21052631578945], [324.0, 204.5], [325.0, 464.0], [335.0, 205.89999999999998], [328.0, 519.2], [332.0, 248.08333333333334], [333.0, 957.0], [329.0, 273.55555555555554], [330.0, 229.0], [331.0, 362.0], [350.0, 280.4], [339.0, 393.0], [338.0, 366.33333333333337], [337.0, 238.66666666666666], [336.0, 315.5], [343.0, 320.0], [340.0, 392.18181818181813], [342.0, 429.7142857142857], [341.0, 246.625], [351.0, 274.37500000000006], [348.0, 298.54545454545456], [349.0, 361.4], [347.0, 315.4375], [346.0, 260.37499999999994], [345.0, 338.2307692307692], [344.0, 301.14285714285717], [353.0, 279.0], [357.0, 228.4], [352.0, 287.0], [356.0, 292.5], [354.0, 271.83333333333337], [359.0, 559.6666666666667], [358.0, 518.0], [355.0, 270.55555555555554], [364.0, 406.66666666666663], [361.0, 866.6666666666666], [365.0, 1046.0], [363.0, 248.8], [362.0, 229.0], [383.0, 256.0], [376.0, 657.5], [381.0, 280.5], [380.0, 849.3333333333334], [379.0, 295.0], [378.0, 426.66666666666663], [377.0, 309.0], [375.0, 295.0], [374.0, 243.42857142857144], [373.0, 931.0], [370.0, 556.5], [368.0, 748.5], [386.0, 559.0], [391.0, 829.0], [392.0, 264.6666666666667], [390.0, 413.4], [393.0, 683.0], [395.0, 778.0], [394.0, 996.0], [388.0, 428.66666666666663], [384.0, 693.25], [389.0, 481.5], [397.0, 783.0], [399.0, 1279.0], [398.0, 1231.0], [396.0, 644.5], [387.0, 1004.6666666666666], [414.0, 1044.0], [408.0, 497.25], [409.0, 526.0], [406.0, 747.0], [401.0, 818.0], [400.0, 820.0], [403.0, 1216.0], [402.0, 969.0], [405.0, 1386.0], [404.0, 1096.0], [415.0, 860.0], [413.0, 1097.0], [412.0, 836.0], [411.0, 1067.0], [410.0, 818.0], [430.0, 953.0], [427.0, 1021.4], [426.0, 879.0], [425.0, 270.0], [421.0, 805.0], [420.0, 1010.0], [419.0, 838.0], [418.0, 849.0], [417.0, 808.0], [416.0, 641.0], [434.0, 1292.0], [445.0, 639.0], [446.0, 1078.5], [444.0, 922.5], [441.0, 1168.0], [440.0, 939.0], [438.0, 844.5], [437.0, 1070.6666666666667], [432.0, 780.0], [433.0, 1344.0], [451.0, 1014.0], [462.0, 999.5], [461.0, 818.0], [458.0, 1188.0], [456.0, 1187.0], [454.0, 1038.0], [453.0, 1024.5], [450.0, 824.0], [448.0, 1096.0], [466.0, 917.6666666666666], [464.0, 844.5], [467.0, 279.0], [479.0, 1319.0], [477.0, 1206.75], [475.0, 1084.0], [476.0, 803.0], [470.0, 1351.0], [468.0, 1184.0], [495.0, 976.5], [491.0, 1013.3333333333334], [490.0, 1167.0], [489.0, 1360.0], [488.0, 1309.0], [484.0, 1170.0], [483.0, 1266.5], [481.0, 1164.3333333333333], [511.0, 278.125], [509.0, 644.5], [507.0, 989.3333333333334], [505.0, 992.6666666666666], [504.0, 976.0], [502.0, 955.0], [500.0, 1192.0], [497.0, 848.0], [543.0, 276.0], [530.0, 384.6666666666667], [529.0, 1367.0], [528.0, 857.6666666666666], [532.0, 1055.0], [542.0, 313.0], [541.0, 1200.0], [540.0, 538.0], [538.0, 833.0], [536.0, 550.5], [516.0, 980.5], [515.0, 895.5], [512.0, 1026.75], [525.0, 814.5], [523.0, 836.0], [521.0, 1129.0], [522.0, 792.0], [535.0, 1069.0], [533.0, 552.0], [572.0, 844.5], [564.0, 320.0], [545.0, 508.66666666666663], [544.0, 913.6666666666666], [547.0, 1181.0], [546.0, 1381.0], [551.0, 532.0], [549.0, 601.0], [557.0, 529.0], [556.0, 1131.0], [555.0, 1291.0], [554.0, 530.5], [553.0, 1009.5], [567.0, 505.1428571428571], [566.0, 286.0], [565.0, 468.5], [575.0, 511.0], [563.0, 1164.6666666666665], [561.0, 516.0], [560.0, 526.0], [571.0, 524.0], [568.0, 515.0], [573.0, 1365.0], [601.0, 711.5], [582.0, 663.5], [581.0, 310.0], [579.0, 861.5], [577.0, 512.0], [591.0, 511.3333333333333], [588.0, 516.0], [585.0, 606.3333333333334], [600.0, 298.0], [583.0, 512.5], [598.0, 451.0], [596.0, 502.0], [595.0, 1131.0], [592.0, 505.0], [606.0, 854.5], [605.0, 496.0], [603.0, 500.0], [604.0, 758.0], [636.0, 741.5], [621.0, 306.0], [619.0, 513.0], [616.0, 893.5], [622.0, 446.5], [638.0, 1005.0], [634.0, 528.0], [633.0, 491.0], [615.0, 1323.0], [613.0, 978.0], [611.0, 498.0], [610.0, 921.0], [609.0, 1170.0], [631.0, 496.5], [629.0, 599.3333333333334], [626.0, 810.6], [625.0, 1152.0], [644.0, 332.0], [655.0, 659.0], [642.0, 561.0], [643.0, 671.6666666666666], [645.0, 411.0], [647.0, 332.0], [664.0, 723.0], [666.0, 387.75], [663.0, 451.5], [662.0, 433.0], [669.0, 318.0], [671.0, 761.0], [659.0, 545.0], [656.0, 520.5], [661.0, 534.0], [660.0, 540.0], [668.0, 431.0], [667.0, 564.0], [646.0, 334.0], [640.0, 575.6666666666666], [641.0, 410.5], [649.0, 323.5], [648.0, 379.9], [653.0, 435.5], [652.0, 560.6666666666666], [651.0, 553.0], [650.0, 325.0], [689.0, 329.0], [674.0, 565.625], [673.0, 332.0], [687.0, 973.0], [686.0, 784.0], [684.0, 736.0], [685.0, 574.0], [690.0, 289.0], [691.0, 951.3333333333334], [702.0, 726.3333333333334], [688.0, 677.0], [699.0, 593.0], [698.0, 714.0], [677.0, 769.5], [676.0, 1046.0], [695.0, 649.0], [692.0, 572.0], [721.0, 963.0], [734.0, 599.5], [732.0, 774.0], [729.0, 819.5], [711.0, 1079.0], [709.0, 774.5], [708.0, 592.0], [707.0, 770.0], [706.0, 968.0], [727.0, 976.6666666666666], [724.0, 855.5], [723.0, 1040.0], [720.0, 773.5], [719.0, 595.0], [716.0, 1129.0], [715.0, 589.0], [713.0, 753.3333333333334], [762.0, 312.5], [747.0, 418.6666666666667], [745.0, 830.6666666666666], [744.0, 1143.0], [746.0, 927.0], [761.0, 544.3333333333334], [760.0, 738.0], [750.0, 1131.0], [736.0, 598.0], [743.0, 878.6666666666666], [738.0, 677.3333333333334], [749.0, 1001.0], [748.0, 841.0], [758.0, 314.0], [763.0, 401.0], [764.0, 739.0], [759.0, 333.0], [757.0, 341.0], [756.0, 896.0], [754.0, 1033.5], [753.0, 894.0], [752.0, 866.5], [766.0, 928.5], [797.0, 610.0], [783.0, 565.0], [781.0, 969.6666666666666], [779.0, 625.0], [777.0, 1016.375], [782.0, 628.0], [785.0, 685.0], [787.0, 929.0], [784.0, 334.6666666666667], [798.0, 565.0], [796.0, 852.0], [795.0, 1142.0], [794.0, 970.6666666666666], [791.0, 915.25], [788.0, 1078.0], [820.0, 600.0], [830.0, 888.5], [828.0, 927.0], [827.0, 919.0], [826.0, 971.3333333333334], [814.0, 958.0], [801.0, 990.0], [800.0, 1010.0], [804.0, 869.0], [803.0, 861.0], [806.0, 1195.0], [805.0, 863.0], [811.0, 2129.0], [810.0, 1199.0], [809.0, 997.0], [808.0, 678.5], [823.0, 1193.0], [822.0, 1183.0], [821.0, 538.0], [819.0, 594.0], [817.0, 690.6666666666666], [863.0, 909.0], [834.0, 516.0], [833.0, 432.0], [832.0, 721.0], [847.0, 919.5], [844.0, 840.6666666666666], [841.0, 889.5], [855.0, 486.0], [854.0, 453.0], [852.0, 721.0], [850.0, 743.0], [849.0, 905.0], [848.0, 861.0], [853.0, 1154.0], [862.0, 731.0], [861.0, 793.0], [860.0, 545.0], [859.0, 934.0], [858.0, 1045.5], [856.0, 834.0], [839.0, 573.5], [837.0, 966.0], [836.0, 889.5], [871.0, 1130.0], [881.0, 1108.0], [879.0, 519.0], [878.0, 526.0], [877.0, 732.5], [875.0, 795.3333333333334], [872.0, 712.0], [894.0, 710.75], [890.0, 1115.0], [888.0, 1115.5], [870.0, 784.0], [869.0, 1121.0], [868.0, 728.0], [866.0, 812.0], [865.0, 720.0], [864.0, 958.0], [886.0, 630.0], [884.0, 1016.5], [883.0, 518.0], [880.0, 894.0], [926.0, 275.75], [912.0, 663.0], [913.0, 480.0], [927.0, 777.3333333333334], [915.0, 541.5], [914.0, 630.0], [909.0, 405.0], [908.0, 762.0], [907.0, 900.0], [904.0, 618.5], [911.0, 903.0], [896.0, 824.5], [900.0, 1007.0], [899.0, 945.0], [902.0, 782.0], [901.0, 892.0], [924.0, 275.5], [922.0, 673.25], [921.0, 540.3333333333333], [923.0, 266.5], [920.0, 275.6666666666667], [917.0, 377.8], [919.0, 795.5], [918.0, 715.0], [916.0, 567.5], [931.0, 315.83333333333337], [937.0, 453.33333333333337], [936.0, 197.0], [935.0, 305.75], [934.0, 705.0], [955.0, 744.0], [957.0, 538.8571428571429], [956.0, 416.3333333333333], [959.0, 338.25], [958.0, 466.25], [933.0, 646.2], [932.0, 254.5], [940.0, 431.6], [943.0, 378.3125], [941.0, 520.8], [942.0, 438.0], [929.0, 604.8], [930.0, 426.33333333333337], [928.0, 527.2857142857142], [938.0, 357.75], [939.0, 749.0], [944.0, 300.5], [948.0, 544.4285714285713], [949.0, 357.0], [951.0, 825.3333333333334], [946.0, 292.25], [945.0, 496.6], [947.0, 393.3333333333333], [966.0, 423.0], [967.0, 378.0], [984.0, 466.16666666666663], [986.0, 416.75], [985.0, 536.1428571428571], [964.0, 458.75], [965.0, 568.5], [961.0, 398.4], [960.0, 540.3333333333334], [975.0, 946.0], [974.0, 440.5], [972.0, 449.0], [963.0, 486.5], [962.0, 403.25], [987.0, 461.94736842105266], [991.0, 451.0], [976.0, 542.1428571428572], [977.0, 532.4285714285714], [980.0, 471.33333333333337], [981.0, 510.6], [979.0, 457.8333333333333], [978.0, 443.85714285714283], [983.0, 465.7142857142857], [982.0, 484.3333333333333], [990.0, 419.6923076923077], [989.0, 529.5555555555555], [988.0, 514.0833333333334], [998.0, 563.2222222222222], [994.0, 484.26666666666665], [996.0, 456.0], [995.0, 482.85714285714283], [999.0, 503.85714285714283], [1017.0, 511.2], [1018.0, 445.1666666666667], [1016.0, 450.6666666666667], [1020.0, 439.33333333333337], [1022.0, 547.5], [1009.0, 438.77777777777777], [1008.0, 516.5], [1011.0, 489.14285714285717], [1012.0, 637.8333333333333], [1010.0, 537.6], [1014.0, 598.0], [1013.0, 698.5714285714286], [1019.0, 476.8333333333333], [997.0, 537.6666666666666], [1000.0, 514.8], [1002.0, 462.125], [1003.0, 528.3333333333334], [1001.0, 451.0], [1005.0, 433.8888888888889], [1007.0, 498.28571428571433], [1006.0, 502.33333333333337], [1004.0, 510.0], [993.0, 429.83333333333337], [992.0, 651.25], [1056.0, 999.0], [1038.0, 607.0], [1076.0, 812.0], [1082.0, 649.0], [1060.0, 557.5], [1064.0, 610.6666666666666], [1086.0, 735.0], [1068.0, 696.0], [1070.0, 681.0], [1036.0, 452.3333333333333], [1034.0, 599.0], [1026.0, 628.3333333333334], [1042.0, 649.6666666666666], [1054.0, 735.0], [1052.0, 455.0], [1050.0, 874.5], [1048.0, 437.5], [1044.0, 505.0], [1040.0, 701.75], [1028.0, 271.3333333333333], [1030.0, 450.0], [1098.0, 692.5], [1100.0, 904.0], [1092.0, 554.2], [1118.0, 943.0], [1090.0, 572.0], [1116.0, 510.0], [1132.0, 772.0], [1130.0, 732.0], [1126.0, 768.0], [1122.0, 901.0], [1150.0, 658.0], [1148.0, 789.0], [1144.0, 719.5], [1140.0, 895.0], [1138.0, 716.0], [1136.0, 799.0], [1110.0, 575.5], [1108.0, 639.25], [1106.0, 754.3333333333334], [1114.0, 770.0], [1160.0, 908.0], [1158.0, 512.5], [1166.0, 690.75], [1164.0, 447.6666666666667], [1162.0, 713.0], [1156.0, 663.25], [1154.0, 880.0], [1152.0, 944.0], [1168.0, 718.0], [1079.0, 763.0], [1081.0, 663.0], [1035.0, 570.6666666666666], [1073.0, 775.0], [1075.0, 571.5], [1077.0, 653.0], [1087.0, 711.5], [1059.0, 557.0], [1061.0, 275.0], [1065.0, 822.0], [1067.0, 686.6666666666666], [1071.0, 599.0], [1069.0, 460.0], [1037.0, 495.75], [1033.0, 562.7857142857143], [1027.0, 527.6666666666666], [1025.0, 504.3333333333333], [1055.0, 640.0], [1051.0, 650.0], [1047.0, 256.0], [1045.0, 331.3333333333333], [1043.0, 739.0], [1029.0, 669.3333333333334], [1031.0, 501.0], [1147.0, 538.0], [1101.0, 570.0], [1115.0, 642.6], [1093.0, 567.6666666666666], [1095.0, 899.0], [1099.0, 616.0], [1091.0, 663.0], [1089.0, 865.0], [1117.0, 593.0], [1133.0, 515.0], [1135.0, 711.0], [1131.0, 623.0], [1127.0, 853.6666666666666], [1125.0, 943.0], [1123.0, 813.5], [1121.0, 772.4], [1145.0, 564.0], [1137.0, 669.0], [1103.0, 283.0], [1105.0, 565.0], [1109.0, 570.5], [1113.0, 356.5], [1111.0, 691.6], [1161.0, 526.5], [1165.0, 849.5], [1167.0, 547.5], [1163.0, 632.4285714285714], [1159.0, 944.0], [1157.0, 774.5], [1155.0, 894.0], [1169.0, 880.0], [1153.0, 440.5], [1.0, 3076.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[542.3116666666656, 533.8436666666668]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 695.0], [5.0, 688.0], [7.0, 686.0], [8.0, 687.0], [9.0, 344.5], [10.0, 687.5], [13.0, 678.6666666666666], [16.0, 676.3333333333334], [20.0, 671.5], [22.0, 664.0], [23.0, 669.5], [24.0, 671.0], [27.0, 659.0], [28.0, 658.0], [29.0, 36.0], [30.0, 248.66666666666666], [31.0, 540.8], [32.0, 90.0], [33.0, 38.0], [35.0, 33.36363636363637], [34.0, 38.666666666666664], [37.0, 16.571428571428573], [36.0, 150.10000000000002], [39.0, 146.375], [38.0, 89.69999999999999], [40.0, 21.875], [41.0, 36.0], [43.0, 27.0], [42.0, 303.8888888888889], [45.0, 213.2], [44.0, 34.0], [47.0, 32.5], [46.0, 31.0], [49.0, 29.0], [48.0, 503.25], [51.0, 411.0], [50.0, 43.0], [53.0, 345.5], [52.0, 44.875], [55.0, 134.5], [54.0, 40.5], [57.0, 39.333333333333336], [56.0, 272.5], [58.0, 41.857142857142854], [59.0, 297.14285714285717], [61.0, 41.0], [60.0, 43.0], [63.0, 35.333333333333336], [62.0, 282.4], [64.0, 32.25], [67.0, 45.75], [66.0, 34.0], [65.0, 386.42857142857144], [70.0, 443.6666666666667], [69.0, 48.0], [68.0, 489.0], [72.0, 45.666666666666664], [73.0, 283.25], [75.0, 72.5], [74.0, 60.5], [79.0, 454.3333333333333], [78.0, 74.5], [77.0, 77.0], [76.0, 359.1666666666667], [82.0, 192.33333333333334], [80.0, 135.625], [81.0, 69.5], [83.0, 60.666666666666664], [86.0, 64.8], [85.0, 403.8], [84.0, 170.4], [87.0, 54.0], [91.0, 175.4], [90.0, 249.16666666666666], [89.0, 58.142857142857146], [88.0, 178.21428571428572], [95.0, 120.33333333333334], [94.0, 120.625], [93.0, 167.6], [92.0, 53.5], [99.0, 284.8], [98.0, 60.42857142857143], [97.0, 346.6666666666667], [96.0, 57.833333333333336], [103.0, 82.0], [102.0, 349.8333333333333], [101.0, 56.0], [100.0, 61.5], [107.0, 80.0], [106.0, 276.125], [104.0, 89.5], [105.0, 216.25], [110.0, 183.36363636363637], [109.0, 82.00000000000001], [108.0, 86.85714285714286], [111.0, 85.76470588235296], [115.0, 111.16666666666667], [113.0, 151.0], [112.0, 83.25000000000001], [114.0, 88.28571428571428], [116.0, 114.8235294117647], [117.0, 93.0], [119.0, 78.99999999999999], [118.0, 166.3846153846154], [123.0, 76.66666666666667], [122.0, 224.14285714285714], [121.0, 74.6], [120.0, 356.3333333333333], [127.0, 207.875], [126.0, 339.0], [125.0, 81.42857142857143], [124.0, 74.0], [128.0, 267.66666666666663], [129.0, 79.0], [135.0, 211.25], [133.0, 356.5], [132.0, 64.0], [131.0, 480.5], [130.0, 52.0], [134.0, 618.0], [143.0, 166.33333333333334], [141.0, 165.0], [139.0, 218.5], [137.0, 137.44444444444446], [142.0, 78.66666666666667], [138.0, 250.0], [140.0, 215.5], [136.0, 602.0], [146.0, 235.28571428571428], [147.0, 352.5], [145.0, 80.66666666666666], [144.0, 349.0], [150.0, 210.75], [148.0, 355.5], [151.0, 622.0], [149.0, 627.0], [159.0, 232.25], [158.0, 226.5], [157.0, 355.75], [156.0, 121.5], [155.0, 354.75], [154.0, 85.25], [153.0, 86.0], [152.0, 256.33333333333337], [162.0, 369.5], [161.0, 356.5], [160.0, 284.66666666666663], [167.0, 616.0], [166.0, 615.0], [165.0, 615.6666666666666], [174.0, 611.0], [172.0, 621.0], [171.0, 607.0], [170.0, 615.0], [169.0, 615.0], [168.0, 614.0], [183.0, 614.5555555555555], [191.0, 122.0], [189.0, 617.0], [188.0, 597.0], [187.0, 625.0], [186.0, 622.0], [185.0, 615.0], [184.0, 613.0], [195.0, 448.3333333333333], [194.0, 369.0], [193.0, 112.0], [192.0, 492.0], [198.0, 628.0], [207.0, 627.3333333333334], [205.0, 627.3333333333334], [203.0, 621.5], [201.0, 618.0], [215.0, 630.0], [213.0, 620.5], [211.0, 611.0], [210.0, 619.0], [208.0, 624.0], [222.0, 111.0], [221.0, 366.0], [220.0, 372.0], [219.0, 259.1428571428571], [223.0, 629.0], [217.0, 606.0], [216.0, 643.0], [231.0, 627.0], [229.0, 625.0], [228.0, 634.0], [226.0, 624.5], [224.0, 636.0], [239.0, 620.0], [238.0, 636.5], [236.0, 631.0], [234.0, 612.5], [233.0, 630.0], [232.0, 621.0], [246.0, 138.0], [244.0, 382.0], [247.0, 288.5], [245.0, 359.0], [242.0, 624.5], [240.0, 630.0], [251.0, 249.66666666666666], [254.0, 140.5], [250.0, 240.0], [249.0, 122.5], [255.0, 380.5], [253.0, 329.8], [252.0, 146.0], [248.0, 291.0], [258.0, 467.6666666666667], [260.0, 217.83333333333331], [259.0, 240.0], [256.0, 175.99999999999997], [263.0, 632.0], [262.0, 606.0], [261.0, 287.33333333333337], [257.0, 134.25], [269.0, 104.0], [270.0, 620.0], [265.0, 624.0], [268.0, 468.6666666666667], [267.0, 134.0], [266.0, 461.3333333333333], [275.0, 620.5], [286.0, 248.0], [287.0, 108.0], [285.0, 627.5], [283.0, 626.0], [281.0, 623.5], [279.0, 618.0], [277.0, 629.0], [276.0, 633.0], [273.0, 627.0], [272.0, 627.5], [289.0, 286.0], [296.0, 146.5], [300.0, 117.66666666666667], [291.0, 629.0], [290.0, 617.0], [298.0, 183.625], [299.0, 628.0], [293.0, 369.5], [292.0, 622.0], [288.0, 233.8], [295.0, 616.5], [303.0, 367.25], [301.0, 298.8333333333333], [297.0, 460.6666666666667], [307.0, 633.0], [319.0, 643.0], [317.0, 634.0], [315.0, 626.0], [314.0, 631.5], [312.0, 639.0], [311.0, 625.5], [309.0, 622.0], [305.0, 628.0], [304.0, 633.5], [322.0, 620.0], [334.0, 631.0], [332.0, 630.0], [329.0, 617.0], [328.0, 628.5], [326.0, 641.5], [324.0, 632.5], [321.0, 631.0], [320.0, 621.0], [338.0, 136.28571428571428], [345.0, 132.0], [347.0, 137.0], [346.0, 625.0], [344.0, 127.5], [343.0, 498.0], [342.0, 127.0], [341.0, 128.0], [340.0, 621.5], [339.0, 383.5], [349.0, 461.0], [348.0, 617.0], [351.0, 139.5], [350.0, 380.0], [337.0, 491.75], [336.0, 132.0], [354.0, 609.0], [366.0, 607.0], [365.0, 605.0], [363.0, 606.0], [361.0, 615.3333333333334], [359.0, 616.0], [360.0, 622.0], [357.0, 608.0], [356.0, 609.0], [353.0, 623.0], [352.0, 621.0], [380.0, 615.0], [374.0, 494.5], [373.0, 141.0], [371.0, 492.5], [370.0, 620.0], [382.0, 615.3333333333334], [379.0, 607.0], [378.0, 600.0], [377.0, 609.0], [372.0, 604.0], [398.0, 371.4], [396.0, 213.25], [397.0, 221.0], [387.0, 211.0], [386.0, 601.5], [395.0, 209.5], [394.0, 441.0], [393.0, 210.0], [392.0, 223.33333333333334], [399.0, 220.0], [391.0, 407.0], [390.0, 405.5], [389.0, 214.0], [388.0, 401.5], [415.0, 242.4], [413.0, 184.5], [414.0, 579.0], [403.0, 275.0], [402.0, 480.14285714285717], [401.0, 607.0], [407.0, 504.75], [400.0, 219.25], [411.0, 201.0], [410.0, 330.6666666666667], [409.0, 201.0], [408.0, 204.0], [406.0, 211.0], [405.0, 322.0], [404.0, 202.33333333333334], [428.0, 276.6], [419.0, 191.33333333333334], [418.0, 287.0], [417.0, 358.9], [416.0, 283.5], [423.0, 592.0], [422.0, 226.66666666666663], [420.0, 271.0], [421.0, 390.25], [430.0, 202.0], [429.0, 403.57142857142856], [426.0, 268.2], [427.0, 292.8571428571429], [425.0, 223.44444444444446], [424.0, 214.0], [431.0, 408.5], [445.0, 254.91666666666669], [444.0, 253.75], [435.0, 242.2], [433.0, 353.16666666666663], [432.0, 278.3333333333333], [434.0, 289.0], [443.0, 217.0], [442.0, 437.1111111111111], [441.0, 199.0], [440.0, 239.4], [447.0, 505.0], [446.0, 287.0], [438.0, 304.0], [439.0, 267.0], [436.0, 369.0], [437.0, 238.0], [450.0, 345.62500000000006], [453.0, 398.25], [452.0, 250.75], [451.0, 161.0], [462.0, 306.54545454545456], [463.0, 574.0], [460.0, 282.0], [449.0, 166.5], [448.0, 195.0], [455.0, 276.8], [454.0, 233.88888888888889], [456.0, 312.75], [458.0, 300.5], [457.0, 400.0], [467.0, 213.8], [471.0, 350.4], [472.0, 205.66666666666666], [474.0, 217.5], [475.0, 269.3333333333333], [473.0, 396.25], [479.0, 318.1428571428571], [478.0, 213.0], [477.0, 230.4], [476.0, 402.44444444444446], [470.0, 191.4], [469.0, 195.53846153846155], [468.0, 261.0], [466.0, 284.0], [465.0, 376.0], [464.0, 182.5], [493.0, 318.25], [494.0, 248.75], [495.0, 202.75], [492.0, 186.0], [483.0, 397.5], [482.0, 323.3333333333333], [481.0, 234.22222222222223], [480.0, 280.0], [491.0, 425.6666666666667], [490.0, 422.3333333333333], [489.0, 278.0], [488.0, 217.0], [487.0, 382.0], [486.0, 214.0], [485.0, 217.66666666666666], [484.0, 310.0], [499.0, 255.0], [511.0, 170.375], [510.0, 275.0], [509.0, 222.33333333333334], [508.0, 418.4], [506.0, 193.42857142857144], [507.0, 271.8], [503.0, 205.2], [505.0, 323.8333333333333], [504.0, 179.0], [502.0, 177.33333333333331], [501.0, 260.6666666666667], [500.0, 179.4], [497.0, 167.0], [498.0, 362.1111111111111], [496.0, 187.33333333333334], [517.0, 396.6], [525.0, 375.4285714285714], [512.0, 163.125], [514.0, 311.33333333333337], [513.0, 216.66666666666669], [516.0, 292.0], [515.0, 297.33333333333337], [518.0, 168.5], [519.0, 149.0], [543.0, 538.6666666666666], [542.0, 565.0], [540.0, 560.5], [537.0, 564.5], [530.0, 252.2], [531.0, 470.83333333333337], [535.0, 551.0], [532.0, 551.0], [529.0, 426.5], [528.0, 352.8333333333333], [524.0, 153.0], [523.0, 168.0], [522.0, 148.0], [521.0, 159.66666666666666], [520.0, 152.0], [575.0, 545.4], [559.0, 433.37499999999994], [560.0, 310.0], [561.0, 569.0], [558.0, 324.0], [557.0, 310.0], [556.0, 566.0], [555.0, 555.5], [572.0, 558.0], [569.0, 561.0], [551.0, 571.3333333333334], [548.0, 516.0], [546.0, 552.0], [545.0, 551.0], [544.0, 573.0], [567.0, 551.3333333333333], [564.0, 561.0], [607.0, 559.0], [589.0, 328.0], [588.0, 563.0], [586.0, 550.0], [585.0, 528.3333333333334], [590.0, 549.0], [578.0, 556.5], [582.0, 556.25], [580.0, 551.0], [592.0, 503.4], [594.0, 523.5], [605.0, 566.0], [604.0, 560.0], [602.0, 508.0], [600.0, 558.5], [597.0, 548.0], [595.0, 557.0], [635.0, 447.0], [639.0, 345.0], [626.0, 441.5], [628.0, 454.0], [627.0, 563.0], [630.0, 356.0], [631.0, 554.0], [629.0, 454.0], [625.0, 351.2], [624.0, 370.0], [638.0, 392.0], [637.0, 378.0], [636.0, 377.0], [634.0, 400.25], [632.0, 373.0], [611.0, 462.0], [610.0, 562.0], [609.0, 549.5], [623.0, 568.0], [622.0, 572.0], [619.0, 553.0], [618.0, 549.0], [616.0, 562.5], [633.0, 551.0], [667.0, 332.50000000000006], [644.0, 327.875], [649.0, 326.9166666666667], [648.0, 366.57142857142856], [651.0, 357.8666666666667], [650.0, 326.6], [653.0, 367.3529411764706], [652.0, 368.0], [655.0, 343.6470588235294], [654.0, 339.55555555555554], [647.0, 334.2857142857142], [664.0, 343.1111111111111], [666.0, 332.6666666666667], [665.0, 331.125], [669.0, 332.1666666666667], [668.0, 381.3333333333333], [671.0, 328.6], [657.0, 343.5], [656.0, 332.8571428571429], [659.0, 325.625], [658.0, 328.0], [661.0, 386.6363636363636], [660.0, 395.375], [663.0, 356.1538461538462], [662.0, 319.3333333333333], [670.0, 334.0], [646.0, 323.3], [645.0, 397.44444444444446], [643.0, 370.75], [642.0, 400.8571428571429], [641.0, 335.8], [640.0, 372.0], [676.0, 331.2], [682.0, 382.75000000000006], [680.0, 324.1], [681.0, 332.3333333333333], [679.0, 397.4545454545455], [696.0, 361.1666666666667], [697.0, 362.6923076923077], [691.0, 421.8], [690.0, 322.16666666666663], [689.0, 330.7142857142857], [699.0, 322.5], [701.0, 321.25], [700.0, 511.5], [703.0, 313.3333333333333], [702.0, 319.0], [688.0, 354.6666666666667], [698.0, 324.42857142857144], [695.0, 322.99999999999994], [693.0, 313.0], [694.0, 343.14285714285717], [692.0, 368.0714285714286], [678.0, 347.4545454545455], [677.0, 386.2], [675.0, 325.1428571428571], [674.0, 373.7777777777778], [673.0, 323.14285714285717], [672.0, 423.7142857142857], [687.0, 323.875], [686.0, 333.1538461538462], [685.0, 359.27272727272725], [684.0, 337.7777777777778], [683.0, 304.7777777777777], [708.0, 320.5], [715.0, 310.3333333333333], [716.0, 327.5], [718.0, 439.0], [719.0, 470.0], [717.0, 473.8], [705.0, 356.83333333333337], [704.0, 320.0], [714.0, 368.5], [713.0, 369.4], [712.0, 387.00000000000006], [711.0, 370.2], [728.0, 563.6666666666666], [731.0, 564.5], [730.0, 474.0], [735.0, 488.5], [722.0, 559.5], [721.0, 565.0], [725.0, 564.5], [723.0, 565.0], [733.0, 566.0], [710.0, 388.7142857142857], [709.0, 404.3333333333333], [707.0, 317.5], [706.0, 443.0], [762.0, 489.2857142857143], [751.0, 488.75], [738.0, 415.5], [736.0, 483.0], [737.0, 567.3333333333334], [752.0, 432.75], [742.0, 423.0], [741.0, 558.0], [740.0, 521.5], [743.0, 559.0], [761.0, 480.6666666666667], [760.0, 492.5], [764.0, 496.2], [763.0, 494.0], [766.0, 468.3333333333333], [765.0, 476.75], [767.0, 483.375], [757.0, 436.66666666666663], [756.0, 538.6666666666666], [759.0, 533.0], [755.0, 446.0], [754.0, 439.5], [753.0, 478.0], [750.0, 426.25], [749.0, 480.8], [748.0, 472.0], [747.0, 490.66666666666663], [746.0, 513.3333333333334], [745.0, 418.6666666666667], [744.0, 417.0], [795.0, 496.3333333333333], [783.0, 474.0], [776.0, 473.0], [784.0, 492.66666666666663], [798.0, 525.0], [796.0, 516.75], [785.0, 497.87500000000006], [787.0, 479.66666666666663], [786.0, 503.83333333333337], [789.0, 501.28571428571433], [788.0, 496.57142857142856], [791.0, 496.5], [790.0, 481.5], [781.0, 483.5], [780.0, 518.8], [782.0, 502.6428571428572], [779.0, 503.6], [778.0, 461.75], [777.0, 478.1666666666667], [794.0, 493.0], [793.0, 497.5], [792.0, 491.0], [775.0, 487.0], [774.0, 481.6666666666667], [773.0, 487.0], [771.0, 488.5], [772.0, 504.3333333333333], [770.0, 508.0], [768.0, 479.28571428571433], [769.0, 495.0], [807.0, 501.5], [801.0, 507.5], [804.0, 508.75], [806.0, 513.0], [805.0, 532.0], [803.0, 508.75], [802.0, 523.3333333333334], [800.0, 501.6666666666667], [815.0, 505.0], [814.0, 511.0], [813.0, 502.0], [812.0, 513.0], [810.0, 506.6666666666667], [809.0, 530.5], [808.0, 490.0], [829.0, 529.0], [831.0, 526.0], [830.0, 525.5], [818.0, 518.0], [817.0, 535.0], [816.0, 511.0], [820.0, 528.4], [819.0, 527.3333333333334], [823.0, 494.0], [822.0, 512.0], [828.0, 515.7142857142857], [826.0, 517.6666666666666], [825.0, 515.0], [824.0, 516.0], [840.0, 518.0], [839.0, 512.0], [842.0, 527.3333333333334], [837.0, 525.0], [836.0, 526.0], [834.0, 523.25], [1.0, 701.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[432.79466666666667, 326.0376666666666]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 1019.0], [3.0, 174.0], [4.0, 196.0], [5.0, 171.0], [6.0, 172.0], [8.0, 261.0], [9.0, 179.0], [10.0, 170.0], [11.0, 170.0], [12.0, 179.0], [13.0, 189.0], [14.0, 179.0], [15.0, 185.0], [16.0, 185.0], [17.0, 196.0], [18.0, 193.0], [19.0, 180.0], [20.0, 179.0], [21.0, 177.0], [22.0, 184.0], [23.0, 182.0], [24.0, 211.0], [25.0, 168.0], [26.0, 169.0], [27.0, 167.0], [28.0, 177.0], [29.0, 181.0], [30.0, 206.0], [31.0, 215.0], [33.0, 174.0], [32.0, 224.0], [35.0, 223.0], [34.0, 175.0], [37.0, 174.0], [36.0, 167.0], [38.0, 206.0], [41.0, 203.0], [40.0, 198.0], [43.0, 159.0], [42.0, 212.0], [45.0, 166.33333333333334], [44.0, 353.3333333333333], [47.0, 336.0], [46.0, 175.25], [48.0, 177.25], [49.0, 182.0], [51.0, 316.8333333333333], [50.0, 177.0], [53.0, 185.0], [52.0, 177.5], [55.0, 148.0], [54.0, 153.85714285714286], [57.0, 159.8], [56.0, 182.0], [58.0, 329.5], [59.0, 240.0], [61.0, 326.0], [60.0, 175.33333333333334], [63.0, 185.5], [62.0, 173.5], [67.0, 159.0], [66.0, 293.0], [65.0, 593.0], [64.0, 160.75], [71.0, 600.0], [70.0, 581.0], [68.0, 189.0], [75.0, 354.0], [73.0, 362.0], [72.0, 313.0], [77.0, 234.66666666666669], [78.0, 183.5], [76.0, 176.0], [82.0, 421.0], [83.0, 157.0], [81.0, 176.0], [80.0, 150.5], [87.0, 332.0], [86.0, 206.2], [85.0, 413.0], [91.0, 197.66666666666666], [88.0, 248.2], [90.0, 145.0], [89.0, 197.0], [94.0, 337.3333333333333], [93.0, 631.0], [92.0, 182.0], [95.0, 165.0], [99.0, 166.66666666666666], [97.0, 179.0], [98.0, 200.0], [96.0, 177.0], [102.0, 287.0], [100.0, 264.5555555555556], [101.0, 161.0], [103.0, 212.0], [107.0, 231.33333333333334], [106.0, 252.33333333333331], [105.0, 202.66666666666666], [104.0, 202.5], [110.0, 182.5], [108.0, 253.2], [111.0, 165.83333333333334], [109.0, 175.0], [115.0, 198.79999999999998], [112.0, 199.16666666666666], [113.0, 170.79999999999998], [114.0, 159.42857142857142], [118.0, 177.16666666666666], [116.0, 207.77777777777777], [117.0, 160.41666666666666], [119.0, 163.46153846153845], [122.0, 201.47826086956522], [120.0, 175.58823529411765], [123.0, 159.26315789473682], [121.0, 158.85714285714286], [127.0, 164.5], [126.0, 165.04166666666666], [124.0, 185.42105263157896], [125.0, 163.46153846153848], [134.0, 161.43478260869566], [133.0, 214.77272727272725], [131.0, 242.50000000000003], [132.0, 175.37500000000003], [130.0, 191.33333333333337], [129.0, 166.875], [135.0, 146.10526315789477], [128.0, 161.0909090909091], [142.0, 179.99999999999997], [141.0, 205.0], [140.0, 180.15999999999997], [138.0, 166.90476190476193], [137.0, 195.77272727272725], [143.0, 177.99999999999997], [139.0, 168.5217391304348], [136.0, 146.52941176470586], [151.0, 230.61904761904765], [149.0, 177.96551724137936], [148.0, 188.03571428571428], [147.0, 184.45833333333331], [146.0, 188.95238095238096], [144.0, 170.7142857142857], [150.0, 179.53846153846152], [145.0, 161.58823529411762], [158.0, 205.0], [154.0, 188.4], [152.0, 180.35], [157.0, 182.84], [155.0, 171.33333333333331], [153.0, 170.49999999999997], [156.0, 162.7058823529412], [159.0, 187.33333333333334], [165.0, 231.17647058823528], [167.0, 171.88888888888889], [166.0, 188.71428571428572], [164.0, 167.83333333333334], [163.0, 176.52941176470588], [162.0, 170.70000000000002], [161.0, 177.7777777777778], [160.0, 180.7272727272727], [175.0, 193.11111111111111], [174.0, 206.86666666666665], [173.0, 172.6829268292683], [172.0, 196.79999999999998], [171.0, 184.25], [169.0, 216.61904761904762], [168.0, 204.15789473684214], [170.0, 178.25], [182.0, 264.0], [180.0, 180.44444444444446], [177.0, 195.46153846153848], [176.0, 182.35000000000002], [181.0, 186.66666666666669], [179.0, 154.375], [178.0, 173.8235294117647], [183.0, 187.88888888888886], [190.0, 197.625], [189.0, 200.25], [188.0, 169.6], [187.0, 161.53333333333333], [186.0, 193.78947368421052], [184.0, 194.2105263157895], [185.0, 174.10000000000002], [191.0, 167.11764705882354], [199.0, 211.7], [195.0, 172.0588235294118], [194.0, 200.66666666666666], [193.0, 196.71428571428572], [192.0, 172.8181818181818], [197.0, 190.81818181818184], [198.0, 185.9090909090909], [196.0, 170.0], [207.0, 256.3636363636364], [203.0, 181.76923076923077], [201.0, 222.83333333333331], [202.0, 166.54545454545456], [200.0, 166.89999999999998], [206.0, 175.21052631578945], [205.0, 168.125], [204.0, 175.33333333333337], [215.0, 230.38461538461542], [213.0, 203.72727272727272], [208.0, 201.16666666666666], [210.0, 172.53846153846155], [212.0, 165.7], [211.0, 176.79999999999998], [209.0, 171.24999999999997], [214.0, 186.99999999999997], [217.0, 216.66666666666666], [220.0, 188.36842105263156], [219.0, 184.8181818181818], [223.0, 189.4444444444444], [221.0, 186.59999999999997], [222.0, 189.41176470588235], [218.0, 180.33333333333334], [216.0, 188.60000000000002], [229.0, 212.3684210526316], [227.0, 193.88888888888889], [226.0, 208.17647058823533], [231.0, 176.1052631578948], [230.0, 181.61111111111111], [224.0, 180.45161290322582], [228.0, 180.08333333333331], [225.0, 191.53846153846152], [234.0, 297.3157894736842], [238.0, 198.73333333333332], [239.0, 184.8181818181818], [237.0, 195.7857142857143], [236.0, 188.0], [233.0, 177.64285714285714], [232.0, 211.2307692307692], [235.0, 180.88888888888889], [244.0, 215.2222222222222], [241.0, 194.7272727272727], [247.0, 193.75], [245.0, 195.72727272727275], [243.0, 184.7058823529412], [240.0, 192.61904761904765], [242.0, 186.2222222222222], [246.0, 187.3], [248.0, 246.2777777777778], [254.0, 194.33333333333334], [252.0, 196.18181818181816], [249.0, 189.58333333333334], [253.0, 172.25], [251.0, 190.00000000000003], [250.0, 199.0], [255.0, 197.0], [269.0, 192.46153846153845], [262.0, 204.2], [263.0, 193.375], [268.0, 185.33333333333334], [259.0, 222.1], [258.0, 204.75], [256.0, 190.125], [257.0, 197.25], [267.0, 202.1], [266.0, 198.16666666666669], [265.0, 214.63636363636363], [264.0, 227.5], [270.0, 190.125], [271.0, 212.33333333333334], [261.0, 221.16666666666669], [260.0, 205.33333333333334], [275.0, 184.0], [281.0, 184.0], [282.0, 201.0], [280.0, 171.66666666666666], [278.0, 159.0], [277.0, 161.0], [273.0, 188.0], [272.0, 201.66666666666666], [274.0, 200.5], [315.0, 437.0], [304.0, 500.0], [305.0, 363.0], [314.0, 469.0], [334.0, 375.0], [322.0, 330.0], [323.0, 219.54545454545456], [326.0, 306.57142857142856], [325.0, 364.0], [324.0, 204.0], [327.0, 361.66666666666663], [320.0, 444.0], [335.0, 294.3333333333333], [329.0, 340.25], [328.0, 355.3333333333333], [333.0, 360.8], [332.0, 385.25], [331.0, 370.16666666666663], [330.0, 339.25], [348.0, 232.83333333333334], [345.0, 225.5], [347.0, 261.0625], [344.0, 286.54545454545456], [351.0, 493.0], [343.0, 278.5], [337.0, 283.5], [336.0, 335.0], [338.0, 361.0], [339.0, 386.45], [346.0, 342.25000000000006], [350.0, 301.25], [349.0, 294.2], [342.0, 279.44444444444446], [340.0, 312.375], [341.0, 359.0], [353.0, 317.5], [354.0, 393.75], [352.0, 311.3333333333333], [364.0, 344.0], [361.0, 450.75], [362.0, 283.0], [360.0, 365.0], [358.0, 431.0833333333333], [357.0, 394.0], [356.0, 514.0], [359.0, 481.3333333333333], [355.0, 410.5], [1.0, 1019.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[189.28699999999964, 204.18766666666653]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1169.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 28750.0, "minX": 1.6722276E12, "maxY": 77350.0, "series": [{"data": [[1.6722276E12, 28750.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6722276E12, 77350.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6722276E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 204.18766666666653, "minX": 1.6722276E12, "maxY": 533.8436666666668, "series": [{"data": [[1.6722276E12, 533.8436666666668]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6722276E12, 326.0376666666666]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6722276E12, 204.18766666666653]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6722276E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 204.00333333333342, "minX": 1.6722276E12, "maxY": 533.6549999999999, "series": [{"data": [[1.6722276E12, 533.6549999999999]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6722276E12, 325.75466666666676]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6722276E12, 204.00333333333342]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6722276E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 7.866999999999995, "minX": 1.6722276E12, "maxY": 19.10433333333329, "series": [{"data": [[1.6722276E12, 8.409333333333318]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6722276E12, 7.866999999999995]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6722276E12, 19.10433333333329]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6722276E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.6722276E12, "maxY": 701.0, "series": [{"data": [[1.6722276E12, 701.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6722276E12, 614.9000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6722276E12, 664.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6722276E12, 630.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6722276E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6722276E12, 313.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6722276E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 70.0, "minX": 57.0, "maxY": 3063.0, "series": [{"data": [[639.0, 70.0], [1356.0, 287.0], [1009.0, 570.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[565.0, 254.0], [1157.0, 175.0], [1189.0, 838.0], [639.0, 3063.0], [388.0, 186.5], [830.0, 231.0], [889.0, 164.0], [921.0, 291.0], [57.0, 1130.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1356.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 69.0, "minX": 57.0, "maxY": 3063.0, "series": [{"data": [[639.0, 69.0], [1356.0, 286.5], [1009.0, 570.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[565.0, 254.0], [1157.0, 175.0], [1189.0, 838.0], [639.0, 3063.0], [388.0, 186.5], [830.0, 231.0], [889.0, 164.0], [921.0, 291.0], [57.0, 1130.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1356.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.6722276E12, "maxY": 150.0, "series": [{"data": [[1.6722276E12, 150.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6722276E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.6722276E12, "maxY": 100.0, "series": [{"data": [[1.6722276E12, 50.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6722276E12, 100.0]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6722276E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.6722276E12, "maxY": 50.0, "series": [{"data": [[1.6722276E12, 50.0]], "isOverall": false, "label": "Monolithic-based client-failure", "isController": false}, {"data": [[1.6722276E12, 50.0]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.6722276E12, 50.0]], "isOverall": false, "label": "Microservice-based client-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6722276E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.6722276E12, "maxY": 100.0, "series": [{"data": [[1.6722276E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6722276E12, 100.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6722276E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

