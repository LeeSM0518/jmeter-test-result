/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 1418.0, "series": [{"data": [[0.0, 76.0], [0.1, 86.0], [0.2, 88.0], [0.3, 95.0], [0.4, 97.0], [0.5, 98.0], [0.6, 98.0], [0.7, 99.0], [0.8, 99.0], [0.9, 100.0], [1.0, 100.0], [1.1, 100.0], [1.2, 101.0], [1.3, 101.0], [1.4, 101.0], [1.5, 101.0], [1.6, 102.0], [1.7, 102.0], [1.8, 102.0], [1.9, 102.0], [2.0, 102.0], [2.1, 102.0], [2.2, 103.0], [2.3, 103.0], [2.4, 103.0], [2.5, 103.0], [2.6, 103.0], [2.7, 103.0], [2.8, 104.0], [2.9, 104.0], [3.0, 104.0], [3.1, 104.0], [3.2, 104.0], [3.3, 104.0], [3.4, 104.0], [3.5, 105.0], [3.6, 105.0], [3.7, 105.0], [3.8, 105.0], [3.9, 105.0], [4.0, 105.0], [4.1, 105.0], [4.2, 105.0], [4.3, 105.0], [4.4, 106.0], [4.5, 106.0], [4.6, 106.0], [4.7, 106.0], [4.8, 106.0], [4.9, 106.0], [5.0, 106.0], [5.1, 106.0], [5.2, 106.0], [5.3, 106.0], [5.4, 106.0], [5.5, 107.0], [5.6, 107.0], [5.7, 107.0], [5.8, 107.0], [5.9, 107.0], [6.0, 107.0], [6.1, 107.0], [6.2, 107.0], [6.3, 107.0], [6.4, 107.0], [6.5, 108.0], [6.6, 108.0], [6.7, 108.0], [6.8, 108.0], [6.9, 108.0], [7.0, 108.0], [7.1, 108.0], [7.2, 108.0], [7.3, 108.0], [7.4, 108.0], [7.5, 109.0], [7.6, 109.0], [7.7, 109.0], [7.8, 109.0], [7.9, 109.0], [8.0, 109.0], [8.1, 109.0], [8.2, 109.0], [8.3, 109.0], [8.4, 109.0], [8.5, 109.0], [8.6, 110.0], [8.7, 110.0], [8.8, 110.0], [8.9, 110.0], [9.0, 110.0], [9.1, 110.0], [9.2, 110.0], [9.3, 110.0], [9.4, 110.0], [9.5, 110.0], [9.6, 110.0], [9.7, 110.0], [9.8, 111.0], [9.9, 111.0], [10.0, 111.0], [10.1, 111.0], [10.2, 111.0], [10.3, 111.0], [10.4, 111.0], [10.5, 111.0], [10.6, 111.0], [10.7, 111.0], [10.8, 111.0], [10.9, 111.0], [11.0, 111.0], [11.1, 111.0], [11.2, 112.0], [11.3, 112.0], [11.4, 112.0], [11.5, 112.0], [11.6, 112.0], [11.7, 112.0], [11.8, 112.0], [11.9, 112.0], [12.0, 112.0], [12.1, 112.0], [12.2, 112.0], [12.3, 112.0], [12.4, 112.0], [12.5, 112.0], [12.6, 112.0], [12.7, 113.0], [12.8, 113.0], [12.9, 113.0], [13.0, 113.0], [13.1, 113.0], [13.2, 113.0], [13.3, 113.0], [13.4, 113.0], [13.5, 113.0], [13.6, 113.0], [13.7, 113.0], [13.8, 114.0], [13.9, 114.0], [14.0, 114.0], [14.1, 114.0], [14.2, 114.0], [14.3, 114.0], [14.4, 114.0], [14.5, 114.0], [14.6, 114.0], [14.7, 114.0], [14.8, 114.0], [14.9, 115.0], [15.0, 115.0], [15.1, 115.0], [15.2, 115.0], [15.3, 115.0], [15.4, 115.0], [15.5, 115.0], [15.6, 115.0], [15.7, 115.0], [15.8, 115.0], [15.9, 115.0], [16.0, 115.0], [16.1, 116.0], [16.2, 116.0], [16.3, 116.0], [16.4, 116.0], [16.5, 116.0], [16.6, 116.0], [16.7, 116.0], [16.8, 116.0], [16.9, 116.0], [17.0, 116.0], [17.1, 116.0], [17.2, 116.0], [17.3, 116.0], [17.4, 116.0], [17.5, 117.0], [17.6, 117.0], [17.7, 117.0], [17.8, 117.0], [17.9, 117.0], [18.0, 117.0], [18.1, 117.0], [18.2, 117.0], [18.3, 117.0], [18.4, 117.0], [18.5, 117.0], [18.6, 117.0], [18.7, 117.0], [18.8, 117.0], [18.9, 118.0], [19.0, 118.0], [19.1, 118.0], [19.2, 118.0], [19.3, 118.0], [19.4, 118.0], [19.5, 118.0], [19.6, 118.0], [19.7, 118.0], [19.8, 118.0], [19.9, 118.0], [20.0, 119.0], [20.1, 119.0], [20.2, 119.0], [20.3, 119.0], [20.4, 119.0], [20.5, 119.0], [20.6, 119.0], [20.7, 119.0], [20.8, 119.0], [20.9, 119.0], [21.0, 119.0], [21.1, 119.0], [21.2, 120.0], [21.3, 120.0], [21.4, 120.0], [21.5, 120.0], [21.6, 120.0], [21.7, 120.0], [21.8, 120.0], [21.9, 120.0], [22.0, 120.0], [22.1, 120.0], [22.2, 120.0], [22.3, 121.0], [22.4, 121.0], [22.5, 121.0], [22.6, 121.0], [22.7, 121.0], [22.8, 121.0], [22.9, 121.0], [23.0, 121.0], [23.1, 121.0], [23.2, 121.0], [23.3, 122.0], [23.4, 122.0], [23.5, 122.0], [23.6, 122.0], [23.7, 122.0], [23.8, 122.0], [23.9, 122.0], [24.0, 123.0], [24.1, 123.0], [24.2, 123.0], [24.3, 123.0], [24.4, 123.0], [24.5, 123.0], [24.6, 123.0], [24.7, 123.0], [24.8, 123.0], [24.9, 123.0], [25.0, 123.0], [25.1, 123.0], [25.2, 124.0], [25.3, 124.0], [25.4, 124.0], [25.5, 124.0], [25.6, 124.0], [25.7, 124.0], [25.8, 124.0], [25.9, 124.0], [26.0, 124.0], [26.1, 124.0], [26.2, 124.0], [26.3, 125.0], [26.4, 125.0], [26.5, 125.0], [26.6, 125.0], [26.7, 125.0], [26.8, 125.0], [26.9, 125.0], [27.0, 125.0], [27.1, 125.0], [27.2, 125.0], [27.3, 126.0], [27.4, 126.0], [27.5, 126.0], [27.6, 126.0], [27.7, 126.0], [27.8, 126.0], [27.9, 126.0], [28.0, 126.0], [28.1, 126.0], [28.2, 126.0], [28.3, 126.0], [28.4, 126.0], [28.5, 127.0], [28.6, 127.0], [28.7, 127.0], [28.8, 127.0], [28.9, 127.0], [29.0, 127.0], [29.1, 127.0], [29.2, 127.0], [29.3, 127.0], [29.4, 127.0], [29.5, 127.0], [29.6, 127.0], [29.7, 127.0], [29.8, 127.0], [29.9, 128.0], [30.0, 128.0], [30.1, 128.0], [30.2, 128.0], [30.3, 128.0], [30.4, 128.0], [30.5, 128.0], [30.6, 128.0], [30.7, 128.0], [30.8, 128.0], [30.9, 128.0], [31.0, 128.0], [31.1, 128.0], [31.2, 129.0], [31.3, 129.0], [31.4, 129.0], [31.5, 129.0], [31.6, 129.0], [31.7, 129.0], [31.8, 129.0], [31.9, 129.0], [32.0, 129.0], [32.1, 130.0], [32.2, 130.0], [32.3, 130.0], [32.4, 130.0], [32.5, 130.0], [32.6, 130.0], [32.7, 130.0], [32.8, 130.0], [32.9, 130.0], [33.0, 130.0], [33.1, 131.0], [33.2, 131.0], [33.3, 131.0], [33.4, 131.0], [33.5, 131.0], [33.6, 131.0], [33.7, 131.0], [33.8, 131.0], [33.9, 131.0], [34.0, 131.0], [34.1, 131.0], [34.2, 132.0], [34.3, 132.0], [34.4, 132.0], [34.5, 132.0], [34.6, 132.0], [34.7, 132.0], [34.8, 132.0], [34.9, 133.0], [35.0, 133.0], [35.1, 133.0], [35.2, 133.0], [35.3, 133.0], [35.4, 133.0], [35.5, 133.0], [35.6, 133.0], [35.7, 133.0], [35.8, 133.0], [35.9, 134.0], [36.0, 134.0], [36.1, 134.0], [36.2, 134.0], [36.3, 134.0], [36.4, 134.0], [36.5, 134.0], [36.6, 134.0], [36.7, 134.0], [36.8, 134.0], [36.9, 134.0], [37.0, 134.0], [37.1, 135.0], [37.2, 135.0], [37.3, 135.0], [37.4, 135.0], [37.5, 135.0], [37.6, 135.0], [37.7, 135.0], [37.8, 135.0], [37.9, 135.0], [38.0, 135.0], [38.1, 135.0], [38.2, 136.0], [38.3, 136.0], [38.4, 136.0], [38.5, 136.0], [38.6, 136.0], [38.7, 136.0], [38.8, 136.0], [38.9, 136.0], [39.0, 136.0], [39.1, 136.0], [39.2, 136.0], [39.3, 137.0], [39.4, 137.0], [39.5, 137.0], [39.6, 137.0], [39.7, 137.0], [39.8, 137.0], [39.9, 137.0], [40.0, 137.0], [40.1, 138.0], [40.2, 138.0], [40.3, 138.0], [40.4, 138.0], [40.5, 138.0], [40.6, 138.0], [40.7, 138.0], [40.8, 138.0], [40.9, 138.0], [41.0, 139.0], [41.1, 139.0], [41.2, 139.0], [41.3, 139.0], [41.4, 139.0], [41.5, 139.0], [41.6, 139.0], [41.7, 139.0], [41.8, 139.0], [41.9, 140.0], [42.0, 140.0], [42.1, 140.0], [42.2, 140.0], [42.3, 140.0], [42.4, 140.0], [42.5, 140.0], [42.6, 140.0], [42.7, 140.0], [42.8, 140.0], [42.9, 141.0], [43.0, 141.0], [43.1, 141.0], [43.2, 141.0], [43.3, 141.0], [43.4, 141.0], [43.5, 141.0], [43.6, 141.0], [43.7, 142.0], [43.8, 142.0], [43.9, 142.0], [44.0, 142.0], [44.1, 142.0], [44.2, 142.0], [44.3, 142.0], [44.4, 142.0], [44.5, 143.0], [44.6, 143.0], [44.7, 143.0], [44.8, 143.0], [44.9, 143.0], [45.0, 143.0], [45.1, 143.0], [45.2, 143.0], [45.3, 143.0], [45.4, 144.0], [45.5, 144.0], [45.6, 144.0], [45.7, 144.0], [45.8, 144.0], [45.9, 144.0], [46.0, 144.0], [46.1, 145.0], [46.2, 145.0], [46.3, 145.0], [46.4, 145.0], [46.5, 145.0], [46.6, 145.0], [46.7, 145.0], [46.8, 145.0], [46.9, 145.0], [47.0, 146.0], [47.1, 146.0], [47.2, 146.0], [47.3, 146.0], [47.4, 146.0], [47.5, 146.0], [47.6, 146.0], [47.7, 147.0], [47.8, 147.0], [47.9, 147.0], [48.0, 147.0], [48.1, 147.0], [48.2, 147.0], [48.3, 147.0], [48.4, 148.0], [48.5, 148.0], [48.6, 148.0], [48.7, 148.0], [48.8, 148.0], [48.9, 148.0], [49.0, 149.0], [49.1, 149.0], [49.2, 149.0], [49.3, 149.0], [49.4, 149.0], [49.5, 150.0], [49.6, 150.0], [49.7, 150.0], [49.8, 150.0], [49.9, 150.0], [50.0, 150.0], [50.1, 150.0], [50.2, 151.0], [50.3, 151.0], [50.4, 151.0], [50.5, 151.0], [50.6, 151.0], [50.7, 151.0], [50.8, 151.0], [50.9, 152.0], [51.0, 152.0], [51.1, 152.0], [51.2, 152.0], [51.3, 152.0], [51.4, 152.0], [51.5, 152.0], [51.6, 152.0], [51.7, 153.0], [51.8, 153.0], [51.9, 153.0], [52.0, 153.0], [52.1, 153.0], [52.2, 153.0], [52.3, 153.0], [52.4, 153.0], [52.5, 153.0], [52.6, 154.0], [52.7, 154.0], [52.8, 154.0], [52.9, 154.0], [53.0, 154.0], [53.1, 155.0], [53.2, 155.0], [53.3, 155.0], [53.4, 155.0], [53.5, 155.0], [53.6, 155.0], [53.7, 156.0], [53.8, 156.0], [53.9, 156.0], [54.0, 156.0], [54.1, 157.0], [54.2, 157.0], [54.3, 157.0], [54.4, 157.0], [54.5, 157.0], [54.6, 157.0], [54.7, 157.0], [54.8, 158.0], [54.9, 158.0], [55.0, 158.0], [55.1, 158.0], [55.2, 158.0], [55.3, 158.0], [55.4, 159.0], [55.5, 159.0], [55.6, 159.0], [55.7, 160.0], [55.8, 160.0], [55.9, 160.0], [56.0, 160.0], [56.1, 160.0], [56.2, 160.0], [56.3, 161.0], [56.4, 161.0], [56.5, 161.0], [56.6, 162.0], [56.7, 162.0], [56.8, 162.0], [56.9, 162.0], [57.0, 162.0], [57.1, 162.0], [57.2, 162.0], [57.3, 163.0], [57.4, 163.0], [57.5, 163.0], [57.6, 163.0], [57.7, 164.0], [57.8, 164.0], [57.9, 164.0], [58.0, 164.0], [58.1, 164.0], [58.2, 165.0], [58.3, 165.0], [58.4, 165.0], [58.5, 165.0], [58.6, 166.0], [58.7, 166.0], [58.8, 166.0], [58.9, 167.0], [59.0, 167.0], [59.1, 167.0], [59.2, 168.0], [59.3, 168.0], [59.4, 168.0], [59.5, 168.0], [59.6, 169.0], [59.7, 169.0], [59.8, 169.0], [59.9, 169.0], [60.0, 169.0], [60.1, 169.0], [60.2, 170.0], [60.3, 170.0], [60.4, 170.0], [60.5, 171.0], [60.6, 171.0], [60.7, 171.0], [60.8, 172.0], [60.9, 172.0], [61.0, 172.0], [61.1, 172.0], [61.2, 172.0], [61.3, 172.0], [61.4, 173.0], [61.5, 173.0], [61.6, 173.0], [61.7, 174.0], [61.8, 174.0], [61.9, 174.0], [62.0, 174.0], [62.1, 175.0], [62.2, 175.0], [62.3, 175.0], [62.4, 175.0], [62.5, 176.0], [62.6, 176.0], [62.7, 176.0], [62.8, 176.0], [62.9, 177.0], [63.0, 177.0], [63.1, 177.0], [63.2, 177.0], [63.3, 178.0], [63.4, 178.0], [63.5, 178.0], [63.6, 178.0], [63.7, 179.0], [63.8, 179.0], [63.9, 179.0], [64.0, 179.0], [64.1, 179.0], [64.2, 180.0], [64.3, 180.0], [64.4, 180.0], [64.5, 180.0], [64.6, 181.0], [64.7, 181.0], [64.8, 181.0], [64.9, 182.0], [65.0, 182.0], [65.1, 182.0], [65.2, 182.0], [65.3, 183.0], [65.4, 183.0], [65.5, 183.0], [65.6, 184.0], [65.7, 184.0], [65.8, 184.0], [65.9, 185.0], [66.0, 185.0], [66.1, 185.0], [66.2, 185.0], [66.3, 186.0], [66.4, 186.0], [66.5, 186.0], [66.6, 186.0], [66.7, 187.0], [66.8, 187.0], [66.9, 187.0], [67.0, 188.0], [67.1, 188.0], [67.2, 188.0], [67.3, 188.0], [67.4, 188.0], [67.5, 189.0], [67.6, 189.0], [67.7, 189.0], [67.8, 190.0], [67.9, 190.0], [68.0, 190.0], [68.1, 190.0], [68.2, 191.0], [68.3, 191.0], [68.4, 192.0], [68.5, 192.0], [68.6, 192.0], [68.7, 192.0], [68.8, 193.0], [68.9, 193.0], [69.0, 193.0], [69.1, 193.0], [69.2, 194.0], [69.3, 194.0], [69.4, 195.0], [69.5, 195.0], [69.6, 196.0], [69.7, 196.0], [69.8, 196.0], [69.9, 196.0], [70.0, 197.0], [70.1, 197.0], [70.2, 198.0], [70.3, 198.0], [70.4, 198.0], [70.5, 199.0], [70.6, 199.0], [70.7, 199.0], [70.8, 200.0], [70.9, 201.0], [71.0, 201.0], [71.1, 201.0], [71.2, 202.0], [71.3, 203.0], [71.4, 203.0], [71.5, 204.0], [71.6, 204.0], [71.7, 204.0], [71.8, 205.0], [71.9, 205.0], [72.0, 205.0], [72.1, 206.0], [72.2, 206.0], [72.3, 207.0], [72.4, 208.0], [72.5, 208.0], [72.6, 208.0], [72.7, 210.0], [72.8, 210.0], [72.9, 211.0], [73.0, 212.0], [73.1, 212.0], [73.2, 213.0], [73.3, 214.0], [73.4, 214.0], [73.5, 215.0], [73.6, 215.0], [73.7, 216.0], [73.8, 218.0], [73.9, 219.0], [74.0, 219.0], [74.1, 220.0], [74.2, 221.0], [74.3, 222.0], [74.4, 223.0], [74.5, 224.0], [74.6, 224.0], [74.7, 226.0], [74.8, 226.0], [74.9, 227.0], [75.0, 228.0], [75.1, 229.0], [75.2, 229.0], [75.3, 231.0], [75.4, 231.0], [75.5, 232.0], [75.6, 234.0], [75.7, 236.0], [75.8, 239.0], [75.9, 240.0], [76.0, 242.0], [76.1, 245.0], [76.2, 249.0], [76.3, 260.0], [76.4, 271.0], [76.5, 303.0], [76.6, 309.0], [76.7, 311.0], [76.8, 313.0], [76.9, 317.0], [77.0, 318.0], [77.1, 320.0], [77.2, 322.0], [77.3, 323.0], [77.4, 324.0], [77.5, 326.0], [77.6, 326.0], [77.7, 328.0], [77.8, 329.0], [77.9, 329.0], [78.0, 330.0], [78.1, 330.0], [78.2, 330.0], [78.3, 331.0], [78.4, 332.0], [78.5, 332.0], [78.6, 334.0], [78.7, 335.0], [78.8, 336.0], [78.9, 337.0], [79.0, 338.0], [79.1, 339.0], [79.2, 340.0], [79.3, 340.0], [79.4, 341.0], [79.5, 341.0], [79.6, 342.0], [79.7, 343.0], [79.8, 343.0], [79.9, 344.0], [80.0, 345.0], [80.1, 346.0], [80.2, 346.0], [80.3, 347.0], [80.4, 348.0], [80.5, 349.0], [80.6, 349.0], [80.7, 350.0], [80.8, 351.0], [80.9, 351.0], [81.0, 352.0], [81.1, 352.0], [81.2, 353.0], [81.3, 353.0], [81.4, 354.0], [81.5, 355.0], [81.6, 356.0], [81.7, 356.0], [81.8, 357.0], [81.9, 357.0], [82.0, 358.0], [82.1, 359.0], [82.2, 360.0], [82.3, 361.0], [82.4, 361.0], [82.5, 362.0], [82.6, 363.0], [82.7, 363.0], [82.8, 364.0], [82.9, 364.0], [83.0, 365.0], [83.1, 365.0], [83.2, 366.0], [83.3, 367.0], [83.4, 367.0], [83.5, 368.0], [83.6, 369.0], [83.7, 369.0], [83.8, 370.0], [83.9, 370.0], [84.0, 372.0], [84.1, 372.0], [84.2, 372.0], [84.3, 373.0], [84.4, 373.0], [84.5, 374.0], [84.6, 374.0], [84.7, 375.0], [84.8, 375.0], [84.9, 376.0], [85.0, 377.0], [85.1, 377.0], [85.2, 378.0], [85.3, 378.0], [85.4, 379.0], [85.5, 379.0], [85.6, 380.0], [85.7, 381.0], [85.8, 381.0], [85.9, 382.0], [86.0, 383.0], [86.1, 384.0], [86.2, 385.0], [86.3, 385.0], [86.4, 386.0], [86.5, 387.0], [86.6, 387.0], [86.7, 388.0], [86.8, 388.0], [86.9, 389.0], [87.0, 390.0], [87.1, 391.0], [87.2, 392.0], [87.3, 393.0], [87.4, 393.0], [87.5, 394.0], [87.6, 394.0], [87.7, 395.0], [87.8, 395.0], [87.9, 396.0], [88.0, 396.0], [88.1, 397.0], [88.2, 398.0], [88.3, 398.0], [88.4, 398.0], [88.5, 399.0], [88.6, 400.0], [88.7, 400.0], [88.8, 401.0], [88.9, 402.0], [89.0, 402.0], [89.1, 402.0], [89.2, 402.0], [89.3, 403.0], [89.4, 404.0], [89.5, 405.0], [89.6, 405.0], [89.7, 405.0], [89.8, 406.0], [89.9, 406.0], [90.0, 406.0], [90.1, 407.0], [90.2, 407.0], [90.3, 408.0], [90.4, 408.0], [90.5, 408.0], [90.6, 409.0], [90.7, 409.0], [90.8, 410.0], [90.9, 410.0], [91.0, 411.0], [91.1, 411.0], [91.2, 412.0], [91.3, 412.0], [91.4, 413.0], [91.5, 414.0], [91.6, 414.0], [91.7, 414.0], [91.8, 414.0], [91.9, 415.0], [92.0, 415.0], [92.1, 416.0], [92.2, 416.0], [92.3, 416.0], [92.4, 417.0], [92.5, 417.0], [92.6, 417.0], [92.7, 418.0], [92.8, 418.0], [92.9, 418.0], [93.0, 418.0], [93.1, 419.0], [93.2, 420.0], [93.3, 420.0], [93.4, 420.0], [93.5, 421.0], [93.6, 422.0], [93.7, 422.0], [93.8, 423.0], [93.9, 423.0], [94.0, 424.0], [94.1, 424.0], [94.2, 425.0], [94.3, 425.0], [94.4, 426.0], [94.5, 426.0], [94.6, 426.0], [94.7, 427.0], [94.8, 428.0], [94.9, 428.0], [95.0, 429.0], [95.1, 430.0], [95.2, 430.0], [95.3, 430.0], [95.4, 431.0], [95.5, 431.0], [95.6, 431.0], [95.7, 432.0], [95.8, 433.0], [95.9, 434.0], [96.0, 434.0], [96.1, 435.0], [96.2, 435.0], [96.3, 436.0], [96.4, 436.0], [96.5, 437.0], [96.6, 438.0], [96.7, 438.0], [96.8, 439.0], [96.9, 441.0], [97.0, 441.0], [97.1, 442.0], [97.2, 442.0], [97.3, 444.0], [97.4, 445.0], [97.5, 447.0], [97.6, 449.0], [97.7, 451.0], [97.8, 453.0], [97.9, 458.0], [98.0, 461.0], [98.1, 466.0], [98.2, 472.0], [98.3, 480.0], [98.4, 531.0], [98.5, 557.0], [98.6, 566.0], [98.7, 588.0], [98.8, 596.0], [98.9, 610.0], [99.0, 614.0], [99.1, 617.0], [99.2, 624.0], [99.3, 630.0], [99.4, 635.0], [99.5, 642.0], [99.6, 648.0], [99.7, 655.0], [99.8, 670.0], [99.9, 1144.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 5.0], [0.1, 14.0], [0.2, 15.0], [0.3, 19.0], [0.4, 24.0], [0.5, 24.0], [0.6, 28.0], [0.7, 31.0], [0.8, 34.0], [0.9, 36.0], [1.0, 39.0], [1.1, 40.0], [1.2, 42.0], [1.3, 43.0], [1.4, 44.0], [1.5, 46.0], [1.6, 46.0], [1.7, 47.0], [1.8, 50.0], [1.9, 51.0], [2.0, 51.0], [2.1, 52.0], [2.2, 52.0], [2.3, 53.0], [2.4, 54.0], [2.5, 54.0], [2.6, 54.0], [2.7, 55.0], [2.8, 56.0], [2.9, 57.0], [3.0, 58.0], [3.1, 59.0], [3.2, 60.0], [3.3, 60.0], [3.4, 61.0], [3.5, 62.0], [3.6, 63.0], [3.7, 65.0], [3.8, 65.0], [3.9, 66.0], [4.0, 67.0], [4.1, 68.0], [4.2, 70.0], [4.3, 72.0], [4.4, 75.0], [4.5, 78.0], [4.6, 80.0], [4.7, 82.0], [4.8, 83.0], [4.9, 84.0], [5.0, 86.0], [5.1, 87.0], [5.2, 87.0], [5.3, 88.0], [5.4, 92.0], [5.5, 93.0], [5.6, 94.0], [5.7, 96.0], [5.8, 96.0], [5.9, 97.0], [6.0, 99.0], [6.1, 101.0], [6.2, 102.0], [6.3, 103.0], [6.4, 104.0], [6.5, 105.0], [6.6, 106.0], [6.7, 106.0], [6.8, 108.0], [6.9, 108.0], [7.0, 109.0], [7.1, 110.0], [7.2, 112.0], [7.3, 115.0], [7.4, 116.0], [7.5, 119.0], [7.6, 120.0], [7.7, 122.0], [7.8, 125.0], [7.9, 127.0], [8.0, 131.0], [8.1, 132.0], [8.2, 133.0], [8.3, 134.0], [8.4, 135.0], [8.5, 136.0], [8.6, 137.0], [8.7, 139.0], [8.8, 142.0], [8.9, 142.0], [9.0, 143.0], [9.1, 145.0], [9.2, 147.0], [9.3, 149.0], [9.4, 151.0], [9.5, 156.0], [9.6, 158.0], [9.7, 159.0], [9.8, 162.0], [9.9, 165.0], [10.0, 171.0], [10.1, 173.0], [10.2, 178.0], [10.3, 180.0], [10.4, 185.0], [10.5, 189.0], [10.6, 193.0], [10.7, 195.0], [10.8, 196.0], [10.9, 199.0], [11.0, 202.0], [11.1, 205.0], [11.2, 207.0], [11.3, 211.0], [11.4, 214.0], [11.5, 216.0], [11.6, 219.0], [11.7, 221.0], [11.8, 223.0], [11.9, 224.0], [12.0, 226.0], [12.1, 227.0], [12.2, 228.0], [12.3, 230.0], [12.4, 234.0], [12.5, 236.0], [12.6, 237.0], [12.7, 238.0], [12.8, 240.0], [12.9, 242.0], [13.0, 243.0], [13.1, 245.0], [13.2, 246.0], [13.3, 247.0], [13.4, 248.0], [13.5, 249.0], [13.6, 250.0], [13.7, 252.0], [13.8, 254.0], [13.9, 255.0], [14.0, 255.0], [14.1, 256.0], [14.2, 257.0], [14.3, 259.0], [14.4, 261.0], [14.5, 262.0], [14.6, 265.0], [14.7, 266.0], [14.8, 268.0], [14.9, 269.0], [15.0, 269.0], [15.1, 270.0], [15.2, 271.0], [15.3, 273.0], [15.4, 274.0], [15.5, 275.0], [15.6, 276.0], [15.7, 276.0], [15.8, 276.0], [15.9, 277.0], [16.0, 278.0], [16.1, 279.0], [16.2, 280.0], [16.3, 281.0], [16.4, 282.0], [16.5, 284.0], [16.6, 284.0], [16.7, 285.0], [16.8, 285.0], [16.9, 286.0], [17.0, 287.0], [17.1, 288.0], [17.2, 289.0], [17.3, 289.0], [17.4, 290.0], [17.5, 291.0], [17.6, 292.0], [17.7, 293.0], [17.8, 294.0], [17.9, 295.0], [18.0, 295.0], [18.1, 297.0], [18.2, 298.0], [18.3, 299.0], [18.4, 301.0], [18.5, 302.0], [18.6, 303.0], [18.7, 304.0], [18.8, 307.0], [18.9, 308.0], [19.0, 309.0], [19.1, 312.0], [19.2, 313.0], [19.3, 315.0], [19.4, 316.0], [19.5, 319.0], [19.6, 319.0], [19.7, 320.0], [19.8, 321.0], [19.9, 324.0], [20.0, 324.0], [20.1, 326.0], [20.2, 327.0], [20.3, 327.0], [20.4, 328.0], [20.5, 329.0], [20.6, 330.0], [20.7, 331.0], [20.8, 332.0], [20.9, 333.0], [21.0, 334.0], [21.1, 335.0], [21.2, 337.0], [21.3, 338.0], [21.4, 339.0], [21.5, 339.0], [21.6, 340.0], [21.7, 342.0], [21.8, 342.0], [21.9, 345.0], [22.0, 347.0], [22.1, 347.0], [22.2, 351.0], [22.3, 355.0], [22.4, 362.0], [22.5, 365.0], [22.6, 367.0], [22.7, 369.0], [22.8, 373.0], [22.9, 374.0], [23.0, 376.0], [23.1, 377.0], [23.2, 379.0], [23.3, 382.0], [23.4, 382.0], [23.5, 383.0], [23.6, 386.0], [23.7, 387.0], [23.8, 388.0], [23.9, 389.0], [24.0, 389.0], [24.1, 390.0], [24.2, 391.0], [24.3, 392.0], [24.4, 393.0], [24.5, 394.0], [24.6, 394.0], [24.7, 395.0], [24.8, 396.0], [24.9, 399.0], [25.0, 400.0], [25.1, 402.0], [25.2, 403.0], [25.3, 404.0], [25.4, 405.0], [25.5, 406.0], [25.6, 408.0], [25.7, 409.0], [25.8, 410.0], [25.9, 411.0], [26.0, 414.0], [26.1, 416.0], [26.2, 417.0], [26.3, 420.0], [26.4, 422.0], [26.5, 424.0], [26.6, 426.0], [26.7, 430.0], [26.8, 432.0], [26.9, 435.0], [27.0, 437.0], [27.1, 439.0], [27.2, 440.0], [27.3, 442.0], [27.4, 444.0], [27.5, 446.0], [27.6, 447.0], [27.7, 447.0], [27.8, 448.0], [27.9, 450.0], [28.0, 454.0], [28.1, 455.0], [28.2, 456.0], [28.3, 460.0], [28.4, 462.0], [28.5, 463.0], [28.6, 466.0], [28.7, 469.0], [28.8, 472.0], [28.9, 473.0], [29.0, 479.0], [29.1, 480.0], [29.2, 484.0], [29.3, 489.0], [29.4, 490.0], [29.5, 495.0], [29.6, 497.0], [29.7, 502.0], [29.8, 505.0], [29.9, 509.0], [30.0, 510.0], [30.1, 511.0], [30.2, 513.0], [30.3, 517.0], [30.4, 520.0], [30.5, 520.0], [30.6, 524.0], [30.7, 526.0], [30.8, 528.0], [30.9, 529.0], [31.0, 533.0], [31.1, 535.0], [31.2, 536.0], [31.3, 538.0], [31.4, 539.0], [31.5, 540.0], [31.6, 542.0], [31.7, 544.0], [31.8, 544.0], [31.9, 547.0], [32.0, 550.0], [32.1, 550.0], [32.2, 552.0], [32.3, 554.0], [32.4, 556.0], [32.5, 558.0], [32.6, 560.0], [32.7, 561.0], [32.8, 562.0], [32.9, 563.0], [33.0, 564.0], [33.1, 565.0], [33.2, 566.0], [33.3, 567.0], [33.4, 568.0], [33.5, 570.0], [33.6, 571.0], [33.7, 572.0], [33.8, 573.0], [33.9, 574.0], [34.0, 575.0], [34.1, 575.0], [34.2, 576.0], [34.3, 577.0], [34.4, 578.0], [34.5, 578.0], [34.6, 578.0], [34.7, 579.0], [34.8, 580.0], [34.9, 581.0], [35.0, 581.0], [35.1, 583.0], [35.2, 584.0], [35.3, 585.0], [35.4, 587.0], [35.5, 587.0], [35.6, 588.0], [35.7, 588.0], [35.8, 589.0], [35.9, 590.0], [36.0, 591.0], [36.1, 592.0], [36.2, 593.0], [36.3, 594.0], [36.4, 595.0], [36.5, 595.0], [36.6, 596.0], [36.7, 596.0], [36.8, 597.0], [36.9, 598.0], [37.0, 599.0], [37.1, 599.0], [37.2, 600.0], [37.3, 601.0], [37.4, 601.0], [37.5, 603.0], [37.6, 603.0], [37.7, 604.0], [37.8, 605.0], [37.9, 605.0], [38.0, 606.0], [38.1, 608.0], [38.2, 609.0], [38.3, 610.0], [38.4, 611.0], [38.5, 612.0], [38.6, 613.0], [38.7, 614.0], [38.8, 615.0], [38.9, 616.0], [39.0, 617.0], [39.1, 618.0], [39.2, 620.0], [39.3, 621.0], [39.4, 622.0], [39.5, 623.0], [39.6, 623.0], [39.7, 625.0], [39.8, 625.0], [39.9, 628.0], [40.0, 629.0], [40.1, 630.0], [40.2, 630.0], [40.3, 631.0], [40.4, 632.0], [40.5, 632.0], [40.6, 633.0], [40.7, 634.0], [40.8, 634.0], [40.9, 635.0], [41.0, 636.0], [41.1, 636.0], [41.2, 637.0], [41.3, 637.0], [41.4, 638.0], [41.5, 638.0], [41.6, 639.0], [41.7, 640.0], [41.8, 641.0], [41.9, 641.0], [42.0, 641.0], [42.1, 642.0], [42.2, 643.0], [42.3, 644.0], [42.4, 644.0], [42.5, 644.0], [42.6, 645.0], [42.7, 645.0], [42.8, 646.0], [42.9, 646.0], [43.0, 647.0], [43.1, 649.0], [43.2, 650.0], [43.3, 650.0], [43.4, 650.0], [43.5, 651.0], [43.6, 651.0], [43.7, 652.0], [43.8, 653.0], [43.9, 654.0], [44.0, 655.0], [44.1, 656.0], [44.2, 657.0], [44.3, 658.0], [44.4, 659.0], [44.5, 660.0], [44.6, 661.0], [44.7, 663.0], [44.8, 664.0], [44.9, 664.0], [45.0, 665.0], [45.1, 666.0], [45.2, 667.0], [45.3, 668.0], [45.4, 669.0], [45.5, 670.0], [45.6, 670.0], [45.7, 671.0], [45.8, 672.0], [45.9, 672.0], [46.0, 672.0], [46.1, 673.0], [46.2, 674.0], [46.3, 675.0], [46.4, 675.0], [46.5, 676.0], [46.6, 677.0], [46.7, 677.0], [46.8, 678.0], [46.9, 678.0], [47.0, 679.0], [47.1, 679.0], [47.2, 680.0], [47.3, 681.0], [47.4, 681.0], [47.5, 682.0], [47.6, 682.0], [47.7, 683.0], [47.8, 683.0], [47.9, 684.0], [48.0, 684.0], [48.1, 684.0], [48.2, 685.0], [48.3, 686.0], [48.4, 687.0], [48.5, 687.0], [48.6, 687.0], [48.7, 688.0], [48.8, 689.0], [48.9, 689.0], [49.0, 690.0], [49.1, 691.0], [49.2, 691.0], [49.3, 692.0], [49.4, 693.0], [49.5, 694.0], [49.6, 694.0], [49.7, 696.0], [49.8, 697.0], [49.9, 699.0], [50.0, 700.0], [50.1, 702.0], [50.2, 704.0], [50.3, 707.0], [50.4, 709.0], [50.5, 712.0], [50.6, 712.0], [50.7, 714.0], [50.8, 716.0], [50.9, 717.0], [51.0, 720.0], [51.1, 722.0], [51.2, 723.0], [51.3, 725.0], [51.4, 727.0], [51.5, 728.0], [51.6, 730.0], [51.7, 732.0], [51.8, 732.0], [51.9, 734.0], [52.0, 735.0], [52.1, 738.0], [52.2, 738.0], [52.3, 739.0], [52.4, 740.0], [52.5, 741.0], [52.6, 744.0], [52.7, 746.0], [52.8, 747.0], [52.9, 748.0], [53.0, 749.0], [53.1, 750.0], [53.2, 751.0], [53.3, 751.0], [53.4, 752.0], [53.5, 753.0], [53.6, 754.0], [53.7, 755.0], [53.8, 755.0], [53.9, 756.0], [54.0, 757.0], [54.1, 757.0], [54.2, 759.0], [54.3, 760.0], [54.4, 760.0], [54.5, 761.0], [54.6, 762.0], [54.7, 763.0], [54.8, 763.0], [54.9, 764.0], [55.0, 765.0], [55.1, 766.0], [55.2, 767.0], [55.3, 767.0], [55.4, 768.0], [55.5, 769.0], [55.6, 769.0], [55.7, 770.0], [55.8, 771.0], [55.9, 772.0], [56.0, 772.0], [56.1, 773.0], [56.2, 773.0], [56.3, 775.0], [56.4, 776.0], [56.5, 778.0], [56.6, 778.0], [56.7, 779.0], [56.8, 779.0], [56.9, 780.0], [57.0, 780.0], [57.1, 781.0], [57.2, 782.0], [57.3, 783.0], [57.4, 784.0], [57.5, 785.0], [57.6, 786.0], [57.7, 787.0], [57.8, 787.0], [57.9, 788.0], [58.0, 789.0], [58.1, 790.0], [58.2, 791.0], [58.3, 792.0], [58.4, 794.0], [58.5, 795.0], [58.6, 797.0], [58.7, 797.0], [58.8, 798.0], [58.9, 799.0], [59.0, 799.0], [59.1, 800.0], [59.2, 801.0], [59.3, 801.0], [59.4, 802.0], [59.5, 804.0], [59.6, 805.0], [59.7, 806.0], [59.8, 807.0], [59.9, 810.0], [60.0, 811.0], [60.1, 812.0], [60.2, 813.0], [60.3, 813.0], [60.4, 814.0], [60.5, 814.0], [60.6, 814.0], [60.7, 815.0], [60.8, 816.0], [60.9, 817.0], [61.0, 818.0], [61.1, 818.0], [61.2, 819.0], [61.3, 820.0], [61.4, 821.0], [61.5, 821.0], [61.6, 821.0], [61.7, 822.0], [61.8, 822.0], [61.9, 823.0], [62.0, 824.0], [62.1, 824.0], [62.2, 825.0], [62.3, 825.0], [62.4, 826.0], [62.5, 827.0], [62.6, 827.0], [62.7, 828.0], [62.8, 828.0], [62.9, 829.0], [63.0, 829.0], [63.1, 830.0], [63.2, 830.0], [63.3, 831.0], [63.4, 832.0], [63.5, 832.0], [63.6, 833.0], [63.7, 834.0], [63.8, 835.0], [63.9, 836.0], [64.0, 837.0], [64.1, 839.0], [64.2, 840.0], [64.3, 841.0], [64.4, 842.0], [64.5, 842.0], [64.6, 843.0], [64.7, 845.0], [64.8, 846.0], [64.9, 848.0], [65.0, 851.0], [65.1, 852.0], [65.2, 854.0], [65.3, 857.0], [65.4, 859.0], [65.5, 860.0], [65.6, 862.0], [65.7, 864.0], [65.8, 865.0], [65.9, 867.0], [66.0, 868.0], [66.1, 869.0], [66.2, 871.0], [66.3, 872.0], [66.4, 873.0], [66.5, 874.0], [66.6, 875.0], [66.7, 876.0], [66.8, 877.0], [66.9, 879.0], [67.0, 881.0], [67.1, 881.0], [67.2, 882.0], [67.3, 883.0], [67.4, 885.0], [67.5, 887.0], [67.6, 888.0], [67.7, 889.0], [67.8, 890.0], [67.9, 891.0], [68.0, 891.0], [68.1, 892.0], [68.2, 894.0], [68.3, 896.0], [68.4, 897.0], [68.5, 898.0], [68.6, 898.0], [68.7, 899.0], [68.8, 899.0], [68.9, 901.0], [69.0, 902.0], [69.1, 904.0], [69.2, 904.0], [69.3, 905.0], [69.4, 905.0], [69.5, 906.0], [69.6, 906.0], [69.7, 907.0], [69.8, 908.0], [69.9, 910.0], [70.0, 911.0], [70.1, 911.0], [70.2, 912.0], [70.3, 912.0], [70.4, 913.0], [70.5, 913.0], [70.6, 914.0], [70.7, 914.0], [70.8, 915.0], [70.9, 916.0], [71.0, 917.0], [71.1, 918.0], [71.2, 919.0], [71.3, 920.0], [71.4, 921.0], [71.5, 921.0], [71.6, 922.0], [71.7, 922.0], [71.8, 923.0], [71.9, 924.0], [72.0, 925.0], [72.1, 927.0], [72.2, 928.0], [72.3, 929.0], [72.4, 930.0], [72.5, 931.0], [72.6, 933.0], [72.7, 933.0], [72.8, 934.0], [72.9, 935.0], [73.0, 937.0], [73.1, 938.0], [73.2, 939.0], [73.3, 940.0], [73.4, 940.0], [73.5, 942.0], [73.6, 943.0], [73.7, 944.0], [73.8, 944.0], [73.9, 945.0], [74.0, 946.0], [74.1, 948.0], [74.2, 949.0], [74.3, 951.0], [74.4, 952.0], [74.5, 954.0], [74.6, 955.0], [74.7, 957.0], [74.8, 959.0], [74.9, 962.0], [75.0, 966.0], [75.1, 968.0], [75.2, 970.0], [75.3, 970.0], [75.4, 974.0], [75.5, 976.0], [75.6, 977.0], [75.7, 981.0], [75.8, 983.0], [75.9, 985.0], [76.0, 986.0], [76.1, 989.0], [76.2, 990.0], [76.3, 992.0], [76.4, 995.0], [76.5, 999.0], [76.6, 1000.0], [76.7, 1002.0], [76.8, 1003.0], [76.9, 1005.0], [77.0, 1006.0], [77.1, 1008.0], [77.2, 1009.0], [77.3, 1010.0], [77.4, 1011.0], [77.5, 1014.0], [77.6, 1015.0], [77.7, 1016.0], [77.8, 1016.0], [77.9, 1017.0], [78.0, 1018.0], [78.1, 1019.0], [78.2, 1019.0], [78.3, 1020.0], [78.4, 1021.0], [78.5, 1022.0], [78.6, 1023.0], [78.7, 1023.0], [78.8, 1024.0], [78.9, 1025.0], [79.0, 1025.0], [79.1, 1026.0], [79.2, 1026.0], [79.3, 1027.0], [79.4, 1028.0], [79.5, 1029.0], [79.6, 1029.0], [79.7, 1030.0], [79.8, 1030.0], [79.9, 1031.0], [80.0, 1031.0], [80.1, 1032.0], [80.2, 1032.0], [80.3, 1033.0], [80.4, 1033.0], [80.5, 1034.0], [80.6, 1034.0], [80.7, 1034.0], [80.8, 1035.0], [80.9, 1036.0], [81.0, 1036.0], [81.1, 1037.0], [81.2, 1038.0], [81.3, 1039.0], [81.4, 1039.0], [81.5, 1041.0], [81.6, 1042.0], [81.7, 1042.0], [81.8, 1043.0], [81.9, 1045.0], [82.0, 1046.0], [82.1, 1048.0], [82.2, 1050.0], [82.3, 1051.0], [82.4, 1052.0], [82.5, 1053.0], [82.6, 1055.0], [82.7, 1057.0], [82.8, 1057.0], [82.9, 1058.0], [83.0, 1062.0], [83.1, 1063.0], [83.2, 1064.0], [83.3, 1065.0], [83.4, 1069.0], [83.5, 1071.0], [83.6, 1073.0], [83.7, 1075.0], [83.8, 1079.0], [83.9, 1081.0], [84.0, 1083.0], [84.1, 1087.0], [84.2, 1090.0], [84.3, 1094.0], [84.4, 1096.0], [84.5, 1098.0], [84.6, 1103.0], [84.7, 1106.0], [84.8, 1108.0], [84.9, 1111.0], [85.0, 1112.0], [85.1, 1114.0], [85.2, 1120.0], [85.3, 1128.0], [85.4, 1135.0], [85.5, 1141.0], [85.6, 1145.0], [85.7, 1151.0], [85.8, 1153.0], [85.9, 1159.0], [86.0, 1160.0], [86.1, 1162.0], [86.2, 1165.0], [86.3, 1165.0], [86.4, 1166.0], [86.5, 1166.0], [86.6, 1167.0], [86.7, 1168.0], [86.8, 1169.0], [86.9, 1170.0], [87.0, 1172.0], [87.1, 1172.0], [87.2, 1173.0], [87.3, 1175.0], [87.4, 1176.0], [87.5, 1180.0], [87.6, 1182.0], [87.7, 1184.0], [87.8, 1186.0], [87.9, 1188.0], [88.0, 1190.0], [88.1, 1192.0], [88.2, 1193.0], [88.3, 1194.0], [88.4, 1195.0], [88.5, 1197.0], [88.6, 1198.0], [88.7, 1200.0], [88.8, 1200.0], [88.9, 1201.0], [89.0, 1202.0], [89.1, 1203.0], [89.2, 1204.0], [89.3, 1205.0], [89.4, 1206.0], [89.5, 1206.0], [89.6, 1207.0], [89.7, 1208.0], [89.8, 1208.0], [89.9, 1210.0], [90.0, 1210.0], [90.1, 1212.0], [90.2, 1213.0], [90.3, 1213.0], [90.4, 1214.0], [90.5, 1216.0], [90.6, 1217.0], [90.7, 1217.0], [90.8, 1218.0], [90.9, 1219.0], [91.0, 1221.0], [91.1, 1221.0], [91.2, 1222.0], [91.3, 1224.0], [91.4, 1224.0], [91.5, 1226.0], [91.6, 1227.0], [91.7, 1227.0], [91.8, 1229.0], [91.9, 1231.0], [92.0, 1231.0], [92.1, 1232.0], [92.2, 1234.0], [92.3, 1237.0], [92.4, 1237.0], [92.5, 1238.0], [92.6, 1239.0], [92.7, 1240.0], [92.8, 1241.0], [92.9, 1241.0], [93.0, 1242.0], [93.1, 1244.0], [93.2, 1246.0], [93.3, 1246.0], [93.4, 1246.0], [93.5, 1247.0], [93.6, 1247.0], [93.7, 1247.0], [93.8, 1247.0], [93.9, 1248.0], [94.0, 1248.0], [94.1, 1248.0], [94.2, 1249.0], [94.3, 1249.0], [94.4, 1250.0], [94.5, 1250.0], [94.6, 1251.0], [94.7, 1252.0], [94.8, 1253.0], [94.9, 1254.0], [95.0, 1255.0], [95.1, 1257.0], [95.2, 1257.0], [95.3, 1258.0], [95.4, 1259.0], [95.5, 1260.0], [95.6, 1262.0], [95.7, 1264.0], [95.8, 1267.0], [95.9, 1269.0], [96.0, 1270.0], [96.1, 1274.0], [96.2, 1275.0], [96.3, 1277.0], [96.4, 1279.0], [96.5, 1281.0], [96.6, 1283.0], [96.7, 1284.0], [96.8, 1286.0], [96.9, 1288.0], [97.0, 1289.0], [97.1, 1291.0], [97.2, 1292.0], [97.3, 1292.0], [97.4, 1293.0], [97.5, 1295.0], [97.6, 1296.0], [97.7, 1297.0], [97.8, 1297.0], [97.9, 1298.0], [98.0, 1300.0], [98.1, 1301.0], [98.2, 1302.0], [98.3, 1303.0], [98.4, 1304.0], [98.5, 1306.0], [98.6, 1307.0], [98.7, 1309.0], [98.8, 1312.0], [98.9, 1313.0], [99.0, 1316.0], [99.1, 1318.0], [99.2, 1321.0], [99.3, 1323.0], [99.4, 1323.0], [99.5, 1327.0], [99.6, 1328.0], [99.7, 1330.0], [99.8, 1333.0], [99.9, 1338.0], [100.0, 1348.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 74.0], [0.1, 75.0], [0.2, 76.0], [0.3, 76.0], [0.4, 77.0], [0.5, 78.0], [0.6, 78.0], [0.7, 78.0], [0.8, 79.0], [0.9, 79.0], [1.0, 79.0], [1.1, 79.0], [1.2, 80.0], [1.3, 80.0], [1.4, 81.0], [1.5, 81.0], [1.6, 81.0], [1.7, 81.0], [1.8, 82.0], [1.9, 82.0], [2.0, 82.0], [2.1, 82.0], [2.2, 82.0], [2.3, 82.0], [2.4, 82.0], [2.5, 82.0], [2.6, 83.0], [2.7, 83.0], [2.8, 83.0], [2.9, 83.0], [3.0, 83.0], [3.1, 83.0], [3.2, 83.0], [3.3, 83.0], [3.4, 83.0], [3.5, 83.0], [3.6, 83.0], [3.7, 83.0], [3.8, 83.0], [3.9, 83.0], [4.0, 84.0], [4.1, 84.0], [4.2, 84.0], [4.3, 84.0], [4.4, 84.0], [4.5, 84.0], [4.6, 84.0], [4.7, 84.0], [4.8, 84.0], [4.9, 84.0], [5.0, 84.0], [5.1, 84.0], [5.2, 84.0], [5.3, 84.0], [5.4, 84.0], [5.5, 85.0], [5.6, 85.0], [5.7, 85.0], [5.8, 85.0], [5.9, 85.0], [6.0, 85.0], [6.1, 85.0], [6.2, 85.0], [6.3, 85.0], [6.4, 85.0], [6.5, 85.0], [6.6, 85.0], [6.7, 85.0], [6.8, 85.0], [6.9, 85.0], [7.0, 86.0], [7.1, 86.0], [7.2, 86.0], [7.3, 86.0], [7.4, 86.0], [7.5, 86.0], [7.6, 86.0], [7.7, 86.0], [7.8, 86.0], [7.9, 86.0], [8.0, 86.0], [8.1, 86.0], [8.2, 86.0], [8.3, 86.0], [8.4, 86.0], [8.5, 86.0], [8.6, 86.0], [8.7, 86.0], [8.8, 86.0], [8.9, 86.0], [9.0, 86.0], [9.1, 86.0], [9.2, 86.0], [9.3, 86.0], [9.4, 86.0], [9.5, 87.0], [9.6, 87.0], [9.7, 87.0], [9.8, 87.0], [9.9, 87.0], [10.0, 87.0], [10.1, 87.0], [10.2, 87.0], [10.3, 87.0], [10.4, 87.0], [10.5, 87.0], [10.6, 87.0], [10.7, 87.0], [10.8, 87.0], [10.9, 87.0], [11.0, 87.0], [11.1, 87.0], [11.2, 87.0], [11.3, 87.0], [11.4, 87.0], [11.5, 87.0], [11.6, 87.0], [11.7, 87.0], [11.8, 88.0], [11.9, 88.0], [12.0, 88.0], [12.1, 88.0], [12.2, 88.0], [12.3, 88.0], [12.4, 88.0], [12.5, 88.0], [12.6, 88.0], [12.7, 88.0], [12.8, 88.0], [12.9, 88.0], [13.0, 88.0], [13.1, 88.0], [13.2, 88.0], [13.3, 88.0], [13.4, 88.0], [13.5, 88.0], [13.6, 88.0], [13.7, 88.0], [13.8, 88.0], [13.9, 88.0], [14.0, 88.0], [14.1, 88.0], [14.2, 88.0], [14.3, 88.0], [14.4, 88.0], [14.5, 89.0], [14.6, 89.0], [14.7, 89.0], [14.8, 89.0], [14.9, 89.0], [15.0, 89.0], [15.1, 89.0], [15.2, 89.0], [15.3, 89.0], [15.4, 89.0], [15.5, 89.0], [15.6, 89.0], [15.7, 89.0], [15.8, 89.0], [15.9, 89.0], [16.0, 89.0], [16.1, 89.0], [16.2, 89.0], [16.3, 89.0], [16.4, 89.0], [16.5, 89.0], [16.6, 89.0], [16.7, 89.0], [16.8, 89.0], [16.9, 89.0], [17.0, 89.0], [17.1, 89.0], [17.2, 89.0], [17.3, 90.0], [17.4, 90.0], [17.5, 90.0], [17.6, 90.0], [17.7, 90.0], [17.8, 90.0], [17.9, 90.0], [18.0, 90.0], [18.1, 90.0], [18.2, 90.0], [18.3, 90.0], [18.4, 90.0], [18.5, 90.0], [18.6, 90.0], [18.7, 90.0], [18.8, 90.0], [18.9, 90.0], [19.0, 90.0], [19.1, 90.0], [19.2, 90.0], [19.3, 90.0], [19.4, 90.0], [19.5, 90.0], [19.6, 90.0], [19.7, 90.0], [19.8, 90.0], [19.9, 90.0], [20.0, 90.0], [20.1, 90.0], [20.2, 91.0], [20.3, 91.0], [20.4, 91.0], [20.5, 91.0], [20.6, 91.0], [20.7, 91.0], [20.8, 91.0], [20.9, 91.0], [21.0, 91.0], [21.1, 91.0], [21.2, 91.0], [21.3, 91.0], [21.4, 91.0], [21.5, 91.0], [21.6, 91.0], [21.7, 91.0], [21.8, 91.0], [21.9, 91.0], [22.0, 91.0], [22.1, 91.0], [22.2, 91.0], [22.3, 91.0], [22.4, 91.0], [22.5, 91.0], [22.6, 91.0], [22.7, 91.0], [22.8, 91.0], [22.9, 91.0], [23.0, 91.0], [23.1, 91.0], [23.2, 91.0], [23.3, 91.0], [23.4, 91.0], [23.5, 91.0], [23.6, 92.0], [23.7, 92.0], [23.8, 92.0], [23.9, 92.0], [24.0, 92.0], [24.1, 92.0], [24.2, 92.0], [24.3, 92.0], [24.4, 92.0], [24.5, 92.0], [24.6, 92.0], [24.7, 92.0], [24.8, 92.0], [24.9, 92.0], [25.0, 92.0], [25.1, 92.0], [25.2, 92.0], [25.3, 92.0], [25.4, 92.0], [25.5, 92.0], [25.6, 92.0], [25.7, 92.0], [25.8, 92.0], [25.9, 92.0], [26.0, 92.0], [26.1, 92.0], [26.2, 92.0], [26.3, 92.0], [26.4, 92.0], [26.5, 92.0], [26.6, 92.0], [26.7, 92.0], [26.8, 92.0], [26.9, 92.0], [27.0, 93.0], [27.1, 93.0], [27.2, 93.0], [27.3, 93.0], [27.4, 93.0], [27.5, 93.0], [27.6, 93.0], [27.7, 93.0], [27.8, 93.0], [27.9, 93.0], [28.0, 93.0], [28.1, 93.0], [28.2, 93.0], [28.3, 93.0], [28.4, 93.0], [28.5, 93.0], [28.6, 93.0], [28.7, 93.0], [28.8, 93.0], [28.9, 93.0], [29.0, 93.0], [29.1, 93.0], [29.2, 93.0], [29.3, 93.0], [29.4, 93.0], [29.5, 93.0], [29.6, 93.0], [29.7, 93.0], [29.8, 93.0], [29.9, 93.0], [30.0, 93.0], [30.1, 93.0], [30.2, 93.0], [30.3, 93.0], [30.4, 94.0], [30.5, 94.0], [30.6, 94.0], [30.7, 94.0], [30.8, 94.0], [30.9, 94.0], [31.0, 94.0], [31.1, 94.0], [31.2, 94.0], [31.3, 94.0], [31.4, 94.0], [31.5, 94.0], [31.6, 94.0], [31.7, 94.0], [31.8, 94.0], [31.9, 94.0], [32.0, 94.0], [32.1, 94.0], [32.2, 94.0], [32.3, 94.0], [32.4, 94.0], [32.5, 94.0], [32.6, 94.0], [32.7, 94.0], [32.8, 94.0], [32.9, 94.0], [33.0, 94.0], [33.1, 94.0], [33.2, 94.0], [33.3, 94.0], [33.4, 94.0], [33.5, 94.0], [33.6, 94.0], [33.7, 94.0], [33.8, 94.0], [33.9, 95.0], [34.0, 95.0], [34.1, 95.0], [34.2, 95.0], [34.3, 95.0], [34.4, 95.0], [34.5, 95.0], [34.6, 95.0], [34.7, 95.0], [34.8, 95.0], [34.9, 95.0], [35.0, 95.0], [35.1, 95.0], [35.2, 95.0], [35.3, 95.0], [35.4, 95.0], [35.5, 95.0], [35.6, 95.0], [35.7, 95.0], [35.8, 95.0], [35.9, 95.0], [36.0, 95.0], [36.1, 95.0], [36.2, 95.0], [36.3, 95.0], [36.4, 95.0], [36.5, 95.0], [36.6, 95.0], [36.7, 95.0], [36.8, 95.0], [36.9, 95.0], [37.0, 95.0], [37.1, 95.0], [37.2, 95.0], [37.3, 95.0], [37.4, 96.0], [37.5, 96.0], [37.6, 96.0], [37.7, 96.0], [37.8, 96.0], [37.9, 96.0], [38.0, 96.0], [38.1, 96.0], [38.2, 96.0], [38.3, 96.0], [38.4, 96.0], [38.5, 96.0], [38.6, 96.0], [38.7, 96.0], [38.8, 96.0], [38.9, 96.0], [39.0, 96.0], [39.1, 96.0], [39.2, 96.0], [39.3, 96.0], [39.4, 96.0], [39.5, 96.0], [39.6, 96.0], [39.7, 96.0], [39.8, 96.0], [39.9, 96.0], [40.0, 96.0], [40.1, 96.0], [40.2, 96.0], [40.3, 96.0], [40.4, 96.0], [40.5, 97.0], [40.6, 97.0], [40.7, 97.0], [40.8, 97.0], [40.9, 97.0], [41.0, 97.0], [41.1, 97.0], [41.2, 97.0], [41.3, 97.0], [41.4, 97.0], [41.5, 97.0], [41.6, 97.0], [41.7, 97.0], [41.8, 97.0], [41.9, 97.0], [42.0, 97.0], [42.1, 97.0], [42.2, 97.0], [42.3, 97.0], [42.4, 97.0], [42.5, 97.0], [42.6, 97.0], [42.7, 97.0], [42.8, 97.0], [42.9, 97.0], [43.0, 97.0], [43.1, 97.0], [43.2, 97.0], [43.3, 97.0], [43.4, 97.0], [43.5, 98.0], [43.6, 98.0], [43.7, 98.0], [43.8, 98.0], [43.9, 98.0], [44.0, 98.0], [44.1, 98.0], [44.2, 98.0], [44.3, 98.0], [44.4, 98.0], [44.5, 98.0], [44.6, 98.0], [44.7, 98.0], [44.8, 98.0], [44.9, 98.0], [45.0, 98.0], [45.1, 98.0], [45.2, 98.0], [45.3, 98.0], [45.4, 98.0], [45.5, 98.0], [45.6, 98.0], [45.7, 98.0], [45.8, 98.0], [45.9, 98.0], [46.0, 98.0], [46.1, 99.0], [46.2, 99.0], [46.3, 99.0], [46.4, 99.0], [46.5, 99.0], [46.6, 99.0], [46.7, 99.0], [46.8, 99.0], [46.9, 99.0], [47.0, 99.0], [47.1, 99.0], [47.2, 99.0], [47.3, 99.0], [47.4, 99.0], [47.5, 99.0], [47.6, 99.0], [47.7, 99.0], [47.8, 99.0], [47.9, 99.0], [48.0, 99.0], [48.1, 99.0], [48.2, 99.0], [48.3, 100.0], [48.4, 100.0], [48.5, 100.0], [48.6, 100.0], [48.7, 100.0], [48.8, 100.0], [48.9, 100.0], [49.0, 100.0], [49.1, 100.0], [49.2, 100.0], [49.3, 100.0], [49.4, 100.0], [49.5, 100.0], [49.6, 100.0], [49.7, 100.0], [49.8, 100.0], [49.9, 100.0], [50.0, 100.0], [50.1, 100.0], [50.2, 100.0], [50.3, 100.0], [50.4, 100.0], [50.5, 100.0], [50.6, 100.0], [50.7, 100.0], [50.8, 100.0], [50.9, 100.0], [51.0, 101.0], [51.1, 101.0], [51.2, 101.0], [51.3, 101.0], [51.4, 101.0], [51.5, 101.0], [51.6, 101.0], [51.7, 101.0], [51.8, 101.0], [51.9, 101.0], [52.0, 101.0], [52.1, 101.0], [52.2, 101.0], [52.3, 101.0], [52.4, 101.0], [52.5, 101.0], [52.6, 101.0], [52.7, 101.0], [52.8, 101.0], [52.9, 101.0], [53.0, 101.0], [53.1, 102.0], [53.2, 102.0], [53.3, 102.0], [53.4, 102.0], [53.5, 102.0], [53.6, 102.0], [53.7, 102.0], [53.8, 102.0], [53.9, 102.0], [54.0, 102.0], [54.1, 102.0], [54.2, 102.0], [54.3, 102.0], [54.4, 102.0], [54.5, 102.0], [54.6, 102.0], [54.7, 102.0], [54.8, 102.0], [54.9, 102.0], [55.0, 102.0], [55.1, 102.0], [55.2, 102.0], [55.3, 103.0], [55.4, 103.0], [55.5, 103.0], [55.6, 103.0], [55.7, 103.0], [55.8, 103.0], [55.9, 103.0], [56.0, 103.0], [56.1, 103.0], [56.2, 103.0], [56.3, 103.0], [56.4, 103.0], [56.5, 103.0], [56.6, 103.0], [56.7, 103.0], [56.8, 103.0], [56.9, 104.0], [57.0, 104.0], [57.1, 104.0], [57.2, 104.0], [57.3, 104.0], [57.4, 104.0], [57.5, 104.0], [57.6, 104.0], [57.7, 104.0], [57.8, 104.0], [57.9, 104.0], [58.0, 104.0], [58.1, 104.0], [58.2, 104.0], [58.3, 104.0], [58.4, 104.0], [58.5, 104.0], [58.6, 104.0], [58.7, 105.0], [58.8, 105.0], [58.9, 105.0], [59.0, 105.0], [59.1, 105.0], [59.2, 105.0], [59.3, 105.0], [59.4, 105.0], [59.5, 105.0], [59.6, 105.0], [59.7, 105.0], [59.8, 105.0], [59.9, 105.0], [60.0, 105.0], [60.1, 105.0], [60.2, 105.0], [60.3, 105.0], [60.4, 105.0], [60.5, 105.0], [60.6, 106.0], [60.7, 106.0], [60.8, 106.0], [60.9, 106.0], [61.0, 106.0], [61.1, 106.0], [61.2, 106.0], [61.3, 106.0], [61.4, 106.0], [61.5, 106.0], [61.6, 106.0], [61.7, 106.0], [61.8, 106.0], [61.9, 106.0], [62.0, 106.0], [62.1, 106.0], [62.2, 106.0], [62.3, 106.0], [62.4, 107.0], [62.5, 107.0], [62.6, 107.0], [62.7, 107.0], [62.8, 107.0], [62.9, 107.0], [63.0, 107.0], [63.1, 107.0], [63.2, 107.0], [63.3, 107.0], [63.4, 107.0], [63.5, 107.0], [63.6, 107.0], [63.7, 107.0], [63.8, 107.0], [63.9, 107.0], [64.0, 107.0], [64.1, 107.0], [64.2, 108.0], [64.3, 108.0], [64.4, 108.0], [64.5, 108.0], [64.6, 108.0], [64.7, 108.0], [64.8, 108.0], [64.9, 108.0], [65.0, 108.0], [65.1, 108.0], [65.2, 108.0], [65.3, 108.0], [65.4, 108.0], [65.5, 108.0], [65.6, 108.0], [65.7, 108.0], [65.8, 108.0], [65.9, 108.0], [66.0, 108.0], [66.1, 109.0], [66.2, 109.0], [66.3, 109.0], [66.4, 109.0], [66.5, 109.0], [66.6, 109.0], [66.7, 109.0], [66.8, 109.0], [66.9, 109.0], [67.0, 109.0], [67.1, 109.0], [67.2, 109.0], [67.3, 109.0], [67.4, 109.0], [67.5, 109.0], [67.6, 109.0], [67.7, 110.0], [67.8, 110.0], [67.9, 110.0], [68.0, 110.0], [68.1, 110.0], [68.2, 110.0], [68.3, 110.0], [68.4, 110.0], [68.5, 110.0], [68.6, 110.0], [68.7, 110.0], [68.8, 110.0], [68.9, 110.0], [69.0, 110.0], [69.1, 110.0], [69.2, 110.0], [69.3, 110.0], [69.4, 110.0], [69.5, 111.0], [69.6, 111.0], [69.7, 111.0], [69.8, 111.0], [69.9, 111.0], [70.0, 111.0], [70.1, 111.0], [70.2, 111.0], [70.3, 111.0], [70.4, 111.0], [70.5, 111.0], [70.6, 111.0], [70.7, 111.0], [70.8, 111.0], [70.9, 111.0], [71.0, 111.0], [71.1, 112.0], [71.2, 112.0], [71.3, 112.0], [71.4, 112.0], [71.5, 112.0], [71.6, 112.0], [71.7, 112.0], [71.8, 112.0], [71.9, 112.0], [72.0, 112.0], [72.1, 112.0], [72.2, 112.0], [72.3, 112.0], [72.4, 113.0], [72.5, 113.0], [72.6, 113.0], [72.7, 113.0], [72.8, 113.0], [72.9, 113.0], [73.0, 113.0], [73.1, 113.0], [73.2, 113.0], [73.3, 113.0], [73.4, 113.0], [73.5, 113.0], [73.6, 113.0], [73.7, 113.0], [73.8, 113.0], [73.9, 114.0], [74.0, 114.0], [74.1, 114.0], [74.2, 114.0], [74.3, 114.0], [74.4, 114.0], [74.5, 114.0], [74.6, 114.0], [74.7, 114.0], [74.8, 114.0], [74.9, 114.0], [75.0, 114.0], [75.1, 114.0], [75.2, 114.0], [75.3, 114.0], [75.4, 115.0], [75.5, 115.0], [75.6, 115.0], [75.7, 115.0], [75.8, 115.0], [75.9, 115.0], [76.0, 115.0], [76.1, 115.0], [76.2, 115.0], [76.3, 115.0], [76.4, 115.0], [76.5, 115.0], [76.6, 115.0], [76.7, 115.0], [76.8, 116.0], [76.9, 116.0], [77.0, 116.0], [77.1, 116.0], [77.2, 116.0], [77.3, 116.0], [77.4, 116.0], [77.5, 116.0], [77.6, 116.0], [77.7, 116.0], [77.8, 116.0], [77.9, 116.0], [78.0, 116.0], [78.1, 116.0], [78.2, 116.0], [78.3, 117.0], [78.4, 117.0], [78.5, 117.0], [78.6, 117.0], [78.7, 117.0], [78.8, 117.0], [78.9, 117.0], [79.0, 117.0], [79.1, 117.0], [79.2, 117.0], [79.3, 117.0], [79.4, 117.0], [79.5, 118.0], [79.6, 118.0], [79.7, 118.0], [79.8, 118.0], [79.9, 118.0], [80.0, 118.0], [80.1, 118.0], [80.2, 118.0], [80.3, 118.0], [80.4, 118.0], [80.5, 119.0], [80.6, 119.0], [80.7, 119.0], [80.8, 119.0], [80.9, 119.0], [81.0, 119.0], [81.1, 119.0], [81.2, 119.0], [81.3, 119.0], [81.4, 119.0], [81.5, 120.0], [81.6, 120.0], [81.7, 120.0], [81.8, 120.0], [81.9, 120.0], [82.0, 120.0], [82.1, 120.0], [82.2, 120.0], [82.3, 120.0], [82.4, 120.0], [82.5, 121.0], [82.6, 121.0], [82.7, 121.0], [82.8, 121.0], [82.9, 121.0], [83.0, 121.0], [83.1, 121.0], [83.2, 121.0], [83.3, 121.0], [83.4, 122.0], [83.5, 122.0], [83.6, 122.0], [83.7, 122.0], [83.8, 122.0], [83.9, 122.0], [84.0, 122.0], [84.1, 122.0], [84.2, 123.0], [84.3, 123.0], [84.4, 123.0], [84.5, 123.0], [84.6, 123.0], [84.7, 123.0], [84.8, 123.0], [84.9, 123.0], [85.0, 124.0], [85.1, 124.0], [85.2, 124.0], [85.3, 124.0], [85.4, 124.0], [85.5, 124.0], [85.6, 124.0], [85.7, 124.0], [85.8, 125.0], [85.9, 125.0], [86.0, 125.0], [86.1, 125.0], [86.2, 125.0], [86.3, 125.0], [86.4, 125.0], [86.5, 125.0], [86.6, 126.0], [86.7, 126.0], [86.8, 126.0], [86.9, 126.0], [87.0, 126.0], [87.1, 126.0], [87.2, 126.0], [87.3, 126.0], [87.4, 126.0], [87.5, 126.0], [87.6, 126.0], [87.7, 127.0], [87.8, 127.0], [87.9, 127.0], [88.0, 127.0], [88.1, 127.0], [88.2, 127.0], [88.3, 127.0], [88.4, 127.0], [88.5, 127.0], [88.6, 128.0], [88.7, 128.0], [88.8, 128.0], [88.9, 128.0], [89.0, 128.0], [89.1, 128.0], [89.2, 128.0], [89.3, 128.0], [89.4, 129.0], [89.5, 129.0], [89.6, 129.0], [89.7, 129.0], [89.8, 129.0], [89.9, 129.0], [90.0, 130.0], [90.1, 130.0], [90.2, 130.0], [90.3, 130.0], [90.4, 130.0], [90.5, 131.0], [90.6, 131.0], [90.7, 131.0], [90.8, 131.0], [90.9, 131.0], [91.0, 131.0], [91.1, 132.0], [91.2, 132.0], [91.3, 132.0], [91.4, 132.0], [91.5, 132.0], [91.6, 133.0], [91.7, 133.0], [91.8, 133.0], [91.9, 133.0], [92.0, 133.0], [92.1, 133.0], [92.2, 133.0], [92.3, 134.0], [92.4, 134.0], [92.5, 134.0], [92.6, 134.0], [92.7, 135.0], [92.8, 135.0], [92.9, 135.0], [93.0, 136.0], [93.1, 136.0], [93.2, 136.0], [93.3, 137.0], [93.4, 137.0], [93.5, 138.0], [93.6, 138.0], [93.7, 138.0], [93.8, 138.0], [93.9, 139.0], [94.0, 139.0], [94.1, 139.0], [94.2, 139.0], [94.3, 140.0], [94.4, 140.0], [94.5, 141.0], [94.6, 141.0], [94.7, 142.0], [94.8, 142.0], [94.9, 143.0], [95.0, 143.0], [95.1, 144.0], [95.2, 145.0], [95.3, 145.0], [95.4, 146.0], [95.5, 147.0], [95.6, 148.0], [95.7, 148.0], [95.8, 149.0], [95.9, 150.0], [96.0, 151.0], [96.1, 151.0], [96.2, 153.0], [96.3, 154.0], [96.4, 154.0], [96.5, 156.0], [96.6, 158.0], [96.7, 161.0], [96.8, 167.0], [96.9, 171.0], [97.0, 179.0], [97.1, 190.0], [97.2, 203.0], [97.3, 213.0], [97.4, 215.0], [97.5, 227.0], [97.6, 228.0], [97.7, 230.0], [97.8, 233.0], [97.9, 235.0], [98.0, 236.0], [98.1, 237.0], [98.2, 239.0], [98.3, 242.0], [98.4, 243.0], [98.5, 244.0], [98.6, 246.0], [98.7, 247.0], [98.8, 249.0], [98.9, 251.0], [99.0, 254.0], [99.1, 260.0], [99.2, 265.0], [99.3, 270.0], [99.4, 272.0], [99.5, 273.0], [99.6, 275.0], [99.7, 276.0], [99.8, 281.0], [99.9, 291.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 3494.0, "series": [{"data": [[0.0, 42.0], [1100.0, 6.0], [300.0, 603.0], [600.0, 52.0], [1400.0, 1.0], [100.0, 3494.0], [200.0, 287.0], [400.0, 493.0], [500.0, 22.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 302.0], [600.0, 639.0], [700.0, 457.0], [200.0, 369.0], [800.0, 488.0], [900.0, 388.0], [1000.0, 399.0], [1100.0, 206.0], [300.0, 331.0], [1200.0, 465.0], [1300.0, 101.0], [100.0, 245.0], [400.0, 236.0], [500.0, 374.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 2414.0], [300.0, 2.0], [200.0, 137.0], [100.0, 2446.0], [400.0, 1.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3597.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 11403.0, "series": [{"data": [[0.0, 11403.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3597.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 122.75519999999962, "minX": 1.66901874E12, "maxY": 841.0015999999977, "series": [{"data": [[1.66901874E12, 841.0015999999977]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.66901874E12, 314.73520000000025]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.66901874E12, 122.75519999999962]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901874E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 11.5, "minX": 1.0, "maxY": 1342.0, "series": [{"data": [[2.0, 352.0], [3.0, 364.0], [5.0, 334.3333333333333], [6.0, 330.0], [8.0, 344.5], [9.0, 342.0], [10.0, 330.0], [11.0, 363.0], [12.0, 342.0], [15.0, 353.5], [17.0, 359.0], [19.0, 338.3333333333333], [20.0, 323.0], [21.0, 357.5], [23.0, 325.0], [24.0, 397.0], [25.0, 322.0], [26.0, 344.0], [27.0, 372.0], [29.0, 358.0], [31.0, 348.0], [35.0, 354.5], [34.0, 338.0], [37.0, 340.0], [36.0, 369.0], [39.0, 402.0], [38.0, 434.0], [41.0, 346.0], [40.0, 361.0], [42.0, 331.0], [45.0, 347.0], [47.0, 353.0], [46.0, 358.0], [49.0, 399.0], [48.0, 327.0], [51.0, 318.0], [50.0, 341.0], [53.0, 424.0], [52.0, 392.0], [55.0, 409.0], [54.0, 335.0], [57.0, 430.0], [56.0, 356.0], [59.0, 407.0], [61.0, 354.0], [60.0, 368.0], [62.0, 369.0], [67.0, 347.0], [66.0, 386.0], [64.0, 421.5], [70.0, 431.0], [69.0, 387.6666666666667], [74.0, 404.5], [79.0, 432.0], [83.0, 438.0], [81.0, 417.5], [87.0, 418.0], [84.0, 414.0], [91.0, 417.6], [90.0, 427.0], [89.0, 412.5], [88.0, 410.6666666666667], [94.0, 408.6666666666667], [97.0, 422.6666666666667], [103.0, 417.5], [102.0, 437.0], [100.0, 400.25], [107.0, 321.6666666666667], [106.0, 435.0], [110.0, 128.0], [109.0, 126.0], [108.0, 137.0], [111.0, 425.5], [114.0, 128.33333333333334], [112.0, 132.5], [115.0, 313.0], [113.0, 408.0], [118.0, 248.42857142857142], [116.0, 136.5], [119.0, 139.83333333333334], [117.0, 149.25], [123.0, 172.875], [121.0, 242.8], [120.0, 133.66666666666666], [122.0, 209.57142857142858], [127.0, 119.15384615384616], [125.0, 207.57142857142856], [124.0, 122.14285714285714], [126.0, 117.50000000000001], [132.0, 151.5625], [131.0, 158.0], [129.0, 156.9230769230769], [135.0, 173.0], [134.0, 141.45454545454547], [133.0, 117.875], [128.0, 121.66666666666667], [130.0, 149.125], [138.0, 117.54545454545455], [143.0, 143.30769230769232], [142.0, 132.15384615384613], [140.0, 172.39999999999998], [139.0, 171.05882352941177], [137.0, 181.3684210526316], [136.0, 216.5], [141.0, 139.3076923076923], [151.0, 147.5], [149.0, 141.94117647058823], [148.0, 180.4], [147.0, 204.22222222222223], [146.0, 133.69230769230768], [144.0, 169.07142857142856], [145.0, 239.25], [150.0, 145.33333333333334], [159.0, 170.82608695652175], [158.0, 163.35294117647058], [156.0, 117.66666666666667], [155.0, 147.0], [154.0, 155.25], [153.0, 172.06666666666666], [152.0, 138.3], [157.0, 193.50000000000006], [164.0, 218.0], [167.0, 266.22222222222223], [163.0, 123.25], [165.0, 208.73684210526312], [161.0, 162.23529411764707], [160.0, 117.69230769230768], [166.0, 222.60000000000002], [162.0, 203.92307692307693], [174.0, 200.6666666666667], [168.0, 296.8], [175.0, 116.33333333333333], [173.0, 252.91666666666666], [170.0, 261.0], [171.0, 213.25], [172.0, 216.6], [169.0, 196.66666666666669], [183.0, 138.7142857142857], [182.0, 176.11111111111111], [181.0, 139.8125], [180.0, 174.6], [179.0, 125.11111111111109], [178.0, 118.17647058823529], [177.0, 184.5], [176.0, 216.35714285714286], [191.0, 142.33333333333337], [190.0, 232.44444444444443], [188.0, 166.65217391304347], [187.0, 122.11764705882354], [189.0, 169.33333333333334], [184.0, 151.04545454545456], [186.0, 178.76923076923077], [185.0, 144.1818181818182], [193.0, 158.10000000000002], [199.0, 126.14285714285714], [198.0, 286.125], [194.0, 121.30555555555557], [197.0, 138.38888888888889], [195.0, 124.375], [192.0, 180.42857142857144], [196.0, 153.0], [200.0, 160.24999999999997], [206.0, 203.55555555555554], [204.0, 146.96428571428572], [207.0, 165.16666666666669], [205.0, 187.3913043478261], [201.0, 177.0909090909091], [202.0, 233.12499999999997], [203.0, 197.8571428571428], [215.0, 194.94117647058823], [214.0, 144.76470588235296], [213.0, 216.09090909090907], [210.0, 148.4565217391305], [211.0, 188.99999999999997], [209.0, 212.71428571428572], [208.0, 240.66666666666666], [212.0, 156.0], [222.0, 149.125], [223.0, 165.21428571428572], [221.0, 147.07999999999998], [220.0, 258.625], [219.0, 169.06666666666666], [218.0, 120.72727272727273], [216.0, 152.11111111111111], [217.0, 197.875], [228.0, 179.53333333333333], [226.0, 176.80769230769235], [227.0, 182.0], [229.0, 192.88888888888889], [225.0, 167.29999999999998], [224.0, 173.52380952380955], [230.0, 273.7], [231.0, 192.375], [235.0, 168.46153846153845], [234.0, 197.9090909090909], [239.0, 227.875], [238.0, 205.00000000000003], [237.0, 156.70588235294122], [236.0, 236.5], [233.0, 191.3125], [232.0, 120.66666666666667], [242.0, 165.85], [244.0, 189.80769230769226], [243.0, 177.46153846153848], [247.0, 201.26315789473685], [246.0, 165.1851851851852], [245.0, 201.04347826086953], [241.0, 193.76000000000002], [240.0, 186.57142857142858], [255.0, 182.63636363636365], [253.0, 179.22222222222223], [250.0, 198.2307692307692], [249.0, 211.6], [248.0, 247.00000000000003], [251.0, 195.3846153846154], [252.0, 186.8235294117647], [254.0, 173.2941176470588], [270.0, 161.72727272727272], [265.0, 187.6842105263158], [261.0, 213.84615384615387], [267.0, 178.22222222222223], [263.0, 249.33333333333331], [268.0, 165.31250000000003], [269.0, 183.28571428571428], [258.0, 175.88235294117644], [256.0, 207.24999999999997], [257.0, 156.33333333333331], [259.0, 193.54545454545456], [266.0, 215.29411764705878], [264.0, 141.75], [271.0, 220.125], [262.0, 163.12499999999997], [260.0, 152.38461538461536], [273.0, 201.1176470588235], [285.0, 235.00000000000003], [272.0, 173.06249999999997], [282.0, 188.33333333333331], [283.0, 158.88888888888889], [281.0, 220.29999999999998], [287.0, 199.5], [286.0, 132.2], [280.0, 200.5], [279.0, 266.28571428571433], [277.0, 167.875], [278.0, 158.28571428571428], [276.0, 238.22222222222223], [274.0, 173.52], [275.0, 176.1], [284.0, 224.99999999999997], [291.0, 267.7857142857143], [302.0, 348.4], [303.0, 150.8], [296.0, 216.4], [301.0, 309.6666666666667], [300.0, 184.0], [299.0, 271.5], [298.0, 206.66666666666669], [297.0, 232.8], [295.0, 260.2857142857143], [293.0, 414.25], [294.0, 200.08333333333334], [292.0, 228.0], [290.0, 257.25], [288.0, 144.85714285714286], [289.0, 267.0], [319.0, 204.7368421052632], [307.0, 201.1764705882353], [306.0, 259.0], [305.0, 201.11111111111111], [304.0, 291.3333333333333], [311.0, 237.2], [310.0, 265.75], [309.0, 495.25], [308.0, 220.86666666666667], [314.0, 215.66666666666666], [313.0, 213.2142857142857], [312.0, 247.53846153846155], [316.0, 192.42857142857144], [318.0, 218.28571428571428], [317.0, 189.14999999999998], [315.0, 325.5], [321.0, 238.18749999999997], [330.0, 266.8888888888889], [331.0, 304.2], [328.0, 190.0], [326.0, 178.41666666666669], [325.0, 264.625], [324.0, 280.42857142857144], [329.0, 193.08333333333331], [320.0, 230.92857142857144], [327.0, 320.66666666666663], [323.0, 195.76923076923075], [322.0, 235.53333333333336], [333.0, 200.16666666666666], [332.0, 296.3333333333333], [335.0, 146.5], [334.0, 260.09090909090907], [339.0, 271.58333333333337], [337.0, 213.44444444444443], [336.0, 214.85714285714286], [345.0, 273.64285714285717], [346.0, 222.83333333333334], [347.0, 256.40909090909093], [344.0, 164.8], [343.0, 347.6666666666667], [341.0, 225.16666666666669], [340.0, 335.84615384615387], [342.0, 204.22222222222223], [338.0, 253.77777777777777], [349.0, 178.33333333333334], [351.0, 236.0], [350.0, 181.54838709677415], [348.0, 236.13636363636368], [366.0, 325.4], [362.0, 168.33333333333334], [363.0, 191.25], [364.0, 316.875], [365.0, 159.22222222222226], [355.0, 127.8], [354.0, 241.71428571428572], [353.0, 226.125], [352.0, 244.0], [359.0, 231.66666666666669], [367.0, 297.45454545454544], [361.0, 225.33333333333331], [360.0, 215.5], [358.0, 293.0], [357.0, 440.3333333333333], [356.0, 284.7142857142857], [382.0, 271.54545454545456], [383.0, 154.33333333333331], [380.0, 193.3125], [381.0, 189.10000000000002], [379.0, 220.88888888888889], [377.0, 204.4666666666667], [378.0, 177.66666666666666], [376.0, 153.875], [375.0, 260.1666666666667], [374.0, 161.375], [368.0, 233.6], [371.0, 201.50000000000003], [370.0, 240.22222222222226], [369.0, 297.07692307692304], [373.0, 376.11111111111114], [372.0, 248.07142857142858], [397.0, 179.41379310344828], [395.0, 220.19047619047618], [391.0, 182.66666666666666], [396.0, 180.5], [387.0, 209.0], [386.0, 160.16666666666669], [385.0, 182.72727272727272], [384.0, 196.7407407407407], [393.0, 214.75], [399.0, 231.99999999999997], [392.0, 179.3846153846154], [398.0, 200.7857142857143], [394.0, 186.64285714285717], [389.0, 208.6153846153846], [390.0, 165.11111111111111], [388.0, 162.0], [414.0, 155.33333333333334], [415.0, 150.71428571428572], [409.0, 150.5], [408.0, 329.2857142857143], [413.0, 189.42857142857142], [403.0, 169.82352941176467], [402.0, 197.875], [400.0, 180.8888888888889], [401.0, 199.00000000000006], [412.0, 162.2857142857143], [411.0, 189.28571428571428], [410.0, 198.27272727272728], [407.0, 187.33333333333334], [406.0, 159.28571428571425], [405.0, 201.22222222222223], [404.0, 175.44444444444446], [417.0, 215.24999999999997], [424.0, 175.5], [431.0, 357.0], [426.0, 154.4], [425.0, 166.14285714285714], [430.0, 136.0], [428.0, 185.5], [423.0, 216.0], [422.0, 203.0], [421.0, 158.33333333333331], [419.0, 232.57142857142858], [420.0, 218.21052631578948], [418.0, 261.75], [416.0, 187.44444444444446], [446.0, 145.0], [447.0, 164.5], [445.0, 158.0], [444.0, 139.25], [443.0, 189.25], [442.0, 404.5], [441.0, 148.0], [440.0, 202.64705882352942], [438.0, 251.5], [435.0, 111.0], [434.0, 257.5], [433.0, 203.25], [432.0, 240.75], [439.0, 257.0], [437.0, 277.0], [436.0, 113.0], [462.0, 186.88888888888889], [454.0, 160.42857142857142], [453.0, 157.33333333333334], [452.0, 163.7142857142857], [455.0, 210.6], [449.0, 154.0], [448.0, 187.57142857142856], [451.0, 151.625], [450.0, 188.2], [463.0, 190.18181818181816], [461.0, 325.5], [460.0, 170.15384615384613], [459.0, 185.56250000000003], [458.0, 270.40000000000003], [457.0, 173.66666666666666], [456.0, 187.0], [478.0, 202.71428571428572], [479.0, 190.0], [477.0, 173.2], [476.0, 210.0], [475.0, 211.57142857142856], [474.0, 179.55555555555554], [473.0, 187.2], [472.0, 223.76923076923077], [470.0, 200.33333333333331], [464.0, 203.9090909090909], [471.0, 167.2], [467.0, 207.57142857142858], [466.0, 184.1875], [465.0, 200.49999999999997], [469.0, 201.14285714285714], [468.0, 210.5], [481.0, 144.6], [484.0, 301.75], [485.0, 168.0], [483.0, 260.0], [482.0, 189.5], [487.0, 143.5], [480.0, 210.0], [486.0, 208.42857142857142], [493.0, 255.5], [494.0, 166.33333333333334], [492.0, 351.5], [489.0, 385.0], [491.0, 167.2], [490.0, 136.0], [488.0, 274.25], [499.0, 217.66666666666666], [511.0, 286.0], [508.0, 216.8], [510.0, 163.0], [509.0, 205.0], [505.0, 258.6], [504.0, 131.0], [506.0, 142.66666666666666], [502.0, 318.0], [501.0, 389.0], [500.0, 143.0], [498.0, 160.0], [497.0, 418.0], [496.0, 194.0], [503.0, 156.33333333333334], [538.0, 182.66666666666666], [529.0, 215.83333333333331], [532.0, 248.16666666666669], [533.0, 153.0], [535.0, 196.0], [534.0, 242.0], [531.0, 184.75], [530.0, 198.0], [528.0, 201.0], [543.0, 353.6666666666667], [540.0, 335.0], [542.0, 156.0], [541.0, 161.0], [539.0, 169.66666666666666], [537.0, 295.6666666666667], [536.0, 133.0], [519.0, 166.0], [518.0, 270.5], [517.0, 279.5], [514.0, 245.0], [515.0, 131.0], [513.0, 269.4], [512.0, 173.5], [527.0, 214.0], [526.0, 177.66666666666666], [525.0, 179.33333333333334], [523.0, 234.2857142857143], [524.0, 308.3333333333333], [522.0, 230.5], [520.0, 190.8], [521.0, 247.0], [570.0, 284.5], [562.0, 283.75], [574.0, 215.0], [575.0, 215.4], [561.0, 362.42857142857144], [560.0, 240.0], [572.0, 276.8], [571.0, 286.0], [573.0, 285.0], [569.0, 220.75], [568.0, 270.0], [551.0, 239.8], [550.0, 318.4], [549.0, 400.0], [548.0, 335.8], [547.0, 277.4], [546.0, 321.6666666666667], [545.0, 177.0], [544.0, 211.0], [559.0, 286.85714285714283], [556.0, 188.0], [555.0, 200.66666666666666], [557.0, 194.0], [558.0, 193.0], [554.0, 284.0], [552.0, 239.6], [567.0, 213.75], [566.0, 385.5], [565.0, 387.0], [564.0, 285.6666666666667], [563.0, 271.0], [604.0, 299.31818181818187], [582.0, 390.0], [586.0, 214.55555555555554], [588.0, 234.7142857142857], [587.0, 237.25], [585.0, 245.66666666666666], [584.0, 205.54545454545453], [583.0, 219.0], [601.0, 238.99999999999997], [600.0, 228.11764705882354], [581.0, 315.5], [580.0, 286.25], [579.0, 378.3333333333333], [577.0, 297.0], [576.0, 227.0], [578.0, 269.4], [591.0, 279.4], [590.0, 307.49999999999994], [589.0, 276.14285714285717], [605.0, 272.2727272727273], [606.0, 249.0], [593.0, 246.8], [592.0, 303.27272727272725], [607.0, 244.69230769230768], [595.0, 232.00000000000003], [594.0, 305.16666666666663], [597.0, 239.76923076923075], [596.0, 199.58333333333334], [599.0, 225.50000000000003], [598.0, 209.57142857142856], [603.0, 244.31249999999994], [602.0, 263.6428571428571], [623.0, 353.0], [609.0, 181.66666666666666], [608.0, 342.0], [614.0, 214.0], [612.0, 207.5], [610.0, 282.2857142857143], [622.0, 388.0], [621.0, 294.5], [620.0, 283.5], [619.0, 378.5], [618.0, 211.0], [617.0, 222.0], [616.0, 189.33333333333334]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[314.73379999999963, 205.93540000000004]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 1283.0], [3.0, 1292.0], [4.0, 1267.0], [7.0, 1259.0], [8.0, 1279.6666666666667], [9.0, 1280.0], [12.0, 644.5], [13.0, 15.0], [14.0, 1034.2], [15.0, 11.5], [16.0, 516.8], [17.0, 15.0], [18.0, 436.0], [19.0, 1317.0], [20.0, 644.75], [21.0, 12.0], [25.0, 1309.0], [26.0, 1296.0], [28.0, 1284.0], [29.0, 1295.0], [30.0, 24.0], [31.0, 662.0], [32.0, 885.0], [35.0, 1296.0], [37.0, 29.0], [36.0, 24.0], [39.0, 448.6666666666667], [38.0, 28.0], [41.0, 29.0], [40.0, 662.0], [42.0, 731.6666666666666], [43.0, 451.6666666666667], [46.0, 1295.0], [49.0, 1277.0], [51.0, 1312.0], [50.0, 1315.5], [53.0, 37.0], [52.0, 793.2], [55.0, 39.0], [54.0, 41.5], [57.0, 535.0], [56.0, 162.5], [59.0, 510.27272727272725], [58.0, 39.0], [61.0, 49.125], [60.0, 36.5], [63.0, 50.0], [62.0, 387.8181818181818], [66.0, 52.0], [64.0, 406.1428571428571], [67.0, 1318.0], [71.0, 390.57142857142856], [70.0, 54.666666666666664], [69.0, 54.5], [68.0, 50.8], [75.0, 60.0], [74.0, 420.7142857142857], [73.0, 55.25], [72.0, 662.6666666666666], [77.0, 237.38461538461536], [79.0, 678.0], [78.0, 49.0], [76.0, 58.8], [80.0, 666.6666666666667], [83.0, 59.666666666666664], [82.0, 64.0], [81.0, 67.0], [86.0, 821.625], [85.0, 52.333333333333336], [84.0, 59.666666666666664], [87.0, 54.5], [88.0, 306.4], [91.0, 50.666666666666664], [90.0, 789.2], [89.0, 366.5], [93.0, 356.25], [92.0, 299.6], [95.0, 673.3333333333334], [94.0, 65.0], [98.0, 381.75], [96.0, 62.25], [97.0, 59.0], [102.0, 1289.5], [100.0, 1263.0], [104.0, 991.25], [106.0, 1293.5], [111.0, 1044.8], [109.0, 680.0], [112.0, 68.33333333333333], [115.0, 1318.6666666666667], [113.0, 1342.0], [119.0, 1329.0], [121.0, 903.3333333333334], [120.0, 703.5], [122.0, 1316.0], [127.0, 1332.0], [125.0, 1320.6666666666667], [124.0, 1309.0], [135.0, 1323.0], [134.0, 1327.5], [132.0, 1324.5], [130.0, 1307.6666666666667], [128.0, 1325.0], [139.0, 908.6666666666666], [142.0, 1321.0], [141.0, 1326.5], [137.0, 1315.0], [151.0, 1313.0], [150.0, 1317.0], [149.0, 1320.3333333333333], [146.0, 1318.0], [145.0, 1324.6666666666667], [159.0, 695.0], [158.0, 67.0], [156.0, 81.4], [157.0, 906.3333333333334], [155.0, 1315.0], [154.0, 1314.0], [152.0, 1320.0], [166.0, 494.0], [165.0, 696.5], [164.0, 87.33333333333333], [163.0, 86.125], [162.0, 86.0], [161.0, 80.25], [160.0, 430.71428571428567], [167.0, 73.0], [174.0, 88.6], [172.0, 691.75], [171.0, 84.0], [169.0, 259.57142857142856], [168.0, 750.8181818181818], [173.0, 91.0], [170.0, 495.3333333333333], [175.0, 995.75], [183.0, 1296.0], [181.0, 1293.5], [180.0, 1302.0], [178.0, 1305.0], [191.0, 1295.0], [189.0, 1296.5], [188.0, 1292.0], [186.0, 1301.0], [199.0, 1292.0], [196.0, 1284.0], [195.0, 1292.5], [193.0, 1297.5], [206.0, 807.0], [205.0, 675.0], [204.0, 108.0], [202.0, 104.5], [201.0, 1292.5], [200.0, 1293.0], [208.0, 89.5], [215.0, 1280.0], [214.0, 1279.0], [212.0, 1280.5], [209.0, 1286.5], [223.0, 1275.0], [221.0, 1274.3333333333333], [220.0, 1276.0], [219.0, 1258.0], [216.0, 1278.0], [230.0, 98.0], [229.0, 79.0], [228.0, 795.2], [226.0, 488.33333333333337], [225.0, 83.0], [231.0, 1264.3333333333333], [239.0, 1260.0], [238.0, 1259.5], [237.0, 1264.0], [234.0, 1264.0], [247.0, 97.5], [245.0, 1024.2], [246.0, 1257.0], [244.0, 1259.0], [241.0, 1244.0], [253.0, 94.0], [252.0, 860.0], [251.0, 96.0], [250.0, 75.0], [249.0, 966.5], [254.0, 1243.6666666666667], [269.0, 953.5], [270.0, 99.0], [268.0, 88.0], [267.0, 1241.0], [265.0, 1241.5], [264.0, 1247.0], [262.0, 1246.5], [260.0, 1246.0], [258.0, 1233.0], [257.0, 1246.0], [256.0, 1258.0], [273.0, 858.3333333333334], [275.0, 94.66666666666667], [272.0, 865.6666666666666], [286.0, 1245.3333333333333], [284.0, 1249.0], [283.0, 1241.0], [281.0, 1228.3333333333333], [278.0, 1243.0], [277.0, 1247.5], [301.0, 110.0], [295.0, 487.6666666666667], [297.0, 543.4], [292.0, 90.0], [294.0, 1241.0], [291.0, 389.5], [290.0, 1246.0], [289.0, 1233.5], [288.0, 1208.0], [303.0, 868.3333333333334], [302.0, 661.5], [299.0, 1248.0], [296.0, 1244.5], [305.0, 953.0], [316.0, 376.0], [317.0, 1207.0], [306.0, 101.0], [313.0, 336.2], [315.0, 109.5], [314.0, 1089.75], [312.0, 100.5], [311.0, 485.6666666666667], [309.0, 101.0], [308.0, 103.0], [304.0, 682.0], [319.0, 107.75], [318.0, 469.0], [321.0, 118.5], [331.0, 109.0], [329.0, 678.5], [327.0, 115.0], [320.0, 1229.0], [326.0, 1246.0], [325.0, 951.0], [324.0, 96.5], [322.0, 869.3333333333334], [332.0, 1234.0], [334.0, 1214.0], [328.0, 1209.0], [333.0, 1247.0], [349.0, 801.2], [351.0, 145.0], [347.0, 479.0], [345.0, 497.3333333333333], [350.0, 553.3333333333333], [348.0, 205.0], [346.0, 1243.0], [341.0, 1249.5], [338.0, 1249.0], [337.0, 1256.0], [339.0, 1239.3333333333333], [366.0, 214.8666666666667], [367.0, 163.72727272727272], [364.0, 164.72727272727272], [354.0, 595.8], [355.0, 402.2], [352.0, 181.0], [353.0, 175.0], [362.0, 168.3846153846154], [363.0, 321.2], [361.0, 271.54545454545456], [360.0, 243.3571428571429], [359.0, 171.0], [358.0, 373.9333333333333], [357.0, 333.7142857142857], [356.0, 292.4444444444444], [365.0, 317.0], [369.0, 146.50000000000003], [368.0, 505.1666666666667], [375.0, 861.0], [377.0, 122.5], [379.0, 727.5], [378.0, 997.5], [376.0, 132.0], [374.0, 130.33333333333334], [373.0, 472.4], [372.0, 134.90909090909093], [370.0, 313.83333333333337], [371.0, 139.75], [383.0, 234.0], [382.0, 991.75], [397.0, 744.0], [385.0, 422.2], [398.0, 978.0], [396.0, 219.5], [386.0, 1244.0], [394.0, 985.0], [393.0, 740.0], [392.0, 219.0], [390.0, 1253.6666666666667], [388.0, 1215.0], [414.0, 727.5], [402.0, 478.25], [401.0, 998.0], [415.0, 560.0], [408.0, 227.0], [413.0, 227.0], [412.0, 730.0], [403.0, 227.0], [411.0, 236.0], [409.0, 739.125], [407.0, 222.0], [406.0, 1229.3333333333333], [431.0, 496.0], [418.0, 570.6666666666667], [416.0, 232.0], [424.0, 229.0], [425.0, 532.0], [427.0, 467.6], [426.0, 465.6], [423.0, 434.0], [422.0, 554.3333333333333], [420.0, 1232.0], [430.0, 280.0], [429.0, 856.4], [428.0, 468.0], [419.0, 1241.75], [440.0, 391.75], [445.0, 269.5], [446.0, 581.1111111111111], [444.0, 293.125], [435.0, 273.0], [434.0, 283.4], [433.0, 638.2], [432.0, 310.0], [443.0, 581.3333333333333], [442.0, 618.0], [441.0, 258.8333333333333], [447.0, 309.25], [439.0, 563.7142857142857], [437.0, 294.0], [438.0, 285.47368421052636], [436.0, 572.1], [462.0, 253.5], [463.0, 256.0], [461.0, 513.0], [460.0, 446.9], [458.0, 583.6666666666667], [459.0, 752.0], [456.0, 263.75], [455.0, 674.2857142857143], [449.0, 283.625], [448.0, 287.0], [450.0, 521.25], [451.0, 262.75], [452.0, 422.6666666666667], [454.0, 304.0], [453.0, 740.5], [457.0, 282.3333333333333], [464.0, 234.0], [475.0, 492.0], [474.0, 285.0], [473.0, 731.25], [472.0, 583.0], [471.0, 575.6666666666667], [470.0, 244.5], [469.0, 501.25], [468.0, 238.0], [467.0, 262.6666666666667], [466.0, 268.5], [465.0, 1210.75], [478.0, 671.0], [477.0, 284.0], [476.0, 757.0], [479.0, 277.0], [488.0, 270.8333333333333], [491.0, 270.0], [490.0, 276.5], [489.0, 847.0], [487.0, 645.8], [481.0, 819.7142857142857], [480.0, 468.2], [486.0, 260.75], [485.0, 665.4], [484.0, 457.6], [483.0, 255.6], [492.0, 744.3333333333334], [493.0, 276.0], [495.0, 293.0], [494.0, 272.0], [482.0, 281.25], [499.0, 270.5], [497.0, 286.5], [511.0, 1212.3333333333333], [508.0, 1213.75], [507.0, 1210.0], [506.0, 1205.0], [503.0, 1207.0], [502.0, 1221.3333333333333], [501.0, 1222.0], [500.0, 1201.0], [518.0, 584.6666666666667], [519.0, 729.5], [539.0, 1222.0], [538.0, 1222.0], [528.0, 779.5], [541.0, 1238.0], [517.0, 923.6666666666666], [516.0, 748.5], [515.0, 901.3333333333334], [514.0, 295.0], [513.0, 761.5], [527.0, 743.0], [526.0, 755.0], [525.0, 900.6666666666666], [524.0, 767.0], [523.0, 257.0], [522.0, 1217.0], [521.0, 1213.0], [520.0, 1213.0], [530.0, 922.0], [532.0, 1232.0], [531.0, 1241.0], [535.0, 1234.5], [533.0, 1247.0], [529.0, 261.0], [548.0, 904.3333333333334], [553.0, 735.0], [552.0, 742.0], [551.0, 980.75], [571.0, 1205.3333333333333], [569.0, 1197.0], [560.0, 268.0], [574.0, 1201.3333333333333], [550.0, 319.0], [549.0, 277.0], [547.0, 275.0], [546.0, 910.0], [559.0, 974.75], [544.0, 1211.0], [558.0, 302.0], [557.0, 273.0], [556.0, 759.0], [555.0, 1188.0], [554.0, 1205.0], [564.0, 263.5], [563.0, 1199.5], [567.0, 1184.0], [566.0, 1195.0], [562.0, 754.0], [581.0, 1021.0], [584.0, 577.6666666666667], [585.0, 1195.0], [591.0, 1205.0], [588.0, 1204.6666666666667], [582.0, 266.0], [601.0, 1202.3333333333333], [603.0, 274.0], [602.0, 274.0], [605.0, 891.6666666666666], [604.0, 884.3333333333334], [580.0, 275.0], [579.0, 519.5], [578.0, 900.0], [577.0, 268.0], [607.0, 891.3333333333334], [592.0, 1187.0], [598.0, 1193.6666666666667], [595.0, 1191.3333333333333], [606.0, 326.0], [634.0, 279.0], [609.0, 280.5], [608.0, 327.0], [623.0, 882.0], [622.0, 304.0], [620.0, 1193.5], [618.0, 1195.6666666666667], [617.0, 1184.5], [632.0, 577.0], [614.0, 1184.0], [615.0, 1182.0], [612.0, 1184.0], [610.0, 1185.3333333333333], [633.0, 1173.0], [630.0, 275.0], [629.0, 278.0], [628.0, 746.0], [627.0, 893.0], [626.0, 278.0], [625.0, 956.75], [624.0, 327.0], [638.0, 1174.75], [636.0, 1187.0], [635.0, 1181.0], [644.0, 725.5], [651.0, 592.6666666666667], [654.0, 1166.0], [652.0, 1167.5], [650.0, 284.0], [649.0, 304.0], [648.0, 955.0], [647.0, 276.0], [665.0, 732.0], [664.0, 744.5], [667.0, 324.0], [669.0, 1172.0], [668.0, 1163.5], [661.0, 308.0], [660.0, 1168.0], [659.0, 1163.0], [658.0, 1169.5], [670.0, 1164.5], [663.0, 726.0], [662.0, 639.4], [666.0, 280.0], [646.0, 874.0], [645.0, 334.0], [643.0, 725.5], [641.0, 1171.0], [655.0, 1165.0], [697.0, 333.25], [703.0, 349.25], [693.0, 324.25], [692.0, 302.4], [691.0, 523.0], [690.0, 962.0], [694.0, 638.875], [695.0, 333.5], [701.0, 310.5], [700.0, 1166.0], [702.0, 1166.6666666666667], [699.0, 465.3333333333333], [698.0, 751.0], [696.0, 533.625], [678.0, 1166.0], [677.0, 1166.0], [676.0, 1164.5], [674.0, 1172.5], [673.0, 1168.0], [672.0, 1172.0], [687.0, 1172.0], [686.0, 1165.0], [685.0, 1171.0], [683.0, 1162.5], [681.0, 1166.6666666666667], [710.0, 514.0], [716.0, 558.5000000000001], [717.0, 422.5833333333333], [719.0, 475.38461538461536], [705.0, 355.0], [704.0, 885.0], [707.0, 573.2727272727274], [706.0, 330.3333333333333], [709.0, 359.90909090909093], [708.0, 497.8], [718.0, 358.0], [715.0, 346.7142857142857], [714.0, 341.0], [712.0, 391.71428571428567], [713.0, 487.4545454545455], [711.0, 329.84615384615375], [728.0, 832.8], [729.0, 737.5], [720.0, 481.5], [735.0, 338.0], [734.0, 870.6666666666666], [733.0, 345.0], [732.0, 871.6666666666666], [731.0, 780.5], [730.0, 384.0], [722.0, 619.6666666666666], [721.0, 356.25], [724.0, 378.1666666666667], [723.0, 342.0], [726.0, 352.6], [727.0, 368.5], [725.0, 700.2857142857142], [766.0, 378.0], [742.0, 425.0], [741.0, 354.0], [738.0, 1112.0], [737.0, 1128.6666666666667], [751.0, 1108.5], [750.0, 1111.0], [748.0, 1110.25], [758.0, 936.75], [759.0, 1104.0], [757.0, 389.0], [767.0, 746.0], [753.0, 1110.6666666666667], [756.0, 1113.0], [754.0, 1120.0], [765.0, 750.5], [764.0, 1109.5], [763.0, 373.0], [762.0, 750.5], [760.0, 1097.0], [743.0, 1116.4], [775.0, 401.0], [770.0, 386.5], [773.0, 487.25], [774.0, 403.5], [785.0, 584.5384615384614], [788.0, 483.06666666666666], [789.0, 604.5], [791.0, 452.22222222222223], [790.0, 454.3], [787.0, 522.75], [786.0, 437.1818181818182], [784.0, 418.7222222222222], [799.0, 429.75], [798.0, 763.0], [797.0, 589.4], [796.0, 634.6666666666666], [795.0, 436.0], [794.0, 514.9], [792.0, 614.5], [793.0, 541.1428571428572], [772.0, 571.25], [771.0, 808.5714285714286], [769.0, 387.4], [768.0, 389.0], [780.0, 473.8], [781.0, 421.44444444444446], [783.0, 426.8421052631579], [782.0, 419.2000000000001], [779.0, 550.1], [776.0, 488.875], [778.0, 402.8333333333333], [777.0, 469.79999999999995], [826.0, 500.0], [802.0, 468.5], [803.0, 438.5], [805.0, 1079.0], [804.0, 1080.0], [800.0, 930.0], [801.0, 1075.0], [809.0, 493.0], [808.0, 782.5], [807.0, 642.75], [825.0, 696.0], [824.0, 786.5], [806.0, 483.3333333333333], [817.0, 569.4444444444445], [816.0, 523.3333333333334], [831.0, 536.0], [828.0, 540.0], [827.0, 1064.0], [829.0, 709.0], [830.0, 787.5], [819.0, 512.4], [818.0, 789.6666666666667], [821.0, 512.0], [820.0, 791.75], [823.0, 510.0], [822.0, 509.0], [815.0, 636.2222222222222], [814.0, 692.0], [813.0, 490.0], [812.0, 501.5], [811.0, 846.8], [810.0, 692.6666666666666], [852.0, 561.9090909090908], [835.0, 709.9166666666666], [839.0, 1046.5], [858.0, 570.2857142857143], [848.0, 729.0], [862.0, 818.0], [863.0, 608.0], [859.0, 591.4], [860.0, 801.8181818181818], [861.0, 596.6666666666666], [857.0, 580.8181818181819], [856.0, 571.625], [833.0, 537.5], [832.0, 793.0], [847.0, 566.0], [846.0, 808.5], [845.0, 1061.6666666666667], [842.0, 1050.6666666666667], [840.0, 1033.0], [855.0, 649.0], [854.0, 572.6153846153846], [853.0, 664.375], [850.0, 771.7142857142857], [851.0, 568.25], [849.0, 561.8571428571429], [889.0, 1022.0], [880.0, 620.0], [865.0, 782.0], [866.0, 1042.0], [869.0, 1018.0], [867.0, 1050.6666666666667], [888.0, 1030.0], [871.0, 1035.6666666666667], [890.0, 1029.0], [895.0, 639.0], [894.0, 1034.0], [883.0, 821.5], [885.0, 1031.0], [882.0, 948.2], [881.0, 626.0], [879.0, 893.6666666666666], [878.0, 614.0], [877.0, 819.5], [876.0, 631.0], [875.0, 1043.0], [872.0, 1038.0], [920.0, 842.0], [900.0, 721.0], [908.0, 632.5], [910.0, 595.0], [909.0, 1017.0], [897.0, 921.5], [896.0, 622.5], [907.0, 823.6666666666666], [905.0, 609.5], [906.0, 604.0], [904.0, 887.5], [903.0, 632.0], [921.0, 743.6666666666666], [923.0, 1005.5], [925.0, 710.2], [926.0, 815.5], [912.0, 704.6], [927.0, 814.25], [914.0, 591.0], [915.0, 1012.0], [913.0, 935.25], [917.0, 602.0], [916.0, 802.0], [919.0, 919.25], [918.0, 638.0], [902.0, 781.8], [901.0, 620.0], [899.0, 609.0], [898.0, 628.625], [956.0, 635.0], [932.0, 613.0], [934.0, 639.0], [935.0, 869.0], [953.0, 553.5], [952.0, 740.6666666666666], [955.0, 605.3333333333334], [954.0, 832.1666666666666], [957.0, 764.8], [959.0, 643.125], [958.0, 613.8], [944.0, 850.75], [945.0, 551.0], [933.0, 939.75], [930.0, 813.5], [931.0, 1034.0], [929.0, 845.0], [928.0, 646.0], [943.0, 611.0], [942.0, 942.0], [941.0, 984.5], [938.0, 1039.6666666666667], [949.0, 691.2], [947.0, 944.0], [951.0, 587.0], [950.0, 665.0], [946.0, 868.0], [985.0, 628.0588235294118], [989.0, 625.7894736842105], [991.0, 687.9411764705883], [988.0, 656.0], [987.0, 637.0769230769232], [986.0, 628.2857142857142], [990.0, 685.4230769230768], [984.0, 628.3333333333333], [967.0, 584.6666666666666], [966.0, 774.125], [964.0, 646.8333333333333], [965.0, 638.25], [962.0, 694.8333333333334], [961.0, 627.3333333333333], [960.0, 702.0], [963.0, 800.625], [975.0, 610.3571428571429], [974.0, 674.5], [973.0, 685.6153846153846], [972.0, 603.3333333333334], [971.0, 709.0], [970.0, 625.8571428571429], [969.0, 783.6], [968.0, 619.4444444444443], [982.0, 639.0], [983.0, 691.2857142857142], [981.0, 626.0], [979.0, 623.4545454545455], [980.0, 745.9333333333335], [978.0, 665.3], [976.0, 630.8666666666667], [977.0, 600.4166666666666], [1022.0, 877.4], [1012.0, 640.6666666666666], [1023.0, 635.0], [1009.0, 643.8571428571429], [1008.0, 734.3], [1020.0, 655.5555555555555], [1021.0, 665.0], [1019.0, 754.8333333333334], [1018.0, 729.5], [1017.0, 686.2500000000001], [1016.0, 659.5], [999.0, 838.8571428571429], [998.0, 706.0], [997.0, 642.0], [996.0, 594.875], [995.0, 684.1999999999999], [994.0, 626.1666666666667], [993.0, 634.9285714285716], [992.0, 713.2], [1007.0, 614.5], [1006.0, 799.5999999999999], [1005.0, 596.6], [1004.0, 622.1428571428572], [1003.0, 610.75], [1002.0, 688.1428571428571], [1001.0, 597.0], [1000.0, 628.1666666666666], [1015.0, 740.25], [1014.0, 720.2], [1013.0, 724.1666666666666], [1011.0, 803.8571428571429], [1010.0, 621.1666666666667], [1032.0, 845.5], [1030.0, 632.0], [1046.0, 853.0], [1048.0, 667.0], [1024.0, 851.5], [1054.0, 845.5], [1052.0, 790.3333333333334], [1050.0, 673.3333333333334], [1026.0, 689.0], [1028.0, 647.0], [1034.0, 845.6666666666666], [1044.0, 848.0909090909091], [1042.0, 817.0], [1040.0, 648.7142857142857], [1038.0, 645.6666666666666], [1064.0, 804.625], [1068.0, 827.6], [1066.0, 734.0], [1070.0, 799.3333333333334], [1062.0, 683.7333333333333], [1060.0, 688.8], [1058.0, 673.2857142857142], [1056.0, 743.5], [1072.0, 691.0], [1074.0, 889.0], [1076.0, 784.0], [1080.0, 874.5], [1078.0, 845.4], [1082.0, 866.0], [1084.0, 1090.0], [1086.0, 1058.0], [1146.0, 1028.0], [1090.0, 835.8], [1118.0, 974.0], [1108.0, 935.0], [1106.0, 887.0], [1104.0, 923.25], [1092.0, 706.0], [1122.0, 704.0], [1120.0, 984.0], [1126.0, 1011.0], [1124.0, 976.75], [1134.0, 1000.5], [1128.0, 1019.0], [1150.0, 1020.0], [1148.0, 1050.0], [1144.0, 1025.0], [1142.0, 1019.0], [1138.0, 1020.0], [1094.0, 1087.0], [1206.0, 802.5], [1184.0, 702.0], [1202.0, 838.4], [1162.0, 831.4], [1194.0, 716.0], [1192.0, 1024.0], [1196.0, 916.0], [1198.0, 896.8], [1182.0, 869.0], [1156.0, 1037.0], [1152.0, 1032.0], [1160.0, 1031.0], [1158.0, 1031.6666666666667], [1172.0, 1030.0], [1170.0, 1030.5], [1168.0, 1032.0], [1204.0, 814.6], [1208.0, 787.7777777777778], [1210.0, 793.125], [1212.0, 858.2941176470587], [1214.0, 813.2500000000001], [1200.0, 839.8], [1166.0, 1030.0], [1164.0, 1010.0], [1220.0, 775.2727272727273], [1216.0, 800.6428571428571], [1246.0, 782.5], [1218.0, 810.7500000000001], [1222.0, 809.8333333333334], [1224.0, 806.8], [1226.0, 773.6666666666666], [1228.0, 819.3333333333334], [1248.0, 765.0], [1230.0, 743.0], [1274.0, 967.0], [1272.0, 980.5], [1250.0, 856.3333333333334], [1252.0, 788.75], [1256.0, 943.5], [1254.0, 732.0], [1258.0, 808.5], [1262.0, 892.0], [1244.0, 731.0], [1242.0, 782.8571428571429], [1240.0, 837.3333333333333], [1238.0, 752.3333333333334], [1236.0, 740.0], [1234.0, 955.2], [1232.0, 852.6], [1334.0, 795.5], [1332.0, 809.4], [1330.0, 945.0], [1328.0, 946.0], [1292.0, 967.0], [1336.0, 857.5], [1290.0, 922.5], [1286.0, 895.0], [1284.0, 916.3333333333334], [1312.0, 780.75], [1320.0, 946.0], [1316.0, 962.0], [1326.0, 935.0], [1322.0, 956.5], [1342.0, 892.5], [1340.0, 874.5], [1338.0, 892.5], [1310.0, 902.0], [1282.0, 977.5], [1308.0, 968.0], [1306.0, 960.3333333333334], [1304.0, 952.0], [1300.0, 953.0], [1298.0, 955.0], [1376.0, 832.0], [1374.0, 815.0], [1344.0, 811.0], [1350.0, 931.5], [1346.0, 929.3333333333334], [1358.0, 932.5], [1354.0, 931.0], [1372.0, 877.5], [1370.0, 854.0], [1368.0, 809.0], [1366.0, 856.0], [1360.0, 938.5], [1394.0, 816.0], [1396.0, 918.3333333333334], [1400.0, 759.0], [1404.0, 902.0], [1398.0, 813.2], [1378.0, 811.75], [1382.0, 800.5], [1380.0, 854.25], [1386.0, 817.75], [1384.0, 837.0], [1392.0, 764.0], [1390.0, 866.4], [1388.0, 760.75], [1420.0, 821.0], [1422.0, 763.0], [1458.0, 783.0], [1456.0, 817.625], [1462.0, 864.6], [1464.0, 750.0], [1470.0, 899.0], [1468.0, 880.0], [1466.0, 881.3333333333334], [1460.0, 815.5], [1418.0, 757.0], [1416.0, 883.25], [1440.0, 826.4], [1438.0, 756.0], [1410.0, 941.0], [1408.0, 925.6666666666666], [1414.0, 911.0], [1412.0, 881.0], [1436.0, 769.0], [1434.0, 882.0], [1426.0, 939.0], [1424.0, 921.0], [1454.0, 823.0], [1452.0, 795.1666666666666], [1450.0, 830.7500000000001], [1448.0, 812.4285714285714], [1446.0, 774.5714285714286], [1444.0, 787.0], [1442.0, 821.7142857142857], [1484.0, 838.6], [1476.0, 889.3333333333334], [1480.0, 802.5882352941177], [1488.0, 831.0], [1486.0, 811.5714285714287], [1522.0, 915.0], [1520.0, 826.0], [1528.0, 901.0], [1526.0, 837.0], [1532.0, 915.0], [1506.0, 910.5], [1504.0, 872.0], [1510.0, 831.0], [1508.0, 891.0], [1514.0, 871.0], [1512.0, 940.0], [1518.0, 905.6666666666666], [1516.0, 919.5], [1530.0, 912.0], [1482.0, 796.5], [1494.0, 845.4666666666667], [1496.0, 847.7500000000001], [1500.0, 864.0], [1502.0, 852.3333333333334], [1498.0, 843.6666666666667], [1474.0, 800.0], [1472.0, 809.0], [1492.0, 833.6666666666667], [1490.0, 832.5], [1478.0, 866.6666666666666], [1586.0, 878.4], [1550.0, 821.5], [1564.0, 844.5], [1538.0, 907.5], [1536.0, 867.5], [1548.0, 933.0], [1546.0, 922.0], [1562.0, 925.0], [1560.0, 842.5], [1558.0, 924.5], [1556.0, 933.0], [1554.0, 821.0], [1552.0, 862.0], [1592.0, 875.5], [1572.0, 881.0], [1570.0, 890.5], [1576.0, 924.6666666666666], [1574.0, 916.0], [1590.0, 891.3333333333334], [1588.0, 900.6666666666666], [1584.0, 929.0], [1582.0, 892.0], [1578.0, 864.0], [1622.0, 884.4], [1616.0, 873.3333333333334], [1618.0, 858.5], [1620.0, 877.6666666666666], [1614.0, 890.6666666666667], [1612.0, 856.6], [1610.0, 898.0], [1608.0, 848.6666666666666], [1606.0, 909.0], [1604.0, 902.0], [1602.0, 881.0], [1628.0, 929.0], [1626.0, 882.6666666666666], [1624.0, 908.8], [1029.0, 823.6], [1045.0, 614.5], [1047.0, 778.3333333333334], [1049.0, 841.5], [1051.0, 1027.75], [1055.0, 663.0], [1053.0, 787.5], [1027.0, 820.3333333333334], [1025.0, 640.0], [1031.0, 815.5], [1033.0, 851.0], [1035.0, 661.0], [1043.0, 654.6666666666666], [1041.0, 774.3333333333334], [1039.0, 655.6666666666666], [1059.0, 795.5555555555555], [1063.0, 686.9285714285714], [1065.0, 730.4285714285714], [1067.0, 682.6666666666667], [1071.0, 805.0], [1069.0, 685.2500000000001], [1061.0, 782.9090909090909], [1057.0, 680.5], [1087.0, 1045.0], [1085.0, 1058.0], [1077.0, 675.5], [1075.0, 1040.0], [1079.0, 801.6666666666666], [1081.0, 757.4], [1083.0, 719.75], [1037.0, 630.0], [1127.0, 1009.0], [1145.0, 1044.0], [1091.0, 876.5], [1089.0, 1071.0], [1097.0, 992.0], [1093.0, 1079.5], [1117.0, 956.0], [1115.0, 944.0], [1113.0, 923.0], [1111.0, 907.25], [1105.0, 880.75], [1149.0, 1030.0], [1125.0, 995.0], [1141.0, 1022.0], [1137.0, 1019.5], [1135.0, 995.5], [1133.0, 993.5], [1129.0, 1029.0], [1209.0, 775.7499999999999], [1165.0, 863.0], [1185.0, 927.6666666666666], [1189.0, 1024.0], [1193.0, 1032.0], [1191.0, 1026.6666666666667], [1195.0, 712.0], [1197.0, 723.5], [1199.0, 716.6666666666666], [1183.0, 874.5], [1155.0, 1037.0], [1153.0, 1036.0], [1163.0, 1030.0], [1159.0, 1037.0], [1181.0, 1035.0], [1179.0, 1033.0], [1177.0, 1035.0], [1175.0, 1032.5], [1173.0, 1034.0], [1171.0, 1032.0], [1203.0, 801.2], [1205.0, 831.4], [1207.0, 792.625], [1213.0, 783.1999999999999], [1215.0, 786.9999999999999], [1211.0, 774.0714285714286], [1201.0, 717.3333333333334], [1167.0, 1030.0], [1229.0, 751.6666666666666], [1221.0, 831.6666666666666], [1245.0, 739.0], [1247.0, 917.5], [1219.0, 769.1428571428571], [1223.0, 782.8333333333334], [1227.0, 939.5], [1225.0, 807.7692307692307], [1249.0, 896.2499999999999], [1231.0, 744.5], [1265.0, 984.0], [1273.0, 984.5], [1269.0, 965.6666666666666], [1279.0, 943.0], [1277.0, 976.25], [1251.0, 867.5], [1253.0, 901.3333333333334], [1255.0, 729.0], [1259.0, 913.3333333333334], [1263.0, 803.6666666666666], [1261.0, 993.5], [1257.0, 811.6666666666666], [1217.0, 798.3333333333333], [1243.0, 732.5], [1241.0, 737.75], [1239.0, 809.4285714285714], [1237.0, 850.8], [1235.0, 804.25], [1233.0, 745.6666666666666], [1333.0, 912.3333333333334], [1287.0, 899.5], [1291.0, 846.0], [1331.0, 809.4], [1295.0, 965.3333333333334], [1335.0, 878.75], [1289.0, 793.5], [1343.0, 888.6666666666666], [1315.0, 955.5], [1313.0, 955.0], [1321.0, 921.0], [1319.0, 954.0], [1327.0, 942.75], [1325.0, 952.0], [1341.0, 829.0], [1339.0, 864.0], [1337.0, 900.6666666666666], [1311.0, 816.0], [1285.0, 970.0], [1281.0, 975.0], [1309.0, 829.0], [1307.0, 929.0], [1303.0, 963.5], [1297.0, 968.0], [1393.0, 888.0], [1373.0, 851.0], [1345.0, 757.5], [1359.0, 934.0], [1357.0, 922.0], [1351.0, 938.0], [1375.0, 911.5], [1371.0, 865.0], [1369.0, 873.0], [1367.0, 884.0], [1365.0, 917.0], [1363.0, 934.3333333333334], [1395.0, 809.0], [1397.0, 822.0], [1377.0, 882.75], [1405.0, 911.6666666666666], [1403.0, 916.0], [1399.0, 875.75], [1383.0, 868.0], [1381.0, 754.0], [1379.0, 823.25], [1391.0, 806.0], [1387.0, 864.4], [1421.0, 866.5], [1423.0, 870.3333333333334], [1459.0, 813.0], [1457.0, 819.0], [1463.0, 821.0], [1465.0, 800.0], [1471.0, 853.6666666666666], [1469.0, 825.0], [1461.0, 794.0], [1419.0, 854.5], [1417.0, 835.0], [1441.0, 826.0], [1439.0, 829.0], [1413.0, 940.0], [1409.0, 934.0], [1437.0, 769.0], [1435.0, 830.5], [1431.0, 924.0], [1429.0, 881.0], [1427.0, 914.0], [1425.0, 878.0], [1455.0, 791.5], [1453.0, 841.5], [1451.0, 780.3333333333334], [1449.0, 789.4444444444445], [1447.0, 809.4285714285714], [1445.0, 788.5], [1443.0, 900.8333333333334], [1479.0, 788.0], [1483.0, 828.3333333333333], [1481.0, 798.3333333333333], [1487.0, 848.5714285714286], [1505.0, 854.0], [1511.0, 902.5], [1507.0, 906.0], [1525.0, 847.8750000000001], [1523.0, 914.0], [1521.0, 901.0], [1533.0, 882.0], [1527.0, 882.0], [1535.0, 862.0], [1495.0, 848.375], [1493.0, 815.5], [1491.0, 879.75], [1489.0, 842.8571428571429], [1485.0, 818.0], [1477.0, 865.5], [1475.0, 802.0], [1473.0, 862.5714285714286], [1503.0, 891.75], [1501.0, 861.0], [1499.0, 868.3333333333334], [1497.0, 856.0], [1593.0, 898.0], [1549.0, 850.0], [1551.0, 876.6], [1587.0, 894.0], [1585.0, 827.0], [1553.0, 874.6666666666666], [1555.0, 906.5], [1563.0, 836.5], [1567.0, 920.0], [1539.0, 924.0], [1543.0, 876.0], [1541.0, 894.5], [1547.0, 905.0], [1545.0, 862.0], [1599.0, 908.5], [1569.0, 902.25], [1573.0, 865.0], [1571.0, 892.5], [1577.0, 907.0], [1575.0, 827.0], [1583.0, 918.5], [1581.0, 898.0], [1579.0, 909.3333333333334], [1597.0, 911.0], [1595.0, 883.0], [1591.0, 887.5], [1589.0, 880.75], [1629.0, 911.0], [1617.0, 883.0], [1621.0, 902.0], [1623.0, 900.3333333333334], [1619.0, 891.1666666666667], [1615.0, 885.0000000000001], [1613.0, 895.0], [1611.0, 886.1428571428571], [1609.0, 902.5], [1607.0, 896.0], [1605.0, 930.0], [1603.0, 868.25], [1601.0, 905.0], [1627.0, 889.3333333333334], [1625.0, 892.0], [1.0, 1269.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[841.001000000001, 696.5689999999975]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[8.0, 97.5], [9.0, 95.0], [11.0, 102.0], [12.0, 96.5], [14.0, 96.0], [16.0, 93.0], [17.0, 95.0], [20.0, 95.66666666666666], [22.0, 95.0], [24.0, 94.5], [26.0, 93.0], [27.0, 92.0], [30.0, 90.0], [31.0, 94.75], [32.0, 95.0], [33.0, 92.0], [35.0, 93.5], [34.0, 93.33333333333333], [37.0, 96.0], [36.0, 97.0], [39.0, 86.0], [38.0, 98.0], [41.0, 97.0], [40.0, 96.5], [43.0, 150.0], [42.0, 97.0], [45.0, 88.5], [44.0, 96.0], [46.0, 93.66666666666667], [47.0, 85.0], [48.0, 90.57142857142857], [49.0, 95.5], [51.0, 90.8], [53.0, 101.33333333333333], [52.0, 94.83333333333334], [54.0, 106.6], [55.0, 104.125], [57.0, 98.25000000000001], [56.0, 98.5], [58.0, 97.39999999999999], [59.0, 98.85714285714285], [61.0, 98.55882352941178], [60.0, 98.88000000000002], [63.0, 94.69696969696967], [62.0, 96.80000000000001], [67.0, 93.3921568627451], [66.0, 95.38095238095238], [64.0, 93.8], [65.0, 94.00000000000001], [68.0, 94.7037037037037], [71.0, 93.10526315789473], [70.0, 94.19148936170211], [69.0, 92.58333333333333], [72.0, 91.99999999999999], [75.0, 95.6296296296296], [74.0, 91.28571428571428], [73.0, 91.39999999999999], [78.0, 97.70370370370371], [79.0, 92.61904761904762], [77.0, 94.19999999999999], [76.0, 92.17857142857142], [82.0, 91.87037037037037], [81.0, 92.4090909090909], [80.0, 93.06896551724138], [83.0, 92.96969696969694], [84.0, 92.51063829787235], [86.0, 95.6341463414634], [87.0, 92.25641025641025], [85.0, 93.95238095238096], [90.0, 93.01923076923077], [89.0, 92.23728813559323], [88.0, 93.42857142857143], [91.0, 93.3921568627451], [94.0, 94.24561403508774], [92.0, 95.18333333333332], [95.0, 92.53968253968253], [93.0, 94.95454545454545], [96.0, 96.19298245614036], [97.0, 96.34375], [99.0, 97.33333333333331], [98.0, 96.2258064516129], [102.0, 102.60526315789474], [100.0, 97.0], [103.0, 98.0731707317073], [101.0, 97.04545454545456], [107.0, 100.69491525423726], [106.0, 101.54166666666667], [105.0, 98.43396226415094], [104.0, 97.32352941176472], [111.0, 95.31764705882355], [110.0, 103.77611940298506], [108.0, 101.84905660377358], [109.0, 98.31746031746033], [112.0, 102.09722222222224], [114.0, 99.97727272727268], [115.0, 101.9782608695652], [113.0, 101.42553191489361], [119.0, 103.925], [117.0, 98.2558139534884], [118.0, 100.54761904761904], [116.0, 102.46000000000001], [122.0, 104.96428571428571], [121.0, 105.27999999999999], [120.0, 101.1290322580645], [123.0, 103.54285714285714], [127.0, 106.6969696969697], [125.0, 102.8095238095238], [124.0, 100.8409090909091], [126.0, 104.88235294117646], [129.0, 108.5], [128.0, 108.52631578947368], [135.0, 108.67647058823528], [133.0, 109.21951219512198], [132.0, 106.81818181818181], [131.0, 110.39999999999999], [134.0, 113.74999999999999], [130.0, 103.73333333333335], [139.0, 110.84848484848484], [140.0, 110.14893617021276], [143.0, 116.94339622641512], [142.0, 111.14634146341461], [136.0, 109.53125], [138.0, 111.47499999999998], [141.0, 106.26666666666667], [137.0, 105.86666666666666], [151.0, 113.13793103448276], [147.0, 112.73684210526315], [145.0, 111.75000000000001], [144.0, 113.18333333333332], [150.0, 111.84090909090908], [148.0, 107.9122807017544], [146.0, 113.57692307692311], [149.0, 114.3404255319149], [153.0, 110.9782608695652], [159.0, 113.63636363636363], [155.0, 114.12903225806453], [156.0, 107.20833333333331], [154.0, 117.80434782608691], [158.0, 114.65], [157.0, 117.8148148148148], [152.0, 110.39999999999999], [165.0, 110.57142857142857], [166.0, 107.11764705882352], [160.0, 106.71428571428572], [161.0, 115.69230769230771], [163.0, 114.00000000000001], [162.0, 117.05263157894736], [167.0, 114.6], [164.0, 115.99999999999999], [169.0, 105.66666666666667], [174.0, 126.27272727272728], [173.0, 122.75], [172.0, 111.11111111111111], [171.0, 120.2], [170.0, 119.8], [168.0, 107.47826086956522], [175.0, 124.875], [177.0, 127.85714285714288], [176.0, 106.16666666666667], [182.0, 120.33333333333334], [181.0, 125.71428571428571], [179.0, 129.5], [178.0, 127.0], [183.0, 126.0], [180.0, 128.33333333333334], [191.0, 108.59090909090908], [189.0, 124.0], [188.0, 123.27272727272728], [190.0, 117.5], [186.0, 113.75], [187.0, 121.5], [185.0, 119.6], [184.0, 134.38888888888889], [196.0, 114.77777777777779], [194.0, 109.50000000000001], [193.0, 116.83333333333333], [192.0, 107.0], [199.0, 110.90909090909092], [197.0, 105.33333333333333], [198.0, 113.8], [195.0, 107.25], [203.0, 117.0], [202.0, 114.875], [201.0, 118.2], [205.0, 116.0], [204.0, 113.63636363636365], [200.0, 120.6], [207.0, 121.15384615384615], [206.0, 113.0], [213.0, 174.71428571428575], [212.0, 204.7395833333333], [215.0, 163.8], [209.0, 123.61538461538461], [208.0, 122.55555555555556], [214.0, 116.14285714285714], [211.0, 123.4], [210.0, 117.00000000000001], [217.0, 157.66666666666669], [218.0, 122.66666666666666], [216.0, 159.66666666666669], [223.0, 144.0], [222.0, 129.66666666666666], [220.0, 129.5], [219.0, 122.2], [221.0, 115.0], [231.0, 100.0], [225.0, 128.0], [226.0, 124.5], [224.0, 147.0], [237.0, 98.0], [235.0, 98.0], [245.0, 215.23529411764707], [246.0, 175.58333333333331], [247.0, 94.66666666666667], [249.0, 243.37735849056602], [248.0, 140.75], [250.0, 90.5]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[122.75460000000005, 107.7482000000001]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1629.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 31083.333333333332, "minX": 1.66901874E12, "maxY": 82916.66666666667, "series": [{"data": [[1.66901874E12, 31083.333333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66901874E12, 82916.66666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901874E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 107.7482000000001, "minX": 1.66901874E12, "maxY": 696.5689999999975, "series": [{"data": [[1.66901874E12, 205.93540000000004]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901874E12, 696.5689999999975]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901874E12, 107.7482000000001]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901874E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 107.71139999999997, "minX": 1.66901874E12, "maxY": 696.4365999999981, "series": [{"data": [[1.66901874E12, 205.92880000000028]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901874E12, 696.4365999999981]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901874E12, 107.71139999999997]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901874E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 8.644800000000009, "minX": 1.66901874E12, "maxY": 9.454999999999986, "series": [{"data": [[1.66901874E12, 8.644800000000009]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901874E12, 9.454999999999986]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901874E12, 9.225800000000003]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901874E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.66901874E12, "maxY": 1418.0, "series": [{"data": [[1.66901874E12, 1418.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66901874E12, 911.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66901874E12, 1289.9899999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66901874E12, 1115.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66901874E12, 5.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66901874E12, 144.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901874E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 95.0, "minX": 4.0, "maxY": 1276.0, "series": [{"data": [[646.0, 95.0], [239.0, 227.0], [947.0, 96.0], [4.0, 1276.0], [1202.0, 99.0], [1169.0, 116.0], [1172.0, 268.0], [1201.0, 613.0], [1214.0, 828.0], [1246.0, 104.0], [1252.0, 1176.5], [1491.0, 148.0], [1592.0, 150.0], [1625.0, 161.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1625.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 95.0, "minX": 4.0, "maxY": 1276.0, "series": [{"data": [[646.0, 95.0], [239.0, 227.0], [947.0, 96.0], [4.0, 1276.0], [1202.0, 99.0], [1169.0, 116.0], [1172.0, 268.0], [1201.0, 612.0], [1214.0, 828.0], [1246.0, 104.0], [1252.0, 1176.5], [1491.0, 148.0], [1592.0, 150.0], [1625.0, 161.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1625.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 250.0, "minX": 1.66901874E12, "maxY": 250.0, "series": [{"data": [[1.66901874E12, 250.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901874E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 250.0, "minX": 1.66901874E12, "maxY": 250.0, "series": [{"data": [[1.66901874E12, 250.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901874E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.66901874E12, "maxY": 83.33333333333333, "series": [{"data": [[1.66901874E12, 83.33333333333333]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66901874E12, 83.33333333333333]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66901874E12, 83.33333333333333]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901874E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 250.0, "minX": 1.66901874E12, "maxY": 250.0, "series": [{"data": [[1.66901874E12, 250.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901874E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

