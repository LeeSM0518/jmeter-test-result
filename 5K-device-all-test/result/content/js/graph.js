/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 1442.0, "series": [{"data": [[0.0, 40.0], [0.1, 48.0], [0.2, 51.0], [0.3, 52.0], [0.4, 55.0], [0.5, 56.0], [0.6, 57.0], [0.7, 58.0], [0.8, 60.0], [0.9, 61.0], [1.0, 61.0], [1.1, 62.0], [1.2, 62.0], [1.3, 62.0], [1.4, 62.0], [1.5, 62.0], [1.6, 63.0], [1.7, 63.0], [1.8, 63.0], [1.9, 63.0], [2.0, 64.0], [2.1, 64.0], [2.2, 64.0], [2.3, 64.0], [2.4, 64.0], [2.5, 64.0], [2.6, 65.0], [2.7, 65.0], [2.8, 65.0], [2.9, 65.0], [3.0, 66.0], [3.1, 66.0], [3.2, 66.0], [3.3, 66.0], [3.4, 66.0], [3.5, 67.0], [3.6, 67.0], [3.7, 67.0], [3.8, 67.0], [3.9, 67.0], [4.0, 67.0], [4.1, 68.0], [4.2, 68.0], [4.3, 68.0], [4.4, 68.0], [4.5, 68.0], [4.6, 68.0], [4.7, 68.0], [4.8, 68.0], [4.9, 68.0], [5.0, 68.0], [5.1, 68.0], [5.2, 69.0], [5.3, 69.0], [5.4, 69.0], [5.5, 69.0], [5.6, 69.0], [5.7, 69.0], [5.8, 69.0], [5.9, 69.0], [6.0, 69.0], [6.1, 70.0], [6.2, 70.0], [6.3, 70.0], [6.4, 70.0], [6.5, 70.0], [6.6, 70.0], [6.7, 70.0], [6.8, 70.0], [6.9, 70.0], [7.0, 70.0], [7.1, 70.0], [7.2, 71.0], [7.3, 71.0], [7.4, 71.0], [7.5, 71.0], [7.6, 71.0], [7.7, 71.0], [7.8, 71.0], [7.9, 71.0], [8.0, 71.0], [8.1, 71.0], [8.2, 71.0], [8.3, 71.0], [8.4, 71.0], [8.5, 71.0], [8.6, 72.0], [8.7, 72.0], [8.8, 72.0], [8.9, 72.0], [9.0, 72.0], [9.1, 72.0], [9.2, 72.0], [9.3, 72.0], [9.4, 72.0], [9.5, 72.0], [9.6, 72.0], [9.7, 72.0], [9.8, 72.0], [9.9, 72.0], [10.0, 72.0], [10.1, 73.0], [10.2, 73.0], [10.3, 73.0], [10.4, 73.0], [10.5, 73.0], [10.6, 73.0], [10.7, 73.0], [10.8, 73.0], [10.9, 73.0], [11.0, 73.0], [11.1, 73.0], [11.2, 73.0], [11.3, 73.0], [11.4, 73.0], [11.5, 73.0], [11.6, 73.0], [11.7, 73.0], [11.8, 74.0], [11.9, 74.0], [12.0, 74.0], [12.1, 74.0], [12.2, 74.0], [12.3, 74.0], [12.4, 74.0], [12.5, 74.0], [12.6, 74.0], [12.7, 74.0], [12.8, 74.0], [12.9, 74.0], [13.0, 74.0], [13.1, 74.0], [13.2, 74.0], [13.3, 75.0], [13.4, 75.0], [13.5, 75.0], [13.6, 75.0], [13.7, 75.0], [13.8, 75.0], [13.9, 75.0], [14.0, 75.0], [14.1, 75.0], [14.2, 75.0], [14.3, 75.0], [14.4, 75.0], [14.5, 75.0], [14.6, 75.0], [14.7, 75.0], [14.8, 75.0], [14.9, 75.0], [15.0, 75.0], [15.1, 76.0], [15.2, 76.0], [15.3, 76.0], [15.4, 76.0], [15.5, 76.0], [15.6, 76.0], [15.7, 76.0], [15.8, 76.0], [15.9, 76.0], [16.0, 76.0], [16.1, 76.0], [16.2, 76.0], [16.3, 76.0], [16.4, 76.0], [16.5, 76.0], [16.6, 76.0], [16.7, 76.0], [16.8, 76.0], [16.9, 76.0], [17.0, 76.0], [17.1, 77.0], [17.2, 77.0], [17.3, 77.0], [17.4, 77.0], [17.5, 77.0], [17.6, 77.0], [17.7, 77.0], [17.8, 77.0], [17.9, 77.0], [18.0, 77.0], [18.1, 77.0], [18.2, 77.0], [18.3, 77.0], [18.4, 77.0], [18.5, 77.0], [18.6, 77.0], [18.7, 77.0], [18.8, 78.0], [18.9, 78.0], [19.0, 78.0], [19.1, 78.0], [19.2, 78.0], [19.3, 78.0], [19.4, 78.0], [19.5, 78.0], [19.6, 78.0], [19.7, 78.0], [19.8, 78.0], [19.9, 78.0], [20.0, 78.0], [20.1, 78.0], [20.2, 78.0], [20.3, 78.0], [20.4, 78.0], [20.5, 78.0], [20.6, 78.0], [20.7, 78.0], [20.8, 78.0], [20.9, 78.0], [21.0, 78.0], [21.1, 79.0], [21.2, 79.0], [21.3, 79.0], [21.4, 79.0], [21.5, 79.0], [21.6, 79.0], [21.7, 79.0], [21.8, 79.0], [21.9, 79.0], [22.0, 79.0], [22.1, 79.0], [22.2, 79.0], [22.3, 79.0], [22.4, 79.0], [22.5, 79.0], [22.6, 79.0], [22.7, 79.0], [22.8, 79.0], [22.9, 79.0], [23.0, 79.0], [23.1, 80.0], [23.2, 80.0], [23.3, 80.0], [23.4, 80.0], [23.5, 80.0], [23.6, 80.0], [23.7, 80.0], [23.8, 80.0], [23.9, 80.0], [24.0, 80.0], [24.1, 80.0], [24.2, 80.0], [24.3, 80.0], [24.4, 80.0], [24.5, 80.0], [24.6, 80.0], [24.7, 80.0], [24.8, 80.0], [24.9, 81.0], [25.0, 81.0], [25.1, 81.0], [25.2, 81.0], [25.3, 81.0], [25.4, 81.0], [25.5, 81.0], [25.6, 81.0], [25.7, 81.0], [25.8, 81.0], [25.9, 81.0], [26.0, 81.0], [26.1, 81.0], [26.2, 81.0], [26.3, 81.0], [26.4, 81.0], [26.5, 81.0], [26.6, 81.0], [26.7, 81.0], [26.8, 81.0], [26.9, 82.0], [27.0, 82.0], [27.1, 82.0], [27.2, 82.0], [27.3, 82.0], [27.4, 82.0], [27.5, 82.0], [27.6, 82.0], [27.7, 82.0], [27.8, 82.0], [27.9, 82.0], [28.0, 82.0], [28.1, 82.0], [28.2, 82.0], [28.3, 82.0], [28.4, 82.0], [28.5, 82.0], [28.6, 82.0], [28.7, 83.0], [28.8, 83.0], [28.9, 83.0], [29.0, 83.0], [29.1, 83.0], [29.2, 83.0], [29.3, 83.0], [29.4, 83.0], [29.5, 83.0], [29.6, 83.0], [29.7, 83.0], [29.8, 83.0], [29.9, 83.0], [30.0, 83.0], [30.1, 83.0], [30.2, 83.0], [30.3, 83.0], [30.4, 83.0], [30.5, 83.0], [30.6, 84.0], [30.7, 84.0], [30.8, 84.0], [30.9, 84.0], [31.0, 84.0], [31.1, 84.0], [31.2, 84.0], [31.3, 84.0], [31.4, 84.0], [31.5, 84.0], [31.6, 84.0], [31.7, 84.0], [31.8, 84.0], [31.9, 84.0], [32.0, 84.0], [32.1, 84.0], [32.2, 84.0], [32.3, 84.0], [32.4, 85.0], [32.5, 85.0], [32.6, 85.0], [32.7, 85.0], [32.8, 85.0], [32.9, 85.0], [33.0, 85.0], [33.1, 85.0], [33.2, 85.0], [33.3, 85.0], [33.4, 85.0], [33.5, 85.0], [33.6, 85.0], [33.7, 85.0], [33.8, 85.0], [33.9, 85.0], [34.0, 85.0], [34.1, 85.0], [34.2, 86.0], [34.3, 86.0], [34.4, 86.0], [34.5, 86.0], [34.6, 86.0], [34.7, 86.0], [34.8, 86.0], [34.9, 86.0], [35.0, 86.0], [35.1, 86.0], [35.2, 86.0], [35.3, 86.0], [35.4, 86.0], [35.5, 86.0], [35.6, 86.0], [35.7, 86.0], [35.8, 86.0], [35.9, 86.0], [36.0, 86.0], [36.1, 87.0], [36.2, 87.0], [36.3, 87.0], [36.4, 87.0], [36.5, 87.0], [36.6, 87.0], [36.7, 87.0], [36.8, 87.0], [36.9, 87.0], [37.0, 87.0], [37.1, 87.0], [37.2, 87.0], [37.3, 87.0], [37.4, 87.0], [37.5, 87.0], [37.6, 87.0], [37.7, 87.0], [37.8, 87.0], [37.9, 87.0], [38.0, 87.0], [38.1, 88.0], [38.2, 88.0], [38.3, 88.0], [38.4, 88.0], [38.5, 88.0], [38.6, 88.0], [38.7, 88.0], [38.8, 88.0], [38.9, 88.0], [39.0, 88.0], [39.1, 88.0], [39.2, 88.0], [39.3, 88.0], [39.4, 88.0], [39.5, 88.0], [39.6, 88.0], [39.7, 88.0], [39.8, 88.0], [39.9, 88.0], [40.0, 89.0], [40.1, 89.0], [40.2, 89.0], [40.3, 89.0], [40.4, 89.0], [40.5, 89.0], [40.6, 89.0], [40.7, 89.0], [40.8, 89.0], [40.9, 89.0], [41.0, 89.0], [41.1, 89.0], [41.2, 89.0], [41.3, 89.0], [41.4, 89.0], [41.5, 89.0], [41.6, 89.0], [41.7, 89.0], [41.8, 89.0], [41.9, 89.0], [42.0, 90.0], [42.1, 90.0], [42.2, 90.0], [42.3, 90.0], [42.4, 90.0], [42.5, 90.0], [42.6, 90.0], [42.7, 90.0], [42.8, 90.0], [42.9, 90.0], [43.0, 90.0], [43.1, 90.0], [43.2, 90.0], [43.3, 90.0], [43.4, 90.0], [43.5, 90.0], [43.6, 90.0], [43.7, 90.0], [43.8, 90.0], [43.9, 91.0], [44.0, 91.0], [44.1, 91.0], [44.2, 91.0], [44.3, 91.0], [44.4, 91.0], [44.5, 91.0], [44.6, 91.0], [44.7, 91.0], [44.8, 91.0], [44.9, 91.0], [45.0, 91.0], [45.1, 91.0], [45.2, 91.0], [45.3, 91.0], [45.4, 92.0], [45.5, 92.0], [45.6, 92.0], [45.7, 92.0], [45.8, 92.0], [45.9, 92.0], [46.0, 92.0], [46.1, 92.0], [46.2, 92.0], [46.3, 92.0], [46.4, 92.0], [46.5, 92.0], [46.6, 92.0], [46.7, 92.0], [46.8, 92.0], [46.9, 92.0], [47.0, 92.0], [47.1, 92.0], [47.2, 93.0], [47.3, 93.0], [47.4, 93.0], [47.5, 93.0], [47.6, 93.0], [47.7, 93.0], [47.8, 93.0], [47.9, 93.0], [48.0, 93.0], [48.1, 93.0], [48.2, 93.0], [48.3, 93.0], [48.4, 93.0], [48.5, 93.0], [48.6, 93.0], [48.7, 93.0], [48.8, 93.0], [48.9, 93.0], [49.0, 93.0], [49.1, 93.0], [49.2, 94.0], [49.3, 94.0], [49.4, 94.0], [49.5, 94.0], [49.6, 94.0], [49.7, 94.0], [49.8, 94.0], [49.9, 94.0], [50.0, 94.0], [50.1, 94.0], [50.2, 94.0], [50.3, 94.0], [50.4, 94.0], [50.5, 94.0], [50.6, 94.0], [50.7, 94.0], [50.8, 94.0], [50.9, 94.0], [51.0, 94.0], [51.1, 94.0], [51.2, 94.0], [51.3, 95.0], [51.4, 95.0], [51.5, 95.0], [51.6, 95.0], [51.7, 95.0], [51.8, 95.0], [51.9, 95.0], [52.0, 95.0], [52.1, 95.0], [52.2, 95.0], [52.3, 95.0], [52.4, 95.0], [52.5, 95.0], [52.6, 95.0], [52.7, 95.0], [52.8, 95.0], [52.9, 95.0], [53.0, 96.0], [53.1, 96.0], [53.2, 96.0], [53.3, 96.0], [53.4, 96.0], [53.5, 96.0], [53.6, 96.0], [53.7, 96.0], [53.8, 96.0], [53.9, 96.0], [54.0, 96.0], [54.1, 96.0], [54.2, 96.0], [54.3, 96.0], [54.4, 96.0], [54.5, 96.0], [54.6, 96.0], [54.7, 96.0], [54.8, 97.0], [54.9, 97.0], [55.0, 97.0], [55.1, 97.0], [55.2, 97.0], [55.3, 97.0], [55.4, 97.0], [55.5, 97.0], [55.6, 97.0], [55.7, 97.0], [55.8, 97.0], [55.9, 97.0], [56.0, 97.0], [56.1, 97.0], [56.2, 97.0], [56.3, 97.0], [56.4, 97.0], [56.5, 98.0], [56.6, 98.0], [56.7, 98.0], [56.8, 98.0], [56.9, 98.0], [57.0, 98.0], [57.1, 98.0], [57.2, 98.0], [57.3, 98.0], [57.4, 98.0], [57.5, 98.0], [57.6, 98.0], [57.7, 98.0], [57.8, 98.0], [57.9, 98.0], [58.0, 98.0], [58.1, 99.0], [58.2, 99.0], [58.3, 99.0], [58.4, 99.0], [58.5, 99.0], [58.6, 99.0], [58.7, 99.0], [58.8, 99.0], [58.9, 99.0], [59.0, 99.0], [59.1, 99.0], [59.2, 99.0], [59.3, 99.0], [59.4, 100.0], [59.5, 100.0], [59.6, 100.0], [59.7, 100.0], [59.8, 100.0], [59.9, 100.0], [60.0, 100.0], [60.1, 100.0], [60.2, 100.0], [60.3, 100.0], [60.4, 100.0], [60.5, 100.0], [60.6, 101.0], [60.7, 101.0], [60.8, 101.0], [60.9, 101.0], [61.0, 101.0], [61.1, 101.0], [61.2, 101.0], [61.3, 101.0], [61.4, 101.0], [61.5, 101.0], [61.6, 101.0], [61.7, 102.0], [61.8, 102.0], [61.9, 102.0], [62.0, 102.0], [62.1, 102.0], [62.2, 102.0], [62.3, 102.0], [62.4, 102.0], [62.5, 102.0], [62.6, 102.0], [62.7, 102.0], [62.8, 102.0], [62.9, 102.0], [63.0, 103.0], [63.1, 103.0], [63.2, 103.0], [63.3, 103.0], [63.4, 103.0], [63.5, 103.0], [63.6, 103.0], [63.7, 103.0], [63.8, 103.0], [63.9, 103.0], [64.0, 103.0], [64.1, 103.0], [64.2, 103.0], [64.3, 104.0], [64.4, 104.0], [64.5, 104.0], [64.6, 104.0], [64.7, 104.0], [64.8, 104.0], [64.9, 104.0], [65.0, 104.0], [65.1, 104.0], [65.2, 104.0], [65.3, 104.0], [65.4, 105.0], [65.5, 105.0], [65.6, 105.0], [65.7, 105.0], [65.8, 105.0], [65.9, 105.0], [66.0, 105.0], [66.1, 105.0], [66.2, 105.0], [66.3, 105.0], [66.4, 106.0], [66.5, 106.0], [66.6, 106.0], [66.7, 106.0], [66.8, 106.0], [66.9, 106.0], [67.0, 106.0], [67.1, 106.0], [67.2, 106.0], [67.3, 107.0], [67.4, 107.0], [67.5, 107.0], [67.6, 107.0], [67.7, 107.0], [67.8, 107.0], [67.9, 107.0], [68.0, 107.0], [68.1, 107.0], [68.2, 107.0], [68.3, 108.0], [68.4, 108.0], [68.5, 108.0], [68.6, 108.0], [68.7, 108.0], [68.8, 108.0], [68.9, 108.0], [69.0, 108.0], [69.1, 108.0], [69.2, 109.0], [69.3, 109.0], [69.4, 109.0], [69.5, 109.0], [69.6, 109.0], [69.7, 109.0], [69.8, 109.0], [69.9, 110.0], [70.0, 110.0], [70.1, 110.0], [70.2, 110.0], [70.3, 110.0], [70.4, 110.0], [70.5, 110.0], [70.6, 110.0], [70.7, 111.0], [70.8, 111.0], [70.9, 111.0], [71.0, 111.0], [71.1, 111.0], [71.2, 111.0], [71.3, 111.0], [71.4, 112.0], [71.5, 112.0], [71.6, 112.0], [71.7, 112.0], [71.8, 113.0], [71.9, 113.0], [72.0, 113.0], [72.1, 113.0], [72.2, 113.0], [72.3, 113.0], [72.4, 113.0], [72.5, 113.0], [72.6, 114.0], [72.7, 114.0], [72.8, 114.0], [72.9, 114.0], [73.0, 114.0], [73.1, 114.0], [73.2, 115.0], [73.3, 115.0], [73.4, 115.0], [73.5, 115.0], [73.6, 115.0], [73.7, 115.0], [73.8, 116.0], [73.9, 116.0], [74.0, 116.0], [74.1, 116.0], [74.2, 116.0], [74.3, 116.0], [74.4, 117.0], [74.5, 117.0], [74.6, 117.0], [74.7, 117.0], [74.8, 117.0], [74.9, 118.0], [75.0, 118.0], [75.1, 118.0], [75.2, 118.0], [75.3, 118.0], [75.4, 119.0], [75.5, 119.0], [75.6, 119.0], [75.7, 119.0], [75.8, 119.0], [75.9, 120.0], [76.0, 120.0], [76.1, 120.0], [76.2, 120.0], [76.3, 120.0], [76.4, 121.0], [76.5, 121.0], [76.6, 121.0], [76.7, 121.0], [76.8, 122.0], [76.9, 122.0], [77.0, 122.0], [77.1, 122.0], [77.2, 122.0], [77.3, 123.0], [77.4, 123.0], [77.5, 123.0], [77.6, 123.0], [77.7, 124.0], [77.8, 124.0], [77.9, 124.0], [78.0, 124.0], [78.1, 124.0], [78.2, 124.0], [78.3, 125.0], [78.4, 125.0], [78.5, 125.0], [78.6, 126.0], [78.7, 126.0], [78.8, 126.0], [78.9, 126.0], [79.0, 126.0], [79.1, 127.0], [79.2, 127.0], [79.3, 127.0], [79.4, 128.0], [79.5, 128.0], [79.6, 128.0], [79.7, 128.0], [79.8, 129.0], [79.9, 129.0], [80.0, 129.0], [80.1, 129.0], [80.2, 129.0], [80.3, 130.0], [80.4, 130.0], [80.5, 130.0], [80.6, 131.0], [80.7, 131.0], [80.8, 131.0], [80.9, 131.0], [81.0, 132.0], [81.1, 132.0], [81.2, 133.0], [81.3, 133.0], [81.4, 133.0], [81.5, 133.0], [81.6, 134.0], [81.7, 134.0], [81.8, 134.0], [81.9, 134.0], [82.0, 135.0], [82.1, 135.0], [82.2, 135.0], [82.3, 136.0], [82.4, 136.0], [82.5, 136.0], [82.6, 137.0], [82.7, 137.0], [82.8, 137.0], [82.9, 138.0], [83.0, 138.0], [83.1, 138.0], [83.2, 138.0], [83.3, 139.0], [83.4, 139.0], [83.5, 139.0], [83.6, 139.0], [83.7, 139.0], [83.8, 140.0], [83.9, 140.0], [84.0, 140.0], [84.1, 140.0], [84.2, 140.0], [84.3, 141.0], [84.4, 141.0], [84.5, 141.0], [84.6, 142.0], [84.7, 142.0], [84.8, 143.0], [84.9, 143.0], [85.0, 144.0], [85.1, 144.0], [85.2, 144.0], [85.3, 145.0], [85.4, 145.0], [85.5, 145.0], [85.6, 145.0], [85.7, 146.0], [85.8, 146.0], [85.9, 146.0], [86.0, 146.0], [86.1, 147.0], [86.2, 147.0], [86.3, 147.0], [86.4, 147.0], [86.5, 147.0], [86.6, 148.0], [86.7, 148.0], [86.8, 148.0], [86.9, 149.0], [87.0, 149.0], [87.1, 149.0], [87.2, 149.0], [87.3, 150.0], [87.4, 150.0], [87.5, 150.0], [87.6, 151.0], [87.7, 151.0], [87.8, 151.0], [87.9, 153.0], [88.0, 153.0], [88.1, 153.0], [88.2, 154.0], [88.3, 154.0], [88.4, 155.0], [88.5, 155.0], [88.6, 155.0], [88.7, 156.0], [88.8, 156.0], [88.9, 156.0], [89.0, 157.0], [89.1, 157.0], [89.2, 158.0], [89.3, 158.0], [89.4, 158.0], [89.5, 159.0], [89.6, 160.0], [89.7, 160.0], [89.8, 161.0], [89.9, 162.0], [90.0, 162.0], [90.1, 163.0], [90.2, 163.0], [90.3, 164.0], [90.4, 164.0], [90.5, 166.0], [90.6, 166.0], [90.7, 167.0], [90.8, 167.0], [90.9, 168.0], [91.0, 170.0], [91.1, 170.0], [91.2, 172.0], [91.3, 175.0], [91.4, 178.0], [91.5, 186.0], [91.6, 241.0], [91.7, 283.0], [91.8, 285.0], [91.9, 288.0], [92.0, 290.0], [92.1, 292.0], [92.2, 293.0], [92.3, 294.0], [92.4, 295.0], [92.5, 296.0], [92.6, 297.0], [92.7, 299.0], [92.8, 300.0], [92.9, 301.0], [93.0, 302.0], [93.1, 303.0], [93.2, 303.0], [93.3, 304.0], [93.4, 305.0], [93.5, 306.0], [93.6, 307.0], [93.7, 308.0], [93.8, 309.0], [93.9, 310.0], [94.0, 310.0], [94.1, 311.0], [94.2, 313.0], [94.3, 313.0], [94.4, 314.0], [94.5, 315.0], [94.6, 317.0], [94.7, 318.0], [94.8, 320.0], [94.9, 321.0], [95.0, 322.0], [95.1, 324.0], [95.2, 326.0], [95.3, 327.0], [95.4, 328.0], [95.5, 329.0], [95.6, 331.0], [95.7, 333.0], [95.8, 334.0], [95.9, 335.0], [96.0, 336.0], [96.1, 337.0], [96.2, 338.0], [96.3, 339.0], [96.4, 342.0], [96.5, 344.0], [96.6, 346.0], [96.7, 347.0], [96.8, 348.0], [96.9, 349.0], [97.0, 350.0], [97.1, 351.0], [97.2, 352.0], [97.3, 353.0], [97.4, 355.0], [97.5, 358.0], [97.6, 358.0], [97.7, 360.0], [97.8, 362.0], [97.9, 363.0], [98.0, 364.0], [98.1, 365.0], [98.2, 370.0], [98.3, 371.0], [98.4, 373.0], [98.5, 374.0], [98.6, 375.0], [98.7, 378.0], [98.8, 379.0], [98.9, 381.0], [99.0, 382.0], [99.1, 386.0], [99.2, 389.0], [99.3, 393.0], [99.4, 401.0], [99.5, 405.0], [99.6, 545.0], [99.7, 596.0], [99.8, 612.0], [99.9, 1122.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 16.0], [0.3, 19.0], [0.4, 20.0], [0.5, 22.0], [0.6, 25.0], [0.7, 28.0], [0.8, 30.0], [0.9, 31.0], [1.0, 32.0], [1.1, 33.0], [1.2, 34.0], [1.3, 35.0], [1.4, 37.0], [1.5, 39.0], [1.6, 42.0], [1.7, 42.0], [1.8, 45.0], [1.9, 46.0], [2.0, 46.0], [2.1, 47.0], [2.2, 48.0], [2.3, 50.0], [2.4, 50.0], [2.5, 51.0], [2.6, 51.0], [2.7, 52.0], [2.8, 52.0], [2.9, 54.0], [3.0, 54.0], [3.1, 57.0], [3.2, 58.0], [3.3, 59.0], [3.4, 60.0], [3.5, 61.0], [3.6, 62.0], [3.7, 62.0], [3.8, 63.0], [3.9, 65.0], [4.0, 67.0], [4.1, 68.0], [4.2, 70.0], [4.3, 72.0], [4.4, 74.0], [4.5, 76.0], [4.6, 78.0], [4.7, 80.0], [4.8, 83.0], [4.9, 84.0], [5.0, 86.0], [5.1, 87.0], [5.2, 87.0], [5.3, 90.0], [5.4, 92.0], [5.5, 97.0], [5.6, 102.0], [5.7, 110.0], [5.8, 120.0], [5.9, 142.0], [6.0, 144.0], [6.1, 145.0], [6.2, 148.0], [6.3, 149.0], [6.4, 150.0], [6.5, 151.0], [6.6, 151.0], [6.7, 152.0], [6.8, 153.0], [6.9, 153.0], [7.0, 154.0], [7.1, 155.0], [7.2, 156.0], [7.3, 157.0], [7.4, 158.0], [7.5, 158.0], [7.6, 159.0], [7.7, 162.0], [7.8, 164.0], [7.9, 166.0], [8.0, 170.0], [8.1, 175.0], [8.2, 177.0], [8.3, 182.0], [8.4, 183.0], [8.5, 184.0], [8.6, 187.0], [8.7, 189.0], [8.8, 190.0], [8.9, 194.0], [9.0, 197.0], [9.1, 199.0], [9.2, 203.0], [9.3, 205.0], [9.4, 208.0], [9.5, 209.0], [9.6, 213.0], [9.7, 220.0], [9.8, 222.0], [9.9, 224.0], [10.0, 225.0], [10.1, 227.0], [10.2, 229.0], [10.3, 234.0], [10.4, 236.0], [10.5, 240.0], [10.6, 242.0], [10.7, 244.0], [10.8, 247.0], [10.9, 249.0], [11.0, 251.0], [11.1, 255.0], [11.2, 259.0], [11.3, 274.0], [11.4, 282.0], [11.5, 286.0], [11.6, 288.0], [11.7, 290.0], [11.8, 291.0], [11.9, 293.0], [12.0, 294.0], [12.1, 296.0], [12.2, 297.0], [12.3, 297.0], [12.4, 298.0], [12.5, 299.0], [12.6, 300.0], [12.7, 300.0], [12.8, 302.0], [12.9, 304.0], [13.0, 305.0], [13.1, 307.0], [13.2, 308.0], [13.3, 309.0], [13.4, 310.0], [13.5, 311.0], [13.6, 311.0], [13.7, 312.0], [13.8, 313.0], [13.9, 314.0], [14.0, 315.0], [14.1, 315.0], [14.2, 315.0], [14.3, 316.0], [14.4, 317.0], [14.5, 317.0], [14.6, 318.0], [14.7, 319.0], [14.8, 319.0], [14.9, 320.0], [15.0, 320.0], [15.1, 321.0], [15.2, 321.0], [15.3, 322.0], [15.4, 322.0], [15.5, 323.0], [15.6, 323.0], [15.7, 323.0], [15.8, 324.0], [15.9, 324.0], [16.0, 324.0], [16.1, 325.0], [16.2, 325.0], [16.3, 325.0], [16.4, 326.0], [16.5, 326.0], [16.6, 326.0], [16.7, 327.0], [16.8, 328.0], [16.9, 328.0], [17.0, 328.0], [17.1, 329.0], [17.2, 329.0], [17.3, 330.0], [17.4, 330.0], [17.5, 330.0], [17.6, 331.0], [17.7, 331.0], [17.8, 332.0], [17.9, 332.0], [18.0, 333.0], [18.1, 333.0], [18.2, 333.0], [18.3, 334.0], [18.4, 334.0], [18.5, 334.0], [18.6, 334.0], [18.7, 335.0], [18.8, 335.0], [18.9, 335.0], [19.0, 336.0], [19.1, 336.0], [19.2, 336.0], [19.3, 337.0], [19.4, 337.0], [19.5, 338.0], [19.6, 338.0], [19.7, 338.0], [19.8, 339.0], [19.9, 339.0], [20.0, 340.0], [20.1, 340.0], [20.2, 341.0], [20.3, 341.0], [20.4, 341.0], [20.5, 342.0], [20.6, 342.0], [20.7, 343.0], [20.8, 344.0], [20.9, 345.0], [21.0, 345.0], [21.1, 346.0], [21.2, 346.0], [21.3, 347.0], [21.4, 348.0], [21.5, 348.0], [21.6, 349.0], [21.7, 349.0], [21.8, 350.0], [21.9, 350.0], [22.0, 351.0], [22.1, 351.0], [22.2, 352.0], [22.3, 352.0], [22.4, 353.0], [22.5, 353.0], [22.6, 354.0], [22.7, 354.0], [22.8, 355.0], [22.9, 356.0], [23.0, 357.0], [23.1, 358.0], [23.2, 358.0], [23.3, 358.0], [23.4, 359.0], [23.5, 359.0], [23.6, 359.0], [23.7, 360.0], [23.8, 361.0], [23.9, 361.0], [24.0, 362.0], [24.1, 362.0], [24.2, 364.0], [24.3, 365.0], [24.4, 366.0], [24.5, 366.0], [24.6, 367.0], [24.7, 367.0], [24.8, 368.0], [24.9, 368.0], [25.0, 369.0], [25.1, 370.0], [25.2, 371.0], [25.3, 372.0], [25.4, 373.0], [25.5, 374.0], [25.6, 375.0], [25.7, 376.0], [25.8, 377.0], [25.9, 377.0], [26.0, 379.0], [26.1, 381.0], [26.2, 382.0], [26.3, 383.0], [26.4, 383.0], [26.5, 385.0], [26.6, 386.0], [26.7, 388.0], [26.8, 388.0], [26.9, 389.0], [27.0, 391.0], [27.1, 392.0], [27.2, 394.0], [27.3, 395.0], [27.4, 397.0], [27.5, 399.0], [27.6, 401.0], [27.7, 403.0], [27.8, 405.0], [27.9, 406.0], [28.0, 408.0], [28.1, 411.0], [28.2, 412.0], [28.3, 413.0], [28.4, 414.0], [28.5, 415.0], [28.6, 417.0], [28.7, 419.0], [28.8, 420.0], [28.9, 421.0], [29.0, 422.0], [29.1, 423.0], [29.2, 425.0], [29.3, 427.0], [29.4, 428.0], [29.5, 429.0], [29.6, 432.0], [29.7, 433.0], [29.8, 435.0], [29.9, 437.0], [30.0, 441.0], [30.1, 443.0], [30.2, 446.0], [30.3, 447.0], [30.4, 448.0], [30.5, 449.0], [30.6, 450.0], [30.7, 452.0], [30.8, 452.0], [30.9, 453.0], [31.0, 454.0], [31.1, 455.0], [31.2, 457.0], [31.3, 459.0], [31.4, 462.0], [31.5, 466.0], [31.6, 469.0], [31.7, 469.0], [31.8, 471.0], [31.9, 471.0], [32.0, 473.0], [32.1, 475.0], [32.2, 477.0], [32.3, 477.0], [32.4, 477.0], [32.5, 479.0], [32.6, 480.0], [32.7, 481.0], [32.8, 482.0], [32.9, 484.0], [33.0, 485.0], [33.1, 486.0], [33.2, 488.0], [33.3, 490.0], [33.4, 491.0], [33.5, 493.0], [33.6, 494.0], [33.7, 495.0], [33.8, 496.0], [33.9, 497.0], [34.0, 499.0], [34.1, 500.0], [34.2, 502.0], [34.3, 504.0], [34.4, 506.0], [34.5, 508.0], [34.6, 510.0], [34.7, 513.0], [34.8, 515.0], [34.9, 518.0], [35.0, 520.0], [35.1, 521.0], [35.2, 523.0], [35.3, 525.0], [35.4, 526.0], [35.5, 526.0], [35.6, 529.0], [35.7, 532.0], [35.8, 534.0], [35.9, 536.0], [36.0, 537.0], [36.1, 538.0], [36.2, 539.0], [36.3, 541.0], [36.4, 543.0], [36.5, 544.0], [36.6, 545.0], [36.7, 546.0], [36.8, 547.0], [36.9, 547.0], [37.0, 550.0], [37.1, 550.0], [37.2, 551.0], [37.3, 552.0], [37.4, 553.0], [37.5, 554.0], [37.6, 554.0], [37.7, 555.0], [37.8, 556.0], [37.9, 557.0], [38.0, 558.0], [38.1, 559.0], [38.2, 560.0], [38.3, 560.0], [38.4, 561.0], [38.5, 562.0], [38.6, 562.0], [38.7, 563.0], [38.8, 564.0], [38.9, 565.0], [39.0, 566.0], [39.1, 569.0], [39.2, 570.0], [39.3, 571.0], [39.4, 572.0], [39.5, 572.0], [39.6, 573.0], [39.7, 575.0], [39.8, 577.0], [39.9, 578.0], [40.0, 579.0], [40.1, 581.0], [40.2, 582.0], [40.3, 584.0], [40.4, 586.0], [40.5, 587.0], [40.6, 588.0], [40.7, 589.0], [40.8, 593.0], [40.9, 593.0], [41.0, 595.0], [41.1, 597.0], [41.2, 598.0], [41.3, 600.0], [41.4, 602.0], [41.5, 602.0], [41.6, 604.0], [41.7, 604.0], [41.8, 605.0], [41.9, 606.0], [42.0, 607.0], [42.1, 607.0], [42.2, 609.0], [42.3, 610.0], [42.4, 611.0], [42.5, 613.0], [42.6, 614.0], [42.7, 615.0], [42.8, 616.0], [42.9, 618.0], [43.0, 619.0], [43.1, 622.0], [43.2, 625.0], [43.3, 627.0], [43.4, 629.0], [43.5, 633.0], [43.6, 634.0], [43.7, 637.0], [43.8, 638.0], [43.9, 639.0], [44.0, 640.0], [44.1, 642.0], [44.2, 644.0], [44.3, 645.0], [44.4, 647.0], [44.5, 647.0], [44.6, 650.0], [44.7, 652.0], [44.8, 658.0], [44.9, 660.0], [45.0, 663.0], [45.1, 664.0], [45.2, 668.0], [45.3, 670.0], [45.4, 672.0], [45.5, 675.0], [45.6, 677.0], [45.7, 681.0], [45.8, 685.0], [45.9, 688.0], [46.0, 691.0], [46.1, 692.0], [46.2, 695.0], [46.3, 697.0], [46.4, 699.0], [46.5, 701.0], [46.6, 704.0], [46.7, 706.0], [46.8, 711.0], [46.9, 714.0], [47.0, 718.0], [47.1, 720.0], [47.2, 724.0], [47.3, 726.0], [47.4, 729.0], [47.5, 731.0], [47.6, 734.0], [47.7, 737.0], [47.8, 739.0], [47.9, 743.0], [48.0, 744.0], [48.1, 748.0], [48.2, 748.0], [48.3, 751.0], [48.4, 752.0], [48.5, 754.0], [48.6, 755.0], [48.7, 756.0], [48.8, 757.0], [48.9, 760.0], [49.0, 760.0], [49.1, 761.0], [49.2, 762.0], [49.3, 762.0], [49.4, 764.0], [49.5, 766.0], [49.6, 767.0], [49.7, 769.0], [49.8, 771.0], [49.9, 772.0], [50.0, 775.0], [50.1, 776.0], [50.2, 777.0], [50.3, 778.0], [50.4, 779.0], [50.5, 781.0], [50.6, 783.0], [50.7, 785.0], [50.8, 787.0], [50.9, 788.0], [51.0, 789.0], [51.1, 790.0], [51.2, 791.0], [51.3, 792.0], [51.4, 793.0], [51.5, 795.0], [51.6, 796.0], [51.7, 797.0], [51.8, 798.0], [51.9, 799.0], [52.0, 800.0], [52.1, 803.0], [52.2, 804.0], [52.3, 805.0], [52.4, 806.0], [52.5, 808.0], [52.6, 809.0], [52.7, 811.0], [52.8, 812.0], [52.9, 813.0], [53.0, 815.0], [53.1, 816.0], [53.2, 818.0], [53.3, 819.0], [53.4, 820.0], [53.5, 822.0], [53.6, 822.0], [53.7, 823.0], [53.8, 824.0], [53.9, 825.0], [54.0, 826.0], [54.1, 827.0], [54.2, 828.0], [54.3, 829.0], [54.4, 830.0], [54.5, 830.0], [54.6, 831.0], [54.7, 831.0], [54.8, 832.0], [54.9, 832.0], [55.0, 833.0], [55.1, 833.0], [55.2, 833.0], [55.3, 834.0], [55.4, 835.0], [55.5, 835.0], [55.6, 836.0], [55.7, 836.0], [55.8, 838.0], [55.9, 838.0], [56.0, 839.0], [56.1, 839.0], [56.2, 840.0], [56.3, 840.0], [56.4, 841.0], [56.5, 841.0], [56.6, 842.0], [56.7, 842.0], [56.8, 843.0], [56.9, 843.0], [57.0, 844.0], [57.1, 844.0], [57.2, 845.0], [57.3, 846.0], [57.4, 847.0], [57.5, 847.0], [57.6, 848.0], [57.7, 848.0], [57.8, 849.0], [57.9, 849.0], [58.0, 850.0], [58.1, 851.0], [58.2, 853.0], [58.3, 854.0], [58.4, 856.0], [58.5, 858.0], [58.6, 859.0], [58.7, 861.0], [58.8, 861.0], [58.9, 863.0], [59.0, 864.0], [59.1, 864.0], [59.2, 865.0], [59.3, 865.0], [59.4, 867.0], [59.5, 867.0], [59.6, 868.0], [59.7, 868.0], [59.8, 868.0], [59.9, 868.0], [60.0, 869.0], [60.1, 870.0], [60.2, 870.0], [60.3, 871.0], [60.4, 872.0], [60.5, 872.0], [60.6, 872.0], [60.7, 873.0], [60.8, 874.0], [60.9, 875.0], [61.0, 876.0], [61.1, 877.0], [61.2, 877.0], [61.3, 879.0], [61.4, 880.0], [61.5, 882.0], [61.6, 882.0], [61.7, 882.0], [61.8, 884.0], [61.9, 885.0], [62.0, 886.0], [62.1, 887.0], [62.2, 888.0], [62.3, 889.0], [62.4, 889.0], [62.5, 889.0], [62.6, 890.0], [62.7, 891.0], [62.8, 891.0], [62.9, 892.0], [63.0, 892.0], [63.1, 893.0], [63.2, 894.0], [63.3, 895.0], [63.4, 895.0], [63.5, 896.0], [63.6, 897.0], [63.7, 898.0], [63.8, 898.0], [63.9, 899.0], [64.0, 899.0], [64.1, 900.0], [64.2, 902.0], [64.3, 904.0], [64.4, 904.0], [64.5, 905.0], [64.6, 905.0], [64.7, 906.0], [64.8, 907.0], [64.9, 908.0], [65.0, 908.0], [65.1, 909.0], [65.2, 909.0], [65.3, 909.0], [65.4, 910.0], [65.5, 910.0], [65.6, 911.0], [65.7, 911.0], [65.8, 912.0], [65.9, 912.0], [66.0, 913.0], [66.1, 913.0], [66.2, 913.0], [66.3, 914.0], [66.4, 914.0], [66.5, 914.0], [66.6, 915.0], [66.7, 915.0], [66.8, 916.0], [66.9, 916.0], [67.0, 917.0], [67.1, 917.0], [67.2, 918.0], [67.3, 918.0], [67.4, 918.0], [67.5, 919.0], [67.6, 919.0], [67.7, 919.0], [67.8, 919.0], [67.9, 920.0], [68.0, 920.0], [68.1, 921.0], [68.2, 921.0], [68.3, 922.0], [68.4, 922.0], [68.5, 922.0], [68.6, 923.0], [68.7, 923.0], [68.8, 923.0], [68.9, 924.0], [69.0, 924.0], [69.1, 925.0], [69.2, 925.0], [69.3, 926.0], [69.4, 926.0], [69.5, 927.0], [69.6, 927.0], [69.7, 927.0], [69.8, 928.0], [69.9, 928.0], [70.0, 929.0], [70.1, 929.0], [70.2, 930.0], [70.3, 930.0], [70.4, 931.0], [70.5, 932.0], [70.6, 932.0], [70.7, 933.0], [70.8, 933.0], [70.9, 933.0], [71.0, 934.0], [71.1, 934.0], [71.2, 935.0], [71.3, 935.0], [71.4, 936.0], [71.5, 936.0], [71.6, 937.0], [71.7, 938.0], [71.8, 938.0], [71.9, 939.0], [72.0, 939.0], [72.1, 940.0], [72.2, 940.0], [72.3, 943.0], [72.4, 944.0], [72.5, 945.0], [72.6, 947.0], [72.7, 948.0], [72.8, 949.0], [72.9, 950.0], [73.0, 951.0], [73.1, 952.0], [73.2, 952.0], [73.3, 953.0], [73.4, 954.0], [73.5, 954.0], [73.6, 955.0], [73.7, 956.0], [73.8, 956.0], [73.9, 957.0], [74.0, 957.0], [74.1, 957.0], [74.2, 958.0], [74.3, 958.0], [74.4, 958.0], [74.5, 959.0], [74.6, 960.0], [74.7, 960.0], [74.8, 961.0], [74.9, 961.0], [75.0, 962.0], [75.1, 963.0], [75.2, 963.0], [75.3, 964.0], [75.4, 965.0], [75.5, 965.0], [75.6, 966.0], [75.7, 966.0], [75.8, 967.0], [75.9, 967.0], [76.0, 968.0], [76.1, 970.0], [76.2, 971.0], [76.3, 972.0], [76.4, 973.0], [76.5, 973.0], [76.6, 973.0], [76.7, 975.0], [76.8, 975.0], [76.9, 976.0], [77.0, 977.0], [77.1, 977.0], [77.2, 978.0], [77.3, 980.0], [77.4, 981.0], [77.5, 982.0], [77.6, 982.0], [77.7, 984.0], [77.8, 985.0], [77.9, 988.0], [78.0, 989.0], [78.1, 990.0], [78.2, 992.0], [78.3, 994.0], [78.4, 997.0], [78.5, 999.0], [78.6, 1001.0], [78.7, 1002.0], [78.8, 1003.0], [78.9, 1005.0], [79.0, 1007.0], [79.1, 1009.0], [79.2, 1010.0], [79.3, 1011.0], [79.4, 1013.0], [79.5, 1013.0], [79.6, 1015.0], [79.7, 1017.0], [79.8, 1019.0], [79.9, 1021.0], [80.0, 1022.0], [80.1, 1023.0], [80.2, 1024.0], [80.3, 1027.0], [80.4, 1028.0], [80.5, 1029.0], [80.6, 1030.0], [80.7, 1031.0], [80.8, 1032.0], [80.9, 1033.0], [81.0, 1034.0], [81.1, 1035.0], [81.2, 1036.0], [81.3, 1037.0], [81.4, 1039.0], [81.5, 1041.0], [81.6, 1042.0], [81.7, 1043.0], [81.8, 1044.0], [81.9, 1045.0], [82.0, 1046.0], [82.1, 1047.0], [82.2, 1049.0], [82.3, 1049.0], [82.4, 1051.0], [82.5, 1052.0], [82.6, 1053.0], [82.7, 1054.0], [82.8, 1055.0], [82.9, 1056.0], [83.0, 1058.0], [83.1, 1060.0], [83.2, 1062.0], [83.3, 1063.0], [83.4, 1064.0], [83.5, 1068.0], [83.6, 1071.0], [83.7, 1072.0], [83.8, 1073.0], [83.9, 1076.0], [84.0, 1077.0], [84.1, 1079.0], [84.2, 1083.0], [84.3, 1085.0], [84.4, 1086.0], [84.5, 1088.0], [84.6, 1089.0], [84.7, 1091.0], [84.8, 1092.0], [84.9, 1093.0], [85.0, 1094.0], [85.1, 1095.0], [85.2, 1096.0], [85.3, 1098.0], [85.4, 1099.0], [85.5, 1100.0], [85.6, 1101.0], [85.7, 1103.0], [85.8, 1105.0], [85.9, 1108.0], [86.0, 1109.0], [86.1, 1110.0], [86.2, 1111.0], [86.3, 1112.0], [86.4, 1114.0], [86.5, 1115.0], [86.6, 1115.0], [86.7, 1118.0], [86.8, 1121.0], [86.9, 1123.0], [87.0, 1128.0], [87.1, 1128.0], [87.2, 1130.0], [87.3, 1135.0], [87.4, 1136.0], [87.5, 1141.0], [87.6, 1143.0], [87.7, 1146.0], [87.8, 1149.0], [87.9, 1155.0], [88.0, 1159.0], [88.1, 1164.0], [88.2, 1165.0], [88.3, 1170.0], [88.4, 1175.0], [88.5, 1180.0], [88.6, 1186.0], [88.7, 1189.0], [88.8, 1194.0], [88.9, 1198.0], [89.0, 1203.0], [89.1, 1204.0], [89.2, 1207.0], [89.3, 1213.0], [89.4, 1215.0], [89.5, 1217.0], [89.6, 1220.0], [89.7, 1222.0], [89.8, 1225.0], [89.9, 1228.0], [90.0, 1229.0], [90.1, 1231.0], [90.2, 1234.0], [90.3, 1237.0], [90.4, 1240.0], [90.5, 1242.0], [90.6, 1245.0], [90.7, 1249.0], [90.8, 1250.0], [90.9, 1253.0], [91.0, 1256.0], [91.1, 1260.0], [91.2, 1262.0], [91.3, 1264.0], [91.4, 1267.0], [91.5, 1268.0], [91.6, 1270.0], [91.7, 1273.0], [91.8, 1275.0], [91.9, 1275.0], [92.0, 1277.0], [92.1, 1279.0], [92.2, 1280.0], [92.3, 1282.0], [92.4, 1283.0], [92.5, 1284.0], [92.6, 1285.0], [92.7, 1286.0], [92.8, 1289.0], [92.9, 1290.0], [93.0, 1291.0], [93.1, 1293.0], [93.2, 1295.0], [93.3, 1296.0], [93.4, 1298.0], [93.5, 1300.0], [93.6, 1302.0], [93.7, 1303.0], [93.8, 1304.0], [93.9, 1306.0], [94.0, 1307.0], [94.1, 1309.0], [94.2, 1310.0], [94.3, 1312.0], [94.4, 1314.0], [94.5, 1316.0], [94.6, 1319.0], [94.7, 1321.0], [94.8, 1324.0], [94.9, 1326.0], [95.0, 1329.0], [95.1, 1330.0], [95.2, 1332.0], [95.3, 1333.0], [95.4, 1336.0], [95.5, 1338.0], [95.6, 1338.0], [95.7, 1338.0], [95.8, 1341.0], [95.9, 1343.0], [96.0, 1345.0], [96.1, 1347.0], [96.2, 1348.0], [96.3, 1349.0], [96.4, 1350.0], [96.5, 1353.0], [96.6, 1355.0], [96.7, 1356.0], [96.8, 1357.0], [96.9, 1359.0], [97.0, 1361.0], [97.1, 1362.0], [97.2, 1364.0], [97.3, 1367.0], [97.4, 1372.0], [97.5, 1374.0], [97.6, 1383.0], [97.7, 1389.0], [97.8, 1395.0], [97.9, 1397.0], [98.0, 1399.0], [98.1, 1401.0], [98.2, 1403.0], [98.3, 1405.0], [98.4, 1406.0], [98.5, 1407.0], [98.6, 1408.0], [98.7, 1409.0], [98.8, 1411.0], [98.9, 1412.0], [99.0, 1414.0], [99.1, 1415.0], [99.2, 1419.0], [99.3, 1420.0], [99.4, 1423.0], [99.5, 1424.0], [99.6, 1427.0], [99.7, 1429.0], [99.8, 1433.0], [99.9, 1437.0], [100.0, 1442.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 4.0], [0.1, 5.0], [0.2, 6.0], [0.3, 8.0], [0.4, 10.0], [0.5, 11.0], [0.6, 12.0], [0.7, 13.0], [0.8, 16.0], [0.9, 18.0], [1.0, 21.0], [1.1, 23.0], [1.2, 27.0], [1.3, 28.0], [1.4, 29.0], [1.5, 30.0], [1.6, 32.0], [1.7, 35.0], [1.8, 36.0], [1.9, 37.0], [2.0, 38.0], [2.1, 39.0], [2.2, 40.0], [2.3, 41.0], [2.4, 42.0], [2.5, 42.0], [2.6, 43.0], [2.7, 43.0], [2.8, 43.0], [2.9, 44.0], [3.0, 44.0], [3.1, 44.0], [3.2, 44.0], [3.3, 44.0], [3.4, 45.0], [3.5, 45.0], [3.6, 45.0], [3.7, 46.0], [3.8, 46.0], [3.9, 46.0], [4.0, 47.0], [4.1, 47.0], [4.2, 47.0], [4.3, 47.0], [4.4, 47.0], [4.5, 47.0], [4.6, 47.0], [4.7, 48.0], [4.8, 48.0], [4.9, 48.0], [5.0, 48.0], [5.1, 48.0], [5.2, 48.0], [5.3, 48.0], [5.4, 49.0], [5.5, 49.0], [5.6, 49.0], [5.7, 49.0], [5.8, 49.0], [5.9, 49.0], [6.0, 49.0], [6.1, 49.0], [6.2, 49.0], [6.3, 49.0], [6.4, 50.0], [6.5, 50.0], [6.6, 50.0], [6.7, 50.0], [6.8, 50.0], [6.9, 50.0], [7.0, 50.0], [7.1, 50.0], [7.2, 50.0], [7.3, 50.0], [7.4, 50.0], [7.5, 50.0], [7.6, 50.0], [7.7, 50.0], [7.8, 50.0], [7.9, 50.0], [8.0, 50.0], [8.1, 50.0], [8.2, 51.0], [8.3, 51.0], [8.4, 51.0], [8.5, 51.0], [8.6, 51.0], [8.7, 51.0], [8.8, 51.0], [8.9, 51.0], [9.0, 51.0], [9.1, 51.0], [9.2, 51.0], [9.3, 51.0], [9.4, 51.0], [9.5, 51.0], [9.6, 51.0], [9.7, 51.0], [9.8, 51.0], [9.9, 51.0], [10.0, 51.0], [10.1, 51.0], [10.2, 51.0], [10.3, 51.0], [10.4, 51.0], [10.5, 51.0], [10.6, 51.0], [10.7, 51.0], [10.8, 51.0], [10.9, 52.0], [11.0, 52.0], [11.1, 52.0], [11.2, 52.0], [11.3, 52.0], [11.4, 52.0], [11.5, 52.0], [11.6, 52.0], [11.7, 52.0], [11.8, 52.0], [11.9, 52.0], [12.0, 52.0], [12.1, 52.0], [12.2, 52.0], [12.3, 52.0], [12.4, 52.0], [12.5, 52.0], [12.6, 52.0], [12.7, 52.0], [12.8, 52.0], [12.9, 52.0], [13.0, 52.0], [13.1, 52.0], [13.2, 52.0], [13.3, 52.0], [13.4, 53.0], [13.5, 53.0], [13.6, 53.0], [13.7, 53.0], [13.8, 53.0], [13.9, 53.0], [14.0, 53.0], [14.1, 53.0], [14.2, 53.0], [14.3, 53.0], [14.4, 53.0], [14.5, 53.0], [14.6, 53.0], [14.7, 53.0], [14.8, 53.0], [14.9, 53.0], [15.0, 53.0], [15.1, 53.0], [15.2, 53.0], [15.3, 53.0], [15.4, 53.0], [15.5, 53.0], [15.6, 53.0], [15.7, 53.0], [15.8, 53.0], [15.9, 54.0], [16.0, 54.0], [16.1, 54.0], [16.2, 54.0], [16.3, 54.0], [16.4, 54.0], [16.5, 54.0], [16.6, 54.0], [16.7, 54.0], [16.8, 54.0], [16.9, 54.0], [17.0, 54.0], [17.1, 54.0], [17.2, 54.0], [17.3, 54.0], [17.4, 54.0], [17.5, 54.0], [17.6, 54.0], [17.7, 54.0], [17.8, 54.0], [17.9, 54.0], [18.0, 54.0], [18.1, 54.0], [18.2, 54.0], [18.3, 54.0], [18.4, 54.0], [18.5, 54.0], [18.6, 54.0], [18.7, 54.0], [18.8, 54.0], [18.9, 54.0], [19.0, 54.0], [19.1, 54.0], [19.2, 54.0], [19.3, 54.0], [19.4, 54.0], [19.5, 54.0], [19.6, 54.0], [19.7, 54.0], [19.8, 54.0], [19.9, 55.0], [20.0, 55.0], [20.1, 55.0], [20.2, 55.0], [20.3, 55.0], [20.4, 55.0], [20.5, 55.0], [20.6, 55.0], [20.7, 55.0], [20.8, 55.0], [20.9, 55.0], [21.0, 55.0], [21.1, 55.0], [21.2, 55.0], [21.3, 55.0], [21.4, 55.0], [21.5, 55.0], [21.6, 55.0], [21.7, 55.0], [21.8, 55.0], [21.9, 55.0], [22.0, 55.0], [22.1, 55.0], [22.2, 55.0], [22.3, 55.0], [22.4, 55.0], [22.5, 55.0], [22.6, 55.0], [22.7, 55.0], [22.8, 55.0], [22.9, 55.0], [23.0, 55.0], [23.1, 55.0], [23.2, 55.0], [23.3, 55.0], [23.4, 55.0], [23.5, 55.0], [23.6, 55.0], [23.7, 55.0], [23.8, 55.0], [23.9, 55.0], [24.0, 55.0], [24.1, 55.0], [24.2, 56.0], [24.3, 56.0], [24.4, 56.0], [24.5, 56.0], [24.6, 56.0], [24.7, 56.0], [24.8, 56.0], [24.9, 56.0], [25.0, 56.0], [25.1, 56.0], [25.2, 56.0], [25.3, 56.0], [25.4, 56.0], [25.5, 56.0], [25.6, 56.0], [25.7, 56.0], [25.8, 56.0], [25.9, 56.0], [26.0, 56.0], [26.1, 56.0], [26.2, 56.0], [26.3, 56.0], [26.4, 56.0], [26.5, 56.0], [26.6, 56.0], [26.7, 56.0], [26.8, 56.0], [26.9, 56.0], [27.0, 56.0], [27.1, 56.0], [27.2, 56.0], [27.3, 56.0], [27.4, 56.0], [27.5, 56.0], [27.6, 56.0], [27.7, 56.0], [27.8, 56.0], [27.9, 56.0], [28.0, 56.0], [28.1, 56.0], [28.2, 56.0], [28.3, 56.0], [28.4, 56.0], [28.5, 56.0], [28.6, 56.0], [28.7, 56.0], [28.8, 57.0], [28.9, 57.0], [29.0, 57.0], [29.1, 57.0], [29.2, 57.0], [29.3, 57.0], [29.4, 57.0], [29.5, 57.0], [29.6, 57.0], [29.7, 57.0], [29.8, 57.0], [29.9, 57.0], [30.0, 57.0], [30.1, 57.0], [30.2, 57.0], [30.3, 57.0], [30.4, 57.0], [30.5, 57.0], [30.6, 57.0], [30.7, 57.0], [30.8, 57.0], [30.9, 57.0], [31.0, 57.0], [31.1, 57.0], [31.2, 57.0], [31.3, 57.0], [31.4, 57.0], [31.5, 57.0], [31.6, 57.0], [31.7, 57.0], [31.8, 57.0], [31.9, 57.0], [32.0, 57.0], [32.1, 57.0], [32.2, 57.0], [32.3, 57.0], [32.4, 57.0], [32.5, 57.0], [32.6, 57.0], [32.7, 57.0], [32.8, 57.0], [32.9, 57.0], [33.0, 57.0], [33.1, 57.0], [33.2, 57.0], [33.3, 57.0], [33.4, 57.0], [33.5, 57.0], [33.6, 57.0], [33.7, 58.0], [33.8, 58.0], [33.9, 58.0], [34.0, 58.0], [34.1, 58.0], [34.2, 58.0], [34.3, 58.0], [34.4, 58.0], [34.5, 58.0], [34.6, 58.0], [34.7, 58.0], [34.8, 58.0], [34.9, 58.0], [35.0, 58.0], [35.1, 58.0], [35.2, 58.0], [35.3, 58.0], [35.4, 58.0], [35.5, 58.0], [35.6, 58.0], [35.7, 58.0], [35.8, 58.0], [35.9, 58.0], [36.0, 58.0], [36.1, 58.0], [36.2, 58.0], [36.3, 58.0], [36.4, 58.0], [36.5, 58.0], [36.6, 58.0], [36.7, 58.0], [36.8, 58.0], [36.9, 58.0], [37.0, 58.0], [37.1, 58.0], [37.2, 58.0], [37.3, 58.0], [37.4, 58.0], [37.5, 58.0], [37.6, 58.0], [37.7, 58.0], [37.8, 58.0], [37.9, 58.0], [38.0, 58.0], [38.1, 59.0], [38.2, 59.0], [38.3, 59.0], [38.4, 59.0], [38.5, 59.0], [38.6, 59.0], [38.7, 59.0], [38.8, 59.0], [38.9, 59.0], [39.0, 59.0], [39.1, 59.0], [39.2, 59.0], [39.3, 59.0], [39.4, 59.0], [39.5, 59.0], [39.6, 59.0], [39.7, 59.0], [39.8, 59.0], [39.9, 59.0], [40.0, 59.0], [40.1, 59.0], [40.2, 59.0], [40.3, 59.0], [40.4, 59.0], [40.5, 59.0], [40.6, 59.0], [40.7, 59.0], [40.8, 59.0], [40.9, 59.0], [41.0, 59.0], [41.1, 59.0], [41.2, 59.0], [41.3, 59.0], [41.4, 59.0], [41.5, 59.0], [41.6, 59.0], [41.7, 59.0], [41.8, 59.0], [41.9, 59.0], [42.0, 59.0], [42.1, 59.0], [42.2, 59.0], [42.3, 59.0], [42.4, 59.0], [42.5, 59.0], [42.6, 59.0], [42.7, 59.0], [42.8, 59.0], [42.9, 59.0], [43.0, 60.0], [43.1, 60.0], [43.2, 60.0], [43.3, 60.0], [43.4, 60.0], [43.5, 60.0], [43.6, 60.0], [43.7, 60.0], [43.8, 60.0], [43.9, 60.0], [44.0, 60.0], [44.1, 60.0], [44.2, 60.0], [44.3, 60.0], [44.4, 60.0], [44.5, 60.0], [44.6, 60.0], [44.7, 60.0], [44.8, 60.0], [44.9, 60.0], [45.0, 60.0], [45.1, 60.0], [45.2, 60.0], [45.3, 60.0], [45.4, 60.0], [45.5, 60.0], [45.6, 60.0], [45.7, 60.0], [45.8, 60.0], [45.9, 60.0], [46.0, 60.0], [46.1, 60.0], [46.2, 60.0], [46.3, 60.0], [46.4, 60.0], [46.5, 60.0], [46.6, 60.0], [46.7, 60.0], [46.8, 60.0], [46.9, 60.0], [47.0, 60.0], [47.1, 60.0], [47.2, 60.0], [47.3, 61.0], [47.4, 61.0], [47.5, 61.0], [47.6, 61.0], [47.7, 61.0], [47.8, 61.0], [47.9, 61.0], [48.0, 61.0], [48.1, 61.0], [48.2, 61.0], [48.3, 61.0], [48.4, 61.0], [48.5, 61.0], [48.6, 61.0], [48.7, 61.0], [48.8, 61.0], [48.9, 61.0], [49.0, 61.0], [49.1, 61.0], [49.2, 61.0], [49.3, 61.0], [49.4, 61.0], [49.5, 61.0], [49.6, 61.0], [49.7, 61.0], [49.8, 61.0], [49.9, 61.0], [50.0, 61.0], [50.1, 61.0], [50.2, 61.0], [50.3, 61.0], [50.4, 61.0], [50.5, 61.0], [50.6, 61.0], [50.7, 61.0], [50.8, 61.0], [50.9, 61.0], [51.0, 61.0], [51.1, 61.0], [51.2, 61.0], [51.3, 61.0], [51.4, 61.0], [51.5, 61.0], [51.6, 61.0], [51.7, 61.0], [51.8, 61.0], [51.9, 62.0], [52.0, 62.0], [52.1, 62.0], [52.2, 62.0], [52.3, 62.0], [52.4, 62.0], [52.5, 62.0], [52.6, 62.0], [52.7, 62.0], [52.8, 62.0], [52.9, 62.0], [53.0, 62.0], [53.1, 62.0], [53.2, 62.0], [53.3, 62.0], [53.4, 62.0], [53.5, 62.0], [53.6, 62.0], [53.7, 62.0], [53.8, 62.0], [53.9, 62.0], [54.0, 62.0], [54.1, 62.0], [54.2, 62.0], [54.3, 62.0], [54.4, 62.0], [54.5, 62.0], [54.6, 62.0], [54.7, 62.0], [54.8, 62.0], [54.9, 62.0], [55.0, 62.0], [55.1, 62.0], [55.2, 62.0], [55.3, 62.0], [55.4, 62.0], [55.5, 62.0], [55.6, 62.0], [55.7, 62.0], [55.8, 62.0], [55.9, 62.0], [56.0, 62.0], [56.1, 62.0], [56.2, 62.0], [56.3, 62.0], [56.4, 63.0], [56.5, 63.0], [56.6, 63.0], [56.7, 63.0], [56.8, 63.0], [56.9, 63.0], [57.0, 63.0], [57.1, 63.0], [57.2, 63.0], [57.3, 63.0], [57.4, 63.0], [57.5, 63.0], [57.6, 63.0], [57.7, 63.0], [57.8, 63.0], [57.9, 63.0], [58.0, 63.0], [58.1, 63.0], [58.2, 63.0], [58.3, 63.0], [58.4, 63.0], [58.5, 63.0], [58.6, 63.0], [58.7, 63.0], [58.8, 63.0], [58.9, 63.0], [59.0, 63.0], [59.1, 63.0], [59.2, 63.0], [59.3, 63.0], [59.4, 63.0], [59.5, 63.0], [59.6, 63.0], [59.7, 63.0], [59.8, 63.0], [59.9, 63.0], [60.0, 63.0], [60.1, 63.0], [60.2, 63.0], [60.3, 63.0], [60.4, 63.0], [60.5, 63.0], [60.6, 63.0], [60.7, 63.0], [60.8, 64.0], [60.9, 64.0], [61.0, 64.0], [61.1, 64.0], [61.2, 64.0], [61.3, 64.0], [61.4, 64.0], [61.5, 64.0], [61.6, 64.0], [61.7, 64.0], [61.8, 64.0], [61.9, 64.0], [62.0, 64.0], [62.1, 64.0], [62.2, 64.0], [62.3, 64.0], [62.4, 64.0], [62.5, 64.0], [62.6, 64.0], [62.7, 64.0], [62.8, 64.0], [62.9, 64.0], [63.0, 64.0], [63.1, 64.0], [63.2, 64.0], [63.3, 64.0], [63.4, 64.0], [63.5, 64.0], [63.6, 64.0], [63.7, 64.0], [63.8, 64.0], [63.9, 64.0], [64.0, 64.0], [64.1, 64.0], [64.2, 64.0], [64.3, 64.0], [64.4, 64.0], [64.5, 64.0], [64.6, 64.0], [64.7, 64.0], [64.8, 65.0], [64.9, 65.0], [65.0, 65.0], [65.1, 65.0], [65.2, 65.0], [65.3, 65.0], [65.4, 65.0], [65.5, 65.0], [65.6, 65.0], [65.7, 65.0], [65.8, 65.0], [65.9, 65.0], [66.0, 65.0], [66.1, 65.0], [66.2, 65.0], [66.3, 65.0], [66.4, 65.0], [66.5, 65.0], [66.6, 65.0], [66.7, 65.0], [66.8, 65.0], [66.9, 65.0], [67.0, 65.0], [67.1, 65.0], [67.2, 65.0], [67.3, 65.0], [67.4, 65.0], [67.5, 65.0], [67.6, 65.0], [67.7, 65.0], [67.8, 65.0], [67.9, 65.0], [68.0, 65.0], [68.1, 65.0], [68.2, 65.0], [68.3, 65.0], [68.4, 66.0], [68.5, 66.0], [68.6, 66.0], [68.7, 66.0], [68.8, 66.0], [68.9, 66.0], [69.0, 66.0], [69.1, 66.0], [69.2, 66.0], [69.3, 66.0], [69.4, 66.0], [69.5, 66.0], [69.6, 66.0], [69.7, 66.0], [69.8, 66.0], [69.9, 66.0], [70.0, 66.0], [70.1, 66.0], [70.2, 66.0], [70.3, 66.0], [70.4, 66.0], [70.5, 66.0], [70.6, 66.0], [70.7, 66.0], [70.8, 66.0], [70.9, 66.0], [71.0, 66.0], [71.1, 66.0], [71.2, 66.0], [71.3, 66.0], [71.4, 66.0], [71.5, 66.0], [71.6, 66.0], [71.7, 66.0], [71.8, 66.0], [71.9, 67.0], [72.0, 67.0], [72.1, 67.0], [72.2, 67.0], [72.3, 67.0], [72.4, 67.0], [72.5, 67.0], [72.6, 67.0], [72.7, 67.0], [72.8, 67.0], [72.9, 67.0], [73.0, 67.0], [73.1, 67.0], [73.2, 67.0], [73.3, 67.0], [73.4, 67.0], [73.5, 67.0], [73.6, 67.0], [73.7, 67.0], [73.8, 67.0], [73.9, 67.0], [74.0, 67.0], [74.1, 67.0], [74.2, 67.0], [74.3, 68.0], [74.4, 68.0], [74.5, 68.0], [74.6, 68.0], [74.7, 68.0], [74.8, 68.0], [74.9, 68.0], [75.0, 68.0], [75.1, 68.0], [75.2, 68.0], [75.3, 68.0], [75.4, 68.0], [75.5, 68.0], [75.6, 68.0], [75.7, 68.0], [75.8, 68.0], [75.9, 68.0], [76.0, 68.0], [76.1, 68.0], [76.2, 68.0], [76.3, 68.0], [76.4, 68.0], [76.5, 68.0], [76.6, 68.0], [76.7, 68.0], [76.8, 68.0], [76.9, 68.0], [77.0, 68.0], [77.1, 68.0], [77.2, 68.0], [77.3, 68.0], [77.4, 69.0], [77.5, 69.0], [77.6, 69.0], [77.7, 69.0], [77.8, 69.0], [77.9, 69.0], [78.0, 69.0], [78.1, 69.0], [78.2, 69.0], [78.3, 69.0], [78.4, 69.0], [78.5, 69.0], [78.6, 69.0], [78.7, 69.0], [78.8, 69.0], [78.9, 69.0], [79.0, 69.0], [79.1, 69.0], [79.2, 69.0], [79.3, 69.0], [79.4, 69.0], [79.5, 69.0], [79.6, 69.0], [79.7, 69.0], [79.8, 69.0], [79.9, 69.0], [80.0, 69.0], [80.1, 69.0], [80.2, 70.0], [80.3, 70.0], [80.4, 70.0], [80.5, 70.0], [80.6, 70.0], [80.7, 70.0], [80.8, 70.0], [80.9, 70.0], [81.0, 70.0], [81.1, 70.0], [81.2, 70.0], [81.3, 70.0], [81.4, 70.0], [81.5, 70.0], [81.6, 70.0], [81.7, 70.0], [81.8, 70.0], [81.9, 70.0], [82.0, 70.0], [82.1, 70.0], [82.2, 70.0], [82.3, 70.0], [82.4, 70.0], [82.5, 70.0], [82.6, 70.0], [82.7, 70.0], [82.8, 70.0], [82.9, 71.0], [83.0, 71.0], [83.1, 71.0], [83.2, 71.0], [83.3, 71.0], [83.4, 71.0], [83.5, 71.0], [83.6, 71.0], [83.7, 71.0], [83.8, 71.0], [83.9, 71.0], [84.0, 71.0], [84.1, 71.0], [84.2, 71.0], [84.3, 71.0], [84.4, 71.0], [84.5, 71.0], [84.6, 71.0], [84.7, 71.0], [84.8, 71.0], [84.9, 72.0], [85.0, 72.0], [85.1, 72.0], [85.2, 72.0], [85.3, 72.0], [85.4, 72.0], [85.5, 72.0], [85.6, 72.0], [85.7, 72.0], [85.8, 72.0], [85.9, 72.0], [86.0, 72.0], [86.1, 72.0], [86.2, 72.0], [86.3, 72.0], [86.4, 72.0], [86.5, 72.0], [86.6, 73.0], [86.7, 73.0], [86.8, 73.0], [86.9, 73.0], [87.0, 73.0], [87.1, 73.0], [87.2, 73.0], [87.3, 73.0], [87.4, 73.0], [87.5, 73.0], [87.6, 73.0], [87.7, 73.0], [87.8, 73.0], [87.9, 73.0], [88.0, 73.0], [88.1, 74.0], [88.2, 74.0], [88.3, 74.0], [88.4, 74.0], [88.5, 74.0], [88.6, 74.0], [88.7, 74.0], [88.8, 74.0], [88.9, 74.0], [89.0, 74.0], [89.1, 74.0], [89.2, 74.0], [89.3, 75.0], [89.4, 75.0], [89.5, 75.0], [89.6, 75.0], [89.7, 75.0], [89.8, 75.0], [89.9, 75.0], [90.0, 75.0], [90.1, 75.0], [90.2, 76.0], [90.3, 76.0], [90.4, 76.0], [90.5, 76.0], [90.6, 76.0], [90.7, 76.0], [90.8, 77.0], [90.9, 77.0], [91.0, 77.0], [91.1, 77.0], [91.2, 77.0], [91.3, 77.0], [91.4, 77.0], [91.5, 77.0], [91.6, 77.0], [91.7, 78.0], [91.8, 78.0], [91.9, 78.0], [92.0, 78.0], [92.1, 78.0], [92.2, 79.0], [92.3, 79.0], [92.4, 79.0], [92.5, 79.0], [92.6, 79.0], [92.7, 79.0], [92.8, 80.0], [92.9, 80.0], [93.0, 80.0], [93.1, 81.0], [93.2, 81.0], [93.3, 81.0], [93.4, 81.0], [93.5, 82.0], [93.6, 82.0], [93.7, 83.0], [93.8, 83.0], [93.9, 83.0], [94.0, 84.0], [94.1, 85.0], [94.2, 86.0], [94.3, 87.0], [94.4, 87.0], [94.5, 88.0], [94.6, 89.0], [94.7, 90.0], [94.8, 93.0], [94.9, 93.0], [95.0, 97.0], [95.1, 101.0], [95.2, 104.0], [95.3, 106.0], [95.4, 109.0], [95.5, 111.0], [95.6, 116.0], [95.7, 119.0], [95.8, 125.0], [95.9, 128.0], [96.0, 131.0], [96.1, 133.0], [96.2, 136.0], [96.3, 138.0], [96.4, 139.0], [96.5, 141.0], [96.6, 143.0], [96.7, 146.0], [96.8, 148.0], [96.9, 150.0], [97.0, 151.0], [97.1, 153.0], [97.2, 155.0], [97.3, 157.0], [97.4, 157.0], [97.5, 158.0], [97.6, 160.0], [97.7, 164.0], [97.8, 173.0], [97.9, 187.0], [98.0, 209.0], [98.1, 236.0], [98.2, 240.0], [98.3, 256.0], [98.4, 262.0], [98.5, 264.0], [98.6, 265.0], [98.7, 267.0], [98.8, 269.0], [98.9, 271.0], [99.0, 276.0], [99.1, 280.0], [99.2, 281.0], [99.3, 282.0], [99.4, 283.0], [99.5, 285.0], [99.6, 287.0], [99.7, 290.0], [99.8, 291.0], [99.9, 295.0], [100.0, 313.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4753.0, "series": [{"data": [[0.0, 2968.0], [1100.0, 8.0], [300.0, 333.0], [600.0, 5.0], [1300.0, 1.0], [100.0, 1611.0], [200.0, 56.0], [400.0, 7.0], [500.0, 11.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 277.0], [600.0, 257.0], [700.0, 276.0], [200.0, 171.0], [800.0, 604.0], [900.0, 725.0], [1000.0, 347.0], [1100.0, 172.0], [300.0, 749.0], [1200.0, 227.0], [1300.0, 228.0], [1400.0, 99.0], [100.0, 180.0], [400.0, 328.0], [500.0, 360.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 4753.0], [300.0, 4.0], [100.0, 147.0], [200.0, 96.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3317.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 11683.0, "series": [{"data": [[0.0, 11683.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3317.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 91.76279999999994, "minX": 1.66901868E12, "maxY": 856.9493999999981, "series": [{"data": [[1.66901868E12, 856.9493999999981]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.66901868E12, 248.38679999999985]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.66901868E12, 91.76279999999994]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901868E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.0, "maxY": 1438.0, "series": [{"data": [[2.0, 291.0], [3.0, 241.0], [4.0, 269.0], [5.0, 294.0], [6.0, 261.0], [9.0, 88.0], [10.0, 74.0], [11.0, 78.0], [12.0, 78.0], [13.0, 73.0], [14.0, 84.0], [16.0, 72.5], [18.0, 76.0], [19.0, 82.0], [20.0, 89.0], [23.0, 87.0], [24.0, 90.0], [26.0, 74.5], [27.0, 75.0], [29.0, 81.0], [30.0, 82.0], [33.0, 88.33333333333333], [34.0, 79.0], [38.0, 204.5], [40.0, 104.75], [45.0, 89.4], [44.0, 109.0], [46.0, 75.0], [49.0, 72.0], [51.0, 71.0], [53.0, 72.0], [52.0, 75.0], [55.0, 76.25], [54.0, 87.16666666666667], [57.0, 70.0], [56.0, 77.0], [59.0, 76.33333333333333], [58.0, 706.0], [61.0, 90.6], [60.0, 89.33333333333333], [62.0, 110.16666666666666], [63.0, 68.0], [67.0, 95.0], [65.0, 125.77777777777777], [66.0, 74.75], [70.0, 91.8], [71.0, 85.33333333333333], [69.0, 95.2727272727273], [68.0, 75.33333333333333], [72.0, 93.66666666666667], [73.0, 76.0], [75.0, 126.75], [79.0, 87.16666666666669], [78.0, 91.49999999999999], [77.0, 68.22222222222223], [76.0, 80.75], [82.0, 109.14285714285714], [81.0, 118.16666666666666], [80.0, 76.33333333333331], [83.0, 78.33333333333333], [87.0, 111.85714285714285], [86.0, 80.5], [84.0, 170.71428571428572], [85.0, 82.75], [91.0, 101.07692307692308], [90.0, 77.66666666666666], [89.0, 107.18181818181819], [88.0, 80.45454545454547], [95.0, 80.49999999999999], [93.0, 115.81818181818181], [92.0, 82.64285714285714], [94.0, 104.76470588235296], [99.0, 76.46153846153847], [98.0, 93.92857142857143], [97.0, 86.05555555555556], [96.0, 74.9375], [102.0, 77.81249999999999], [100.0, 107.73333333333335], [103.0, 100.52631578947367], [101.0, 116.63636363636364], [107.0, 88.9090909090909], [106.0, 123.61904761904759], [105.0, 117.11111111111109], [104.0, 71.93333333333334], [111.0, 119.5], [110.0, 121.2941176470588], [108.0, 153.45000000000002], [109.0, 100.33333333333333], [114.0, 100.10526315789474], [113.0, 139.71428571428572], [112.0, 152.69565217391306], [115.0, 102.00000000000003], [118.0, 99.64999999999999], [116.0, 92.72222222222223], [119.0, 79.2], [117.0, 91.68181818181819], [120.0, 93.21739130434783], [123.0, 85.06250000000001], [122.0, 71.43750000000001], [121.0, 85.0], [124.0, 131.08695652173913], [126.0, 88.3157894736842], [127.0, 80.92307692307692], [125.0, 79.875], [135.0, 83.5], [133.0, 94.13043478260869], [130.0, 99.47058823529412], [128.0, 84.5], [131.0, 88.71428571428571], [132.0, 91.89473684210526], [134.0, 85.1], [129.0, 82.7], [142.0, 93.16666666666666], [139.0, 96.37500000000001], [137.0, 140.5], [141.0, 114.73333333333333], [140.0, 94.36363636363633], [138.0, 99.06666666666666], [136.0, 87.125], [143.0, 96.77777777777777], [149.0, 85.0], [147.0, 110.23076923076925], [146.0, 86.3478260869565], [145.0, 88.74074074074073], [144.0, 83.24999999999999], [150.0, 81.73684210526315], [148.0, 96.65217391304348], [151.0, 91.71428571428571], [153.0, 97.42105263157895], [152.0, 94.54166666666669], [157.0, 86.27272727272728], [154.0, 85.61538461538461], [156.0, 85.45454545454545], [158.0, 84.8421052631579], [159.0, 97.09090909090911], [155.0, 114.8125], [167.0, 111.11111111111111], [166.0, 85.33333333333331], [165.0, 109.33333333333334], [164.0, 84.72727272727275], [163.0, 91.40000000000002], [161.0, 88.66666666666667], [160.0, 81.58823529411765], [162.0, 84.52631578947368], [168.0, 84.18181818181816], [175.0, 86.44444444444444], [174.0, 90.89999999999998], [171.0, 89.27272727272725], [169.0, 88.9375], [173.0, 87.4375], [172.0, 78.71428571428571], [170.0, 81.83333333333333], [183.0, 83.76923076923077], [182.0, 86.66666666666667], [181.0, 91.54545454545455], [180.0, 83.30769230769229], [178.0, 106.27272727272727], [177.0, 92.79166666666669], [176.0, 103.78571428571429], [179.0, 240.28571428571428], [191.0, 95.14285714285714], [190.0, 87.72727272727272], [187.0, 110.55555555555556], [184.0, 85.66666666666666], [185.0, 85.4], [186.0, 105.14285714285715], [189.0, 86.5], [188.0, 151.375], [199.0, 90.33333333333333], [195.0, 115.63157894736841], [194.0, 90.55555555555556], [193.0, 88.71428571428571], [198.0, 90.81818181818181], [197.0, 86.44444444444443], [196.0, 105.42857142857144], [192.0, 86.28571428571429], [207.0, 83.16666666666667], [206.0, 108.1111111111111], [205.0, 91.77777777777777], [204.0, 84.9090909090909], [203.0, 95.16666666666667], [202.0, 113.5], [201.0, 88.4], [200.0, 86.22222222222223], [213.0, 95.75], [212.0, 115.0], [210.0, 142.4], [209.0, 86.15384615384616], [208.0, 87.9], [215.0, 91.4], [214.0, 106.45454545454548], [211.0, 86.0], [222.0, 130.3], [220.0, 94.34782608695652], [219.0, 126.38461538461539], [218.0, 84.07692307692308], [223.0, 127.11111111111111], [221.0, 85.5], [217.0, 90.0], [216.0, 96.94736842105264], [229.0, 116.375], [228.0, 117.39999999999999], [227.0, 131.1818181818182], [226.0, 103.44262295081967], [225.0, 90.1590909090909], [231.0, 118.22222222222223], [230.0, 97.99999999999999], [224.0, 105.42857142857143], [239.0, 114.36363636363636], [232.0, 86.66666666666667], [237.0, 172.83333333333334], [235.0, 87.8], [234.0, 120.55555555555556], [233.0, 120.55555555555556], [238.0, 140.6], [236.0, 173.125], [246.0, 120.27777777777776], [245.0, 111.44444444444446], [244.0, 108.48571428571428], [242.0, 87.26666666666667], [240.0, 88.125], [243.0, 86.75], [247.0, 95.4], [241.0, 97.61290322580645], [254.0, 140.92307692307693], [253.0, 94.92857142857144], [255.0, 99.22222222222223], [251.0, 93.22222222222223], [249.0, 115.0909090909091], [252.0, 84.875], [248.0, 89.80000000000001], [250.0, 100.33333333333333], [270.0, 165.42857142857142], [257.0, 91.11111111111111], [262.0, 97.8], [261.0, 87.42857142857143], [260.0, 94.85714285714286], [259.0, 89.54545454545455], [258.0, 89.55555555555556], [256.0, 123.0], [263.0, 98.14285714285714], [271.0, 131.05263157894737], [264.0, 116.625], [269.0, 92.55555555555556], [268.0, 86.88888888888889], [267.0, 121.0], [266.0, 92.91666666666666], [265.0, 108.0769230769231], [286.0, 135.2173913043478], [287.0, 172.83333333333331], [280.0, 129.75], [284.0, 141.0], [275.0, 246.53846153846158], [274.0, 87.75], [281.0, 150.2222222222222], [278.0, 130.75], [276.0, 119.29411764705881], [277.0, 137.375], [279.0, 88.14285714285714], [272.0, 88.0], [273.0, 143.72727272727272], [285.0, 133.92857142857142], [283.0, 135.57142857142858], [282.0, 106.8235294117647], [290.0, 139.48717948717947], [292.0, 135.85714285714286], [291.0, 265.6363636363637], [301.0, 118.27272727272728], [300.0, 282.57142857142856], [303.0, 157.38888888888889], [302.0, 150.07142857142858], [288.0, 154.44444444444443], [295.0, 152.41666666666666], [298.0, 161.06249999999997], [297.0, 129.0], [299.0, 164.0], [296.0, 122.0], [294.0, 113.53333333333333], [293.0, 200.50000000000003], [289.0, 167.64285714285717], [307.0, 197.88888888888886], [318.0, 102.71428571428571], [316.0, 144.28571428571428], [317.0, 133.0], [315.0, 100.5], [314.0, 156.6], [313.0, 135.625], [319.0, 93.83333333333333], [312.0, 145.22222222222223], [311.0, 133.8], [309.0, 200.3], [308.0, 159.10526315789474], [310.0, 238.71428571428572], [306.0, 192.3684210526316], [304.0, 184.3548387096774], [305.0, 103.50000000000001], [334.0, 183.41176470588238], [329.0, 153.9230769230769], [331.0, 146.66666666666666], [330.0, 135.53571428571428], [328.0, 138.77777777777777], [327.0, 137.0], [322.0, 108.8], [321.0, 89.6], [323.0, 93.5], [320.0, 104.54545454545455], [326.0, 97.66666666666666], [325.0, 116.22222222222221], [324.0, 164.09999999999997], [335.0, 148.76923076923077], [333.0, 175.89473684210523], [332.0, 127.5], [350.0, 131.16666666666663], [351.0, 132.73684210526315], [349.0, 127.75000000000001], [348.0, 108.1875], [347.0, 134.33333333333334], [346.0, 129.4230769230769], [345.0, 104.45454545454545], [344.0, 141.64705882352942], [343.0, 123.0], [336.0, 112.58823529411764], [338.0, 142.9393939393939], [339.0, 112.05000000000001], [337.0, 129.29411764705884], [342.0, 115.00000000000001], [341.0, 103.45454545454545], [340.0, 141.82352941176467], [365.0, 102.5], [352.0, 100.8888888888889], [354.0, 113.16666666666667], [353.0, 134.23529411764707], [364.0, 97.5], [355.0, 98.92857142857142], [367.0, 139.27999999999997], [360.0, 174.62499999999997], [363.0, 121.60000000000001], [362.0, 97.25], [361.0, 118.0], [359.0, 129.0], [358.0, 118.875], [357.0, 106.10000000000001], [356.0, 98.72727272727273], [366.0, 126.75000000000003], [380.0, 148.04347826086956], [382.0, 162.8], [381.0, 171.71428571428572], [383.0, 159.2], [378.0, 112.66666666666667], [377.0, 128.33333333333331], [379.0, 120.19999999999997], [376.0, 113.3], [375.0, 149.8], [373.0, 160.33333333333334], [374.0, 170.6], [372.0, 209.0], [371.0, 122.14285714285714], [369.0, 118.06250000000001], [368.0, 128.0769230769231], [370.0, 128.875], [397.0, 238.69230769230768], [388.0, 116.33333333333331], [389.0, 117.83333333333333], [391.0, 186.44444444444446], [390.0, 134.8], [386.0, 128.00000000000003], [385.0, 112.5], [387.0, 242.375], [396.0, 267.66666666666663], [384.0, 103.85714285714285], [399.0, 163.26086956521738], [398.0, 273.0], [395.0, 251.3846153846154], [394.0, 193.39999999999998], [393.0, 196.0], [392.0, 236.16666666666666], [414.0, 154.0], [400.0, 130.2], [403.0, 153.625], [401.0, 142.5], [407.0, 147.0], [406.0, 152.0], [405.0, 144.0], [404.0, 153.5], [415.0, 146.0], [413.0, 161.0], [412.0, 137.0], [411.0, 127.0], [410.0, 135.0], [409.0, 145.0], [408.0, 144.0], [418.0, 194.66666666666666], [421.0, 129.3], [420.0, 164.8], [419.0, 117.5], [417.0, 110.57142857142857], [416.0, 121.0], [423.0, 214.25], [422.0, 226.10204081632648], [430.0, 97.0], [429.0, 95.0], [428.0, 143.75], [427.0, 103.8], [426.0, 119.0], [425.0, 164.83333333333334], [424.0, 82.0], [431.0, 121.0], [435.0, 112.0], [441.0, 101.0], [440.0, 116.33333333333333], [437.0, 110.5], [436.0, 112.0], [432.0, 169.33333333333334], [443.0, 117.5], [442.0, 135.0], [444.0, 126.0], [445.0, 130.0], [447.0, 137.5], [446.0, 129.0], [450.0, 153.55555555555554], [454.0, 144.1333333333333], [455.0, 143.0], [453.0, 122.0], [452.0, 124.66666666666667], [451.0, 152.8], [460.0, 184.2], [449.0, 144.46153846153845], [448.0, 139.0], [462.0, 157.0], [459.0, 143.5], [457.0, 158.5], [456.0, 145.0], [458.0, 155.66666666666666], [463.0, 192.0], [461.0, 147.5], [477.0, 142.0], [468.0, 154.0], [469.0, 178.0], [466.0, 159.25], [465.0, 146.33333333333334], [464.0, 153.08695652173915], [471.0, 164.0], [470.0, 159.0], [479.0, 164.5], [476.0, 158.5], [467.0, 157.33333333333334], [478.0, 174.0], [475.0, 171.0], [474.0, 161.625], [473.0, 152.0], [472.0, 164.0], [487.0, 121.66666666666667], [485.0, 147.8], [484.0, 125.12499999999999], [486.0, 120.0], [495.0, 117.2], [494.0, 120.0], [493.0, 125.66666666666667], [492.0, 125.0], [483.0, 159.0], [482.0, 158.0], [480.0, 150.66666666666666], [481.0, 157.0], [491.0, 139.2258064516129], [490.0, 138.66666666666666], [489.0, 99.5], [497.0, 136.5], [509.0, 118.0], [499.0, 145.0], [502.0, 134.0], [510.0, 135.33333333333334], [506.0, 120.0], [505.0, 141.0], [504.0, 142.0], [503.0, 130.0], [496.0, 124.0], [500.0, 133.0], [532.0, 129.0], [513.0, 122.53333333333333], [527.0, 140.0], [526.0, 115.0], [525.0, 133.0], [524.0, 122.0], [523.0, 147.0], [522.0, 148.5], [521.0, 129.33333333333334], [520.0, 127.0], [514.0, 137.0], [536.0, 126.0], [518.0, 133.33333333333334], [529.0, 131.0], [528.0, 116.0], [535.0, 129.0], [534.0, 139.0], [533.0, 142.0], [531.0, 115.0], [530.0, 148.0], [1.0, 266.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[248.38579999999988, 119.30120000000004]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 1424.5], [3.0, 1427.0], [4.0, 1429.0], [5.0, 1432.0], [6.0, 1430.0], [7.0, 1412.0], [9.0, 1417.5], [11.0, 1417.5], [13.0, 1400.0], [15.0, 4.2], [16.0, 839.8], [17.0, 1401.0], [18.0, 1400.0], [19.0, 721.0], [20.0, 7.0], [21.0, 1404.0], [22.0, 1407.0], [24.0, 1422.5], [25.0, 1408.0], [26.0, 1409.0], [27.0, 1424.0], [29.0, 1428.0], [33.0, 1373.0], [32.0, 1420.0], [34.0, 1407.3333333333333], [39.0, 1398.2], [42.0, 1359.0], [45.0, 1401.0], [48.0, 1410.0], [51.0, 1358.0], [50.0, 1351.0], [53.0, 1050.25], [54.0, 718.5], [57.0, 30.5], [59.0, 24.0], [58.0, 32.0], [60.0, 472.0], [61.0, 559.8], [63.0, 19.75], [62.0, 1121.2], [65.0, 601.2857142857142], [64.0, 257.5], [66.0, 31.5], [67.0, 36.0], [70.0, 258.16666666666663], [69.0, 473.3333333333333], [68.0, 177.55555555555554], [71.0, 834.2], [74.0, 21.333333333333332], [72.0, 27.0], [73.0, 252.16666666666666], [75.0, 1358.0], [79.0, 1360.6666666666667], [76.0, 1405.3333333333333], [85.0, 1357.0], [86.0, 1424.0], [91.0, 1361.0], [88.0, 1393.3333333333333], [95.0, 1314.0], [94.0, 1437.0], [92.0, 1395.5], [99.0, 1438.0], [96.0, 1395.6666666666667], [103.0, 33.0], [102.0, 905.3333333333334], [101.0, 45.5], [100.0, 582.2], [107.0, 360.25], [105.0, 718.5], [106.0, 50.0], [104.0, 1415.0], [110.0, 43.4], [108.0, 901.6666666666666], [109.0, 1356.5], [112.0, 716.5], [114.0, 578.2], [117.0, 1033.5], [118.0, 58.0], [116.0, 54.5], [120.0, 1360.6666666666667], [127.0, 800.5714285714286], [126.0, 50.0], [125.0, 1385.0], [132.0, 559.2], [129.0, 37.0], [128.0, 40.0], [135.0, 698.0], [134.0, 1379.0], [131.0, 1381.5], [130.0, 1291.0], [143.0, 737.0], [141.0, 52.666666666666664], [139.0, 52.0], [138.0, 51.0], [137.0, 1034.0], [136.0, 48.0], [140.0, 1293.0], [151.0, 887.6666666666666], [150.0, 49.0], [149.0, 709.75], [148.0, 50.5], [146.0, 1114.0], [145.0, 686.0], [144.0, 50.0], [159.0, 1029.25], [158.0, 45.0], [157.0, 50.0], [155.0, 54.0], [154.0, 732.0], [152.0, 45.0], [156.0, 1360.0], [153.0, 1381.0], [167.0, 803.4], [165.0, 51.5], [163.0, 502.3333333333333], [162.0, 63.0], [161.0, 710.5], [160.0, 505.3333333333333], [166.0, 1354.0], [175.0, 507.6666666666667], [174.0, 1027.0], [172.0, 725.0], [171.0, 505.6666666666667], [169.0, 44.0], [173.0, 1413.0], [182.0, 853.8], [179.0, 60.666666666666664], [177.0, 52.0], [183.0, 1411.0], [178.0, 1338.75], [187.0, 395.25], [186.0, 1037.5], [184.0, 58.5], [190.0, 1312.0], [188.0, 1365.0], [185.0, 1405.0], [198.0, 485.1111111111111], [199.0, 1338.0], [195.0, 1358.6666666666667], [193.0, 1338.0], [192.0, 1403.0], [206.0, 721.5], [205.0, 59.5], [202.0, 300.4], [200.0, 68.5], [207.0, 62.666666666666664], [203.0, 1039.0], [210.0, 63.13333333333333], [211.0, 592.4], [214.0, 729.5], [213.0, 61.0], [212.0, 75.0], [209.0, 375.5], [215.0, 1346.3333333333333], [208.0, 1331.6666666666667], [217.0, 75.75], [222.0, 663.0], [221.0, 57.0], [220.0, 62.0], [219.0, 673.0], [218.0, 1004.0], [216.0, 66.0], [223.0, 1340.0], [224.0, 67.66666666666667], [231.0, 1334.3333333333333], [230.0, 1384.0], [228.0, 1380.0], [227.0, 1393.0], [225.0, 1367.5], [238.0, 1332.0], [237.0, 1255.0], [236.0, 1349.0], [234.0, 1359.3333333333333], [246.0, 232.75], [245.0, 70.0], [244.0, 724.5], [247.0, 1382.0], [242.0, 1361.0], [241.0, 1386.0], [240.0, 1341.0], [254.0, 1336.3333333333333], [251.0, 1324.0], [249.0, 1353.0], [248.0, 1360.5], [270.0, 86.5], [271.0, 83.0], [269.0, 1024.75], [267.0, 81.0], [268.0, 1249.0], [266.0, 1342.3333333333333], [264.0, 1372.0], [262.0, 1340.6666666666667], [258.0, 1345.0], [256.0, 1291.5], [260.0, 1372.0], [286.0, 486.6666666666667], [287.0, 584.0], [285.0, 82.0], [284.0, 1308.0], [275.0, 78.0], [274.0, 395.75], [272.0, 1355.3333333333333], [283.0, 79.0], [282.0, 805.8571428571429], [280.0, 679.0], [281.0, 86.2], [279.0, 79.0], [278.0, 925.0], [277.0, 83.75], [276.0, 876.3333333333334], [290.0, 1031.0], [291.0, 286.1666666666667], [289.0, 80.0], [288.0, 94.0], [301.0, 1317.3333333333333], [299.0, 1295.0], [297.0, 1275.0], [296.0, 1349.0], [293.0, 1348.0], [292.0, 1297.0], [319.0, 1319.0], [311.0, 1329.0], [310.0, 1341.0], [308.0, 1326.0], [307.0, 1310.5], [305.0, 1339.0], [304.0, 1313.5], [335.0, 96.5], [333.0, 1316.3333333333333], [330.0, 1308.5], [329.0, 1329.5], [328.0, 1305.0], [327.0, 1307.75], [323.0, 1326.1666666666667], [322.0, 1343.5], [337.0, 510.6666666666667], [336.0, 404.25], [351.0, 1300.3333333333333], [350.0, 1335.0], [347.0, 1303.5], [345.0, 1281.0], [344.0, 1308.3333333333333], [341.0, 1308.0], [339.0, 1305.5], [338.0, 1337.0], [359.0, 102.0], [356.0, 97.0], [355.0, 699.5], [354.0, 714.75], [353.0, 721.0], [364.0, 1315.0], [361.0, 1300.0], [358.0, 1291.0], [381.0, 193.12500000000003], [377.0, 307.6666666666667], [376.0, 206.66666666666666], [382.0, 184.49999999999997], [383.0, 468.1875], [380.0, 185.57142857142858], [370.0, 1286.0], [379.0, 433.3846153846154], [378.0, 192.33333333333334], [375.0, 1048.4444444444443], [374.0, 922.6666666666666], [373.0, 181.0], [372.0, 199.0], [398.0, 148.0], [399.0, 373.7142857142857], [397.0, 211.75], [396.0, 152.0], [395.0, 385.4], [394.0, 567.5], [393.0, 382.6666666666667], [392.0, 385.83333333333337], [391.0, 331.625], [387.0, 321.77777777777777], [386.0, 412.92857142857144], [384.0, 184.57142857142856], [385.0, 188.0909090909091], [388.0, 185.5], [390.0, 188.8], [389.0, 347.7142857142857], [414.0, 912.3333333333334], [415.0, 897.6666666666666], [413.0, 640.4], [412.0, 720.5], [411.0, 213.66666666666666], [410.0, 151.0], [409.0, 217.66666666666666], [408.0, 204.75], [406.0, 217.0], [407.0, 247.0], [401.0, 643.0], [400.0, 217.0], [403.0, 562.6666666666667], [402.0, 477.5], [405.0, 229.25], [404.0, 656.4000000000001], [430.0, 132.5], [431.0, 782.2857142857143], [428.0, 1055.2], [429.0, 1270.5], [419.0, 156.0], [417.0, 156.5], [418.0, 1274.0], [416.0, 891.75], [427.0, 223.33333333333334], [426.0, 154.5], [425.0, 204.0], [423.0, 152.0], [422.0, 154.0], [421.0, 829.2], [433.0, 697.25], [432.0, 136.0], [447.0, 220.75], [446.0, 941.3333333333334], [440.0, 769.5], [445.0, 572.6666666666667], [444.0, 251.75], [435.0, 152.0], [443.0, 519.3333333333333], [442.0, 768.0], [441.0, 206.25], [439.0, 733.75], [438.0, 190.33333333333334], [437.0, 693.5], [436.0, 887.6666666666666], [450.0, 312.2], [449.0, 624.1], [459.0, 411.4545454545455], [458.0, 464.4285714285714], [457.0, 329.90000000000003], [455.0, 305.625], [453.0, 546.25], [452.0, 334.3333333333333], [454.0, 328.6], [451.0, 326.5], [460.0, 379.2777777777778], [448.0, 295.0], [463.0, 394.25], [462.0, 353.1428571428571], [456.0, 465.0], [461.0, 756.4545454545455], [465.0, 345.14285714285717], [468.0, 337.6666666666667], [466.0, 338.66666666666663], [469.0, 339.14285714285717], [467.0, 636.5555555555555], [472.0, 322.6666666666667], [479.0, 339.0], [478.0, 894.2], [477.0, 364.0], [476.0, 1263.0], [470.0, 847.3333333333333], [473.0, 559.0], [475.0, 779.0], [474.0, 814.5], [471.0, 358.0], [464.0, 365.83333333333337], [495.0, 341.0], [482.0, 344.0], [483.0, 875.8], [494.0, 409.0], [492.0, 335.0], [480.0, 958.3333333333334], [491.0, 728.2857142857142], [490.0, 310.0], [489.0, 400.0], [488.0, 944.3333333333333], [486.0, 767.0], [485.0, 405.0], [508.0, 1249.0], [497.0, 377.0], [499.0, 1244.5], [511.0, 1243.0], [507.0, 1209.5], [505.0, 1225.2], [504.0, 1245.0], [503.0, 1237.0], [501.0, 1216.5], [500.0, 1216.0], [506.0, 1218.0], [537.0, 784.0], [523.0, 364.5], [521.0, 980.2857142857143], [520.0, 1214.0], [519.0, 352.375], [525.0, 1235.0], [517.0, 1215.5], [515.0, 1211.0], [540.0, 1018.0], [529.0, 1194.0], [531.0, 1220.0], [530.0, 1232.0], [533.0, 353.0], [532.0, 1110.0], [539.0, 319.0], [538.0, 358.0], [536.0, 765.0], [535.0, 1002.25], [534.0, 330.0], [568.0, 331.5], [558.0, 333.6666666666667], [559.0, 1193.5], [551.0, 1217.5], [549.0, 1184.5], [547.0, 1205.8], [546.0, 1226.0], [544.0, 1217.0], [557.0, 617.6666666666667], [556.0, 477.2631578947368], [555.0, 333.0], [554.0, 340.0], [553.0, 775.5], [552.0, 770.5], [566.0, 899.0], [565.0, 796.0], [564.0, 357.0], [563.0, 1189.25], [562.0, 309.5], [560.0, 326.5], [575.0, 347.3333333333333], [574.0, 752.0], [573.0, 647.0], [572.0, 296.5], [571.0, 926.3333333333334], [570.0, 617.0], [569.0, 732.0], [581.0, 882.3333333333334], [590.0, 540.5], [578.0, 910.3333333333334], [580.0, 751.0], [579.0, 748.0], [582.0, 727.5], [577.0, 731.5], [576.0, 325.0], [591.0, 750.0], [592.0, 329.0], [605.0, 1160.0], [603.0, 1164.0], [593.0, 726.5], [595.0, 886.6666666666666], [594.0, 733.0], [597.0, 302.0], [596.0, 743.5], [599.0, 961.5], [598.0, 336.0], [602.0, 594.6666666666667], [600.0, 286.0], [583.0, 606.3333333333333], [588.0, 319.0], [589.0, 875.3333333333334], [587.0, 746.75], [586.0, 616.3333333333333], [585.0, 331.0], [584.0, 627.6666666666667], [638.0, 315.0], [626.0, 635.125], [629.0, 728.5], [631.0, 1115.0], [630.0, 1136.0], [628.0, 604.6666666666667], [627.0, 587.6666666666667], [625.0, 326.5], [624.0, 337.0], [623.0, 511.25], [608.0, 1159.0], [613.0, 1156.6666666666667], [610.0, 1153.5], [615.0, 746.0], [634.0, 1137.3333333333333], [639.0, 965.8], [614.0, 320.5], [622.0, 804.4], [621.0, 338.0], [620.0, 296.5], [619.0, 597.0], [618.0, 872.3333333333333], [617.0, 302.5], [666.0, 1118.5], [656.0, 312.8], [641.0, 326.8], [642.0, 662.4285714285714], [645.0, 1102.0], [664.0, 1129.0], [646.0, 1134.6666666666667], [667.0, 1120.0], [670.0, 1130.0], [669.0, 1120.0], [640.0, 579.6666666666667], [659.0, 315.0], [660.0, 1111.5], [662.0, 1093.0], [661.0, 1098.0], [658.0, 858.6666666666667], [657.0, 317.75], [655.0, 845.3333333333334], [654.0, 324.0], [652.0, 1105.5], [651.0, 1103.0], [649.0, 1124.0], [698.0, 1111.0], [688.0, 316.3333333333333], [691.0, 326.0], [692.0, 1104.0], [690.0, 847.6666666666666], [689.0, 458.33333333333337], [687.0, 724.5], [672.0, 1118.0], [677.0, 1106.5], [675.0, 1116.0], [697.0, 1109.5], [696.0, 1094.0], [699.0, 1106.0], [703.0, 1105.0], [701.0, 1086.5], [686.0, 294.0], [685.0, 296.0], [684.0, 721.0], [683.0, 962.0], [680.0, 1109.0], [709.0, 695.0], [717.0, 695.0], [720.0, 335.0], [722.0, 1096.5], [724.0, 600.6666666666666], [723.0, 727.75], [727.0, 347.6666666666667], [726.0, 586.0], [733.0, 392.26666666666665], [732.0, 538.9090909090909], [731.0, 466.5], [730.0, 327.75], [729.0, 656.8571428571429], [728.0, 346.7142857142857], [734.0, 424.8888888888889], [735.0, 430.1111111111112], [711.0, 303.0], [710.0, 313.0], [708.0, 347.0], [707.0, 300.0], [706.0, 300.0], [705.0, 848.6666666666666], [704.0, 714.0], [719.0, 693.5], [718.0, 904.5], [716.0, 325.0], [715.0, 325.5], [714.0, 844.6666666666665], [713.0, 513.25], [712.0, 560.3333333333334], [765.0, 621.25], [767.0, 422.00000000000006], [764.0, 515.75], [763.0, 448.2857142857143], [762.0, 345.75], [761.0, 354.2857142857143], [766.0, 341.3333333333333], [760.0, 465.1666666666667], [743.0, 357.2307692307693], [742.0, 365.0], [741.0, 568.0], [740.0, 474.5], [739.0, 414.0], [738.0, 352.14285714285717], [737.0, 442.0], [736.0, 456.1428571428571], [751.0, 509.61538461538464], [750.0, 348.0], [749.0, 364.0], [748.0, 519.3333333333333], [746.0, 359.6], [747.0, 322.0], [745.0, 479.5454545454546], [744.0, 455.2857142857143], [759.0, 471.6363636363636], [758.0, 343.0], [757.0, 524.375], [756.0, 339.9166666666667], [755.0, 501.2], [754.0, 349.7], [753.0, 460.46153846153845], [752.0, 353.85714285714283], [771.0, 346.0], [777.0, 645.6], [776.0, 494.0], [775.0, 491.4], [792.0, 1089.5], [795.0, 1102.6666666666667], [793.0, 1020.0], [774.0, 590.6666666666666], [772.0, 330.6666666666667], [773.0, 765.4], [770.0, 351.0], [769.0, 330.0], [768.0, 548.1428571428571], [782.0, 705.25], [783.0, 393.5], [781.0, 351.0], [780.0, 359.0], [779.0, 365.0], [778.0, 469.5], [784.0, 363.3333333333333], [785.0, 819.2499999999999], [786.0, 390.0], [790.0, 1031.0], [789.0, 1023.0], [787.0, 1083.0], [829.0, 1089.0], [820.0, 731.0], [824.0, 923.5], [815.0, 1011.0], [801.0, 1018.0], [800.0, 1081.6666666666667], [803.0, 1019.0], [802.0, 1029.0], [807.0, 1085.0], [805.0, 1070.75], [813.0, 1096.6666666666667], [811.0, 1110.0], [809.0, 1094.5], [827.0, 1097.0], [823.0, 744.5], [822.0, 736.0], [821.0, 741.0], [819.0, 787.0], [818.0, 394.0], [830.0, 1009.0], [861.0, 617.3333333333334], [862.0, 733.0], [859.0, 910.25], [858.0, 615.6666666666666], [857.0, 401.5], [856.0, 396.0], [846.0, 1062.0], [833.0, 1013.0], [832.0, 1074.25], [839.0, 1088.0], [836.0, 1049.0], [845.0, 1032.0], [844.0, 1084.0], [842.0, 1063.4], [841.0, 1045.0], [855.0, 396.25], [854.0, 1035.0], [853.0, 563.875], [863.0, 1071.6666666666667], [851.0, 1078.0], [850.0, 1070.5], [867.0, 398.0], [874.0, 655.0], [877.0, 689.5714285714286], [875.0, 414.0], [879.0, 630.0], [864.0, 1071.0], [878.0, 423.5], [873.0, 741.5], [872.0, 410.0], [871.0, 601.3], [888.0, 1052.0], [890.0, 1030.0], [889.0, 1062.6666666666667], [895.0, 1047.3333333333333], [892.0, 1064.5], [881.0, 413.5], [882.0, 589.5714285714286], [883.0, 630.6666666666666], [884.0, 859.3333333333334], [886.0, 414.0], [885.0, 744.5], [880.0, 567.75], [870.0, 405.66666666666663], [868.0, 562.75], [869.0, 631.0], [866.0, 727.5], [865.0, 404.75], [910.0, 408.0], [911.0, 399.0], [898.0, 1056.0], [903.0, 1044.0], [901.0, 1056.2], [921.0, 1046.0], [920.0, 1038.0], [924.0, 1044.6666666666667], [923.0, 1047.5], [909.0, 888.5], [908.0, 739.5], [907.0, 434.6666666666667], [906.0, 737.0], [904.0, 728.5], [905.0, 1062.0], [927.0, 1051.5], [919.0, 1041.0], [915.0, 1043.0], [925.0, 1043.3333333333333], [933.0, 744.75], [934.0, 409.0], [953.0, 1052.0], [935.0, 1049.0], [955.0, 1028.5], [954.0, 1032.0], [932.0, 406.0], [931.0, 849.6666666666666], [930.0, 429.5], [929.0, 843.0], [943.0, 1029.0], [928.0, 1052.0], [942.0, 1035.0], [940.0, 1039.0], [936.0, 1057.5], [959.0, 828.3333333333334], [944.0, 1041.0], [951.0, 1027.5], [945.0, 1047.75], [958.0, 448.0], [957.0, 675.4], [956.0, 882.0], [986.0, 657.5], [978.0, 424.0], [960.0, 409.0], [961.0, 445.0], [982.0, 459.75], [981.0, 907.2], [983.0, 566.4285714285714], [980.0, 745.0], [979.0, 842.6666666666666], [977.0, 414.0], [976.0, 834.0], [985.0, 489.0], [984.0, 506.5], [967.0, 1015.0], [966.0, 1035.5], [965.0, 1034.0], [962.0, 1050.0], [987.0, 594.3333333333334], [988.0, 594.8], [991.0, 593.0], [990.0, 618.0], [989.0, 603.75], [975.0, 415.0], [974.0, 413.0], [973.0, 719.0], [972.0, 432.0], [971.0, 798.6], [970.0, 417.0], [969.0, 729.5], [968.0, 735.5], [996.0, 618.4545454545455], [1003.0, 466.0], [1004.0, 550.1428571428571], [1006.0, 655.0], [1005.0, 458.0], [993.0, 481.9090909090909], [992.0, 604.2], [1007.0, 474.0], [1002.0, 469.1], [1001.0, 595.9230769230769], [1000.0, 452.14285714285717], [999.0, 455.0], [1017.0, 1013.6666666666666], [1021.0, 1011.0], [1018.0, 1002.0], [1023.0, 1010.5], [1022.0, 1007.0], [1009.0, 627.4285714285714], [1011.0, 755.5], [1010.0, 520.6666666666666], [1013.0, 487.6666666666667], [1014.0, 706.6], [1015.0, 1032.0], [1012.0, 497.6666666666667], [1008.0, 620.4], [998.0, 549.3076923076923], [997.0, 462.57142857142856], [995.0, 487.7], [994.0, 597.6666666666666], [1076.0, 686.9130434782609], [1054.0, 622.2], [1056.0, 674.75], [1058.0, 655.2857142857143], [1086.0, 713.0454545454545], [1084.0, 711.6857142857143], [1082.0, 662.2424242424241], [1080.0, 686.6250000000001], [1078.0, 681.8787878787879], [1074.0, 676.9545454545454], [1072.0, 721.4666666666667], [1036.0, 677.5454545454546], [1038.0, 678.0999999999999], [1034.0, 661.8], [1032.0, 712.2857142857143], [1030.0, 607.4], [1028.0, 603.0], [1026.0, 658.0], [1024.0, 1009.0], [1060.0, 586.3333333333334], [1062.0, 674.0], [1064.0, 531.5714285714286], [1066.0, 578.2000000000002], [1068.0, 594.5], [1070.0, 712.5384615384615], [1052.0, 720.7619047619047], [1048.0, 570.4666666666667], [1050.0, 568.4], [1046.0, 602.1999999999999], [1042.0, 651.578947368421], [1044.0, 661.3571428571429], [1040.0, 618.6666666666666], [1120.0, 931.6666666666666], [1102.0, 755.8333333333334], [1090.0, 664.7], [1136.0, 844.75], [1138.0, 847.5], [1134.0, 876.6666666666666], [1132.0, 884.75], [1130.0, 860.875], [1128.0, 890.6666666666666], [1126.0, 842.5], [1124.0, 856.0], [1122.0, 832.0], [1150.0, 916.5], [1148.0, 835.875], [1146.0, 832.375], [1142.0, 869.25], [1144.0, 885.0], [1140.0, 840.5], [1098.0, 724.4285714285714], [1100.0, 649.5], [1094.0, 710.4444444444445], [1096.0, 647.0], [1092.0, 694.0], [1088.0, 699.4285714285714], [1108.0, 854.3333333333334], [1110.0, 828.25], [1112.0, 894.6], [1114.0, 852.0], [1116.0, 873.0], [1118.0, 916.0], [1106.0, 765.0], [1104.0, 783.25], [1208.0, 915.3333333333333], [1200.0, 915.0], [1158.0, 870.25], [1160.0, 902.0], [1162.0, 833.0], [1164.0, 882.6666666666666], [1184.0, 932.0], [1202.0, 901.4], [1204.0, 869.0], [1210.0, 898.5714285714286], [1212.0, 925.7], [1214.0, 797.8], [1206.0, 919.0], [1186.0, 888.5], [1188.0, 885.3333333333334], [1190.0, 933.25], [1194.0, 952.5], [1192.0, 889.0], [1196.0, 873.3333333333334], [1166.0, 808.75], [1156.0, 891.4285714285714], [1154.0, 901.2222222222222], [1152.0, 851.3333333333333], [1182.0, 914.25], [1180.0, 868.5], [1178.0, 872.5], [1176.0, 870.6666666666666], [1174.0, 914.3333333333334], [1172.0, 933.25], [1170.0, 915.6666666666666], [1168.0, 813.0], [1268.0, 959.5], [1218.0, 902.8333333333334], [1216.0, 886.875], [1244.0, 956.0], [1240.0, 919.4], [1234.0, 951.6666666666666], [1232.0, 947.0], [1270.0, 871.0], [1272.0, 894.5], [1274.0, 908.0], [1276.0, 975.5], [1278.0, 901.6666666666666], [1248.0, 955.0], [1258.0, 943.0], [1250.0, 948.6666666666666], [1262.0, 939.0], [1260.0, 937.0], [1230.0, 789.0], [1228.0, 963.0], [1224.0, 950.0], [1264.0, 948.0], [1222.0, 944.0], [1220.0, 904.3333333333334], [1294.0, 901.25], [1280.0, 924.0], [1310.0, 913.3333333333334], [1308.0, 846.0], [1306.0, 863.0], [1296.0, 915.0], [1298.0, 939.0], [1302.0, 902.0], [1334.0, 976.0], [1330.0, 918.3333333333334], [1328.0, 885.0], [1336.0, 880.5], [1338.0, 853.0], [1340.0, 830.0], [1314.0, 870.3333333333334], [1342.0, 899.5], [1318.0, 857.0], [1316.0, 902.6], [1320.0, 916.5], [1324.0, 897.1428571428571], [1322.0, 905.0], [1326.0, 861.0], [1292.0, 885.0], [1288.0, 938.0], [1286.0, 921.0], [1284.0, 920.0], [1392.0, 838.0], [1360.0, 915.0], [1364.0, 898.0], [1368.0, 930.0], [1366.0, 892.6666666666666], [1372.0, 926.0], [1350.0, 891.5], [1348.0, 879.0], [1354.0, 950.0], [1352.0, 927.0], [1370.0, 878.5], [1358.0, 897.3333333333334], [1356.0, 858.5], [1394.0, 944.3333333333334], [1398.0, 828.0], [1390.0, 864.0], [1388.0, 872.3333333333334], [1406.0, 876.25], [1378.0, 887.0], [1376.0, 872.0], [1384.0, 876.5], [1382.0, 891.6666666666666], [1400.0, 905.0], [1410.0, 838.0], [1408.0, 853.25], [1438.0, 889.5], [1416.0, 856.0], [1412.0, 886.0], [1418.0, 909.0], [1434.0, 907.0], [1428.0, 903.5], [1432.0, 880.0], [1430.0, 868.0], [1426.0, 849.0], [1422.0, 871.6666666666666], [1460.0, 938.0], [1458.0, 880.5], [1468.0, 846.0], [1466.0, 896.0], [1420.0, 920.5], [1444.0, 872.6], [1442.0, 842.5], [1448.0, 944.0], [1454.0, 817.0], [1450.0, 913.5], [1470.0, 885.0], [1526.0, 914.0], [1472.0, 920.5], [1502.0, 954.5], [1500.0, 953.0], [1498.0, 934.2], [1490.0, 915.5], [1488.0, 877.0], [1504.0, 940.6666666666666], [1510.0, 914.0], [1534.0, 913.0], [1528.0, 842.0], [1524.0, 946.0], [1486.0, 928.5], [1484.0, 946.5], [1482.0, 860.0], [1480.0, 919.0], [1476.0, 915.5], [1518.0, 838.0], [1512.0, 933.0], [1584.0, 913.5], [1592.0, 921.0], [1588.0, 923.4999999999999], [1598.0, 912.5714285714286], [1570.0, 922.0], [1572.0, 929.0], [1576.0, 922.0], [1568.0, 891.0], [1596.0, 939.75], [1594.0, 933.75], [1590.0, 930.8], [1586.0, 947.5], [1566.0, 927.25], [1540.0, 950.0], [1546.0, 894.5], [1544.0, 920.0], [1550.0, 901.5], [1548.0, 946.0], [1564.0, 929.8333333333334], [1562.0, 903.0], [1560.0, 976.5], [1558.0, 915.0], [1554.0, 953.0], [1552.0, 877.0], [1580.0, 930.5], [1582.0, 935.6], [1578.0, 888.5], [1602.0, 931.8333333333334], [1606.0, 933.3333333333334], [1600.0, 926.5], [1608.0, 940.0], [1604.0, 933.6666666666666], [1620.0, 932.0], [1618.0, 985.0], [1616.0, 939.0], [1612.0, 1001.0], [1610.0, 932.0], [1075.0, 753.35], [1055.0, 576.0], [1049.0, 585.5882352941177], [1053.0, 640.9230769230769], [1057.0, 593.0999999999999], [1087.0, 728.6818181818182], [1085.0, 705.36], [1083.0, 698.4838709677418], [1081.0, 701.5833333333335], [1079.0, 682.8888888888889], [1077.0, 690.2413793103449], [1073.0, 639.6153846153846], [1039.0, 693.2], [1037.0, 602.875], [1035.0, 581.0], [1033.0, 634.8181818181818], [1031.0, 724.5], [1029.0, 715.75], [1027.0, 1008.0], [1061.0, 681.4444444444445], [1063.0, 577.0], [1065.0, 637.0], [1067.0, 739.6666666666667], [1071.0, 660.2222222222222], [1069.0, 644.5], [1059.0, 677.625], [1051.0, 564.1111111111111], [1047.0, 579.8571428571429], [1045.0, 591.409090909091], [1043.0, 610.5555555555555], [1041.0, 621.0], [1121.0, 880.0], [1097.0, 691.1428571428572], [1103.0, 531.5], [1137.0, 889.8888888888889], [1139.0, 829.4285714285714], [1141.0, 884.7777777777778], [1135.0, 837.4666666666667], [1133.0, 855.7142857142857], [1131.0, 838.8888888888889], [1129.0, 846.5], [1127.0, 857.0], [1125.0, 888.0], [1123.0, 864.0], [1151.0, 874.25], [1149.0, 838.8571428571429], [1147.0, 847.4444444444445], [1145.0, 879.75], [1143.0, 852.6666666666667], [1099.0, 862.25], [1101.0, 554.5], [1095.0, 752.625], [1093.0, 673.9166666666666], [1091.0, 759.0666666666666], [1089.0, 775.7777777777778], [1109.0, 835.75], [1111.0, 833.8], [1115.0, 824.5], [1119.0, 924.5], [1113.0, 858.6666666666666], [1107.0, 717.0], [1105.0, 728.4], [1203.0, 820.75], [1155.0, 803.5], [1159.0, 844.1666666666667], [1161.0, 916.4], [1163.0, 929.3333333333334], [1165.0, 829.0], [1167.0, 884.0], [1201.0, 870.6666666666666], [1205.0, 921.2], [1207.0, 856.0], [1209.0, 892.4285714285714], [1211.0, 879.8], [1215.0, 899.2], [1213.0, 878.75], [1187.0, 917.0], [1185.0, 979.5], [1191.0, 845.5], [1189.0, 926.0], [1193.0, 906.25], [1195.0, 915.8], [1199.0, 897.2], [1197.0, 880.6666666666666], [1157.0, 869.3333333333334], [1153.0, 857.0], [1183.0, 935.0], [1181.0, 841.0], [1179.0, 929.0], [1177.0, 940.0], [1175.0, 790.0], [1173.0, 832.0], [1171.0, 911.5], [1169.0, 890.0], [1267.0, 937.6666666666666], [1271.0, 911.375], [1225.0, 849.0], [1243.0, 919.4], [1237.0, 948.6666666666666], [1245.0, 939.0], [1217.0, 836.5], [1231.0, 898.6666666666666], [1265.0, 931.0], [1269.0, 925.5], [1275.0, 891.0], [1273.0, 924.0], [1277.0, 926.6666666666666], [1279.0, 901.5], [1249.0, 934.0], [1261.0, 939.5], [1253.0, 947.3333333333334], [1227.0, 971.0], [1229.0, 954.3333333333334], [1223.0, 938.6666666666666], [1221.0, 941.1666666666667], [1219.0, 872.0], [1281.0, 931.3333333333334], [1291.0, 913.75], [1297.0, 892.5], [1299.0, 902.5], [1311.0, 881.6666666666666], [1309.0, 831.0], [1307.0, 921.0], [1305.0, 901.75], [1335.0, 843.0], [1337.0, 851.0], [1339.0, 856.6], [1341.0, 957.0], [1313.0, 918.0], [1323.0, 887.0], [1325.0, 963.5], [1327.0, 847.0], [1319.0, 826.0], [1321.0, 917.5], [1293.0, 958.5], [1333.0, 894.75], [1289.0, 960.0], [1403.0, 909.0], [1359.0, 842.5], [1357.0, 900.0], [1355.0, 888.0], [1351.0, 871.5], [1347.0, 880.0], [1375.0, 881.0], [1367.0, 925.0], [1363.0, 876.0], [1361.0, 896.2], [1393.0, 891.5], [1395.0, 981.0], [1391.0, 857.6666666666666], [1389.0, 885.0], [1407.0, 852.6666666666666], [1387.0, 884.0], [1379.0, 876.0], [1401.0, 898.0], [1397.0, 903.6666666666666], [1409.0, 881.0], [1417.0, 890.7777777777778], [1419.0, 908.0], [1423.0, 841.0], [1467.0, 837.0], [1457.0, 808.0], [1471.0, 835.0], [1441.0, 912.0], [1469.0, 869.5], [1445.0, 915.0], [1451.0, 956.0], [1447.0, 861.0], [1455.0, 919.0], [1453.0, 931.5], [1443.0, 914.0], [1421.0, 834.0], [1415.0, 874.0], [1413.0, 898.3333333333334], [1411.0, 897.0], [1433.0, 865.0], [1435.0, 926.3333333333334], [1431.0, 838.5], [1429.0, 983.0], [1427.0, 878.5], [1425.0, 873.6], [1529.0, 933.0], [1473.0, 916.4], [1489.0, 942.5], [1495.0, 831.0], [1491.0, 925.5], [1503.0, 923.0], [1499.0, 908.0], [1505.0, 944.0], [1507.0, 889.6666666666666], [1511.0, 842.0], [1509.0, 969.0], [1515.0, 937.0], [1513.0, 918.0], [1519.0, 922.0], [1517.0, 953.5], [1533.0, 969.0], [1531.0, 954.0], [1527.0, 919.0], [1525.0, 909.0], [1523.0, 975.0], [1521.0, 919.5], [1481.0, 918.0], [1479.0, 974.0], [1477.0, 926.0], [1475.0, 911.0], [1597.0, 917.3333333333334], [1599.0, 929.75], [1571.0, 929.2], [1569.0, 933.75], [1575.0, 940.0], [1573.0, 929.25], [1579.0, 927.25], [1577.0, 913.6], [1595.0, 946.0], [1593.0, 959.3333333333334], [1591.0, 934.25], [1589.0, 931.75], [1587.0, 927.8333333333333], [1585.0, 929.0], [1543.0, 927.5], [1541.0, 980.0], [1539.0, 867.0], [1537.0, 901.3333333333334], [1567.0, 928.6], [1565.0, 940.0], [1563.0, 932.0], [1559.0, 926.0], [1555.0, 935.0], [1553.0, 936.0], [1583.0, 926.9230769230769], [1581.0, 928.875], [1603.0, 943.5714285714286], [1605.0, 915.8333333333333], [1601.0, 931.8], [1607.0, 952.5], [1621.0, 904.0], [1619.0, 994.0], [1617.0, 891.0], [1615.0, 918.0], [1613.0, 945.0], [1611.0, 972.0], [1609.0, 895.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[856.9491999999987, 711.0802000000023]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 60.5], [3.0, 61.0], [5.0, 53.0], [6.0, 54.0], [9.0, 57.0], [10.0, 63.0], [12.0, 61.8], [13.0, 70.0], [15.0, 57.333333333333336], [16.0, 62.5], [19.0, 74.0], [21.0, 70.5], [22.0, 74.0], [23.0, 66.0], [24.0, 54.0], [25.0, 60.5], [26.0, 50.0], [27.0, 55.5], [29.0, 60.0], [30.0, 57.25], [31.0, 58.3], [33.0, 54.0], [32.0, 58.57142857142858], [35.0, 52.199999999999996], [34.0, 56.833333333333336], [37.0, 51.63636363636363], [36.0, 56.92307692307692], [39.0, 55.416666666666664], [38.0, 57.857142857142854], [41.0, 56.18181818181819], [40.0, 58.31249999999999], [43.0, 58.086956521739125], [42.0, 55.4], [45.0, 57.428571428571416], [44.0, 51.07407407407407], [46.0, 54.761904761904766], [47.0, 53.4], [48.0, 54.78571428571429], [49.0, 58.0277777777778], [51.0, 56.6153846153846], [50.0, 56.32894736842105], [52.0, 57.63235294117648], [53.0, 57.28749999999999], [55.0, 57.44444444444445], [54.0, 57.57954545454546], [56.0, 58.32978723404255], [57.0, 58.73195876288658], [59.0, 59.11764705882352], [58.0, 58.712962962962955], [61.0, 59.806122448979586], [60.0, 58.666666666666636], [63.0, 59.90789473684209], [62.0, 59.43269230769229], [65.0, 59.436781609195414], [64.0, 60.40350877192984], [66.0, 59.91025641025641], [67.0, 59.433734939759034], [70.0, 62.64044943820226], [69.0, 60.1842105263158], [68.0, 59.674418604651144], [71.0, 60.08], [74.0, 62.66666666666666], [72.0, 61.34285714285714], [75.0, 63.933333333333344], [73.0, 62.57142857142856], [76.0, 64.42253521126761], [79.0, 64.15625000000001], [78.0, 62.75362318840581], [77.0, 63.25316455696204], [82.0, 65.47692307692306], [81.0, 61.63414634146341], [80.0, 64.6470588235294], [83.0, 65.33333333333331], [85.0, 64.08000000000001], [87.0, 64.89999999999999], [84.0, 64.46428571428572], [86.0, 63.75000000000001], [90.0, 62.68627450980391], [89.0, 62.811320754716995], [88.0, 63.53623188405798], [91.0, 63.10169491525425], [94.0, 66.07692307692308], [92.0, 63.605263157894726], [93.0, 63.357142857142854], [95.0, 65.43478260869567], [99.0, 67.875], [98.0, 63.42857142857143], [96.0, 67.66666666666667], [97.0, 68.20833333333334], [102.0, 68.42857142857142], [101.0, 70.15384615384616], [103.0, 63.42424242424242], [100.0, 60.97435897435897], [107.0, 69.4090909090909], [106.0, 66.41666666666669], [105.0, 65.70270270270268], [104.0, 69.86956521739131], [110.0, 63.833333333333336], [109.0, 72.54545454545455], [111.0, 75.99999999999999], [108.0, 66.33333333333333], [114.0, 66.4], [112.0, 67.0], [115.0, 71.63636363636364], [113.0, 71.7], [119.0, 66.25], [118.0, 66.42857142857143], [117.0, 76.16666666666667], [116.0, 67.66666666666669], [123.0, 66.99999999999999], [122.0, 77.0], [121.0, 77.0], [120.0, 70.77777777777777], [125.0, 71.6923076923077], [126.0, 66.5], [124.0, 70.38461538461539], [127.0, 65.33333333333333], [128.0, 68.88888888888887], [135.0, 66.6], [134.0, 71.30000000000001], [132.0, 64.12500000000001], [130.0, 69.83333333333333], [129.0, 73.6], [133.0, 66.15384615384615], [131.0, 66.8], [143.0, 70.0], [141.0, 55.75], [140.0, 64.11111111111111], [139.0, 66.0], [136.0, 70.0], [142.0, 66.8], [137.0, 65.0], [138.0, 68.66666666666667], [151.0, 63.0], [150.0, 67.0], [148.0, 67.75], [147.0, 65.8], [146.0, 68.33333333333333], [145.0, 69.8], [144.0, 68.2], [149.0, 70.0], [159.0, 69.0], [157.0, 64.33333333333333], [155.0, 70.0], [154.0, 66.75], [152.0, 66.0], [158.0, 63.0], [156.0, 69.0], [153.0, 64.0], [162.0, 44.0], [160.0, 66.0], [164.0, 59.0], [161.0, 65.0], [172.0, 22.0], [252.0, 11.0], [271.0, 6.0], [274.0, 107.0], [275.0, 107.33333333333333], [284.0, 95.22222222222221], [276.0, 107.57777777777777], [277.0, 120.97500000000001], [278.0, 114.55555555555554], [286.0, 162.0], [280.0, 152.33333333333334], [285.0, 152.4], [279.0, 141.6923076923077], [272.0, 10.0], [283.0, 6.0], [282.0, 93.5], [281.0, 156.37500000000003], [288.0, 132.8], [292.0, 205.5], [294.0, 229.0], [300.0, 5.0], [310.0, 268.8333333333333], [306.0, 252.5], [309.0, 264.68181818181813], [312.0, 266.0], [319.0, 14.0], [318.0, 16.0], [305.0, 9.0], [313.0, 211.0], [314.0, 272.53846153846155], [325.0, 124.91666666666667], [328.0, 189.5], [329.0, 106.6], [335.0, 116.14285714285714], [326.0, 12.0], [338.0, 93.90909090909092], [344.0, 41.32142857142857], [345.0, 9.0], [348.0, 138.5], [350.0, 226.5], [354.0, 67.18181818181817], [364.0, 18.0], [352.0, 275.0], [358.0, 6.0], [366.0, 8.666666666666666], [367.0, 10.5], [360.0, 288.5], [356.0, 10.25], [355.0, 12.5], [357.0, 4.0], [369.0, 12.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[91.76219999999988, 67.20559999999993]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1621.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 31083.333333333332, "minX": 1.66901868E12, "maxY": 71250.0, "series": [{"data": [[1.66901868E12, 31083.333333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66901868E12, 71250.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901868E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 67.20559999999993, "minX": 1.66901868E12, "maxY": 711.0802000000023, "series": [{"data": [[1.66901868E12, 119.30120000000004]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901868E12, 711.0802000000023]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901868E12, 67.20559999999993]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901868E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 67.18060000000008, "minX": 1.66901868E12, "maxY": 710.9190000000019, "series": [{"data": [[1.66901868E12, 119.28700000000003]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901868E12, 710.9190000000019]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901868E12, 67.18060000000008]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901868E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 9.181399999999988, "minX": 1.66901868E12, "maxY": 12.369600000000005, "series": [{"data": [[1.66901868E12, 10.265400000000007]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901868E12, 9.181399999999988]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901868E12, 12.369600000000005]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901868E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.66901868E12, "maxY": 1442.0, "series": [{"data": [[1.66901868E12, 1442.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66901868E12, 930.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66901868E12, 1361.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66901868E12, 1096.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66901868E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66901868E12, 94.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901868E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 59.0, "minX": 88.0, "maxY": 1405.0, "series": [{"data": [[851.0, 59.0], [996.0, 62.0], [1135.0, 1123.0], [1197.0, 897.0], [1247.0, 60.0], [1240.0, 62.0], [1237.0, 570.0], [1290.0, 314.0], [88.0, 1405.0], [388.0, 135.0], [1680.0, 92.0], [1792.0, 99.0], [1859.0, 90.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1859.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 59.0, "minX": 88.0, "maxY": 1405.0, "series": [{"data": [[851.0, 59.0], [996.0, 62.0], [1135.0, 1123.0], [1197.0, 897.0], [1247.0, 60.0], [1240.0, 62.0], [1237.0, 570.0], [1290.0, 314.0], [88.0, 1405.0], [388.0, 135.0], [1680.0, 92.0], [1792.0, 99.0], [1859.0, 90.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1859.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 250.0, "minX": 1.66901868E12, "maxY": 250.0, "series": [{"data": [[1.66901868E12, 250.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901868E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 250.0, "minX": 1.66901868E12, "maxY": 250.0, "series": [{"data": [[1.66901868E12, 250.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901868E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.66901868E12, "maxY": 83.33333333333333, "series": [{"data": [[1.66901868E12, 83.33333333333333]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66901868E12, 83.33333333333333]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66901868E12, 83.33333333333333]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901868E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 250.0, "minX": 1.66901868E12, "maxY": 250.0, "series": [{"data": [[1.66901868E12, 250.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901868E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

