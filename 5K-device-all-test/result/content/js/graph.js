/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 853.0, "series": [{"data": [[0.0, 11.0], [0.1, 18.0], [0.2, 27.0], [0.3, 28.0], [0.4, 30.0], [0.5, 32.0], [0.6, 34.0], [0.7, 35.0], [0.8, 36.0], [0.9, 37.0], [1.0, 38.0], [1.1, 38.0], [1.2, 39.0], [1.3, 39.0], [1.4, 40.0], [1.5, 40.0], [1.6, 40.0], [1.7, 40.0], [1.8, 41.0], [1.9, 41.0], [2.0, 41.0], [2.1, 41.0], [2.2, 42.0], [2.3, 42.0], [2.4, 42.0], [2.5, 42.0], [2.6, 42.0], [2.7, 43.0], [2.8, 43.0], [2.9, 43.0], [3.0, 43.0], [3.1, 43.0], [3.2, 43.0], [3.3, 43.0], [3.4, 43.0], [3.5, 44.0], [3.6, 44.0], [3.7, 44.0], [3.8, 44.0], [3.9, 44.0], [4.0, 44.0], [4.1, 44.0], [4.2, 44.0], [4.3, 44.0], [4.4, 45.0], [4.5, 45.0], [4.6, 45.0], [4.7, 45.0], [4.8, 45.0], [4.9, 45.0], [5.0, 45.0], [5.1, 45.0], [5.2, 46.0], [5.3, 46.0], [5.4, 46.0], [5.5, 46.0], [5.6, 46.0], [5.7, 46.0], [5.8, 46.0], [5.9, 46.0], [6.0, 46.0], [6.1, 46.0], [6.2, 46.0], [6.3, 46.0], [6.4, 46.0], [6.5, 47.0], [6.6, 47.0], [6.7, 47.0], [6.8, 47.0], [6.9, 47.0], [7.0, 47.0], [7.1, 47.0], [7.2, 47.0], [7.3, 47.0], [7.4, 47.0], [7.5, 47.0], [7.6, 47.0], [7.7, 47.0], [7.8, 47.0], [7.9, 47.0], [8.0, 47.0], [8.1, 47.0], [8.2, 47.0], [8.3, 48.0], [8.4, 48.0], [8.5, 48.0], [8.6, 48.0], [8.7, 48.0], [8.8, 48.0], [8.9, 48.0], [9.0, 48.0], [9.1, 48.0], [9.2, 48.0], [9.3, 48.0], [9.4, 48.0], [9.5, 48.0], [9.6, 48.0], [9.7, 48.0], [9.8, 48.0], [9.9, 48.0], [10.0, 48.0], [10.1, 48.0], [10.2, 48.0], [10.3, 49.0], [10.4, 49.0], [10.5, 49.0], [10.6, 49.0], [10.7, 49.0], [10.8, 49.0], [10.9, 49.0], [11.0, 49.0], [11.1, 49.0], [11.2, 49.0], [11.3, 49.0], [11.4, 49.0], [11.5, 49.0], [11.6, 49.0], [11.7, 49.0], [11.8, 49.0], [11.9, 49.0], [12.0, 49.0], [12.1, 49.0], [12.2, 49.0], [12.3, 50.0], [12.4, 50.0], [12.5, 50.0], [12.6, 50.0], [12.7, 50.0], [12.8, 50.0], [12.9, 50.0], [13.0, 50.0], [13.1, 50.0], [13.2, 50.0], [13.3, 50.0], [13.4, 50.0], [13.5, 50.0], [13.6, 50.0], [13.7, 50.0], [13.8, 50.0], [13.9, 50.0], [14.0, 50.0], [14.1, 50.0], [14.2, 50.0], [14.3, 50.0], [14.4, 50.0], [14.5, 50.0], [14.6, 51.0], [14.7, 51.0], [14.8, 51.0], [14.9, 51.0], [15.0, 51.0], [15.1, 51.0], [15.2, 51.0], [15.3, 51.0], [15.4, 51.0], [15.5, 51.0], [15.6, 51.0], [15.7, 51.0], [15.8, 51.0], [15.9, 51.0], [16.0, 51.0], [16.1, 51.0], [16.2, 51.0], [16.3, 51.0], [16.4, 51.0], [16.5, 51.0], [16.6, 51.0], [16.7, 51.0], [16.8, 51.0], [16.9, 51.0], [17.0, 51.0], [17.1, 51.0], [17.2, 51.0], [17.3, 51.0], [17.4, 51.0], [17.5, 52.0], [17.6, 52.0], [17.7, 52.0], [17.8, 52.0], [17.9, 52.0], [18.0, 52.0], [18.1, 52.0], [18.2, 52.0], [18.3, 52.0], [18.4, 52.0], [18.5, 52.0], [18.6, 52.0], [18.7, 52.0], [18.8, 52.0], [18.9, 52.0], [19.0, 52.0], [19.1, 52.0], [19.2, 52.0], [19.3, 52.0], [19.4, 52.0], [19.5, 52.0], [19.6, 52.0], [19.7, 52.0], [19.8, 52.0], [19.9, 52.0], [20.0, 52.0], [20.1, 52.0], [20.2, 52.0], [20.3, 52.0], [20.4, 52.0], [20.5, 52.0], [20.6, 53.0], [20.7, 53.0], [20.8, 53.0], [20.9, 53.0], [21.0, 53.0], [21.1, 53.0], [21.2, 53.0], [21.3, 53.0], [21.4, 53.0], [21.5, 53.0], [21.6, 53.0], [21.7, 53.0], [21.8, 53.0], [21.9, 53.0], [22.0, 53.0], [22.1, 53.0], [22.2, 53.0], [22.3, 53.0], [22.4, 53.0], [22.5, 53.0], [22.6, 53.0], [22.7, 53.0], [22.8, 53.0], [22.9, 53.0], [23.0, 53.0], [23.1, 53.0], [23.2, 53.0], [23.3, 53.0], [23.4, 53.0], [23.5, 53.0], [23.6, 53.0], [23.7, 53.0], [23.8, 54.0], [23.9, 54.0], [24.0, 54.0], [24.1, 54.0], [24.2, 54.0], [24.3, 54.0], [24.4, 54.0], [24.5, 54.0], [24.6, 54.0], [24.7, 54.0], [24.8, 54.0], [24.9, 54.0], [25.0, 54.0], [25.1, 54.0], [25.2, 54.0], [25.3, 54.0], [25.4, 54.0], [25.5, 54.0], [25.6, 54.0], [25.7, 54.0], [25.8, 54.0], [25.9, 54.0], [26.0, 54.0], [26.1, 54.0], [26.2, 54.0], [26.3, 54.0], [26.4, 54.0], [26.5, 54.0], [26.6, 54.0], [26.7, 54.0], [26.8, 54.0], [26.9, 54.0], [27.0, 54.0], [27.1, 55.0], [27.2, 55.0], [27.3, 55.0], [27.4, 55.0], [27.5, 55.0], [27.6, 55.0], [27.7, 55.0], [27.8, 55.0], [27.9, 55.0], [28.0, 55.0], [28.1, 55.0], [28.2, 55.0], [28.3, 55.0], [28.4, 55.0], [28.5, 55.0], [28.6, 55.0], [28.7, 55.0], [28.8, 55.0], [28.9, 55.0], [29.0, 55.0], [29.1, 55.0], [29.2, 55.0], [29.3, 55.0], [29.4, 55.0], [29.5, 55.0], [29.6, 55.0], [29.7, 55.0], [29.8, 55.0], [29.9, 55.0], [30.0, 55.0], [30.1, 55.0], [30.2, 55.0], [30.3, 55.0], [30.4, 55.0], [30.5, 55.0], [30.6, 55.0], [30.7, 55.0], [30.8, 55.0], [30.9, 56.0], [31.0, 56.0], [31.1, 56.0], [31.2, 56.0], [31.3, 56.0], [31.4, 56.0], [31.5, 56.0], [31.6, 56.0], [31.7, 56.0], [31.8, 56.0], [31.9, 56.0], [32.0, 56.0], [32.1, 56.0], [32.2, 56.0], [32.3, 56.0], [32.4, 56.0], [32.5, 56.0], [32.6, 56.0], [32.7, 56.0], [32.8, 56.0], [32.9, 56.0], [33.0, 56.0], [33.1, 56.0], [33.2, 56.0], [33.3, 56.0], [33.4, 56.0], [33.5, 56.0], [33.6, 56.0], [33.7, 56.0], [33.8, 56.0], [33.9, 56.0], [34.0, 56.0], [34.1, 56.0], [34.2, 56.0], [34.3, 56.0], [34.4, 56.0], [34.5, 56.0], [34.6, 56.0], [34.7, 56.0], [34.8, 56.0], [34.9, 56.0], [35.0, 56.0], [35.1, 56.0], [35.2, 57.0], [35.3, 57.0], [35.4, 57.0], [35.5, 57.0], [35.6, 57.0], [35.7, 57.0], [35.8, 57.0], [35.9, 57.0], [36.0, 57.0], [36.1, 57.0], [36.2, 57.0], [36.3, 57.0], [36.4, 57.0], [36.5, 57.0], [36.6, 57.0], [36.7, 57.0], [36.8, 57.0], [36.9, 57.0], [37.0, 57.0], [37.1, 57.0], [37.2, 57.0], [37.3, 57.0], [37.4, 57.0], [37.5, 57.0], [37.6, 57.0], [37.7, 57.0], [37.8, 57.0], [37.9, 57.0], [38.0, 57.0], [38.1, 57.0], [38.2, 57.0], [38.3, 57.0], [38.4, 57.0], [38.5, 57.0], [38.6, 57.0], [38.7, 57.0], [38.8, 57.0], [38.9, 57.0], [39.0, 58.0], [39.1, 58.0], [39.2, 58.0], [39.3, 58.0], [39.4, 58.0], [39.5, 58.0], [39.6, 58.0], [39.7, 58.0], [39.8, 58.0], [39.9, 58.0], [40.0, 58.0], [40.1, 58.0], [40.2, 58.0], [40.3, 58.0], [40.4, 58.0], [40.5, 58.0], [40.6, 58.0], [40.7, 58.0], [40.8, 58.0], [40.9, 58.0], [41.0, 58.0], [41.1, 58.0], [41.2, 58.0], [41.3, 58.0], [41.4, 58.0], [41.5, 58.0], [41.6, 58.0], [41.7, 58.0], [41.8, 58.0], [41.9, 58.0], [42.0, 58.0], [42.1, 58.0], [42.2, 58.0], [42.3, 58.0], [42.4, 58.0], [42.5, 58.0], [42.6, 59.0], [42.7, 59.0], [42.8, 59.0], [42.9, 59.0], [43.0, 59.0], [43.1, 59.0], [43.2, 59.0], [43.3, 59.0], [43.4, 59.0], [43.5, 59.0], [43.6, 59.0], [43.7, 59.0], [43.8, 59.0], [43.9, 59.0], [44.0, 59.0], [44.1, 59.0], [44.2, 59.0], [44.3, 59.0], [44.4, 59.0], [44.5, 59.0], [44.6, 59.0], [44.7, 59.0], [44.8, 59.0], [44.9, 59.0], [45.0, 59.0], [45.1, 59.0], [45.2, 59.0], [45.3, 59.0], [45.4, 59.0], [45.5, 59.0], [45.6, 59.0], [45.7, 59.0], [45.8, 59.0], [45.9, 59.0], [46.0, 59.0], [46.1, 59.0], [46.2, 59.0], [46.3, 59.0], [46.4, 59.0], [46.5, 59.0], [46.6, 59.0], [46.7, 59.0], [46.8, 59.0], [46.9, 59.0], [47.0, 59.0], [47.1, 59.0], [47.2, 59.0], [47.3, 59.0], [47.4, 59.0], [47.5, 60.0], [47.6, 60.0], [47.7, 60.0], [47.8, 60.0], [47.9, 60.0], [48.0, 60.0], [48.1, 60.0], [48.2, 60.0], [48.3, 60.0], [48.4, 60.0], [48.5, 60.0], [48.6, 60.0], [48.7, 60.0], [48.8, 60.0], [48.9, 60.0], [49.0, 60.0], [49.1, 60.0], [49.2, 60.0], [49.3, 60.0], [49.4, 60.0], [49.5, 60.0], [49.6, 60.0], [49.7, 60.0], [49.8, 60.0], [49.9, 60.0], [50.0, 60.0], [50.1, 60.0], [50.2, 60.0], [50.3, 60.0], [50.4, 60.0], [50.5, 60.0], [50.6, 60.0], [50.7, 60.0], [50.8, 60.0], [50.9, 60.0], [51.0, 60.0], [51.1, 60.0], [51.2, 60.0], [51.3, 60.0], [51.4, 60.0], [51.5, 60.0], [51.6, 60.0], [51.7, 60.0], [51.8, 61.0], [51.9, 61.0], [52.0, 61.0], [52.1, 61.0], [52.2, 61.0], [52.3, 61.0], [52.4, 61.0], [52.5, 61.0], [52.6, 61.0], [52.7, 61.0], [52.8, 61.0], [52.9, 61.0], [53.0, 61.0], [53.1, 61.0], [53.2, 61.0], [53.3, 61.0], [53.4, 61.0], [53.5, 61.0], [53.6, 61.0], [53.7, 61.0], [53.8, 61.0], [53.9, 61.0], [54.0, 61.0], [54.1, 61.0], [54.2, 61.0], [54.3, 61.0], [54.4, 61.0], [54.5, 61.0], [54.6, 61.0], [54.7, 61.0], [54.8, 61.0], [54.9, 61.0], [55.0, 61.0], [55.1, 61.0], [55.2, 61.0], [55.3, 61.0], [55.4, 61.0], [55.5, 61.0], [55.6, 61.0], [55.7, 61.0], [55.8, 61.0], [55.9, 61.0], [56.0, 61.0], [56.1, 61.0], [56.2, 62.0], [56.3, 62.0], [56.4, 62.0], [56.5, 62.0], [56.6, 62.0], [56.7, 62.0], [56.8, 62.0], [56.9, 62.0], [57.0, 62.0], [57.1, 62.0], [57.2, 62.0], [57.3, 62.0], [57.4, 62.0], [57.5, 62.0], [57.6, 62.0], [57.7, 62.0], [57.8, 62.0], [57.9, 62.0], [58.0, 62.0], [58.1, 62.0], [58.2, 62.0], [58.3, 62.0], [58.4, 62.0], [58.5, 62.0], [58.6, 62.0], [58.7, 62.0], [58.8, 62.0], [58.9, 62.0], [59.0, 62.0], [59.1, 62.0], [59.2, 62.0], [59.3, 62.0], [59.4, 62.0], [59.5, 62.0], [59.6, 62.0], [59.7, 62.0], [59.8, 62.0], [59.9, 62.0], [60.0, 62.0], [60.1, 62.0], [60.2, 62.0], [60.3, 62.0], [60.4, 63.0], [60.5, 63.0], [60.6, 63.0], [60.7, 63.0], [60.8, 63.0], [60.9, 63.0], [61.0, 63.0], [61.1, 63.0], [61.2, 63.0], [61.3, 63.0], [61.4, 63.0], [61.5, 63.0], [61.6, 63.0], [61.7, 63.0], [61.8, 63.0], [61.9, 63.0], [62.0, 63.0], [62.1, 63.0], [62.2, 63.0], [62.3, 63.0], [62.4, 63.0], [62.5, 63.0], [62.6, 63.0], [62.7, 63.0], [62.8, 63.0], [62.9, 63.0], [63.0, 63.0], [63.1, 63.0], [63.2, 63.0], [63.3, 63.0], [63.4, 63.0], [63.5, 63.0], [63.6, 63.0], [63.7, 63.0], [63.8, 63.0], [63.9, 63.0], [64.0, 63.0], [64.1, 63.0], [64.2, 63.0], [64.3, 63.0], [64.4, 64.0], [64.5, 64.0], [64.6, 64.0], [64.7, 64.0], [64.8, 64.0], [64.9, 64.0], [65.0, 64.0], [65.1, 64.0], [65.2, 64.0], [65.3, 64.0], [65.4, 64.0], [65.5, 64.0], [65.6, 64.0], [65.7, 64.0], [65.8, 64.0], [65.9, 64.0], [66.0, 64.0], [66.1, 64.0], [66.2, 64.0], [66.3, 64.0], [66.4, 64.0], [66.5, 64.0], [66.6, 64.0], [66.7, 64.0], [66.8, 64.0], [66.9, 64.0], [67.0, 64.0], [67.1, 64.0], [67.2, 64.0], [67.3, 64.0], [67.4, 64.0], [67.5, 64.0], [67.6, 64.0], [67.7, 64.0], [67.8, 64.0], [67.9, 64.0], [68.0, 64.0], [68.1, 64.0], [68.2, 64.0], [68.3, 65.0], [68.4, 65.0], [68.5, 65.0], [68.6, 65.0], [68.7, 65.0], [68.8, 65.0], [68.9, 65.0], [69.0, 65.0], [69.1, 65.0], [69.2, 65.0], [69.3, 65.0], [69.4, 65.0], [69.5, 65.0], [69.6, 65.0], [69.7, 65.0], [69.8, 65.0], [69.9, 65.0], [70.0, 65.0], [70.1, 65.0], [70.2, 65.0], [70.3, 65.0], [70.4, 65.0], [70.5, 65.0], [70.6, 65.0], [70.7, 65.0], [70.8, 65.0], [70.9, 65.0], [71.0, 65.0], [71.1, 65.0], [71.2, 65.0], [71.3, 65.0], [71.4, 65.0], [71.5, 65.0], [71.6, 65.0], [71.7, 66.0], [71.8, 66.0], [71.9, 66.0], [72.0, 66.0], [72.1, 66.0], [72.2, 66.0], [72.3, 66.0], [72.4, 66.0], [72.5, 66.0], [72.6, 66.0], [72.7, 66.0], [72.8, 66.0], [72.9, 66.0], [73.0, 66.0], [73.1, 66.0], [73.2, 66.0], [73.3, 66.0], [73.4, 66.0], [73.5, 66.0], [73.6, 66.0], [73.7, 66.0], [73.8, 66.0], [73.9, 66.0], [74.0, 66.0], [74.1, 66.0], [74.2, 66.0], [74.3, 66.0], [74.4, 66.0], [74.5, 66.0], [74.6, 66.0], [74.7, 66.0], [74.8, 66.0], [74.9, 66.0], [75.0, 66.0], [75.1, 67.0], [75.2, 67.0], [75.3, 67.0], [75.4, 67.0], [75.5, 67.0], [75.6, 67.0], [75.7, 67.0], [75.8, 67.0], [75.9, 67.0], [76.0, 67.0], [76.1, 67.0], [76.2, 67.0], [76.3, 67.0], [76.4, 67.0], [76.5, 67.0], [76.6, 67.0], [76.7, 67.0], [76.8, 67.0], [76.9, 67.0], [77.0, 67.0], [77.1, 67.0], [77.2, 67.0], [77.3, 67.0], [77.4, 67.0], [77.5, 67.0], [77.6, 67.0], [77.7, 67.0], [77.8, 67.0], [77.9, 67.0], [78.0, 67.0], [78.1, 67.0], [78.2, 67.0], [78.3, 67.0], [78.4, 68.0], [78.5, 68.0], [78.6, 68.0], [78.7, 68.0], [78.8, 68.0], [78.9, 68.0], [79.0, 68.0], [79.1, 68.0], [79.2, 68.0], [79.3, 68.0], [79.4, 68.0], [79.5, 68.0], [79.6, 68.0], [79.7, 68.0], [79.8, 68.0], [79.9, 68.0], [80.0, 68.0], [80.1, 68.0], [80.2, 68.0], [80.3, 68.0], [80.4, 68.0], [80.5, 68.0], [80.6, 68.0], [80.7, 68.0], [80.8, 68.0], [80.9, 68.0], [81.0, 69.0], [81.1, 69.0], [81.2, 69.0], [81.3, 69.0], [81.4, 69.0], [81.5, 69.0], [81.6, 69.0], [81.7, 69.0], [81.8, 69.0], [81.9, 69.0], [82.0, 69.0], [82.1, 69.0], [82.2, 69.0], [82.3, 69.0], [82.4, 69.0], [82.5, 69.0], [82.6, 69.0], [82.7, 69.0], [82.8, 69.0], [82.9, 69.0], [83.0, 69.0], [83.1, 69.0], [83.2, 70.0], [83.3, 70.0], [83.4, 70.0], [83.5, 70.0], [83.6, 70.0], [83.7, 70.0], [83.8, 70.0], [83.9, 70.0], [84.0, 70.0], [84.1, 70.0], [84.2, 70.0], [84.3, 70.0], [84.4, 70.0], [84.5, 70.0], [84.6, 70.0], [84.7, 70.0], [84.8, 70.0], [84.9, 70.0], [85.0, 70.0], [85.1, 70.0], [85.2, 70.0], [85.3, 70.0], [85.4, 71.0], [85.5, 71.0], [85.6, 71.0], [85.7, 71.0], [85.8, 71.0], [85.9, 71.0], [86.0, 71.0], [86.1, 71.0], [86.2, 71.0], [86.3, 71.0], [86.4, 71.0], [86.5, 71.0], [86.6, 71.0], [86.7, 71.0], [86.8, 71.0], [86.9, 71.0], [87.0, 71.0], [87.1, 71.0], [87.2, 71.0], [87.3, 71.0], [87.4, 72.0], [87.5, 72.0], [87.6, 72.0], [87.7, 72.0], [87.8, 72.0], [87.9, 72.0], [88.0, 72.0], [88.1, 72.0], [88.2, 72.0], [88.3, 72.0], [88.4, 72.0], [88.5, 72.0], [88.6, 72.0], [88.7, 72.0], [88.8, 72.0], [88.9, 72.0], [89.0, 72.0], [89.1, 73.0], [89.2, 73.0], [89.3, 73.0], [89.4, 73.0], [89.5, 73.0], [89.6, 73.0], [89.7, 73.0], [89.8, 73.0], [89.9, 73.0], [90.0, 73.0], [90.1, 73.0], [90.2, 73.0], [90.3, 74.0], [90.4, 74.0], [90.5, 74.0], [90.6, 74.0], [90.7, 74.0], [90.8, 74.0], [90.9, 74.0], [91.0, 74.0], [91.1, 74.0], [91.2, 74.0], [91.3, 74.0], [91.4, 75.0], [91.5, 75.0], [91.6, 75.0], [91.7, 75.0], [91.8, 75.0], [91.9, 75.0], [92.0, 75.0], [92.1, 75.0], [92.2, 75.0], [92.3, 76.0], [92.4, 76.0], [92.5, 76.0], [92.6, 76.0], [92.7, 76.0], [92.8, 76.0], [92.9, 76.0], [93.0, 76.0], [93.1, 77.0], [93.2, 77.0], [93.3, 77.0], [93.4, 77.0], [93.5, 77.0], [93.6, 77.0], [93.7, 77.0], [93.8, 78.0], [93.9, 78.0], [94.0, 78.0], [94.1, 78.0], [94.2, 78.0], [94.3, 78.0], [94.4, 79.0], [94.5, 79.0], [94.6, 79.0], [94.7, 79.0], [94.8, 79.0], [94.9, 79.0], [95.0, 80.0], [95.1, 80.0], [95.2, 80.0], [95.3, 80.0], [95.4, 81.0], [95.5, 81.0], [95.6, 81.0], [95.7, 81.0], [95.8, 81.0], [95.9, 82.0], [96.0, 82.0], [96.1, 82.0], [96.2, 82.0], [96.3, 82.0], [96.4, 83.0], [96.5, 83.0], [96.6, 83.0], [96.7, 83.0], [96.8, 83.0], [96.9, 84.0], [97.0, 84.0], [97.1, 84.0], [97.2, 84.0], [97.3, 84.0], [97.4, 85.0], [97.5, 85.0], [97.6, 86.0], [97.7, 86.0], [97.8, 86.0], [97.9, 86.0], [98.0, 86.0], [98.1, 87.0], [98.2, 87.0], [98.3, 87.0], [98.4, 88.0], [98.5, 88.0], [98.6, 88.0], [98.7, 89.0], [98.8, 89.0], [98.9, 90.0], [99.0, 90.0], [99.1, 91.0], [99.2, 92.0], [99.3, 92.0], [99.4, 93.0], [99.5, 94.0], [99.6, 97.0], [99.7, 98.0], [99.8, 100.0], [99.9, 102.0], [100.0, 106.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 14.0], [0.1, 18.0], [0.2, 20.0], [0.3, 21.0], [0.4, 25.0], [0.5, 27.0], [0.6, 33.0], [0.7, 36.0], [0.8, 43.0], [0.9, 45.0], [1.0, 45.0], [1.1, 50.0], [1.2, 52.0], [1.3, 53.0], [1.4, 54.0], [1.5, 55.0], [1.6, 56.0], [1.7, 58.0], [1.8, 62.0], [1.9, 63.0], [2.0, 64.0], [2.1, 66.0], [2.2, 67.0], [2.3, 69.0], [2.4, 71.0], [2.5, 71.0], [2.6, 72.0], [2.7, 73.0], [2.8, 74.0], [2.9, 75.0], [3.0, 77.0], [3.1, 79.0], [3.2, 80.0], [3.3, 81.0], [3.4, 83.0], [3.5, 84.0], [3.6, 84.0], [3.7, 85.0], [3.8, 86.0], [3.9, 87.0], [4.0, 88.0], [4.1, 89.0], [4.2, 90.0], [4.3, 91.0], [4.4, 92.0], [4.5, 92.0], [4.6, 93.0], [4.7, 93.0], [4.8, 94.0], [4.9, 94.0], [5.0, 95.0], [5.1, 95.0], [5.2, 96.0], [5.3, 96.0], [5.4, 97.0], [5.5, 97.0], [5.6, 98.0], [5.7, 98.0], [5.8, 100.0], [5.9, 101.0], [6.0, 101.0], [6.1, 102.0], [6.2, 103.0], [6.3, 104.0], [6.4, 105.0], [6.5, 105.0], [6.6, 106.0], [6.7, 108.0], [6.8, 110.0], [6.9, 112.0], [7.0, 112.0], [7.1, 113.0], [7.2, 114.0], [7.3, 115.0], [7.4, 119.0], [7.5, 121.0], [7.6, 123.0], [7.7, 127.0], [7.8, 129.0], [7.9, 130.0], [8.0, 131.0], [8.1, 132.0], [8.2, 133.0], [8.3, 137.0], [8.4, 139.0], [8.5, 140.0], [8.6, 140.0], [8.7, 142.0], [8.8, 143.0], [8.9, 146.0], [9.0, 147.0], [9.1, 148.0], [9.2, 149.0], [9.3, 150.0], [9.4, 153.0], [9.5, 155.0], [9.6, 157.0], [9.7, 158.0], [9.8, 160.0], [9.9, 160.0], [10.0, 161.0], [10.1, 162.0], [10.2, 164.0], [10.3, 165.0], [10.4, 166.0], [10.5, 167.0], [10.6, 167.0], [10.7, 168.0], [10.8, 168.0], [10.9, 170.0], [11.0, 170.0], [11.1, 172.0], [11.2, 173.0], [11.3, 174.0], [11.4, 174.0], [11.5, 176.0], [11.6, 177.0], [11.7, 178.0], [11.8, 179.0], [11.9, 180.0], [12.0, 181.0], [12.1, 182.0], [12.2, 184.0], [12.3, 185.0], [12.4, 187.0], [12.5, 187.0], [12.6, 191.0], [12.7, 192.0], [12.8, 194.0], [12.9, 195.0], [13.0, 196.0], [13.1, 197.0], [13.2, 198.0], [13.3, 199.0], [13.4, 199.0], [13.5, 200.0], [13.6, 201.0], [13.7, 202.0], [13.8, 203.0], [13.9, 204.0], [14.0, 204.0], [14.1, 204.0], [14.2, 205.0], [14.3, 206.0], [14.4, 207.0], [14.5, 208.0], [14.6, 209.0], [14.7, 210.0], [14.8, 211.0], [14.9, 212.0], [15.0, 213.0], [15.1, 214.0], [15.2, 215.0], [15.3, 215.0], [15.4, 217.0], [15.5, 217.0], [15.6, 218.0], [15.7, 219.0], [15.8, 220.0], [15.9, 220.0], [16.0, 221.0], [16.1, 222.0], [16.2, 222.0], [16.3, 223.0], [16.4, 223.0], [16.5, 224.0], [16.6, 225.0], [16.7, 225.0], [16.8, 226.0], [16.9, 227.0], [17.0, 227.0], [17.1, 228.0], [17.2, 228.0], [17.3, 229.0], [17.4, 229.0], [17.5, 230.0], [17.6, 230.0], [17.7, 231.0], [17.8, 231.0], [17.9, 232.0], [18.0, 233.0], [18.1, 234.0], [18.2, 235.0], [18.3, 235.0], [18.4, 236.0], [18.5, 236.0], [18.6, 237.0], [18.7, 237.0], [18.8, 238.0], [18.9, 238.0], [19.0, 238.0], [19.1, 239.0], [19.2, 239.0], [19.3, 239.0], [19.4, 240.0], [19.5, 241.0], [19.6, 241.0], [19.7, 241.0], [19.8, 242.0], [19.9, 243.0], [20.0, 243.0], [20.1, 243.0], [20.2, 244.0], [20.3, 244.0], [20.4, 245.0], [20.5, 245.0], [20.6, 245.0], [20.7, 246.0], [20.8, 246.0], [20.9, 246.0], [21.0, 247.0], [21.1, 247.0], [21.2, 247.0], [21.3, 247.0], [21.4, 248.0], [21.5, 248.0], [21.6, 249.0], [21.7, 249.0], [21.8, 250.0], [21.9, 250.0], [22.0, 251.0], [22.1, 252.0], [22.2, 252.0], [22.3, 252.0], [22.4, 253.0], [22.5, 253.0], [22.6, 253.0], [22.7, 254.0], [22.8, 254.0], [22.9, 254.0], [23.0, 254.0], [23.1, 255.0], [23.2, 256.0], [23.3, 256.0], [23.4, 256.0], [23.5, 257.0], [23.6, 257.0], [23.7, 257.0], [23.8, 258.0], [23.9, 258.0], [24.0, 259.0], [24.1, 259.0], [24.2, 260.0], [24.3, 260.0], [24.4, 261.0], [24.5, 261.0], [24.6, 262.0], [24.7, 262.0], [24.8, 262.0], [24.9, 263.0], [25.0, 263.0], [25.1, 263.0], [25.2, 264.0], [25.3, 264.0], [25.4, 264.0], [25.5, 265.0], [25.6, 265.0], [25.7, 265.0], [25.8, 266.0], [25.9, 266.0], [26.0, 266.0], [26.1, 267.0], [26.2, 267.0], [26.3, 267.0], [26.4, 268.0], [26.5, 268.0], [26.6, 268.0], [26.7, 269.0], [26.8, 269.0], [26.9, 269.0], [27.0, 269.0], [27.1, 270.0], [27.2, 270.0], [27.3, 270.0], [27.4, 271.0], [27.5, 271.0], [27.6, 272.0], [27.7, 272.0], [27.8, 272.0], [27.9, 272.0], [28.0, 273.0], [28.1, 273.0], [28.2, 273.0], [28.3, 274.0], [28.4, 274.0], [28.5, 274.0], [28.6, 274.0], [28.7, 274.0], [28.8, 275.0], [28.9, 275.0], [29.0, 275.0], [29.1, 275.0], [29.2, 276.0], [29.3, 276.0], [29.4, 276.0], [29.5, 276.0], [29.6, 277.0], [29.7, 277.0], [29.8, 277.0], [29.9, 277.0], [30.0, 278.0], [30.1, 278.0], [30.2, 278.0], [30.3, 278.0], [30.4, 279.0], [30.5, 279.0], [30.6, 280.0], [30.7, 280.0], [30.8, 280.0], [30.9, 281.0], [31.0, 281.0], [31.1, 281.0], [31.2, 282.0], [31.3, 282.0], [31.4, 283.0], [31.5, 284.0], [31.6, 284.0], [31.7, 285.0], [31.8, 285.0], [31.9, 286.0], [32.0, 286.0], [32.1, 286.0], [32.2, 287.0], [32.3, 288.0], [32.4, 288.0], [32.5, 289.0], [32.6, 290.0], [32.7, 291.0], [32.8, 291.0], [32.9, 292.0], [33.0, 293.0], [33.1, 293.0], [33.2, 294.0], [33.3, 295.0], [33.4, 295.0], [33.5, 295.0], [33.6, 296.0], [33.7, 296.0], [33.8, 298.0], [33.9, 298.0], [34.0, 299.0], [34.1, 300.0], [34.2, 301.0], [34.3, 302.0], [34.4, 302.0], [34.5, 303.0], [34.6, 303.0], [34.7, 304.0], [34.8, 305.0], [34.9, 306.0], [35.0, 307.0], [35.1, 308.0], [35.2, 309.0], [35.3, 310.0], [35.4, 311.0], [35.5, 311.0], [35.6, 312.0], [35.7, 313.0], [35.8, 315.0], [35.9, 315.0], [36.0, 316.0], [36.1, 317.0], [36.2, 318.0], [36.3, 318.0], [36.4, 319.0], [36.5, 319.0], [36.6, 321.0], [36.7, 321.0], [36.8, 323.0], [36.9, 324.0], [37.0, 324.0], [37.1, 325.0], [37.2, 325.0], [37.3, 326.0], [37.4, 326.0], [37.5, 327.0], [37.6, 328.0], [37.7, 329.0], [37.8, 329.0], [37.9, 330.0], [38.0, 331.0], [38.1, 331.0], [38.2, 332.0], [38.3, 333.0], [38.4, 334.0], [38.5, 335.0], [38.6, 336.0], [38.7, 336.0], [38.8, 337.0], [38.9, 338.0], [39.0, 338.0], [39.1, 339.0], [39.2, 341.0], [39.3, 342.0], [39.4, 342.0], [39.5, 343.0], [39.6, 344.0], [39.7, 344.0], [39.8, 345.0], [39.9, 345.0], [40.0, 345.0], [40.1, 346.0], [40.2, 347.0], [40.3, 347.0], [40.4, 348.0], [40.5, 349.0], [40.6, 350.0], [40.7, 350.0], [40.8, 350.0], [40.9, 351.0], [41.0, 352.0], [41.1, 352.0], [41.2, 353.0], [41.3, 354.0], [41.4, 354.0], [41.5, 355.0], [41.6, 356.0], [41.7, 356.0], [41.8, 357.0], [41.9, 357.0], [42.0, 358.0], [42.1, 358.0], [42.2, 359.0], [42.3, 359.0], [42.4, 360.0], [42.5, 361.0], [42.6, 361.0], [42.7, 362.0], [42.8, 362.0], [42.9, 363.0], [43.0, 363.0], [43.1, 364.0], [43.2, 365.0], [43.3, 366.0], [43.4, 366.0], [43.5, 367.0], [43.6, 367.0], [43.7, 368.0], [43.8, 369.0], [43.9, 370.0], [44.0, 370.0], [44.1, 371.0], [44.2, 372.0], [44.3, 373.0], [44.4, 373.0], [44.5, 374.0], [44.6, 374.0], [44.7, 375.0], [44.8, 376.0], [44.9, 376.0], [45.0, 377.0], [45.1, 378.0], [45.2, 379.0], [45.3, 379.0], [45.4, 380.0], [45.5, 380.0], [45.6, 381.0], [45.7, 381.0], [45.8, 381.0], [45.9, 382.0], [46.0, 383.0], [46.1, 383.0], [46.2, 384.0], [46.3, 384.0], [46.4, 384.0], [46.5, 385.0], [46.6, 386.0], [46.7, 386.0], [46.8, 386.0], [46.9, 387.0], [47.0, 388.0], [47.1, 388.0], [47.2, 389.0], [47.3, 389.0], [47.4, 390.0], [47.5, 391.0], [47.6, 391.0], [47.7, 392.0], [47.8, 393.0], [47.9, 394.0], [48.0, 394.0], [48.1, 395.0], [48.2, 395.0], [48.3, 396.0], [48.4, 396.0], [48.5, 397.0], [48.6, 397.0], [48.7, 398.0], [48.8, 399.0], [48.9, 400.0], [49.0, 400.0], [49.1, 401.0], [49.2, 401.0], [49.3, 402.0], [49.4, 403.0], [49.5, 403.0], [49.6, 405.0], [49.7, 406.0], [49.8, 407.0], [49.9, 408.0], [50.0, 409.0], [50.1, 410.0], [50.2, 411.0], [50.3, 412.0], [50.4, 413.0], [50.5, 414.0], [50.6, 415.0], [50.7, 415.0], [50.8, 416.0], [50.9, 418.0], [51.0, 420.0], [51.1, 421.0], [51.2, 424.0], [51.3, 425.0], [51.4, 427.0], [51.5, 429.0], [51.6, 431.0], [51.7, 434.0], [51.8, 436.0], [51.9, 437.0], [52.0, 439.0], [52.1, 442.0], [52.2, 445.0], [52.3, 446.0], [52.4, 447.0], [52.5, 448.0], [52.6, 452.0], [52.7, 455.0], [52.8, 458.0], [52.9, 459.0], [53.0, 461.0], [53.1, 463.0], [53.2, 465.0], [53.3, 466.0], [53.4, 468.0], [53.5, 469.0], [53.6, 470.0], [53.7, 472.0], [53.8, 473.0], [53.9, 474.0], [54.0, 475.0], [54.1, 476.0], [54.2, 477.0], [54.3, 478.0], [54.4, 478.0], [54.5, 480.0], [54.6, 481.0], [54.7, 481.0], [54.8, 482.0], [54.9, 483.0], [55.0, 484.0], [55.1, 484.0], [55.2, 484.0], [55.3, 485.0], [55.4, 485.0], [55.5, 486.0], [55.6, 487.0], [55.7, 487.0], [55.8, 488.0], [55.9, 488.0], [56.0, 489.0], [56.1, 489.0], [56.2, 490.0], [56.3, 490.0], [56.4, 491.0], [56.5, 491.0], [56.6, 491.0], [56.7, 492.0], [56.8, 493.0], [56.9, 493.0], [57.0, 493.0], [57.1, 494.0], [57.2, 494.0], [57.3, 495.0], [57.4, 495.0], [57.5, 495.0], [57.6, 496.0], [57.7, 496.0], [57.8, 497.0], [57.9, 497.0], [58.0, 497.0], [58.1, 498.0], [58.2, 498.0], [58.3, 499.0], [58.4, 499.0], [58.5, 499.0], [58.6, 500.0], [58.7, 500.0], [58.8, 500.0], [58.9, 501.0], [59.0, 501.0], [59.1, 501.0], [59.2, 502.0], [59.3, 502.0], [59.4, 503.0], [59.5, 503.0], [59.6, 504.0], [59.7, 504.0], [59.8, 505.0], [59.9, 505.0], [60.0, 505.0], [60.1, 506.0], [60.2, 506.0], [60.3, 507.0], [60.4, 507.0], [60.5, 508.0], [60.6, 508.0], [60.7, 509.0], [60.8, 509.0], [60.9, 510.0], [61.0, 510.0], [61.1, 511.0], [61.2, 511.0], [61.3, 512.0], [61.4, 512.0], [61.5, 513.0], [61.6, 513.0], [61.7, 513.0], [61.8, 514.0], [61.9, 514.0], [62.0, 515.0], [62.1, 515.0], [62.2, 515.0], [62.3, 516.0], [62.4, 516.0], [62.5, 517.0], [62.6, 517.0], [62.7, 518.0], [62.8, 518.0], [62.9, 518.0], [63.0, 518.0], [63.1, 518.0], [63.2, 519.0], [63.3, 519.0], [63.4, 519.0], [63.5, 519.0], [63.6, 520.0], [63.7, 520.0], [63.8, 520.0], [63.9, 521.0], [64.0, 521.0], [64.1, 521.0], [64.2, 521.0], [64.3, 522.0], [64.4, 522.0], [64.5, 522.0], [64.6, 523.0], [64.7, 523.0], [64.8, 523.0], [64.9, 524.0], [65.0, 524.0], [65.1, 524.0], [65.2, 524.0], [65.3, 525.0], [65.4, 525.0], [65.5, 525.0], [65.6, 525.0], [65.7, 526.0], [65.8, 526.0], [65.9, 526.0], [66.0, 526.0], [66.1, 526.0], [66.2, 527.0], [66.3, 527.0], [66.4, 527.0], [66.5, 527.0], [66.6, 528.0], [66.7, 528.0], [66.8, 528.0], [66.9, 529.0], [67.0, 529.0], [67.1, 529.0], [67.2, 529.0], [67.3, 530.0], [67.4, 530.0], [67.5, 530.0], [67.6, 531.0], [67.7, 531.0], [67.8, 531.0], [67.9, 531.0], [68.0, 531.0], [68.1, 531.0], [68.2, 532.0], [68.3, 532.0], [68.4, 532.0], [68.5, 532.0], [68.6, 532.0], [68.7, 533.0], [68.8, 533.0], [68.9, 533.0], [69.0, 534.0], [69.1, 534.0], [69.2, 534.0], [69.3, 535.0], [69.4, 535.0], [69.5, 536.0], [69.6, 536.0], [69.7, 536.0], [69.8, 537.0], [69.9, 537.0], [70.0, 538.0], [70.1, 538.0], [70.2, 538.0], [70.3, 539.0], [70.4, 539.0], [70.5, 540.0], [70.6, 540.0], [70.7, 540.0], [70.8, 541.0], [70.9, 541.0], [71.0, 541.0], [71.1, 542.0], [71.2, 542.0], [71.3, 543.0], [71.4, 543.0], [71.5, 544.0], [71.6, 544.0], [71.7, 545.0], [71.8, 545.0], [71.9, 546.0], [72.0, 546.0], [72.1, 546.0], [72.2, 547.0], [72.3, 548.0], [72.4, 549.0], [72.5, 550.0], [72.6, 551.0], [72.7, 552.0], [72.8, 553.0], [72.9, 554.0], [73.0, 555.0], [73.1, 556.0], [73.2, 558.0], [73.3, 559.0], [73.4, 561.0], [73.5, 563.0], [73.6, 563.0], [73.7, 565.0], [73.8, 566.0], [73.9, 567.0], [74.0, 569.0], [74.1, 569.0], [74.2, 570.0], [74.3, 571.0], [74.4, 572.0], [74.5, 573.0], [74.6, 573.0], [74.7, 574.0], [74.8, 575.0], [74.9, 575.0], [75.0, 576.0], [75.1, 577.0], [75.2, 577.0], [75.3, 577.0], [75.4, 578.0], [75.5, 578.0], [75.6, 579.0], [75.7, 579.0], [75.8, 580.0], [75.9, 580.0], [76.0, 581.0], [76.1, 581.0], [76.2, 582.0], [76.3, 582.0], [76.4, 583.0], [76.5, 583.0], [76.6, 584.0], [76.7, 585.0], [76.8, 585.0], [76.9, 586.0], [77.0, 586.0], [77.1, 587.0], [77.2, 587.0], [77.3, 588.0], [77.4, 589.0], [77.5, 589.0], [77.6, 590.0], [77.7, 590.0], [77.8, 591.0], [77.9, 591.0], [78.0, 592.0], [78.1, 593.0], [78.2, 593.0], [78.3, 594.0], [78.4, 595.0], [78.5, 596.0], [78.6, 597.0], [78.7, 598.0], [78.8, 598.0], [78.9, 600.0], [79.0, 600.0], [79.1, 601.0], [79.2, 601.0], [79.3, 602.0], [79.4, 603.0], [79.5, 604.0], [79.6, 604.0], [79.7, 604.0], [79.8, 605.0], [79.9, 606.0], [80.0, 606.0], [80.1, 606.0], [80.2, 606.0], [80.3, 607.0], [80.4, 607.0], [80.5, 608.0], [80.6, 608.0], [80.7, 609.0], [80.8, 610.0], [80.9, 610.0], [81.0, 611.0], [81.1, 612.0], [81.2, 612.0], [81.3, 612.0], [81.4, 613.0], [81.5, 614.0], [81.6, 615.0], [81.7, 617.0], [81.8, 617.0], [81.9, 618.0], [82.0, 619.0], [82.1, 619.0], [82.2, 620.0], [82.3, 621.0], [82.4, 622.0], [82.5, 623.0], [82.6, 624.0], [82.7, 625.0], [82.8, 626.0], [82.9, 626.0], [83.0, 627.0], [83.1, 627.0], [83.2, 628.0], [83.3, 629.0], [83.4, 629.0], [83.5, 630.0], [83.6, 631.0], [83.7, 631.0], [83.8, 632.0], [83.9, 632.0], [84.0, 633.0], [84.1, 633.0], [84.2, 635.0], [84.3, 635.0], [84.4, 638.0], [84.5, 639.0], [84.6, 642.0], [84.7, 643.0], [84.8, 645.0], [84.9, 647.0], [85.0, 648.0], [85.1, 649.0], [85.2, 651.0], [85.3, 652.0], [85.4, 653.0], [85.5, 653.0], [85.6, 656.0], [85.7, 657.0], [85.8, 658.0], [85.9, 660.0], [86.0, 661.0], [86.1, 662.0], [86.2, 664.0], [86.3, 665.0], [86.4, 666.0], [86.5, 669.0], [86.6, 671.0], [86.7, 672.0], [86.8, 673.0], [86.9, 675.0], [87.0, 676.0], [87.1, 677.0], [87.2, 678.0], [87.3, 679.0], [87.4, 680.0], [87.5, 681.0], [87.6, 683.0], [87.7, 684.0], [87.8, 685.0], [87.9, 686.0], [88.0, 687.0], [88.1, 688.0], [88.2, 689.0], [88.3, 689.0], [88.4, 690.0], [88.5, 692.0], [88.6, 693.0], [88.7, 694.0], [88.8, 695.0], [88.9, 697.0], [89.0, 698.0], [89.1, 700.0], [89.2, 701.0], [89.3, 702.0], [89.4, 704.0], [89.5, 706.0], [89.6, 707.0], [89.7, 708.0], [89.8, 709.0], [89.9, 711.0], [90.0, 711.0], [90.1, 711.0], [90.2, 712.0], [90.3, 714.0], [90.4, 715.0], [90.5, 716.0], [90.6, 718.0], [90.7, 719.0], [90.8, 719.0], [90.9, 720.0], [91.0, 721.0], [91.1, 722.0], [91.2, 725.0], [91.3, 726.0], [91.4, 727.0], [91.5, 728.0], [91.6, 729.0], [91.7, 730.0], [91.8, 731.0], [91.9, 732.0], [92.0, 733.0], [92.1, 735.0], [92.2, 736.0], [92.3, 738.0], [92.4, 740.0], [92.5, 741.0], [92.6, 743.0], [92.7, 744.0], [92.8, 746.0], [92.9, 747.0], [93.0, 749.0], [93.1, 752.0], [93.2, 753.0], [93.3, 755.0], [93.4, 757.0], [93.5, 759.0], [93.6, 762.0], [93.7, 762.0], [93.8, 764.0], [93.9, 765.0], [94.0, 767.0], [94.1, 768.0], [94.2, 770.0], [94.3, 771.0], [94.4, 773.0], [94.5, 775.0], [94.6, 777.0], [94.7, 777.0], [94.8, 779.0], [94.9, 779.0], [95.0, 781.0], [95.1, 782.0], [95.2, 784.0], [95.3, 786.0], [95.4, 788.0], [95.5, 790.0], [95.6, 791.0], [95.7, 793.0], [95.8, 794.0], [95.9, 795.0], [96.0, 796.0], [96.1, 797.0], [96.2, 798.0], [96.3, 799.0], [96.4, 801.0], [96.5, 801.0], [96.6, 802.0], [96.7, 803.0], [96.8, 804.0], [96.9, 805.0], [97.0, 805.0], [97.1, 806.0], [97.2, 807.0], [97.3, 808.0], [97.4, 808.0], [97.5, 809.0], [97.6, 810.0], [97.7, 810.0], [97.8, 811.0], [97.9, 812.0], [98.0, 813.0], [98.1, 814.0], [98.2, 815.0], [98.3, 816.0], [98.4, 816.0], [98.5, 818.0], [98.6, 819.0], [98.7, 820.0], [98.8, 820.0], [98.9, 821.0], [99.0, 822.0], [99.1, 823.0], [99.2, 823.0], [99.3, 824.0], [99.4, 826.0], [99.5, 828.0], [99.6, 832.0], [99.7, 835.0], [99.8, 838.0], [99.9, 841.0], [100.0, 853.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 7.0], [3.4, 7.0], [3.5, 7.0], [3.6, 8.0], [3.7, 8.0], [3.8, 9.0], [3.9, 9.0], [4.0, 9.0], [4.1, 10.0], [4.2, 11.0], [4.3, 12.0], [4.4, 12.0], [4.5, 13.0], [4.6, 13.0], [4.7, 14.0], [4.8, 14.0], [4.9, 15.0], [5.0, 16.0], [5.1, 17.0], [5.2, 17.0], [5.3, 18.0], [5.4, 21.0], [5.5, 23.0], [5.6, 24.0], [5.7, 25.0], [5.8, 26.0], [5.9, 26.0], [6.0, 27.0], [6.1, 27.0], [6.2, 27.0], [6.3, 28.0], [6.4, 28.0], [6.5, 28.0], [6.6, 29.0], [6.7, 29.0], [6.8, 29.0], [6.9, 29.0], [7.0, 30.0], [7.1, 30.0], [7.2, 30.0], [7.3, 30.0], [7.4, 30.0], [7.5, 31.0], [7.6, 31.0], [7.7, 31.0], [7.8, 31.0], [7.9, 31.0], [8.0, 32.0], [8.1, 32.0], [8.2, 32.0], [8.3, 32.0], [8.4, 32.0], [8.5, 32.0], [8.6, 33.0], [8.7, 33.0], [8.8, 33.0], [8.9, 33.0], [9.0, 33.0], [9.1, 33.0], [9.2, 33.0], [9.3, 33.0], [9.4, 33.0], [9.5, 33.0], [9.6, 33.0], [9.7, 34.0], [9.8, 34.0], [9.9, 34.0], [10.0, 34.0], [10.1, 34.0], [10.2, 34.0], [10.3, 34.0], [10.4, 34.0], [10.5, 34.0], [10.6, 34.0], [10.7, 34.0], [10.8, 34.0], [10.9, 34.0], [11.0, 34.0], [11.1, 34.0], [11.2, 34.0], [11.3, 34.0], [11.4, 34.0], [11.5, 34.0], [11.6, 35.0], [11.7, 35.0], [11.8, 35.0], [11.9, 35.0], [12.0, 35.0], [12.1, 35.0], [12.2, 35.0], [12.3, 35.0], [12.4, 35.0], [12.5, 35.0], [12.6, 35.0], [12.7, 35.0], [12.8, 35.0], [12.9, 35.0], [13.0, 35.0], [13.1, 35.0], [13.2, 35.0], [13.3, 35.0], [13.4, 35.0], [13.5, 35.0], [13.6, 35.0], [13.7, 35.0], [13.8, 35.0], [13.9, 35.0], [14.0, 35.0], [14.1, 35.0], [14.2, 36.0], [14.3, 36.0], [14.4, 36.0], [14.5, 36.0], [14.6, 36.0], [14.7, 36.0], [14.8, 36.0], [14.9, 36.0], [15.0, 36.0], [15.1, 36.0], [15.2, 36.0], [15.3, 36.0], [15.4, 36.0], [15.5, 36.0], [15.6, 36.0], [15.7, 36.0], [15.8, 36.0], [15.9, 36.0], [16.0, 36.0], [16.1, 36.0], [16.2, 36.0], [16.3, 36.0], [16.4, 36.0], [16.5, 36.0], [16.6, 36.0], [16.7, 36.0], [16.8, 36.0], [16.9, 37.0], [17.0, 37.0], [17.1, 37.0], [17.2, 37.0], [17.3, 37.0], [17.4, 37.0], [17.5, 37.0], [17.6, 37.0], [17.7, 37.0], [17.8, 37.0], [17.9, 37.0], [18.0, 37.0], [18.1, 37.0], [18.2, 37.0], [18.3, 37.0], [18.4, 37.0], [18.5, 37.0], [18.6, 37.0], [18.7, 37.0], [18.8, 37.0], [18.9, 37.0], [19.0, 37.0], [19.1, 37.0], [19.2, 37.0], [19.3, 37.0], [19.4, 37.0], [19.5, 37.0], [19.6, 37.0], [19.7, 37.0], [19.8, 37.0], [19.9, 37.0], [20.0, 37.0], [20.1, 38.0], [20.2, 38.0], [20.3, 38.0], [20.4, 38.0], [20.5, 38.0], [20.6, 38.0], [20.7, 38.0], [20.8, 38.0], [20.9, 38.0], [21.0, 38.0], [21.1, 38.0], [21.2, 38.0], [21.3, 38.0], [21.4, 38.0], [21.5, 38.0], [21.6, 38.0], [21.7, 38.0], [21.8, 38.0], [21.9, 38.0], [22.0, 38.0], [22.1, 38.0], [22.2, 38.0], [22.3, 38.0], [22.4, 38.0], [22.5, 38.0], [22.6, 38.0], [22.7, 38.0], [22.8, 38.0], [22.9, 38.0], [23.0, 38.0], [23.1, 38.0], [23.2, 38.0], [23.3, 38.0], [23.4, 38.0], [23.5, 38.0], [23.6, 38.0], [23.7, 38.0], [23.8, 38.0], [23.9, 38.0], [24.0, 38.0], [24.1, 39.0], [24.2, 39.0], [24.3, 39.0], [24.4, 39.0], [24.5, 39.0], [24.6, 39.0], [24.7, 39.0], [24.8, 39.0], [24.9, 39.0], [25.0, 39.0], [25.1, 39.0], [25.2, 39.0], [25.3, 39.0], [25.4, 39.0], [25.5, 39.0], [25.6, 39.0], [25.7, 39.0], [25.8, 39.0], [25.9, 39.0], [26.0, 39.0], [26.1, 39.0], [26.2, 39.0], [26.3, 39.0], [26.4, 39.0], [26.5, 39.0], [26.6, 39.0], [26.7, 39.0], [26.8, 39.0], [26.9, 39.0], [27.0, 39.0], [27.1, 39.0], [27.2, 39.0], [27.3, 39.0], [27.4, 39.0], [27.5, 39.0], [27.6, 39.0], [27.7, 39.0], [27.8, 39.0], [27.9, 39.0], [28.0, 39.0], [28.1, 39.0], [28.2, 39.0], [28.3, 39.0], [28.4, 40.0], [28.5, 40.0], [28.6, 40.0], [28.7, 40.0], [28.8, 40.0], [28.9, 40.0], [29.0, 40.0], [29.1, 40.0], [29.2, 40.0], [29.3, 40.0], [29.4, 40.0], [29.5, 40.0], [29.6, 40.0], [29.7, 40.0], [29.8, 40.0], [29.9, 40.0], [30.0, 40.0], [30.1, 40.0], [30.2, 40.0], [30.3, 40.0], [30.4, 40.0], [30.5, 40.0], [30.6, 40.0], [30.7, 40.0], [30.8, 40.0], [30.9, 40.0], [31.0, 40.0], [31.1, 40.0], [31.2, 40.0], [31.3, 40.0], [31.4, 40.0], [31.5, 40.0], [31.6, 40.0], [31.7, 40.0], [31.8, 40.0], [31.9, 40.0], [32.0, 40.0], [32.1, 40.0], [32.2, 40.0], [32.3, 40.0], [32.4, 40.0], [32.5, 40.0], [32.6, 40.0], [32.7, 40.0], [32.8, 40.0], [32.9, 40.0], [33.0, 40.0], [33.1, 40.0], [33.2, 41.0], [33.3, 41.0], [33.4, 41.0], [33.5, 41.0], [33.6, 41.0], [33.7, 41.0], [33.8, 41.0], [33.9, 41.0], [34.0, 41.0], [34.1, 41.0], [34.2, 41.0], [34.3, 41.0], [34.4, 41.0], [34.5, 41.0], [34.6, 41.0], [34.7, 41.0], [34.8, 41.0], [34.9, 41.0], [35.0, 41.0], [35.1, 41.0], [35.2, 41.0], [35.3, 41.0], [35.4, 41.0], [35.5, 41.0], [35.6, 41.0], [35.7, 41.0], [35.8, 41.0], [35.9, 41.0], [36.0, 41.0], [36.1, 41.0], [36.2, 41.0], [36.3, 41.0], [36.4, 41.0], [36.5, 41.0], [36.6, 41.0], [36.7, 41.0], [36.8, 41.0], [36.9, 41.0], [37.0, 41.0], [37.1, 41.0], [37.2, 41.0], [37.3, 41.0], [37.4, 41.0], [37.5, 41.0], [37.6, 41.0], [37.7, 41.0], [37.8, 41.0], [37.9, 41.0], [38.0, 42.0], [38.1, 42.0], [38.2, 42.0], [38.3, 42.0], [38.4, 42.0], [38.5, 42.0], [38.6, 42.0], [38.7, 42.0], [38.8, 42.0], [38.9, 42.0], [39.0, 42.0], [39.1, 42.0], [39.2, 42.0], [39.3, 42.0], [39.4, 42.0], [39.5, 42.0], [39.6, 42.0], [39.7, 42.0], [39.8, 42.0], [39.9, 42.0], [40.0, 42.0], [40.1, 42.0], [40.2, 42.0], [40.3, 42.0], [40.4, 42.0], [40.5, 42.0], [40.6, 42.0], [40.7, 42.0], [40.8, 42.0], [40.9, 42.0], [41.0, 42.0], [41.1, 42.0], [41.2, 42.0], [41.3, 42.0], [41.4, 42.0], [41.5, 42.0], [41.6, 42.0], [41.7, 42.0], [41.8, 42.0], [41.9, 42.0], [42.0, 42.0], [42.1, 42.0], [42.2, 42.0], [42.3, 42.0], [42.4, 42.0], [42.5, 42.0], [42.6, 42.0], [42.7, 42.0], [42.8, 42.0], [42.9, 42.0], [43.0, 42.0], [43.1, 42.0], [43.2, 42.0], [43.3, 42.0], [43.4, 42.0], [43.5, 43.0], [43.6, 43.0], [43.7, 43.0], [43.8, 43.0], [43.9, 43.0], [44.0, 43.0], [44.1, 43.0], [44.2, 43.0], [44.3, 43.0], [44.4, 43.0], [44.5, 43.0], [44.6, 43.0], [44.7, 43.0], [44.8, 43.0], [44.9, 43.0], [45.0, 43.0], [45.1, 43.0], [45.2, 43.0], [45.3, 43.0], [45.4, 43.0], [45.5, 43.0], [45.6, 43.0], [45.7, 43.0], [45.8, 43.0], [45.9, 43.0], [46.0, 43.0], [46.1, 43.0], [46.2, 43.0], [46.3, 43.0], [46.4, 43.0], [46.5, 43.0], [46.6, 43.0], [46.7, 43.0], [46.8, 43.0], [46.9, 43.0], [47.0, 43.0], [47.1, 43.0], [47.2, 43.0], [47.3, 43.0], [47.4, 43.0], [47.5, 43.0], [47.6, 43.0], [47.7, 43.0], [47.8, 43.0], [47.9, 43.0], [48.0, 43.0], [48.1, 43.0], [48.2, 43.0], [48.3, 43.0], [48.4, 44.0], [48.5, 44.0], [48.6, 44.0], [48.7, 44.0], [48.8, 44.0], [48.9, 44.0], [49.0, 44.0], [49.1, 44.0], [49.2, 44.0], [49.3, 44.0], [49.4, 44.0], [49.5, 44.0], [49.6, 44.0], [49.7, 44.0], [49.8, 44.0], [49.9, 44.0], [50.0, 44.0], [50.1, 44.0], [50.2, 44.0], [50.3, 44.0], [50.4, 44.0], [50.5, 44.0], [50.6, 44.0], [50.7, 44.0], [50.8, 44.0], [50.9, 44.0], [51.0, 44.0], [51.1, 44.0], [51.2, 44.0], [51.3, 44.0], [51.4, 44.0], [51.5, 44.0], [51.6, 44.0], [51.7, 44.0], [51.8, 44.0], [51.9, 44.0], [52.0, 44.0], [52.1, 44.0], [52.2, 44.0], [52.3, 44.0], [52.4, 44.0], [52.5, 44.0], [52.6, 44.0], [52.7, 44.0], [52.8, 44.0], [52.9, 44.0], [53.0, 44.0], [53.1, 44.0], [53.2, 44.0], [53.3, 44.0], [53.4, 44.0], [53.5, 44.0], [53.6, 44.0], [53.7, 44.0], [53.8, 45.0], [53.9, 45.0], [54.0, 45.0], [54.1, 45.0], [54.2, 45.0], [54.3, 45.0], [54.4, 45.0], [54.5, 45.0], [54.6, 45.0], [54.7, 45.0], [54.8, 45.0], [54.9, 45.0], [55.0, 45.0], [55.1, 45.0], [55.2, 45.0], [55.3, 45.0], [55.4, 45.0], [55.5, 45.0], [55.6, 45.0], [55.7, 45.0], [55.8, 45.0], [55.9, 45.0], [56.0, 45.0], [56.1, 45.0], [56.2, 45.0], [56.3, 45.0], [56.4, 45.0], [56.5, 45.0], [56.6, 45.0], [56.7, 45.0], [56.8, 45.0], [56.9, 45.0], [57.0, 45.0], [57.1, 45.0], [57.2, 45.0], [57.3, 45.0], [57.4, 45.0], [57.5, 45.0], [57.6, 45.0], [57.7, 45.0], [57.8, 45.0], [57.9, 45.0], [58.0, 45.0], [58.1, 45.0], [58.2, 46.0], [58.3, 46.0], [58.4, 46.0], [58.5, 46.0], [58.6, 46.0], [58.7, 46.0], [58.8, 46.0], [58.9, 46.0], [59.0, 46.0], [59.1, 46.0], [59.2, 46.0], [59.3, 46.0], [59.4, 46.0], [59.5, 46.0], [59.6, 46.0], [59.7, 46.0], [59.8, 46.0], [59.9, 46.0], [60.0, 46.0], [60.1, 46.0], [60.2, 46.0], [60.3, 46.0], [60.4, 46.0], [60.5, 46.0], [60.6, 46.0], [60.7, 46.0], [60.8, 46.0], [60.9, 46.0], [61.0, 46.0], [61.1, 46.0], [61.2, 46.0], [61.3, 46.0], [61.4, 46.0], [61.5, 46.0], [61.6, 46.0], [61.7, 46.0], [61.8, 46.0], [61.9, 46.0], [62.0, 46.0], [62.1, 47.0], [62.2, 47.0], [62.3, 47.0], [62.4, 47.0], [62.5, 47.0], [62.6, 47.0], [62.7, 47.0], [62.8, 47.0], [62.9, 47.0], [63.0, 47.0], [63.1, 47.0], [63.2, 47.0], [63.3, 47.0], [63.4, 47.0], [63.5, 47.0], [63.6, 47.0], [63.7, 47.0], [63.8, 47.0], [63.9, 47.0], [64.0, 47.0], [64.1, 47.0], [64.2, 47.0], [64.3, 47.0], [64.4, 47.0], [64.5, 47.0], [64.6, 47.0], [64.7, 47.0], [64.8, 47.0], [64.9, 47.0], [65.0, 47.0], [65.1, 47.0], [65.2, 47.0], [65.3, 47.0], [65.4, 47.0], [65.5, 47.0], [65.6, 47.0], [65.7, 48.0], [65.8, 48.0], [65.9, 48.0], [66.0, 48.0], [66.1, 48.0], [66.2, 48.0], [66.3, 48.0], [66.4, 48.0], [66.5, 48.0], [66.6, 48.0], [66.7, 48.0], [66.8, 48.0], [66.9, 48.0], [67.0, 48.0], [67.1, 48.0], [67.2, 48.0], [67.3, 48.0], [67.4, 48.0], [67.5, 48.0], [67.6, 48.0], [67.7, 48.0], [67.8, 48.0], [67.9, 48.0], [68.0, 48.0], [68.1, 48.0], [68.2, 48.0], [68.3, 48.0], [68.4, 48.0], [68.5, 48.0], [68.6, 48.0], [68.7, 48.0], [68.8, 48.0], [68.9, 48.0], [69.0, 48.0], [69.1, 48.0], [69.2, 48.0], [69.3, 48.0], [69.4, 48.0], [69.5, 48.0], [69.6, 49.0], [69.7, 49.0], [69.8, 49.0], [69.9, 49.0], [70.0, 49.0], [70.1, 49.0], [70.2, 49.0], [70.3, 49.0], [70.4, 49.0], [70.5, 49.0], [70.6, 49.0], [70.7, 49.0], [70.8, 49.0], [70.9, 49.0], [71.0, 49.0], [71.1, 49.0], [71.2, 49.0], [71.3, 49.0], [71.4, 49.0], [71.5, 49.0], [71.6, 49.0], [71.7, 49.0], [71.8, 49.0], [71.9, 49.0], [72.0, 49.0], [72.1, 49.0], [72.2, 49.0], [72.3, 49.0], [72.4, 49.0], [72.5, 49.0], [72.6, 49.0], [72.7, 49.0], [72.8, 49.0], [72.9, 49.0], [73.0, 49.0], [73.1, 50.0], [73.2, 50.0], [73.3, 50.0], [73.4, 50.0], [73.5, 50.0], [73.6, 50.0], [73.7, 50.0], [73.8, 50.0], [73.9, 50.0], [74.0, 50.0], [74.1, 50.0], [74.2, 50.0], [74.3, 50.0], [74.4, 50.0], [74.5, 50.0], [74.6, 50.0], [74.7, 50.0], [74.8, 50.0], [74.9, 50.0], [75.0, 50.0], [75.1, 50.0], [75.2, 50.0], [75.3, 50.0], [75.4, 50.0], [75.5, 50.0], [75.6, 50.0], [75.7, 50.0], [75.8, 50.0], [75.9, 50.0], [76.0, 50.0], [76.1, 50.0], [76.2, 50.0], [76.3, 50.0], [76.4, 50.0], [76.5, 51.0], [76.6, 51.0], [76.7, 51.0], [76.8, 51.0], [76.9, 51.0], [77.0, 51.0], [77.1, 51.0], [77.2, 51.0], [77.3, 51.0], [77.4, 51.0], [77.5, 51.0], [77.6, 51.0], [77.7, 51.0], [77.8, 51.0], [77.9, 51.0], [78.0, 51.0], [78.1, 51.0], [78.2, 51.0], [78.3, 51.0], [78.4, 51.0], [78.5, 51.0], [78.6, 51.0], [78.7, 51.0], [78.8, 51.0], [78.9, 51.0], [79.0, 52.0], [79.1, 52.0], [79.2, 52.0], [79.3, 52.0], [79.4, 52.0], [79.5, 52.0], [79.6, 52.0], [79.7, 52.0], [79.8, 52.0], [79.9, 52.0], [80.0, 52.0], [80.1, 52.0], [80.2, 52.0], [80.3, 52.0], [80.4, 52.0], [80.5, 52.0], [80.6, 52.0], [80.7, 52.0], [80.8, 52.0], [80.9, 52.0], [81.0, 52.0], [81.1, 52.0], [81.2, 52.0], [81.3, 52.0], [81.4, 52.0], [81.5, 52.0], [81.6, 52.0], [81.7, 52.0], [81.8, 52.0], [81.9, 52.0], [82.0, 53.0], [82.1, 53.0], [82.2, 53.0], [82.3, 53.0], [82.4, 53.0], [82.5, 53.0], [82.6, 53.0], [82.7, 53.0], [82.8, 53.0], [82.9, 53.0], [83.0, 53.0], [83.1, 53.0], [83.2, 53.0], [83.3, 53.0], [83.4, 53.0], [83.5, 53.0], [83.6, 53.0], [83.7, 53.0], [83.8, 53.0], [83.9, 53.0], [84.0, 53.0], [84.1, 53.0], [84.2, 53.0], [84.3, 53.0], [84.4, 53.0], [84.5, 54.0], [84.6, 54.0], [84.7, 54.0], [84.8, 54.0], [84.9, 54.0], [85.0, 54.0], [85.1, 54.0], [85.2, 54.0], [85.3, 54.0], [85.4, 54.0], [85.5, 54.0], [85.6, 54.0], [85.7, 54.0], [85.8, 54.0], [85.9, 54.0], [86.0, 54.0], [86.1, 54.0], [86.2, 54.0], [86.3, 54.0], [86.4, 55.0], [86.5, 55.0], [86.6, 55.0], [86.7, 55.0], [86.8, 55.0], [86.9, 55.0], [87.0, 55.0], [87.1, 55.0], [87.2, 55.0], [87.3, 55.0], [87.4, 55.0], [87.5, 55.0], [87.6, 55.0], [87.7, 55.0], [87.8, 55.0], [87.9, 55.0], [88.0, 55.0], [88.1, 55.0], [88.2, 56.0], [88.3, 56.0], [88.4, 56.0], [88.5, 56.0], [88.6, 56.0], [88.7, 56.0], [88.8, 56.0], [88.9, 56.0], [89.0, 56.0], [89.1, 57.0], [89.2, 57.0], [89.3, 57.0], [89.4, 57.0], [89.5, 57.0], [89.6, 57.0], [89.7, 57.0], [89.8, 57.0], [89.9, 57.0], [90.0, 57.0], [90.1, 57.0], [90.2, 58.0], [90.3, 58.0], [90.4, 58.0], [90.5, 58.0], [90.6, 58.0], [90.7, 58.0], [90.8, 58.0], [90.9, 58.0], [91.0, 58.0], [91.1, 59.0], [91.2, 59.0], [91.3, 59.0], [91.4, 59.0], [91.5, 59.0], [91.6, 59.0], [91.7, 59.0], [91.8, 59.0], [91.9, 60.0], [92.0, 60.0], [92.1, 60.0], [92.2, 60.0], [92.3, 60.0], [92.4, 60.0], [92.5, 60.0], [92.6, 60.0], [92.7, 60.0], [92.8, 61.0], [92.9, 61.0], [93.0, 61.0], [93.1, 61.0], [93.2, 62.0], [93.3, 62.0], [93.4, 62.0], [93.5, 62.0], [93.6, 62.0], [93.7, 62.0], [93.8, 63.0], [93.9, 63.0], [94.0, 63.0], [94.1, 64.0], [94.2, 64.0], [94.3, 64.0], [94.4, 64.0], [94.5, 64.0], [94.6, 65.0], [94.7, 65.0], [94.8, 66.0], [94.9, 67.0], [95.0, 68.0], [95.1, 69.0], [95.2, 70.0], [95.3, 72.0], [95.4, 74.0], [95.5, 76.0], [95.6, 86.0], [95.7, 102.0], [95.8, 140.0], [95.9, 147.0], [96.0, 149.0], [96.1, 151.0], [96.2, 154.0], [96.3, 156.0], [96.4, 159.0], [96.5, 163.0], [96.6, 166.0], [96.7, 175.0], [96.8, 178.0], [96.9, 179.0], [97.0, 181.0], [97.1, 183.0], [97.2, 184.0], [97.3, 186.0], [97.4, 187.0], [97.5, 188.0], [97.6, 191.0], [97.7, 192.0], [97.8, 194.0], [97.9, 195.0], [98.0, 195.0], [98.1, 197.0], [98.2, 198.0], [98.3, 201.0], [98.4, 206.0], [98.5, 211.0], [98.6, 215.0], [98.7, 217.0], [98.8, 222.0], [98.9, 223.0], [99.0, 225.0], [99.1, 227.0], [99.2, 231.0], [99.3, 232.0], [99.4, 233.0], [99.5, 235.0], [99.6, 239.0], [99.7, 241.0], [99.8, 244.0], [99.9, 248.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 13.0, "minX": 0.0, "maxY": 4987.0, "series": [{"data": [[0.0, 4987.0], [100.0, 13.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 287.0], [300.0, 740.0], [600.0, 509.0], [700.0, 363.0], [100.0, 387.0], [200.0, 1029.0], [400.0, 485.0], [800.0, 184.0], [500.0, 1016.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 4784.0], [100.0, 129.0], [200.0, 87.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2055.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 12945.0, "series": [{"data": [[0.0, 12945.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2055.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 6.5, "minX": 1.66901736E12, "maxY": 525.6898000000016, "series": [{"data": [[1.66901742E12, 525.6898000000016]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.66901742E12, 117.85360000000006]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.66901736E12, 66.35877403846145], [1.66901742E12, 6.5]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901742E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.861111111111112, "minX": 1.0, "maxY": 807.25, "series": [{"data": [[4.0, 47.0], [6.0, 58.0], [8.0, 63.5], [9.0, 67.0], [10.0, 68.0], [11.0, 67.0], [12.0, 59.666666666666664], [13.0, 59.0], [17.0, 48.0], [20.0, 58.5], [21.0, 49.0], [22.0, 50.5], [24.0, 12.0], [25.0, 50.0], [26.0, 55.66666666666667], [27.0, 18.75], [28.0, 51.5], [29.0, 55.333333333333336], [30.0, 51.0], [31.0, 54.125], [32.0, 53.16666666666667], [33.0, 51.66666666666667], [34.0, 46.315789473684205], [35.0, 51.666666666666664], [37.0, 51.0], [36.0, 42.5], [38.0, 50.63636363636363], [39.0, 54.78571428571429], [40.0, 49.375], [41.0, 61.25], [42.0, 51.8235294117647], [43.0, 50.0], [45.0, 54.470588235294116], [44.0, 59.15384615384615], [46.0, 52.266666666666666], [47.0, 46.0], [49.0, 51.650000000000006], [48.0, 54.8], [51.0, 52.4], [50.0, 52.92307692307693], [53.0, 53.095238095238095], [52.0, 49.63157894736842], [54.0, 50.52631578947369], [55.0, 50.60869565217393], [57.0, 51.599999999999994], [56.0, 54.46153846153845], [59.0, 52.484848484848484], [58.0, 53.90625000000001], [61.0, 53.99999999999999], [60.0, 50.8780487804878], [63.0, 52.72972972972973], [62.0, 53.71794871794871], [67.0, 53.63333333333335], [66.0, 52.62962962962963], [65.0, 52.86538461538462], [64.0, 54.300000000000004], [71.0, 54.44186046511628], [70.0, 56.57142857142857], [68.0, 56.52380952380954], [69.0, 54.65625], [75.0, 57.166666666666664], [74.0, 56.77142857142857], [73.0, 57.64705882352942], [72.0, 56.925000000000004], [79.0, 57.32258064516128], [78.0, 56.516666666666666], [77.0, 58.34693877551018], [76.0, 56.491525423728824], [83.0, 58.45454545454546], [81.0, 57.79104477611941], [80.0, 56.48], [82.0, 56.276595744680854], [87.0, 57.918032786885256], [84.0, 57.756410256410255], [85.0, 56.88679245283018], [86.0, 59.40000000000002], [88.0, 59.15151515151515], [90.0, 61.10204081632652], [91.0, 60.64], [89.0, 59.53448275862069], [92.0, 62.14925373134329], [94.0, 60.67391304347826], [93.0, 60.696969696969695], [95.0, 62.183333333333316], [98.0, 60.718749999999986], [97.0, 60.948717948717956], [96.0, 61.57142857142858], [99.0, 63.31249999999999], [102.0, 62.04687500000002], [101.0, 61.5609756097561], [103.0, 60.350000000000016], [100.0, 61.3], [106.0, 59.60869565217392], [105.0, 59.88461538461538], [104.0, 61.47058823529412], [107.0, 61.054054054054056], [110.0, 61.28], [108.0, 61.03030303030303], [109.0, 63.60975609756099], [111.0, 60.18181818181817], [115.0, 61.40540540540541], [112.0, 60.34782608695651], [113.0, 59.62962962962963], [114.0, 60.25714285714285], [118.0, 60.46153846153846], [119.0, 61.380952380952394], [116.0, 60.32000000000001], [117.0, 62.250000000000014], [122.0, 59.00000000000001], [120.0, 61.54166666666668], [123.0, 63.541666666666664], [121.0, 63.03448275862069], [126.0, 61.857142857142854], [124.0, 62.514285714285705], [127.0, 59.69565217391304], [125.0, 63.03448275862069], [135.0, 63.93333333333333], [134.0, 63.058823529411754], [133.0, 58.95652173913044], [131.0, 60.44444444444445], [130.0, 63.30769230769231], [129.0, 63.399999999999984], [128.0, 60.52631578947369], [132.0, 63.714285714285715], [143.0, 65.18181818181819], [142.0, 64.0], [141.0, 58.78787878787878], [139.0, 59.0], [138.0, 63.68749999999999], [140.0, 62.7], [137.0, 61.25], [136.0, 60.964285714285715], [145.0, 65.62499999999999], [144.0, 60.7142857142857], [151.0, 61.904761904761905], [148.0, 65.54545454545455], [147.0, 67.0], [146.0, 63.78260869565217], [149.0, 62.99999999999998], [150.0, 67.72727272727273], [158.0, 63.590909090909086], [156.0, 67.42857142857144], [159.0, 65.16666666666667], [155.0, 61.6875], [152.0, 62.0], [153.0, 61.18181818181818], [154.0, 66.91666666666667], [157.0, 58.375], [166.0, 63.230769230769226], [165.0, 62.363636363636374], [164.0, 60.07142857142857], [161.0, 65.52631578947368], [162.0, 64.56249999999999], [160.0, 60.909090909090914], [167.0, 58.625], [163.0, 68.1], [175.0, 64.29411764705883], [173.0, 69.14285714285714], [170.0, 58.199999999999996], [172.0, 59.400000000000006], [169.0, 67.23076923076923], [174.0, 62.727272727272734], [168.0, 65.19999999999999], [171.0, 67.63636363636364], [179.0, 68.625], [178.0, 65.33333333333331], [183.0, 68.125], [177.0, 73.85714285714285], [176.0, 64.72222222222221], [181.0, 70.85714285714285], [182.0, 72.25], [180.0, 66.0], [189.0, 68.6], [188.0, 60.4], [187.0, 62.4], [186.0, 58.2], [184.0, 60.684210526315795], [191.0, 63.22222222222222], [190.0, 73.66666666666667], [185.0, 76.5], [194.0, 62.92307692307692], [193.0, 63.437499999999986], [199.0, 71.06666666666668], [197.0, 70.83333333333333], [195.0, 65.69230769230768], [198.0, 65.33333333333334], [196.0, 60.800000000000004], [192.0, 56.73076923076924], [207.0, 66.13333333333333], [205.0, 67.37499999999999], [203.0, 68.33333333333331], [202.0, 67.99999999999999], [201.0, 69.83333333333333], [200.0, 63.0], [206.0, 67.0], [204.0, 66.52], [215.0, 73.625], [213.0, 72.33333333333333], [212.0, 68.9090909090909], [210.0, 67.46153846153847], [208.0, 70.46666666666665], [214.0, 65.4], [211.0, 63.78947368421053], [209.0, 67.21428571428574], [223.0, 66.10000000000001], [222.0, 68.16666666666666], [221.0, 72.81818181818181], [220.0, 64.55555555555556], [218.0, 72.28571428571429], [217.0, 65.66666666666667], [216.0, 67.25], [219.0, 65.42857142857143], [230.0, 68.77777777777777], [228.0, 68.66666666666667], [227.0, 68.55555555555556], [225.0, 66.55555555555556], [224.0, 69.75], [231.0, 72.5], [229.0, 65.4], [226.0, 70.83333333333334], [239.0, 72.0], [238.0, 71.6], [237.0, 68.0], [236.0, 72.66666666666667], [235.0, 67.0], [234.0, 71.5], [233.0, 75.5], [232.0, 58.33333333333333], [241.0, 92.0], [240.0, 82.0], [247.0, 77.0], [246.0, 68.8], [244.0, 84.33333333333333], [243.0, 75.33333333333333], [245.0, 71.0], [255.0, 75.25], [252.0, 76.25], [248.0, 73.4], [254.0, 68.0], [251.0, 61.0], [250.0, 69.0], [249.0, 66.0], [253.0, 85.0], [259.0, 72.0], [270.0, 75.75], [271.0, 67.5], [269.0, 65.25], [265.0, 68.5], [264.0, 91.0], [262.0, 63.0], [261.0, 66.0], [257.0, 81.0], [256.0, 65.83333333333333], [286.0, 88.0], [272.0, 74.5], [287.0, 92.16666666666667], [285.0, 77.5], [275.0, 68.0], [274.0, 95.0], [273.0, 75.0], [283.0, 71.0], [282.0, 78.0], [281.0, 92.0], [280.0, 62.0], [279.0, 77.0], [278.0, 79.0], [277.0, 76.0], [290.0, 69.0], [302.0, 84.0], [303.0, 79.5], [297.0, 79.0], [296.0, 98.0], [301.0, 84.0], [291.0, 77.33333333333333], [299.0, 85.0], [298.0, 76.0], [295.0, 96.0], [292.0, 81.66666666666667], [294.0, 73.5], [289.0, 102.0], [288.0, 87.0], [318.0, 72.0], [317.0, 74.0], [316.0, 75.0], [307.0, 93.0], [306.0, 85.0], [305.0, 81.2], [304.0, 79.5], [319.0, 94.33333333333333], [315.0, 80.33333333333333], [314.0, 78.0], [313.0, 77.33333333333333], [312.0, 82.83333333333334], [311.0, 84.0], [310.0, 85.83333333333334], [309.0, 81.8], [308.0, 92.0], [334.0, 84.33333333333333], [331.0, 90.5], [330.0, 79.0], [329.0, 86.0], [326.0, 74.66666666666667], [323.0, 85.5], [321.0, 81.5]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[117.85319999999975, 60.647400000000076]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[3.0, 222.5], [5.0, 221.0], [8.0, 214.33333333333334], [11.0, 218.66666666666666], [14.0, 225.66666666666666], [17.0, 235.0], [19.0, 223.0], [20.0, 260.0], [22.0, 237.0], [23.0, 266.5], [26.0, 205.5], [27.0, 18.0], [28.0, 17.0], [29.0, 207.5], [30.0, 18.0], [31.0, 20.0], [32.0, 20.0], [33.0, 279.6666666666667], [34.0, 20.0], [35.0, 291.0], [37.0, 19.0], [36.0, 21.0], [38.0, 18.666666666666668], [39.0, 303.0], [40.0, 350.0], [43.0, 309.6666666666667], [44.0, 165.0], [47.0, 307.0], [48.0, 277.0], [51.0, 194.5], [50.0, 312.0], [52.0, 169.0], [53.0, 366.0], [54.0, 24.0], [55.0, 172.0], [57.0, 71.0], [56.0, 245.5], [59.0, 91.0], [61.0, 132.6], [60.0, 26.0], [62.0, 25.0], [63.0, 331.0], [67.0, 155.0], [65.0, 273.0], [64.0, 149.0], [71.0, 158.0], [70.0, 162.0], [69.0, 168.0], [75.0, 71.0], [73.0, 187.0], [72.0, 171.5], [79.0, 81.33333333333333], [78.0, 205.75], [76.0, 107.33333333333334], [77.0, 232.5], [82.0, 37.0], [80.0, 57.0], [83.0, 64.5], [81.0, 101.66666666666667], [86.0, 34.5], [85.0, 48.5], [84.0, 51.0], [87.0, 187.0], [91.0, 62.8], [90.0, 97.66666666666666], [89.0, 97.75], [88.0, 97.0], [94.0, 54.75], [92.0, 43.0], [93.0, 91.5], [95.0, 175.0], [97.0, 140.0], [96.0, 72.4], [98.0, 121.66666666666666], [103.0, 127.5], [102.0, 52.0], [101.0, 93.5], [100.0, 160.0], [106.0, 44.0], [105.0, 57.0], [104.0, 219.0], [107.0, 230.0], [111.0, 113.5], [110.0, 128.0], [109.0, 62.5], [108.0, 50.0], [115.0, 107.8], [114.0, 50.0], [113.0, 162.0], [112.0, 44.5], [118.0, 135.8], [117.0, 72.66666666666667], [116.0, 232.75], [120.0, 67.0], [123.0, 187.4], [121.0, 144.5], [126.0, 85.75], [124.0, 94.5], [125.0, 62.0], [127.0, 286.3333333333333], [135.0, 70.66666666666667], [134.0, 166.66666666666666], [133.0, 76.0], [132.0, 157.55555555555554], [130.0, 91.66666666666667], [129.0, 123.5], [128.0, 76.6], [131.0, 114.0], [137.0, 98.33333333333333], [142.0, 67.0], [141.0, 162.16666666666666], [139.0, 63.0], [138.0, 142.2], [136.0, 179.75], [140.0, 77.33333333333333], [143.0, 226.5], [150.0, 153.0], [149.0, 144.0], [148.0, 94.33333333333333], [146.0, 127.8], [145.0, 72.0], [144.0, 76.33333333333333], [147.0, 194.0], [151.0, 71.0], [155.0, 89.0], [154.0, 235.0], [153.0, 247.33333333333334], [152.0, 165.5], [157.0, 278.6666666666667], [167.0, 227.66666666666666], [166.0, 112.4], [164.0, 298.3333333333333], [161.0, 337.0], [160.0, 324.6666666666667], [172.0, 83.5], [170.0, 132.0], [169.0, 151.5], [168.0, 218.5], [173.0, 230.0], [183.0, 95.0], [182.0, 86.0], [181.0, 97.0], [180.0, 90.0], [179.0, 93.0], [178.0, 263.6], [177.0, 96.0], [176.0, 240.0], [190.0, 165.75], [188.0, 217.5], [187.0, 219.33333333333331], [185.0, 214.57142857142856], [192.0, 86.6], [199.0, 151.75], [196.0, 243.83333333333334], [194.0, 84.0], [193.0, 150.2], [198.0, 306.5], [204.0, 205.16666666666669], [202.0, 179.0], [201.0, 95.0], [207.0, 322.6666666666667], [215.0, 106.0], [214.0, 217.5], [213.0, 138.66666666666666], [211.0, 255.0], [210.0, 332.5], [222.0, 244.0], [221.0, 240.33333333333334], [219.0, 101.0], [218.0, 85.5], [223.0, 267.0], [217.0, 269.0], [216.0, 330.0], [225.0, 97.66666666666667], [224.0, 88.0], [229.0, 288.0], [227.0, 246.0], [226.0, 332.0], [239.0, 260.0], [237.0, 362.0], [236.0, 383.0], [233.0, 258.0], [232.0, 335.0], [247.0, 179.25], [246.0, 177.5], [244.0, 245.25], [243.0, 86.0], [242.0, 264.5], [241.0, 264.0], [240.0, 257.0], [253.0, 180.0], [252.0, 143.5], [251.0, 273.0], [250.0, 81.5], [249.0, 92.0], [248.0, 143.33333333333334], [255.0, 106.0], [254.0, 174.33333333333331], [258.0, 190.0], [263.0, 129.33333333333334], [256.0, 156.16666666666666], [262.0, 219.0], [260.0, 227.0], [259.0, 88.0], [257.0, 243.5], [269.0, 200.5], [270.0, 295.0], [264.0, 269.3333333333333], [271.0, 361.0], [267.0, 222.0], [265.0, 199.0], [268.0, 204.83333333333334], [274.0, 187.5], [281.0, 228.75], [283.0, 259.625], [282.0, 236.7333333333333], [280.0, 242.33333333333334], [279.0, 232.55555555555554], [278.0, 188.66666666666666], [277.0, 202.0], [276.0, 225.0], [275.0, 210.33333333333334], [284.0, 243.92857142857144], [286.0, 258.7142857142857], [287.0, 270.25], [285.0, 291.3333333333333], [273.0, 193.0], [272.0, 204.8], [291.0, 288.49999999999994], [301.0, 167.66666666666666], [302.0, 292.75], [297.0, 252.2], [296.0, 277.5], [303.0, 355.0], [300.0, 267.42857142857144], [290.0, 205.33333333333334], [288.0, 226.77777777777777], [289.0, 251.33333333333334], [299.0, 270.5], [298.0, 146.0], [295.0, 273.0], [294.0, 276.33333333333337], [293.0, 246.7142857142857], [292.0, 249.625], [317.0, 235.11111111111111], [319.0, 178.1904761904762], [316.0, 237.11111111111114], [314.0, 210.5384615384615], [318.0, 246.5], [315.0, 248.33333333333331], [313.0, 275.3333333333333], [312.0, 327.5], [309.0, 211.57142857142856], [308.0, 283.0], [311.0, 359.5], [304.0, 271.5], [310.0, 281.5], [305.0, 204.0], [306.0, 262.0], [307.0, 201.33333333333334], [334.0, 291.5238095238096], [335.0, 310.4117647058824], [333.0, 311.6428571428571], [331.0, 300.66666666666674], [330.0, 317.6666666666667], [329.0, 282.36842105263156], [328.0, 248.87500000000003], [332.0, 297.0], [324.0, 285.87500000000006], [320.0, 191.74999999999997], [327.0, 239.21052631578945], [326.0, 291.55555555555554], [321.0, 189.5], [325.0, 226.7692307692308], [323.0, 216.53846153846155], [322.0, 224.58333333333331], [350.0, 308.4166666666667], [351.0, 292.0769230769231], [348.0, 293.6176470588236], [346.0, 284.66666666666674], [347.0, 306.4473684210526], [345.0, 298.99999999999994], [344.0, 288.2962962962963], [349.0, 311.08108108108115], [343.0, 316.66666666666674], [338.0, 322.8636363636364], [339.0, 301.1818181818183], [337.0, 292.16666666666663], [336.0, 313.17391304347825], [341.0, 296.3125], [342.0, 300.17647058823536], [340.0, 313.7999999999999], [353.0, 338.2631578947368], [358.0, 296.1111111111111], [356.0, 239.8181818181818], [357.0, 423.0], [354.0, 327.16666666666663], [352.0, 339.0], [359.0, 357.0], [355.0, 339.86666666666673], [366.0, 282.5], [364.0, 241.5], [362.0, 325.3333333333333], [363.0, 294.0], [361.0, 243.25], [367.0, 449.37500000000006], [360.0, 415.0], [382.0, 321.0], [368.0, 349.75], [369.0, 458.0], [371.0, 529.0], [370.0, 494.0], [381.0, 366.2], [380.0, 383.83333333333337], [379.0, 336.0], [378.0, 352.5], [377.0, 492.25], [376.0, 381.0], [375.0, 475.0], [374.0, 399.0], [373.0, 345.0], [372.0, 527.0], [398.0, 511.57142857142856], [384.0, 348.25], [399.0, 449.0], [396.0, 502.37499999999994], [397.0, 469.0], [387.0, 466.0], [386.0, 499.0], [385.0, 396.0], [395.0, 467.5], [394.0, 488.2857142857143], [393.0, 486.7142857142857], [392.0, 457.4], [390.0, 510.5], [389.0, 432.0], [391.0, 507.75], [412.0, 364.3], [409.0, 431.75], [408.0, 348.6], [407.0, 386.5], [401.0, 606.0], [400.0, 517.3333333333334], [403.0, 426.0], [402.0, 508.0], [406.0, 400.0], [405.0, 451.0], [404.0, 460.0], [414.0, 403.3076923076923], [413.0, 432.66666666666663], [410.0, 333.8333333333333], [411.0, 473.8], [415.0, 389.66666666666663], [430.0, 426.54545454545445], [431.0, 450.00000000000006], [428.0, 367.6666666666667], [429.0, 491.75], [419.0, 423.0], [418.0, 332.45454545454544], [416.0, 336.18181818181824], [417.0, 366.2857142857143], [427.0, 491.42857142857144], [426.0, 368.5], [425.0, 513.125], [424.0, 514.6153846153846], [423.0, 427.3846153846154], [422.0, 478.90000000000003], [421.0, 333.3333333333333], [420.0, 380.08333333333326], [434.0, 490.5], [437.0, 421.99999999999994], [436.0, 405.2], [435.0, 441.2666666666667], [445.0, 474.1818181818182], [444.0, 447.3333333333333], [447.0, 455.5714285714286], [446.0, 458.2857142857143], [433.0, 457.46153846153845], [432.0, 313.7857142857143], [439.0, 430.44444444444446], [438.0, 484.5], [443.0, 451.15384615384613], [442.0, 418.61538461538464], [441.0, 477.89473684210526], [440.0, 543.6999999999999], [460.0, 234.75], [449.0, 338.0], [450.0, 287.8], [451.0, 362.0], [448.0, 363.1428571428571], [455.0, 308.6666666666667], [453.0, 338.8], [452.0, 278.2], [454.0, 252.16666666666666], [463.0, 399.25], [456.0, 213.8], [462.0, 219.4], [461.0, 468.85714285714283], [459.0, 247.5], [458.0, 479.25], [457.0, 304.57142857142856], [466.0, 283.16666666666663], [473.0, 378.3333333333333], [476.0, 403.42857142857144], [467.0, 417.2], [477.0, 206.0], [479.0, 443.0], [472.0, 388.5], [478.0, 504.0], [474.0, 370.2], [475.0, 187.0], [471.0, 299.0], [470.0, 412.5], [469.0, 336.0], [468.0, 289.2857142857143], [465.0, 263.6], [464.0, 374.6666666666667], [492.0, 542.0], [494.0, 403.0], [495.0, 377.0], [493.0, 516.8], [490.0, 612.0], [489.0, 530.5], [487.0, 564.0], [480.0, 572.0], [483.0, 508.5], [482.0, 528.0], [486.0, 606.0], [485.0, 606.0], [510.0, 497.6], [498.0, 416.0], [499.0, 442.3333333333333], [497.0, 362.4], [496.0, 404.3333333333333], [502.0, 552.0], [503.0, 612.0], [500.0, 576.3333333333334], [511.0, 380.5], [504.0, 605.0], [509.0, 411.1666666666667], [508.0, 384.75], [507.0, 542.6666666666666], [506.0, 532.0], [505.0, 603.0], [519.0, 257.0], [527.0, 573.2222222222222], [514.0, 480.85714285714283], [516.0, 518.3333333333334], [515.0, 552.3333333333334], [518.0, 573.0], [517.0, 623.5], [513.0, 453.1666666666667], [512.0, 455.8], [529.0, 419.0], [534.0, 623.0], [533.0, 585.0], [532.0, 568.5], [530.0, 554.0], [531.0, 558.5], [543.0, 579.0], [528.0, 599.4], [542.0, 603.75], [541.0, 568.0], [540.0, 583.5], [539.0, 607.0], [538.0, 577.0], [537.0, 632.5], [536.0, 552.0], [526.0, 554.1428571428571], [525.0, 554.3636363636364], [524.0, 559.4545454545456], [523.0, 470.6666666666667], [522.0, 511.8333333333333], [521.0, 510.77777777777777], [520.0, 504.19999999999993], [572.0, 517.0], [558.0, 257.0], [561.0, 402.0], [563.0, 494.0], [564.0, 677.0], [562.0, 590.5555555555555], [567.0, 473.0], [565.0, 370.0], [560.0, 336.0], [559.0, 252.5], [544.0, 615.0], [547.0, 621.0], [546.0, 666.6666666666666], [545.0, 563.0], [551.0, 628.5], [549.0, 654.5], [548.0, 585.6666666666666], [568.0, 648.0], [569.0, 625.75], [571.0, 452.0], [570.0, 492.0], [573.0, 342.0], [575.0, 226.0], [574.0, 493.0], [557.0, 328.0], [556.0, 252.0], [555.0, 352.125], [554.0, 253.5], [553.0, 530.5], [552.0, 484.0], [582.0, 521.3333333333334], [588.0, 461.75], [590.0, 478.66666666666663], [589.0, 684.0], [591.0, 502.16666666666663], [577.0, 668.75], [576.0, 597.5], [579.0, 555.375], [578.0, 483.5], [587.0, 567.0], [586.0, 271.0], [585.0, 546.6666666666666], [584.0, 424.0], [583.0, 414.8], [601.0, 387.2], [600.0, 463.3333333333333], [603.0, 434.0], [602.0, 460.625], [605.0, 427.0], [604.0, 443.1666666666667], [607.0, 524.6666666666666], [593.0, 585.5], [592.0, 567.2857142857142], [595.0, 405.0], [594.0, 626.0], [597.0, 418.0], [596.0, 471.0], [599.0, 443.1666666666667], [598.0, 512.5], [606.0, 368.0], [581.0, 443.5], [580.0, 426.0], [613.0, 398.75], [617.0, 519.75], [616.0, 396.6206896551724], [614.0, 425.6666666666667], [615.0, 379.25], [633.0, 394.55555555555554], [632.0, 413.6], [612.0, 551.2222222222222], [611.0, 507.5], [623.0, 401.3333333333333], [608.0, 501.6666666666667], [610.0, 563.6666666666666], [609.0, 530.2857142857142], [622.0, 471.5], [620.0, 436.6666666666667], [621.0, 406.7142857142857], [619.0, 488.91666666666663], [618.0, 466.37500000000006], [638.0, 455.875], [637.0, 391.5833333333333], [639.0, 436.90000000000003], [625.0, 402.4444444444444], [624.0, 367.2857142857143], [628.0, 405.59999999999997], [627.0, 470.0], [626.0, 404.19999999999993], [630.0, 304.0], [631.0, 439.1111111111111], [629.0, 396.5], [636.0, 378.2], [635.0, 320.2857142857143], [634.0, 435.27272727272725], [643.0, 494.30769230769226], [653.0, 574.1578947368422], [654.0, 591.5185185185185], [640.0, 551.7857142857143], [655.0, 614.625], [642.0, 454.0], [641.0, 446.3636363636363], [644.0, 569.2380952380953], [652.0, 637.6206896551723], [651.0, 528.5333333333333], [650.0, 588.7812500000001], [649.0, 585.2727272727271], [648.0, 542.9210526315788], [647.0, 577.0857142857142], [656.0, 591.6666666666666], [670.0, 771.4], [669.0, 788.3684210526316], [668.0, 774.6], [667.0, 773.8], [666.0, 753.6], [671.0, 789.5], [657.0, 642.7333333333332], [659.0, 647.625], [658.0, 631.4666666666666], [661.0, 609.8000000000001], [660.0, 679.6], [663.0, 677.8888888888889], [662.0, 718.8125], [665.0, 704.0], [664.0, 670.9166666666667], [646.0, 573.1785714285713], [645.0, 525.44], [699.0, 632.0], [703.0, 637.0], [696.0, 539.25], [679.0, 806.0], [678.0, 752.5], [677.0, 807.25], [676.0, 768.5], [675.0, 744.8333333333333], [672.0, 785.8571428571428], [674.0, 749.0], [673.0, 786.1666666666666], [687.0, 792.0], [686.0, 796.0], [685.0, 789.6666666666666], [682.0, 772.2], [681.0, 730.5], [680.0, 802.0], [698.0, 636.0], [697.0, 634.5], [694.0, 649.6666666666666], [695.0, 797.0], [693.0, 462.5], [691.0, 623.0], [688.0, 801.0], [692.0, 746.6666666666666], [702.0, 584.0], [701.0, 629.5], [700.0, 630.0], [708.0, 613.3333333333334], [719.0, 637.4], [714.0, 549.6], [711.0, 583.0], [729.0, 717.5], [728.0, 752.5], [730.0, 651.5], [727.0, 675.0], [726.0, 599.8], [725.0, 664.0], [724.0, 658.6666666666666], [723.0, 669.5714285714286], [722.0, 691.2857142857143], [721.0, 696.3333333333333], [720.0, 658.0], [735.0, 721.75], [734.0, 729.0], [732.0, 726.4285714285714], [731.0, 737.2], [733.0, 724.7777777777778], [710.0, 518.6666666666666], [709.0, 586.0], [707.0, 539.4], [706.0, 520.4], [705.0, 555.5], [704.0, 584.3333333333334], [718.0, 689.2], [717.0, 653.3333333333334], [715.0, 605.25], [716.0, 744.2], [713.0, 620.5454545454545], [712.0, 566.6666666666666], [760.0, 560.0], [742.0, 630.6666666666666], [743.0, 606.4285714285714], [739.0, 650.75], [740.0, 630.1666666666667], [741.0, 692.3333333333334], [738.0, 678.8571428571429], [737.0, 704.5714285714286], [736.0, 717.1428571428571], [750.0, 692.0], [749.0, 671.5], [747.0, 658.0], [745.0, 693.3333333333334], [746.0, 680.0], [744.0, 680.3333333333334], [758.0, 560.0], [757.0, 686.0], [759.0, 632.0], [756.0, 571.6], [755.0, 574.0], [753.0, 656.3333333333334], [767.0, 652.0], [766.0, 640.3333333333334], [765.0, 656.6666666666666], [764.0, 652.0], [762.0, 684.0], [761.0, 656.0], [795.0, 627.5], [799.0, 625.3333333333334], [786.0, 594.8], [787.0, 630.4285714285713], [789.0, 635.2727272727273], [791.0, 634.0], [790.0, 616.3333333333334], [785.0, 600.8333333333334], [784.0, 561.0], [783.0, 515.6666666666666], [782.0, 626.5], [781.0, 501.0], [780.0, 644.0], [776.0, 636.0], [798.0, 636.75], [797.0, 605.5], [796.0, 641.2142857142858], [794.0, 615.0], [793.0, 630.5], [774.0, 652.0], [773.0, 669.0], [772.0, 631.0], [771.0, 679.0], [770.0, 653.5], [769.0, 660.0], [768.0, 661.0], [828.0, 528.0], [806.0, 604.5], [807.0, 593.6], [825.0, 564.25], [824.0, 574.4], [827.0, 550.5], [826.0, 533.0], [805.0, 595.8], [804.0, 575.7142857142857], [803.0, 605.5], [802.0, 597.8], [815.0, 573.6666666666666], [801.0, 628.0], [800.0, 632.5], [814.0, 554.0], [813.0, 603.0], [812.0, 613.3333333333334], [811.0, 608.4], [810.0, 632.0], [809.0, 628.4], [808.0, 626.0], [831.0, 556.25], [816.0, 593.6666666666666], [817.0, 550.25], [819.0, 592.6666666666666], [818.0, 590.25], [821.0, 567.75], [820.0, 564.7142857142857], [823.0, 578.8], [822.0, 547.0], [830.0, 535.75], [829.0, 550.0], [836.0, 557.1666666666666], [843.0, 560.3333333333333], [842.0, 547.8571428571428], [841.0, 575.6], [840.0, 583.5], [839.0, 560.6666666666666], [857.0, 563.6666666666666], [856.0, 588.0], [859.0, 577.0], [858.0, 560.0], [861.0, 534.6], [860.0, 537.0], [863.0, 496.5], [849.0, 560.25], [848.0, 524.5], [852.0, 583.5], [850.0, 571.25], [855.0, 544.5], [854.0, 592.0], [862.0, 550.1666666666667], [838.0, 555.0], [837.0, 549.5], [835.0, 551.0], [834.0, 551.2], [833.0, 564.8333333333334], [832.0, 543.3333333333334], [847.0, 574.0], [846.0, 571.5], [845.0, 586.1666666666666], [844.0, 567.0], [870.0, 540.0], [865.0, 531.0], [867.0, 510.0], [866.0, 529.0], [869.0, 489.5], [868.0, 548.0], [877.0, 514.0], [876.0, 523.0], [879.0, 543.0], [878.0, 568.5], [875.0, 558.0], [874.0, 556.0], [873.0, 528.0], [872.0, 552.0], [871.0, 523.0], [888.0, 537.6666666666666], [887.0, 530.3333333333334], [886.0, 508.3333333333333], [885.0, 521.4], [884.0, 539.0], [883.0, 555.0], [882.0, 547.8333333333333], [881.0, 523.6666666666666], [880.0, 531.0], [895.0, 462.0], [894.0, 540.0], [892.0, 548.0], [890.0, 537.5], [889.0, 543.3333333333334], [924.0, 543.0], [927.0, 531.3333333333334], [913.0, 496.0], [912.0, 542.5], [915.0, 474.0], [914.0, 505.6666666666667], [917.0, 524.0], [916.0, 536.0], [926.0, 517.6666666666666], [925.0, 509.0], [923.0, 535.0], [922.0, 497.0], [921.0, 471.0], [920.0, 526.0], [911.0, 487.0], [897.0, 516.0], [896.0, 543.3333333333334], [899.0, 550.0], [898.0, 545.5], [903.0, 550.0], [901.0, 525.0], [910.0, 459.0], [908.0, 526.5], [907.0, 534.0], [906.0, 551.0], [905.0, 513.0], [919.0, 539.0], [918.0, 484.0], [934.0, 519.0], [946.0, 520.0], [929.0, 530.6], [928.0, 514.6666666666666], [949.0, 521.6666666666666], [951.0, 518.0], [948.0, 523.0], [947.0, 528.3333333333334], [945.0, 528.6], [944.0, 520.5], [935.0, 497.0], [952.0, 525.5], [954.0, 523.6666666666667], [953.0, 529.0], [957.0, 517.3333333333334], [956.0, 502.25], [955.0, 505.25], [959.0, 523.9999999999999], [958.0, 522.6666666666666], [933.0, 514.5], [932.0, 548.0], [931.0, 545.0], [930.0, 499.5], [943.0, 521.0], [942.0, 505.6666666666667], [941.0, 518.75], [940.0, 527.5], [939.0, 531.0], [938.0, 522.0], [937.0, 514.5], [936.0, 521.0], [964.0, 524.8571428571429], [970.0, 514.375], [971.0, 517.9999999999999], [973.0, 512.4375], [972.0, 515.3333333333334], [961.0, 520.75], [960.0, 525.0], [975.0, 521.3636363636365], [974.0, 510.4705882352941], [969.0, 513.8888888888889], [968.0, 511.0], [967.0, 506.3333333333333], [985.0, 503.2857142857143], [986.0, 501.25], [989.0, 501.8], [991.0, 508.0], [990.0, 496.0], [987.0, 494.0], [984.0, 514.2857142857143], [976.0, 512.1], [980.0, 517.6250000000002], [981.0, 506.16666666666663], [982.0, 508.3999999999999], [983.0, 516.8], [979.0, 511.58823529411745], [978.0, 509.25], [977.0, 503.5882352941176], [966.0, 509.6363636363637], [965.0, 519.1111111111111], [963.0, 508.25], [962.0, 509.7777777777778], [995.0, 509.0], [994.0, 507.25], [993.0, 502.6666666666667], [992.0, 513.0], [998.0, 516.0], [996.0, 513.0], [1.0, 209.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[525.6887999999988, 424.4881999999997]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 8.625], [3.0, 4.861111111111112], [4.0, 4.966666666666667], [5.0, 6.388888888888889], [6.0, 7.789473684210526], [7.0, 11.714285714285712], [8.0, 25.999999999999996], [9.0, 15.42857142857143], [10.0, 22.0], [11.0, 10.5], [12.0, 14.642857142857142], [13.0, 35.333333333333336], [14.0, 42.0], [15.0, 25.0], [16.0, 38.2], [18.0, 39.25], [19.0, 35.0], [20.0, 39.333333333333336], [21.0, 40.92307692307692], [22.0, 38.714285714285715], [23.0, 35.75], [24.0, 38.78947368421053], [25.0, 38.54545454545455], [26.0, 37.78947368421052], [27.0, 38.61111111111111], [28.0, 37.83333333333334], [29.0, 37.340425531914896], [30.0, 37.11864406779661], [31.0, 39.29545454545453], [33.0, 39.69999999999998], [32.0, 39.62962962962965], [34.0, 40.48214285714285], [35.0, 43.159420289855085], [36.0, 40.62499999999999], [37.0, 42.211267605633815], [39.0, 43.56818181818183], [38.0, 42.27027027027028], [40.0, 42.45312500000001], [41.0, 41.942028985507235], [43.0, 41.21698113207544], [42.0, 43.84905660377358], [45.0, 43.103448275862064], [44.0, 43.50724637681157], [46.0, 43.79761904761902], [47.0, 43.26373626373627], [49.0, 43.77419354838706], [48.0, 42.29069767441862], [51.0, 41.787234042553195], [50.0, 42.940594059405946], [52.0, 44.12499999999997], [53.0, 43.89423076923077], [55.0, 43.26923076923076], [54.0, 43.92233009708737], [57.0, 45.69565217391303], [56.0, 42.97752808988763], [59.0, 46.71250000000001], [58.0, 45.397260273972606], [60.0, 45.822580645161274], [61.0, 46.2857142857143], [63.0, 45.689189189189186], [62.0, 46.02857142857144], [67.0, 46.43478260869565], [64.0, 44.94827586206897], [65.0, 47.75471698113208], [66.0, 47.879999999999995], [71.0, 46.68292682926828], [70.0, 46.66037735849056], [69.0, 49.02857142857143], [68.0, 45.98148148148149], [72.0, 45.97142857142858], [75.0, 49.36538461538462], [73.0, 47.900000000000006], [74.0, 46.97872340425533], [76.0, 48.92063492063492], [79.0, 47.04761904761905], [77.0, 46.6829268292683], [78.0, 48.189189189189186], [81.0, 50.69767441860465], [82.0, 45.64179104477612], [80.0, 50.457142857142856], [83.0, 47.77777777777777], [86.0, 46.761904761904766], [85.0, 48.36842105263158], [84.0, 48.599999999999994], [87.0, 48.00000000000001], [89.0, 48.39285714285715], [90.0, 47.22222222222222], [88.0, 49.142857142857146], [91.0, 50.16666666666667], [93.0, 43.45], [94.0, 44.300000000000004], [92.0, 49.45454545454545], [95.0, 43.99999999999999], [97.0, 43.366666666666674], [99.0, 47.8], [98.0, 42.13333333333333], [96.0, 50.62499999999999], [103.0, 46.09090909090909], [101.0, 48.541666666666686], [100.0, 45.230769230769226], [102.0, 51.33333333333333], [106.0, 50.18181818181819], [105.0, 46.61538461538462], [104.0, 54.97619047619049], [107.0, 46.63636363636364], [111.0, 43.6], [109.0, 49.61538461538461], [108.0, 48.857142857142854], [110.0, 46.666666666666664], [115.0, 42.75], [113.0, 45.0], [112.0, 48.666666666666664], [114.0, 45.0], [116.0, 41.75], [119.0, 45.57142857142857], [118.0, 49.90909090909091], [117.0, 45.400000000000006], [123.0, 43.8], [121.0, 50.0], [120.0, 48.8], [122.0, 62.0], [125.0, 41.5], [127.0, 51.28571428571429], [126.0, 43.0], [124.0, 47.0], [134.0, 43.0], [132.0, 48.28571428571429], [131.0, 48.0], [129.0, 51.5], [128.0, 54.0], [133.0, 50.0], [130.0, 48.5], [140.0, 47.44444444444444], [137.0, 41.5], [136.0, 48.0], [145.0, 55.0], [149.0, 49.909090909090914], [150.0, 52.0], [156.0, 116.09090909090912], [159.0, 40.235294117647065], [158.0, 90.9090909090909], [157.0, 44.0], [155.0, 70.16666666666667], [153.0, 53.33333333333333], [154.0, 43.0], [166.0, 5.0], [165.0, 49.4], [162.0, 22.0], [163.0, 126.0], [160.0, 43.50000000000001], [167.0, 236.0], [161.0, 76.0], [164.0, 51.0], [171.0, 230.0], [172.0, 201.125], [170.0, 243.0], [169.0, 231.0], [174.0, 40.5], [168.0, 233.0], [173.0, 142.5], [175.0, 41.0], [176.0, 41.0], [183.0, 241.0], [182.0, 102.0], [177.0, 34.0], [184.0, 241.5], [187.0, 233.0], [191.0, 238.0], [190.0, 233.0], [189.0, 230.0], [188.0, 223.0], [186.0, 225.5], [185.0, 231.5], [194.0, 37.0], [197.0, 224.5], [196.0, 233.5], [198.0, 59.666666666666664], [195.0, 223.0], [192.0, 213.0], [202.0, 232.5], [206.0, 222.5], [203.0, 222.0], [201.0, 235.0], [213.0, 200.52941176470588], [214.0, 111.66666666666667], [212.0, 214.5], [211.0, 219.0], [210.0, 231.0], [209.0, 221.0], [208.0, 231.0], [218.0, 45.0], [227.0, 136.25], [226.0, 140.72222222222217], [229.0, 192.0], [228.0, 153.60000000000002], [231.0, 197.66666666666666], [230.0, 193.0], [239.0, 176.2413793103448], [238.0, 192.5], [235.0, 133.0], [232.0, 156.5], [234.0, 155.75], [237.0, 163.0], [233.0, 175.0], [246.0, 154.75], [244.0, 177.76923076923077], [242.0, 198.33333333333334], [240.0, 177.0], [241.0, 174.66666666666669], [243.0, 187.5], [1.0, 4.875]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[66.26179999999991, 49.20600000000007]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 998.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 14976.0, "minX": 1.66901736E12, "maxY": 45365.73333333333, "series": [{"data": [[1.66901736E12, 14976.0], [1.66901742E12, 16107.333333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66901736E12, 20217.6], [1.66901742E12, 45365.73333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901742E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 45.75, "minX": 1.66901736E12, "maxY": 424.4881999999997, "series": [{"data": [[1.66901742E12, 60.647400000000076]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901742E12, 424.4881999999997]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901736E12, 49.211538461538524], [1.66901742E12, 45.75]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901742E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 45.75, "minX": 1.66901736E12, "maxY": 424.315599999998, "series": [{"data": [[1.66901742E12, 60.64000000000003]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901742E12, 424.315599999998]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901736E12, 48.93689903846147], [1.66901742E12, 45.75]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901742E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 9.585600000000017, "minX": 1.66901736E12, "maxY": 12.795072115384576, "series": [{"data": [[1.66901742E12, 9.752400000000067]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901742E12, 9.585600000000017]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901736E12, 12.795072115384576], [1.66901742E12, 10.75]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901742E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.66901736E12, "maxY": 853.0, "series": [{"data": [[1.66901736E12, 254.0], [1.66901742E12, 853.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66901736E12, 57.0], [1.66901742E12, 606.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66901736E12, 225.0], [1.66901742E12, 813.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66901736E12, 68.0], [1.66901742E12, 711.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66901736E12, 3.0], [1.66901742E12, 11.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66901736E12, 44.0], [1.66901742E12, 83.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901742E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 207.0, "maxY": 687.0, "series": [{"data": [[776.0, 40.0], [207.0, 248.0], [998.0, 44.0], [1197.0, 687.0], [1158.0, 367.5], [1257.0, 500.0], [1280.0, 44.0], [1289.0, 174.0], [1469.0, 60.0], [1479.0, 44.0], [1498.0, 56.0], [459.0, 67.0], [1933.0, 64.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1933.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 207.0, "maxY": 687.0, "series": [{"data": [[776.0, 40.0], [207.0, 248.0], [998.0, 44.0], [1197.0, 687.0], [1158.0, 367.0], [1257.0, 499.0], [1280.0, 44.0], [1289.0, 173.0], [1469.0, 60.0], [1479.0, 44.0], [1498.0, 56.0], [459.0, 65.0], [1933.0, 64.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1933.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.66901736E12, "maxY": 166.66666666666666, "series": [{"data": [[1.66901736E12, 83.33333333333333], [1.66901742E12, 166.66666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901742E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 83.2, "minX": 1.66901736E12, "maxY": 166.8, "series": [{"data": [[1.66901736E12, 83.2], [1.66901742E12, 166.8]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901742E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.66901736E12, "maxY": 83.33333333333333, "series": [{"data": [[1.66901736E12, 83.2], [1.66901742E12, 0.13333333333333333]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66901742E12, 83.33333333333333]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66901742E12, 83.33333333333333]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901742E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 83.2, "minX": 1.66901736E12, "maxY": 166.8, "series": [{"data": [[1.66901736E12, 83.2], [1.66901742E12, 166.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901742E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

