/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 1407.0, "series": [{"data": [[0.0, 19.0], [0.1, 23.0], [0.2, 25.0], [0.3, 27.0], [0.4, 28.0], [0.5, 29.0], [0.6, 30.0], [0.7, 30.0], [0.8, 31.0], [0.9, 32.0], [1.0, 34.0], [1.1, 34.0], [1.2, 35.0], [1.3, 35.0], [1.4, 35.0], [1.5, 36.0], [1.6, 36.0], [1.7, 36.0], [1.8, 37.0], [1.9, 37.0], [2.0, 38.0], [2.1, 38.0], [2.2, 38.0], [2.3, 38.0], [2.4, 39.0], [2.5, 39.0], [2.6, 39.0], [2.7, 39.0], [2.8, 39.0], [2.9, 39.0], [3.0, 40.0], [3.1, 40.0], [3.2, 40.0], [3.3, 40.0], [3.4, 40.0], [3.5, 40.0], [3.6, 40.0], [3.7, 40.0], [3.8, 41.0], [3.9, 41.0], [4.0, 41.0], [4.1, 41.0], [4.2, 41.0], [4.3, 41.0], [4.4, 41.0], [4.5, 42.0], [4.6, 42.0], [4.7, 42.0], [4.8, 42.0], [4.9, 42.0], [5.0, 42.0], [5.1, 42.0], [5.2, 42.0], [5.3, 42.0], [5.4, 43.0], [5.5, 43.0], [5.6, 43.0], [5.7, 43.0], [5.8, 43.0], [5.9, 43.0], [6.0, 43.0], [6.1, 43.0], [6.2, 43.0], [6.3, 43.0], [6.4, 43.0], [6.5, 43.0], [6.6, 44.0], [6.7, 44.0], [6.8, 44.0], [6.9, 44.0], [7.0, 44.0], [7.1, 44.0], [7.2, 44.0], [7.3, 44.0], [7.4, 44.0], [7.5, 44.0], [7.6, 44.0], [7.7, 44.0], [7.8, 44.0], [7.9, 45.0], [8.0, 45.0], [8.1, 45.0], [8.2, 45.0], [8.3, 45.0], [8.4, 45.0], [8.5, 45.0], [8.6, 45.0], [8.7, 45.0], [8.8, 45.0], [8.9, 45.0], [9.0, 45.0], [9.1, 45.0], [9.2, 45.0], [9.3, 45.0], [9.4, 46.0], [9.5, 46.0], [9.6, 46.0], [9.7, 46.0], [9.8, 46.0], [9.9, 46.0], [10.0, 46.0], [10.1, 46.0], [10.2, 46.0], [10.3, 46.0], [10.4, 46.0], [10.5, 46.0], [10.6, 46.0], [10.7, 46.0], [10.8, 46.0], [10.9, 46.0], [11.0, 46.0], [11.1, 46.0], [11.2, 47.0], [11.3, 47.0], [11.4, 47.0], [11.5, 47.0], [11.6, 47.0], [11.7, 47.0], [11.8, 47.0], [11.9, 47.0], [12.0, 47.0], [12.1, 47.0], [12.2, 47.0], [12.3, 47.0], [12.4, 47.0], [12.5, 47.0], [12.6, 47.0], [12.7, 47.0], [12.8, 47.0], [12.9, 47.0], [13.0, 47.0], [13.1, 47.0], [13.2, 47.0], [13.3, 47.0], [13.4, 47.0], [13.5, 47.0], [13.6, 47.0], [13.7, 47.0], [13.8, 47.0], [13.9, 47.0], [14.0, 48.0], [14.1, 48.0], [14.2, 48.0], [14.3, 48.0], [14.4, 48.0], [14.5, 48.0], [14.6, 48.0], [14.7, 48.0], [14.8, 48.0], [14.9, 48.0], [15.0, 48.0], [15.1, 48.0], [15.2, 48.0], [15.3, 48.0], [15.4, 48.0], [15.5, 48.0], [15.6, 48.0], [15.7, 48.0], [15.8, 48.0], [15.9, 48.0], [16.0, 48.0], [16.1, 48.0], [16.2, 48.0], [16.3, 48.0], [16.4, 49.0], [16.5, 49.0], [16.6, 49.0], [16.7, 49.0], [16.8, 49.0], [16.9, 49.0], [17.0, 49.0], [17.1, 49.0], [17.2, 49.0], [17.3, 49.0], [17.4, 49.0], [17.5, 49.0], [17.6, 49.0], [17.7, 49.0], [17.8, 49.0], [17.9, 49.0], [18.0, 49.0], [18.1, 49.0], [18.2, 49.0], [18.3, 49.0], [18.4, 49.0], [18.5, 49.0], [18.6, 49.0], [18.7, 49.0], [18.8, 49.0], [18.9, 49.0], [19.0, 50.0], [19.1, 50.0], [19.2, 50.0], [19.3, 50.0], [19.4, 50.0], [19.5, 50.0], [19.6, 50.0], [19.7, 50.0], [19.8, 50.0], [19.9, 50.0], [20.0, 50.0], [20.1, 50.0], [20.2, 50.0], [20.3, 50.0], [20.4, 50.0], [20.5, 50.0], [20.6, 50.0], [20.7, 50.0], [20.8, 50.0], [20.9, 50.0], [21.0, 50.0], [21.1, 50.0], [21.2, 50.0], [21.3, 50.0], [21.4, 50.0], [21.5, 50.0], [21.6, 50.0], [21.7, 50.0], [21.8, 50.0], [21.9, 50.0], [22.0, 50.0], [22.1, 50.0], [22.2, 50.0], [22.3, 50.0], [22.4, 51.0], [22.5, 51.0], [22.6, 51.0], [22.7, 51.0], [22.8, 51.0], [22.9, 51.0], [23.0, 51.0], [23.1, 51.0], [23.2, 51.0], [23.3, 51.0], [23.4, 51.0], [23.5, 51.0], [23.6, 51.0], [23.7, 51.0], [23.8, 51.0], [23.9, 51.0], [24.0, 51.0], [24.1, 51.0], [24.2, 51.0], [24.3, 51.0], [24.4, 51.0], [24.5, 51.0], [24.6, 51.0], [24.7, 51.0], [24.8, 51.0], [24.9, 51.0], [25.0, 51.0], [25.1, 51.0], [25.2, 51.0], [25.3, 51.0], [25.4, 51.0], [25.5, 51.0], [25.6, 51.0], [25.7, 51.0], [25.8, 51.0], [25.9, 52.0], [26.0, 52.0], [26.1, 52.0], [26.2, 52.0], [26.3, 52.0], [26.4, 52.0], [26.5, 52.0], [26.6, 52.0], [26.7, 52.0], [26.8, 52.0], [26.9, 52.0], [27.0, 52.0], [27.1, 52.0], [27.2, 52.0], [27.3, 52.0], [27.4, 52.0], [27.5, 52.0], [27.6, 52.0], [27.7, 52.0], [27.8, 52.0], [27.9, 52.0], [28.0, 52.0], [28.1, 52.0], [28.2, 52.0], [28.3, 52.0], [28.4, 52.0], [28.5, 52.0], [28.6, 52.0], [28.7, 52.0], [28.8, 52.0], [28.9, 52.0], [29.0, 52.0], [29.1, 53.0], [29.2, 53.0], [29.3, 53.0], [29.4, 53.0], [29.5, 53.0], [29.6, 53.0], [29.7, 53.0], [29.8, 53.0], [29.9, 53.0], [30.0, 53.0], [30.1, 53.0], [30.2, 53.0], [30.3, 53.0], [30.4, 53.0], [30.5, 53.0], [30.6, 53.0], [30.7, 53.0], [30.8, 53.0], [30.9, 53.0], [31.0, 53.0], [31.1, 53.0], [31.2, 53.0], [31.3, 53.0], [31.4, 53.0], [31.5, 53.0], [31.6, 53.0], [31.7, 53.0], [31.8, 53.0], [31.9, 53.0], [32.0, 53.0], [32.1, 53.0], [32.2, 53.0], [32.3, 53.0], [32.4, 53.0], [32.5, 53.0], [32.6, 53.0], [32.7, 53.0], [32.8, 53.0], [32.9, 53.0], [33.0, 53.0], [33.1, 53.0], [33.2, 54.0], [33.3, 54.0], [33.4, 54.0], [33.5, 54.0], [33.6, 54.0], [33.7, 54.0], [33.8, 54.0], [33.9, 54.0], [34.0, 54.0], [34.1, 54.0], [34.2, 54.0], [34.3, 54.0], [34.4, 54.0], [34.5, 54.0], [34.6, 54.0], [34.7, 54.0], [34.8, 54.0], [34.9, 54.0], [35.0, 54.0], [35.1, 54.0], [35.2, 54.0], [35.3, 54.0], [35.4, 54.0], [35.5, 54.0], [35.6, 54.0], [35.7, 54.0], [35.8, 54.0], [35.9, 54.0], [36.0, 54.0], [36.1, 54.0], [36.2, 54.0], [36.3, 54.0], [36.4, 54.0], [36.5, 54.0], [36.6, 54.0], [36.7, 54.0], [36.8, 54.0], [36.9, 54.0], [37.0, 55.0], [37.1, 55.0], [37.2, 55.0], [37.3, 55.0], [37.4, 55.0], [37.5, 55.0], [37.6, 55.0], [37.7, 55.0], [37.8, 55.0], [37.9, 55.0], [38.0, 55.0], [38.1, 55.0], [38.2, 55.0], [38.3, 55.0], [38.4, 55.0], [38.5, 55.0], [38.6, 55.0], [38.7, 55.0], [38.8, 55.0], [38.9, 55.0], [39.0, 55.0], [39.1, 55.0], [39.2, 55.0], [39.3, 55.0], [39.4, 55.0], [39.5, 55.0], [39.6, 55.0], [39.7, 55.0], [39.8, 55.0], [39.9, 55.0], [40.0, 55.0], [40.1, 55.0], [40.2, 55.0], [40.3, 55.0], [40.4, 55.0], [40.5, 55.0], [40.6, 55.0], [40.7, 55.0], [40.8, 55.0], [40.9, 55.0], [41.0, 55.0], [41.1, 55.0], [41.2, 55.0], [41.3, 55.0], [41.4, 55.0], [41.5, 55.0], [41.6, 56.0], [41.7, 56.0], [41.8, 56.0], [41.9, 56.0], [42.0, 56.0], [42.1, 56.0], [42.2, 56.0], [42.3, 56.0], [42.4, 56.0], [42.5, 56.0], [42.6, 56.0], [42.7, 56.0], [42.8, 56.0], [42.9, 56.0], [43.0, 56.0], [43.1, 56.0], [43.2, 56.0], [43.3, 56.0], [43.4, 56.0], [43.5, 56.0], [43.6, 56.0], [43.7, 56.0], [43.8, 56.0], [43.9, 56.0], [44.0, 56.0], [44.1, 56.0], [44.2, 56.0], [44.3, 56.0], [44.4, 56.0], [44.5, 56.0], [44.6, 56.0], [44.7, 56.0], [44.8, 56.0], [44.9, 56.0], [45.0, 56.0], [45.1, 56.0], [45.2, 56.0], [45.3, 56.0], [45.4, 56.0], [45.5, 56.0], [45.6, 56.0], [45.7, 56.0], [45.8, 57.0], [45.9, 57.0], [46.0, 57.0], [46.1, 57.0], [46.2, 57.0], [46.3, 57.0], [46.4, 57.0], [46.5, 57.0], [46.6, 57.0], [46.7, 57.0], [46.8, 57.0], [46.9, 57.0], [47.0, 57.0], [47.1, 57.0], [47.2, 57.0], [47.3, 57.0], [47.4, 57.0], [47.5, 57.0], [47.6, 57.0], [47.7, 57.0], [47.8, 57.0], [47.9, 57.0], [48.0, 57.0], [48.1, 57.0], [48.2, 57.0], [48.3, 57.0], [48.4, 57.0], [48.5, 57.0], [48.6, 57.0], [48.7, 57.0], [48.8, 57.0], [48.9, 57.0], [49.0, 57.0], [49.1, 57.0], [49.2, 57.0], [49.3, 57.0], [49.4, 57.0], [49.5, 57.0], [49.6, 57.0], [49.7, 57.0], [49.8, 57.0], [49.9, 57.0], [50.0, 57.0], [50.1, 58.0], [50.2, 58.0], [50.3, 58.0], [50.4, 58.0], [50.5, 58.0], [50.6, 58.0], [50.7, 58.0], [50.8, 58.0], [50.9, 58.0], [51.0, 58.0], [51.1, 58.0], [51.2, 58.0], [51.3, 58.0], [51.4, 58.0], [51.5, 58.0], [51.6, 58.0], [51.7, 58.0], [51.8, 58.0], [51.9, 58.0], [52.0, 58.0], [52.1, 58.0], [52.2, 58.0], [52.3, 58.0], [52.4, 58.0], [52.5, 58.0], [52.6, 58.0], [52.7, 58.0], [52.8, 58.0], [52.9, 58.0], [53.0, 58.0], [53.1, 58.0], [53.2, 58.0], [53.3, 58.0], [53.4, 58.0], [53.5, 58.0], [53.6, 58.0], [53.7, 58.0], [53.8, 58.0], [53.9, 58.0], [54.0, 58.0], [54.1, 58.0], [54.2, 58.0], [54.3, 58.0], [54.4, 58.0], [54.5, 59.0], [54.6, 59.0], [54.7, 59.0], [54.8, 59.0], [54.9, 59.0], [55.0, 59.0], [55.1, 59.0], [55.2, 59.0], [55.3, 59.0], [55.4, 59.0], [55.5, 59.0], [55.6, 59.0], [55.7, 59.0], [55.8, 59.0], [55.9, 59.0], [56.0, 59.0], [56.1, 59.0], [56.2, 59.0], [56.3, 59.0], [56.4, 59.0], [56.5, 59.0], [56.6, 59.0], [56.7, 59.0], [56.8, 59.0], [56.9, 59.0], [57.0, 59.0], [57.1, 59.0], [57.2, 59.0], [57.3, 59.0], [57.4, 59.0], [57.5, 59.0], [57.6, 59.0], [57.7, 59.0], [57.8, 59.0], [57.9, 59.0], [58.0, 59.0], [58.1, 59.0], [58.2, 59.0], [58.3, 59.0], [58.4, 59.0], [58.5, 59.0], [58.6, 59.0], [58.7, 59.0], [58.8, 59.0], [58.9, 59.0], [59.0, 59.0], [59.1, 60.0], [59.2, 60.0], [59.3, 60.0], [59.4, 60.0], [59.5, 60.0], [59.6, 60.0], [59.7, 60.0], [59.8, 60.0], [59.9, 60.0], [60.0, 60.0], [60.1, 60.0], [60.2, 60.0], [60.3, 60.0], [60.4, 60.0], [60.5, 60.0], [60.6, 60.0], [60.7, 60.0], [60.8, 60.0], [60.9, 60.0], [61.0, 60.0], [61.1, 60.0], [61.2, 60.0], [61.3, 60.0], [61.4, 60.0], [61.5, 60.0], [61.6, 60.0], [61.7, 60.0], [61.8, 60.0], [61.9, 60.0], [62.0, 60.0], [62.1, 60.0], [62.2, 60.0], [62.3, 60.0], [62.4, 60.0], [62.5, 60.0], [62.6, 60.0], [62.7, 60.0], [62.8, 60.0], [62.9, 60.0], [63.0, 60.0], [63.1, 60.0], [63.2, 60.0], [63.3, 60.0], [63.4, 60.0], [63.5, 60.0], [63.6, 60.0], [63.7, 60.0], [63.8, 60.0], [63.9, 61.0], [64.0, 61.0], [64.1, 61.0], [64.2, 61.0], [64.3, 61.0], [64.4, 61.0], [64.5, 61.0], [64.6, 61.0], [64.7, 61.0], [64.8, 61.0], [64.9, 61.0], [65.0, 61.0], [65.1, 61.0], [65.2, 61.0], [65.3, 61.0], [65.4, 61.0], [65.5, 61.0], [65.6, 61.0], [65.7, 61.0], [65.8, 61.0], [65.9, 61.0], [66.0, 61.0], [66.1, 61.0], [66.2, 61.0], [66.3, 61.0], [66.4, 61.0], [66.5, 61.0], [66.6, 61.0], [66.7, 61.0], [66.8, 61.0], [66.9, 61.0], [67.0, 61.0], [67.1, 61.0], [67.2, 61.0], [67.3, 61.0], [67.4, 61.0], [67.5, 61.0], [67.6, 61.0], [67.7, 61.0], [67.8, 62.0], [67.9, 62.0], [68.0, 62.0], [68.1, 62.0], [68.2, 62.0], [68.3, 62.0], [68.4, 62.0], [68.5, 62.0], [68.6, 62.0], [68.7, 62.0], [68.8, 62.0], [68.9, 62.0], [69.0, 62.0], [69.1, 62.0], [69.2, 62.0], [69.3, 62.0], [69.4, 62.0], [69.5, 62.0], [69.6, 62.0], [69.7, 62.0], [69.8, 62.0], [69.9, 62.0], [70.0, 62.0], [70.1, 62.0], [70.2, 62.0], [70.3, 62.0], [70.4, 62.0], [70.5, 62.0], [70.6, 62.0], [70.7, 62.0], [70.8, 62.0], [70.9, 62.0], [71.0, 62.0], [71.1, 63.0], [71.2, 63.0], [71.3, 63.0], [71.4, 63.0], [71.5, 63.0], [71.6, 63.0], [71.7, 63.0], [71.8, 63.0], [71.9, 63.0], [72.0, 63.0], [72.1, 63.0], [72.2, 63.0], [72.3, 63.0], [72.4, 63.0], [72.5, 63.0], [72.6, 63.0], [72.7, 63.0], [72.8, 63.0], [72.9, 63.0], [73.0, 63.0], [73.1, 63.0], [73.2, 63.0], [73.3, 63.0], [73.4, 63.0], [73.5, 63.0], [73.6, 63.0], [73.7, 63.0], [73.8, 63.0], [73.9, 63.0], [74.0, 63.0], [74.1, 63.0], [74.2, 63.0], [74.3, 63.0], [74.4, 64.0], [74.5, 64.0], [74.6, 64.0], [74.7, 64.0], [74.8, 64.0], [74.9, 64.0], [75.0, 64.0], [75.1, 64.0], [75.2, 64.0], [75.3, 64.0], [75.4, 64.0], [75.5, 64.0], [75.6, 64.0], [75.7, 64.0], [75.8, 64.0], [75.9, 64.0], [76.0, 64.0], [76.1, 64.0], [76.2, 64.0], [76.3, 64.0], [76.4, 64.0], [76.5, 64.0], [76.6, 64.0], [76.7, 64.0], [76.8, 64.0], [76.9, 64.0], [77.0, 64.0], [77.1, 64.0], [77.2, 64.0], [77.3, 64.0], [77.4, 64.0], [77.5, 64.0], [77.6, 64.0], [77.7, 65.0], [77.8, 65.0], [77.9, 65.0], [78.0, 65.0], [78.1, 65.0], [78.2, 65.0], [78.3, 65.0], [78.4, 65.0], [78.5, 65.0], [78.6, 65.0], [78.7, 65.0], [78.8, 65.0], [78.9, 65.0], [79.0, 65.0], [79.1, 65.0], [79.2, 65.0], [79.3, 65.0], [79.4, 65.0], [79.5, 65.0], [79.6, 65.0], [79.7, 65.0], [79.8, 65.0], [79.9, 65.0], [80.0, 65.0], [80.1, 65.0], [80.2, 65.0], [80.3, 65.0], [80.4, 65.0], [80.5, 65.0], [80.6, 65.0], [80.7, 65.0], [80.8, 65.0], [80.9, 66.0], [81.0, 66.0], [81.1, 66.0], [81.2, 66.0], [81.3, 66.0], [81.4, 66.0], [81.5, 66.0], [81.6, 66.0], [81.7, 66.0], [81.8, 66.0], [81.9, 66.0], [82.0, 66.0], [82.1, 66.0], [82.2, 66.0], [82.3, 66.0], [82.4, 66.0], [82.5, 66.0], [82.6, 66.0], [82.7, 66.0], [82.8, 66.0], [82.9, 66.0], [83.0, 66.0], [83.1, 66.0], [83.2, 66.0], [83.3, 66.0], [83.4, 66.0], [83.5, 66.0], [83.6, 67.0], [83.7, 67.0], [83.8, 67.0], [83.9, 67.0], [84.0, 67.0], [84.1, 67.0], [84.2, 67.0], [84.3, 67.0], [84.4, 67.0], [84.5, 67.0], [84.6, 67.0], [84.7, 67.0], [84.8, 67.0], [84.9, 67.0], [85.0, 67.0], [85.1, 67.0], [85.2, 67.0], [85.3, 67.0], [85.4, 67.0], [85.5, 67.0], [85.6, 67.0], [85.7, 67.0], [85.8, 67.0], [85.9, 67.0], [86.0, 67.0], [86.1, 67.0], [86.2, 67.0], [86.3, 68.0], [86.4, 68.0], [86.5, 68.0], [86.6, 68.0], [86.7, 68.0], [86.8, 68.0], [86.9, 68.0], [87.0, 68.0], [87.1, 68.0], [87.2, 68.0], [87.3, 68.0], [87.4, 68.0], [87.5, 68.0], [87.6, 68.0], [87.7, 68.0], [87.8, 68.0], [87.9, 68.0], [88.0, 68.0], [88.1, 68.0], [88.2, 68.0], [88.3, 69.0], [88.4, 69.0], [88.5, 69.0], [88.6, 69.0], [88.7, 69.0], [88.8, 69.0], [88.9, 69.0], [89.0, 69.0], [89.1, 69.0], [89.2, 69.0], [89.3, 69.0], [89.4, 69.0], [89.5, 69.0], [89.6, 69.0], [89.7, 69.0], [89.8, 69.0], [89.9, 69.0], [90.0, 69.0], [90.1, 69.0], [90.2, 69.0], [90.3, 70.0], [90.4, 70.0], [90.5, 70.0], [90.6, 70.0], [90.7, 70.0], [90.8, 70.0], [90.9, 70.0], [91.0, 70.0], [91.1, 70.0], [91.2, 70.0], [91.3, 70.0], [91.4, 70.0], [91.5, 70.0], [91.6, 71.0], [91.7, 71.0], [91.8, 71.0], [91.9, 71.0], [92.0, 71.0], [92.1, 71.0], [92.2, 71.0], [92.3, 71.0], [92.4, 71.0], [92.5, 71.0], [92.6, 71.0], [92.7, 71.0], [92.8, 71.0], [92.9, 72.0], [93.0, 72.0], [93.1, 72.0], [93.2, 72.0], [93.3, 72.0], [93.4, 72.0], [93.5, 72.0], [93.6, 72.0], [93.7, 73.0], [93.8, 73.0], [93.9, 73.0], [94.0, 73.0], [94.1, 73.0], [94.2, 73.0], [94.3, 73.0], [94.4, 73.0], [94.5, 73.0], [94.6, 73.0], [94.7, 74.0], [94.8, 74.0], [94.9, 74.0], [95.0, 74.0], [95.1, 74.0], [95.2, 74.0], [95.3, 74.0], [95.4, 74.0], [95.5, 75.0], [95.6, 75.0], [95.7, 75.0], [95.8, 75.0], [95.9, 75.0], [96.0, 75.0], [96.1, 75.0], [96.2, 75.0], [96.3, 76.0], [96.4, 76.0], [96.5, 76.0], [96.6, 76.0], [96.7, 76.0], [96.8, 76.0], [96.9, 76.0], [97.0, 77.0], [97.1, 77.0], [97.2, 77.0], [97.3, 77.0], [97.4, 77.0], [97.5, 78.0], [97.6, 78.0], [97.7, 78.0], [97.8, 78.0], [97.9, 79.0], [98.0, 79.0], [98.1, 79.0], [98.2, 80.0], [98.3, 80.0], [98.4, 80.0], [98.5, 80.0], [98.6, 81.0], [98.7, 81.0], [98.8, 82.0], [98.9, 82.0], [99.0, 83.0], [99.1, 84.0], [99.2, 85.0], [99.3, 85.0], [99.4, 86.0], [99.5, 86.0], [99.6, 86.0], [99.7, 87.0], [99.8, 90.0], [99.9, 92.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 23.0], [0.1, 26.0], [0.2, 27.0], [0.3, 29.0], [0.4, 30.0], [0.5, 36.0], [0.6, 38.0], [0.7, 40.0], [0.8, 47.0], [0.9, 52.0], [1.0, 57.0], [1.1, 59.0], [1.2, 63.0], [1.3, 70.0], [1.4, 74.0], [1.5, 79.0], [1.6, 81.0], [1.7, 83.0], [1.8, 85.0], [1.9, 86.0], [2.0, 90.0], [2.1, 94.0], [2.2, 95.0], [2.3, 97.0], [2.4, 98.0], [2.5, 102.0], [2.6, 104.0], [2.7, 109.0], [2.8, 111.0], [2.9, 115.0], [3.0, 118.0], [3.1, 121.0], [3.2, 123.0], [3.3, 126.0], [3.4, 126.0], [3.5, 128.0], [3.6, 130.0], [3.7, 134.0], [3.8, 135.0], [3.9, 136.0], [4.0, 138.0], [4.1, 140.0], [4.2, 142.0], [4.3, 144.0], [4.4, 146.0], [4.5, 147.0], [4.6, 150.0], [4.7, 151.0], [4.8, 152.0], [4.9, 153.0], [5.0, 155.0], [5.1, 156.0], [5.2, 158.0], [5.3, 159.0], [5.4, 161.0], [5.5, 162.0], [5.6, 164.0], [5.7, 166.0], [5.8, 169.0], [5.9, 173.0], [6.0, 175.0], [6.1, 177.0], [6.2, 180.0], [6.3, 183.0], [6.4, 185.0], [6.5, 189.0], [6.6, 195.0], [6.7, 196.0], [6.8, 197.0], [6.9, 200.0], [7.0, 202.0], [7.1, 203.0], [7.2, 204.0], [7.3, 205.0], [7.4, 209.0], [7.5, 211.0], [7.6, 213.0], [7.7, 213.0], [7.8, 216.0], [7.9, 218.0], [8.0, 219.0], [8.1, 220.0], [8.2, 228.0], [8.3, 231.0], [8.4, 233.0], [8.5, 237.0], [8.6, 238.0], [8.7, 241.0], [8.8, 244.0], [8.9, 245.0], [9.0, 250.0], [9.1, 251.0], [9.2, 252.0], [9.3, 253.0], [9.4, 257.0], [9.5, 259.0], [9.6, 261.0], [9.7, 264.0], [9.8, 265.0], [9.9, 268.0], [10.0, 271.0], [10.1, 274.0], [10.2, 275.0], [10.3, 276.0], [10.4, 279.0], [10.5, 280.0], [10.6, 282.0], [10.7, 287.0], [10.8, 289.0], [10.9, 291.0], [11.0, 294.0], [11.1, 297.0], [11.2, 298.0], [11.3, 299.0], [11.4, 304.0], [11.5, 308.0], [11.6, 310.0], [11.7, 314.0], [11.8, 316.0], [11.9, 318.0], [12.0, 322.0], [12.1, 326.0], [12.2, 329.0], [12.3, 330.0], [12.4, 333.0], [12.5, 337.0], [12.6, 339.0], [12.7, 341.0], [12.8, 343.0], [12.9, 346.0], [13.0, 349.0], [13.1, 353.0], [13.2, 354.0], [13.3, 360.0], [13.4, 362.0], [13.5, 365.0], [13.6, 368.0], [13.7, 370.0], [13.8, 374.0], [13.9, 377.0], [14.0, 380.0], [14.1, 384.0], [14.2, 387.0], [14.3, 389.0], [14.4, 394.0], [14.5, 395.0], [14.6, 398.0], [14.7, 401.0], [14.8, 403.0], [14.9, 404.0], [15.0, 407.0], [15.1, 409.0], [15.2, 413.0], [15.3, 417.0], [15.4, 418.0], [15.5, 420.0], [15.6, 422.0], [15.7, 424.0], [15.8, 424.0], [15.9, 427.0], [16.0, 429.0], [16.1, 432.0], [16.2, 432.0], [16.3, 434.0], [16.4, 434.0], [16.5, 435.0], [16.6, 436.0], [16.7, 437.0], [16.8, 438.0], [16.9, 439.0], [17.0, 440.0], [17.1, 441.0], [17.2, 442.0], [17.3, 442.0], [17.4, 443.0], [17.5, 444.0], [17.6, 445.0], [17.7, 447.0], [17.8, 447.0], [17.9, 448.0], [18.0, 449.0], [18.1, 450.0], [18.2, 451.0], [18.3, 452.0], [18.4, 455.0], [18.5, 456.0], [18.6, 457.0], [18.7, 458.0], [18.8, 460.0], [18.9, 461.0], [19.0, 462.0], [19.1, 463.0], [19.2, 464.0], [19.3, 465.0], [19.4, 467.0], [19.5, 470.0], [19.6, 471.0], [19.7, 472.0], [19.8, 473.0], [19.9, 473.0], [20.0, 474.0], [20.1, 474.0], [20.2, 475.0], [20.3, 477.0], [20.4, 478.0], [20.5, 478.0], [20.6, 479.0], [20.7, 480.0], [20.8, 481.0], [20.9, 481.0], [21.0, 481.0], [21.1, 482.0], [21.2, 482.0], [21.3, 483.0], [21.4, 485.0], [21.5, 486.0], [21.6, 487.0], [21.7, 487.0], [21.8, 488.0], [21.9, 489.0], [22.0, 490.0], [22.1, 491.0], [22.2, 491.0], [22.3, 491.0], [22.4, 493.0], [22.5, 494.0], [22.6, 495.0], [22.7, 497.0], [22.8, 498.0], [22.9, 498.0], [23.0, 499.0], [23.1, 500.0], [23.2, 500.0], [23.3, 501.0], [23.4, 503.0], [23.5, 504.0], [23.6, 505.0], [23.7, 505.0], [23.8, 506.0], [23.9, 507.0], [24.0, 507.0], [24.1, 508.0], [24.2, 510.0], [24.3, 511.0], [24.4, 512.0], [24.5, 513.0], [24.6, 515.0], [24.7, 516.0], [24.8, 517.0], [24.9, 518.0], [25.0, 518.0], [25.1, 520.0], [25.2, 521.0], [25.3, 522.0], [25.4, 523.0], [25.5, 524.0], [25.6, 526.0], [25.7, 528.0], [25.8, 529.0], [25.9, 530.0], [26.0, 532.0], [26.1, 533.0], [26.2, 534.0], [26.3, 535.0], [26.4, 536.0], [26.5, 538.0], [26.6, 539.0], [26.7, 540.0], [26.8, 541.0], [26.9, 541.0], [27.0, 543.0], [27.1, 543.0], [27.2, 544.0], [27.3, 545.0], [27.4, 545.0], [27.5, 546.0], [27.6, 547.0], [27.7, 548.0], [27.8, 548.0], [27.9, 549.0], [28.0, 550.0], [28.1, 550.0], [28.2, 551.0], [28.3, 551.0], [28.4, 553.0], [28.5, 553.0], [28.6, 554.0], [28.7, 554.0], [28.8, 555.0], [28.9, 556.0], [29.0, 556.0], [29.1, 557.0], [29.2, 558.0], [29.3, 559.0], [29.4, 560.0], [29.5, 560.0], [29.6, 561.0], [29.7, 562.0], [29.8, 562.0], [29.9, 562.0], [30.0, 563.0], [30.1, 563.0], [30.2, 564.0], [30.3, 565.0], [30.4, 565.0], [30.5, 566.0], [30.6, 567.0], [30.7, 568.0], [30.8, 568.0], [30.9, 569.0], [31.0, 570.0], [31.1, 570.0], [31.2, 572.0], [31.3, 572.0], [31.4, 573.0], [31.5, 574.0], [31.6, 576.0], [31.7, 577.0], [31.8, 578.0], [31.9, 578.0], [32.0, 579.0], [32.1, 579.0], [32.2, 580.0], [32.3, 581.0], [32.4, 582.0], [32.5, 583.0], [32.6, 585.0], [32.7, 586.0], [32.8, 586.0], [32.9, 587.0], [33.0, 588.0], [33.1, 588.0], [33.2, 590.0], [33.3, 592.0], [33.4, 593.0], [33.5, 595.0], [33.6, 598.0], [33.7, 600.0], [33.8, 601.0], [33.9, 603.0], [34.0, 607.0], [34.1, 608.0], [34.2, 613.0], [34.3, 615.0], [34.4, 618.0], [34.5, 622.0], [34.6, 625.0], [34.7, 626.0], [34.8, 629.0], [34.9, 631.0], [35.0, 633.0], [35.1, 636.0], [35.2, 637.0], [35.3, 638.0], [35.4, 639.0], [35.5, 640.0], [35.6, 642.0], [35.7, 643.0], [35.8, 644.0], [35.9, 645.0], [36.0, 646.0], [36.1, 647.0], [36.2, 649.0], [36.3, 651.0], [36.4, 651.0], [36.5, 652.0], [36.6, 653.0], [36.7, 653.0], [36.8, 655.0], [36.9, 656.0], [37.0, 657.0], [37.1, 658.0], [37.2, 658.0], [37.3, 659.0], [37.4, 660.0], [37.5, 662.0], [37.6, 662.0], [37.7, 663.0], [37.8, 664.0], [37.9, 666.0], [38.0, 667.0], [38.1, 668.0], [38.2, 670.0], [38.3, 670.0], [38.4, 671.0], [38.5, 672.0], [38.6, 672.0], [38.7, 673.0], [38.8, 673.0], [38.9, 675.0], [39.0, 675.0], [39.1, 676.0], [39.2, 676.0], [39.3, 677.0], [39.4, 677.0], [39.5, 678.0], [39.6, 678.0], [39.7, 679.0], [39.8, 679.0], [39.9, 680.0], [40.0, 680.0], [40.1, 681.0], [40.2, 682.0], [40.3, 682.0], [40.4, 683.0], [40.5, 684.0], [40.6, 684.0], [40.7, 685.0], [40.8, 685.0], [40.9, 685.0], [41.0, 686.0], [41.1, 687.0], [41.2, 687.0], [41.3, 687.0], [41.4, 688.0], [41.5, 689.0], [41.6, 690.0], [41.7, 691.0], [41.8, 692.0], [41.9, 692.0], [42.0, 693.0], [42.1, 694.0], [42.2, 694.0], [42.3, 695.0], [42.4, 696.0], [42.5, 697.0], [42.6, 697.0], [42.7, 697.0], [42.8, 697.0], [42.9, 698.0], [43.0, 700.0], [43.1, 700.0], [43.2, 701.0], [43.3, 701.0], [43.4, 701.0], [43.5, 702.0], [43.6, 703.0], [43.7, 703.0], [43.8, 704.0], [43.9, 704.0], [44.0, 705.0], [44.1, 707.0], [44.2, 708.0], [44.3, 709.0], [44.4, 711.0], [44.5, 712.0], [44.6, 714.0], [44.7, 716.0], [44.8, 719.0], [44.9, 720.0], [45.0, 723.0], [45.1, 724.0], [45.2, 726.0], [45.3, 728.0], [45.4, 733.0], [45.5, 737.0], [45.6, 744.0], [45.7, 748.0], [45.8, 752.0], [45.9, 762.0], [46.0, 763.0], [46.1, 767.0], [46.2, 770.0], [46.3, 776.0], [46.4, 777.0], [46.5, 779.0], [46.6, 785.0], [46.7, 788.0], [46.8, 793.0], [46.9, 796.0], [47.0, 800.0], [47.1, 801.0], [47.2, 805.0], [47.3, 807.0], [47.4, 808.0], [47.5, 809.0], [47.6, 813.0], [47.7, 814.0], [47.8, 816.0], [47.9, 819.0], [48.0, 822.0], [48.1, 823.0], [48.2, 826.0], [48.3, 827.0], [48.4, 830.0], [48.5, 831.0], [48.6, 833.0], [48.7, 834.0], [48.8, 837.0], [48.9, 839.0], [49.0, 841.0], [49.1, 843.0], [49.2, 845.0], [49.3, 846.0], [49.4, 848.0], [49.5, 851.0], [49.6, 853.0], [49.7, 856.0], [49.8, 859.0], [49.9, 861.0], [50.0, 864.0], [50.1, 869.0], [50.2, 872.0], [50.3, 876.0], [50.4, 879.0], [50.5, 883.0], [50.6, 887.0], [50.7, 887.0], [50.8, 893.0], [50.9, 895.0], [51.0, 897.0], [51.1, 902.0], [51.2, 904.0], [51.3, 906.0], [51.4, 910.0], [51.5, 913.0], [51.6, 914.0], [51.7, 917.0], [51.8, 919.0], [51.9, 921.0], [52.0, 924.0], [52.1, 926.0], [52.2, 928.0], [52.3, 930.0], [52.4, 932.0], [52.5, 936.0], [52.6, 938.0], [52.7, 941.0], [52.8, 944.0], [52.9, 947.0], [53.0, 952.0], [53.1, 957.0], [53.2, 959.0], [53.3, 961.0], [53.4, 963.0], [53.5, 966.0], [53.6, 968.0], [53.7, 971.0], [53.8, 974.0], [53.9, 974.0], [54.0, 976.0], [54.1, 977.0], [54.2, 979.0], [54.3, 980.0], [54.4, 981.0], [54.5, 982.0], [54.6, 983.0], [54.7, 984.0], [54.8, 985.0], [54.9, 985.0], [55.0, 986.0], [55.1, 987.0], [55.2, 988.0], [55.3, 989.0], [55.4, 990.0], [55.5, 990.0], [55.6, 991.0], [55.7, 991.0], [55.8, 992.0], [55.9, 994.0], [56.0, 995.0], [56.1, 996.0], [56.2, 997.0], [56.3, 998.0], [56.4, 999.0], [56.5, 1001.0], [56.6, 1001.0], [56.7, 1002.0], [56.8, 1003.0], [56.9, 1005.0], [57.0, 1008.0], [57.1, 1008.0], [57.2, 1009.0], [57.3, 1013.0], [57.4, 1014.0], [57.5, 1017.0], [57.6, 1018.0], [57.7, 1020.0], [57.8, 1021.0], [57.9, 1024.0], [58.0, 1027.0], [58.1, 1031.0], [58.2, 1033.0], [58.3, 1035.0], [58.4, 1035.0], [58.5, 1036.0], [58.6, 1037.0], [58.7, 1038.0], [58.8, 1040.0], [58.9, 1041.0], [59.0, 1042.0], [59.1, 1043.0], [59.2, 1043.0], [59.3, 1045.0], [59.4, 1045.0], [59.5, 1046.0], [59.6, 1048.0], [59.7, 1049.0], [59.8, 1050.0], [59.9, 1051.0], [60.0, 1052.0], [60.1, 1053.0], [60.2, 1055.0], [60.3, 1056.0], [60.4, 1056.0], [60.5, 1056.0], [60.6, 1057.0], [60.7, 1058.0], [60.8, 1058.0], [60.9, 1059.0], [61.0, 1059.0], [61.1, 1061.0], [61.2, 1061.0], [61.3, 1062.0], [61.4, 1063.0], [61.5, 1064.0], [61.6, 1065.0], [61.7, 1066.0], [61.8, 1067.0], [61.9, 1068.0], [62.0, 1069.0], [62.1, 1071.0], [62.2, 1072.0], [62.3, 1072.0], [62.4, 1073.0], [62.5, 1073.0], [62.6, 1074.0], [62.7, 1075.0], [62.8, 1076.0], [62.9, 1078.0], [63.0, 1078.0], [63.1, 1079.0], [63.2, 1080.0], [63.3, 1081.0], [63.4, 1081.0], [63.5, 1082.0], [63.6, 1083.0], [63.7, 1084.0], [63.8, 1086.0], [63.9, 1087.0], [64.0, 1088.0], [64.1, 1089.0], [64.2, 1089.0], [64.3, 1090.0], [64.4, 1092.0], [64.5, 1093.0], [64.6, 1093.0], [64.7, 1094.0], [64.8, 1096.0], [64.9, 1098.0], [65.0, 1099.0], [65.1, 1100.0], [65.2, 1101.0], [65.3, 1103.0], [65.4, 1108.0], [65.5, 1111.0], [65.6, 1112.0], [65.7, 1114.0], [65.8, 1117.0], [65.9, 1119.0], [66.0, 1122.0], [66.1, 1125.0], [66.2, 1128.0], [66.3, 1129.0], [66.4, 1131.0], [66.5, 1132.0], [66.6, 1136.0], [66.7, 1139.0], [66.8, 1140.0], [66.9, 1143.0], [67.0, 1146.0], [67.1, 1148.0], [67.2, 1150.0], [67.3, 1153.0], [67.4, 1155.0], [67.5, 1157.0], [67.6, 1161.0], [67.7, 1162.0], [67.8, 1163.0], [67.9, 1166.0], [68.0, 1168.0], [68.1, 1169.0], [68.2, 1170.0], [68.3, 1172.0], [68.4, 1174.0], [68.5, 1176.0], [68.6, 1177.0], [68.7, 1181.0], [68.8, 1183.0], [68.9, 1184.0], [69.0, 1185.0], [69.1, 1187.0], [69.2, 1188.0], [69.3, 1190.0], [69.4, 1192.0], [69.5, 1194.0], [69.6, 1198.0], [69.7, 1201.0], [69.8, 1204.0], [69.9, 1207.0], [70.0, 1210.0], [70.1, 1213.0], [70.2, 1218.0], [70.3, 1221.0], [70.4, 1226.0], [70.5, 1227.0], [70.6, 1229.0], [70.7, 1230.0], [70.8, 1232.0], [70.9, 1235.0], [71.0, 1236.0], [71.1, 1237.0], [71.2, 1238.0], [71.3, 1239.0], [71.4, 1241.0], [71.5, 1243.0], [71.6, 1244.0], [71.7, 1246.0], [71.8, 1246.0], [71.9, 1248.0], [72.0, 1250.0], [72.1, 1252.0], [72.2, 1255.0], [72.3, 1256.0], [72.4, 1257.0], [72.5, 1258.0], [72.6, 1259.0], [72.7, 1261.0], [72.8, 1261.0], [72.9, 1262.0], [73.0, 1263.0], [73.1, 1264.0], [73.2, 1265.0], [73.3, 1266.0], [73.4, 1267.0], [73.5, 1268.0], [73.6, 1268.0], [73.7, 1269.0], [73.8, 1270.0], [73.9, 1271.0], [74.0, 1272.0], [74.1, 1273.0], [74.2, 1274.0], [74.3, 1275.0], [74.4, 1276.0], [74.5, 1276.0], [74.6, 1277.0], [74.7, 1277.0], [74.8, 1278.0], [74.9, 1278.0], [75.0, 1279.0], [75.1, 1279.0], [75.2, 1279.0], [75.3, 1280.0], [75.4, 1280.0], [75.5, 1281.0], [75.6, 1282.0], [75.7, 1282.0], [75.8, 1283.0], [75.9, 1284.0], [76.0, 1284.0], [76.1, 1285.0], [76.2, 1285.0], [76.3, 1286.0], [76.4, 1286.0], [76.5, 1287.0], [76.6, 1288.0], [76.7, 1288.0], [76.8, 1289.0], [76.9, 1289.0], [77.0, 1290.0], [77.1, 1290.0], [77.2, 1291.0], [77.3, 1291.0], [77.4, 1292.0], [77.5, 1292.0], [77.6, 1292.0], [77.7, 1293.0], [77.8, 1293.0], [77.9, 1293.0], [78.0, 1294.0], [78.1, 1294.0], [78.2, 1294.0], [78.3, 1294.0], [78.4, 1295.0], [78.5, 1295.0], [78.6, 1296.0], [78.7, 1296.0], [78.8, 1296.0], [78.9, 1297.0], [79.0, 1297.0], [79.1, 1298.0], [79.2, 1298.0], [79.3, 1299.0], [79.4, 1300.0], [79.5, 1300.0], [79.6, 1300.0], [79.7, 1301.0], [79.8, 1301.0], [79.9, 1302.0], [80.0, 1302.0], [80.1, 1303.0], [80.2, 1303.0], [80.3, 1304.0], [80.4, 1304.0], [80.5, 1305.0], [80.6, 1305.0], [80.7, 1306.0], [80.8, 1306.0], [80.9, 1307.0], [81.0, 1307.0], [81.1, 1307.0], [81.2, 1308.0], [81.3, 1308.0], [81.4, 1309.0], [81.5, 1309.0], [81.6, 1309.0], [81.7, 1310.0], [81.8, 1311.0], [81.9, 1311.0], [82.0, 1312.0], [82.1, 1312.0], [82.2, 1313.0], [82.3, 1313.0], [82.4, 1314.0], [82.5, 1314.0], [82.6, 1314.0], [82.7, 1315.0], [82.8, 1316.0], [82.9, 1316.0], [83.0, 1317.0], [83.1, 1317.0], [83.2, 1318.0], [83.3, 1319.0], [83.4, 1319.0], [83.5, 1319.0], [83.6, 1320.0], [83.7, 1320.0], [83.8, 1321.0], [83.9, 1321.0], [84.0, 1322.0], [84.1, 1322.0], [84.2, 1323.0], [84.3, 1323.0], [84.4, 1324.0], [84.5, 1324.0], [84.6, 1325.0], [84.7, 1325.0], [84.8, 1326.0], [84.9, 1327.0], [85.0, 1328.0], [85.1, 1329.0], [85.2, 1330.0], [85.3, 1330.0], [85.4, 1330.0], [85.5, 1331.0], [85.6, 1332.0], [85.7, 1332.0], [85.8, 1333.0], [85.9, 1333.0], [86.0, 1334.0], [86.1, 1334.0], [86.2, 1335.0], [86.3, 1335.0], [86.4, 1335.0], [86.5, 1336.0], [86.6, 1336.0], [86.7, 1336.0], [86.8, 1337.0], [86.9, 1337.0], [87.0, 1337.0], [87.1, 1337.0], [87.2, 1338.0], [87.3, 1339.0], [87.4, 1339.0], [87.5, 1339.0], [87.6, 1340.0], [87.7, 1341.0], [87.8, 1341.0], [87.9, 1341.0], [88.0, 1342.0], [88.1, 1343.0], [88.2, 1343.0], [88.3, 1344.0], [88.4, 1344.0], [88.5, 1344.0], [88.6, 1345.0], [88.7, 1345.0], [88.8, 1346.0], [88.9, 1347.0], [89.0, 1347.0], [89.1, 1347.0], [89.2, 1348.0], [89.3, 1348.0], [89.4, 1349.0], [89.5, 1349.0], [89.6, 1350.0], [89.7, 1351.0], [89.8, 1351.0], [89.9, 1351.0], [90.0, 1352.0], [90.1, 1352.0], [90.2, 1353.0], [90.3, 1353.0], [90.4, 1353.0], [90.5, 1354.0], [90.6, 1354.0], [90.7, 1354.0], [90.8, 1355.0], [90.9, 1355.0], [91.0, 1355.0], [91.1, 1356.0], [91.2, 1356.0], [91.3, 1357.0], [91.4, 1357.0], [91.5, 1358.0], [91.6, 1358.0], [91.7, 1359.0], [91.8, 1359.0], [91.9, 1359.0], [92.0, 1360.0], [92.1, 1360.0], [92.2, 1361.0], [92.3, 1361.0], [92.4, 1361.0], [92.5, 1361.0], [92.6, 1362.0], [92.7, 1363.0], [92.8, 1363.0], [92.9, 1363.0], [93.0, 1364.0], [93.1, 1364.0], [93.2, 1364.0], [93.3, 1365.0], [93.4, 1365.0], [93.5, 1365.0], [93.6, 1366.0], [93.7, 1366.0], [93.8, 1367.0], [93.9, 1367.0], [94.0, 1367.0], [94.1, 1368.0], [94.2, 1368.0], [94.3, 1368.0], [94.4, 1368.0], [94.5, 1369.0], [94.6, 1369.0], [94.7, 1369.0], [94.8, 1370.0], [94.9, 1370.0], [95.0, 1370.0], [95.1, 1371.0], [95.2, 1371.0], [95.3, 1372.0], [95.4, 1372.0], [95.5, 1372.0], [95.6, 1373.0], [95.7, 1373.0], [95.8, 1374.0], [95.9, 1374.0], [96.0, 1375.0], [96.1, 1375.0], [96.2, 1375.0], [96.3, 1376.0], [96.4, 1377.0], [96.5, 1377.0], [96.6, 1377.0], [96.7, 1378.0], [96.8, 1378.0], [96.9, 1379.0], [97.0, 1380.0], [97.1, 1380.0], [97.2, 1381.0], [97.3, 1382.0], [97.4, 1382.0], [97.5, 1383.0], [97.6, 1383.0], [97.7, 1383.0], [97.8, 1384.0], [97.9, 1384.0], [98.0, 1385.0], [98.1, 1385.0], [98.2, 1385.0], [98.3, 1386.0], [98.4, 1387.0], [98.5, 1388.0], [98.6, 1388.0], [98.7, 1390.0], [98.8, 1391.0], [98.9, 1392.0], [99.0, 1393.0], [99.1, 1394.0], [99.2, 1396.0], [99.3, 1397.0], [99.4, 1398.0], [99.5, 1399.0], [99.6, 1401.0], [99.7, 1401.0], [99.8, 1402.0], [99.9, 1404.0], [100.0, 1407.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 6.0], [4.3, 6.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 9.0], [4.8, 10.0], [4.9, 12.0], [5.0, 13.0], [5.1, 13.0], [5.2, 15.0], [5.3, 15.0], [5.4, 16.0], [5.5, 16.0], [5.6, 17.0], [5.7, 17.0], [5.8, 18.0], [5.9, 19.0], [6.0, 20.0], [6.1, 20.0], [6.2, 21.0], [6.3, 21.0], [6.4, 22.0], [6.5, 22.0], [6.6, 23.0], [6.7, 23.0], [6.8, 24.0], [6.9, 24.0], [7.0, 25.0], [7.1, 25.0], [7.2, 25.0], [7.3, 26.0], [7.4, 26.0], [7.5, 26.0], [7.6, 27.0], [7.7, 27.0], [7.8, 27.0], [7.9, 27.0], [8.0, 27.0], [8.1, 28.0], [8.2, 28.0], [8.3, 28.0], [8.4, 28.0], [8.5, 28.0], [8.6, 29.0], [8.7, 29.0], [8.8, 29.0], [8.9, 29.0], [9.0, 29.0], [9.1, 29.0], [9.2, 30.0], [9.3, 30.0], [9.4, 30.0], [9.5, 30.0], [9.6, 30.0], [9.7, 30.0], [9.8, 31.0], [9.9, 31.0], [10.0, 31.0], [10.1, 31.0], [10.2, 31.0], [10.3, 31.0], [10.4, 31.0], [10.5, 31.0], [10.6, 32.0], [10.7, 32.0], [10.8, 32.0], [10.9, 32.0], [11.0, 32.0], [11.1, 32.0], [11.2, 32.0], [11.3, 32.0], [11.4, 32.0], [11.5, 32.0], [11.6, 33.0], [11.7, 33.0], [11.8, 33.0], [11.9, 33.0], [12.0, 33.0], [12.1, 33.0], [12.2, 33.0], [12.3, 33.0], [12.4, 33.0], [12.5, 33.0], [12.6, 33.0], [12.7, 33.0], [12.8, 33.0], [12.9, 33.0], [13.0, 34.0], [13.1, 34.0], [13.2, 34.0], [13.3, 34.0], [13.4, 34.0], [13.5, 34.0], [13.6, 34.0], [13.7, 34.0], [13.8, 34.0], [13.9, 34.0], [14.0, 34.0], [14.1, 34.0], [14.2, 34.0], [14.3, 34.0], [14.4, 34.0], [14.5, 34.0], [14.6, 34.0], [14.7, 34.0], [14.8, 34.0], [14.9, 34.0], [15.0, 34.0], [15.1, 34.0], [15.2, 34.0], [15.3, 34.0], [15.4, 34.0], [15.5, 34.0], [15.6, 35.0], [15.7, 35.0], [15.8, 35.0], [15.9, 35.0], [16.0, 35.0], [16.1, 35.0], [16.2, 35.0], [16.3, 35.0], [16.4, 35.0], [16.5, 35.0], [16.6, 35.0], [16.7, 35.0], [16.8, 35.0], [16.9, 35.0], [17.0, 35.0], [17.1, 35.0], [17.2, 35.0], [17.3, 35.0], [17.4, 35.0], [17.5, 35.0], [17.6, 35.0], [17.7, 35.0], [17.8, 35.0], [17.9, 35.0], [18.0, 35.0], [18.1, 35.0], [18.2, 35.0], [18.3, 35.0], [18.4, 35.0], [18.5, 35.0], [18.6, 35.0], [18.7, 35.0], [18.8, 36.0], [18.9, 36.0], [19.0, 36.0], [19.1, 36.0], [19.2, 36.0], [19.3, 36.0], [19.4, 36.0], [19.5, 36.0], [19.6, 36.0], [19.7, 36.0], [19.8, 36.0], [19.9, 36.0], [20.0, 36.0], [20.1, 36.0], [20.2, 36.0], [20.3, 36.0], [20.4, 36.0], [20.5, 36.0], [20.6, 36.0], [20.7, 36.0], [20.8, 36.0], [20.9, 36.0], [21.0, 36.0], [21.1, 36.0], [21.2, 36.0], [21.3, 36.0], [21.4, 36.0], [21.5, 36.0], [21.6, 37.0], [21.7, 37.0], [21.8, 37.0], [21.9, 37.0], [22.0, 37.0], [22.1, 37.0], [22.2, 37.0], [22.3, 37.0], [22.4, 37.0], [22.5, 37.0], [22.6, 37.0], [22.7, 37.0], [22.8, 37.0], [22.9, 37.0], [23.0, 37.0], [23.1, 37.0], [23.2, 37.0], [23.3, 37.0], [23.4, 37.0], [23.5, 37.0], [23.6, 37.0], [23.7, 37.0], [23.8, 37.0], [23.9, 37.0], [24.0, 37.0], [24.1, 37.0], [24.2, 37.0], [24.3, 37.0], [24.4, 37.0], [24.5, 37.0], [24.6, 37.0], [24.7, 38.0], [24.8, 38.0], [24.9, 38.0], [25.0, 38.0], [25.1, 38.0], [25.2, 38.0], [25.3, 38.0], [25.4, 38.0], [25.5, 38.0], [25.6, 38.0], [25.7, 38.0], [25.8, 38.0], [25.9, 38.0], [26.0, 38.0], [26.1, 38.0], [26.2, 38.0], [26.3, 38.0], [26.4, 38.0], [26.5, 38.0], [26.6, 38.0], [26.7, 38.0], [26.8, 38.0], [26.9, 38.0], [27.0, 38.0], [27.1, 38.0], [27.2, 38.0], [27.3, 38.0], [27.4, 38.0], [27.5, 38.0], [27.6, 38.0], [27.7, 38.0], [27.8, 38.0], [27.9, 38.0], [28.0, 38.0], [28.1, 38.0], [28.2, 38.0], [28.3, 38.0], [28.4, 38.0], [28.5, 38.0], [28.6, 38.0], [28.7, 38.0], [28.8, 39.0], [28.9, 39.0], [29.0, 39.0], [29.1, 39.0], [29.2, 39.0], [29.3, 39.0], [29.4, 39.0], [29.5, 39.0], [29.6, 39.0], [29.7, 39.0], [29.8, 39.0], [29.9, 39.0], [30.0, 39.0], [30.1, 39.0], [30.2, 39.0], [30.3, 39.0], [30.4, 39.0], [30.5, 39.0], [30.6, 39.0], [30.7, 39.0], [30.8, 39.0], [30.9, 39.0], [31.0, 39.0], [31.1, 39.0], [31.2, 39.0], [31.3, 39.0], [31.4, 39.0], [31.5, 39.0], [31.6, 39.0], [31.7, 39.0], [31.8, 39.0], [31.9, 39.0], [32.0, 39.0], [32.1, 39.0], [32.2, 39.0], [32.3, 39.0], [32.4, 39.0], [32.5, 39.0], [32.6, 39.0], [32.7, 39.0], [32.8, 39.0], [32.9, 39.0], [33.0, 39.0], [33.1, 39.0], [33.2, 39.0], [33.3, 40.0], [33.4, 40.0], [33.5, 40.0], [33.6, 40.0], [33.7, 40.0], [33.8, 40.0], [33.9, 40.0], [34.0, 40.0], [34.1, 40.0], [34.2, 40.0], [34.3, 40.0], [34.4, 40.0], [34.5, 40.0], [34.6, 40.0], [34.7, 40.0], [34.8, 40.0], [34.9, 40.0], [35.0, 40.0], [35.1, 40.0], [35.2, 40.0], [35.3, 40.0], [35.4, 40.0], [35.5, 40.0], [35.6, 40.0], [35.7, 40.0], [35.8, 40.0], [35.9, 40.0], [36.0, 40.0], [36.1, 40.0], [36.2, 40.0], [36.3, 40.0], [36.4, 40.0], [36.5, 40.0], [36.6, 40.0], [36.7, 40.0], [36.8, 40.0], [36.9, 40.0], [37.0, 40.0], [37.1, 40.0], [37.2, 40.0], [37.3, 40.0], [37.4, 40.0], [37.5, 40.0], [37.6, 40.0], [37.7, 40.0], [37.8, 40.0], [37.9, 40.0], [38.0, 40.0], [38.1, 40.0], [38.2, 41.0], [38.3, 41.0], [38.4, 41.0], [38.5, 41.0], [38.6, 41.0], [38.7, 41.0], [38.8, 41.0], [38.9, 41.0], [39.0, 41.0], [39.1, 41.0], [39.2, 41.0], [39.3, 41.0], [39.4, 41.0], [39.5, 41.0], [39.6, 41.0], [39.7, 41.0], [39.8, 41.0], [39.9, 41.0], [40.0, 41.0], [40.1, 41.0], [40.2, 41.0], [40.3, 41.0], [40.4, 41.0], [40.5, 41.0], [40.6, 41.0], [40.7, 41.0], [40.8, 41.0], [40.9, 41.0], [41.0, 41.0], [41.1, 41.0], [41.2, 41.0], [41.3, 41.0], [41.4, 41.0], [41.5, 41.0], [41.6, 41.0], [41.7, 41.0], [41.8, 41.0], [41.9, 41.0], [42.0, 41.0], [42.1, 41.0], [42.2, 41.0], [42.3, 41.0], [42.4, 41.0], [42.5, 41.0], [42.6, 41.0], [42.7, 41.0], [42.8, 41.0], [42.9, 41.0], [43.0, 41.0], [43.1, 41.0], [43.2, 42.0], [43.3, 42.0], [43.4, 42.0], [43.5, 42.0], [43.6, 42.0], [43.7, 42.0], [43.8, 42.0], [43.9, 42.0], [44.0, 42.0], [44.1, 42.0], [44.2, 42.0], [44.3, 42.0], [44.4, 42.0], [44.5, 42.0], [44.6, 42.0], [44.7, 42.0], [44.8, 42.0], [44.9, 42.0], [45.0, 42.0], [45.1, 42.0], [45.2, 42.0], [45.3, 42.0], [45.4, 42.0], [45.5, 42.0], [45.6, 42.0], [45.7, 42.0], [45.8, 42.0], [45.9, 42.0], [46.0, 42.0], [46.1, 42.0], [46.2, 42.0], [46.3, 42.0], [46.4, 42.0], [46.5, 42.0], [46.6, 42.0], [46.7, 42.0], [46.8, 42.0], [46.9, 42.0], [47.0, 42.0], [47.1, 42.0], [47.2, 42.0], [47.3, 42.0], [47.4, 42.0], [47.5, 42.0], [47.6, 42.0], [47.7, 42.0], [47.8, 42.0], [47.9, 42.0], [48.0, 43.0], [48.1, 43.0], [48.2, 43.0], [48.3, 43.0], [48.4, 43.0], [48.5, 43.0], [48.6, 43.0], [48.7, 43.0], [48.8, 43.0], [48.9, 43.0], [49.0, 43.0], [49.1, 43.0], [49.2, 43.0], [49.3, 43.0], [49.4, 43.0], [49.5, 43.0], [49.6, 43.0], [49.7, 43.0], [49.8, 43.0], [49.9, 43.0], [50.0, 43.0], [50.1, 43.0], [50.2, 43.0], [50.3, 43.0], [50.4, 43.0], [50.5, 43.0], [50.6, 43.0], [50.7, 43.0], [50.8, 43.0], [50.9, 43.0], [51.0, 43.0], [51.1, 43.0], [51.2, 43.0], [51.3, 43.0], [51.4, 43.0], [51.5, 43.0], [51.6, 43.0], [51.7, 43.0], [51.8, 43.0], [51.9, 43.0], [52.0, 43.0], [52.1, 43.0], [52.2, 43.0], [52.3, 43.0], [52.4, 43.0], [52.5, 43.0], [52.6, 43.0], [52.7, 44.0], [52.8, 44.0], [52.9, 44.0], [53.0, 44.0], [53.1, 44.0], [53.2, 44.0], [53.3, 44.0], [53.4, 44.0], [53.5, 44.0], [53.6, 44.0], [53.7, 44.0], [53.8, 44.0], [53.9, 44.0], [54.0, 44.0], [54.1, 44.0], [54.2, 44.0], [54.3, 44.0], [54.4, 44.0], [54.5, 44.0], [54.6, 44.0], [54.7, 44.0], [54.8, 44.0], [54.9, 44.0], [55.0, 44.0], [55.1, 44.0], [55.2, 44.0], [55.3, 44.0], [55.4, 44.0], [55.5, 44.0], [55.6, 44.0], [55.7, 44.0], [55.8, 44.0], [55.9, 44.0], [56.0, 44.0], [56.1, 44.0], [56.2, 44.0], [56.3, 44.0], [56.4, 44.0], [56.5, 44.0], [56.6, 44.0], [56.7, 44.0], [56.8, 44.0], [56.9, 44.0], [57.0, 45.0], [57.1, 45.0], [57.2, 45.0], [57.3, 45.0], [57.4, 45.0], [57.5, 45.0], [57.6, 45.0], [57.7, 45.0], [57.8, 45.0], [57.9, 45.0], [58.0, 45.0], [58.1, 45.0], [58.2, 45.0], [58.3, 45.0], [58.4, 45.0], [58.5, 45.0], [58.6, 45.0], [58.7, 45.0], [58.8, 45.0], [58.9, 45.0], [59.0, 45.0], [59.1, 45.0], [59.2, 45.0], [59.3, 45.0], [59.4, 45.0], [59.5, 45.0], [59.6, 45.0], [59.7, 45.0], [59.8, 45.0], [59.9, 45.0], [60.0, 45.0], [60.1, 46.0], [60.2, 46.0], [60.3, 46.0], [60.4, 46.0], [60.5, 46.0], [60.6, 46.0], [60.7, 46.0], [60.8, 46.0], [60.9, 46.0], [61.0, 46.0], [61.1, 46.0], [61.2, 46.0], [61.3, 46.0], [61.4, 46.0], [61.5, 46.0], [61.6, 46.0], [61.7, 46.0], [61.8, 46.0], [61.9, 46.0], [62.0, 46.0], [62.1, 46.0], [62.2, 46.0], [62.3, 46.0], [62.4, 46.0], [62.5, 46.0], [62.6, 46.0], [62.7, 46.0], [62.8, 46.0], [62.9, 46.0], [63.0, 46.0], [63.1, 46.0], [63.2, 46.0], [63.3, 46.0], [63.4, 46.0], [63.5, 46.0], [63.6, 46.0], [63.7, 46.0], [63.8, 46.0], [63.9, 46.0], [64.0, 47.0], [64.1, 47.0], [64.2, 47.0], [64.3, 47.0], [64.4, 47.0], [64.5, 47.0], [64.6, 47.0], [64.7, 47.0], [64.8, 47.0], [64.9, 47.0], [65.0, 47.0], [65.1, 47.0], [65.2, 47.0], [65.3, 47.0], [65.4, 47.0], [65.5, 47.0], [65.6, 47.0], [65.7, 47.0], [65.8, 47.0], [65.9, 47.0], [66.0, 47.0], [66.1, 47.0], [66.2, 47.0], [66.3, 47.0], [66.4, 47.0], [66.5, 47.0], [66.6, 47.0], [66.7, 47.0], [66.8, 47.0], [66.9, 47.0], [67.0, 47.0], [67.1, 47.0], [67.2, 47.0], [67.3, 47.0], [67.4, 47.0], [67.5, 47.0], [67.6, 48.0], [67.7, 48.0], [67.8, 48.0], [67.9, 48.0], [68.0, 48.0], [68.1, 48.0], [68.2, 48.0], [68.3, 48.0], [68.4, 48.0], [68.5, 48.0], [68.6, 48.0], [68.7, 48.0], [68.8, 48.0], [68.9, 48.0], [69.0, 48.0], [69.1, 48.0], [69.2, 48.0], [69.3, 48.0], [69.4, 48.0], [69.5, 48.0], [69.6, 48.0], [69.7, 48.0], [69.8, 48.0], [69.9, 48.0], [70.0, 48.0], [70.1, 48.0], [70.2, 48.0], [70.3, 48.0], [70.4, 48.0], [70.5, 48.0], [70.6, 48.0], [70.7, 48.0], [70.8, 48.0], [70.9, 48.0], [71.0, 48.0], [71.1, 48.0], [71.2, 48.0], [71.3, 48.0], [71.4, 48.0], [71.5, 48.0], [71.6, 48.0], [71.7, 49.0], [71.8, 49.0], [71.9, 49.0], [72.0, 49.0], [72.1, 49.0], [72.2, 49.0], [72.3, 49.0], [72.4, 49.0], [72.5, 49.0], [72.6, 49.0], [72.7, 49.0], [72.8, 49.0], [72.9, 49.0], [73.0, 49.0], [73.1, 49.0], [73.2, 49.0], [73.3, 49.0], [73.4, 49.0], [73.5, 49.0], [73.6, 49.0], [73.7, 49.0], [73.8, 49.0], [73.9, 49.0], [74.0, 49.0], [74.1, 49.0], [74.2, 49.0], [74.3, 49.0], [74.4, 49.0], [74.5, 49.0], [74.6, 49.0], [74.7, 49.0], [74.8, 49.0], [74.9, 50.0], [75.0, 50.0], [75.1, 50.0], [75.2, 50.0], [75.3, 50.0], [75.4, 50.0], [75.5, 50.0], [75.6, 50.0], [75.7, 50.0], [75.8, 50.0], [75.9, 50.0], [76.0, 50.0], [76.1, 50.0], [76.2, 50.0], [76.3, 50.0], [76.4, 50.0], [76.5, 50.0], [76.6, 50.0], [76.7, 50.0], [76.8, 50.0], [76.9, 50.0], [77.0, 50.0], [77.1, 50.0], [77.2, 50.0], [77.3, 50.0], [77.4, 50.0], [77.5, 50.0], [77.6, 50.0], [77.7, 50.0], [77.8, 50.0], [77.9, 50.0], [78.0, 51.0], [78.1, 51.0], [78.2, 51.0], [78.3, 51.0], [78.4, 51.0], [78.5, 51.0], [78.6, 51.0], [78.7, 51.0], [78.8, 51.0], [78.9, 51.0], [79.0, 51.0], [79.1, 51.0], [79.2, 51.0], [79.3, 51.0], [79.4, 51.0], [79.5, 51.0], [79.6, 51.0], [79.7, 51.0], [79.8, 51.0], [79.9, 51.0], [80.0, 51.0], [80.1, 51.0], [80.2, 51.0], [80.3, 51.0], [80.4, 51.0], [80.5, 51.0], [80.6, 51.0], [80.7, 52.0], [80.8, 52.0], [80.9, 52.0], [81.0, 52.0], [81.1, 52.0], [81.2, 52.0], [81.3, 52.0], [81.4, 52.0], [81.5, 52.0], [81.6, 52.0], [81.7, 52.0], [81.8, 52.0], [81.9, 52.0], [82.0, 52.0], [82.1, 52.0], [82.2, 52.0], [82.3, 52.0], [82.4, 52.0], [82.5, 52.0], [82.6, 52.0], [82.7, 52.0], [82.8, 52.0], [82.9, 53.0], [83.0, 53.0], [83.1, 53.0], [83.2, 53.0], [83.3, 53.0], [83.4, 53.0], [83.5, 53.0], [83.6, 53.0], [83.7, 53.0], [83.8, 53.0], [83.9, 53.0], [84.0, 53.0], [84.1, 53.0], [84.2, 53.0], [84.3, 53.0], [84.4, 53.0], [84.5, 53.0], [84.6, 53.0], [84.7, 53.0], [84.8, 54.0], [84.9, 54.0], [85.0, 54.0], [85.1, 54.0], [85.2, 54.0], [85.3, 54.0], [85.4, 54.0], [85.5, 54.0], [85.6, 54.0], [85.7, 54.0], [85.8, 54.0], [85.9, 54.0], [86.0, 54.0], [86.1, 54.0], [86.2, 54.0], [86.3, 55.0], [86.4, 55.0], [86.5, 55.0], [86.6, 55.0], [86.7, 55.0], [86.8, 55.0], [86.9, 55.0], [87.0, 55.0], [87.1, 55.0], [87.2, 55.0], [87.3, 55.0], [87.4, 55.0], [87.5, 55.0], [87.6, 55.0], [87.7, 55.0], [87.8, 55.0], [87.9, 56.0], [88.0, 56.0], [88.1, 56.0], [88.2, 56.0], [88.3, 56.0], [88.4, 56.0], [88.5, 56.0], [88.6, 56.0], [88.7, 56.0], [88.8, 56.0], [88.9, 56.0], [89.0, 56.0], [89.1, 56.0], [89.2, 56.0], [89.3, 56.0], [89.4, 57.0], [89.5, 57.0], [89.6, 57.0], [89.7, 57.0], [89.8, 57.0], [89.9, 57.0], [90.0, 57.0], [90.1, 57.0], [90.2, 57.0], [90.3, 57.0], [90.4, 58.0], [90.5, 58.0], [90.6, 58.0], [90.7, 58.0], [90.8, 58.0], [90.9, 58.0], [91.0, 58.0], [91.1, 59.0], [91.2, 59.0], [91.3, 59.0], [91.4, 59.0], [91.5, 59.0], [91.6, 59.0], [91.7, 59.0], [91.8, 60.0], [91.9, 60.0], [92.0, 60.0], [92.1, 60.0], [92.2, 60.0], [92.3, 60.0], [92.4, 60.0], [92.5, 61.0], [92.6, 61.0], [92.7, 61.0], [92.8, 61.0], [92.9, 61.0], [93.0, 61.0], [93.1, 61.0], [93.2, 62.0], [93.3, 62.0], [93.4, 62.0], [93.5, 62.0], [93.6, 63.0], [93.7, 63.0], [93.8, 63.0], [93.9, 63.0], [94.0, 64.0], [94.1, 64.0], [94.2, 65.0], [94.3, 65.0], [94.4, 66.0], [94.5, 66.0], [94.6, 67.0], [94.7, 68.0], [94.8, 70.0], [94.9, 71.0], [95.0, 71.0], [95.1, 74.0], [95.2, 76.0], [95.3, 77.0], [95.4, 80.0], [95.5, 86.0], [95.6, 121.0], [95.7, 129.0], [95.8, 131.0], [95.9, 134.0], [96.0, 136.0], [96.1, 142.0], [96.2, 147.0], [96.3, 149.0], [96.4, 151.0], [96.5, 153.0], [96.6, 154.0], [96.7, 156.0], [96.8, 158.0], [96.9, 158.0], [97.0, 160.0], [97.1, 160.0], [97.2, 161.0], [97.3, 162.0], [97.4, 164.0], [97.5, 165.0], [97.6, 169.0], [97.7, 176.0], [97.8, 178.0], [97.9, 180.0], [98.0, 182.0], [98.1, 184.0], [98.2, 187.0], [98.3, 189.0], [98.4, 189.0], [98.5, 190.0], [98.6, 191.0], [98.7, 194.0], [98.8, 195.0], [98.9, 197.0], [99.0, 199.0], [99.1, 201.0], [99.2, 202.0], [99.3, 203.0], [99.4, 205.0], [99.5, 206.0], [99.6, 209.0], [99.7, 211.0], [99.8, 215.0], [99.9, 225.0], [100.0, 231.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4999.0, "series": [{"data": [[0.0, 4999.0], [100.0, 1.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 121.0], [600.0, 464.0], [700.0, 200.0], [200.0, 223.0], [800.0, 204.0], [900.0, 267.0], [1000.0, 434.0], [1100.0, 228.0], [300.0, 165.0], [1200.0, 486.0], [1300.0, 1008.0], [1400.0, 24.0], [100.0, 223.0], [400.0, 422.0], [500.0, 531.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 4779.0], [100.0, 172.0], [200.0, 49.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3838.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 11162.0, "series": [{"data": [[0.0, 11162.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3838.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 62.115200000000016, "minX": 1.6690182E12, "maxY": 1043.8198, "series": [{"data": [[1.6690182E12, 1043.8198]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.6690182E12, 102.29780000000002]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.6690182E12, 62.115200000000016]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6690182E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.0, "maxY": 1403.5, "series": [{"data": [[3.0, 67.0], [7.0, 64.5], [8.0, 64.0], [10.0, 65.0], [13.0, 63.0], [14.0, 63.5], [16.0, 65.0], [18.0, 62.5], [20.0, 53.333333333333336], [21.0, 43.5], [23.0, 31.0], [24.0, 24.0], [25.0, 23.0], [26.0, 45.57142857142857], [28.0, 41.75], [29.0, 31.5], [30.0, 31.5], [31.0, 29.5], [33.0, 45.5], [32.0, 54.85714285714286], [34.0, 31.0], [35.0, 52.6], [36.0, 54.5], [37.0, 36.625], [39.0, 57.8], [38.0, 48.74999999999999], [41.0, 50.25], [40.0, 51.125], [43.0, 48.70000000000001], [42.0, 60.46153846153845], [45.0, 48.86363636363636], [44.0, 51.142857142857146], [47.0, 51.285714285714285], [46.0, 46.52173913043479], [49.0, 52.576923076923066], [48.0, 49.51999999999999], [51.0, 49.30303030303029], [50.0, 52.63157894736842], [53.0, 50.875], [52.0, 51.25], [55.0, 49.56410256410256], [54.0, 50.268292682926834], [57.0, 51.48837209302326], [56.0, 49.62790697674418], [59.0, 50.776119402985074], [58.0, 52.48780487804878], [61.0, 51.83333333333334], [60.0, 51.50000000000001], [62.0, 52.41666666666666], [63.0, 52.835616438356176], [66.0, 53.48387096774195], [64.0, 52.53191489361703], [65.0, 52.44827586206896], [67.0, 53.98823529411764], [71.0, 52.51020408163263], [69.0, 53.27272727272728], [68.0, 53.019607843137244], [70.0, 54.05333333333331], [74.0, 56.744444444444426], [75.0, 57.14084507042255], [72.0, 53.44303797468355], [73.0, 54.752577319587644], [78.0, 54.78021978021978], [77.0, 53.73118279569893], [76.0, 55.48235294117646], [79.0, 55.28000000000001], [83.0, 56.9056603773585], [81.0, 55.982456140350884], [82.0, 56.051724137931046], [80.0, 55.99999999999998], [87.0, 56.188679245283], [86.0, 56.980769230769226], [85.0, 54.06000000000001], [84.0, 57.183673469387756], [90.0, 57.84210526315791], [89.0, 57.61224489795918], [88.0, 59.20000000000001], [91.0, 59.425531914893625], [94.0, 58.15217391304348], [92.0, 55.153846153846146], [95.0, 58.99999999999999], [93.0, 58.08108108108108], [96.0, 56.56], [99.0, 65.26315789473684], [98.0, 61.70588235294117], [97.0, 58.87499999999999], [101.0, 61.84615384615385], [100.0, 61.086956521739125], [102.0, 60.6875], [103.0, 62.800000000000004], [107.0, 59.93333333333333], [104.0, 63.94444444444444], [106.0, 63.18181818181818], [105.0, 67.78947368421053], [111.0, 62.87500000000001], [108.0, 62.34782608695652], [110.0, 61.64285714285714], [109.0, 61.99999999999999], [115.0, 63.59999999999999], [113.0, 56.72413793103448], [114.0, 62.0], [112.0, 62.61538461538462], [119.0, 62.85714285714287], [118.0, 62.0], [117.0, 62.111111111111114], [116.0, 62.95833333333333], [123.0, 63.58333333333334], [122.0, 63.470588235294116], [121.0, 61.142857142857146], [120.0, 59.916666666666664], [124.0, 66.66666666666664], [127.0, 59.0], [126.0, 56.1764705882353], [125.0, 64.24999999999999], [135.0, 63.33333333333332], [134.0, 64.66666666666666], [132.0, 64.60000000000001], [130.0, 60.0], [129.0, 63.74999999999999], [128.0, 61.133333333333326], [133.0, 63.56249999999999], [131.0, 61.52941176470589], [143.0, 66.07692307692308], [142.0, 65.15], [141.0, 64.35714285714285], [139.0, 63.71428571428573], [137.0, 63.81818181818182], [140.0, 64.9090909090909], [138.0, 62.70588235294117], [136.0, 65.16666666666667], [148.0, 65.66666666666667], [146.0, 65.72222222222221], [144.0, 64.6470588235294], [151.0, 64.25], [150.0, 62.64999999999999], [149.0, 63.6], [147.0, 67.85714285714286], [145.0, 65.42857142857143], [158.0, 62.6], [157.0, 66.75], [156.0, 63.99999999999999], [155.0, 63.24999999999999], [154.0, 65.5], [152.0, 63.4375], [159.0, 60.111111111111114], [153.0, 60.545454545454554], [160.0, 60.0], [163.0, 65.39999999999998], [162.0, 60.66666666666667], [161.0, 60.0], [166.0, 63.99999999999999], [165.0, 63.42857142857143], [167.0, 69.5], [164.0, 60.4], [172.0, 71.4], [171.0, 57.75], [170.0, 59.63636363636363], [169.0, 60.29411764705882], [175.0, 64.2], [174.0, 65.33333333333333], [173.0, 65.66666666666667], [168.0, 60.380952380952394], [183.0, 64.0], [182.0, 66.33333333333333], [181.0, 73.0], [179.0, 64.875], [180.0, 63.0625], [178.0, 68.33333333333333], [177.0, 71.25], [176.0, 64.0], [186.0, 63.44444444444444], [185.0, 64.0], [184.0, 63.666666666666664], [190.0, 66.69230769230771], [189.0, 63.86666666666667], [187.0, 69.55555555555556], [191.0, 70.33333333333333], [188.0, 65.0], [199.0, 67.86486486486487], [198.0, 61.67857142857142], [197.0, 67.0], [196.0, 65.11111111111111], [195.0, 73.25], [194.0, 65.83333333333333], [193.0, 74.00000000000001], [192.0, 72.52777777777776], [207.0, 66.33333333333334], [206.0, 67.0], [205.0, 64.14285714285714], [204.0, 70.125], [202.0, 66.875], [201.0, 67.5], [200.0, 68.23076923076924], [203.0, 74.6], [215.0, 69.0], [214.0, 65.66666666666667], [213.0, 58.0], [212.0, 67.45833333333333], [210.0, 66.0], [208.0, 65.2], [211.0, 59.0], [209.0, 58.0], [217.0, 64.77777777777777], [216.0, 64.66666666666667], [222.0, 64.625], [220.0, 67.0], [223.0, 65.71428571428572], [221.0, 68.12121212121214], [219.0, 64.0], [218.0, 64.42857142857143], [231.0, 60.0], [230.0, 64.14285714285714], [229.0, 64.71428571428571], [228.0, 63.61538461538462], [227.0, 67.75], [226.0, 63.8125], [224.0, 68.16666666666666], [225.0, 64.33333333333333], [239.0, 61.1], [236.0, 59.35714285714286], [235.0, 59.92307692307692], [234.0, 61.6], [233.0, 62.5], [232.0, 64.71428571428571], [237.0, 62.33333333333333], [238.0, 58.5], [242.0, 60.42857142857142], [241.0, 59.8], [240.0, 62.1], [247.0, 65.0], [246.0, 63.5], [245.0, 60.333333333333336], [243.0, 56.6], [249.0, 58.5], [248.0, 57.75], [250.0, 56.5], [1.0, 65.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[102.29640000000009, 57.56260000000015]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 1377.0], [4.0, 1365.5], [7.0, 1363.6666666666667], [10.0, 1360.0], [12.0, 1352.0], [14.0, 1378.0], [15.0, 1347.0], [17.0, 1385.0], [19.0, 1352.0], [21.0, 1348.0], [22.0, 1388.0], [25.0, 1353.0], [26.0, 1365.0], [28.0, 1339.0], [29.0, 1398.0], [31.0, 1349.0], [33.0, 1365.0], [32.0, 1372.0], [34.0, 1398.0], [37.0, 1369.6666666666667], [39.0, 1382.0], [40.0, 1300.0], [43.0, 1361.0], [42.0, 1398.0], [46.0, 1396.0], [47.0, 1306.0], [49.0, 1354.0], [48.0, 1398.0], [50.0, 1348.6666666666667], [52.0, 1402.0], [55.0, 1308.5], [54.0, 1356.0], [56.0, 1389.0], [59.0, 1361.3333333333333], [61.0, 1379.5], [63.0, 1383.5], [67.0, 1370.0], [66.0, 1300.5], [65.0, 1398.0], [75.0, 1384.0], [74.0, 1400.0], [73.0, 1349.3333333333333], [72.0, 1317.0], [77.0, 1372.0], [76.0, 1269.0], [83.0, 1325.0], [82.0, 1401.0], [81.0, 1403.0], [86.0, 1271.0], [85.0, 1344.3333333333333], [84.0, 1339.0], [91.0, 1369.3333333333333], [90.0, 1403.5], [94.0, 1359.0], [99.0, 1364.0], [96.0, 1335.0], [103.0, 821.4], [100.0, 899.0], [102.0, 1401.0], [107.0, 27.333333333333332], [106.0, 413.2857142857143], [104.0, 26.0], [111.0, 30.0], [109.0, 336.0], [110.0, 1358.0], [108.0, 1396.0], [113.0, 830.6], [112.0, 27.0], [118.0, 1324.3333333333333], [116.0, 1401.0], [122.0, 38.0], [123.0, 1395.3333333333333], [121.0, 1402.0], [120.0, 1363.0], [127.0, 1344.0], [124.0, 1402.0], [131.0, 135.76923076923077], [130.0, 371.5], [128.0, 714.0], [132.0, 1385.0], [129.0, 1343.0], [143.0, 1388.6666666666667], [140.0, 1391.3333333333333], [141.0, 1290.0], [138.0, 1361.0], [150.0, 52.8], [148.0, 51.0], [147.0, 56.25], [146.0, 54.83333333333333], [149.0, 62.5], [145.0, 57.0], [144.0, 61.333333333333336], [151.0, 1344.2857142857142], [154.0, 689.0], [159.0, 75.0], [157.0, 732.0], [156.0, 74.0], [155.0, 74.0], [158.0, 1355.3333333333333], [153.0, 1386.0], [162.0, 70.5], [160.0, 71.0], [167.0, 1304.0], [165.0, 1317.0], [161.0, 1387.3333333333333], [173.0, 79.0], [172.0, 83.0], [171.0, 1356.5], [170.0, 1378.0], [169.0, 1384.0], [168.0, 1382.0], [182.0, 80.25], [181.0, 81.0], [183.0, 85.0], [178.0, 1042.5], [177.0, 77.0], [179.0, 1350.0], [176.0, 1368.5], [187.0, 332.4], [188.0, 732.25], [184.0, 83.0], [190.0, 1372.0], [189.0, 1350.0], [185.0, 1357.75], [186.0, 1380.0], [198.0, 1366.3333333333333], [196.0, 1375.0], [195.0, 1350.5], [193.0, 1326.0], [207.0, 1369.5], [206.0, 1350.5], [204.0, 1363.0], [201.0, 1338.6666666666667], [213.0, 1365.0], [211.0, 1358.0], [210.0, 1325.0], [209.0, 1359.5], [208.0, 1371.0], [223.0, 95.5], [221.0, 720.5], [220.0, 717.5], [218.0, 1361.3333333333333], [216.0, 1348.5], [231.0, 92.5], [230.0, 841.0], [228.0, 94.0], [227.0, 519.3333333333334], [226.0, 929.3333333333334], [225.0, 88.0], [224.0, 81.0], [229.0, 1360.0], [234.0, 91.33333333333333], [232.0, 87.0], [239.0, 1339.5], [237.0, 1357.0], [236.0, 1349.0], [233.0, 1361.0], [246.0, 100.0], [245.0, 95.0], [244.0, 1329.0], [242.0, 1355.0], [240.0, 1344.3333333333333], [252.0, 513.6666666666667], [250.0, 98.33333333333333], [248.0, 1089.8], [255.0, 1355.0], [254.0, 1315.0], [251.0, 1346.3333333333333], [259.0, 1344.5], [271.0, 1347.0], [270.0, 1317.6666666666667], [267.0, 1334.25], [264.0, 1318.3333333333333], [261.0, 1321.0], [258.0, 1316.0], [257.0, 1325.0], [256.0, 1340.0], [274.0, 103.5], [287.0, 1325.5], [284.0, 1325.3333333333333], [281.0, 1325.0], [279.0, 1324.3333333333333], [276.0, 1339.25], [272.0, 1333.0], [291.0, 110.0], [297.0, 717.1666666666667], [294.0, 518.0], [293.0, 707.0], [292.0, 1314.0], [290.0, 1025.75], [295.0, 1313.0], [288.0, 1330.0], [303.0, 1305.0], [302.0, 1301.0], [300.0, 1297.0], [299.0, 1299.0], [298.0, 1293.0], [317.0, 116.0], [318.0, 818.8], [316.0, 115.0], [311.0, 1322.0], [306.0, 1315.0], [304.0, 1308.0], [307.0, 1309.0], [314.0, 914.6666666666666], [313.0, 115.0], [310.0, 919.0], [309.0, 121.0], [308.0, 1311.5], [319.0, 1287.0], [312.0, 1323.0], [315.0, 1323.0], [332.0, 1001.5], [334.0, 414.0], [330.0, 117.0], [329.0, 1007.5], [335.0, 1300.0], [333.0, 1287.0], [326.0, 1301.0], [322.0, 1297.0], [320.0, 1282.0], [325.0, 1298.0], [324.0, 1287.0], [350.0, 511.6666666666667], [348.0, 516.3333333333333], [347.0, 903.3333333333334], [349.0, 1293.0], [346.0, 1299.5], [345.0, 1291.0], [344.0, 1289.0], [342.0, 1291.0], [338.0, 1290.5], [336.0, 1285.0], [341.0, 1286.0], [340.0, 1290.0], [367.0, 1278.0], [365.0, 1287.5], [363.0, 1289.5], [361.0, 1289.0], [360.0, 1293.0], [359.0, 1294.0], [358.0, 1282.0], [356.0, 1293.0], [355.0, 1294.6666666666667], [352.0, 1292.5], [382.0, 1297.0], [372.0, 1296.0], [371.0, 1280.0], [370.0, 1284.5], [368.0, 1288.5], [398.0, 1313.0], [399.0, 1292.0], [397.0, 1279.0], [386.0, 1279.0], [384.0, 1276.0], [395.0, 1285.0], [394.0, 1280.0], [393.0, 1326.0], [392.0, 1279.0], [391.0, 1300.3333333333333], [389.0, 1309.0], [388.0, 1284.0], [413.0, 1003.0], [414.0, 134.5], [412.0, 719.0], [403.0, 1305.0], [401.0, 1283.5], [410.0, 127.0], [409.0, 140.0], [408.0, 709.5], [407.0, 537.6666666666667], [405.0, 900.3333333333334], [406.0, 1285.0], [415.0, 1308.0], [429.0, 724.0], [431.0, 130.5], [430.0, 514.3333333333333], [427.0, 520.0], [426.0, 146.33333333333334], [425.0, 634.2857142857143], [428.0, 733.5], [419.0, 1269.0], [418.0, 1255.0], [422.0, 1269.5], [421.0, 1288.0], [420.0, 1313.0], [423.0, 1318.0], [434.0, 127.0], [432.0, 151.33333333333334], [440.0, 437.75], [447.0, 989.75], [446.0, 1332.0], [437.0, 130.5], [439.0, 517.3333333333333], [438.0, 1300.0], [436.0, 426.0], [433.0, 1047.8], [445.0, 740.0], [444.0, 149.75], [435.0, 1266.5], [441.0, 731.5], [442.0, 1259.0], [450.0, 690.5], [458.0, 140.8], [456.0, 683.5], [454.0, 530.6666666666667], [452.0, 910.6666666666666], [453.0, 1263.0], [448.0, 142.0], [460.0, 1291.6666666666667], [451.0, 1271.5], [457.0, 1261.0], [455.0, 1295.0], [471.0, 702.5], [472.0, 731.0], [470.0, 712.5], [469.0, 624.7142857142857], [468.0, 139.36363636363635], [478.0, 1265.0], [476.0, 1341.0], [465.0, 1264.0], [464.0, 1290.25], [475.0, 1283.5], [473.0, 1307.5], [494.0, 185.5], [495.0, 1293.25], [492.0, 1352.0], [491.0, 1320.0], [488.0, 1272.3333333333333], [485.0, 1310.0], [483.0, 1286.0], [482.0, 1309.6666666666667], [480.0, 1257.0], [511.0, 166.2857142857143], [507.0, 331.7692307692308], [505.0, 471.1818181818182], [504.0, 170.16666666666666], [503.0, 337.0], [502.0, 327.28571428571433], [501.0, 501.8571428571429], [500.0, 180.7142857142857], [510.0, 507.0], [509.0, 535.0], [508.0, 181.83333333333331], [498.0, 841.2], [496.0, 183.0], [499.0, 188.0], [506.0, 172.33333333333334], [516.0, 184.33333333333334], [521.0, 1064.8], [520.0, 190.0], [519.0, 158.0], [536.0, 207.0], [538.0, 205.0], [537.0, 1023.0], [541.0, 233.66666666666666], [540.0, 1312.3333333333333], [531.0, 204.5], [543.0, 211.0], [529.0, 1297.75], [542.0, 242.5], [534.0, 856.4], [535.0, 1245.5], [532.0, 196.0], [539.0, 196.0], [518.0, 183.0], [517.0, 552.0], [515.0, 638.0], [514.0, 144.0], [513.0, 652.8571428571428], [512.0, 155.0], [526.0, 1306.6666666666667], [522.0, 1303.0], [549.0, 455.6], [550.0, 883.6], [551.0, 289.0], [568.0, 269.8181818181818], [569.0, 373.4], [572.0, 276.7142857142857], [571.0, 282.4], [573.0, 1035.5], [570.0, 525.125], [547.0, 244.0], [548.0, 953.3333333333334], [546.0, 210.0], [545.0, 662.5], [561.0, 385.375], [562.0, 772.5], [565.0, 254.5], [564.0, 788.5], [563.0, 258.44444444444446], [566.0, 262.77777777777777], [567.0, 900.0], [560.0, 384.75], [557.0, 238.66666666666666], [555.0, 1034.75], [554.0, 744.5], [553.0, 784.0], [552.0, 237.0], [558.0, 784.75], [559.0, 467.6], [575.0, 393.99999999999994], [574.0, 259.0], [580.0, 225.33333333333334], [585.0, 263.4666666666667], [584.0, 249.88888888888889], [583.0, 346.6363636363636], [602.0, 1314.0], [600.0, 1285.0], [605.0, 322.0], [603.0, 1305.6666666666667], [607.0, 339.0], [606.0, 818.5], [582.0, 684.0], [581.0, 443.8333333333333], [593.0, 540.5], [595.0, 337.0], [594.0, 325.5], [599.0, 660.0], [598.0, 1304.6666666666667], [597.0, 324.0], [592.0, 534.25], [591.0, 417.71428571428567], [577.0, 562.7142857142857], [576.0, 288.33333333333337], [579.0, 504.44444444444446], [578.0, 263.75], [590.0, 274.3333333333333], [589.0, 698.5714285714286], [588.0, 554.0], [587.0, 489.0], [586.0, 282.66666666666663], [634.0, 349.5], [608.0, 561.25], [610.0, 338.0], [611.0, 1062.0], [615.0, 1346.0], [614.0, 1302.6666666666667], [633.0, 349.4], [632.0, 819.5], [635.0, 752.7142857142857], [637.0, 686.6666666666667], [636.0, 310.0], [639.0, 353.0], [638.0, 344.0], [609.0, 341.0], [626.0, 344.5], [625.0, 1305.0], [628.0, 825.0], [631.0, 1060.25], [630.0, 848.5], [624.0, 810.0], [623.0, 793.0], [622.0, 984.6666666666666], [621.0, 830.0], [620.0, 341.0], [619.0, 849.0], [618.0, 1272.0], [617.0, 1290.0], [646.0, 374.75], [642.0, 551.0], [640.0, 850.75], [645.0, 677.6666666666666], [644.0, 351.5], [643.0, 362.83333333333337], [641.0, 367.8], [648.0, 484.875], [647.0, 1008.0], [665.0, 868.0], [664.0, 861.5], [667.0, 854.1666666666667], [668.0, 407.0], [670.0, 638.75], [669.0, 388.0], [661.0, 846.75], [659.0, 1346.5], [656.0, 1323.3333333333333], [671.0, 706.0], [663.0, 383.0], [662.0, 394.0], [666.0, 700.8333333333334], [650.0, 366.25], [653.0, 1331.3333333333333], [652.0, 1302.0], [649.0, 688.0], [698.0, 706.6666666666667], [673.0, 415.0], [672.0, 588.8], [687.0, 431.0], [685.0, 639.25], [684.0, 716.6666666666667], [686.0, 428.0], [683.0, 1031.6666666666667], [682.0, 422.0], [681.0, 874.0], [680.0, 880.5], [699.0, 407.5], [700.0, 865.0], [702.0, 448.0], [701.0, 451.0], [697.0, 419.3333333333333], [696.0, 1073.7142857142858], [679.0, 1005.6666666666666], [678.0, 653.0], [677.0, 717.6666666666667], [676.0, 1013.0], [675.0, 425.5], [674.0, 868.5], [695.0, 701.3333333333333], [694.0, 426.3333333333333], [692.0, 409.0], [691.0, 438.375], [688.0, 726.2222222222222], [689.0, 416.0], [690.0, 432.0], [693.0, 680.1428571428571], [703.0, 1153.6], [710.0, 439.0], [722.0, 404.0], [718.0, 404.5], [719.0, 436.5], [711.0, 865.5], [729.0, 452.0], [730.0, 1333.6666666666667], [732.0, 458.0], [731.0, 442.6666666666667], [735.0, 444.5], [734.0, 1110.0], [733.0, 447.5], [709.0, 864.0], [708.0, 1116.75], [707.0, 893.5], [706.0, 421.0], [705.0, 1031.3333333333333], [704.0, 447.0], [717.0, 610.8888888888889], [713.0, 711.3333333333333], [712.0, 875.0], [714.0, 874.0], [716.0, 435.0], [715.0, 1021.0], [727.0, 885.25], [725.0, 723.0], [723.0, 431.0], [724.0, 1304.0], [721.0, 403.0], [720.0, 1128.0], [740.0, 887.375], [746.0, 435.3333333333333], [748.0, 1330.0], [750.0, 1338.0], [749.0, 1317.0], [737.0, 737.5], [736.0, 666.75], [745.0, 884.0], [744.0, 439.0], [743.0, 434.0], [763.0, 459.33333333333337], [762.0, 1373.0], [766.0, 999.0], [753.0, 1316.0], [756.0, 1367.0], [755.0, 1344.0], [758.0, 1331.5], [757.0, 1312.0], [764.0, 462.0], [742.0, 434.3333333333333], [741.0, 431.0], [739.0, 439.6666666666667], [738.0, 442.5], [796.0, 477.4], [772.0, 462.6666666666667], [773.0, 673.6923076923076], [771.0, 567.1111111111111], [770.0, 448.75], [769.0, 644.2], [774.0, 687.0], [768.0, 996.0000000000001], [781.0, 462.0], [783.0, 1311.0], [782.0, 1354.0], [780.0, 850.7142857142857], [779.0, 486.6666666666667], [778.0, 486.0], [776.0, 627.8333333333334], [777.0, 757.5], [799.0, 485.6], [785.0, 1065.6666666666667], [784.0, 480.0], [787.0, 1107.0], [786.0, 483.0], [789.0, 476.0], [788.0, 448.5], [791.0, 461.6666666666667], [790.0, 999.4], [798.0, 967.5555555555554], [797.0, 561.0], [795.0, 697.25], [793.0, 470.7142857142857], [792.0, 484.0], [775.0, 463.5], [794.0, 472.8571428571429], [805.0, 659.0], [806.0, 622.8333333333334], [807.0, 695.75], [825.0, 663.4], [827.0, 496.0], [826.0, 1347.6666666666667], [829.0, 1144.5], [828.0, 497.25], [831.0, 473.0], [830.0, 786.3333333333333], [804.0, 646.8], [803.0, 763.6666666666667], [802.0, 467.0], [801.0, 916.0], [800.0, 606.5714285714286], [818.0, 645.5], [817.0, 654.2], [820.0, 467.2], [819.0, 510.0], [822.0, 485.0], [823.0, 905.0], [821.0, 852.7142857142858], [816.0, 734.2857142857142], [815.0, 482.00000000000006], [813.0, 689.1666666666666], [814.0, 492.28571428571433], [810.0, 484.0], [812.0, 694.75], [811.0, 703.25], [809.0, 470.6], [808.0, 772.8333333333333], [835.0, 480.6666666666667], [833.0, 1124.75], [846.0, 516.5], [847.0, 1143.5], [849.0, 778.0], [850.0, 527.3333333333333], [855.0, 733.5], [854.0, 525.6666666666666], [853.0, 833.4999999999999], [852.0, 500.5], [851.0, 512.0], [848.0, 514.0], [845.0, 806.6666666666667], [844.0, 908.0], [843.0, 499.0], [842.0, 900.5], [841.0, 1359.0], [862.0, 658.8], [863.0, 527.25], [861.0, 723.75], [859.0, 505.57142857142856], [860.0, 522.0], [856.0, 844.6], [838.0, 1336.0], [837.0, 1369.5], [836.0, 1363.0], [858.0, 1055.3333333333333], [857.0, 693.0], [890.0, 958.5], [866.0, 687.4], [877.0, 520.375], [878.0, 663.1666666666666], [879.0, 532.0], [876.0, 513.75], [873.0, 523.8888888888889], [875.0, 672.1249999999999], [874.0, 663.0], [872.0, 523.8750000000001], [871.0, 667.764705882353], [889.0, 738.0], [888.0, 544.0], [891.0, 1029.4], [892.0, 1312.0], [894.0, 1377.0], [893.0, 1330.0], [881.0, 1024.0], [880.0, 876.4], [883.0, 706.4], [884.0, 520.0], [882.0, 787.6666666666667], [887.0, 755.5], [886.0, 955.0], [885.0, 632.8571428571429], [870.0, 513.2857142857143], [869.0, 522.6666666666666], [868.0, 672.8], [867.0, 828.75], [865.0, 513.0], [864.0, 921.25], [898.0, 559.5], [902.0, 537.0], [920.0, 1357.0], [923.0, 1377.0], [921.0, 1380.0], [901.0, 1185.8], [900.0, 952.0], [897.0, 964.0], [896.0, 1365.0], [909.0, 954.25], [907.0, 546.0], [908.0, 1321.0], [906.0, 1229.0], [926.0, 1359.0], [914.0, 1362.0], [919.0, 1378.0], [917.0, 1333.6666666666667], [925.0, 1380.0], [954.0, 560.0], [929.0, 562.25], [928.0, 1133.25], [943.0, 1332.5], [941.0, 1373.0], [940.0, 1366.0], [939.0, 1375.0], [938.0, 1359.0], [937.0, 1343.0], [931.0, 550.0], [930.0, 1380.0], [934.0, 1351.3333333333333], [932.0, 1368.5], [958.0, 969.75], [949.0, 1371.5], [946.0, 1349.3333333333333], [951.0, 962.5], [950.0, 1374.0], [956.0, 549.0], [955.0, 1146.75], [953.0, 549.0], [952.0, 1084.0], [967.0, 958.0], [970.0, 885.2], [974.0, 1355.0], [963.0, 1352.0], [960.0, 1355.3333333333333], [971.0, 1356.6666666666667], [969.0, 561.5], [968.0, 971.5], [991.0, 833.6666666666667], [979.0, 1152.75], [976.0, 1354.0], [981.0, 562.0], [980.0, 577.0], [983.0, 562.0], [982.0, 568.0], [990.0, 750.0], [989.0, 565.0], [988.0, 570.6], [987.0, 565.0], [986.0, 567.3333333333334], [985.0, 565.0], [984.0, 561.0], [995.0, 567.5], [996.0, 770.75], [998.0, 1364.8999999999999], [997.0, 1362.6666666666667], [993.0, 943.5], [994.0, 1370.0], [992.0, 570.0], [1003.0, 572.0], [1002.0, 1361.0], [1005.0, 1347.3333333333333], [1001.0, 572.0], [1000.0, 889.0], [999.0, 571.0], [1019.0, 975.75], [1023.0, 1368.0], [1011.0, 1373.6666666666665], [1022.0, 1343.75], [1013.0, 578.0], [1012.0, 582.0], [1015.0, 578.0], [1014.0, 1151.5], [1018.0, 575.0], [1017.0, 581.5], [1016.0, 1388.5], [1034.0, 967.0], [1044.0, 742.6], [1050.0, 1369.0], [1048.0, 1369.0], [1052.0, 1091.3333333333333], [1054.0, 586.5], [1028.0, 1334.0], [1024.0, 1351.0], [1032.0, 1354.0], [1030.0, 1320.0], [1042.0, 579.0], [1040.0, 1378.0], [1056.0, 591.0], [1060.0, 539.5], [1070.0, 1353.0], [1062.0, 1339.0], [1058.0, 783.5], [1036.0, 1074.3333333333333], [1074.0, 1352.0], [1038.0, 1376.0], [1082.0, 1333.0], [1080.0, 1336.5], [1084.0, 1368.0], [1140.0, 541.0], [1128.0, 542.0], [1136.0, 539.5], [1102.0, 1348.5], [1100.0, 1375.0], [1098.0, 1365.0], [1094.0, 1349.75], [1092.0, 551.0], [1090.0, 550.0], [1088.0, 1370.0], [1118.0, 1336.0], [1116.0, 1369.0], [1114.0, 557.0], [1112.0, 531.5], [1110.0, 1358.0], [1106.0, 1380.0], [1134.0, 1097.6666666666667], [1132.0, 535.0], [1130.0, 1157.0], [1142.0, 831.3333333333333], [1146.0, 1285.0], [1120.0, 1363.5], [1144.0, 1360.0], [1138.0, 1149.0], [1200.0, 742.8], [1156.0, 553.5], [1162.0, 548.0], [1164.0, 559.0], [1202.0, 577.75], [1204.0, 838.3333333333333], [1206.0, 954.5], [1210.0, 572.0], [1208.0, 840.6666666666667], [1212.0, 971.0], [1184.0, 887.8], [1186.0, 560.3333333333333], [1188.0, 567.5], [1190.0, 1377.0], [1192.0, 970.1666666666666], [1194.0, 820.5], [1198.0, 585.25], [1196.0, 699.2857142857142], [1166.0, 560.5], [1160.0, 544.0], [1158.0, 611.5], [1154.0, 956.0], [1182.0, 970.5], [1152.0, 1361.0], [1180.0, 566.25], [1178.0, 698.6666666666666], [1176.0, 662.25], [1174.0, 823.1111111111111], [1172.0, 742.8888888888889], [1170.0, 1103.6666666666667], [1168.0, 886.6], [1266.0, 865.3333333333334], [1268.0, 1053.4], [1270.0, 1333.0], [1220.0, 594.3333333333334], [1216.0, 1365.5], [1222.0, 1359.0], [1264.0, 1336.0], [1226.0, 1360.6666666666667], [1248.0, 588.0], [1250.0, 1338.0], [1254.0, 1349.0], [1252.0, 1343.5], [1258.0, 1345.0], [1256.0, 1351.0], [1276.0, 1321.0], [1246.0, 601.75], [1244.0, 856.0], [1242.0, 951.75], [1240.0, 980.0], [1236.0, 1332.0], [1232.0, 1360.0], [1338.0, 683.0], [1308.0, 658.5], [1310.0, 661.0], [1280.0, 1325.3333333333333], [1290.0, 1312.5], [1282.0, 1322.0], [1294.0, 1314.5], [1292.0, 1297.5], [1304.0, 730.75], [1302.0, 841.0], [1300.0, 962.5], [1298.0, 1293.0], [1296.0, 1294.5], [1306.0, 848.4], [1318.0, 741.9999999999999], [1320.0, 886.125], [1314.0, 659.5454545454546], [1312.0, 655.4], [1342.0, 1267.5], [1340.0, 1275.6666666666667], [1316.0, 656.8333333333333], [1328.0, 663.0], [1336.0, 1298.0], [1334.0, 1284.0], [1330.0, 1294.0], [1326.0, 807.25], [1324.0, 809.0], [1322.0, 650.1666666666666], [1406.0, 762.8571428571429], [1380.0, 969.0], [1368.0, 868.0], [1372.0, 1263.0], [1356.0, 1270.6666666666667], [1344.0, 1287.0], [1370.0, 1266.5], [1392.0, 653.0], [1394.0, 673.0], [1398.0, 1258.0], [1396.0, 1255.75], [1404.0, 1258.0], [1400.0, 1264.0], [1376.0, 647.0], [1378.0, 666.0], [1382.0, 1080.6666666666667], [1384.0, 653.0], [1366.0, 965.5], [1364.0, 972.0], [1362.0, 1262.0], [1388.0, 966.5], [1390.0, 1260.5], [1386.0, 1151.0], [1456.0, 968.5], [1440.0, 868.3333333333334], [1444.0, 683.25], [1430.0, 874.3333333333334], [1434.0, 970.5], [1436.0, 695.5], [1460.0, 859.0], [1462.0, 704.0], [1468.0, 1045.0], [1470.0, 1226.0], [1466.0, 1026.4], [1458.0, 705.0], [1438.0, 934.7777777777778], [1418.0, 1245.0], [1416.0, 1256.0], [1414.0, 1245.0], [1412.0, 1247.0], [1410.0, 1263.5], [1408.0, 1249.0], [1442.0, 739.3333333333334], [1428.0, 963.5], [1426.0, 1237.0], [1452.0, 870.6666666666666], [1454.0, 663.0], [1448.0, 841.8571428571428], [1450.0, 1233.0], [1446.0, 1011.0], [1484.0, 1045.3333333333333], [1486.0, 681.0], [1524.0, 1225.0], [1522.0, 1197.0], [1528.0, 1200.6666666666667], [1526.0, 1175.5], [1478.0, 709.0], [1530.0, 931.0], [1532.0, 688.0], [1534.0, 676.0], [1510.0, 952.875], [1506.0, 1187.0], [1504.0, 1197.0], [1514.0, 1185.0], [1512.0, 1202.5], [1482.0, 1077.2857142857142], [1480.0, 870.6666666666666], [1476.0, 695.0], [1474.0, 1102.0], [1502.0, 1241.0], [1500.0, 1203.3333333333333], [1490.0, 685.0], [1488.0, 957.6666666666666], [1550.0, 797.2], [1538.0, 828.5714285714286], [1540.0, 686.0], [1542.0, 848.6666666666666], [1544.0, 927.5], [1566.0, 1025.3333333333333], [1536.0, 1181.2], [1564.0, 890.2], [1562.0, 657.0], [1552.0, 679.0], [1554.0, 1174.0], [1560.0, 1184.0], [1586.0, 811.25], [1584.0, 1184.0], [1588.0, 838.3333333333334], [1568.0, 716.0], [1582.0, 1168.0], [1580.0, 1172.0], [1574.0, 1184.0], [1572.0, 1178.0], [1570.0, 1185.0], [1598.0, 1159.0], [1590.0, 856.0], [1594.0, 983.0], [1596.0, 1094.5], [1548.0, 941.3333333333334], [1546.0, 873.0], [1612.0, 855.6], [1604.0, 817.1111111111111], [1608.0, 778.0909090909091], [1634.0, 932.5], [1636.0, 936.6666666666666], [1638.0, 941.6666666666666], [1640.0, 938.1538461538463], [1642.0, 896.1818181818181], [1646.0, 881.1764705882352], [1644.0, 852.8181818181818], [1632.0, 830.2857142857142], [1614.0, 955.9285714285713], [1650.0, 893.7368421052632], [1648.0, 885.7368421052632], [1654.0, 902.75], [1658.0, 889.7692307692307], [1656.0, 932.3], [1662.0, 868.3636363636364], [1660.0, 931.125], [1652.0, 917.1538461538462], [1610.0, 959.6363636363636], [1606.0, 777.1666666666666], [1630.0, 929.0], [1626.0, 999.6999999999999], [1628.0, 986.5], [1602.0, 839.6666666666667], [1600.0, 866.6666666666666], [1624.0, 895.1333333333333], [1622.0, 942.2], [1620.0, 962.6874999999999], [1618.0, 936.7692307692307], [1616.0, 965.2941176470587], [1716.0, 1083.5], [1672.0, 1004.0], [1676.0, 927.7142857142857], [1680.0, 811.0], [1678.0, 1036.5], [1714.0, 1031.0], [1712.0, 1078.8], [1718.0, 1073.75], [1722.0, 1103.0], [1726.0, 1099.3333333333333], [1724.0, 1095.0], [1698.0, 1089.0], [1696.0, 1108.3333333333333], [1702.0, 1075.0], [1706.0, 1110.5], [1704.0, 1095.5], [1710.0, 1094.0], [1708.0, 1093.0], [1700.0, 1061.3333333333335], [1690.0, 1027.0], [1692.0, 1115.0], [1664.0, 985.0], [1694.0, 1063.0], [1670.0, 949.6666666666666], [1668.0, 1037.0], [1666.0, 910.3333333333334], [1688.0, 1024.6666666666667], [1686.0, 1028.0], [1684.0, 1088.6666666666667], [1682.0, 987.5], [1674.0, 1025.3333333333333], [1776.0, 1074.7142857142858], [1728.0, 1058.3333333333333], [1734.0, 1084.857142857143], [1738.0, 1092.0], [1736.0, 1086.0], [1742.0, 1095.0], [1740.0, 1082.0], [1778.0, 1077.0], [1782.0, 1075.75], [1780.0, 1085.0], [1786.0, 1069.6666666666667], [1790.0, 1092.0], [1788.0, 1053.0], [1784.0, 1067.8], [1760.0, 1063.5714285714287], [1770.0, 1061.5], [1774.0, 1066.0], [1772.0, 1099.0], [1768.0, 1061.5], [1766.0, 1056.0], [1764.0, 1075.5], [1762.0, 1066.75], [1732.0, 1077.090909090909], [1730.0, 1081.2857142857144], [1754.0, 1088.75], [1758.0, 1084.0], [1756.0, 1066.5], [1752.0, 1059.5], [1750.0, 1087.0], [1748.0, 1076.5], [1744.0, 1082.0], [1746.0, 1078.0], [1794.0, 1109.0], [1792.0, 1088.0], [1035.0, 588.0], [1051.0, 555.0], [1045.0, 583.0], [1049.0, 1375.0], [1047.0, 1351.8], [1055.0, 907.2857142857142], [1029.0, 1369.0], [1025.0, 1324.0], [1043.0, 709.5], [1041.0, 584.5], [1039.0, 842.3333333333333], [1059.0, 983.5], [1061.0, 1350.5], [1065.0, 1359.0], [1063.0, 1354.0], [1069.0, 1368.6666666666667], [1067.0, 1331.5], [1085.0, 1349.0], [1083.0, 1388.0], [1081.0, 1368.0], [1077.0, 1351.6666666666667], [1073.0, 1353.6666666666667], [1037.0, 1161.5], [1129.0, 542.0], [1089.0, 553.3333333333334], [1091.0, 780.0], [1093.0, 1338.0], [1115.0, 769.75], [1119.0, 1338.0], [1113.0, 1049.0], [1109.0, 1352.0], [1105.0, 1361.0], [1135.0, 537.0], [1133.0, 971.0], [1131.0, 569.0], [1127.0, 938.0], [1125.0, 1332.5], [1123.0, 1340.6666666666667], [1151.0, 1392.0], [1145.0, 1362.5], [1143.0, 1376.0], [1141.0, 1337.0], [1139.0, 539.0], [1137.0, 987.5], [1097.0, 1359.3333333333333], [1207.0, 544.0], [1161.0, 551.5], [1163.0, 557.0], [1165.0, 1278.9090909090908], [1167.0, 567.5], [1201.0, 570.5], [1203.0, 969.5], [1205.0, 560.0], [1211.0, 1092.3333333333333], [1209.0, 1363.0], [1213.0, 956.0], [1185.0, 797.0], [1215.0, 1365.5], [1187.0, 763.5], [1191.0, 556.6666666666666], [1189.0, 1117.6666666666667], [1193.0, 570.0], [1195.0, 579.0], [1197.0, 573.0], [1199.0, 819.3846153846154], [1155.0, 1015.2], [1153.0, 958.5], [1183.0, 835.6666666666667], [1181.0, 831.0], [1177.0, 552.8], [1179.0, 827.3333333333333], [1175.0, 564.1428571428572], [1173.0, 565.7142857142858], [1171.0, 559.8333333333333], [1169.0, 562.0], [1221.0, 1114.0], [1219.0, 961.5], [1217.0, 1368.0], [1223.0, 850.6666666666666], [1229.0, 1335.3333333333333], [1265.0, 626.0], [1267.0, 610.5], [1269.0, 856.6666666666666], [1251.0, 602.6666666666666], [1253.0, 1345.0], [1259.0, 1348.0], [1257.0, 1344.0], [1263.0, 1336.5], [1261.0, 1343.0], [1277.0, 1329.0], [1273.0, 1337.0], [1247.0, 1094.3333333333333], [1245.0, 790.75], [1243.0, 750.0], [1241.0, 614.5], [1239.0, 1146.0], [1233.0, 1363.3333333333333], [1295.0, 649.0], [1315.0, 649.8571428571428], [1321.0, 830.0], [1317.0, 924.1428571428572], [1311.0, 643.6], [1289.0, 1289.0], [1287.0, 1312.6], [1309.0, 653.9166666666667], [1307.0, 713.0833333333334], [1305.0, 662.2], [1303.0, 656.5], [1301.0, 640.6666666666666], [1299.0, 1293.0], [1319.0, 636.0], [1329.0, 663.0], [1331.0, 1272.0], [1337.0, 1275.0], [1333.0, 1288.0], [1339.0, 676.75], [1343.0, 668.5], [1341.0, 674.5], [1313.0, 655.5], [1327.0, 1072.6666666666667], [1325.0, 857.5], [1323.0, 815.5714285714286], [1405.0, 1060.0], [1369.0, 687.0], [1375.0, 1261.0], [1347.0, 1277.0], [1353.0, 1274.8], [1351.0, 1282.0], [1359.0, 1283.0], [1357.0, 1286.0], [1371.0, 1258.0], [1393.0, 967.5], [1395.0, 669.0], [1399.0, 1260.3333333333333], [1407.0, 1050.6666666666667], [1377.0, 701.0], [1379.0, 670.0], [1381.0, 663.0], [1383.0, 1118.75], [1385.0, 967.5], [1367.0, 977.0], [1365.0, 979.5], [1363.0, 1011.2857142857142], [1423.0, 1253.0], [1435.0, 779.5], [1429.0, 1104.0], [1433.0, 878.5], [1431.0, 711.0], [1437.0, 687.0], [1439.0, 683.5], [1457.0, 967.0], [1419.0, 1245.0], [1417.0, 1244.0], [1413.0, 1238.0], [1411.0, 1262.0], [1461.0, 1229.5], [1459.0, 1233.0], [1465.0, 697.25], [1471.0, 1227.0], [1463.0, 1035.3333333333333], [1441.0, 689.6], [1443.0, 905.4], [1427.0, 965.0], [1425.0, 682.0], [1451.0, 680.2857142857142], [1449.0, 686.3333333333334], [1453.0, 963.5], [1455.0, 1053.6666666666667], [1445.0, 782.0], [1447.0, 690.4545454545453], [1479.0, 951.0], [1529.0, 687.3333333333334], [1483.0, 701.5714285714286], [1481.0, 1224.0], [1485.0, 956.5], [1487.0, 698.0], [1531.0, 733.0], [1533.0, 695.0], [1509.0, 942.0], [1535.0, 1195.0], [1511.0, 677.0], [1513.0, 1190.0], [1519.0, 1186.0], [1517.0, 1201.3333333333333], [1477.0, 648.0], [1475.0, 646.0], [1473.0, 737.0], [1503.0, 1204.5], [1499.0, 1207.0], [1497.0, 1198.0], [1495.0, 1208.0], [1493.0, 1204.0], [1491.0, 1224.5], [1489.0, 1207.0], [1549.0, 806.5], [1539.0, 707.5], [1541.0, 1002.8], [1543.0, 689.0], [1545.0, 929.0], [1553.0, 814.75], [1555.0, 1191.5], [1559.0, 1195.0], [1557.0, 1189.0], [1567.0, 937.5], [1565.0, 685.0], [1563.0, 680.0], [1561.0, 1187.0], [1537.0, 658.0], [1551.0, 691.0], [1585.0, 1180.0], [1587.0, 933.5], [1583.0, 864.3333333333334], [1577.0, 1189.3333333333333], [1573.0, 1176.0], [1571.0, 1175.0], [1569.0, 1183.6666666666667], [1599.0, 1043.25], [1597.0, 1094.0], [1595.0, 1108.6666666666667], [1593.0, 1171.0], [1591.0, 1162.0], [1589.0, 1168.0], [1547.0, 689.5], [1649.0, 884.5999999999999], [1607.0, 772.8571428571429], [1605.0, 875.25], [1603.0, 961.25], [1631.0, 969.1111111111111], [1601.0, 1032.6666666666667], [1633.0, 930.8461538461539], [1615.0, 983.5384615384617], [1655.0, 909.75], [1663.0, 922.2222222222222], [1661.0, 871.5], [1657.0, 922.2222222222222], [1659.0, 876.3333333333334], [1653.0, 878.5714285714284], [1651.0, 958.3846153846154], [1613.0, 920.909090909091], [1611.0, 920.8], [1609.0, 910.5714285714286], [1635.0, 944.2727272727271], [1639.0, 981.7692307692307], [1637.0, 959.5384615384615], [1643.0, 948.2307692307693], [1641.0, 881.3499999999999], [1647.0, 887.0588235294117], [1645.0, 877.2777777777778], [1629.0, 960.3333333333333], [1627.0, 928.0000000000001], [1621.0, 933.8333333333334], [1623.0, 960.3076923076925], [1625.0, 1017.1818181818182], [1619.0, 949.75], [1617.0, 965.5714285714287], [1673.0, 919.0], [1689.0, 1020.0], [1679.0, 1024.3333333333333], [1713.0, 1057.3333333333333], [1717.0, 1101.6666666666667], [1727.0, 1099.6666666666667], [1725.0, 1099.0], [1723.0, 1097.6666666666667], [1721.0, 1104.6], [1719.0, 1117.0], [1715.0, 1069.5], [1697.0, 1089.3333333333333], [1699.0, 1096.5], [1703.0, 1085.3333333333333], [1705.0, 1080.75], [1711.0, 1057.0], [1709.0, 1091.0], [1707.0, 1086.0], [1701.0, 1093.0], [1677.0, 1002.25], [1675.0, 960.625], [1687.0, 1030.3333333333335], [1685.0, 895.6666666666666], [1683.0, 1002.6666666666666], [1681.0, 877.8000000000001], [1671.0, 870.0], [1669.0, 911.25], [1667.0, 918.75], [1665.0, 891.125], [1691.0, 1074.6], [1695.0, 1073.75], [1693.0, 1088.5], [1777.0, 1072.4], [1753.0, 1052.5], [1733.0, 1095.5], [1731.0, 1100.75], [1735.0, 1095.0], [1739.0, 1074.3333333333333], [1737.0, 1085.5], [1743.0, 1075.0], [1741.0, 1074.0], [1779.0, 1085.25], [1781.0, 1078.4], [1783.0, 1076.5], [1787.0, 1085.0], [1785.0, 1062.5], [1769.0, 1080.75], [1775.0, 1057.6666666666667], [1773.0, 1074.6666666666667], [1771.0, 1077.6], [1791.0, 1082.0], [1761.0, 1072.0], [1763.0, 1067.0], [1767.0, 1068.2], [1765.0, 1064.0], [1789.0, 1090.0], [1729.0, 1097.25], [1755.0, 1054.25], [1751.0, 1068.6666666666667], [1749.0, 1073.5], [1747.0, 1065.6666666666667], [1745.0, 1074.5], [1757.0, 1069.8], [1759.0, 1060.5], [1795.0, 1067.0], [1793.0, 1066.0], [1.0, 1363.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1043.8197999999993, 850.2280000000001]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 4.36842105263158], [3.0, 5.299999999999999], [4.0, 7.195652173913044], [5.0, 5.2], [6.0, 7.0256410256410255], [7.0, 7.421052631578947], [8.0, 13.153846153846155], [9.0, 20.307692307692307], [10.0, 19.666666666666664], [11.0, 21.333333333333332], [12.0, 30.25], [13.0, 24.900000000000002], [14.0, 27.53846153846154], [15.0, 26.18181818181818], [16.0, 33.53846153846153], [17.0, 36.047619047619044], [18.0, 29.416666666666664], [19.0, 34.1923076923077], [20.0, 30.17647058823529], [21.0, 34.72222222222223], [22.0, 33.62162162162163], [23.0, 39.8235294117647], [24.0, 41.972972972972975], [25.0, 43.083333333333336], [26.0, 40.86363636363637], [27.0, 43.241379310344826], [28.0, 41.166666666666664], [29.0, 42.8], [30.0, 40.59459459459458], [31.0, 40.25], [32.0, 41.40000000000001], [33.0, 40.51020408163266], [34.0, 43.67924528301888], [35.0, 41.48051948051947], [36.0, 40.40983606557377], [37.0, 39.80821917808219], [39.0, 41.85365853658536], [38.0, 39.67088607594937], [41.0, 41.55660377358492], [40.0, 41.76785714285714], [42.0, 41.717171717171716], [43.0, 43.05063291139243], [45.0, 42.05882352941176], [44.0, 42.71287128712871], [47.0, 43.10891089108911], [46.0, 43.40425531914893], [49.0, 44.05982905982904], [48.0, 44.32743362831857], [51.0, 43.421052631578966], [50.0, 42.97999999999998], [52.0, 46.41176470588237], [53.0, 44.36470588235294], [55.0, 44.98387096774192], [54.0, 45.07758620689654], [56.0, 44.92473118279568], [57.0, 44.91860465116279], [59.0, 44.55384615384616], [58.0, 44.670731707317096], [60.0, 44.013513513513516], [61.0, 44.67567567567566], [62.0, 45.28888888888889], [63.0, 43.46268656716418], [66.0, 41.87804878048781], [64.0, 43.41935483870967], [65.0, 45.31372549019608], [67.0, 45.64406779661017], [68.0, 44.04255319148937], [69.0, 47.1891891891892], [71.0, 47.048780487804876], [70.0, 47.3], [73.0, 45.08510638297873], [74.0, 44.559999999999995], [75.0, 46.65384615384616], [72.0, 45.56756756756757], [79.0, 43.96428571428571], [76.0, 45.99999999999999], [78.0, 45.96874999999999], [77.0, 46.87179487179487], [83.0, 46.10714285714285], [80.0, 45.038461538461526], [81.0, 45.416666666666664], [82.0, 43.80952380952381], [87.0, 45.32000000000001], [86.0, 46.29032258064515], [84.0, 46.92857142857143], [85.0, 48.1], [90.0, 50.83333333333333], [89.0, 45.83333333333333], [88.0, 50.55555555555556], [91.0, 46.857142857142854], [95.0, 46.2], [94.0, 48.166666666666664], [93.0, 45.714285714285715], [92.0, 46.2], [99.0, 46.42857142857143], [97.0, 51.7], [96.0, 53.0], [98.0, 38.0], [101.0, 47.75], [100.0, 50.0], [103.0, 48.0], [106.0, 46.25], [105.0, 43.77777777777778], [104.0, 45.44444444444444], [107.0, 42.5], [109.0, 55.0], [114.0, 42.90909090909091], [112.0, 44.666666666666664], [118.0, 42.0], [116.0, 47.666666666666664], [117.0, 58.0], [120.0, 39.0], [126.0, 41.0], [127.0, 60.25], [134.0, 52.5], [132.0, 49.0], [131.0, 52.0], [130.0, 51.5], [129.0, 59.785714285714285], [128.0, 53.7], [143.0, 48.5], [139.0, 47.0], [138.0, 48.0], [136.0, 47.5], [151.0, 166.1764705882353], [150.0, 130.0], [147.0, 44.0], [146.0, 46.0], [145.0, 48.0], [144.0, 48.0], [149.0, 49.5], [148.0, 48.166666666666664], [154.0, 73.0], [155.0, 87.71428571428571], [156.0, 5.5], [157.0, 66.0], [159.0, 86.33333333333333], [158.0, 39.0], [153.0, 161.66666666666666], [152.0, 56.0], [165.0, 88.66666666666667], [164.0, 148.5], [163.0, 135.16216216216222], [162.0, 184.0], [167.0, 34.0], [161.0, 57.0], [166.0, 61.0], [175.0, 152.5], [174.0, 41.2], [173.0, 104.0], [172.0, 82.5], [171.0, 43.39999999999999], [170.0, 70.0], [169.0, 103.4], [168.0, 5.0], [183.0, 122.16666666666667], [181.0, 69.0], [179.0, 65.60000000000001], [177.0, 114.0], [180.0, 41.66666666666667], [178.0, 62.857142857142854], [176.0, 4.0], [182.0, 65.66666666666667], [190.0, 137.5], [189.0, 116.5], [187.0, 156.8], [184.0, 105.33333333333333], [191.0, 58.0], [188.0, 59.333333333333336], [186.0, 60.0], [185.0, 74.0], [199.0, 119.5], [198.0, 130.25], [196.0, 147.66666666666666], [194.0, 184.5], [192.0, 71.5], [197.0, 55.25], [195.0, 50.0], [193.0, 51.0], [207.0, 215.0], [206.0, 189.0], [205.0, 190.0], [204.0, 135.0], [202.0, 191.0], [201.0, 104.5], [200.0, 54.0], [214.0, 213.0], [213.0, 191.33333333333334], [212.0, 194.0], [211.0, 213.0], [210.0, 195.0], [209.0, 215.0], [208.0, 195.0], [223.0, 197.66666666666666], [221.0, 196.0], [220.0, 211.0], [219.0, 200.0], [217.0, 69.0], [216.0, 179.33333333333334], [229.0, 197.0], [226.0, 190.0], [224.0, 188.0], [239.0, 155.5], [234.0, 203.0], [233.0, 190.0], [246.0, 138.99999999999997], [245.0, 170.0], [243.0, 160.92857142857142], [253.0, 159.75], [252.0, 127.33333333333334], [250.0, 167.0], [249.0, 151.0], [251.0, 138.06410256410257], [1.0, 4.666666666666667]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[62.115200000000065, 47.51239999999981]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1795.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 31083.333333333332, "minX": 1.6690182E12, "maxY": 65583.33333333333, "series": [{"data": [[1.6690182E12, 31083.333333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6690182E12, 65583.33333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6690182E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 47.51239999999981, "minX": 1.6690182E12, "maxY": 850.2280000000001, "series": [{"data": [[1.6690182E12, 57.56260000000015]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6690182E12, 850.2280000000001]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6690182E12, 47.51239999999981]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6690182E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 47.47879999999999, "minX": 1.6690182E12, "maxY": 849.9888000000001, "series": [{"data": [[1.6690182E12, 57.55579999999997]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6690182E12, 849.9888000000001]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6690182E12, 47.47879999999999]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6690182E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 8.056599999999992, "minX": 1.6690182E12, "maxY": 12.273799999999946, "series": [{"data": [[1.6690182E12, 8.056599999999992]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6690182E12, 9.035599999999986]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6690182E12, 12.273799999999946]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6690182E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.6690182E12, "maxY": 1407.0, "series": [{"data": [[1.6690182E12, 1407.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6690182E12, 1210.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6690182E12, 1380.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6690182E12, 1328.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6690182E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6690182E12, 59.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6690182E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 41.5, "minX": 507.0, "maxY": 1320.0, "series": [{"data": [[573.0, 1320.0], [875.0, 43.0], [1010.0, 42.0], [1212.0, 542.5], [1218.0, 41.5], [1219.0, 907.0], [1252.0, 1303.5], [1323.0, 45.0], [1324.0, 54.0], [1336.0, 55.5], [1508.0, 59.0], [1643.0, 71.0], [507.0, 56.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1643.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 41.5, "minX": 507.0, "maxY": 1320.0, "series": [{"data": [[573.0, 1320.0], [875.0, 43.0], [1010.0, 42.0], [1212.0, 542.5], [1218.0, 41.5], [1219.0, 907.0], [1252.0, 1303.5], [1323.0, 45.0], [1324.0, 54.0], [1336.0, 55.5], [1508.0, 59.0], [1643.0, 71.0], [507.0, 56.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1643.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 250.0, "minX": 1.6690182E12, "maxY": 250.0, "series": [{"data": [[1.6690182E12, 250.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6690182E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 250.0, "minX": 1.6690182E12, "maxY": 250.0, "series": [{"data": [[1.6690182E12, 250.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6690182E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.6690182E12, "maxY": 83.33333333333333, "series": [{"data": [[1.6690182E12, 83.33333333333333]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.6690182E12, 83.33333333333333]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.6690182E12, 83.33333333333333]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6690182E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 250.0, "minX": 1.6690182E12, "maxY": 250.0, "series": [{"data": [[1.6690182E12, 250.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6690182E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

