/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2129.0, "series": [{"data": [[0.0, 12.0], [0.1, 20.0], [0.2, 20.0], [0.3, 25.0], [0.4, 26.0], [0.5, 27.0], [0.6, 27.0], [0.7, 27.0], [0.8, 27.0], [0.9, 28.0], [1.0, 28.0], [1.1, 29.0], [1.2, 29.0], [1.3, 29.0], [1.4, 30.0], [1.5, 31.0], [1.6, 31.0], [1.7, 31.0], [1.8, 32.0], [1.9, 32.0], [2.0, 33.0], [2.1, 33.0], [2.2, 33.0], [2.3, 33.0], [2.4, 33.0], [2.5, 34.0], [2.6, 34.0], [2.7, 34.0], [2.8, 34.0], [2.9, 34.0], [3.0, 34.0], [3.1, 35.0], [3.2, 35.0], [3.3, 35.0], [3.4, 35.0], [3.5, 35.0], [3.6, 35.0], [3.7, 35.0], [3.8, 36.0], [3.9, 36.0], [4.0, 36.0], [4.1, 36.0], [4.2, 36.0], [4.3, 36.0], [4.4, 36.0], [4.5, 37.0], [4.6, 37.0], [4.7, 37.0], [4.8, 37.0], [4.9, 37.0], [5.0, 37.0], [5.1, 37.0], [5.2, 38.0], [5.3, 38.0], [5.4, 38.0], [5.5, 38.0], [5.6, 38.0], [5.7, 38.0], [5.8, 38.0], [5.9, 38.0], [6.0, 38.0], [6.1, 38.0], [6.2, 38.0], [6.3, 38.0], [6.4, 39.0], [6.5, 39.0], [6.6, 39.0], [6.7, 39.0], [6.8, 39.0], [6.9, 39.0], [7.0, 39.0], [7.1, 39.0], [7.2, 39.0], [7.3, 39.0], [7.4, 39.0], [7.5, 39.0], [7.6, 39.0], [7.7, 40.0], [7.8, 40.0], [7.9, 40.0], [8.0, 40.0], [8.1, 40.0], [8.2, 40.0], [8.3, 40.0], [8.4, 40.0], [8.5, 40.0], [8.6, 40.0], [8.7, 41.0], [8.8, 41.0], [8.9, 41.0], [9.0, 41.0], [9.1, 41.0], [9.2, 41.0], [9.3, 41.0], [9.4, 41.0], [9.5, 41.0], [9.6, 41.0], [9.7, 41.0], [9.8, 41.0], [9.9, 42.0], [10.0, 42.0], [10.1, 42.0], [10.2, 42.0], [10.3, 42.0], [10.4, 42.0], [10.5, 42.0], [10.6, 42.0], [10.7, 42.0], [10.8, 42.0], [10.9, 42.0], [11.0, 42.0], [11.1, 42.0], [11.2, 42.0], [11.3, 42.0], [11.4, 42.0], [11.5, 42.0], [11.6, 42.0], [11.7, 43.0], [11.8, 43.0], [11.9, 43.0], [12.0, 43.0], [12.1, 43.0], [12.2, 43.0], [12.3, 43.0], [12.4, 43.0], [12.5, 43.0], [12.6, 43.0], [12.7, 43.0], [12.8, 43.0], [12.9, 43.0], [13.0, 43.0], [13.1, 43.0], [13.2, 43.0], [13.3, 43.0], [13.4, 43.0], [13.5, 43.0], [13.6, 43.0], [13.7, 43.0], [13.8, 43.0], [13.9, 44.0], [14.0, 44.0], [14.1, 44.0], [14.2, 44.0], [14.3, 44.0], [14.4, 44.0], [14.5, 44.0], [14.6, 44.0], [14.7, 44.0], [14.8, 44.0], [14.9, 44.0], [15.0, 44.0], [15.1, 44.0], [15.2, 44.0], [15.3, 44.0], [15.4, 44.0], [15.5, 44.0], [15.6, 44.0], [15.7, 44.0], [15.8, 44.0], [15.9, 44.0], [16.0, 44.0], [16.1, 44.0], [16.2, 44.0], [16.3, 44.0], [16.4, 45.0], [16.5, 45.0], [16.6, 45.0], [16.7, 45.0], [16.8, 45.0], [16.9, 45.0], [17.0, 45.0], [17.1, 45.0], [17.2, 45.0], [17.3, 45.0], [17.4, 45.0], [17.5, 45.0], [17.6, 45.0], [17.7, 45.0], [17.8, 45.0], [17.9, 45.0], [18.0, 45.0], [18.1, 45.0], [18.2, 45.0], [18.3, 45.0], [18.4, 45.0], [18.5, 45.0], [18.6, 45.0], [18.7, 45.0], [18.8, 45.0], [18.9, 45.0], [19.0, 45.0], [19.1, 45.0], [19.2, 45.0], [19.3, 45.0], [19.4, 46.0], [19.5, 46.0], [19.6, 46.0], [19.7, 46.0], [19.8, 46.0], [19.9, 46.0], [20.0, 46.0], [20.1, 46.0], [20.2, 46.0], [20.3, 46.0], [20.4, 46.0], [20.5, 46.0], [20.6, 46.0], [20.7, 46.0], [20.8, 46.0], [20.9, 46.0], [21.0, 46.0], [21.1, 46.0], [21.2, 46.0], [21.3, 46.0], [21.4, 46.0], [21.5, 46.0], [21.6, 46.0], [21.7, 46.0], [21.8, 46.0], [21.9, 46.0], [22.0, 46.0], [22.1, 46.0], [22.2, 46.0], [22.3, 46.0], [22.4, 46.0], [22.5, 47.0], [22.6, 47.0], [22.7, 47.0], [22.8, 47.0], [22.9, 47.0], [23.0, 47.0], [23.1, 47.0], [23.2, 47.0], [23.3, 47.0], [23.4, 47.0], [23.5, 47.0], [23.6, 47.0], [23.7, 47.0], [23.8, 47.0], [23.9, 47.0], [24.0, 47.0], [24.1, 47.0], [24.2, 47.0], [24.3, 47.0], [24.4, 47.0], [24.5, 47.0], [24.6, 47.0], [24.7, 47.0], [24.8, 47.0], [24.9, 47.0], [25.0, 47.0], [25.1, 47.0], [25.2, 47.0], [25.3, 47.0], [25.4, 48.0], [25.5, 48.0], [25.6, 48.0], [25.7, 48.0], [25.8, 48.0], [25.9, 48.0], [26.0, 48.0], [26.1, 48.0], [26.2, 48.0], [26.3, 48.0], [26.4, 48.0], [26.5, 48.0], [26.6, 48.0], [26.7, 48.0], [26.8, 48.0], [26.9, 48.0], [27.0, 48.0], [27.1, 48.0], [27.2, 48.0], [27.3, 48.0], [27.4, 48.0], [27.5, 48.0], [27.6, 48.0], [27.7, 49.0], [27.8, 49.0], [27.9, 49.0], [28.0, 49.0], [28.1, 49.0], [28.2, 49.0], [28.3, 49.0], [28.4, 49.0], [28.5, 49.0], [28.6, 49.0], [28.7, 49.0], [28.8, 49.0], [28.9, 49.0], [29.0, 49.0], [29.1, 49.0], [29.2, 49.0], [29.3, 49.0], [29.4, 49.0], [29.5, 49.0], [29.6, 49.0], [29.7, 49.0], [29.8, 50.0], [29.9, 50.0], [30.0, 50.0], [30.1, 50.0], [30.2, 50.0], [30.3, 50.0], [30.4, 50.0], [30.5, 50.0], [30.6, 50.0], [30.7, 50.0], [30.8, 50.0], [30.9, 50.0], [31.0, 50.0], [31.1, 50.0], [31.2, 50.0], [31.3, 50.0], [31.4, 50.0], [31.5, 50.0], [31.6, 50.0], [31.7, 50.0], [31.8, 50.0], [31.9, 50.0], [32.0, 50.0], [32.1, 50.0], [32.2, 51.0], [32.3, 51.0], [32.4, 51.0], [32.5, 51.0], [32.6, 51.0], [32.7, 51.0], [32.8, 51.0], [32.9, 51.0], [33.0, 51.0], [33.1, 51.0], [33.2, 51.0], [33.3, 51.0], [33.4, 51.0], [33.5, 51.0], [33.6, 51.0], [33.7, 51.0], [33.8, 51.0], [33.9, 51.0], [34.0, 51.0], [34.1, 51.0], [34.2, 51.0], [34.3, 51.0], [34.4, 51.0], [34.5, 51.0], [34.6, 51.0], [34.7, 51.0], [34.8, 51.0], [34.9, 51.0], [35.0, 51.0], [35.1, 51.0], [35.2, 51.0], [35.3, 52.0], [35.4, 52.0], [35.5, 52.0], [35.6, 52.0], [35.7, 52.0], [35.8, 52.0], [35.9, 52.0], [36.0, 52.0], [36.1, 52.0], [36.2, 52.0], [36.3, 52.0], [36.4, 52.0], [36.5, 52.0], [36.6, 52.0], [36.7, 52.0], [36.8, 52.0], [36.9, 52.0], [37.0, 52.0], [37.1, 52.0], [37.2, 52.0], [37.3, 52.0], [37.4, 52.0], [37.5, 52.0], [37.6, 52.0], [37.7, 52.0], [37.8, 52.0], [37.9, 52.0], [38.0, 52.0], [38.1, 52.0], [38.2, 52.0], [38.3, 52.0], [38.4, 52.0], [38.5, 52.0], [38.6, 52.0], [38.7, 52.0], [38.8, 53.0], [38.9, 53.0], [39.0, 53.0], [39.1, 53.0], [39.2, 53.0], [39.3, 53.0], [39.4, 53.0], [39.5, 53.0], [39.6, 53.0], [39.7, 53.0], [39.8, 53.0], [39.9, 53.0], [40.0, 53.0], [40.1, 53.0], [40.2, 53.0], [40.3, 53.0], [40.4, 53.0], [40.5, 53.0], [40.6, 53.0], [40.7, 53.0], [40.8, 53.0], [40.9, 53.0], [41.0, 53.0], [41.1, 53.0], [41.2, 53.0], [41.3, 53.0], [41.4, 53.0], [41.5, 53.0], [41.6, 53.0], [41.7, 53.0], [41.8, 53.0], [41.9, 53.0], [42.0, 53.0], [42.1, 54.0], [42.2, 54.0], [42.3, 54.0], [42.4, 54.0], [42.5, 54.0], [42.6, 54.0], [42.7, 54.0], [42.8, 54.0], [42.9, 54.0], [43.0, 54.0], [43.1, 54.0], [43.2, 54.0], [43.3, 54.0], [43.4, 54.0], [43.5, 54.0], [43.6, 54.0], [43.7, 54.0], [43.8, 54.0], [43.9, 54.0], [44.0, 54.0], [44.1, 54.0], [44.2, 54.0], [44.3, 54.0], [44.4, 54.0], [44.5, 54.0], [44.6, 54.0], [44.7, 54.0], [44.8, 55.0], [44.9, 55.0], [45.0, 55.0], [45.1, 55.0], [45.2, 55.0], [45.3, 55.0], [45.4, 55.0], [45.5, 55.0], [45.6, 55.0], [45.7, 55.0], [45.8, 55.0], [45.9, 55.0], [46.0, 55.0], [46.1, 55.0], [46.2, 55.0], [46.3, 55.0], [46.4, 55.0], [46.5, 55.0], [46.6, 55.0], [46.7, 55.0], [46.8, 55.0], [46.9, 55.0], [47.0, 55.0], [47.1, 55.0], [47.2, 55.0], [47.3, 55.0], [47.4, 55.0], [47.5, 56.0], [47.6, 56.0], [47.7, 56.0], [47.8, 56.0], [47.9, 56.0], [48.0, 56.0], [48.1, 56.0], [48.2, 56.0], [48.3, 56.0], [48.4, 56.0], [48.5, 56.0], [48.6, 56.0], [48.7, 56.0], [48.8, 56.0], [48.9, 56.0], [49.0, 56.0], [49.1, 56.0], [49.2, 56.0], [49.3, 56.0], [49.4, 56.0], [49.5, 56.0], [49.6, 56.0], [49.7, 56.0], [49.8, 56.0], [49.9, 56.0], [50.0, 56.0], [50.1, 56.0], [50.2, 56.0], [50.3, 57.0], [50.4, 57.0], [50.5, 57.0], [50.6, 57.0], [50.7, 57.0], [50.8, 57.0], [50.9, 57.0], [51.0, 57.0], [51.1, 57.0], [51.2, 57.0], [51.3, 57.0], [51.4, 57.0], [51.5, 57.0], [51.6, 57.0], [51.7, 57.0], [51.8, 57.0], [51.9, 57.0], [52.0, 57.0], [52.1, 58.0], [52.2, 58.0], [52.3, 58.0], [52.4, 58.0], [52.5, 58.0], [52.6, 58.0], [52.7, 58.0], [52.8, 58.0], [52.9, 58.0], [53.0, 58.0], [53.1, 58.0], [53.2, 58.0], [53.3, 58.0], [53.4, 58.0], [53.5, 58.0], [53.6, 58.0], [53.7, 58.0], [53.8, 58.0], [53.9, 58.0], [54.0, 58.0], [54.1, 58.0], [54.2, 58.0], [54.3, 59.0], [54.4, 59.0], [54.5, 59.0], [54.6, 59.0], [54.7, 59.0], [54.8, 59.0], [54.9, 59.0], [55.0, 59.0], [55.1, 59.0], [55.2, 59.0], [55.3, 59.0], [55.4, 59.0], [55.5, 59.0], [55.6, 59.0], [55.7, 59.0], [55.8, 59.0], [55.9, 59.0], [56.0, 59.0], [56.1, 59.0], [56.2, 59.0], [56.3, 59.0], [56.4, 59.0], [56.5, 59.0], [56.6, 60.0], [56.7, 60.0], [56.8, 60.0], [56.9, 60.0], [57.0, 60.0], [57.1, 60.0], [57.2, 60.0], [57.3, 60.0], [57.4, 60.0], [57.5, 60.0], [57.6, 60.0], [57.7, 60.0], [57.8, 60.0], [57.9, 60.0], [58.0, 60.0], [58.1, 60.0], [58.2, 60.0], [58.3, 60.0], [58.4, 60.0], [58.5, 60.0], [58.6, 60.0], [58.7, 60.0], [58.8, 60.0], [58.9, 60.0], [59.0, 60.0], [59.1, 60.0], [59.2, 60.0], [59.3, 60.0], [59.4, 60.0], [59.5, 61.0], [59.6, 61.0], [59.7, 61.0], [59.8, 61.0], [59.9, 61.0], [60.0, 61.0], [60.1, 61.0], [60.2, 61.0], [60.3, 61.0], [60.4, 61.0], [60.5, 61.0], [60.6, 61.0], [60.7, 61.0], [60.8, 61.0], [60.9, 61.0], [61.0, 61.0], [61.1, 61.0], [61.2, 61.0], [61.3, 61.0], [61.4, 61.0], [61.5, 61.0], [61.6, 61.0], [61.7, 61.0], [61.8, 61.0], [61.9, 61.0], [62.0, 61.0], [62.1, 61.0], [62.2, 62.0], [62.3, 62.0], [62.4, 62.0], [62.5, 62.0], [62.6, 62.0], [62.7, 62.0], [62.8, 62.0], [62.9, 62.0], [63.0, 62.0], [63.1, 62.0], [63.2, 62.0], [63.3, 62.0], [63.4, 62.0], [63.5, 62.0], [63.6, 62.0], [63.7, 62.0], [63.8, 62.0], [63.9, 62.0], [64.0, 62.0], [64.1, 63.0], [64.2, 63.0], [64.3, 63.0], [64.4, 63.0], [64.5, 63.0], [64.6, 63.0], [64.7, 63.0], [64.8, 63.0], [64.9, 63.0], [65.0, 63.0], [65.1, 63.0], [65.2, 63.0], [65.3, 63.0], [65.4, 63.0], [65.5, 63.0], [65.6, 64.0], [65.7, 64.0], [65.8, 64.0], [65.9, 64.0], [66.0, 64.0], [66.1, 64.0], [66.2, 64.0], [66.3, 64.0], [66.4, 64.0], [66.5, 64.0], [66.6, 64.0], [66.7, 65.0], [66.8, 65.0], [66.9, 65.0], [67.0, 65.0], [67.1, 65.0], [67.2, 65.0], [67.3, 65.0], [67.4, 65.0], [67.5, 65.0], [67.6, 65.0], [67.7, 65.0], [67.8, 66.0], [67.9, 66.0], [68.0, 66.0], [68.1, 66.0], [68.2, 66.0], [68.3, 66.0], [68.4, 66.0], [68.5, 66.0], [68.6, 66.0], [68.7, 66.0], [68.8, 66.0], [68.9, 66.0], [69.0, 66.0], [69.1, 67.0], [69.2, 67.0], [69.3, 67.0], [69.4, 67.0], [69.5, 67.0], [69.6, 67.0], [69.7, 67.0], [69.8, 67.0], [69.9, 67.0], [70.0, 67.0], [70.1, 67.0], [70.2, 67.0], [70.3, 67.0], [70.4, 67.0], [70.5, 67.0], [70.6, 67.0], [70.7, 67.0], [70.8, 67.0], [70.9, 68.0], [71.0, 68.0], [71.1, 68.0], [71.2, 68.0], [71.3, 68.0], [71.4, 68.0], [71.5, 68.0], [71.6, 68.0], [71.7, 68.0], [71.8, 68.0], [71.9, 68.0], [72.0, 68.0], [72.1, 68.0], [72.2, 69.0], [72.3, 69.0], [72.4, 69.0], [72.5, 69.0], [72.6, 69.0], [72.7, 69.0], [72.8, 69.0], [72.9, 69.0], [73.0, 69.0], [73.1, 70.0], [73.2, 70.0], [73.3, 70.0], [73.4, 70.0], [73.5, 70.0], [73.6, 70.0], [73.7, 70.0], [73.8, 70.0], [73.9, 70.0], [74.0, 70.0], [74.1, 71.0], [74.2, 71.0], [74.3, 71.0], [74.4, 71.0], [74.5, 71.0], [74.6, 71.0], [74.7, 71.0], [74.8, 72.0], [74.9, 72.0], [75.0, 72.0], [75.1, 72.0], [75.2, 72.0], [75.3, 72.0], [75.4, 72.0], [75.5, 73.0], [75.6, 73.0], [75.7, 73.0], [75.8, 73.0], [75.9, 73.0], [76.0, 73.0], [76.1, 73.0], [76.2, 73.0], [76.3, 73.0], [76.4, 74.0], [76.5, 74.0], [76.6, 74.0], [76.7, 74.0], [76.8, 74.0], [76.9, 74.0], [77.0, 74.0], [77.1, 74.0], [77.2, 74.0], [77.3, 75.0], [77.4, 75.0], [77.5, 75.0], [77.6, 75.0], [77.7, 75.0], [77.8, 75.0], [77.9, 75.0], [78.0, 75.0], [78.1, 75.0], [78.2, 75.0], [78.3, 75.0], [78.4, 76.0], [78.5, 76.0], [78.6, 76.0], [78.7, 76.0], [78.8, 76.0], [78.9, 76.0], [79.0, 76.0], [79.1, 76.0], [79.2, 77.0], [79.3, 77.0], [79.4, 77.0], [79.5, 77.0], [79.6, 77.0], [79.7, 77.0], [79.8, 77.0], [79.9, 77.0], [80.0, 78.0], [80.1, 78.0], [80.2, 78.0], [80.3, 78.0], [80.4, 78.0], [80.5, 78.0], [80.6, 78.0], [80.7, 79.0], [80.8, 79.0], [80.9, 79.0], [81.0, 79.0], [81.1, 79.0], [81.2, 80.0], [81.3, 80.0], [81.4, 80.0], [81.5, 80.0], [81.6, 80.0], [81.7, 80.0], [81.8, 80.0], [81.9, 80.0], [82.0, 80.0], [82.1, 81.0], [82.2, 81.0], [82.3, 81.0], [82.4, 81.0], [82.5, 82.0], [82.6, 82.0], [82.7, 82.0], [82.8, 82.0], [82.9, 82.0], [83.0, 83.0], [83.1, 83.0], [83.2, 83.0], [83.3, 83.0], [83.4, 84.0], [83.5, 84.0], [83.6, 84.0], [83.7, 84.0], [83.8, 84.0], [83.9, 85.0], [84.0, 85.0], [84.1, 85.0], [84.2, 85.0], [84.3, 85.0], [84.4, 85.0], [84.5, 85.0], [84.6, 86.0], [84.7, 86.0], [84.8, 86.0], [84.9, 86.0], [85.0, 86.0], [85.1, 86.0], [85.2, 86.0], [85.3, 86.0], [85.4, 86.0], [85.5, 87.0], [85.6, 87.0], [85.7, 87.0], [85.8, 87.0], [85.9, 87.0], [86.0, 87.0], [86.1, 88.0], [86.2, 88.0], [86.3, 88.0], [86.4, 88.0], [86.5, 88.0], [86.6, 88.0], [86.7, 88.0], [86.8, 89.0], [86.9, 89.0], [87.0, 89.0], [87.1, 89.0], [87.2, 89.0], [87.3, 90.0], [87.4, 90.0], [87.5, 90.0], [87.6, 90.0], [87.7, 90.0], [87.8, 90.0], [87.9, 90.0], [88.0, 90.0], [88.1, 90.0], [88.2, 91.0], [88.3, 91.0], [88.4, 91.0], [88.5, 91.0], [88.6, 91.0], [88.7, 92.0], [88.8, 92.0], [88.9, 92.0], [89.0, 93.0], [89.1, 93.0], [89.2, 93.0], [89.3, 93.0], [89.4, 94.0], [89.5, 94.0], [89.6, 94.0], [89.7, 94.0], [89.8, 95.0], [89.9, 95.0], [90.0, 95.0], [90.1, 96.0], [90.2, 96.0], [90.3, 97.0], [90.4, 97.0], [90.5, 97.0], [90.6, 97.0], [90.7, 98.0], [90.8, 98.0], [90.9, 98.0], [91.0, 99.0], [91.1, 99.0], [91.2, 99.0], [91.3, 100.0], [91.4, 100.0], [91.5, 100.0], [91.6, 101.0], [91.7, 101.0], [91.8, 101.0], [91.9, 102.0], [92.0, 102.0], [92.1, 103.0], [92.2, 104.0], [92.3, 104.0], [92.4, 104.0], [92.5, 104.0], [92.6, 105.0], [92.7, 105.0], [92.8, 105.0], [92.9, 106.0], [93.0, 106.0], [93.1, 107.0], [93.2, 107.0], [93.3, 107.0], [93.4, 108.0], [93.5, 108.0], [93.6, 109.0], [93.7, 109.0], [93.8, 111.0], [93.9, 113.0], [94.0, 114.0], [94.1, 116.0], [94.2, 119.0], [94.3, 246.0], [94.4, 252.0], [94.5, 256.0], [94.6, 258.0], [94.7, 262.0], [94.8, 264.0], [94.9, 266.0], [95.0, 268.0], [95.1, 270.0], [95.2, 272.0], [95.3, 273.0], [95.4, 277.0], [95.5, 278.0], [95.6, 280.0], [95.7, 280.0], [95.8, 282.0], [95.9, 284.0], [96.0, 287.0], [96.1, 288.0], [96.2, 290.0], [96.3, 291.0], [96.4, 293.0], [96.5, 302.0], [96.6, 308.0], [96.7, 313.0], [96.8, 514.0], [96.9, 1010.0], [97.0, 1011.0], [97.1, 1014.0], [97.2, 1015.0], [97.3, 1019.0], [97.4, 1020.0], [97.5, 1023.0], [97.6, 1026.0], [97.7, 1027.0], [97.8, 1029.0], [97.9, 1031.0], [98.0, 1037.0], [98.1, 1043.0], [98.2, 1043.0], [98.3, 1044.0], [98.4, 1046.0], [98.5, 1046.0], [98.6, 1054.0], [98.7, 1059.0], [98.8, 1060.0], [98.9, 1062.0], [99.0, 1064.0], [99.1, 1064.0], [99.2, 1070.0], [99.3, 1071.0], [99.4, 1076.0], [99.5, 1082.0], [99.6, 1083.0], [99.7, 1087.0], [99.8, 1090.0], [99.9, 1103.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 4.0], [0.9, 13.0], [1.0, 21.0], [1.1, 23.0], [1.2, 28.0], [1.3, 44.0], [1.4, 45.0], [1.5, 46.0], [1.6, 46.0], [1.7, 47.0], [1.8, 48.0], [1.9, 50.0], [2.0, 51.0], [2.1, 51.0], [2.2, 52.0], [2.3, 53.0], [2.4, 53.0], [2.5, 54.0], [2.6, 54.0], [2.7, 55.0], [2.8, 56.0], [2.9, 56.0], [3.0, 57.0], [3.1, 58.0], [3.2, 58.0], [3.3, 58.0], [3.4, 59.0], [3.5, 60.0], [3.6, 60.0], [3.7, 62.0], [3.8, 63.0], [3.9, 64.0], [4.0, 64.0], [4.1, 66.0], [4.2, 67.0], [4.3, 68.0], [4.4, 70.0], [4.5, 72.0], [4.6, 75.0], [4.7, 76.0], [4.8, 79.0], [4.9, 80.0], [5.0, 80.0], [5.1, 82.0], [5.2, 88.0], [5.3, 91.0], [5.4, 93.0], [5.5, 101.0], [5.6, 103.0], [5.7, 106.0], [5.8, 108.0], [5.9, 111.0], [6.0, 115.0], [6.1, 118.0], [6.2, 119.0], [6.3, 119.0], [6.4, 121.0], [6.5, 122.0], [6.6, 123.0], [6.7, 125.0], [6.8, 128.0], [6.9, 130.0], [7.0, 132.0], [7.1, 132.0], [7.2, 133.0], [7.3, 135.0], [7.4, 135.0], [7.5, 135.0], [7.6, 136.0], [7.7, 136.0], [7.8, 136.0], [7.9, 137.0], [8.0, 137.0], [8.1, 137.0], [8.2, 138.0], [8.3, 138.0], [8.4, 138.0], [8.5, 139.0], [8.6, 139.0], [8.7, 140.0], [8.8, 140.0], [8.9, 141.0], [9.0, 141.0], [9.1, 142.0], [9.2, 142.0], [9.3, 142.0], [9.4, 143.0], [9.5, 143.0], [9.6, 143.0], [9.7, 143.0], [9.8, 144.0], [9.9, 144.0], [10.0, 144.0], [10.1, 145.0], [10.2, 146.0], [10.3, 146.0], [10.4, 146.0], [10.5, 147.0], [10.6, 147.0], [10.7, 148.0], [10.8, 149.0], [10.9, 149.0], [11.0, 149.0], [11.1, 150.0], [11.2, 150.0], [11.3, 151.0], [11.4, 151.0], [11.5, 151.0], [11.6, 152.0], [11.7, 153.0], [11.8, 153.0], [11.9, 154.0], [12.0, 154.0], [12.1, 154.0], [12.2, 155.0], [12.3, 156.0], [12.4, 156.0], [12.5, 156.0], [12.6, 156.0], [12.7, 157.0], [12.8, 158.0], [12.9, 158.0], [13.0, 159.0], [13.1, 159.0], [13.2, 160.0], [13.3, 160.0], [13.4, 160.0], [13.5, 161.0], [13.6, 162.0], [13.7, 162.0], [13.8, 162.0], [13.9, 162.0], [14.0, 163.0], [14.1, 163.0], [14.2, 163.0], [14.3, 164.0], [14.4, 164.0], [14.5, 164.0], [14.6, 165.0], [14.7, 165.0], [14.8, 165.0], [14.9, 165.0], [15.0, 165.0], [15.1, 166.0], [15.2, 166.0], [15.3, 166.0], [15.4, 167.0], [15.5, 168.0], [15.6, 168.0], [15.7, 169.0], [15.8, 169.0], [15.9, 169.0], [16.0, 169.0], [16.1, 170.0], [16.2, 171.0], [16.3, 171.0], [16.4, 171.0], [16.5, 172.0], [16.6, 172.0], [16.7, 173.0], [16.8, 174.0], [16.9, 175.0], [17.0, 175.0], [17.1, 176.0], [17.2, 178.0], [17.3, 179.0], [17.4, 180.0], [17.5, 181.0], [17.6, 182.0], [17.7, 184.0], [17.8, 185.0], [17.9, 185.0], [18.0, 186.0], [18.1, 188.0], [18.2, 189.0], [18.3, 190.0], [18.4, 192.0], [18.5, 197.0], [18.6, 198.0], [18.7, 199.0], [18.8, 203.0], [18.9, 206.0], [19.0, 207.0], [19.1, 208.0], [19.2, 210.0], [19.3, 212.0], [19.4, 213.0], [19.5, 214.0], [19.6, 216.0], [19.7, 216.0], [19.8, 217.0], [19.9, 219.0], [20.0, 220.0], [20.1, 220.0], [20.2, 221.0], [20.3, 225.0], [20.4, 226.0], [20.5, 228.0], [20.6, 229.0], [20.7, 230.0], [20.8, 232.0], [20.9, 234.0], [21.0, 235.0], [21.1, 240.0], [21.2, 241.0], [21.3, 242.0], [21.4, 242.0], [21.5, 243.0], [21.6, 244.0], [21.7, 245.0], [21.8, 245.0], [21.9, 246.0], [22.0, 246.0], [22.1, 247.0], [22.2, 247.0], [22.3, 248.0], [22.4, 249.0], [22.5, 250.0], [22.6, 251.0], [22.7, 252.0], [22.8, 255.0], [22.9, 256.0], [23.0, 258.0], [23.1, 260.0], [23.2, 261.0], [23.3, 263.0], [23.4, 265.0], [23.5, 268.0], [23.6, 270.0], [23.7, 271.0], [23.8, 273.0], [23.9, 275.0], [24.0, 278.0], [24.1, 289.0], [24.2, 296.0], [24.3, 305.0], [24.4, 307.0], [24.5, 311.0], [24.6, 312.0], [24.7, 313.0], [24.8, 314.0], [24.9, 315.0], [25.0, 316.0], [25.1, 318.0], [25.2, 319.0], [25.3, 320.0], [25.4, 322.0], [25.5, 324.0], [25.6, 325.0], [25.7, 326.0], [25.8, 330.0], [25.9, 331.0], [26.0, 332.0], [26.1, 332.0], [26.2, 334.0], [26.3, 336.0], [26.4, 338.0], [26.5, 339.0], [26.6, 340.0], [26.7, 342.0], [26.8, 344.0], [26.9, 346.0], [27.0, 348.0], [27.1, 351.0], [27.2, 356.0], [27.3, 360.0], [27.4, 363.0], [27.5, 365.0], [27.6, 366.0], [27.7, 367.0], [27.8, 368.0], [27.9, 369.0], [28.0, 369.0], [28.1, 370.0], [28.2, 371.0], [28.3, 372.0], [28.4, 372.0], [28.5, 373.0], [28.6, 374.0], [28.7, 374.0], [28.8, 374.0], [28.9, 375.0], [29.0, 376.0], [29.1, 376.0], [29.2, 377.0], [29.3, 378.0], [29.4, 379.0], [29.5, 381.0], [29.6, 381.0], [29.7, 381.0], [29.8, 382.0], [29.9, 383.0], [30.0, 383.0], [30.1, 384.0], [30.2, 385.0], [30.3, 386.0], [30.4, 387.0], [30.5, 388.0], [30.6, 388.0], [30.7, 388.0], [30.8, 389.0], [30.9, 390.0], [31.0, 390.0], [31.1, 390.0], [31.2, 392.0], [31.3, 393.0], [31.4, 393.0], [31.5, 394.0], [31.6, 395.0], [31.7, 396.0], [31.8, 397.0], [31.9, 397.0], [32.0, 398.0], [32.1, 399.0], [32.2, 400.0], [32.3, 400.0], [32.4, 401.0], [32.5, 401.0], [32.6, 402.0], [32.7, 402.0], [32.8, 403.0], [32.9, 404.0], [33.0, 405.0], [33.1, 405.0], [33.2, 407.0], [33.3, 407.0], [33.4, 408.0], [33.5, 409.0], [33.6, 410.0], [33.7, 411.0], [33.8, 412.0], [33.9, 412.0], [34.0, 413.0], [34.1, 414.0], [34.2, 417.0], [34.3, 418.0], [34.4, 418.0], [34.5, 419.0], [34.6, 420.0], [34.7, 423.0], [34.8, 424.0], [34.9, 428.0], [35.0, 448.0], [35.1, 450.0], [35.2, 474.0], [35.3, 477.0], [35.4, 482.0], [35.5, 494.0], [35.6, 524.0], [35.7, 527.0], [35.8, 534.0], [35.9, 536.0], [36.0, 541.0], [36.1, 542.0], [36.2, 545.0], [36.3, 548.0], [36.4, 550.0], [36.5, 552.0], [36.6, 554.0], [36.7, 556.0], [36.8, 559.0], [36.9, 561.0], [37.0, 562.0], [37.1, 564.0], [37.2, 566.0], [37.3, 566.0], [37.4, 569.0], [37.5, 573.0], [37.6, 573.0], [37.7, 575.0], [37.8, 577.0], [37.9, 577.0], [38.0, 579.0], [38.1, 581.0], [38.2, 583.0], [38.3, 585.0], [38.4, 585.0], [38.5, 585.0], [38.6, 587.0], [38.7, 589.0], [38.8, 591.0], [38.9, 594.0], [39.0, 596.0], [39.1, 598.0], [39.2, 600.0], [39.3, 600.0], [39.4, 603.0], [39.5, 605.0], [39.6, 607.0], [39.7, 609.0], [39.8, 610.0], [39.9, 611.0], [40.0, 614.0], [40.1, 616.0], [40.2, 619.0], [40.3, 620.0], [40.4, 622.0], [40.5, 624.0], [40.6, 627.0], [40.7, 628.0], [40.8, 629.0], [40.9, 630.0], [41.0, 632.0], [41.1, 635.0], [41.2, 636.0], [41.3, 637.0], [41.4, 638.0], [41.5, 639.0], [41.6, 641.0], [41.7, 641.0], [41.8, 643.0], [41.9, 644.0], [42.0, 646.0], [42.1, 647.0], [42.2, 649.0], [42.3, 650.0], [42.4, 651.0], [42.5, 651.0], [42.6, 653.0], [42.7, 654.0], [42.8, 656.0], [42.9, 659.0], [43.0, 660.0], [43.1, 663.0], [43.2, 663.0], [43.3, 666.0], [43.4, 667.0], [43.5, 667.0], [43.6, 669.0], [43.7, 670.0], [43.8, 671.0], [43.9, 673.0], [44.0, 674.0], [44.1, 674.0], [44.2, 675.0], [44.3, 676.0], [44.4, 676.0], [44.5, 677.0], [44.6, 677.0], [44.7, 678.0], [44.8, 678.0], [44.9, 679.0], [45.0, 679.0], [45.1, 680.0], [45.2, 681.0], [45.3, 681.0], [45.4, 682.0], [45.5, 683.0], [45.6, 683.0], [45.7, 684.0], [45.8, 685.0], [45.9, 686.0], [46.0, 687.0], [46.1, 687.0], [46.2, 689.0], [46.3, 689.0], [46.4, 689.0], [46.5, 690.0], [46.6, 690.0], [46.7, 691.0], [46.8, 692.0], [46.9, 693.0], [47.0, 693.0], [47.1, 695.0], [47.2, 695.0], [47.3, 697.0], [47.4, 697.0], [47.5, 698.0], [47.6, 700.0], [47.7, 701.0], [47.8, 703.0], [47.9, 704.0], [48.0, 704.0], [48.1, 704.0], [48.2, 705.0], [48.3, 707.0], [48.4, 707.0], [48.5, 708.0], [48.6, 709.0], [48.7, 710.0], [48.8, 710.0], [48.9, 711.0], [49.0, 711.0], [49.1, 711.0], [49.2, 712.0], [49.3, 713.0], [49.4, 713.0], [49.5, 715.0], [49.6, 715.0], [49.7, 716.0], [49.8, 718.0], [49.9, 718.0], [50.0, 719.0], [50.1, 719.0], [50.2, 720.0], [50.3, 721.0], [50.4, 721.0], [50.5, 722.0], [50.6, 723.0], [50.7, 723.0], [50.8, 724.0], [50.9, 724.0], [51.0, 724.0], [51.1, 726.0], [51.2, 726.0], [51.3, 727.0], [51.4, 728.0], [51.5, 728.0], [51.6, 729.0], [51.7, 730.0], [51.8, 731.0], [51.9, 731.0], [52.0, 731.0], [52.1, 732.0], [52.2, 733.0], [52.3, 733.0], [52.4, 734.0], [52.5, 734.0], [52.6, 735.0], [52.7, 735.0], [52.8, 736.0], [52.9, 736.0], [53.0, 738.0], [53.1, 738.0], [53.2, 739.0], [53.3, 739.0], [53.4, 740.0], [53.5, 740.0], [53.6, 741.0], [53.7, 741.0], [53.8, 743.0], [53.9, 743.0], [54.0, 743.0], [54.1, 744.0], [54.2, 744.0], [54.3, 745.0], [54.4, 746.0], [54.5, 746.0], [54.6, 746.0], [54.7, 747.0], [54.8, 748.0], [54.9, 749.0], [55.0, 749.0], [55.1, 749.0], [55.2, 750.0], [55.3, 750.0], [55.4, 751.0], [55.5, 751.0], [55.6, 751.0], [55.7, 752.0], [55.8, 752.0], [55.9, 752.0], [56.0, 753.0], [56.1, 753.0], [56.2, 753.0], [56.3, 754.0], [56.4, 755.0], [56.5, 755.0], [56.6, 755.0], [56.7, 756.0], [56.8, 757.0], [56.9, 758.0], [57.0, 759.0], [57.1, 759.0], [57.2, 760.0], [57.3, 761.0], [57.4, 761.0], [57.5, 762.0], [57.6, 762.0], [57.7, 763.0], [57.8, 764.0], [57.9, 765.0], [58.0, 765.0], [58.1, 766.0], [58.2, 766.0], [58.3, 767.0], [58.4, 768.0], [58.5, 768.0], [58.6, 769.0], [58.7, 769.0], [58.8, 770.0], [58.9, 770.0], [59.0, 770.0], [59.1, 771.0], [59.2, 772.0], [59.3, 773.0], [59.4, 773.0], [59.5, 773.0], [59.6, 774.0], [59.7, 775.0], [59.8, 775.0], [59.9, 776.0], [60.0, 776.0], [60.1, 777.0], [60.2, 778.0], [60.3, 778.0], [60.4, 778.0], [60.5, 779.0], [60.6, 779.0], [60.7, 780.0], [60.8, 780.0], [60.9, 781.0], [61.0, 781.0], [61.1, 782.0], [61.2, 782.0], [61.3, 783.0], [61.4, 783.0], [61.5, 784.0], [61.6, 785.0], [61.7, 785.0], [61.8, 786.0], [61.9, 786.0], [62.0, 786.0], [62.1, 787.0], [62.2, 787.0], [62.3, 788.0], [62.4, 789.0], [62.5, 790.0], [62.6, 790.0], [62.7, 790.0], [62.8, 791.0], [62.9, 791.0], [63.0, 791.0], [63.1, 792.0], [63.2, 792.0], [63.3, 792.0], [63.4, 793.0], [63.5, 794.0], [63.6, 795.0], [63.7, 795.0], [63.8, 795.0], [63.9, 796.0], [64.0, 796.0], [64.1, 796.0], [64.2, 797.0], [64.3, 797.0], [64.4, 798.0], [64.5, 798.0], [64.6, 799.0], [64.7, 799.0], [64.8, 800.0], [64.9, 800.0], [65.0, 800.0], [65.1, 801.0], [65.2, 802.0], [65.3, 802.0], [65.4, 802.0], [65.5, 803.0], [65.6, 804.0], [65.7, 804.0], [65.8, 804.0], [65.9, 805.0], [66.0, 806.0], [66.1, 806.0], [66.2, 807.0], [66.3, 808.0], [66.4, 808.0], [66.5, 808.0], [66.6, 808.0], [66.7, 809.0], [66.8, 809.0], [66.9, 809.0], [67.0, 810.0], [67.1, 810.0], [67.2, 810.0], [67.3, 811.0], [67.4, 812.0], [67.5, 813.0], [67.6, 814.0], [67.7, 814.0], [67.8, 815.0], [67.9, 815.0], [68.0, 816.0], [68.1, 816.0], [68.2, 816.0], [68.3, 817.0], [68.4, 817.0], [68.5, 818.0], [68.6, 818.0], [68.7, 818.0], [68.8, 820.0], [68.9, 820.0], [69.0, 821.0], [69.1, 821.0], [69.2, 821.0], [69.3, 822.0], [69.4, 823.0], [69.5, 823.0], [69.6, 823.0], [69.7, 824.0], [69.8, 825.0], [69.9, 826.0], [70.0, 826.0], [70.1, 827.0], [70.2, 828.0], [70.3, 829.0], [70.4, 829.0], [70.5, 830.0], [70.6, 830.0], [70.7, 831.0], [70.8, 831.0], [70.9, 831.0], [71.0, 832.0], [71.1, 833.0], [71.2, 833.0], [71.3, 834.0], [71.4, 835.0], [71.5, 836.0], [71.6, 836.0], [71.7, 837.0], [71.8, 838.0], [71.9, 839.0], [72.0, 840.0], [72.1, 840.0], [72.2, 840.0], [72.3, 841.0], [72.4, 841.0], [72.5, 842.0], [72.6, 843.0], [72.7, 843.0], [72.8, 844.0], [72.9, 844.0], [73.0, 846.0], [73.1, 847.0], [73.2, 848.0], [73.3, 848.0], [73.4, 849.0], [73.5, 849.0], [73.6, 850.0], [73.7, 850.0], [73.8, 850.0], [73.9, 851.0], [74.0, 852.0], [74.1, 853.0], [74.2, 854.0], [74.3, 855.0], [74.4, 856.0], [74.5, 857.0], [74.6, 858.0], [74.7, 858.0], [74.8, 860.0], [74.9, 861.0], [75.0, 861.0], [75.1, 862.0], [75.2, 865.0], [75.3, 865.0], [75.4, 866.0], [75.5, 868.0], [75.6, 869.0], [75.7, 870.0], [75.8, 872.0], [75.9, 873.0], [76.0, 875.0], [76.1, 877.0], [76.2, 877.0], [76.3, 879.0], [76.4, 880.0], [76.5, 881.0], [76.6, 882.0], [76.7, 882.0], [76.8, 883.0], [76.9, 884.0], [77.0, 885.0], [77.1, 885.0], [77.2, 885.0], [77.3, 886.0], [77.4, 888.0], [77.5, 888.0], [77.6, 889.0], [77.7, 890.0], [77.8, 890.0], [77.9, 891.0], [78.0, 893.0], [78.1, 895.0], [78.2, 897.0], [78.3, 899.0], [78.4, 903.0], [78.5, 904.0], [78.6, 905.0], [78.7, 906.0], [78.8, 909.0], [78.9, 911.0], [79.0, 912.0], [79.1, 914.0], [79.2, 914.0], [79.3, 915.0], [79.4, 916.0], [79.5, 918.0], [79.6, 918.0], [79.7, 922.0], [79.8, 924.0], [79.9, 925.0], [80.0, 926.0], [80.1, 930.0], [80.2, 932.0], [80.3, 934.0], [80.4, 936.0], [80.5, 936.0], [80.6, 941.0], [80.7, 942.0], [80.8, 946.0], [80.9, 948.0], [81.0, 951.0], [81.1, 952.0], [81.2, 954.0], [81.3, 959.0], [81.4, 960.0], [81.5, 962.0], [81.6, 965.0], [81.7, 967.0], [81.8, 970.0], [81.9, 972.0], [82.0, 975.0], [82.1, 976.0], [82.2, 978.0], [82.3, 980.0], [82.4, 981.0], [82.5, 986.0], [82.6, 988.0], [82.7, 992.0], [82.8, 995.0], [82.9, 996.0], [83.0, 998.0], [83.1, 1003.0], [83.2, 1005.0], [83.3, 1006.0], [83.4, 1008.0], [83.5, 1008.0], [83.6, 1011.0], [83.7, 1012.0], [83.8, 1013.0], [83.9, 1016.0], [84.0, 1016.0], [84.1, 1018.0], [84.2, 1018.0], [84.3, 1019.0], [84.4, 1021.0], [84.5, 1023.0], [84.6, 1026.0], [84.7, 1029.0], [84.8, 1030.0], [84.9, 1032.0], [85.0, 1035.0], [85.1, 1035.0], [85.2, 1037.0], [85.3, 1038.0], [85.4, 1040.0], [85.5, 1040.0], [85.6, 1042.0], [85.7, 1043.0], [85.8, 1043.0], [85.9, 1045.0], [86.0, 1046.0], [86.1, 1047.0], [86.2, 1048.0], [86.3, 1049.0], [86.4, 1050.0], [86.5, 1051.0], [86.6, 1052.0], [86.7, 1052.0], [86.8, 1054.0], [86.9, 1055.0], [87.0, 1055.0], [87.1, 1057.0], [87.2, 1058.0], [87.3, 1060.0], [87.4, 1061.0], [87.5, 1061.0], [87.6, 1062.0], [87.7, 1063.0], [87.8, 1064.0], [87.9, 1064.0], [88.0, 1064.0], [88.1, 1066.0], [88.2, 1067.0], [88.3, 1068.0], [88.4, 1070.0], [88.5, 1072.0], [88.6, 1073.0], [88.7, 1074.0], [88.8, 1075.0], [88.9, 1079.0], [89.0, 1082.0], [89.1, 1084.0], [89.2, 1088.0], [89.3, 1088.0], [89.4, 1090.0], [89.5, 1092.0], [89.6, 1092.0], [89.7, 1093.0], [89.8, 1095.0], [89.9, 1095.0], [90.0, 1097.0], [90.1, 1098.0], [90.2, 1098.0], [90.3, 1100.0], [90.4, 1102.0], [90.5, 1103.0], [90.6, 1103.0], [90.7, 1105.0], [90.8, 1106.0], [90.9, 1107.0], [91.0, 1108.0], [91.1, 1109.0], [91.2, 1110.0], [91.3, 1112.0], [91.4, 1112.0], [91.5, 1114.0], [91.6, 1115.0], [91.7, 1116.0], [91.8, 1116.0], [91.9, 1117.0], [92.0, 1118.0], [92.1, 1119.0], [92.2, 1120.0], [92.3, 1120.0], [92.4, 1121.0], [92.5, 1122.0], [92.6, 1122.0], [92.7, 1124.0], [92.8, 1125.0], [92.9, 1125.0], [93.0, 1126.0], [93.1, 1127.0], [93.2, 1128.0], [93.3, 1129.0], [93.4, 1129.0], [93.5, 1130.0], [93.6, 1131.0], [93.7, 1132.0], [93.8, 1134.0], [93.9, 1134.0], [94.0, 1135.0], [94.1, 1135.0], [94.2, 1136.0], [94.3, 1137.0], [94.4, 1139.0], [94.5, 1139.0], [94.6, 1141.0], [94.7, 1142.0], [94.8, 1143.0], [94.9, 1143.0], [95.0, 1145.0], [95.1, 1146.0], [95.2, 1147.0], [95.3, 1148.0], [95.4, 1149.0], [95.5, 1151.0], [95.6, 1153.0], [95.7, 1154.0], [95.8, 1155.0], [95.9, 1157.0], [96.0, 1159.0], [96.1, 1162.0], [96.2, 1165.0], [96.3, 1168.0], [96.4, 1171.0], [96.5, 1173.0], [96.6, 1175.0], [96.7, 1178.0], [96.8, 1182.0], [96.9, 1184.0], [97.0, 1186.0], [97.1, 1188.0], [97.2, 1190.0], [97.3, 1190.0], [97.4, 1191.0], [97.5, 1194.0], [97.6, 1197.0], [97.7, 1199.0], [97.8, 1202.0], [97.9, 1205.0], [98.0, 1208.0], [98.1, 1212.0], [98.2, 1213.0], [98.3, 1214.0], [98.4, 1218.0], [98.5, 1221.0], [98.6, 1225.0], [98.7, 1231.0], [98.8, 1406.0], [98.9, 1418.0], [99.0, 1680.0], [99.1, 1693.0], [99.2, 1698.0], [99.3, 1726.0], [99.4, 1766.0], [99.5, 1790.0], [99.6, 1809.0], [99.7, 2033.0], [99.8, 2068.0], [99.9, 2112.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 2.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 4.0], [0.5, 4.0], [0.6, 5.0], [0.7, 6.0], [0.8, 7.0], [0.9, 10.0], [1.0, 11.0], [1.1, 12.0], [1.2, 13.0], [1.3, 13.0], [1.4, 14.0], [1.5, 15.0], [1.6, 16.0], [1.7, 17.0], [1.8, 18.0], [1.9, 18.0], [2.0, 19.0], [2.1, 19.0], [2.2, 20.0], [2.3, 20.0], [2.4, 20.0], [2.5, 21.0], [2.6, 21.0], [2.7, 21.0], [2.8, 22.0], [2.9, 22.0], [3.0, 22.0], [3.1, 22.0], [3.2, 23.0], [3.3, 23.0], [3.4, 23.0], [3.5, 23.0], [3.6, 23.0], [3.7, 23.0], [3.8, 23.0], [3.9, 23.0], [4.0, 24.0], [4.1, 24.0], [4.2, 24.0], [4.3, 24.0], [4.4, 25.0], [4.5, 25.0], [4.6, 25.0], [4.7, 25.0], [4.8, 25.0], [4.9, 25.0], [5.0, 25.0], [5.1, 25.0], [5.2, 25.0], [5.3, 25.0], [5.4, 25.0], [5.5, 26.0], [5.6, 26.0], [5.7, 26.0], [5.8, 26.0], [5.9, 26.0], [6.0, 26.0], [6.1, 26.0], [6.2, 26.0], [6.3, 26.0], [6.4, 26.0], [6.5, 26.0], [6.6, 26.0], [6.7, 26.0], [6.8, 26.0], [6.9, 26.0], [7.0, 26.0], [7.1, 26.0], [7.2, 26.0], [7.3, 26.0], [7.4, 26.0], [7.5, 26.0], [7.6, 26.0], [7.7, 26.0], [7.8, 26.0], [7.9, 27.0], [8.0, 27.0], [8.1, 27.0], [8.2, 27.0], [8.3, 27.0], [8.4, 27.0], [8.5, 27.0], [8.6, 27.0], [8.7, 27.0], [8.8, 27.0], [8.9, 27.0], [9.0, 27.0], [9.1, 27.0], [9.2, 27.0], [9.3, 27.0], [9.4, 27.0], [9.5, 27.0], [9.6, 27.0], [9.7, 27.0], [9.8, 27.0], [9.9, 27.0], [10.0, 27.0], [10.1, 27.0], [10.2, 27.0], [10.3, 27.0], [10.4, 27.0], [10.5, 27.0], [10.6, 27.0], [10.7, 27.0], [10.8, 28.0], [10.9, 28.0], [11.0, 28.0], [11.1, 28.0], [11.2, 28.0], [11.3, 28.0], [11.4, 28.0], [11.5, 28.0], [11.6, 28.0], [11.7, 28.0], [11.8, 28.0], [11.9, 28.0], [12.0, 28.0], [12.1, 28.0], [12.2, 28.0], [12.3, 28.0], [12.4, 28.0], [12.5, 28.0], [12.6, 28.0], [12.7, 28.0], [12.8, 28.0], [12.9, 28.0], [13.0, 28.0], [13.1, 28.0], [13.2, 28.0], [13.3, 28.0], [13.4, 28.0], [13.5, 28.0], [13.6, 28.0], [13.7, 28.0], [13.8, 28.0], [13.9, 28.0], [14.0, 28.0], [14.1, 28.0], [14.2, 28.0], [14.3, 28.0], [14.4, 29.0], [14.5, 29.0], [14.6, 29.0], [14.7, 29.0], [14.8, 29.0], [14.9, 29.0], [15.0, 29.0], [15.1, 29.0], [15.2, 29.0], [15.3, 29.0], [15.4, 29.0], [15.5, 29.0], [15.6, 29.0], [15.7, 29.0], [15.8, 29.0], [15.9, 29.0], [16.0, 29.0], [16.1, 29.0], [16.2, 29.0], [16.3, 29.0], [16.4, 29.0], [16.5, 29.0], [16.6, 29.0], [16.7, 29.0], [16.8, 29.0], [16.9, 29.0], [17.0, 29.0], [17.1, 29.0], [17.2, 29.0], [17.3, 29.0], [17.4, 29.0], [17.5, 29.0], [17.6, 29.0], [17.7, 29.0], [17.8, 29.0], [17.9, 29.0], [18.0, 29.0], [18.1, 30.0], [18.2, 30.0], [18.3, 30.0], [18.4, 30.0], [18.5, 30.0], [18.6, 30.0], [18.7, 30.0], [18.8, 30.0], [18.9, 30.0], [19.0, 30.0], [19.1, 30.0], [19.2, 30.0], [19.3, 30.0], [19.4, 30.0], [19.5, 30.0], [19.6, 30.0], [19.7, 30.0], [19.8, 30.0], [19.9, 30.0], [20.0, 30.0], [20.1, 30.0], [20.2, 30.0], [20.3, 30.0], [20.4, 30.0], [20.5, 30.0], [20.6, 30.0], [20.7, 30.0], [20.8, 30.0], [20.9, 30.0], [21.0, 30.0], [21.1, 30.0], [21.2, 30.0], [21.3, 30.0], [21.4, 30.0], [21.5, 30.0], [21.6, 30.0], [21.7, 30.0], [21.8, 30.0], [21.9, 30.0], [22.0, 30.0], [22.1, 30.0], [22.2, 30.0], [22.3, 30.0], [22.4, 30.0], [22.5, 30.0], [22.6, 30.0], [22.7, 30.0], [22.8, 30.0], [22.9, 30.0], [23.0, 30.0], [23.1, 30.0], [23.2, 31.0], [23.3, 31.0], [23.4, 31.0], [23.5, 31.0], [23.6, 31.0], [23.7, 31.0], [23.8, 31.0], [23.9, 31.0], [24.0, 31.0], [24.1, 31.0], [24.2, 31.0], [24.3, 31.0], [24.4, 31.0], [24.5, 31.0], [24.6, 31.0], [24.7, 31.0], [24.8, 31.0], [24.9, 31.0], [25.0, 31.0], [25.1, 31.0], [25.2, 31.0], [25.3, 31.0], [25.4, 31.0], [25.5, 31.0], [25.6, 31.0], [25.7, 31.0], [25.8, 31.0], [25.9, 31.0], [26.0, 31.0], [26.1, 31.0], [26.2, 31.0], [26.3, 31.0], [26.4, 31.0], [26.5, 31.0], [26.6, 31.0], [26.7, 31.0], [26.8, 31.0], [26.9, 31.0], [27.0, 31.0], [27.1, 31.0], [27.2, 31.0], [27.3, 31.0], [27.4, 31.0], [27.5, 31.0], [27.6, 31.0], [27.7, 31.0], [27.8, 31.0], [27.9, 31.0], [28.0, 31.0], [28.1, 31.0], [28.2, 31.0], [28.3, 31.0], [28.4, 31.0], [28.5, 31.0], [28.6, 31.0], [28.7, 31.0], [28.8, 31.0], [28.9, 31.0], [29.0, 32.0], [29.1, 32.0], [29.2, 32.0], [29.3, 32.0], [29.4, 32.0], [29.5, 32.0], [29.6, 32.0], [29.7, 32.0], [29.8, 32.0], [29.9, 32.0], [30.0, 32.0], [30.1, 32.0], [30.2, 32.0], [30.3, 32.0], [30.4, 32.0], [30.5, 32.0], [30.6, 32.0], [30.7, 32.0], [30.8, 32.0], [30.9, 32.0], [31.0, 32.0], [31.1, 32.0], [31.2, 32.0], [31.3, 32.0], [31.4, 32.0], [31.5, 32.0], [31.6, 32.0], [31.7, 32.0], [31.8, 32.0], [31.9, 32.0], [32.0, 32.0], [32.1, 32.0], [32.2, 32.0], [32.3, 32.0], [32.4, 32.0], [32.5, 32.0], [32.6, 32.0], [32.7, 32.0], [32.8, 32.0], [32.9, 32.0], [33.0, 32.0], [33.1, 32.0], [33.2, 32.0], [33.3, 32.0], [33.4, 32.0], [33.5, 32.0], [33.6, 32.0], [33.7, 32.0], [33.8, 32.0], [33.9, 32.0], [34.0, 32.0], [34.1, 32.0], [34.2, 32.0], [34.3, 32.0], [34.4, 32.0], [34.5, 32.0], [34.6, 33.0], [34.7, 33.0], [34.8, 33.0], [34.9, 33.0], [35.0, 33.0], [35.1, 33.0], [35.2, 33.0], [35.3, 33.0], [35.4, 33.0], [35.5, 33.0], [35.6, 33.0], [35.7, 33.0], [35.8, 33.0], [35.9, 33.0], [36.0, 33.0], [36.1, 33.0], [36.2, 33.0], [36.3, 33.0], [36.4, 33.0], [36.5, 33.0], [36.6, 33.0], [36.7, 33.0], [36.8, 33.0], [36.9, 33.0], [37.0, 33.0], [37.1, 33.0], [37.2, 33.0], [37.3, 33.0], [37.4, 33.0], [37.5, 33.0], [37.6, 33.0], [37.7, 33.0], [37.8, 33.0], [37.9, 33.0], [38.0, 33.0], [38.1, 33.0], [38.2, 33.0], [38.3, 33.0], [38.4, 33.0], [38.5, 33.0], [38.6, 33.0], [38.7, 33.0], [38.8, 33.0], [38.9, 33.0], [39.0, 33.0], [39.1, 33.0], [39.2, 33.0], [39.3, 33.0], [39.4, 33.0], [39.5, 33.0], [39.6, 33.0], [39.7, 33.0], [39.8, 33.0], [39.9, 33.0], [40.0, 33.0], [40.1, 33.0], [40.2, 33.0], [40.3, 33.0], [40.4, 33.0], [40.5, 34.0], [40.6, 34.0], [40.7, 34.0], [40.8, 34.0], [40.9, 34.0], [41.0, 34.0], [41.1, 34.0], [41.2, 34.0], [41.3, 34.0], [41.4, 34.0], [41.5, 34.0], [41.6, 34.0], [41.7, 34.0], [41.8, 34.0], [41.9, 34.0], [42.0, 34.0], [42.1, 34.0], [42.2, 34.0], [42.3, 34.0], [42.4, 34.0], [42.5, 34.0], [42.6, 34.0], [42.7, 34.0], [42.8, 34.0], [42.9, 34.0], [43.0, 34.0], [43.1, 34.0], [43.2, 34.0], [43.3, 34.0], [43.4, 34.0], [43.5, 34.0], [43.6, 34.0], [43.7, 34.0], [43.8, 34.0], [43.9, 34.0], [44.0, 34.0], [44.1, 34.0], [44.2, 34.0], [44.3, 34.0], [44.4, 34.0], [44.5, 34.0], [44.6, 34.0], [44.7, 34.0], [44.8, 34.0], [44.9, 34.0], [45.0, 34.0], [45.1, 34.0], [45.2, 34.0], [45.3, 34.0], [45.4, 34.0], [45.5, 34.0], [45.6, 34.0], [45.7, 34.0], [45.8, 34.0], [45.9, 34.0], [46.0, 34.0], [46.1, 34.0], [46.2, 35.0], [46.3, 35.0], [46.4, 35.0], [46.5, 35.0], [46.6, 35.0], [46.7, 35.0], [46.8, 35.0], [46.9, 35.0], [47.0, 35.0], [47.1, 35.0], [47.2, 35.0], [47.3, 35.0], [47.4, 35.0], [47.5, 35.0], [47.6, 35.0], [47.7, 35.0], [47.8, 35.0], [47.9, 35.0], [48.0, 35.0], [48.1, 35.0], [48.2, 35.0], [48.3, 35.0], [48.4, 35.0], [48.5, 35.0], [48.6, 35.0], [48.7, 35.0], [48.8, 35.0], [48.9, 35.0], [49.0, 35.0], [49.1, 35.0], [49.2, 35.0], [49.3, 35.0], [49.4, 35.0], [49.5, 35.0], [49.6, 35.0], [49.7, 35.0], [49.8, 35.0], [49.9, 35.0], [50.0, 35.0], [50.1, 35.0], [50.2, 35.0], [50.3, 35.0], [50.4, 35.0], [50.5, 35.0], [50.6, 35.0], [50.7, 35.0], [50.8, 35.0], [50.9, 35.0], [51.0, 35.0], [51.1, 35.0], [51.2, 35.0], [51.3, 35.0], [51.4, 35.0], [51.5, 35.0], [51.6, 35.0], [51.7, 35.0], [51.8, 35.0], [51.9, 35.0], [52.0, 35.0], [52.1, 35.0], [52.2, 35.0], [52.3, 35.0], [52.4, 35.0], [52.5, 35.0], [52.6, 36.0], [52.7, 36.0], [52.8, 36.0], [52.9, 36.0], [53.0, 36.0], [53.1, 36.0], [53.2, 36.0], [53.3, 36.0], [53.4, 36.0], [53.5, 36.0], [53.6, 36.0], [53.7, 36.0], [53.8, 36.0], [53.9, 36.0], [54.0, 36.0], [54.1, 36.0], [54.2, 36.0], [54.3, 36.0], [54.4, 36.0], [54.5, 36.0], [54.6, 36.0], [54.7, 36.0], [54.8, 36.0], [54.9, 36.0], [55.0, 36.0], [55.1, 36.0], [55.2, 36.0], [55.3, 36.0], [55.4, 36.0], [55.5, 36.0], [55.6, 36.0], [55.7, 36.0], [55.8, 36.0], [55.9, 36.0], [56.0, 36.0], [56.1, 36.0], [56.2, 36.0], [56.3, 36.0], [56.4, 36.0], [56.5, 36.0], [56.6, 36.0], [56.7, 36.0], [56.8, 36.0], [56.9, 36.0], [57.0, 36.0], [57.1, 36.0], [57.2, 36.0], [57.3, 36.0], [57.4, 36.0], [57.5, 36.0], [57.6, 36.0], [57.7, 36.0], [57.8, 36.0], [57.9, 36.0], [58.0, 36.0], [58.1, 36.0], [58.2, 36.0], [58.3, 36.0], [58.4, 36.0], [58.5, 36.0], [58.6, 36.0], [58.7, 36.0], [58.8, 36.0], [58.9, 36.0], [59.0, 36.0], [59.1, 36.0], [59.2, 36.0], [59.3, 36.0], [59.4, 37.0], [59.5, 37.0], [59.6, 37.0], [59.7, 37.0], [59.8, 37.0], [59.9, 37.0], [60.0, 37.0], [60.1, 37.0], [60.2, 37.0], [60.3, 37.0], [60.4, 37.0], [60.5, 37.0], [60.6, 37.0], [60.7, 37.0], [60.8, 37.0], [60.9, 37.0], [61.0, 37.0], [61.1, 37.0], [61.2, 37.0], [61.3, 37.0], [61.4, 37.0], [61.5, 37.0], [61.6, 37.0], [61.7, 37.0], [61.8, 37.0], [61.9, 37.0], [62.0, 37.0], [62.1, 37.0], [62.2, 37.0], [62.3, 37.0], [62.4, 37.0], [62.5, 37.0], [62.6, 37.0], [62.7, 37.0], [62.8, 37.0], [62.9, 37.0], [63.0, 37.0], [63.1, 37.0], [63.2, 37.0], [63.3, 37.0], [63.4, 37.0], [63.5, 37.0], [63.6, 37.0], [63.7, 37.0], [63.8, 37.0], [63.9, 37.0], [64.0, 37.0], [64.1, 37.0], [64.2, 37.0], [64.3, 37.0], [64.4, 37.0], [64.5, 37.0], [64.6, 37.0], [64.7, 37.0], [64.8, 37.0], [64.9, 37.0], [65.0, 37.0], [65.1, 37.0], [65.2, 37.0], [65.3, 37.0], [65.4, 37.0], [65.5, 37.0], [65.6, 37.0], [65.7, 37.0], [65.8, 37.0], [65.9, 37.0], [66.0, 37.0], [66.1, 38.0], [66.2, 38.0], [66.3, 38.0], [66.4, 38.0], [66.5, 38.0], [66.6, 38.0], [66.7, 38.0], [66.8, 38.0], [66.9, 38.0], [67.0, 38.0], [67.1, 38.0], [67.2, 38.0], [67.3, 38.0], [67.4, 38.0], [67.5, 38.0], [67.6, 38.0], [67.7, 38.0], [67.8, 38.0], [67.9, 38.0], [68.0, 38.0], [68.1, 38.0], [68.2, 38.0], [68.3, 38.0], [68.4, 38.0], [68.5, 38.0], [68.6, 38.0], [68.7, 38.0], [68.8, 38.0], [68.9, 38.0], [69.0, 38.0], [69.1, 38.0], [69.2, 38.0], [69.3, 38.0], [69.4, 38.0], [69.5, 38.0], [69.6, 38.0], [69.7, 38.0], [69.8, 38.0], [69.9, 38.0], [70.0, 38.0], [70.1, 38.0], [70.2, 38.0], [70.3, 38.0], [70.4, 38.0], [70.5, 38.0], [70.6, 38.0], [70.7, 38.0], [70.8, 38.0], [70.9, 38.0], [71.0, 38.0], [71.1, 39.0], [71.2, 39.0], [71.3, 39.0], [71.4, 39.0], [71.5, 39.0], [71.6, 39.0], [71.7, 39.0], [71.8, 39.0], [71.9, 39.0], [72.0, 39.0], [72.1, 39.0], [72.2, 39.0], [72.3, 39.0], [72.4, 39.0], [72.5, 39.0], [72.6, 39.0], [72.7, 39.0], [72.8, 39.0], [72.9, 39.0], [73.0, 39.0], [73.1, 39.0], [73.2, 39.0], [73.3, 39.0], [73.4, 39.0], [73.5, 39.0], [73.6, 39.0], [73.7, 39.0], [73.8, 39.0], [73.9, 39.0], [74.0, 39.0], [74.1, 39.0], [74.2, 39.0], [74.3, 39.0], [74.4, 39.0], [74.5, 39.0], [74.6, 39.0], [74.7, 39.0], [74.8, 39.0], [74.9, 39.0], [75.0, 40.0], [75.1, 40.0], [75.2, 40.0], [75.3, 40.0], [75.4, 40.0], [75.5, 40.0], [75.6, 40.0], [75.7, 40.0], [75.8, 40.0], [75.9, 40.0], [76.0, 40.0], [76.1, 40.0], [76.2, 40.0], [76.3, 40.0], [76.4, 40.0], [76.5, 40.0], [76.6, 40.0], [76.7, 40.0], [76.8, 40.0], [76.9, 40.0], [77.0, 40.0], [77.1, 40.0], [77.2, 41.0], [77.3, 41.0], [77.4, 41.0], [77.5, 41.0], [77.6, 41.0], [77.7, 41.0], [77.8, 41.0], [77.9, 41.0], [78.0, 41.0], [78.1, 41.0], [78.2, 41.0], [78.3, 41.0], [78.4, 41.0], [78.5, 41.0], [78.6, 41.0], [78.7, 41.0], [78.8, 41.0], [78.9, 41.0], [79.0, 41.0], [79.1, 41.0], [79.2, 41.0], [79.3, 41.0], [79.4, 42.0], [79.5, 42.0], [79.6, 42.0], [79.7, 42.0], [79.8, 42.0], [79.9, 42.0], [80.0, 42.0], [80.1, 42.0], [80.2, 42.0], [80.3, 42.0], [80.4, 42.0], [80.5, 42.0], [80.6, 42.0], [80.7, 42.0], [80.8, 42.0], [80.9, 42.0], [81.0, 42.0], [81.1, 42.0], [81.2, 42.0], [81.3, 42.0], [81.4, 42.0], [81.5, 42.0], [81.6, 42.0], [81.7, 42.0], [81.8, 43.0], [81.9, 43.0], [82.0, 43.0], [82.1, 43.0], [82.2, 43.0], [82.3, 43.0], [82.4, 43.0], [82.5, 43.0], [82.6, 43.0], [82.7, 43.0], [82.8, 43.0], [82.9, 43.0], [83.0, 43.0], [83.1, 43.0], [83.2, 43.0], [83.3, 43.0], [83.4, 43.0], [83.5, 44.0], [83.6, 44.0], [83.7, 44.0], [83.8, 44.0], [83.9, 44.0], [84.0, 44.0], [84.1, 44.0], [84.2, 44.0], [84.3, 44.0], [84.4, 44.0], [84.5, 44.0], [84.6, 44.0], [84.7, 44.0], [84.8, 44.0], [84.9, 44.0], [85.0, 45.0], [85.1, 45.0], [85.2, 45.0], [85.3, 45.0], [85.4, 45.0], [85.5, 45.0], [85.6, 45.0], [85.7, 45.0], [85.8, 45.0], [85.9, 45.0], [86.0, 45.0], [86.1, 45.0], [86.2, 45.0], [86.3, 45.0], [86.4, 46.0], [86.5, 46.0], [86.6, 46.0], [86.7, 46.0], [86.8, 46.0], [86.9, 46.0], [87.0, 46.0], [87.1, 46.0], [87.2, 46.0], [87.3, 46.0], [87.4, 46.0], [87.5, 47.0], [87.6, 47.0], [87.7, 47.0], [87.8, 47.0], [87.9, 47.0], [88.0, 47.0], [88.1, 47.0], [88.2, 48.0], [88.3, 48.0], [88.4, 48.0], [88.5, 48.0], [88.6, 48.0], [88.7, 48.0], [88.8, 48.0], [88.9, 48.0], [89.0, 49.0], [89.1, 49.0], [89.2, 49.0], [89.3, 49.0], [89.4, 49.0], [89.5, 49.0], [89.6, 49.0], [89.7, 50.0], [89.8, 50.0], [89.9, 50.0], [90.0, 50.0], [90.1, 50.0], [90.2, 51.0], [90.3, 51.0], [90.4, 51.0], [90.5, 52.0], [90.6, 52.0], [90.7, 52.0], [90.8, 52.0], [90.9, 52.0], [91.0, 53.0], [91.1, 53.0], [91.2, 53.0], [91.3, 54.0], [91.4, 54.0], [91.5, 54.0], [91.6, 54.0], [91.7, 55.0], [91.8, 55.0], [91.9, 55.0], [92.0, 55.0], [92.1, 55.0], [92.2, 56.0], [92.3, 56.0], [92.4, 56.0], [92.5, 56.0], [92.6, 56.0], [92.7, 57.0], [92.8, 57.0], [92.9, 58.0], [93.0, 58.0], [93.1, 59.0], [93.2, 59.0], [93.3, 59.0], [93.4, 60.0], [93.5, 60.0], [93.6, 61.0], [93.7, 62.0], [93.8, 62.0], [93.9, 64.0], [94.0, 65.0], [94.1, 66.0], [94.2, 67.0], [94.3, 67.0], [94.4, 73.0], [94.5, 74.0], [94.6, 86.0], [94.7, 91.0], [94.8, 95.0], [94.9, 97.0], [95.0, 98.0], [95.1, 98.0], [95.2, 99.0], [95.3, 101.0], [95.4, 101.0], [95.5, 101.0], [95.6, 102.0], [95.7, 103.0], [95.8, 104.0], [95.9, 105.0], [96.0, 106.0], [96.1, 107.0], [96.2, 108.0], [96.3, 110.0], [96.4, 111.0], [96.5, 113.0], [96.6, 115.0], [96.7, 116.0], [96.8, 117.0], [96.9, 119.0], [97.0, 121.0], [97.1, 122.0], [97.2, 124.0], [97.3, 124.0], [97.4, 125.0], [97.5, 126.0], [97.6, 127.0], [97.7, 128.0], [97.8, 128.0], [97.9, 129.0], [98.0, 129.0], [98.1, 130.0], [98.2, 130.0], [98.3, 131.0], [98.4, 131.0], [98.5, 132.0], [98.6, 133.0], [98.7, 133.0], [98.8, 134.0], [98.9, 134.0], [99.0, 135.0], [99.1, 136.0], [99.2, 136.0], [99.3, 136.0], [99.4, 138.0], [99.5, 139.0], [99.6, 142.0], [99.7, 144.0], [99.8, 243.0], [99.9, 1019.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2858.0, "series": [{"data": [[0.0, 2737.0], [1100.0, 3.0], [300.0, 8.0], [100.0, 91.0], [200.0, 67.0], [400.0, 1.0], [1000.0, 92.0], [500.0, 1.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 165.0], [2100.0, 4.0], [600.0, 253.0], [700.0, 516.0], [200.0, 166.0], [800.0, 406.0], [900.0, 142.0], [1000.0, 217.0], [1100.0, 224.0], [300.0, 238.0], [1200.0, 32.0], [1400.0, 5.0], [100.0, 396.0], [400.0, 100.0], [1600.0, 8.0], [1700.0, 10.0], [1800.0, 2.0], [1900.0, 1.0], [500.0, 109.0], [2000.0, 6.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 2858.0], [100.0, 135.0], [200.0, 3.0], [1000.0, 4.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 31.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6965.0, "series": [{"data": [[0.0, 6965.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2004.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 31.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 48.18333333333327, "minX": 1.6689285E12, "maxY": 737.1259999999992, "series": [{"data": [[1.6689285E12, 109.22866666666668]], "isOverall": false, "label": "client-to-gateway-non-caching (GET)", "isController": false}, {"data": [[1.6689285E12, 48.18333333333327]], "isOverall": false, "label": "client-to-application (GET)", "isController": false}, {"data": [[1.6689285E12, 737.1259999999992]], "isOverall": false, "label": "client-to-gateway-caching (GET)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6689285E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 2100.0, "series": [{"data": [[2.0, 1005.0], [3.0, 1015.0], [4.0, 1015.0], [5.0, 1013.0], [6.0, 1014.0], [7.0, 1039.0], [9.0, 1032.0], [10.0, 1019.0], [12.0, 1043.0], [14.0, 1035.0], [16.0, 1070.0], [17.0, 1073.0], [18.0, 1070.0], [20.0, 1066.3333333333333], [22.0, 1054.0], [23.0, 1066.0], [24.0, 1064.0], [26.0, 548.5], [27.0, 56.5], [28.0, 47.0], [29.0, 852.4], [30.0, 298.0], [31.0, 61.0], [33.0, 211.16666666666666], [32.0, 391.33333333333337], [35.0, 143.77777777777777], [34.0, 170.71428571428572], [37.0, 214.54545454545456], [36.0, 39.0], [39.0, 119.41666666666667], [38.0, 140.5], [41.0, 99.0], [40.0, 126.0], [43.0, 130.75], [42.0, 100.41176470588235], [45.0, 45.0], [44.0, 46.588235294117645], [47.0, 43.62500000000001], [46.0, 155.037037037037], [49.0, 113.84375], [48.0, 139.33333333333334], [51.0, 93.81818181818183], [50.0, 119.11764705882352], [53.0, 81.93333333333332], [52.0, 67.47999999999999], [55.0, 47.65625], [54.0, 91.4642857142857], [56.0, 152.1818181818182], [57.0, 85.07407407407408], [59.0, 51.76190476190476], [58.0, 96.16666666666666], [61.0, 136.4230769230769], [60.0, 53.13793103448276], [63.0, 51.516129032258064], [62.0, 86.86666666666667], [65.0, 219.53488372093022], [67.0, 56.921052631578945], [66.0, 85.48275862068965], [64.0, 53.0], [69.0, 61.22857142857143], [70.0, 67.95454545454547], [68.0, 86.39130434782608], [71.0, 69.8846153846154], [75.0, 59.296296296296305], [74.0, 52.166666666666664], [73.0, 167.77777777777777], [72.0, 105.2], [79.0, 54.24137931034483], [77.0, 53.52173913043478], [76.0, 65.86363636363637], [78.0, 49.04761904761905], [83.0, 71.23809523809524], [80.0, 52.5], [81.0, 74.3157894736842], [82.0, 77.89999999999999], [86.0, 77.91666666666667], [85.0, 58.38461538461538], [87.0, 67.0], [84.0, 67.72727272727272], [91.0, 61.95238095238097], [89.0, 67.15789473684212], [90.0, 68.00000000000001], [88.0, 76.6], [92.0, 76.23809523809524], [95.0, 57.650000000000006], [94.0, 68.0], [93.0, 65.42857142857143], [96.0, 70.82142857142857], [97.0, 75.58333333333333], [99.0, 54.1764705882353], [98.0, 56.27272727272727], [102.0, 74.85000000000001], [101.0, 58.79999999999999], [100.0, 70.20833333333333], [103.0, 59.5], [107.0, 65.9], [106.0, 78.86666666666666], [104.0, 62.812500000000014], [105.0, 60.083333333333336], [111.0, 71.36363636363636], [109.0, 120.125], [108.0, 94.29411764705881], [110.0, 80.92857142857144], [115.0, 64.06666666666665], [114.0, 69.375], [112.0, 76.06249999999999], [113.0, 120.54545454545453], [119.0, 105.77272727272728], [117.0, 76.0], [116.0, 58.0], [118.0, 57.400000000000006], [121.0, 81.60000000000001], [120.0, 72.39999999999999], [123.0, 250.36363636363635], [122.0, 137.35714285714286], [127.0, 65.5], [125.0, 68.72727272727273], [126.0, 65.7], [124.0, 59.625], [134.0, 60.785714285714285], [132.0, 64.77777777777777], [129.0, 89.55555555555556], [131.0, 66.64285714285714], [130.0, 67.46153846153844], [128.0, 88.76923076923077], [133.0, 67.16666666666669], [135.0, 70.28571428571429], [136.0, 61.65], [143.0, 63.863636363636346], [140.0, 71.39999999999999], [139.0, 64.61538461538463], [141.0, 73.75], [137.0, 84.53333333333333], [138.0, 53.714285714285715], [142.0, 69.39999999999999], [151.0, 55.411764705882355], [150.0, 127.04545454545453], [149.0, 106.23809523809524], [146.0, 66.33333333333334], [148.0, 129.66666666666666], [145.0, 119.05263157894737], [144.0, 181.89473684210526], [147.0, 80.875], [153.0, 81.3125], [152.0, 146.82142857142858], [158.0, 178.29411764705878], [157.0, 105.0], [156.0, 79.875], [154.0, 86.61224489795919], [155.0, 68.42105263157895], [159.0, 227.05], [167.0, 51.76470588235294], [165.0, 124.74999999999999], [164.0, 56.1764705882353], [163.0, 63.904761904761905], [162.0, 75.44999999999999], [166.0, 126.58333333333336], [161.0, 58.166666666666664], [160.0, 63.70370370370372], [174.0, 76.33333333333334], [173.0, 81.60000000000001], [170.0, 62.27777777777777], [168.0, 74.70000000000003], [175.0, 69.15789473684211], [171.0, 110.9090909090909], [169.0, 81.89999999999999], [172.0, 103.6], [183.0, 76.4], [182.0, 80.0909090909091], [181.0, 90.85714285714286], [180.0, 115.5], [179.0, 72.0], [178.0, 96.80000000000001], [176.0, 69.80000000000001], [177.0, 108.5], [189.0, 74.14285714285715], [188.0, 69.4], [187.0, 82.11111111111111], [186.0, 90.5], [184.0, 108.00000000000001], [190.0, 85.0], [191.0, 82.5], [185.0, 93.25], [198.0, 66.6], [197.0, 71.66666666666667], [196.0, 87.23076923076921], [194.0, 69.16666666666667], [192.0, 72.71428571428571], [199.0, 79.8], [195.0, 84.4], [193.0, 71.5], [207.0, 61.5], [206.0, 71.12499999999999], [205.0, 49.25], [203.0, 113.8], [202.0, 78.11111111111111], [200.0, 61.333333333333336], [204.0, 75.42857142857143], [201.0, 73.6], [213.0, 46.666666666666664], [211.0, 69.57142857142857], [208.0, 48.0], [212.0, 50.75], [210.0, 63.25], [214.0, 51.5], [209.0, 76.75], [219.0, 49.69230769230769], [217.0, 56.666666666666664], [216.0, 50.0], [221.0, 58.5], [220.0, 56.666666666666664], [1.0, 1024.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[109.22766666666678, 96.20300000000027]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 1784.0], [3.0, 2.285714285714286], [4.0, 373.75], [5.0, 247.8], [6.0, 574.0], [7.0, 2.0], [8.0, 351.1428571428571], [9.0, 454.0], [10.0, 828.0], [12.0, 1135.0], [14.0, 1116.0], [16.0, 944.0], [17.0, 1155.0], [18.0, 735.0], [19.0, 1052.0], [20.0, 1164.0], [22.0, 1231.0], [23.0, 13.5], [24.0, 1058.0], [31.0, 979.0], [33.0, 13.0], [34.0, 1103.0], [38.0, 1146.0], [41.0, 1125.0], [40.0, 1057.0], [43.0, 833.0], [42.0, 843.0], [45.0, 1031.0], [44.0, 1201.0], [47.0, 1154.0], [46.0, 904.0], [50.0, 1026.5], [53.0, 750.3333333333334], [55.0, 80.0], [54.0, 389.5], [57.0, 244.5], [56.0, 1103.0], [59.0, 606.5], [58.0, 66.0], [61.0, 813.25], [60.0, 435.3333333333333], [63.0, 85.33333333333334], [62.0, 338.25], [66.0, 1162.0], [65.0, 1203.0], [64.0, 1019.0], [71.0, 1142.0], [69.0, 1109.0], [68.0, 1063.0], [75.0, 796.0], [74.0, 295.2], [73.0, 58.0], [72.0, 319.24999999999994], [79.0, 743.0], [77.0, 85.5], [82.0, 326.0], [80.0, 163.0], [83.0, 639.7142857142858], [81.0, 78.0], [84.0, 198.8], [87.0, 655.5], [86.0, 331.0], [85.0, 156.0], [91.0, 665.6666666666666], [90.0, 651.5], [89.0, 148.0], [88.0, 742.3333333333334], [95.0, 1000.090909090909], [93.0, 172.0], [98.0, 584.0], [99.0, 160.0], [103.0, 101.66666666666667], [102.0, 507.0], [101.0, 533.2], [106.0, 671.5], [105.0, 122.5], [104.0, 645.5], [110.0, 832.0], [109.0, 147.0], [108.0, 469.6666666666667], [115.0, 943.8], [114.0, 142.0], [112.0, 668.6666666666666], [119.0, 659.0], [118.0, 625.0], [117.0, 880.25], [123.0, 173.0], [122.0, 754.3333333333334], [121.0, 141.0], [120.0, 633.0], [127.0, 96.0], [126.0, 88.25], [125.0, 729.25], [124.0, 158.0], [134.0, 602.5], [131.0, 53.666666666666664], [129.0, 343.0], [135.0, 51.0], [133.0, 54.0], [130.0, 52.0], [128.0, 51.0], [143.0, 481.3333333333333], [142.0, 120.0], [141.0, 330.66666666666663], [140.0, 126.0], [138.0, 127.5], [139.0, 216.0], [137.0, 58.0], [136.0, 575.5], [150.0, 825.0], [149.0, 137.75], [147.0, 244.0], [146.0, 192.25], [145.0, 411.1428571428571], [144.0, 183.28571428571428], [151.0, 826.0], [157.0, 164.0], [156.0, 283.5], [155.0, 200.83333333333331], [154.0, 861.9999999999999], [153.0, 466.9090909090909], [158.0, 1061.8], [159.0, 1000.0], [152.0, 1166.0], [167.0, 422.6666666666667], [165.0, 578.5], [164.0, 751.3333333333334], [163.0, 163.0], [162.0, 45.0], [161.0, 794.75], [166.0, 255.0], [160.0, 471.0], [175.0, 1080.0], [174.0, 697.1666666666667], [173.0, 675.6], [172.0, 594.0], [171.0, 177.66666666666666], [170.0, 359.66666666666663], [168.0, 413.1666666666667], [169.0, 1052.5], [183.0, 664.0], [182.0, 653.0], [181.0, 771.6666666666666], [180.0, 162.0], [179.0, 162.0], [178.0, 816.25], [177.0, 137.0], [176.0, 146.0], [191.0, 684.0], [188.0, 690.0], [187.0, 651.5], [186.0, 894.0], [185.0, 172.0], [184.0, 565.0], [189.0, 1196.5], [199.0, 377.4], [197.0, 751.2], [195.0, 120.5], [194.0, 518.0], [193.0, 1195.0], [192.0, 1202.0], [202.0, 376.0], [203.0, 108.0], [200.0, 57.0], [207.0, 649.0], [206.0, 179.0], [204.0, 132.0], [205.0, 792.0], [214.0, 459.5], [215.0, 118.0], [210.0, 698.0], [209.0, 183.0], [212.0, 882.5], [223.0, 234.57142857142858], [222.0, 574.0], [218.0, 178.9], [220.0, 445.6666666666667], [217.0, 763.5], [216.0, 117.0], [219.0, 1010.0], [226.0, 353.75], [224.0, 63.5], [230.0, 693.0], [227.0, 569.8], [225.0, 476.0], [238.0, 591.3333333333333], [236.0, 297.0], [235.0, 774.5], [232.0, 333.0], [237.0, 1182.0], [234.0, 2100.0], [233.0, 1070.6666666666667], [246.0, 834.0], [245.0, 198.0], [244.0, 517.0], [241.0, 281.0], [240.0, 1059.0], [243.0, 1121.0], [242.0, 1159.6666666666667], [254.0, 525.0], [253.0, 173.0], [251.0, 190.66666666666666], [248.0, 458.75], [255.0, 1151.0], [252.0, 1119.25], [249.0, 1103.0], [268.0, 147.0], [266.0, 657.75], [271.0, 585.8333333333334], [265.0, 1170.0], [269.0, 1166.6666666666667], [267.0, 252.5], [263.0, 619.8], [262.0, 653.0], [260.0, 214.68421052631578], [261.0, 536.3333333333333], [259.0, 496.3333333333333], [258.0, 1122.0], [257.0, 704.0], [256.0, 210.5], [286.0, 217.87500000000003], [275.0, 365.5], [274.0, 495.6666666666667], [272.0, 151.0], [273.0, 617.6666666666667], [285.0, 247.14285714285714], [284.0, 310.5], [283.0, 269.2857142857143], [282.0, 251.6], [281.0, 136.2], [280.0, 190.6], [287.0, 567.5], [277.0, 221.375], [276.0, 666.0], [279.0, 155.75], [278.0, 152.0606060606061], [290.0, 149.16666666666669], [303.0, 155.33333333333334], [301.0, 481.875], [300.0, 368.6], [291.0, 164.0], [302.0, 415.0], [298.0, 304.6], [299.0, 214.0], [296.0, 607.0], [297.0, 143.0], [295.0, 168.5], [294.0, 138.0], [293.0, 311.1111111111111], [292.0, 137.0], [289.0, 147.33333333333334], [288.0, 559.75], [306.0, 566.5], [308.0, 453.3333333333333], [311.0, 457.0], [307.0, 512.0], [305.0, 153.25], [304.0, 393.4], [319.0, 387.5384615384615], [317.0, 659.6666666666666], [316.0, 262.0], [315.0, 265.0], [314.0, 1099.0], [313.0, 646.0], [332.0, 501.5], [334.0, 435.5], [333.0, 220.5], [335.0, 580.0], [329.0, 872.1999999999999], [330.0, 1038.6666666666667], [328.0, 1047.3333333333333], [326.0, 822.3333333333334], [324.0, 622.0], [325.0, 376.0], [323.0, 235.0], [322.0, 930.0], [321.0, 501.33333333333337], [320.0, 244.0], [327.0, 792.0], [349.0, 469.0], [348.0, 423.4], [346.0, 538.75], [347.0, 830.5], [345.0, 682.0], [351.0, 476.75], [344.0, 1098.0], [350.0, 1129.0], [343.0, 527.2222222222222], [341.0, 356.2857142857143], [342.0, 233.33333333333334], [340.0, 235.33333333333331], [339.0, 412.8], [338.0, 463.4285714285714], [336.0, 679.0], [354.0, 557.3333333333333], [353.0, 703.5], [352.0, 1135.0], [367.0, 1155.6666666666667], [364.0, 1151.0], [362.0, 1152.0], [361.0, 1139.0], [360.0, 1138.0], [357.0, 1133.0], [356.0, 1136.5], [381.0, 849.0], [379.0, 1091.0], [377.0, 1020.0], [376.0, 1124.0], [374.0, 931.0], [368.0, 1417.0], [373.0, 810.0], [372.0, 975.0], [371.0, 1680.0], [370.0, 1426.5], [399.0, 877.0], [398.0, 1103.5], [395.0, 1085.3333333333333], [392.0, 758.0], [390.0, 1407.5], [388.0, 1112.0], [386.0, 875.5], [414.0, 137.5], [415.0, 138.5], [412.0, 136.5], [410.0, 428.5], [409.0, 598.5], [408.0, 1122.0], [407.0, 776.3333333333334], [405.0, 1391.0], [402.0, 1090.0], [401.0, 1005.0], [447.0, 142.0], [446.0, 638.0], [445.0, 966.0], [444.0, 732.0], [443.0, 887.0], [441.0, 980.0], [440.0, 689.5], [437.0, 1056.0], [460.0, 611.0], [453.0, 145.5], [452.0, 754.0], [454.0, 1286.6666666666667], [451.0, 618.3333333333333], [449.0, 690.3333333333334], [448.0, 146.0], [455.0, 1081.5], [462.0, 155.5], [461.0, 1036.6666666666667], [459.0, 137.0], [458.0, 149.0], [463.0, 1033.6666666666667], [457.0, 981.0], [478.0, 533.0], [475.0, 401.0], [474.0, 332.8], [479.0, 161.0], [473.0, 908.0], [472.0, 901.0], [477.0, 179.76923076923077], [467.0, 842.5], [465.0, 925.0], [471.0, 634.0], [470.0, 614.0], [468.0, 473.6666666666667], [469.0, 607.0], [494.0, 148.0], [495.0, 612.0], [493.0, 617.0], [492.0, 156.29166666666669], [484.0, 170.5], [486.0, 1016.0], [485.0, 889.0], [482.0, 538.2], [481.0, 815.0], [487.0, 968.0], [491.0, 1000.75], [490.0, 1047.0], [489.0, 747.0], [488.0, 1049.0], [510.0, 908.0], [500.0, 155.66666666666666], [502.0, 1041.3333333333333], [501.0, 1103.0], [498.0, 605.4], [497.0, 939.0], [496.0, 133.0], [511.0, 920.0], [508.0, 1134.0], [507.0, 1126.0], [506.0, 1109.0], [504.0, 643.0], [537.0, 918.0], [542.0, 928.6666666666666], [543.0, 1127.0], [528.0, 960.25], [529.0, 715.0], [532.0, 643.0], [531.0, 976.0], [540.0, 1124.0], [539.0, 1034.0], [538.0, 1022.0], [536.0, 2043.0], [519.0, 1084.5], [518.0, 989.0], [516.0, 1002.6666666666666], [515.0, 803.5], [513.0, 1048.6666666666667], [512.0, 884.0], [527.0, 1015.0], [526.0, 1116.0], [524.0, 740.0], [522.0, 1047.3333333333333], [521.0, 1056.0], [535.0, 886.5], [533.0, 627.0], [573.0, 932.0], [575.0, 1106.0], [560.0, 894.5], [572.0, 1130.5], [571.0, 1041.3333333333333], [569.0, 1063.0], [568.0, 1001.6666666666666], [559.0, 1076.0], [547.0, 917.5], [546.0, 1049.3333333333333], [551.0, 1035.0], [549.0, 1038.3333333333333], [558.0, 1125.0], [557.0, 659.0], [556.0, 992.5], [555.0, 1066.0], [554.0, 770.0], [553.0, 976.0], [567.0, 911.0], [565.0, 827.0], [564.0, 1107.5], [561.0, 981.0], [600.0, 968.5], [605.0, 1088.5], [607.0, 1036.5], [604.0, 1077.5], [603.0, 1037.0], [601.0, 642.5], [591.0, 1007.5], [576.0, 1010.0], [580.0, 1053.0], [577.0, 1033.0], [582.0, 1125.0], [581.0, 1053.0], [590.0, 1041.0], [588.0, 1056.5], [587.0, 1030.0], [585.0, 991.5], [584.0, 1040.0], [597.0, 1098.3333333333333], [595.0, 1109.0], [594.0, 1066.0], [592.0, 1064.0], [633.0, 1111.0], [626.0, 1129.5], [638.0, 2033.0], [639.0, 1702.0], [625.0, 1102.0], [637.0, 1598.5], [632.0, 1084.5], [615.0, 1052.0], [614.0, 1062.0], [612.0, 997.5], [610.0, 1030.0], [611.0, 996.0], [608.0, 1064.0], [623.0, 1064.0], [622.0, 1066.5], [621.0, 1050.0], [619.0, 1126.0], [618.0, 1094.5], [616.0, 1059.0], [631.0, 622.0], [629.0, 1125.0], [628.0, 1118.3333333333333], [670.0, 2041.0], [671.0, 896.5], [669.0, 895.0], [667.0, 713.0], [666.0, 819.0], [665.0, 713.0], [655.0, 848.75], [641.0, 1697.5], [645.0, 1092.0], [644.0, 1118.3333333333333], [647.0, 1050.0], [646.0, 1060.0], [652.0, 995.0], [649.0, 1688.5], [662.0, 835.6666666666666], [659.0, 1017.0], [658.0, 719.0], [699.0, 1025.3333333333333], [702.0, 1022.0], [696.0, 1021.5], [679.0, 890.0], [678.0, 934.0], [677.0, 948.5], [675.0, 947.0], [673.0, 974.0], [672.0, 776.0], [694.0, 1017.5], [692.0, 980.0], [690.0, 877.0], [687.0, 856.6666666666666], [684.0, 957.0], [683.0, 614.0], [681.0, 866.0], [722.0, 1066.0], [733.0, 1035.0], [731.0, 1103.0], [730.0, 1074.5], [728.0, 1070.3333333333333], [718.0, 1058.0], [705.0, 1020.0], [711.0, 1051.5], [706.0, 1041.0], [717.0, 1057.0], [716.0, 1069.0], [715.0, 1062.0], [713.0, 1055.5], [712.0, 1044.0], [725.0, 1068.0], [724.0, 1074.0], [723.0, 1070.0], [720.0, 1065.5], [766.0, 376.0], [767.0, 687.25], [752.0, 753.0], [755.0, 604.0], [754.0, 718.0], [765.0, 381.0], [764.0, 824.0], [763.0, 530.6666666666666], [761.0, 614.0], [760.0, 390.0], [750.0, 668.5], [751.0, 999.0], [749.0, 661.3333333333334], [747.0, 771.0], [746.0, 755.0], [745.0, 811.3333333333335], [759.0, 600.0], [758.0, 369.0], [757.0, 603.5], [756.0, 574.0], [792.0, 617.5], [798.0, 400.0], [799.0, 694.5], [784.0, 567.0], [796.0, 637.6666666666666], [795.0, 578.5], [794.0, 610.5], [783.0, 402.0], [782.0, 847.0], [769.0, 680.5], [768.0, 597.5], [771.0, 665.3333333333334], [770.0, 577.5], [773.0, 584.0], [772.0, 369.0], [775.0, 704.0], [774.0, 369.0], [781.0, 519.6666666666666], [779.0, 674.6666666666666], [778.0, 396.5], [776.0, 423.0], [777.0, 794.0], [789.0, 627.75], [788.0, 752.0], [787.0, 537.3333333333334], [786.0, 376.0], [785.0, 679.3333333333334], [807.0, 557.0], [830.0, 594.5], [831.0, 563.0], [816.0, 833.0], [829.0, 593.5], [828.0, 565.5], [826.0, 1105.0], [825.0, 759.0], [824.0, 751.0], [827.0, 777.0], [806.0, 605.5], [805.0, 403.0], [804.0, 600.0], [801.0, 410.0], [800.0, 880.5], [802.0, 814.5], [815.0, 368.0], [814.0, 614.0], [813.0, 572.5], [811.0, 685.25], [812.0, 782.0], [810.0, 598.75], [808.0, 596.0], [821.0, 612.5], [823.0, 981.0], [822.0, 861.0], [819.0, 612.5], [818.0, 535.0], [817.0, 461.0], [860.0, 584.0], [852.0, 680.25], [862.0, 532.3333333333334], [863.0, 858.0], [849.0, 385.0], [848.0, 720.0], [858.0, 570.0], [856.0, 551.2], [847.0, 377.0], [835.0, 476.75], [834.0, 760.0], [836.0, 739.0], [833.0, 636.3333333333334], [839.0, 550.3333333333334], [838.0, 801.0], [837.0, 531.6666666666666], [846.0, 702.6666666666666], [845.0, 388.0], [844.0, 810.0], [843.0, 392.5], [841.0, 392.0], [840.0, 786.0], [842.0, 756.5], [855.0, 391.0], [854.0, 628.6666666666666], [853.0, 378.0], [851.0, 582.5], [850.0, 409.0], [889.0, 577.5], [893.0, 569.25], [895.0, 588.25], [880.0, 485.25], [881.0, 735.0], [883.0, 577.0], [882.0, 516.6666666666666], [892.0, 372.0], [891.0, 591.0], [890.0, 572.5], [878.0, 396.0], [877.0, 792.0], [879.0, 873.0], [866.0, 523.3333333333334], [865.0, 773.0], [867.0, 779.0], [864.0, 511.0], [870.0, 560.0], [869.0, 975.0], [888.0, 750.0], [871.0, 913.0], [868.0, 544.6666666666666], [876.0, 641.25], [874.0, 394.5], [875.0, 805.5], [872.0, 605.5], [887.0, 574.5], [886.0, 499.25], [885.0, 481.75], [884.0, 571.5], [902.0, 404.5], [925.0, 458.8], [926.0, 404.0], [923.0, 362.0], [922.0, 515.3333333333334], [924.0, 536.4], [921.0, 519.6], [920.0, 365.3333333333333], [903.0, 783.5], [901.0, 687.0], [900.0, 390.0], [899.0, 664.6666666666666], [898.0, 377.0], [897.0, 654.6666666666666], [911.0, 818.5], [910.0, 415.0], [909.0, 419.0], [907.0, 592.25], [904.0, 410.0], [905.0, 784.0], [918.0, 366.6666666666667], [919.0, 523.3333333333334], [916.0, 499.0], [915.0, 367.5], [914.0, 606.5], [913.0, 411.0], [912.0, 372.0], [927.0, 584.75], [917.0, 471.0], [934.0, 381.0], [943.0, 431.22222222222223], [932.0, 526.0], [930.0, 317.5], [931.0, 617.0], [928.0, 622.8], [929.0, 393.0], [933.0, 538.7142857142857], [935.0, 368.4], [952.0, 821.0], [940.0, 386.57142857142856], [939.0, 457.3], [938.0, 420.00000000000006], [937.0, 313.5], [936.0, 693.3333333333334], [945.0, 352.25], [946.0, 612.0], [950.0, 335.0], [949.0, 800.5], [948.0, 766.0], [951.0, 772.0], [947.0, 320.0], [944.0, 445.0], [941.0, 564.0], [942.0, 419.0], [954.0, 342.0], [955.0, 792.3333333333334], [959.0, 795.0], [958.0, 809.0], [953.0, 415.8333333333333], [985.0, 923.0], [989.0, 884.0], [990.0, 911.0], [977.0, 877.0], [976.0, 867.5], [979.0, 841.0], [978.0, 818.0], [981.0, 828.0], [980.0, 821.0], [988.0, 841.0], [987.0, 885.0], [986.0, 946.0], [984.0, 915.0], [967.0, 794.0], [966.0, 781.0], [965.0, 800.0], [964.0, 808.0], [963.0, 774.3333333333334], [961.0, 829.5], [974.0, 810.0], [973.0, 823.0], [972.0, 799.0], [971.0, 835.0], [970.0, 810.0], [969.0, 806.0], [983.0, 850.0], [982.0, 924.0], [1023.0, 687.0], [1018.0, 693.0], [1015.0, 681.0], [1014.0, 681.0], [996.0, 934.0], [995.0, 940.0], [994.0, 893.5], [992.0, 888.0], [1062.0, 688.3333333333334], [1070.0, 693.0], [1068.0, 685.0], [1066.0, 795.0], [1056.0, 696.0], [1038.0, 676.0], [1036.0, 914.0], [1034.0, 713.0], [1032.0, 693.0], [1028.0, 789.0], [1026.0, 709.125], [1054.0, 713.0], [1052.0, 692.5], [1048.0, 694.0], [1046.0, 689.0], [1042.0, 684.0], [1040.0, 678.0], [1116.0, 559.0], [1114.0, 584.0], [1112.0, 564.0], [1124.0, 577.0], [1150.0, 709.0], [1148.0, 689.0], [1144.0, 708.0], [1142.0, 703.0], [1210.0, 696.75], [1214.0, 740.2222222222222], [1192.0, 856.0], [1190.0, 887.0], [1188.0, 820.5], [1186.0, 780.0], [1184.0, 805.0], [1194.0, 889.0], [1212.0, 733.3333333333334], [1206.0, 825.5], [1208.0, 661.0], [1202.0, 825.8749999999999], [1200.0, 778.25], [1166.0, 714.0], [1162.0, 779.0], [1158.0, 772.0], [1182.0, 802.5], [1154.0, 700.0], [1152.0, 704.0], [1156.0, 691.0], [1180.0, 835.6666666666666], [1178.0, 878.0], [1170.0, 827.0], [1168.0, 675.0], [1172.0, 723.0], [1174.0, 743.1951219512196], [1198.0, 825.0], [1196.0, 652.0], [1270.0, 687.0], [1254.0, 681.0], [1250.0, 651.0], [1252.0, 774.3333333333334], [1256.0, 660.0], [1258.0, 766.0], [1260.0, 834.5], [1230.0, 750.25], [1228.0, 695.5], [1224.0, 654.0], [1222.0, 751.6666666666666], [1218.0, 702.6666666666666], [1216.0, 714.0], [1246.0, 662.5], [1242.0, 795.4], [1232.0, 699.0], [1236.0, 677.0], [1234.0, 723.0], [1240.0, 715.0], [1238.0, 680.0], [1342.0, 861.0], [1312.0, 835.5], [1316.0, 834.0], [1320.0, 844.6666666666666], [1326.0, 909.0], [1330.0, 843.0], [1328.0, 915.0], [1310.0, 825.0], [1284.0, 738.5], [1282.0, 760.0], [1286.0, 767.6666666666666], [1292.0, 754.0], [1308.0, 830.0], [1306.0, 810.3333333333334], [1304.0, 786.6666666666666], [1300.0, 826.0], [1298.0, 759.0], [1398.0, 584.0], [1396.0, 682.0], [1380.0, 660.3333333333334], [1404.0, 648.625], [1376.0, 686.0], [1378.0, 692.0], [1382.0, 648.6666666666666], [1386.0, 615.4], [1388.0, 609.0], [1390.0, 574.5], [1406.0, 683.75], [1400.0, 596.0], [1394.0, 642.75], [1392.0, 638.375], [1346.0, 866.5], [1350.0, 865.2], [1354.0, 886.0], [1356.0, 865.0], [1358.0, 886.0], [1374.0, 702.75], [1372.0, 561.0], [1370.0, 550.0], [1366.0, 904.0], [1368.0, 625.0], [1364.0, 740.5], [1416.0, 534.0], [1418.0, 721.0], [1436.0, 642.3333333333334], [1408.0, 585.25], [1412.0, 790.3333333333334], [1414.0, 540.0], [1420.0, 535.5], [1456.0, 869.0], [1458.0, 770.0], [1460.0, 800.0], [1466.0, 746.5], [1462.0, 729.0], [1468.0, 863.0], [1470.0, 782.0], [1440.0, 777.0], [1446.0, 831.75], [1450.0, 873.0], [1422.0, 727.0], [1438.0, 674.0], [1434.0, 689.5], [1430.0, 560.0], [1428.0, 705.6666666666666], [1424.0, 858.0], [1432.0, 579.9230769230769], [1524.0, 869.0], [1534.0, 799.0], [1506.0, 689.6666666666666], [1512.0, 820.0], [1510.0, 744.0], [1514.0, 758.6666666666666], [1518.0, 757.0], [1516.0, 757.6666666666666], [1528.0, 704.0], [1526.0, 743.0], [1522.0, 817.5], [1520.0, 777.0], [1484.0, 809.0], [1482.0, 808.0], [1480.0, 763.0], [1476.0, 804.0], [1474.0, 692.0], [1472.0, 796.0], [1502.0, 810.0], [1500.0, 768.0], [1498.0, 693.0], [1496.0, 711.0], [1494.0, 836.0], [1492.0, 753.3333333333334], [1490.0, 867.0], [1488.0, 796.0], [1584.0, 694.0], [1594.0, 791.3333333333334], [1598.0, 772.5], [1580.0, 678.0], [1578.0, 740.0], [1582.0, 695.5], [1596.0, 817.0], [1592.0, 751.0], [1588.0, 801.0], [1586.0, 722.0], [1538.0, 731.0], [1536.0, 717.0], [1544.0, 773.5], [1550.0, 819.5], [1546.0, 689.0], [1566.0, 636.0], [1564.0, 629.0], [1562.0, 645.0], [1560.0, 821.0], [1556.0, 719.5], [1554.0, 571.5], [1552.0, 871.0], [1654.0, 754.0], [1662.0, 743.0], [1656.0, 751.3333333333334], [1660.0, 714.0], [1652.0, 779.3333333333334], [1648.0, 851.0], [1630.0, 813.5], [1600.0, 798.3333333333334], [1610.0, 678.0], [1614.0, 777.0], [1628.0, 722.5], [1626.0, 711.5], [1620.0, 727.3333333333334], [1618.0, 804.0], [1616.0, 755.0], [1632.0, 818.0], [1634.0, 744.5], [1636.0, 767.0], [1638.0, 795.0], [1642.0, 761.0], [1644.0, 757.5], [1646.0, 686.0], [1658.0, 695.5], [1670.0, 688.25], [1676.0, 604.0], [1678.0, 650.0], [1672.0, 792.5], [1666.0, 625.0], [1668.0, 628.5], [1664.0, 715.5], [1680.0, 746.25], [1682.0, 752.0], [1684.0, 797.0], [1686.0, 779.5], [1692.0, 767.5], [1690.0, 632.0], [1065.0, 685.0], [1075.0, 676.0], [1073.0, 690.5], [1025.0, 720.0], [1055.0, 678.0], [1041.0, 710.0], [1071.0, 679.0], [1069.0, 743.0], [1067.0, 690.0], [1063.0, 735.0], [1061.0, 711.0], [1059.0, 676.0], [1113.0, 575.0], [1111.0, 566.0], [1151.0, 674.0], [1149.0, 713.0], [1147.0, 704.0], [1145.0, 687.0], [1139.0, 690.0], [1211.0, 857.0], [1187.0, 755.0], [1185.0, 792.0], [1189.0, 784.6666666666666], [1193.0, 886.0], [1191.0, 896.0], [1209.0, 774.5], [1207.0, 637.0], [1205.0, 743.0], [1203.0, 792.0], [1201.0, 760.5], [1175.0, 748.8333333333333], [1167.0, 707.5], [1163.0, 684.0], [1161.0, 772.75], [1181.0, 768.0], [1153.0, 690.0], [1179.0, 765.8], [1177.0, 770.0], [1173.0, 653.0], [1171.0, 703.0], [1169.0, 709.0], [1199.0, 672.6666666666666], [1197.0, 792.0], [1271.0, 766.0], [1273.0, 746.5], [1277.0, 759.5], [1249.0, 700.25], [1251.0, 791.0], [1253.0, 850.0], [1255.0, 720.6666666666666], [1257.0, 671.0], [1259.0, 769.25], [1269.0, 708.0], [1267.0, 797.0], [1265.0, 769.5], [1231.0, 677.0], [1229.0, 722.5], [1227.0, 817.0], [1225.0, 729.5], [1221.0, 665.0], [1223.0, 679.0], [1219.0, 811.8], [1247.0, 676.5], [1245.0, 765.2], [1239.0, 721.0], [1243.0, 679.0], [1241.0, 729.0], [1237.0, 749.3333333333334], [1235.0, 758.8], [1233.0, 683.6666666666666], [1263.0, 787.0], [1261.0, 729.0], [1343.0, 856.0], [1337.0, 856.0], [1313.0, 843.0], [1315.0, 839.0], [1317.0, 841.5], [1327.0, 848.0], [1341.0, 858.5], [1335.0, 851.5], [1333.0, 845.5], [1331.0, 851.0], [1329.0, 849.0], [1285.0, 783.0], [1291.0, 780.0], [1289.0, 730.0], [1295.0, 800.0], [1303.0, 818.0], [1301.0, 672.0], [1403.0, 831.0], [1405.0, 595.0], [1407.0, 603.5], [1377.0, 730.0], [1381.0, 588.0], [1383.0, 588.5], [1387.0, 594.0], [1389.0, 612.0], [1391.0, 630.0], [1401.0, 697.0], [1397.0, 844.0], [1399.0, 795.0], [1395.0, 635.8], [1393.0, 656.3333333333334], [1375.0, 622.5], [1349.0, 882.0], [1347.0, 868.0], [1351.0, 878.0], [1353.0, 871.0], [1357.0, 893.5], [1359.0, 899.5], [1373.0, 564.0], [1371.0, 680.0], [1367.0, 642.0], [1369.0, 647.0], [1365.0, 726.5], [1363.0, 904.0], [1361.0, 892.5], [1419.0, 837.0], [1409.0, 795.3333333333334], [1411.0, 541.0], [1415.0, 800.3333333333334], [1421.0, 833.0], [1423.0, 682.5], [1459.0, 786.0], [1461.0, 819.0], [1467.0, 808.0], [1443.0, 797.0], [1449.0, 852.0], [1451.0, 870.5], [1455.0, 720.5], [1453.0, 883.5], [1469.0, 818.0], [1439.0, 572.2], [1437.0, 850.0], [1435.0, 714.5], [1433.0, 560.0], [1431.0, 629.0], [1429.0, 824.0], [1427.0, 718.0], [1425.0, 808.0], [1527.0, 769.0], [1505.0, 813.0], [1513.0, 739.0], [1531.0, 673.0], [1525.0, 860.0], [1487.0, 766.0], [1485.0, 605.0], [1483.0, 772.0], [1477.0, 835.5], [1473.0, 821.0], [1503.0, 790.0], [1501.0, 619.5], [1499.0, 686.0], [1497.0, 595.0], [1495.0, 765.0], [1491.0, 624.0], [1571.0, 668.5], [1569.0, 750.5], [1573.0, 705.5], [1577.0, 623.0], [1575.0, 676.5], [1581.0, 711.0], [1597.0, 767.0], [1591.0, 758.0], [1589.0, 687.5], [1587.0, 711.0], [1585.0, 843.0], [1567.0, 715.0], [1541.0, 770.0], [1559.0, 653.0], [1653.0, 751.0], [1661.0, 770.0], [1659.0, 752.0], [1655.0, 803.5], [1649.0, 849.0], [1605.0, 814.6666666666666], [1603.0, 802.0], [1607.0, 734.0], [1613.0, 796.5], [1611.0, 657.0], [1615.0, 798.0], [1629.0, 823.0], [1627.0, 632.5], [1623.0, 650.75], [1621.0, 591.0], [1617.0, 800.0], [1663.0, 858.0], [1633.0, 829.5], [1635.0, 776.0], [1637.0, 765.0], [1639.0, 782.0], [1641.0, 776.0], [1643.0, 770.0], [1647.0, 750.0], [1669.0, 784.0], [1673.0, 684.6666666666666], [1675.0, 596.0], [1677.0, 650.0], [1679.0, 695.0], [1671.0, 669.0], [1667.0, 783.0], [1665.0, 783.0], [1681.0, 746.0], [1685.0, 791.0], [1689.0, 784.3333333333334], [1693.0, 830.0], [1.0, 392.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[737.1243333333341, 638.8629999999988]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 1019.0], [3.0, 1012.0], [4.0, 59.2], [5.0, 59.2], [7.0, 22.5], [8.0, 23.75], [9.0, 31.4], [10.0, 31.428571428571427], [11.0, 23.166666666666668], [12.0, 29.333333333333332], [13.0, 30.666666666666668], [14.0, 30.0], [15.0, 30.53333333333334], [16.0, 30.423076923076927], [17.0, 32.7037037037037], [18.0, 31.94871794871796], [19.0, 32.448979591836725], [20.0, 31.2280701754386], [21.0, 31.179104477611943], [22.0, 33.854166666666664], [23.0, 30.892857142857146], [24.0, 32.1875], [25.0, 33.07575757575757], [26.0, 33.04615384615385], [27.0, 32.76530612244898], [28.0, 32.361111111111114], [29.0, 33.86363636363638], [30.0, 33.0125], [31.0, 33.83], [33.0, 34.84615384615385], [32.0, 35.01162790697676], [35.0, 34.97560975609755], [34.0, 34.42391304347825], [37.0, 36.362500000000026], [36.0, 37.551724137931046], [39.0, 36.712121212121204], [38.0, 34.73239436619719], [40.0, 37.720588235294144], [41.0, 35.86956521739131], [42.0, 37.980392156862756], [43.0, 37.64150943396226], [44.0, 36.76923076923077], [45.0, 36.20833333333334], [47.0, 37.40476190476192], [46.0, 36.714285714285715], [49.0, 37.39024390243903], [48.0, 37.6896551724138], [51.0, 77.53846153846153], [50.0, 38.40740740740741], [53.0, 40.34782608695652], [52.0, 39.043478260869556], [54.0, 37.833333333333336], [55.0, 37.99999999999999], [56.0, 38.70000000000001], [57.0, 38.56521739130434], [58.0, 39.04347826086956], [59.0, 40.36842105263158], [61.0, 36.25], [60.0, 37.769230769230774], [62.0, 45.24137931034483], [63.0, 43.68421052631577], [65.0, 41.375], [64.0, 43.55555555555556], [67.0, 41.25], [66.0, 41.142857142857146], [71.0, 40.1], [70.0, 39.53846153846154], [68.0, 41.14285714285714], [69.0, 46.5], [73.0, 36.900000000000006], [74.0, 41.833333333333336], [72.0, 40.285714285714285], [75.0, 38.76923076923077], [79.0, 35.285714285714285], [78.0, 39.99999999999999], [77.0, 38.36363636363637], [76.0, 33.99999999999999], [82.0, 37.45454545454545], [81.0, 36.5], [83.0, 43.333333333333336], [80.0, 40.0], [85.0, 41.300000000000004], [84.0, 35.25], [87.0, 36.6], [86.0, 42.285714285714285], [89.0, 21.333333333333332], [91.0, 28.0], [90.0, 40.333333333333336], [88.0, 28.0], [92.0, 26.4], [94.0, 39.2], [93.0, 47.0], [95.0, 38.0], [97.0, 46.16666666666667], [96.0, 43.0], [99.0, 45.333333333333336], [98.0, 39.75], [100.0, 28.833333333333336], [103.0, 20.0], [101.0, 35.666666666666664], [102.0, 17.099999999999998], [105.0, 17.5], [107.0, 40.0], [106.0, 27.0], [104.0, 44.75], [110.0, 41.4], [109.0, 38.5], [108.0, 37.75], [111.0, 51.333333333333336], [112.0, 37.2], [113.0, 52.0], [134.0, 26.0], [133.0, 33.0], [159.0, 23.0], [173.0, 103.60000000000001], [172.0, 104.60000000000001], [175.0, 94.16666666666667], [171.0, 25.0], [174.0, 117.5], [183.0, 26.0], [181.0, 89.55], [178.0, 119.0], [177.0, 119.92], [176.0, 122.84615384615385], [186.0, 29.0], [189.0, 22.5], [1.0, 1020.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[48.180999999999955, 41.02500000000004]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1693.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 22250.0, "minX": 1.6689285E12, "maxY": 1718735.4166666667, "series": [{"data": [[1.6689285E12, 1718735.4166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6689285E12, 22250.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6689285E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 41.02500000000004, "minX": 1.6689285E12, "maxY": 638.8629999999988, "series": [{"data": [[1.6689285E12, 96.20300000000027]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6689285E12, 638.8629999999988]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6689285E12, 41.02500000000004]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6689285E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 39.49166666666661, "minX": 1.6689285E12, "maxY": 615.1853333333322, "series": [{"data": [[1.6689285E12, 85.24233333333349]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6689285E12, 615.1853333333322]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6689285E12, 39.49166666666661]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6689285E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 11.54099999999998, "minX": 1.6689285E12, "maxY": 40.93899999999997, "series": [{"data": [[1.6689285E12, 40.93899999999997]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.6689285E12, 20.204666666666657]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.6689285E12, 11.54099999999998]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6689285E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.6689285E12, "maxY": 2129.0, "series": [{"data": [[1.6689285E12, 2129.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6689285E12, 848.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6689285E12, 1185.9899999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6689285E12, 1050.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6689285E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6689285E12, 58.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6689285E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 34.0, "minX": 216.0, "maxY": 1123.0, "series": [{"data": [[1114.0, 35.0], [554.0, 184.0], [1301.0, 55.0], [672.0, 369.0], [762.0, 35.0], [749.0, 59.0], [1608.0, 808.5], [216.0, 43.0], [219.0, 1123.0], [905.0, 34.0], [900.0, 55.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1608.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 34.0, "minX": 216.0, "maxY": 1083.0, "series": [{"data": [[1114.0, 35.0], [554.0, 174.0], [1301.0, 47.0], [672.0, 334.0], [762.0, 34.0], [749.0, 49.0], [1608.0, 777.0], [216.0, 41.5], [219.0, 1083.0], [905.0, 34.0], [900.0, 48.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1608.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.6689285E12, "maxY": 150.0, "series": [{"data": [[1.6689285E12, 150.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6689285E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.6689285E12, "maxY": 150.0, "series": [{"data": [[1.6689285E12, 150.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6689285E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.6689285E12, "maxY": 50.0, "series": [{"data": [[1.6689285E12, 50.0]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.6689285E12, 50.0]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.6689285E12, 50.0]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6689285E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 150.0, "minX": 1.6689285E12, "maxY": 150.0, "series": [{"data": [[1.6689285E12, 150.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6689285E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

