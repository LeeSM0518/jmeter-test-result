/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 18.0, "minX": 0.0, "maxY": 13203.0, "series": [{"data": [[0.0, 168.0], [0.1, 171.0], [0.2, 183.0], [0.3, 183.0], [0.4, 227.0], [0.5, 256.0], [0.6, 257.0], [0.7, 258.0], [0.8, 259.0], [0.9, 261.0], [1.0, 263.0], [1.1, 264.0], [1.2, 264.0], [1.3, 265.0], [1.4, 266.0], [1.5, 268.0], [1.6, 289.0], [1.7, 289.0], [1.8, 290.0], [1.9, 301.0], [2.0, 303.0], [2.1, 312.0], [2.2, 324.0], [2.3, 335.0], [2.4, 342.0], [2.5, 343.0], [2.6, 360.0], [2.7, 401.0], [2.8, 409.0], [2.9, 472.0], [3.0, 491.0], [3.1, 501.0], [3.2, 535.0], [3.3, 551.0], [3.4, 572.0], [3.5, 603.0], [3.6, 633.0], [3.7, 653.0], [3.8, 671.0], [3.9, 677.0], [4.0, 679.0], [4.1, 693.0], [4.2, 701.0], [4.3, 712.0], [4.4, 715.0], [4.5, 728.0], [4.6, 729.0], [4.7, 730.0], [4.8, 757.0], [4.9, 766.0], [5.0, 779.0], [5.1, 818.0], [5.2, 820.0], [5.3, 824.0], [5.4, 828.0], [5.5, 829.0], [5.6, 863.0], [5.7, 866.0], [5.8, 881.0], [5.9, 883.0], [6.0, 884.0], [6.1, 898.0], [6.2, 901.0], [6.3, 906.0], [6.4, 922.0], [6.5, 941.0], [6.6, 990.0], [6.7, 996.0], [6.8, 1003.0], [6.9, 1048.0], [7.0, 1075.0], [7.1, 1089.0], [7.2, 1096.0], [7.3, 1132.0], [7.4, 1145.0], [7.5, 1155.0], [7.6, 1160.0], [7.7, 1164.0], [7.8, 1192.0], [7.9, 1200.0], [8.0, 1209.0], [8.1, 1209.0], [8.2, 1214.0], [8.3, 1215.0], [8.4, 1219.0], [8.5, 1220.0], [8.6, 1223.0], [8.7, 1235.0], [8.8, 1235.0], [8.9, 1236.0], [9.0, 1276.0], [9.1, 1278.0], [9.2, 1295.0], [9.3, 1306.0], [9.4, 1313.0], [9.5, 1318.0], [9.6, 1320.0], [9.7, 1350.0], [9.8, 1357.0], [9.9, 1364.0], [10.0, 1370.0], [10.1, 1375.0], [10.2, 1406.0], [10.3, 1421.0], [10.4, 1433.0], [10.5, 1473.0], [10.6, 1482.0], [10.7, 1488.0], [10.8, 1574.0], [10.9, 1577.0], [11.0, 1594.0], [11.1, 1609.0], [11.2, 1617.0], [11.3, 1621.0], [11.4, 1633.0], [11.5, 1644.0], [11.6, 1672.0], [11.7, 1678.0], [11.8, 1679.0], [11.9, 1686.0], [12.0, 1706.0], [12.1, 1706.0], [12.2, 1710.0], [12.3, 1716.0], [12.4, 1716.0], [12.5, 1728.0], [12.6, 1745.0], [12.7, 1747.0], [12.8, 1778.0], [12.9, 1782.0], [13.0, 1800.0], [13.1, 1802.0], [13.2, 1813.0], [13.3, 1813.0], [13.4, 1816.0], [13.5, 1816.0], [13.6, 1833.0], [13.7, 1839.0], [13.8, 1839.0], [13.9, 1843.0], [14.0, 1844.0], [14.1, 1848.0], [14.2, 1857.0], [14.3, 1862.0], [14.4, 1872.0], [14.5, 1880.0], [14.6, 1895.0], [14.7, 1899.0], [14.8, 1909.0], [14.9, 1926.0], [15.0, 1948.0], [15.1, 1949.0], [15.2, 1961.0], [15.3, 1964.0], [15.4, 1968.0], [15.5, 1971.0], [15.6, 1975.0], [15.7, 1980.0], [15.8, 1982.0], [15.9, 1984.0], [16.0, 1985.0], [16.1, 1986.0], [16.2, 1988.0], [16.3, 1988.0], [16.4, 1992.0], [16.5, 1993.0], [16.6, 2001.0], [16.7, 2002.0], [16.8, 2009.0], [16.9, 2010.0], [17.0, 2010.0], [17.1, 2013.0], [17.2, 2013.0], [17.3, 2022.0], [17.4, 2023.0], [17.5, 2024.0], [17.6, 2025.0], [17.7, 2027.0], [17.8, 2027.0], [17.9, 2029.0], [18.0, 2030.0], [18.1, 2032.0], [18.2, 2047.0], [18.3, 2049.0], [18.4, 2049.0], [18.5, 2050.0], [18.6, 2051.0], [18.7, 2056.0], [18.8, 2060.0], [18.9, 2060.0], [19.0, 2070.0], [19.1, 2070.0], [19.2, 2085.0], [19.3, 2099.0], [19.4, 2100.0], [19.5, 2102.0], [19.6, 2109.0], [19.7, 2114.0], [19.8, 2126.0], [19.9, 2129.0], [20.0, 2136.0], [20.1, 2139.0], [20.2, 2150.0], [20.3, 2166.0], [20.4, 2167.0], [20.5, 2168.0], [20.6, 2173.0], [20.7, 2180.0], [20.8, 2199.0], [20.9, 2199.0], [21.0, 2223.0], [21.1, 2230.0], [21.2, 2233.0], [21.3, 2235.0], [21.4, 2327.0], [21.5, 2456.0], [21.6, 2501.0], [21.7, 2832.0], [21.8, 3244.0], [21.9, 3390.0], [22.0, 3563.0], [22.1, 7549.0], [22.2, 7610.0], [22.3, 7616.0], [22.4, 8007.0], [22.5, 8066.0], [22.6, 8122.0], [22.7, 8225.0], [22.8, 8287.0], [22.9, 8307.0], [23.0, 8330.0], [23.1, 8399.0], [23.2, 8401.0], [23.3, 8712.0], [23.4, 8713.0], [23.5, 8756.0], [23.6, 8797.0], [23.7, 8892.0], [23.8, 8925.0], [23.9, 8976.0], [24.0, 9032.0], [24.1, 9070.0], [24.2, 9096.0], [24.3, 9129.0], [24.4, 9151.0], [24.5, 9189.0], [24.6, 9197.0], [24.7, 9212.0], [24.8, 9212.0], [24.9, 9218.0], [25.0, 9268.0], [25.1, 9274.0], [25.2, 9284.0], [25.3, 9288.0], [25.4, 9293.0], [25.5, 9296.0], [25.6, 9305.0], [25.7, 9312.0], [25.8, 9329.0], [25.9, 9357.0], [26.0, 9366.0], [26.1, 9381.0], [26.2, 9384.0], [26.3, 9387.0], [26.4, 9397.0], [26.5, 9410.0], [26.6, 9420.0], [26.7, 9426.0], [26.8, 9429.0], [26.9, 9438.0], [27.0, 9460.0], [27.1, 9463.0], [27.2, 9473.0], [27.3, 9478.0], [27.4, 9480.0], [27.5, 9483.0], [27.6, 9486.0], [27.7, 9487.0], [27.8, 9488.0], [27.9, 9496.0], [28.0, 9497.0], [28.1, 9509.0], [28.2, 9512.0], [28.3, 9514.0], [28.4, 9524.0], [28.5, 9528.0], [28.6, 9531.0], [28.7, 9536.0], [28.8, 9539.0], [28.9, 9542.0], [29.0, 9543.0], [29.1, 9550.0], [29.2, 9561.0], [29.3, 9579.0], [29.4, 9589.0], [29.5, 9591.0], [29.6, 9613.0], [29.7, 9617.0], [29.8, 9623.0], [29.9, 9629.0], [30.0, 9630.0], [30.1, 9640.0], [30.2, 9643.0], [30.3, 9644.0], [30.4, 9645.0], [30.5, 9646.0], [30.6, 9646.0], [30.7, 9647.0], [30.8, 9655.0], [30.9, 9657.0], [31.0, 9661.0], [31.1, 9668.0], [31.2, 9672.0], [31.3, 9673.0], [31.4, 9685.0], [31.5, 9686.0], [31.6, 9688.0], [31.7, 9688.0], [31.8, 9698.0], [31.9, 9701.0], [32.0, 9703.0], [32.1, 9714.0], [32.2, 9715.0], [32.3, 9728.0], [32.4, 9730.0], [32.5, 9735.0], [32.6, 9738.0], [32.7, 9740.0], [32.8, 9742.0], [32.9, 9744.0], [33.0, 9747.0], [33.1, 9751.0], [33.2, 9756.0], [33.3, 9758.0], [33.4, 9759.0], [33.5, 9762.0], [33.6, 9767.0], [33.7, 9767.0], [33.8, 9772.0], [33.9, 9772.0], [34.0, 9773.0], [34.1, 9777.0], [34.2, 9777.0], [34.3, 9782.0], [34.4, 9786.0], [34.5, 9789.0], [34.6, 9791.0], [34.7, 9799.0], [34.8, 9799.0], [34.9, 9804.0], [35.0, 9810.0], [35.1, 9810.0], [35.2, 9814.0], [35.3, 9821.0], [35.4, 9823.0], [35.5, 9832.0], [35.6, 9833.0], [35.7, 9834.0], [35.8, 9840.0], [35.9, 9843.0], [36.0, 9845.0], [36.1, 9846.0], [36.2, 9848.0], [36.3, 9852.0], [36.4, 9857.0], [36.5, 9861.0], [36.6, 9863.0], [36.7, 9866.0], [36.8, 9868.0], [36.9, 9871.0], [37.0, 9875.0], [37.1, 9881.0], [37.2, 9884.0], [37.3, 9888.0], [37.4, 9889.0], [37.5, 9889.0], [37.6, 9890.0], [37.7, 9893.0], [37.8, 9894.0], [37.9, 9896.0], [38.0, 9899.0], [38.1, 9904.0], [38.2, 9906.0], [38.3, 9912.0], [38.4, 9913.0], [38.5, 9915.0], [38.6, 9921.0], [38.7, 9928.0], [38.8, 9928.0], [38.9, 9935.0], [39.0, 9936.0], [39.1, 9939.0], [39.2, 9940.0], [39.3, 9940.0], [39.4, 9941.0], [39.5, 9946.0], [39.6, 9948.0], [39.7, 9956.0], [39.8, 9957.0], [39.9, 9957.0], [40.0, 9968.0], [40.1, 9968.0], [40.2, 9968.0], [40.3, 9969.0], [40.4, 9975.0], [40.5, 9978.0], [40.6, 9979.0], [40.7, 9979.0], [40.8, 9980.0], [40.9, 9981.0], [41.0, 9994.0], [41.1, 9996.0], [41.2, 9997.0], [41.3, 9997.0], [41.4, 10002.0], [41.5, 10008.0], [41.6, 10009.0], [41.7, 10014.0], [41.8, 10015.0], [41.9, 10016.0], [42.0, 10017.0], [42.1, 10021.0], [42.2, 10021.0], [42.3, 10023.0], [42.4, 10024.0], [42.5, 10026.0], [42.6, 10034.0], [42.7, 10034.0], [42.8, 10036.0], [42.9, 10036.0], [43.0, 10037.0], [43.1, 10037.0], [43.2, 10038.0], [43.3, 10039.0], [43.4, 10039.0], [43.5, 10039.0], [43.6, 10041.0], [43.7, 10045.0], [43.8, 10054.0], [43.9, 10054.0], [44.0, 10056.0], [44.1, 10061.0], [44.2, 10061.0], [44.3, 10061.0], [44.4, 10067.0], [44.5, 10068.0], [44.6, 10070.0], [44.7, 10073.0], [44.8, 10074.0], [44.9, 10074.0], [45.0, 10075.0], [45.1, 10078.0], [45.2, 10080.0], [45.3, 10081.0], [45.4, 10081.0], [45.5, 10086.0], [45.6, 10087.0], [45.7, 10087.0], [45.8, 10089.0], [45.9, 10091.0], [46.0, 10092.0], [46.1, 10095.0], [46.2, 10103.0], [46.3, 10104.0], [46.4, 10106.0], [46.5, 10107.0], [46.6, 10108.0], [46.7, 10109.0], [46.8, 10110.0], [46.9, 10112.0], [47.0, 10114.0], [47.1, 10116.0], [47.2, 10116.0], [47.3, 10117.0], [47.4, 10119.0], [47.5, 10120.0], [47.6, 10121.0], [47.7, 10122.0], [47.8, 10124.0], [47.9, 10124.0], [48.0, 10125.0], [48.1, 10125.0], [48.2, 10127.0], [48.3, 10132.0], [48.4, 10136.0], [48.5, 10136.0], [48.6, 10138.0], [48.7, 10143.0], [48.8, 10143.0], [48.9, 10146.0], [49.0, 10146.0], [49.1, 10148.0], [49.2, 10148.0], [49.3, 10150.0], [49.4, 10150.0], [49.5, 10151.0], [49.6, 10154.0], [49.7, 10157.0], [49.8, 10160.0], [49.9, 10160.0], [50.0, 10162.0], [50.1, 10164.0], [50.2, 10164.0], [50.3, 10167.0], [50.4, 10173.0], [50.5, 10177.0], [50.6, 10177.0], [50.7, 10178.0], [50.8, 10182.0], [50.9, 10186.0], [51.0, 10187.0], [51.1, 10188.0], [51.2, 10190.0], [51.3, 10191.0], [51.4, 10195.0], [51.5, 10195.0], [51.6, 10196.0], [51.7, 10197.0], [51.8, 10200.0], [51.9, 10201.0], [52.0, 10201.0], [52.1, 10202.0], [52.2, 10203.0], [52.3, 10204.0], [52.4, 10204.0], [52.5, 10208.0], [52.6, 10208.0], [52.7, 10208.0], [52.8, 10209.0], [52.9, 10212.0], [53.0, 10212.0], [53.1, 10214.0], [53.2, 10215.0], [53.3, 10218.0], [53.4, 10219.0], [53.5, 10221.0], [53.6, 10224.0], [53.7, 10225.0], [53.8, 10225.0], [53.9, 10227.0], [54.0, 10228.0], [54.1, 10229.0], [54.2, 10230.0], [54.3, 10231.0], [54.4, 10232.0], [54.5, 10233.0], [54.6, 10236.0], [54.7, 10236.0], [54.8, 10237.0], [54.9, 10238.0], [55.0, 10241.0], [55.1, 10245.0], [55.2, 10248.0], [55.3, 10249.0], [55.4, 10251.0], [55.5, 10252.0], [55.6, 10252.0], [55.7, 10253.0], [55.8, 10256.0], [55.9, 10257.0], [56.0, 10257.0], [56.1, 10259.0], [56.2, 10259.0], [56.3, 10261.0], [56.4, 10261.0], [56.5, 10262.0], [56.6, 10263.0], [56.7, 10264.0], [56.8, 10266.0], [56.9, 10266.0], [57.0, 10268.0], [57.1, 10269.0], [57.2, 10272.0], [57.3, 10274.0], [57.4, 10276.0], [57.5, 10277.0], [57.6, 10280.0], [57.7, 10282.0], [57.8, 10284.0], [57.9, 10289.0], [58.0, 10289.0], [58.1, 10289.0], [58.2, 10290.0], [58.3, 10298.0], [58.4, 10298.0], [58.5, 10300.0], [58.6, 10301.0], [58.7, 10302.0], [58.8, 10304.0], [58.9, 10305.0], [59.0, 10308.0], [59.1, 10308.0], [59.2, 10308.0], [59.3, 10312.0], [59.4, 10312.0], [59.5, 10313.0], [59.6, 10313.0], [59.7, 10318.0], [59.8, 10323.0], [59.9, 10323.0], [60.0, 10324.0], [60.1, 10325.0], [60.2, 10327.0], [60.3, 10328.0], [60.4, 10334.0], [60.5, 10335.0], [60.6, 10336.0], [60.7, 10341.0], [60.8, 10344.0], [60.9, 10344.0], [61.0, 10344.0], [61.1, 10346.0], [61.2, 10347.0], [61.3, 10348.0], [61.4, 10348.0], [61.5, 10349.0], [61.6, 10353.0], [61.7, 10357.0], [61.8, 10360.0], [61.9, 10364.0], [62.0, 10369.0], [62.1, 10372.0], [62.2, 10373.0], [62.3, 10374.0], [62.4, 10379.0], [62.5, 10383.0], [62.6, 10387.0], [62.7, 10388.0], [62.8, 10388.0], [62.9, 10392.0], [63.0, 10393.0], [63.1, 10393.0], [63.2, 10393.0], [63.3, 10395.0], [63.4, 10395.0], [63.5, 10396.0], [63.6, 10399.0], [63.7, 10400.0], [63.8, 10400.0], [63.9, 10401.0], [64.0, 10401.0], [64.1, 10401.0], [64.2, 10401.0], [64.3, 10402.0], [64.4, 10402.0], [64.5, 10403.0], [64.6, 10404.0], [64.7, 10404.0], [64.8, 10405.0], [64.9, 10406.0], [65.0, 10408.0], [65.1, 10409.0], [65.2, 10409.0], [65.3, 10410.0], [65.4, 10410.0], [65.5, 10410.0], [65.6, 10414.0], [65.7, 10414.0], [65.8, 10414.0], [65.9, 10415.0], [66.0, 10416.0], [66.1, 10418.0], [66.2, 10419.0], [66.3, 10419.0], [66.4, 10421.0], [66.5, 10424.0], [66.6, 10424.0], [66.7, 10425.0], [66.8, 10426.0], [66.9, 10426.0], [67.0, 10428.0], [67.1, 10429.0], [67.2, 10431.0], [67.3, 10431.0], [67.4, 10432.0], [67.5, 10432.0], [67.6, 10433.0], [67.7, 10434.0], [67.8, 10434.0], [67.9, 10435.0], [68.0, 10437.0], [68.1, 10438.0], [68.2, 10440.0], [68.3, 10440.0], [68.4, 10440.0], [68.5, 10446.0], [68.6, 10446.0], [68.7, 10449.0], [68.8, 10451.0], [68.9, 10451.0], [69.0, 10453.0], [69.1, 10454.0], [69.2, 10455.0], [69.3, 10455.0], [69.4, 10456.0], [69.5, 10457.0], [69.6, 10460.0], [69.7, 10460.0], [69.8, 10462.0], [69.9, 10464.0], [70.0, 10465.0], [70.1, 10465.0], [70.2, 10468.0], [70.3, 10468.0], [70.4, 10468.0], [70.5, 10473.0], [70.6, 10475.0], [70.7, 10475.0], [70.8, 10476.0], [70.9, 10477.0], [71.0, 10479.0], [71.1, 10480.0], [71.2, 10481.0], [71.3, 10482.0], [71.4, 10484.0], [71.5, 10485.0], [71.6, 10488.0], [71.7, 10488.0], [71.8, 10490.0], [71.9, 10491.0], [72.0, 10491.0], [72.1, 10493.0], [72.2, 10496.0], [72.3, 10501.0], [72.4, 10503.0], [72.5, 10505.0], [72.6, 10506.0], [72.7, 10507.0], [72.8, 10507.0], [72.9, 10509.0], [73.0, 10510.0], [73.1, 10512.0], [73.2, 10512.0], [73.3, 10512.0], [73.4, 10513.0], [73.5, 10514.0], [73.6, 10521.0], [73.7, 10521.0], [73.8, 10521.0], [73.9, 10522.0], [74.0, 10522.0], [74.1, 10525.0], [74.2, 10528.0], [74.3, 10530.0], [74.4, 10530.0], [74.5, 10532.0], [74.6, 10534.0], [74.7, 10535.0], [74.8, 10537.0], [74.9, 10537.0], [75.0, 10540.0], [75.1, 10541.0], [75.2, 10544.0], [75.3, 10544.0], [75.4, 10548.0], [75.5, 10551.0], [75.6, 10552.0], [75.7, 10552.0], [75.8, 10556.0], [75.9, 10558.0], [76.0, 10558.0], [76.1, 10559.0], [76.2, 10560.0], [76.3, 10564.0], [76.4, 10565.0], [76.5, 10569.0], [76.6, 10570.0], [76.7, 10573.0], [76.8, 10574.0], [76.9, 10574.0], [77.0, 10576.0], [77.1, 10577.0], [77.2, 10578.0], [77.3, 10579.0], [77.4, 10580.0], [77.5, 10580.0], [77.6, 10582.0], [77.7, 10583.0], [77.8, 10584.0], [77.9, 10585.0], [78.0, 10585.0], [78.1, 10588.0], [78.2, 10592.0], [78.3, 10593.0], [78.4, 10593.0], [78.5, 10593.0], [78.6, 10599.0], [78.7, 10601.0], [78.8, 10601.0], [78.9, 10602.0], [79.0, 10603.0], [79.1, 10604.0], [79.2, 10605.0], [79.3, 10605.0], [79.4, 10607.0], [79.5, 10607.0], [79.6, 10610.0], [79.7, 10611.0], [79.8, 10614.0], [79.9, 10614.0], [80.0, 10617.0], [80.1, 10620.0], [80.2, 10621.0], [80.3, 10622.0], [80.4, 10623.0], [80.5, 10623.0], [80.6, 10623.0], [80.7, 10624.0], [80.8, 10624.0], [80.9, 10625.0], [81.0, 10626.0], [81.1, 10627.0], [81.2, 10628.0], [81.3, 10629.0], [81.4, 10629.0], [81.5, 10631.0], [81.6, 10631.0], [81.7, 10632.0], [81.8, 10633.0], [81.9, 10634.0], [82.0, 10637.0], [82.1, 10637.0], [82.2, 10638.0], [82.3, 10638.0], [82.4, 10639.0], [82.5, 10639.0], [82.6, 10640.0], [82.7, 10641.0], [82.8, 10643.0], [82.9, 10648.0], [83.0, 10650.0], [83.1, 10654.0], [83.2, 10656.0], [83.3, 10660.0], [83.4, 10661.0], [83.5, 10661.0], [83.6, 10663.0], [83.7, 10664.0], [83.8, 10665.0], [83.9, 10666.0], [84.0, 10667.0], [84.1, 10669.0], [84.2, 10672.0], [84.3, 10674.0], [84.4, 10675.0], [84.5, 10675.0], [84.6, 10677.0], [84.7, 10677.0], [84.8, 10688.0], [84.9, 10689.0], [85.0, 10691.0], [85.1, 10692.0], [85.2, 10694.0], [85.3, 10697.0], [85.4, 10698.0], [85.5, 10699.0], [85.6, 10704.0], [85.7, 10707.0], [85.8, 10710.0], [85.9, 10711.0], [86.0, 10712.0], [86.1, 10713.0], [86.2, 10717.0], [86.3, 10717.0], [86.4, 10717.0], [86.5, 10718.0], [86.6, 10721.0], [86.7, 10723.0], [86.8, 10725.0], [86.9, 10727.0], [87.0, 10728.0], [87.1, 10728.0], [87.2, 10735.0], [87.3, 10737.0], [87.4, 10738.0], [87.5, 10738.0], [87.6, 10739.0], [87.7, 10741.0], [87.8, 10741.0], [87.9, 10743.0], [88.0, 10746.0], [88.1, 10752.0], [88.2, 10757.0], [88.3, 10759.0], [88.4, 10764.0], [88.5, 10768.0], [88.6, 10770.0], [88.7, 10771.0], [88.8, 10774.0], [88.9, 10777.0], [89.0, 10778.0], [89.1, 10782.0], [89.2, 10783.0], [89.3, 10785.0], [89.4, 10785.0], [89.5, 10786.0], [89.6, 10786.0], [89.7, 10786.0], [89.8, 10788.0], [89.9, 10788.0], [90.0, 10790.0], [90.1, 10792.0], [90.2, 10792.0], [90.3, 10803.0], [90.4, 10803.0], [90.5, 10804.0], [90.6, 10805.0], [90.7, 10806.0], [90.8, 10809.0], [90.9, 10812.0], [91.0, 10813.0], [91.1, 10818.0], [91.2, 10818.0], [91.3, 10828.0], [91.4, 10828.0], [91.5, 10830.0], [91.6, 10831.0], [91.7, 10832.0], [91.8, 10839.0], [91.9, 10844.0], [92.0, 10845.0], [92.1, 10855.0], [92.2, 10855.0], [92.3, 10863.0], [92.4, 10864.0], [92.5, 10870.0], [92.6, 10872.0], [92.7, 10873.0], [92.8, 10875.0], [92.9, 10878.0], [93.0, 10878.0], [93.1, 10879.0], [93.2, 10880.0], [93.3, 10883.0], [93.4, 10886.0], [93.5, 10886.0], [93.6, 10887.0], [93.7, 10889.0], [93.8, 10894.0], [93.9, 10895.0], [94.0, 10897.0], [94.1, 10900.0], [94.2, 10901.0], [94.3, 10909.0], [94.4, 10910.0], [94.5, 10924.0], [94.6, 10925.0], [94.7, 10928.0], [94.8, 10944.0], [94.9, 10948.0], [95.0, 10949.0], [95.1, 10955.0], [95.2, 10956.0], [95.3, 10957.0], [95.4, 10958.0], [95.5, 10958.0], [95.6, 10959.0], [95.7, 10962.0], [95.8, 10965.0], [95.9, 10968.0], [96.0, 10969.0], [96.1, 10970.0], [96.2, 10988.0], [96.3, 10996.0], [96.4, 10998.0], [96.5, 11002.0], [96.6, 11014.0], [96.7, 11015.0], [96.8, 11019.0], [96.9, 11020.0], [97.0, 11039.0], [97.1, 11052.0], [97.2, 11057.0], [97.3, 11059.0], [97.4, 11066.0], [97.5, 11068.0], [97.6, 11087.0], [97.7, 11087.0], [97.8, 11088.0], [97.9, 11089.0], [98.0, 11100.0], [98.1, 11112.0], [98.2, 11115.0], [98.3, 11157.0], [98.4, 11165.0], [98.5, 11184.0], [98.6, 11191.0], [98.7, 11307.0], [98.8, 11321.0], [98.9, 11358.0], [99.0, 11503.0], [99.1, 11583.0], [99.2, 11657.0], [99.3, 11723.0], [99.4, 12022.0], [99.5, 12126.0], [99.6, 12198.0], [99.7, 12540.0], [99.8, 13082.0], [99.9, 13203.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 18.0], [0.1, 26.0], [0.2, 33.0], [0.3, 33.0], [0.4, 64.0], [0.5, 71.0], [0.6, 80.0], [0.7, 92.0], [0.8, 98.0], [0.9, 108.0], [1.0, 109.0], [1.1, 116.0], [1.2, 122.0], [1.3, 153.0], [1.4, 153.0], [1.5, 155.0], [1.6, 162.0], [1.7, 213.0], [1.8, 216.0], [1.9, 221.0], [2.0, 222.0], [2.1, 228.0], [2.2, 228.0], [2.3, 228.0], [2.4, 231.0], [2.5, 232.0], [2.6, 232.0], [2.7, 233.0], [2.8, 233.0], [2.9, 233.0], [3.0, 237.0], [3.1, 238.0], [3.2, 240.0], [3.3, 248.0], [3.4, 255.0], [3.5, 256.0], [3.6, 262.0], [3.7, 264.0], [3.8, 265.0], [3.9, 273.0], [4.0, 282.0], [4.1, 289.0], [4.2, 292.0], [4.3, 298.0], [4.4, 304.0], [4.5, 305.0], [4.6, 306.0], [4.7, 320.0], [4.8, 321.0], [4.9, 322.0], [5.0, 322.0], [5.1, 322.0], [5.2, 328.0], [5.3, 336.0], [5.4, 338.0], [5.5, 350.0], [5.6, 350.0], [5.7, 358.0], [5.8, 388.0], [5.9, 389.0], [6.0, 389.0], [6.1, 392.0], [6.2, 392.0], [6.3, 398.0], [6.4, 405.0], [6.5, 405.0], [6.6, 407.0], [6.7, 418.0], [6.8, 419.0], [6.9, 419.0], [7.0, 420.0], [7.1, 440.0], [7.2, 441.0], [7.3, 442.0], [7.4, 442.0], [7.5, 450.0], [7.6, 457.0], [7.7, 464.0], [7.8, 464.0], [7.9, 479.0], [8.0, 481.0], [8.1, 488.0], [8.2, 494.0], [8.3, 496.0], [8.4, 512.0], [8.5, 520.0], [8.6, 521.0], [8.7, 524.0], [8.8, 525.0], [8.9, 532.0], [9.0, 542.0], [9.1, 548.0], [9.2, 548.0], [9.3, 556.0], [9.4, 558.0], [9.5, 562.0], [9.6, 572.0], [9.7, 574.0], [9.8, 581.0], [9.9, 596.0], [10.0, 607.0], [10.1, 609.0], [10.2, 610.0], [10.3, 611.0], [10.4, 621.0], [10.5, 623.0], [10.6, 624.0], [10.7, 625.0], [10.8, 627.0], [10.9, 628.0], [11.0, 628.0], [11.1, 629.0], [11.2, 631.0], [11.3, 638.0], [11.4, 649.0], [11.5, 656.0], [11.6, 660.0], [11.7, 664.0], [11.8, 670.0], [11.9, 689.0], [12.0, 690.0], [12.1, 692.0], [12.2, 698.0], [12.3, 699.0], [12.4, 699.0], [12.5, 703.0], [12.6, 709.0], [12.7, 710.0], [12.8, 711.0], [12.9, 713.0], [13.0, 716.0], [13.1, 733.0], [13.2, 736.0], [13.3, 743.0], [13.4, 745.0], [13.5, 746.0], [13.6, 747.0], [13.7, 761.0], [13.8, 762.0], [13.9, 763.0], [14.0, 767.0], [14.1, 770.0], [14.2, 770.0], [14.3, 771.0], [14.4, 777.0], [14.5, 778.0], [14.6, 794.0], [14.7, 794.0], [14.8, 796.0], [14.9, 808.0], [15.0, 816.0], [15.1, 830.0], [15.2, 830.0], [15.3, 831.0], [15.4, 832.0], [15.5, 839.0], [15.6, 846.0], [15.7, 847.0], [15.8, 849.0], [15.9, 849.0], [16.0, 851.0], [16.1, 853.0], [16.2, 861.0], [16.3, 864.0], [16.4, 869.0], [16.5, 887.0], [16.6, 888.0], [16.7, 891.0], [16.8, 893.0], [16.9, 898.0], [17.0, 905.0], [17.1, 912.0], [17.2, 915.0], [17.3, 921.0], [17.4, 921.0], [17.5, 923.0], [17.6, 924.0], [17.7, 927.0], [17.8, 931.0], [17.9, 936.0], [18.0, 938.0], [18.1, 944.0], [18.2, 954.0], [18.3, 961.0], [18.4, 962.0], [18.5, 964.0], [18.6, 967.0], [18.7, 970.0], [18.8, 973.0], [18.9, 973.0], [19.0, 977.0], [19.1, 979.0], [19.2, 979.0], [19.3, 984.0], [19.4, 985.0], [19.5, 999.0], [19.6, 1000.0], [19.7, 1000.0], [19.8, 1004.0], [19.9, 1012.0], [20.0, 1022.0], [20.1, 1022.0], [20.2, 1024.0], [20.3, 1037.0], [20.4, 1042.0], [20.5, 1042.0], [20.6, 1042.0], [20.7, 1043.0], [20.8, 1043.0], [20.9, 1052.0], [21.0, 1052.0], [21.1, 1056.0], [21.2, 1062.0], [21.3, 1073.0], [21.4, 1074.0], [21.5, 1074.0], [21.6, 1087.0], [21.7, 1090.0], [21.8, 1099.0], [21.9, 1100.0], [22.0, 1121.0], [22.1, 1121.0], [22.2, 1123.0], [22.3, 1127.0], [22.4, 1128.0], [22.5, 1132.0], [22.6, 1136.0], [22.7, 1137.0], [22.8, 1142.0], [22.9, 1145.0], [23.0, 1154.0], [23.1, 1167.0], [23.2, 1188.0], [23.3, 1192.0], [23.4, 1195.0], [23.5, 1199.0], [23.6, 1200.0], [23.7, 1206.0], [23.8, 1207.0], [23.9, 1212.0], [24.0, 1213.0], [24.1, 1223.0], [24.2, 1223.0], [24.3, 1225.0], [24.4, 1230.0], [24.5, 1237.0], [24.6, 1244.0], [24.7, 1248.0], [24.8, 1253.0], [24.9, 1258.0], [25.0, 1261.0], [25.1, 1263.0], [25.2, 1268.0], [25.3, 1269.0], [25.4, 1283.0], [25.5, 1285.0], [25.6, 1285.0], [25.7, 1287.0], [25.8, 1290.0], [25.9, 1290.0], [26.0, 1291.0], [26.1, 1297.0], [26.2, 1301.0], [26.3, 1301.0], [26.4, 1303.0], [26.5, 1304.0], [26.6, 1305.0], [26.7, 1309.0], [26.8, 1320.0], [26.9, 1322.0], [27.0, 1325.0], [27.1, 1327.0], [27.2, 1328.0], [27.3, 1343.0], [27.4, 1344.0], [27.5, 1345.0], [27.6, 1345.0], [27.7, 1346.0], [27.8, 1346.0], [27.9, 1359.0], [28.0, 1364.0], [28.1, 1370.0], [28.2, 1373.0], [28.3, 1373.0], [28.4, 1374.0], [28.5, 1379.0], [28.6, 1381.0], [28.7, 1383.0], [28.8, 1383.0], [28.9, 1385.0], [29.0, 1387.0], [29.1, 1392.0], [29.2, 1405.0], [29.3, 1413.0], [29.4, 1425.0], [29.5, 1432.0], [29.6, 1442.0], [29.7, 1448.0], [29.8, 1453.0], [29.9, 1458.0], [30.0, 1459.0], [30.1, 1460.0], [30.2, 1461.0], [30.3, 1463.0], [30.4, 1464.0], [30.5, 1464.0], [30.6, 1467.0], [30.7, 1467.0], [30.8, 1468.0], [30.9, 1469.0], [31.0, 1470.0], [31.1, 1472.0], [31.2, 1473.0], [31.3, 1477.0], [31.4, 1505.0], [31.5, 1513.0], [31.6, 1516.0], [31.7, 1518.0], [31.8, 1519.0], [31.9, 1519.0], [32.0, 1523.0], [32.1, 1524.0], [32.2, 1525.0], [32.3, 1530.0], [32.4, 1531.0], [32.5, 1535.0], [32.6, 1543.0], [32.7, 1547.0], [32.8, 1548.0], [32.9, 1549.0], [33.0, 1553.0], [33.1, 1554.0], [33.2, 1555.0], [33.3, 1555.0], [33.4, 1571.0], [33.5, 1573.0], [33.6, 1587.0], [33.7, 1588.0], [33.8, 1589.0], [33.9, 1593.0], [34.0, 1593.0], [34.1, 1597.0], [34.2, 1598.0], [34.3, 1611.0], [34.4, 1615.0], [34.5, 1616.0], [34.6, 1617.0], [34.7, 1617.0], [34.8, 1617.0], [34.9, 1623.0], [35.0, 1624.0], [35.1, 1624.0], [35.2, 1626.0], [35.3, 1632.0], [35.4, 1632.0], [35.5, 1637.0], [35.6, 1640.0], [35.7, 1655.0], [35.8, 1663.0], [35.9, 1667.0], [36.0, 1671.0], [36.1, 1672.0], [36.2, 1674.0], [36.3, 1683.0], [36.4, 1686.0], [36.5, 1692.0], [36.6, 1700.0], [36.7, 1713.0], [36.8, 1726.0], [36.9, 1728.0], [37.0, 1734.0], [37.1, 1737.0], [37.2, 1737.0], [37.3, 1742.0], [37.4, 1744.0], [37.5, 1753.0], [37.6, 1760.0], [37.7, 1763.0], [37.8, 1766.0], [37.9, 1772.0], [38.0, 1775.0], [38.1, 1782.0], [38.2, 1787.0], [38.3, 1788.0], [38.4, 1792.0], [38.5, 1792.0], [38.6, 1796.0], [38.7, 1798.0], [38.8, 1812.0], [38.9, 1813.0], [39.0, 1817.0], [39.1, 1819.0], [39.2, 1825.0], [39.3, 1828.0], [39.4, 1830.0], [39.5, 1838.0], [39.6, 1839.0], [39.7, 1842.0], [39.8, 1847.0], [39.9, 1861.0], [40.0, 1862.0], [40.1, 1862.0], [40.2, 1872.0], [40.3, 1877.0], [40.4, 1880.0], [40.5, 1891.0], [40.6, 1895.0], [40.7, 1896.0], [40.8, 1902.0], [40.9, 1903.0], [41.0, 1908.0], [41.1, 1920.0], [41.2, 1920.0], [41.3, 1921.0], [41.4, 1923.0], [41.5, 1925.0], [41.6, 1928.0], [41.7, 1929.0], [41.8, 1932.0], [41.9, 1953.0], [42.0, 1954.0], [42.1, 1962.0], [42.2, 1966.0], [42.3, 1971.0], [42.4, 1972.0], [42.5, 1994.0], [42.6, 2005.0], [42.7, 2007.0], [42.8, 2007.0], [42.9, 2010.0], [43.0, 2011.0], [43.1, 2015.0], [43.2, 2015.0], [43.3, 2019.0], [43.4, 2021.0], [43.5, 2026.0], [43.6, 2033.0], [43.7, 2035.0], [43.8, 2044.0], [43.9, 2053.0], [44.0, 2063.0], [44.1, 2064.0], [44.2, 2076.0], [44.3, 2084.0], [44.4, 2091.0], [44.5, 2094.0], [44.6, 2094.0], [44.7, 2101.0], [44.8, 2110.0], [44.9, 2110.0], [45.0, 2111.0], [45.1, 2118.0], [45.2, 2131.0], [45.3, 2131.0], [45.4, 2131.0], [45.5, 2132.0], [45.6, 2141.0], [45.7, 2143.0], [45.8, 2156.0], [45.9, 2157.0], [46.0, 2167.0], [46.1, 2171.0], [46.2, 2176.0], [46.3, 2176.0], [46.4, 2177.0], [46.5, 2183.0], [46.6, 2184.0], [46.7, 2187.0], [46.8, 2188.0], [46.9, 2189.0], [47.0, 2209.0], [47.1, 2211.0], [47.2, 2214.0], [47.3, 2215.0], [47.4, 2217.0], [47.5, 2225.0], [47.6, 2228.0], [47.7, 2229.0], [47.8, 2240.0], [47.9, 2241.0], [48.0, 2246.0], [48.1, 2250.0], [48.2, 2260.0], [48.3, 2261.0], [48.4, 2261.0], [48.5, 2268.0], [48.6, 2292.0], [48.7, 2308.0], [48.8, 2311.0], [48.9, 2322.0], [49.0, 2324.0], [49.1, 2329.0], [49.2, 2329.0], [49.3, 2330.0], [49.4, 2334.0], [49.5, 2334.0], [49.6, 2335.0], [49.7, 2338.0], [49.8, 2339.0], [49.9, 2341.0], [50.0, 2342.0], [50.1, 2349.0], [50.2, 2350.0], [50.3, 2350.0], [50.4, 2360.0], [50.5, 2365.0], [50.6, 2374.0], [50.7, 2386.0], [50.8, 2387.0], [50.9, 2389.0], [51.0, 2394.0], [51.1, 2397.0], [51.2, 2406.0], [51.3, 2409.0], [51.4, 2418.0], [51.5, 2428.0], [51.6, 2433.0], [51.7, 2435.0], [51.8, 2448.0], [51.9, 2448.0], [52.0, 2454.0], [52.1, 2460.0], [52.2, 2460.0], [52.3, 2460.0], [52.4, 2462.0], [52.5, 2468.0], [52.6, 2469.0], [52.7, 2471.0], [52.8, 2472.0], [52.9, 2473.0], [53.0, 2476.0], [53.1, 2478.0], [53.2, 2480.0], [53.3, 2494.0], [53.4, 2505.0], [53.5, 2512.0], [53.6, 2513.0], [53.7, 2521.0], [53.8, 2531.0], [53.9, 2531.0], [54.0, 2531.0], [54.1, 2538.0], [54.2, 2540.0], [54.3, 2540.0], [54.4, 2552.0], [54.5, 2553.0], [54.6, 2555.0], [54.7, 2556.0], [54.8, 2560.0], [54.9, 2561.0], [55.0, 2567.0], [55.1, 2569.0], [55.2, 2570.0], [55.3, 2588.0], [55.4, 2590.0], [55.5, 2591.0], [55.6, 2592.0], [55.7, 2605.0], [55.8, 2608.0], [55.9, 2614.0], [56.0, 2619.0], [56.1, 2620.0], [56.2, 2628.0], [56.3, 2629.0], [56.4, 2631.0], [56.5, 2632.0], [56.6, 2636.0], [56.7, 2642.0], [56.8, 2652.0], [56.9, 2656.0], [57.0, 2660.0], [57.1, 2662.0], [57.2, 2663.0], [57.3, 2664.0], [57.4, 2665.0], [57.5, 2671.0], [57.6, 2683.0], [57.7, 2684.0], [57.8, 2691.0], [57.9, 2693.0], [58.0, 2693.0], [58.1, 2709.0], [58.2, 2718.0], [58.3, 2719.0], [58.4, 2726.0], [58.5, 2728.0], [58.6, 2731.0], [58.7, 2735.0], [58.8, 2745.0], [58.9, 2745.0], [59.0, 2770.0], [59.1, 2770.0], [59.2, 2773.0], [59.3, 2775.0], [59.4, 2776.0], [59.5, 2781.0], [59.6, 2782.0], [59.7, 2797.0], [59.8, 2798.0], [59.9, 2806.0], [60.0, 2812.0], [60.1, 2818.0], [60.2, 2819.0], [60.3, 2824.0], [60.4, 2825.0], [60.5, 2839.0], [60.6, 2840.0], [60.7, 2848.0], [60.8, 2854.0], [60.9, 2864.0], [61.0, 2867.0], [61.1, 2868.0], [61.2, 2868.0], [61.3, 2871.0], [61.4, 2882.0], [61.5, 2899.0], [61.6, 2901.0], [61.7, 2902.0], [61.8, 2906.0], [61.9, 2908.0], [62.0, 2909.0], [62.1, 2910.0], [62.2, 2910.0], [62.3, 2912.0], [62.4, 2921.0], [62.5, 2924.0], [62.6, 2925.0], [62.7, 2926.0], [62.8, 2927.0], [62.9, 2933.0], [63.0, 2948.0], [63.1, 2956.0], [63.2, 2956.0], [63.3, 2963.0], [63.4, 2963.0], [63.5, 2968.0], [63.6, 2970.0], [63.7, 2971.0], [63.8, 2972.0], [63.9, 2973.0], [64.0, 2985.0], [64.1, 2987.0], [64.2, 2993.0], [64.3, 3001.0], [64.4, 3003.0], [64.5, 3004.0], [64.6, 3007.0], [64.7, 3020.0], [64.8, 3024.0], [64.9, 3024.0], [65.0, 3035.0], [65.1, 3036.0], [65.2, 3042.0], [65.3, 3043.0], [65.4, 3054.0], [65.5, 3056.0], [65.6, 3058.0], [65.7, 3059.0], [65.8, 3061.0], [65.9, 3071.0], [66.0, 3072.0], [66.1, 3083.0], [66.2, 3084.0], [66.3, 3084.0], [66.4, 3098.0], [66.5, 3118.0], [66.6, 3119.0], [66.7, 3120.0], [66.8, 3124.0], [66.9, 3125.0], [67.0, 3125.0], [67.1, 3127.0], [67.2, 3134.0], [67.3, 3135.0], [67.4, 3136.0], [67.5, 3137.0], [67.6, 3151.0], [67.7, 3153.0], [67.8, 3154.0], [67.9, 3156.0], [68.0, 3159.0], [68.1, 3162.0], [68.2, 3165.0], [68.3, 3168.0], [68.4, 3177.0], [68.5, 3185.0], [68.6, 3185.0], [68.7, 3188.0], [68.8, 3194.0], [68.9, 3197.0], [69.0, 3198.0], [69.1, 3200.0], [69.2, 3209.0], [69.3, 3211.0], [69.4, 3214.0], [69.5, 3234.0], [69.6, 3240.0], [69.7, 3243.0], [69.8, 3257.0], [69.9, 3258.0], [70.0, 3263.0], [70.1, 3266.0], [70.2, 3270.0], [70.3, 3272.0], [70.4, 3272.0], [70.5, 3275.0], [70.6, 3279.0], [70.7, 3282.0], [70.8, 3289.0], [70.9, 3303.0], [71.0, 3304.0], [71.1, 3308.0], [71.2, 3317.0], [71.3, 3318.0], [71.4, 3321.0], [71.5, 3324.0], [71.6, 3325.0], [71.7, 3328.0], [71.8, 3331.0], [71.9, 3334.0], [72.0, 3335.0], [72.1, 3336.0], [72.2, 3336.0], [72.3, 3342.0], [72.4, 3345.0], [72.5, 3349.0], [72.6, 3349.0], [72.7, 3356.0], [72.8, 3361.0], [72.9, 3369.0], [73.0, 3372.0], [73.1, 3378.0], [73.2, 3380.0], [73.3, 3380.0], [73.4, 3382.0], [73.5, 3387.0], [73.6, 3390.0], [73.7, 3392.0], [73.8, 3394.0], [73.9, 3394.0], [74.0, 3394.0], [74.1, 3399.0], [74.2, 3399.0], [74.3, 3400.0], [74.4, 3401.0], [74.5, 3402.0], [74.6, 3405.0], [74.7, 3406.0], [74.8, 3412.0], [74.9, 3417.0], [75.0, 3431.0], [75.1, 3444.0], [75.2, 3446.0], [75.3, 3451.0], [75.4, 3453.0], [75.5, 3454.0], [75.6, 3459.0], [75.7, 3471.0], [75.8, 3487.0], [75.9, 3493.0], [76.0, 3493.0], [76.1, 3494.0], [76.2, 3496.0], [76.3, 3496.0], [76.4, 3509.0], [76.5, 3509.0], [76.6, 3512.0], [76.7, 3518.0], [76.8, 3520.0], [76.9, 3520.0], [77.0, 3522.0], [77.1, 3525.0], [77.2, 3541.0], [77.3, 3543.0], [77.4, 3547.0], [77.5, 3551.0], [77.6, 3551.0], [77.7, 3552.0], [77.8, 3561.0], [77.9, 3572.0], [78.0, 3574.0], [78.1, 3576.0], [78.2, 3578.0], [78.3, 3579.0], [78.4, 3592.0], [78.5, 3596.0], [78.6, 3596.0], [78.7, 3596.0], [78.8, 3596.0], [78.9, 3605.0], [79.0, 3612.0], [79.1, 3613.0], [79.2, 3614.0], [79.3, 3617.0], [79.4, 3622.0], [79.5, 3623.0], [79.6, 3629.0], [79.7, 3633.0], [79.8, 3635.0], [79.9, 3643.0], [80.0, 3644.0], [80.1, 3647.0], [80.2, 3653.0], [80.3, 3655.0], [80.4, 3660.0], [80.5, 3664.0], [80.6, 3665.0], [80.7, 3667.0], [80.8, 3668.0], [80.9, 3674.0], [81.0, 3678.0], [81.1, 3682.0], [81.2, 3682.0], [81.3, 3688.0], [81.4, 3701.0], [81.5, 3703.0], [81.6, 3728.0], [81.7, 3736.0], [81.8, 3736.0], [81.9, 3739.0], [82.0, 3740.0], [82.1, 3744.0], [82.2, 3753.0], [82.3, 3756.0], [82.4, 3761.0], [82.5, 3763.0], [82.6, 3769.0], [82.7, 3775.0], [82.8, 3775.0], [82.9, 3777.0], [83.0, 3780.0], [83.1, 3781.0], [83.2, 3781.0], [83.3, 3781.0], [83.4, 3784.0], [83.5, 3787.0], [83.6, 3802.0], [83.7, 3811.0], [83.8, 3811.0], [83.9, 3822.0], [84.0, 3824.0], [84.1, 3825.0], [84.2, 3837.0], [84.3, 3841.0], [84.4, 3849.0], [84.5, 3867.0], [84.6, 3873.0], [84.7, 3881.0], [84.8, 3890.0], [84.9, 3896.0], [85.0, 3898.0], [85.1, 3908.0], [85.2, 3908.0], [85.3, 3914.0], [85.4, 3920.0], [85.5, 3924.0], [85.6, 3930.0], [85.7, 3932.0], [85.8, 3952.0], [85.9, 3952.0], [86.0, 3955.0], [86.1, 3957.0], [86.2, 3957.0], [86.3, 3957.0], [86.4, 3959.0], [86.5, 3961.0], [86.6, 3969.0], [86.7, 3981.0], [86.8, 3984.0], [86.9, 3984.0], [87.0, 3987.0], [87.1, 3994.0], [87.2, 3995.0], [87.3, 3995.0], [87.4, 3998.0], [87.5, 4002.0], [87.6, 4003.0], [87.7, 4004.0], [87.8, 4006.0], [87.9, 4008.0], [88.0, 4009.0], [88.1, 4022.0], [88.2, 4034.0], [88.3, 4041.0], [88.4, 4041.0], [88.5, 4044.0], [88.6, 4061.0], [88.7, 4065.0], [88.8, 4069.0], [88.9, 4077.0], [89.0, 4080.0], [89.1, 4084.0], [89.2, 4085.0], [89.3, 4088.0], [89.4, 4090.0], [89.5, 4092.0], [89.6, 4094.0], [89.7, 4096.0], [89.8, 4097.0], [89.9, 4106.0], [90.0, 4113.0], [90.1, 4114.0], [90.2, 4121.0], [90.3, 4136.0], [90.4, 4137.0], [90.5, 4137.0], [90.6, 4145.0], [90.7, 4146.0], [90.8, 4150.0], [90.9, 4158.0], [91.0, 4161.0], [91.1, 4162.0], [91.2, 4162.0], [91.3, 4163.0], [91.4, 4165.0], [91.5, 4165.0], [91.6, 4166.0], [91.7, 4166.0], [91.8, 4167.0], [91.9, 4167.0], [92.0, 4168.0], [92.1, 4173.0], [92.2, 4175.0], [92.3, 4176.0], [92.4, 4180.0], [92.5, 4182.0], [92.6, 4182.0], [92.7, 4188.0], [92.8, 4191.0], [92.9, 4192.0], [93.0, 4194.0], [93.1, 4197.0], [93.2, 4201.0], [93.3, 4203.0], [93.4, 4225.0], [93.5, 4227.0], [93.6, 4228.0], [93.7, 4232.0], [93.8, 4232.0], [93.9, 4234.0], [94.0, 4237.0], [94.1, 4238.0], [94.2, 4238.0], [94.3, 4239.0], [94.4, 4244.0], [94.5, 4247.0], [94.6, 4262.0], [94.7, 4265.0], [94.8, 4280.0], [94.9, 4282.0], [95.0, 4288.0], [95.1, 4291.0], [95.2, 4292.0], [95.3, 4296.0], [95.4, 4298.0], [95.5, 4300.0], [95.6, 4301.0], [95.7, 4304.0], [95.8, 4312.0], [95.9, 4313.0], [96.0, 4313.0], [96.1, 4320.0], [96.2, 4327.0], [96.3, 4328.0], [96.4, 4332.0], [96.5, 4334.0], [96.6, 4335.0], [96.7, 4336.0], [96.8, 4336.0], [96.9, 4339.0], [97.0, 4340.0], [97.1, 4340.0], [97.2, 4343.0], [97.3, 4344.0], [97.4, 4348.0], [97.5, 4352.0], [97.6, 4360.0], [97.7, 4364.0], [97.8, 4373.0], [97.9, 4374.0], [98.0, 4376.0], [98.1, 4380.0], [98.2, 4380.0], [98.3, 4380.0], [98.4, 4385.0], [98.5, 4386.0], [98.6, 4386.0], [98.7, 4388.0], [98.8, 4389.0], [98.9, 4405.0], [99.0, 4407.0], [99.1, 4413.0], [99.2, 4414.0], [99.3, 4415.0], [99.4, 4430.0], [99.5, 4433.0], [99.6, 4434.0], [99.7, 4438.0], [99.8, 4440.0], [99.9, 4440.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 116.0], [0.1, 129.0], [0.2, 159.0], [0.3, 159.0], [0.4, 348.0], [0.5, 671.0], [0.6, 870.0], [0.7, 880.0], [0.8, 931.0], [0.9, 1228.0], [1.0, 1231.0], [1.1, 1264.0], [1.2, 1285.0], [1.3, 1286.0], [1.4, 1286.0], [1.5, 1293.0], [1.6, 1294.0], [1.7, 1294.0], [1.8, 1354.0], [1.9, 1364.0], [2.0, 1385.0], [2.1, 1385.0], [2.2, 1403.0], [2.3, 1413.0], [2.4, 1420.0], [2.5, 1426.0], [2.6, 1436.0], [2.7, 1439.0], [2.8, 1443.0], [2.9, 1444.0], [3.0, 1447.0], [3.1, 1450.0], [3.2, 1451.0], [3.3, 1465.0], [3.4, 1467.0], [3.5, 1467.0], [3.6, 1469.0], [3.7, 1471.0], [3.8, 1473.0], [3.9, 1477.0], [4.0, 1482.0], [4.1, 1484.0], [4.2, 1485.0], [4.3, 1487.0], [4.4, 1500.0], [4.5, 1504.0], [4.6, 1507.0], [4.7, 1508.0], [4.8, 1509.0], [4.9, 1512.0], [5.0, 1537.0], [5.1, 1543.0], [5.2, 1544.0], [5.3, 1560.0], [5.4, 1567.0], [5.5, 1574.0], [5.6, 1580.0], [5.7, 1581.0], [5.8, 1584.0], [5.9, 1590.0], [6.0, 1591.0], [6.1, 1608.0], [6.2, 1612.0], [6.3, 1618.0], [6.4, 1623.0], [6.5, 1623.0], [6.6, 1623.0], [6.7, 1624.0], [6.8, 1629.0], [6.9, 1633.0], [7.0, 1633.0], [7.1, 1642.0], [7.2, 1648.0], [7.3, 1649.0], [7.4, 1656.0], [7.5, 1664.0], [7.6, 1729.0], [7.7, 1813.0], [7.8, 1817.0], [7.9, 1829.0], [8.0, 1861.0], [8.1, 1960.0], [8.2, 2009.0], [8.3, 2183.0], [8.4, 2193.0], [8.5, 2231.0], [8.6, 2284.0], [8.7, 2295.0], [8.8, 2694.0], [8.9, 3322.0], [9.0, 3422.0], [9.1, 3890.0], [9.2, 4136.0], [9.3, 4192.0], [9.4, 4478.0], [9.5, 4528.0], [9.6, 4541.0], [9.7, 4706.0], [9.8, 4707.0], [9.9, 4774.0], [10.0, 4799.0], [10.1, 4993.0], [10.2, 5100.0], [10.3, 5453.0], [10.4, 5500.0], [10.5, 5537.0], [10.6, 5682.0], [10.7, 5766.0], [10.8, 5863.0], [10.9, 5904.0], [11.0, 6149.0], [11.1, 6233.0], [11.2, 6334.0], [11.3, 6448.0], [11.4, 6515.0], [11.5, 6535.0], [11.6, 6548.0], [11.7, 6734.0], [11.8, 6747.0], [11.9, 6753.0], [12.0, 6763.0], [12.1, 6809.0], [12.2, 6872.0], [12.3, 6925.0], [12.4, 6998.0], [12.5, 7085.0], [12.6, 7107.0], [12.7, 7142.0], [12.8, 7161.0], [12.9, 7255.0], [13.0, 7262.0], [13.1, 7268.0], [13.2, 7273.0], [13.3, 7273.0], [13.4, 7283.0], [13.5, 7331.0], [13.6, 7337.0], [13.7, 7340.0], [13.8, 7366.0], [13.9, 7377.0], [14.0, 7391.0], [14.1, 7392.0], [14.2, 7393.0], [14.3, 7412.0], [14.4, 7415.0], [14.5, 7424.0], [14.6, 7432.0], [14.7, 7448.0], [14.8, 7449.0], [14.9, 7464.0], [15.0, 7485.0], [15.1, 7487.0], [15.2, 7489.0], [15.3, 7509.0], [15.4, 7511.0], [15.5, 7519.0], [15.6, 7537.0], [15.7, 7547.0], [15.8, 7547.0], [15.9, 7547.0], [16.0, 7549.0], [16.1, 7550.0], [16.2, 7556.0], [16.3, 7558.0], [16.4, 7562.0], [16.5, 7567.0], [16.6, 7569.0], [16.7, 7573.0], [16.8, 7582.0], [16.9, 7591.0], [17.0, 7609.0], [17.1, 7641.0], [17.2, 7651.0], [17.3, 7663.0], [17.4, 7667.0], [17.5, 7667.0], [17.6, 7672.0], [17.7, 7673.0], [17.8, 7675.0], [17.9, 7681.0], [18.0, 7683.0], [18.1, 7698.0], [18.2, 7698.0], [18.3, 7703.0], [18.4, 7704.0], [18.5, 7749.0], [18.6, 7752.0], [18.7, 7759.0], [18.8, 7768.0], [18.9, 7786.0], [19.0, 7788.0], [19.1, 7791.0], [19.2, 7804.0], [19.3, 7807.0], [19.4, 7807.0], [19.5, 7808.0], [19.6, 7826.0], [19.7, 7831.0], [19.8, 7842.0], [19.9, 7845.0], [20.0, 7854.0], [20.1, 7865.0], [20.2, 7871.0], [20.3, 7871.0], [20.4, 7873.0], [20.5, 7875.0], [20.6, 7881.0], [20.7, 7892.0], [20.8, 7893.0], [20.9, 7894.0], [21.0, 7914.0], [21.1, 7919.0], [21.2, 7925.0], [21.3, 7931.0], [21.4, 7940.0], [21.5, 7944.0], [21.6, 7944.0], [21.7, 7951.0], [21.8, 7962.0], [21.9, 7962.0], [22.0, 7967.0], [22.1, 7970.0], [22.2, 7973.0], [22.3, 7975.0], [22.4, 7976.0], [22.5, 7977.0], [22.6, 7988.0], [22.7, 7996.0], [22.8, 8004.0], [22.9, 8007.0], [23.0, 8017.0], [23.1, 8021.0], [23.2, 8022.0], [23.3, 8023.0], [23.4, 8037.0], [23.5, 8056.0], [23.6, 8067.0], [23.7, 8078.0], [23.8, 8095.0], [23.9, 8095.0], [24.0, 8115.0], [24.1, 8118.0], [24.2, 8121.0], [24.3, 8127.0], [24.4, 8129.0], [24.5, 8133.0], [24.6, 8139.0], [24.7, 8148.0], [24.8, 8152.0], [24.9, 8153.0], [25.0, 8157.0], [25.1, 8160.0], [25.2, 8165.0], [25.3, 8168.0], [25.4, 8171.0], [25.5, 8172.0], [25.6, 8179.0], [25.7, 8182.0], [25.8, 8188.0], [25.9, 8194.0], [26.0, 8204.0], [26.1, 8205.0], [26.2, 8206.0], [26.3, 8211.0], [26.4, 8231.0], [26.5, 8241.0], [26.6, 8257.0], [26.7, 8277.0], [26.8, 8279.0], [26.9, 8284.0], [27.0, 8296.0], [27.1, 8297.0], [27.2, 8301.0], [27.3, 8305.0], [27.4, 8308.0], [27.5, 8309.0], [27.6, 8316.0], [27.7, 8331.0], [27.8, 8332.0], [27.9, 8342.0], [28.0, 8360.0], [28.1, 8374.0], [28.2, 8377.0], [28.3, 8378.0], [28.4, 8384.0], [28.5, 8385.0], [28.6, 8388.0], [28.7, 8389.0], [28.8, 8397.0], [28.9, 8403.0], [29.0, 8407.0], [29.1, 8409.0], [29.2, 8410.0], [29.3, 8412.0], [29.4, 8412.0], [29.5, 8416.0], [29.6, 8418.0], [29.7, 8422.0], [29.8, 8423.0], [29.9, 8424.0], [30.0, 8429.0], [30.1, 8430.0], [30.2, 8430.0], [30.3, 8438.0], [30.4, 8440.0], [30.5, 8443.0], [30.6, 8444.0], [30.7, 8448.0], [30.8, 8451.0], [30.9, 8459.0], [31.0, 8460.0], [31.1, 8462.0], [31.2, 8464.0], [31.3, 8466.0], [31.4, 8466.0], [31.5, 8467.0], [31.6, 8467.0], [31.7, 8471.0], [31.8, 8472.0], [31.9, 8476.0], [32.0, 8482.0], [32.1, 8487.0], [32.2, 8495.0], [32.3, 8501.0], [32.4, 8508.0], [32.5, 8516.0], [32.6, 8524.0], [32.7, 8530.0], [32.8, 8531.0], [32.9, 8533.0], [33.0, 8536.0], [33.1, 8541.0], [33.2, 8546.0], [33.3, 8546.0], [33.4, 8549.0], [33.5, 8559.0], [33.6, 8559.0], [33.7, 8564.0], [33.8, 8566.0], [33.9, 8570.0], [34.0, 8571.0], [34.1, 8571.0], [34.2, 8573.0], [34.3, 8582.0], [34.4, 8583.0], [34.5, 8584.0], [34.6, 8586.0], [34.7, 8588.0], [34.8, 8590.0], [34.9, 8592.0], [35.0, 8593.0], [35.1, 8596.0], [35.2, 8598.0], [35.3, 8598.0], [35.4, 8606.0], [35.5, 8612.0], [35.6, 8618.0], [35.7, 8629.0], [35.8, 8629.0], [35.9, 8631.0], [36.0, 8633.0], [36.1, 8634.0], [36.2, 8637.0], [36.3, 8641.0], [36.4, 8648.0], [36.5, 8648.0], [36.6, 8650.0], [36.7, 8658.0], [36.8, 8662.0], [36.9, 8662.0], [37.0, 8669.0], [37.1, 8669.0], [37.2, 8670.0], [37.3, 8673.0], [37.4, 8676.0], [37.5, 8687.0], [37.6, 8693.0], [37.7, 8700.0], [37.8, 8701.0], [37.9, 8704.0], [38.0, 8704.0], [38.1, 8706.0], [38.2, 8706.0], [38.3, 8717.0], [38.4, 8719.0], [38.5, 8728.0], [38.6, 8730.0], [38.7, 8730.0], [38.8, 8731.0], [38.9, 8732.0], [39.0, 8736.0], [39.1, 8739.0], [39.2, 8740.0], [39.3, 8741.0], [39.4, 8742.0], [39.5, 8743.0], [39.6, 8743.0], [39.7, 8746.0], [39.8, 8747.0], [39.9, 8749.0], [40.0, 8759.0], [40.1, 8764.0], [40.2, 8770.0], [40.3, 8776.0], [40.4, 8781.0], [40.5, 8784.0], [40.6, 8785.0], [40.7, 8788.0], [40.8, 8789.0], [40.9, 8798.0], [41.0, 8805.0], [41.1, 8808.0], [41.2, 8810.0], [41.3, 8811.0], [41.4, 8814.0], [41.5, 8815.0], [41.6, 8816.0], [41.7, 8818.0], [41.8, 8820.0], [41.9, 8821.0], [42.0, 8822.0], [42.1, 8822.0], [42.2, 8823.0], [42.3, 8823.0], [42.4, 8823.0], [42.5, 8827.0], [42.6, 8836.0], [42.7, 8837.0], [42.8, 8840.0], [42.9, 8840.0], [43.0, 8841.0], [43.1, 8842.0], [43.2, 8845.0], [43.3, 8845.0], [43.4, 8846.0], [43.5, 8846.0], [43.6, 8846.0], [43.7, 8849.0], [43.8, 8850.0], [43.9, 8851.0], [44.0, 8851.0], [44.1, 8852.0], [44.2, 8852.0], [44.3, 8853.0], [44.4, 8854.0], [44.5, 8854.0], [44.6, 8858.0], [44.7, 8858.0], [44.8, 8860.0], [44.9, 8863.0], [45.0, 8863.0], [45.1, 8865.0], [45.2, 8867.0], [45.3, 8867.0], [45.4, 8870.0], [45.5, 8872.0], [45.6, 8874.0], [45.7, 8874.0], [45.8, 8876.0], [45.9, 8877.0], [46.0, 8880.0], [46.1, 8880.0], [46.2, 8881.0], [46.3, 8889.0], [46.4, 8889.0], [46.5, 8890.0], [46.6, 8891.0], [46.7, 8895.0], [46.8, 8898.0], [46.9, 8901.0], [47.0, 8902.0], [47.1, 8902.0], [47.2, 8903.0], [47.3, 8903.0], [47.4, 8906.0], [47.5, 8911.0], [47.6, 8912.0], [47.7, 8915.0], [47.8, 8916.0], [47.9, 8917.0], [48.0, 8917.0], [48.1, 8920.0], [48.2, 8921.0], [48.3, 8921.0], [48.4, 8922.0], [48.5, 8924.0], [48.6, 8926.0], [48.7, 8927.0], [48.8, 8928.0], [48.9, 8931.0], [49.0, 8933.0], [49.1, 8934.0], [49.2, 8935.0], [49.3, 8937.0], [49.4, 8939.0], [49.5, 8943.0], [49.6, 8956.0], [49.7, 8957.0], [49.8, 8958.0], [49.9, 8966.0], [50.0, 8967.0], [50.1, 8970.0], [50.2, 8970.0], [50.3, 8973.0], [50.4, 8973.0], [50.5, 8974.0], [50.6, 8974.0], [50.7, 8980.0], [50.8, 8981.0], [50.9, 8982.0], [51.0, 8983.0], [51.1, 8983.0], [51.2, 8983.0], [51.3, 8984.0], [51.4, 8986.0], [51.5, 8988.0], [51.6, 8988.0], [51.7, 8988.0], [51.8, 8990.0], [51.9, 8991.0], [52.0, 8992.0], [52.1, 8997.0], [52.2, 8999.0], [52.3, 9002.0], [52.4, 9003.0], [52.5, 9003.0], [52.6, 9003.0], [52.7, 9004.0], [52.8, 9005.0], [52.9, 9006.0], [53.0, 9007.0], [53.1, 9008.0], [53.2, 9008.0], [53.3, 9011.0], [53.4, 9012.0], [53.5, 9013.0], [53.6, 9013.0], [53.7, 9015.0], [53.8, 9016.0], [53.9, 9016.0], [54.0, 9017.0], [54.1, 9017.0], [54.2, 9018.0], [54.3, 9020.0], [54.4, 9020.0], [54.5, 9021.0], [54.6, 9021.0], [54.7, 9024.0], [54.8, 9024.0], [54.9, 9024.0], [55.0, 9026.0], [55.1, 9028.0], [55.2, 9032.0], [55.3, 9032.0], [55.4, 9033.0], [55.5, 9033.0], [55.6, 9034.0], [55.7, 9034.0], [55.8, 9036.0], [55.9, 9040.0], [56.0, 9042.0], [56.1, 9043.0], [56.2, 9044.0], [56.3, 9045.0], [56.4, 9045.0], [56.5, 9045.0], [56.6, 9048.0], [56.7, 9049.0], [56.8, 9050.0], [56.9, 9051.0], [57.0, 9051.0], [57.1, 9055.0], [57.2, 9055.0], [57.3, 9058.0], [57.4, 9059.0], [57.5, 9064.0], [57.6, 9064.0], [57.7, 9066.0], [57.8, 9068.0], [57.9, 9069.0], [58.0, 9072.0], [58.1, 9073.0], [58.2, 9073.0], [58.3, 9073.0], [58.4, 9074.0], [58.5, 9074.0], [58.6, 9076.0], [58.7, 9077.0], [58.8, 9079.0], [58.9, 9080.0], [59.0, 9081.0], [59.1, 9083.0], [59.2, 9083.0], [59.3, 9086.0], [59.4, 9086.0], [59.5, 9087.0], [59.6, 9090.0], [59.7, 9092.0], [59.8, 9094.0], [59.9, 9100.0], [60.0, 9102.0], [60.1, 9105.0], [60.2, 9107.0], [60.3, 9108.0], [60.4, 9110.0], [60.5, 9112.0], [60.6, 9113.0], [60.7, 9113.0], [60.8, 9114.0], [60.9, 9116.0], [61.0, 9119.0], [61.1, 9121.0], [61.2, 9122.0], [61.3, 9122.0], [61.4, 9122.0], [61.5, 9123.0], [61.6, 9126.0], [61.7, 9130.0], [61.8, 9132.0], [61.9, 9132.0], [62.0, 9136.0], [62.1, 9138.0], [62.2, 9138.0], [62.3, 9140.0], [62.4, 9140.0], [62.5, 9140.0], [62.6, 9142.0], [62.7, 9143.0], [62.8, 9143.0], [62.9, 9144.0], [63.0, 9146.0], [63.1, 9148.0], [63.2, 9149.0], [63.3, 9150.0], [63.4, 9153.0], [63.5, 9153.0], [63.6, 9155.0], [63.7, 9155.0], [63.8, 9158.0], [63.9, 9159.0], [64.0, 9159.0], [64.1, 9161.0], [64.2, 9163.0], [64.3, 9163.0], [64.4, 9165.0], [64.5, 9167.0], [64.6, 9169.0], [64.7, 9170.0], [64.8, 9174.0], [64.9, 9176.0], [65.0, 9178.0], [65.1, 9179.0], [65.2, 9179.0], [65.3, 9179.0], [65.4, 9180.0], [65.5, 9180.0], [65.6, 9181.0], [65.7, 9185.0], [65.8, 9185.0], [65.9, 9187.0], [66.0, 9187.0], [66.1, 9189.0], [66.2, 9190.0], [66.3, 9193.0], [66.4, 9193.0], [66.5, 9194.0], [66.6, 9194.0], [66.7, 9195.0], [66.8, 9197.0], [66.9, 9200.0], [67.0, 9201.0], [67.1, 9202.0], [67.2, 9205.0], [67.3, 9207.0], [67.4, 9207.0], [67.5, 9207.0], [67.6, 9207.0], [67.7, 9208.0], [67.8, 9210.0], [67.9, 9211.0], [68.0, 9211.0], [68.1, 9212.0], [68.2, 9212.0], [68.3, 9214.0], [68.4, 9214.0], [68.5, 9215.0], [68.6, 9220.0], [68.7, 9221.0], [68.8, 9225.0], [68.9, 9225.0], [69.0, 9230.0], [69.1, 9235.0], [69.2, 9236.0], [69.3, 9236.0], [69.4, 9237.0], [69.5, 9238.0], [69.6, 9238.0], [69.7, 9240.0], [69.8, 9243.0], [69.9, 9244.0], [70.0, 9244.0], [70.1, 9246.0], [70.2, 9247.0], [70.3, 9247.0], [70.4, 9251.0], [70.5, 9252.0], [70.6, 9253.0], [70.7, 9256.0], [70.8, 9258.0], [70.9, 9258.0], [71.0, 9258.0], [71.1, 9261.0], [71.2, 9261.0], [71.3, 9263.0], [71.4, 9265.0], [71.5, 9265.0], [71.6, 9269.0], [71.7, 9269.0], [71.8, 9272.0], [71.9, 9274.0], [72.0, 9274.0], [72.1, 9276.0], [72.2, 9276.0], [72.3, 9277.0], [72.4, 9277.0], [72.5, 9278.0], [72.6, 9284.0], [72.7, 9291.0], [72.8, 9292.0], [72.9, 9296.0], [73.0, 9299.0], [73.1, 9303.0], [73.2, 9304.0], [73.3, 9304.0], [73.4, 9306.0], [73.5, 9306.0], [73.6, 9307.0], [73.7, 9309.0], [73.8, 9309.0], [73.9, 9310.0], [74.0, 9311.0], [74.1, 9318.0], [74.2, 9318.0], [74.3, 9321.0], [74.4, 9321.0], [74.5, 9323.0], [74.6, 9325.0], [74.7, 9332.0], [74.8, 9333.0], [74.9, 9334.0], [75.0, 9334.0], [75.1, 9336.0], [75.2, 9336.0], [75.3, 9337.0], [75.4, 9338.0], [75.5, 9339.0], [75.6, 9340.0], [75.7, 9345.0], [75.8, 9346.0], [75.9, 9350.0], [76.0, 9352.0], [76.1, 9354.0], [76.2, 9355.0], [76.3, 9355.0], [76.4, 9355.0], [76.5, 9360.0], [76.6, 9361.0], [76.7, 9362.0], [76.8, 9365.0], [76.9, 9365.0], [77.0, 9367.0], [77.1, 9369.0], [77.2, 9369.0], [77.3, 9372.0], [77.4, 9372.0], [77.5, 9378.0], [77.6, 9382.0], [77.7, 9386.0], [77.8, 9387.0], [77.9, 9387.0], [78.0, 9388.0], [78.1, 9389.0], [78.2, 9391.0], [78.3, 9394.0], [78.4, 9394.0], [78.5, 9396.0], [78.6, 9405.0], [78.7, 9406.0], [78.8, 9408.0], [78.9, 9409.0], [79.0, 9412.0], [79.1, 9416.0], [79.2, 9416.0], [79.3, 9419.0], [79.4, 9423.0], [79.5, 9424.0], [79.6, 9425.0], [79.7, 9427.0], [79.8, 9434.0], [79.9, 9436.0], [80.0, 9437.0], [80.1, 9437.0], [80.2, 9437.0], [80.3, 9438.0], [80.4, 9438.0], [80.5, 9439.0], [80.6, 9439.0], [80.7, 9440.0], [80.8, 9442.0], [80.9, 9444.0], [81.0, 9444.0], [81.1, 9445.0], [81.2, 9445.0], [81.3, 9455.0], [81.4, 9457.0], [81.5, 9457.0], [81.6, 9460.0], [81.7, 9460.0], [81.8, 9461.0], [81.9, 9461.0], [82.0, 9464.0], [82.1, 9464.0], [82.2, 9465.0], [82.3, 9467.0], [82.4, 9468.0], [82.5, 9469.0], [82.6, 9470.0], [82.7, 9471.0], [82.8, 9471.0], [82.9, 9474.0], [83.0, 9477.0], [83.1, 9481.0], [83.2, 9482.0], [83.3, 9484.0], [83.4, 9488.0], [83.5, 9492.0], [83.6, 9496.0], [83.7, 9499.0], [83.8, 9499.0], [83.9, 9500.0], [84.0, 9501.0], [84.1, 9501.0], [84.2, 9503.0], [84.3, 9505.0], [84.4, 9507.0], [84.5, 9508.0], [84.6, 9509.0], [84.7, 9511.0], [84.8, 9513.0], [84.9, 9514.0], [85.0, 9517.0], [85.1, 9517.0], [85.2, 9517.0], [85.3, 9518.0], [85.4, 9518.0], [85.5, 9521.0], [85.6, 9521.0], [85.7, 9521.0], [85.8, 9522.0], [85.9, 9528.0], [86.0, 9528.0], [86.1, 9529.0], [86.2, 9540.0], [86.3, 9541.0], [86.4, 9542.0], [86.5, 9542.0], [86.6, 9544.0], [86.7, 9544.0], [86.8, 9549.0], [86.9, 9550.0], [87.0, 9551.0], [87.1, 9553.0], [87.2, 9555.0], [87.3, 9556.0], [87.4, 9557.0], [87.5, 9558.0], [87.6, 9561.0], [87.7, 9561.0], [87.8, 9563.0], [87.9, 9563.0], [88.0, 9566.0], [88.1, 9568.0], [88.2, 9568.0], [88.3, 9571.0], [88.4, 9573.0], [88.5, 9574.0], [88.6, 9577.0], [88.7, 9578.0], [88.8, 9578.0], [88.9, 9580.0], [89.0, 9581.0], [89.1, 9581.0], [89.2, 9582.0], [89.3, 9587.0], [89.4, 9590.0], [89.5, 9597.0], [89.6, 9600.0], [89.7, 9601.0], [89.8, 9601.0], [89.9, 9604.0], [90.0, 9604.0], [90.1, 9605.0], [90.2, 9606.0], [90.3, 9606.0], [90.4, 9609.0], [90.5, 9611.0], [90.6, 9612.0], [90.7, 9617.0], [90.8, 9625.0], [90.9, 9631.0], [91.0, 9631.0], [91.1, 9632.0], [91.2, 9633.0], [91.3, 9634.0], [91.4, 9639.0], [91.5, 9641.0], [91.6, 9642.0], [91.7, 9645.0], [91.8, 9648.0], [91.9, 9652.0], [92.0, 9653.0], [92.1, 9653.0], [92.2, 9654.0], [92.3, 9654.0], [92.4, 9658.0], [92.5, 9658.0], [92.6, 9659.0], [92.7, 9661.0], [92.8, 9665.0], [92.9, 9665.0], [93.0, 9668.0], [93.1, 9669.0], [93.2, 9670.0], [93.3, 9675.0], [93.4, 9678.0], [93.5, 9682.0], [93.6, 9684.0], [93.7, 9684.0], [93.8, 9686.0], [93.9, 9687.0], [94.0, 9700.0], [94.1, 9700.0], [94.2, 9707.0], [94.3, 9711.0], [94.4, 9718.0], [94.5, 9721.0], [94.6, 9732.0], [94.7, 9737.0], [94.8, 9756.0], [94.9, 9757.0], [95.0, 9758.0], [95.1, 9764.0], [95.2, 9777.0], [95.3, 9780.0], [95.4, 9782.0], [95.5, 9782.0], [95.6, 9784.0], [95.7, 9798.0], [95.8, 9806.0], [95.9, 9812.0], [96.0, 9813.0], [96.1, 9815.0], [96.2, 9825.0], [96.3, 9830.0], [96.4, 9832.0], [96.5, 9834.0], [96.6, 9838.0], [96.7, 9850.0], [96.8, 9852.0], [96.9, 9857.0], [97.0, 9870.0], [97.1, 9871.0], [97.2, 9871.0], [97.3, 9873.0], [97.4, 9890.0], [97.5, 9895.0], [97.6, 9903.0], [97.7, 9926.0], [97.8, 9933.0], [97.9, 9943.0], [98.0, 9944.0], [98.1, 9954.0], [98.2, 9955.0], [98.3, 9969.0], [98.4, 9987.0], [98.5, 9989.0], [98.6, 9989.0], [98.7, 9990.0], [98.8, 10000.0], [98.9, 10005.0], [99.0, 10032.0], [99.1, 10035.0], [99.2, 10038.0], [99.3, 10081.0], [99.4, 10232.0], [99.5, 10304.0], [99.6, 10382.0], [99.7, 10384.0], [99.8, 10570.0], [99.9, 12984.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 86.0, "series": [{"data": [[600.0, 7.0], [700.0, 10.0], [800.0, 11.0], [900.0, 6.0], [1000.0, 5.0], [1100.0, 6.0], [1200.0, 14.0], [1300.0, 9.0], [1400.0, 6.0], [1500.0, 3.0], [1600.0, 9.0], [1700.0, 10.0], [1800.0, 18.0], [1900.0, 18.0], [2000.0, 28.0], [2100.0, 15.0], [2200.0, 4.0], [2300.0, 1.0], [2400.0, 1.0], [2500.0, 1.0], [2800.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [3500.0, 1.0], [7600.0, 2.0], [7500.0, 1.0], [8100.0, 1.0], [8000.0, 2.0], [8200.0, 2.0], [8300.0, 3.0], [8400.0, 1.0], [8700.0, 4.0], [8900.0, 2.0], [8800.0, 1.0], [9100.0, 4.0], [9200.0, 9.0], [9000.0, 3.0], [9600.0, 23.0], [9300.0, 9.0], [9400.0, 16.0], [9500.0, 15.0], [9700.0, 30.0], [9800.0, 32.0], [10000.0, 48.0], [9900.0, 33.0], [10200.0, 67.0], [10100.0, 56.0], [10300.0, 52.0], [10500.0, 64.0], [10400.0, 86.0], [10600.0, 69.0], [10700.0, 48.0], [10800.0, 38.0], [10900.0, 24.0], [11000.0, 15.0], [11100.0, 7.0], [11300.0, 3.0], [11500.0, 2.0], [11700.0, 1.0], [11600.0, 1.0], [12100.0, 2.0], [12000.0, 1.0], [12500.0, 1.0], [13200.0, 1.0], [13000.0, 1.0], [100.0, 3.0], [200.0, 15.0], [300.0, 8.0], [400.0, 4.0], [500.0, 4.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 9.0], [600.0, 25.0], [700.0, 24.0], [800.0, 21.0], [900.0, 25.0], [1000.0, 23.0], [1100.0, 17.0], [1200.0, 26.0], [1300.0, 30.0], [1400.0, 22.0], [1500.0, 29.0], [100.0, 7.0], [1600.0, 23.0], [1700.0, 22.0], [1800.0, 20.0], [1900.0, 18.0], [2000.0, 21.0], [2100.0, 23.0], [2200.0, 17.0], [2300.0, 25.0], [2400.0, 22.0], [2500.0, 23.0], [2600.0, 24.0], [2700.0, 18.0], [2800.0, 17.0], [2900.0, 27.0], [3000.0, 22.0], [3100.0, 26.0], [200.0, 28.0], [3200.0, 18.0], [3300.0, 34.0], [3400.0, 21.0], [3500.0, 26.0], [3600.0, 25.0], [3700.0, 22.0], [3800.0, 15.0], [3900.0, 24.0], [4000.0, 24.0], [4100.0, 33.0], [4200.0, 23.0], [4300.0, 34.0], [4400.0, 11.0], [300.0, 20.0], [400.0, 20.0], [500.0, 16.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[600.0, 1.0], [800.0, 2.0], [900.0, 1.0], [1200.0, 8.0], [1300.0, 4.0], [1400.0, 23.0], [1500.0, 17.0], [1600.0, 15.0], [1700.0, 1.0], [1800.0, 4.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 2.0], [2200.0, 3.0], [2600.0, 1.0], [3300.0, 1.0], [3400.0, 1.0], [3800.0, 1.0], [4100.0, 2.0], [4500.0, 2.0], [4400.0, 1.0], [4700.0, 4.0], [5100.0, 1.0], [4900.0, 1.0], [5400.0, 1.0], [5500.0, 2.0], [5600.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [5900.0, 1.0], [6100.0, 1.0], [6300.0, 1.0], [6200.0, 1.0], [6400.0, 1.0], [6500.0, 3.0], [6700.0, 4.0], [6900.0, 2.0], [6800.0, 2.0], [7100.0, 3.0], [7000.0, 1.0], [7200.0, 6.0], [7400.0, 10.0], [7300.0, 8.0], [7500.0, 17.0], [7600.0, 13.0], [7700.0, 9.0], [7800.0, 17.0], [7900.0, 18.0], [8000.0, 12.0], [8100.0, 20.0], [8200.0, 12.0], [8300.0, 17.0], [8400.0, 34.0], [8500.0, 31.0], [8600.0, 23.0], [8700.0, 33.0], [8800.0, 59.0], [8900.0, 54.0], [9000.0, 76.0], [9100.0, 70.0], [9200.0, 62.0], [9300.0, 55.0], [9400.0, 53.0], [9500.0, 58.0], [9600.0, 44.0], [9700.0, 18.0], [9800.0, 18.0], [9900.0, 12.0], [10000.0, 6.0], [10200.0, 1.0], [10300.0, 3.0], [10500.0, 1.0], [12900.0, 1.0], [100.0, 4.0], [300.0, 1.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 13200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 119.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2534.0, "series": [{"data": [[0.0, 119.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 347.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2534.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 437.23199999999997, "minX": 1.67229636E12, "maxY": 496.7149999999999, "series": [{"data": [[1.67229636E12, 474.62799999999976]], "isOverall": false, "label": "client-to-gateway-non-caching (GET)", "isController": false}, {"data": [[1.67229636E12, 496.7149999999999]], "isOverall": false, "label": "client-to-application (GET)", "isController": false}, {"data": [[1.67229636E12, 437.23199999999997]], "isOverall": false, "label": "client-to-gateway-caching (GET)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67229636E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 18.0, "minX": 1.0, "maxY": 13203.0, "series": [{"data": [[2.0, 13203.0], [3.0, 12540.0], [4.0, 12198.0], [5.0, 12022.0], [6.0, 12126.0], [7.0, 11657.0], [8.0, 11723.0], [9.0, 11583.0], [10.0, 11503.0], [11.0, 11321.0], [12.0, 11358.0], [13.0, 11184.0], [14.0, 10900.0], [15.0, 11165.0], [16.0, 11112.0], [17.0, 10632.0], [18.0, 10582.0], [19.0, 11100.0], [20.0, 10895.0], [22.0, 10645.0], [23.0, 11039.0], [24.0, 10910.0], [25.0, 10788.0], [26.0, 10610.0], [27.0, 10717.0], [29.0, 10763.0], [30.0, 10634.0], [31.0, 10996.0], [33.0, 10718.5], [35.0, 10809.0], [34.0, 10818.0], [37.0, 11068.0], [36.0, 10956.0], [40.0, 10840.0], [42.0, 10841.0], [45.0, 10928.0], [44.0, 10774.0], [47.0, 11078.0], [49.0, 10870.0], [51.0, 11048.5], [53.0, 10721.0], [54.0, 10522.0], [56.0, 11009.5], [59.0, 10730.0], [58.0, 10830.0], [61.0, 10496.0], [60.0, 10988.0], [63.0, 10719.5], [67.0, 10672.0], [66.0, 10886.0], [64.0, 10812.0], [71.0, 10705.5], [69.0, 10605.0], [68.0, 10574.0], [75.0, 10959.0], [74.0, 10601.0], [73.0, 10957.0], [72.0, 10774.0], [78.0, 10798.5], [76.0, 10501.0], [81.0, 10705.0], [80.0, 11019.0], [86.0, 11087.0], [85.0, 10479.0], [84.0, 10615.666666666666], [91.0, 11157.0], [90.0, 10579.0], [89.0, 10772.0], [88.0, 10434.0], [94.0, 10832.0], [93.0, 10681.0], [99.0, 10669.0], [98.0, 10666.0], [97.0, 10638.0], [96.0, 10581.5], [103.0, 10521.0], [102.0, 10687.666666666666], [107.0, 10649.5], [105.0, 10901.0], [104.0, 11115.0], [111.0, 10537.0], [110.0, 10870.0], [109.0, 10571.0], [115.0, 10585.0], [114.0, 10875.0], [113.0, 10605.0], [112.0, 11059.0], [119.0, 10922.5], [117.0, 10778.0], [116.0, 10970.0], [123.0, 10792.0], [122.0, 10475.0], [121.0, 10721.0], [120.0, 10631.0], [127.0, 10759.0], [126.0, 10604.0], [125.0, 10400.0], [124.0, 10639.0], [134.0, 10894.0], [133.0, 11015.0], [132.0, 10782.0], [131.0, 10873.0], [130.0, 10465.0], [129.0, 10629.0], [128.0, 10535.0], [143.0, 10818.0], [142.0, 10925.0], [141.0, 10570.5], [139.0, 10585.0], [138.0, 10689.0], [137.0, 11020.0], [136.0, 10473.5], [151.0, 5478.0], [150.0, 5591.0], [148.0, 10455.0], [147.0, 10534.0], [146.0, 10764.0], [144.0, 10617.0], [154.0, 5369.5], [159.0, 10839.0], [158.0, 10607.0], [157.0, 10855.0], [156.0, 10401.5], [153.0, 10513.0], [152.0, 10702.0], [165.0, 7163.0], [167.0, 10473.0], [166.0, 10738.0], [164.0, 10440.0], [162.0, 10414.5], [160.0, 10614.0], [175.0, 10757.0], [174.0, 10777.0], [173.0, 10872.0], [172.0, 10447.0], [170.0, 10663.0], [169.0, 10580.0], [168.0, 10393.0], [182.0, 10661.0], [181.0, 10504.5], [179.0, 10844.0], [178.0, 10570.0], [177.0, 10418.0], [176.0, 10475.0], [187.0, 5329.5], [191.0, 10640.5], [189.0, 10831.0], [188.0, 10611.0], [186.0, 10489.0], [184.0, 10374.0], [199.0, 10657.0], [197.0, 10540.0], [196.0, 10688.0], [195.0, 10591.0], [193.0, 10804.0], [192.0, 10887.0], [207.0, 3868.0], [206.0, 2346.2], [205.0, 10728.0], [204.0, 10521.0], [203.0, 10460.0], [202.0, 11052.0], [201.0, 10482.0], [200.0, 10650.0], [209.0, 260.5], [208.0, 5466.0], [210.0, 5411.0], [215.0, 10654.0], [214.0, 10664.0], [212.0, 10909.0], [211.0, 10727.0], [223.0, 10593.0], [222.0, 10312.0], [221.0, 10620.0], [220.0, 10621.0], [219.0, 10522.0], [218.0, 10555.0], [216.0, 10435.0], [226.0, 2364.6], [231.0, 10803.0], [230.0, 10764.0], [229.0, 10880.0], [228.0, 10665.0], [225.0, 10554.0], [237.0, 5492.0], [239.0, 10828.0], [238.0, 10768.0], [236.0, 10659.0], [234.0, 10689.5], [232.0, 10637.0], [246.0, 10401.0], [245.0, 10845.0], [244.0, 10388.0], [243.0, 10462.0], [242.0, 10429.0], [241.0, 11002.0], [240.0, 10405.0], [254.0, 10266.0], [253.0, 10396.0], [252.0, 10786.0], [251.0, 10643.0], [250.0, 10673.0], [248.0, 10649.0], [268.0, 10704.0], [270.0, 5389.5], [271.0, 10723.0], [269.0, 10434.0], [267.0, 10548.0], [264.0, 10627.0], [263.0, 10548.0], [257.0, 10403.0], [256.0, 10526.0], [259.0, 10677.0], [258.0, 10741.0], [262.0, 10249.0], [261.0, 10544.0], [260.0, 10477.0], [286.0, 10968.0], [287.0, 10276.0], [285.0, 10302.0], [284.0, 10717.0], [283.0, 10958.0], [282.0, 10512.0], [281.0, 10512.0], [280.0, 10468.0], [279.0, 10532.0], [275.0, 10744.0], [272.0, 10312.0], [278.0, 10440.0], [277.0, 10697.0], [276.0, 10480.0], [301.0, 10328.0], [303.0, 10639.0], [292.0, 7058.666666666667], [293.0, 10449.0], [297.0, 7086.333333333333], [302.0, 10958.0], [300.0, 10628.0], [290.0, 10623.333333333334], [299.0, 10490.0], [298.0, 10284.0], [295.0, 10404.5], [318.0, 10441.5], [317.0, 343.0], [319.0, 10465.0], [316.0, 10665.0], [315.0, 10446.0], [314.0, 10400.0], [313.0, 10304.0], [312.0, 10493.0], [311.0, 10576.0], [305.0, 10440.0], [304.0, 10505.0], [307.0, 10238.0], [306.0, 10623.0], [310.0, 10373.0], [309.0, 10648.0], [308.0, 10214.0], [333.0, 10565.0], [325.0, 360.0], [324.0, 10663.5], [326.0, 10336.5], [334.0, 10195.0], [332.0, 10631.0], [322.0, 10855.0], [321.0, 10519.5], [331.0, 10599.0], [330.0, 10544.0], [329.0, 10148.0], [328.0, 10203.0], [327.0, 10188.0], [349.0, 10399.0], [350.0, 10456.0], [348.0, 10512.0], [347.0, 10208.0], [346.0, 10233.0], [345.0, 10541.0], [343.0, 10430.666666666666], [340.0, 10308.0], [339.0, 10576.0], [337.0, 10438.0], [336.0, 10201.0], [355.0, 10508.0], [366.0, 10284.5], [367.0, 10541.0], [364.0, 10289.0], [353.0, 10560.0], [352.0, 10350.5], [363.0, 10420.0], [360.0, 10537.0], [359.0, 10120.0], [358.0, 10112.0], [357.0, 10583.0], [356.0, 10402.0], [381.0, 10551.0], [383.0, 10358.0], [380.0, 10552.0], [370.0, 10400.5], [368.0, 10593.0], [379.0, 10446.0], [378.0, 10569.0], [377.0, 10416.0], [376.0, 10584.0], [375.0, 10119.0], [374.0, 10078.0], [373.0, 10374.0], [372.0, 10448.5], [398.0, 10559.0], [399.0, 10150.0], [397.0, 10334.0], [396.0, 10383.0], [395.0, 10344.0], [394.0, 10671.0], [392.0, 10396.0], [390.0, 10468.0], [384.0, 10081.0], [387.0, 10288.5], [385.0, 10204.0], [389.0, 10201.0], [388.0, 10282.0], [414.0, 10219.0], [415.0, 10552.0], [413.0, 10410.0], [412.0, 10106.0], [411.0, 10388.0], [410.0, 10087.0], [409.0, 10454.0], [408.0, 10431.0], [407.0, 10227.0], [401.0, 10045.0], [400.0, 10261.0], [403.0, 10624.0], [402.0, 10136.0], [406.0, 10298.0], [405.0, 10200.0], [404.0, 10150.0], [430.0, 10213.0], [431.0, 10016.0], [428.0, 10318.5], [419.0, 10054.0], [418.0, 10324.0], [417.0, 10313.0], [416.0, 10660.0], [426.0, 10426.0], [425.0, 10277.0], [424.0, 10323.0], [423.0, 10197.0], [422.0, 10305.0], [421.0, 10259.0], [420.0, 10177.0], [445.0, 5295.5], [444.0, 7011.666666666667], [435.0, 10530.0], [434.0, 10177.0], [433.0, 10026.0], [432.0, 10323.0], [447.0, 9939.0], [446.0, 10347.0], [442.0, 10465.5], [440.0, 10158.5], [438.0, 10392.0], [437.0, 10409.0], [436.0, 10298.0], [451.0, 10255.5], [461.0, 10146.0], [460.0, 10195.0], [449.0, 10414.0], [448.0, 10070.0], [459.0, 10230.0], [458.0, 9996.0], [457.0, 10576.5], [455.0, 10080.0], [454.0, 10491.0], [453.0, 10256.0], [452.0, 10191.0], [479.0, 10441.5], [477.0, 10043.5], [467.0, 10431.0], [466.0, 10364.0], [465.0, 10167.0], [464.0, 10163.333333333334], [475.0, 10024.0], [474.0, 10259.0], [473.0, 10157.0], [472.0, 9968.0], [471.0, 9994.0], [470.0, 9997.0], [469.0, 10187.0], [468.0, 10257.0], [494.0, 10348.0], [495.0, 10186.0], [493.0, 10221.0], [492.0, 10008.0], [491.0, 10092.0], [490.0, 10424.0], [489.0, 10069.0], [487.0, 10202.0], [481.0, 10151.0], [483.0, 10160.0], [482.0, 10232.0], [486.0, 10248.0], [485.0, 10065.5], [511.0, 10254.5], [507.0, 5266.5], [509.0, 9957.0], [508.0, 9899.0], [506.0, 10425.0], [505.0, 9896.0], [504.0, 10119.0], [502.0, 9904.0], [496.0, 9979.0], [499.0, 10141.5], [497.0, 10104.0], [501.0, 9888.0], [500.0, 9921.0], [536.0, 10037.0], [542.0, 10015.0], [513.0, 5446.0], [512.0, 10414.0], [514.0, 9968.0], [516.0, 10148.0], [515.0, 10424.0], [518.0, 10272.0], [517.0, 9845.0], [526.0, 10293.0], [524.0, 10125.0], [523.0, 9881.0], [522.0, 10107.0], [521.0, 10163.0], [543.0, 10453.0], [528.0, 10313.5], [530.0, 9889.0], [529.0, 10110.0], [532.0, 10034.0], [531.0, 10289.0], [541.0, 10046.0], [539.0, 10134.0], [537.0, 10485.0], [535.0, 10230.0], [533.0, 9832.0], [569.0, 10039.0], [574.0, 10056.0], [572.0, 5174.5], [575.0, 9789.0], [561.0, 10419.0], [560.0, 9957.0], [563.0, 10196.0], [562.0, 9747.0], [565.0, 10410.0], [564.0, 9782.0], [573.0, 9925.0], [570.0, 10231.0], [568.0, 10089.0], [551.0, 9762.0], [550.0, 10053.5], [548.0, 9861.0], [547.0, 10290.0], [546.0, 10234.5], [544.0, 10253.0], [559.0, 10080.0], [557.0, 10124.0], [555.0, 10530.0], [554.0, 10178.0], [553.0, 10335.0], [552.0, 10212.0], [567.0, 9751.0], [566.0, 10143.0], [604.0, 10346.0], [607.0, 9799.0], [592.0, 9915.0], [594.0, 9928.0], [593.0, 10122.0], [596.0, 9978.0], [595.0, 10263.0], [606.0, 9846.0], [605.0, 10261.0], [603.0, 9833.0], [602.0, 9968.0], [601.0, 10127.0], [600.0, 9688.0], [591.0, 10136.0], [578.0, 9728.0], [577.0, 10227.5], [580.0, 9956.0], [579.0, 10208.0], [582.0, 10506.0], [581.0, 10061.0], [590.0, 9979.0], [589.0, 10138.0], [588.0, 10075.0], [587.0, 9868.0], [586.0, 9852.0], [585.0, 9906.0], [584.0, 10252.0], [599.0, 10252.0], [598.0, 9933.5], [633.0, 9623.0], [637.0, 9740.0], [625.0, 5266.0], [626.0, 9773.0], [628.0, 10103.0], [627.0, 9857.0], [631.0, 9975.0], [630.0, 10100.5], [639.0, 9738.0], [638.0, 10068.0], [636.0, 10081.0], [635.0, 10143.0], [634.0, 10264.0], [632.0, 9863.0], [615.0, 9843.0], [614.0, 9767.0], [613.0, 9834.0], [612.0, 9759.0], [611.0, 9845.5], [609.0, 10116.0], [608.0, 10086.0], [623.0, 9875.0], [622.0, 10218.0], [621.0, 10109.0], [620.0, 10002.0], [619.0, 10146.0], [618.0, 9936.0], [617.0, 10164.0], [616.0, 10067.0], [665.0, 10124.0], [669.0, 9629.0], [667.0, 2830.5], [670.0, 9772.0], [658.0, 9834.5], [656.0, 9685.0], [660.0, 9940.0], [659.0, 9672.0], [668.0, 9701.0], [666.0, 10289.0], [664.0, 9758.0], [647.0, 9929.0], [645.0, 9799.0], [644.0, 10039.0], [643.0, 10041.0], [642.0, 9777.0], [641.0, 9786.0], [640.0, 10017.0], [655.0, 10162.0], [654.0, 10009.0], [653.0, 9686.0], [652.0, 9714.0], [651.0, 10125.0], [650.0, 9884.0], [649.0, 9840.0], [663.0, 9980.0], [662.0, 9920.5], [700.0, 9483.0], [703.0, 9756.0], [688.0, 9715.0], [691.0, 9749.0], [689.0, 9420.0], [693.0, 9767.0], [692.0, 9893.0], [702.0, 9268.0], [701.0, 9821.0], [699.0, 9312.0], [698.0, 9866.0], [697.0, 9274.0], [696.0, 9357.0], [687.0, 9613.0], [673.0, 9804.0], [672.0, 9815.0], [675.0, 9890.0], [674.0, 10061.0], [677.0, 9744.0], [676.0, 9438.0], [679.0, 9742.0], [678.0, 9463.0], [686.0, 9777.0], [685.0, 9894.0], [684.0, 9815.5], [682.0, 9486.0], [681.0, 9410.0], [680.0, 9539.0], [695.0, 9810.0], [694.0, 9591.0], [732.0, 9429.0], [735.0, 9096.0], [721.0, 9478.0], [720.0, 9589.0], [723.0, 9647.0], [722.0, 9579.0], [725.0, 9496.0], [724.0, 9329.0], [734.0, 9381.0], [733.0, 9542.0], [731.0, 9524.0], [730.0, 9640.0], [729.0, 9509.0], [728.0, 9645.0], [719.0, 9550.0], [705.0, 9384.0], [704.0, 9735.0], [707.0, 9387.0], [706.0, 9823.0], [709.0, 9630.0], [708.0, 9668.0], [711.0, 9617.0], [710.0, 9512.0], [718.0, 9197.0], [717.0, 9284.0], [716.0, 9531.0], [715.0, 9730.0], [714.0, 9561.0], [713.0, 9426.0], [712.0, 9536.0], [727.0, 9305.0], [726.0, 9480.0], [765.0, 4683.0], [764.0, 4798.0], [767.0, 4734.0], [766.0, 8797.0], [763.0, 8976.0], [762.0, 8892.0], [761.0, 9129.0], [760.0, 9288.0], [743.0, 9390.0], [741.0, 9673.0], [740.0, 9528.0], [739.0, 9497.0], [738.0, 9032.0], [737.0, 9460.0], [736.0, 9646.0], [751.0, 9218.0], [750.0, 9644.0], [749.0, 9488.0], [748.0, 9212.0], [747.0, 9151.0], [746.0, 9397.0], [745.0, 9212.0], [744.0, 9698.0], [759.0, 9070.0], [758.0, 9189.0], [757.0, 9655.0], [756.0, 9296.0], [755.0, 9366.0], [754.0, 9473.0], [753.0, 9543.0], [752.0, 9772.0], [795.0, 2049.0], [769.0, 4539.0], [780.0, 4144.5], [779.0, 7549.0], [778.0, 7616.0], [777.0, 8122.0], [776.0, 8007.0], [781.0, 3563.0], [783.0, 3244.0], [768.0, 8712.0], [782.0, 3390.0], [798.0, 2027.0], [785.0, 2501.0], [784.0, 2832.0], [787.0, 2167.0], [786.0, 2456.0], [789.0, 2102.0], [788.0, 2199.0], [791.0, 2099.0], [790.0, 2139.0], [797.0, 2114.0], [796.0, 2235.0], [794.0, 2168.0], [793.0, 1986.0], [792.0, 2166.0], [775.0, 8066.0], [774.0, 8225.0], [773.0, 8307.0], [772.0, 8287.0], [771.0, 8330.0], [770.0, 8399.0], [806.0, 2030.0], [828.0, 2001.5], [801.0, 1514.0], [800.0, 1649.3333333333333], [815.0, 1971.0], [814.0, 1992.0], [813.0, 2093.6666666666665], [810.0, 2060.0], [809.0, 2001.0], [808.0, 2032.0], [807.0, 1368.5], [805.0, 2047.0], [804.0, 2025.0], [803.0, 2230.0], [802.0, 2109.0], [830.0, 715.0], [831.0, 2032.5], [817.0, 1997.5], [820.0, 2089.5], [818.0, 2051.0], [823.0, 2123.0], [821.0, 1984.0], [829.0, 2136.0], [826.0, 1985.0], [824.0, 2100.0], [858.0, 1813.0], [862.0, 1813.0], [846.0, 1451.0], [845.0, 1926.0], [844.0, 1949.0], [843.0, 1880.0], [842.0, 2036.0], [840.0, 2085.0], [847.0, 2180.0], [832.0, 1975.0], [834.0, 1980.0], [833.0, 1961.0], [836.0, 2013.0], [835.0, 2070.0], [839.0, 2013.0], [838.0, 2035.5], [857.0, 1909.0], [856.0, 1872.0], [851.0, 1156.6666666666667], [853.0, 1848.0], [852.0, 1964.0], [855.0, 1857.0], [854.0, 2010.0], [850.0, 1390.0], [863.0, 1816.0], [849.0, 1899.0], [848.0, 1948.0], [861.0, 1833.0], [860.0, 1895.0], [859.0, 1844.0], [892.0, 1594.0], [869.0, 766.0], [868.0, 1745.0], [867.0, 1686.0], [866.0, 1747.0], [865.0, 1839.0], [864.0, 1802.0], [871.0, 1843.0], [870.0, 1784.0], [879.0, 1679.0], [878.0, 1672.0], [877.0, 1778.0], [876.0, 1782.0], [875.0, 1800.0], [874.0, 1816.0], [873.0, 1716.0], [872.0, 1839.0], [895.0, 1488.0], [881.0, 1728.0], [880.0, 1706.0], [883.0, 1710.0], [882.0, 1574.0], [885.0, 1644.0], [884.0, 1716.0], [887.0, 1577.0], [886.0, 1678.0], [894.0, 1482.0], [893.0, 1473.0], [891.0, 1609.0], [890.0, 1621.0], [889.0, 1617.0], [888.0, 1633.0], [924.0, 1209.0], [907.0, 1046.0], [906.0, 1295.0], [905.0, 1318.0], [904.0, 1350.0], [908.0, 1276.0], [910.0, 1278.0], [909.0, 1219.0], [921.0, 992.0], [927.0, 1089.0], [912.0, 1200.0], [914.0, 1209.0], [913.0, 1235.0], [916.0, 1236.0], [915.0, 1223.0], [919.0, 1160.0], [918.0, 1189.0], [926.0, 1145.0], [925.0, 1220.0], [923.0, 1235.0], [922.0, 1192.0], [920.0, 1215.0], [903.0, 1320.0], [902.0, 1398.5], [900.0, 1370.0], [899.0, 1375.0], [898.0, 1357.0], [897.0, 1406.0], [896.0, 1421.0], [911.0, 1306.0], [933.0, 990.0], [945.0, 820.0], [948.0, 863.0], [947.0, 824.0], [946.0, 828.0], [944.0, 818.0], [935.0, 941.0], [934.0, 996.0], [932.0, 1075.0], [931.0, 1003.0], [930.0, 1048.0], [929.0, 1132.0], [928.0, 1096.0], [943.0, 884.0], [942.0, 881.0], [941.0, 866.0], [940.0, 898.0], [939.0, 883.0], [938.0, 906.0], [937.0, 901.0], [936.0, 922.0], [1.0, 13082.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[474.6270000000005, 8328.431999999997]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 4438.0], [3.0, 4440.0], [4.0, 4433.0], [5.0, 4434.0], [6.0, 4430.0], [7.0, 4415.0], [9.0, 4413.5], [10.0, 4407.0], [11.0, 4405.0], [12.0, 4386.0], [13.0, 4385.0], [14.0, 4380.0], [15.0, 4389.0], [16.0, 4374.0], [17.0, 4388.0], [18.0, 4376.0], [20.0, 4383.0], [21.0, 4380.0], [22.0, 4373.0], [23.0, 4364.0], [24.0, 4360.0], [25.0, 4352.0], [26.0, 4340.0], [27.0, 4343.0], [28.0, 18.0], [29.0, 4344.0], [30.0, 4339.0], [31.0, 4336.0], [33.0, 4335.0], [32.0, 4334.0], [34.0, 4332.0], [37.0, 4336.0], [36.0, 4336.0], [39.0, 4327.0], [38.0, 4320.0], [41.0, 4312.0], [40.0, 4313.0], [43.0, 2165.0], [42.0, 4313.0], [45.0, 4300.0], [44.0, 4301.0], [47.0, 4298.0], [46.0, 4288.0], [49.0, 4291.0], [48.0, 4296.0], [51.0, 4292.0], [50.0, 4280.0], [53.0, 4265.0], [52.0, 4282.0], [55.0, 4244.0], [54.0, 4262.0], [57.0, 4238.0], [56.0, 4239.0], [59.0, 4237.0], [58.0, 4238.0], [61.0, 4247.0], [60.0, 4232.0], [63.0, 2133.5], [62.0, 4232.0], [67.0, 4203.0], [66.0, 4225.0], [65.0, 4227.0], [64.0, 4228.0], [71.0, 4201.0], [70.0, 4191.0], [69.0, 4188.0], [68.0, 4197.0], [75.0, 4182.0], [74.0, 4182.0], [73.0, 4192.0], [72.0, 4194.0], [79.0, 4173.0], [78.0, 4165.0], [77.0, 4180.0], [76.0, 4166.0], [83.0, 4165.0], [82.0, 4176.0], [81.0, 4175.0], [80.0, 4166.0], [87.0, 2103.5], [86.0, 4162.0], [85.0, 4162.5], [91.0, 4150.0], [90.0, 4161.0], [89.0, 4167.5], [94.0, 4146.0], [93.0, 4137.0], [92.0, 4145.0], [99.0, 4114.0], [98.0, 4121.0], [97.0, 4137.0], [96.0, 4147.0], [102.0, 4090.0], [101.0, 4113.0], [100.0, 4106.0], [107.0, 4085.0], [106.0, 4088.0], [105.0, 4094.0], [104.0, 4096.5], [111.0, 4065.0], [110.0, 4092.0], [109.0, 4082.0], [112.0, 2070.5], [115.0, 4044.0], [114.0, 4061.0], [113.0, 4069.0], [119.0, 4022.0], [118.0, 4034.0], [117.0, 4041.0], [116.0, 4041.0], [122.0, 2038.5], [123.0, 4009.0], [121.0, 4006.0], [127.0, 3995.0], [126.0, 3994.0], [125.0, 4002.0], [124.0, 4003.0], [135.0, 3969.0], [134.0, 3961.0], [133.0, 3984.0], [132.0, 3981.0], [131.0, 3985.5], [129.0, 3995.0], [128.0, 3998.0], [139.0, 2016.0], [143.0, 3930.0], [142.0, 3952.0], [141.0, 3959.0], [140.0, 3955.0], [138.0, 3957.0], [136.0, 3957.0], [151.0, 3908.0], [150.0, 3896.0], [149.0, 3914.0], [148.0, 3908.0], [147.0, 3898.0], [146.0, 3920.0], [145.0, 3928.0], [159.0, 3825.0], [158.0, 3837.0], [157.0, 3841.0], [156.0, 3849.0], [155.0, 3867.0], [154.0, 3877.0], [152.0, 3890.0], [163.0, 1951.5], [166.0, 3780.0], [165.0, 3787.0], [164.0, 3802.0], [162.0, 3811.0], [161.0, 3823.0], [168.0, 98.0], [175.0, 3763.0], [174.0, 3781.0], [173.0, 3775.0], [172.0, 3777.0], [171.0, 3769.0], [170.0, 3775.0], [169.0, 3782.0], [181.0, 108.0], [183.0, 1922.5], [182.0, 3739.5], [180.0, 3736.0], [179.0, 3744.0], [178.0, 3753.0], [177.0, 3756.0], [176.0, 3761.0], [189.0, 2493.3333333333335], [191.0, 3673.0], [187.0, 3688.0], [186.0, 3701.0], [185.0, 3703.0], [184.0, 3728.0], [196.0, 1888.5], [199.0, 3644.0], [198.0, 3664.0], [197.0, 3653.0], [195.0, 3666.0], [193.0, 3660.0], [192.0, 3674.0], [207.0, 3622.0], [206.0, 3616.0], [203.0, 3647.0], [202.0, 3633.0], [201.0, 3635.0], [200.0, 3643.0], [214.0, 3596.0], [213.0, 3596.0], [212.0, 3592.0], [211.0, 3612.0], [210.0, 3613.0], [209.0, 3623.0], [208.0, 3617.0], [222.0, 3561.0], [221.0, 3574.0], [220.0, 3577.0], [218.0, 3572.0], [217.0, 3579.0], [216.0, 3596.0], [231.0, 1835.5], [230.0, 3520.0], [229.0, 3522.0], [228.0, 3547.0], [227.0, 3551.0], [226.0, 3541.0], [225.0, 3543.0], [224.0, 3551.5], [234.0, 1840.0], [239.0, 3496.0], [237.0, 3512.0], [236.0, 3509.0], [233.0, 3516.0], [232.0, 3520.0], [243.0, 1824.5], [247.0, 3453.5], [245.0, 3459.0], [244.0, 3471.0], [242.0, 3494.0], [241.0, 3493.0], [251.0, 1815.0], [250.0, 1823.5], [252.0, 1810.5], [254.0, 1817.0], [255.0, 3394.0], [253.0, 3405.0], [249.0, 3446.0], [248.0, 3451.0], [258.0, 1819.0], [261.0, 1837.5], [260.0, 1282.6666666666667], [262.0, 1294.0], [259.0, 1811.0], [269.0, 3392.0], [268.0, 3399.0], [266.0, 1811.5], [267.0, 3382.0], [265.0, 1279.6666666666667], [263.0, 1810.0], [257.0, 3400.5], [271.0, 1806.0], [264.0, 3380.0], [270.0, 3380.0], [286.0, 3321.0], [273.0, 1815.5], [276.0, 248.0], [279.0, 3338.5], [272.0, 3361.0], [277.0, 3342.5], [282.0, 1789.5], [281.0, 1802.5], [287.0, 1795.0], [280.0, 3336.0], [285.0, 3317.0], [284.0, 3334.0], [275.0, 3356.0], [274.0, 3345.0], [283.0, 3331.0], [303.0, 3258.0], [288.0, 1791.0], [295.0, 3282.0], [294.0, 3279.0], [293.0, 3289.0], [292.0, 3308.0], [298.0, 277.5], [302.0, 3257.0], [301.0, 3266.0], [300.0, 3263.0], [291.0, 3303.0], [290.0, 3304.0], [289.0, 3328.0], [299.0, 3272.0], [297.0, 3270.0], [296.0, 3275.0], [318.0, 3177.0], [306.0, 1274.6666666666665], [307.0, 3214.0], [305.0, 1764.5], [304.0, 1766.5], [311.0, 3200.0], [310.0, 3198.0], [309.0, 3210.0], [314.0, 1746.0], [315.0, 3194.0], [313.0, 1265.3333333333335], [319.0, 3165.0], [312.0, 3197.0], [317.0, 3168.0], [316.0, 3185.0], [334.0, 3125.0], [327.0, 1728.0], [321.0, 3159.0], [320.0, 3162.0], [326.0, 1260.3333333333335], [325.0, 1266.3333333333335], [324.0, 3153.0], [335.0, 3127.0], [333.0, 3119.0], [323.0, 3152.5], [331.0, 3124.0], [330.0, 3119.0], [329.0, 3134.0], [328.0, 3135.0], [349.0, 3043.0], [337.0, 1713.0], [341.0, 1248.6666666666665], [340.0, 3083.0], [342.0, 3071.0], [336.0, 3125.0], [351.0, 3035.5], [348.0, 3042.0], [339.0, 3084.0], [338.0, 3084.0], [347.0, 3058.0], [346.0, 3059.0], [345.0, 3061.0], [344.0, 3055.0], [366.0, 2972.0], [367.0, 2963.0], [365.0, 2971.0], [364.0, 2968.0], [363.0, 2970.0], [362.0, 2973.0], [361.0, 2985.0], [360.0, 2987.0], [359.0, 2993.0], [353.0, 3022.0], [355.0, 3007.0], [354.0, 3024.0], [358.0, 3004.0], [357.0, 3003.0], [356.0, 3001.0], [382.0, 2910.0], [374.0, 1637.0], [373.0, 1638.0], [372.0, 2933.0], [383.0, 2906.0], [381.0, 2909.0], [380.0, 2908.0], [375.0, 2927.0], [369.0, 2956.0], [368.0, 2956.0], [371.0, 2948.0], [370.0, 2963.0], [379.0, 2912.0], [378.0, 2910.0], [377.0, 2921.0], [376.0, 2925.0], [399.0, 2819.0], [395.0, 1599.0], [398.0, 2824.0], [397.0, 2825.0], [396.0, 2839.0], [387.0, 2882.0], [386.0, 2900.6666666666665], [394.0, 2848.0], [393.0, 2854.0], [392.0, 2864.0], [391.0, 2868.0], [390.0, 2867.0], [389.0, 2868.0], [388.0, 2871.0], [414.0, 2735.0], [415.0, 2726.0], [413.0, 2745.0], [403.0, 2798.0], [402.0, 2806.0], [401.0, 2812.0], [400.0, 2818.0], [411.0, 2770.0], [410.0, 2770.0], [409.0, 2773.0], [408.0, 2776.0], [407.0, 2781.0], [406.0, 2775.0], [405.0, 2782.0], [404.0, 2797.0], [430.0, 2660.0], [431.0, 2664.0], [429.0, 2671.0], [428.0, 2662.0], [427.0, 2663.0], [426.0, 2665.0], [425.0, 2684.0], [424.0, 2692.0], [422.0, 2683.0], [417.0, 2728.0], [416.0, 2731.0], [419.0, 2719.0], [418.0, 2718.0], [421.0, 2693.0], [420.0, 2709.0], [446.0, 2591.0], [447.0, 2590.0], [445.0, 2592.0], [444.0, 2605.0], [443.0, 2608.0], [442.0, 2614.0], [441.0, 2629.0], [440.0, 2620.0], [439.0, 2619.0], [432.0, 2656.0], [435.0, 2628.0], [434.0, 2639.0], [438.0, 2652.0], [437.0, 2631.0], [436.0, 2632.0], [461.0, 1468.0], [452.0, 1478.0], [454.0, 2552.0], [449.0, 2570.0], [448.0, 2588.0], [453.0, 2553.0], [451.0, 932.25], [450.0, 1480.5], [458.0, 1469.0], [457.0, 2561.0], [456.0, 2555.5], [463.0, 1469.0], [462.0, 1468.0], [460.0, 2540.0], [459.0, 2538.0], [472.0, 1447.5], [475.0, 1443.5], [474.0, 1441.0], [473.0, 1439.5], [478.0, 2460.0], [477.0, 2471.0], [476.0, 2472.0], [467.0, 2505.0], [466.0, 2512.0], [465.0, 2513.0], [464.0, 2521.0], [471.0, 2473.0], [470.0, 2478.0], [469.0, 2480.0], [468.0, 2494.0], [493.0, 2394.0], [487.0, 1429.0], [480.0, 2454.0], [482.0, 2468.0], [481.0, 2454.0], [486.0, 1435.0], [485.0, 1437.0], [484.0, 1438.5], [488.0, 1429.5], [489.0, 2406.0], [491.0, 2389.0], [490.0, 2397.0], [495.0, 2374.0], [494.0, 2386.0], [492.0, 2387.0], [483.0, 2448.0], [498.0, 1403.5], [504.0, 464.0], [503.0, 1406.5], [497.0, 2365.0], [496.0, 2360.0], [502.0, 2338.0], [500.0, 2346.0], [511.0, 2324.0], [510.0, 2329.0], [509.0, 2329.0], [508.0, 2330.0], [507.0, 2339.0], [506.0, 2335.3333333333335], [536.0, 2185.5], [541.0, 1326.0], [535.0, 479.0], [543.0, 2156.0], [542.0, 2157.0], [540.0, 2167.0], [539.0, 2176.5], [537.0, 2176.0], [527.0, 2217.0], [512.0, 2322.0], [514.0, 2308.0], [513.0, 2311.0], [517.0, 2260.5], [515.0, 2292.0], [519.0, 2261.0], [518.0, 2268.0], [526.0, 2225.0], [525.0, 2228.0], [524.0, 2229.0], [523.0, 2240.0], [522.0, 2241.0], [521.0, 2250.0], [520.0, 2246.0], [534.0, 2188.0], [533.0, 2186.0], [531.0, 2210.0], [529.0, 2214.0], [528.0, 2215.0], [572.0, 2007.0], [550.0, 1303.0], [551.0, 2110.0], [559.0, 2076.0], [545.0, 2141.0], [544.0, 2143.0], [547.0, 2131.0], [546.0, 2131.0], [549.0, 2132.0], [548.0, 2131.0], [569.0, 2015.0], [568.0, 2019.0], [557.0, 1292.5], [556.0, 2094.0], [555.0, 2094.0], [554.0, 2101.0], [553.0, 2110.5], [558.0, 1290.0], [575.0, 2005.0], [561.0, 2063.0], [560.0, 2064.0], [563.0, 2044.0], [562.0, 2053.0], [565.0, 2033.0], [564.0, 2035.0], [567.0, 2021.0], [566.0, 2026.0], [574.0, 2011.0], [573.0, 2007.0], [571.0, 2010.0], [570.0, 2015.0], [602.0, 1862.0], [606.0, 1830.0], [579.0, 1239.0], [578.0, 1972.0], [577.0, 1971.0], [576.0, 1994.0], [581.0, 1954.0], [580.0, 1962.0], [583.0, 1932.0], [582.0, 1953.0], [591.0, 1908.0], [590.0, 1925.0], [589.0, 1920.0], [601.0, 1861.0], [600.0, 1862.0], [603.0, 1839.0], [588.0, 1220.5], [587.0, 1220.5], [586.0, 1923.0], [585.0, 1928.0], [584.0, 1929.0], [593.0, 983.6666666666667], [597.0, 532.0], [596.0, 1895.5], [594.0, 1891.0], [599.0, 1872.0], [598.0, 1878.5], [607.0, 1842.0], [592.0, 1903.0], [605.0, 1847.0], [604.0, 1838.0], [635.0, 1700.0], [639.0, 1127.5], [616.0, 1165.0], [618.0, 1792.0], [617.0, 1792.0], [620.0, 1787.0], [619.0, 1782.0], [622.0, 1775.0], [621.0, 1772.0], [623.0, 954.0], [628.0, 1145.0], [627.0, 1151.0], [626.0, 1753.0], [625.0, 1760.0], [624.0, 1763.0], [630.0, 1149.5], [629.0, 1742.0], [631.0, 1737.0], [637.0, 943.0], [638.0, 1686.0], [636.0, 1692.0], [634.0, 1713.0], [633.0, 1726.0], [632.0, 1728.0], [615.0, 1797.0], [613.0, 1819.0], [612.0, 1812.5], [610.0, 1821.0], [608.0, 1828.0], [668.0, 1547.0], [665.0, 1084.5], [671.0, 1555.0], [657.0, 1617.0], [656.0, 1624.0], [659.0, 1597.0], [658.0, 1611.0], [661.0, 1589.0], [660.0, 1593.0], [670.0, 1555.0], [669.0, 1554.0], [667.0, 1571.0], [666.0, 1587.0], [664.0, 1593.0], [655.0, 1624.0], [641.0, 1667.0], [640.0, 1672.0], [643.0, 1663.0], [642.0, 1671.0], [645.0, 1640.0], [644.0, 1655.0], [647.0, 1632.0], [646.0, 1637.0], [654.0, 1624.5], [652.0, 1615.0], [651.0, 1616.0], [650.0, 1626.0], [649.0, 1617.0], [648.0, 1623.0], [663.0, 1598.0], [662.0, 1588.0], [698.0, 1467.0], [688.0, 905.6666666666667], [674.0, 1080.0], [675.0, 1543.0], [677.0, 1535.0], [676.0, 1524.0], [697.0, 1465.0], [678.0, 1525.0], [699.0, 1461.0], [673.0, 1079.0], [672.0, 1079.0], [687.0, 1513.0], [686.0, 1505.0], [685.0, 1517.0], [683.0, 1519.0], [681.0, 1523.0], [680.0, 1530.5], [689.0, 1045.5], [691.0, 836.75], [693.0, 1459.0], [692.0, 1460.0], [690.0, 794.2], [695.0, 1055.5], [694.0, 1464.0], [703.0, 1458.0], [701.0, 1468.0], [732.0, 1287.0], [717.0, 1011.5], [716.0, 1373.0], [715.0, 1381.0], [714.0, 1383.0], [713.0, 1384.0], [719.0, 1371.5], [705.0, 1442.0], [704.0, 1448.0], [707.0, 1425.0], [706.0, 1432.0], [709.0, 1405.0], [708.0, 1413.0], [711.0, 1387.0], [710.0, 1392.0], [729.0, 978.5], [728.0, 988.0], [734.0, 873.0], [735.0, 1346.0], [721.0, 1370.0], [720.0, 1373.0], [723.0, 1345.0], [722.0, 1359.0], [725.0, 1346.0], [724.0, 1345.0], [727.0, 1344.0], [726.0, 1343.0], [733.0, 1301.0], [731.0, 1290.0], [730.0, 1305.0], [761.0, 1217.5], [766.0, 865.6666666666666], [764.0, 944.0], [763.0, 1036.6666666666667], [767.0, 947.0], [753.0, 1248.0], [752.0, 1258.0], [755.0, 1244.0], [754.0, 1253.0], [765.0, 1200.0], [751.0, 1261.0], [737.0, 1283.0], [736.0, 1328.0], [739.0, 1325.0], [738.0, 1327.0], [741.0, 1309.0], [740.0, 1322.0], [743.0, 1304.0], [742.0, 1301.0], [750.0, 1268.0], [749.0, 1263.0], [748.0, 1269.0], [747.0, 1291.0], [746.0, 1287.5], [744.0, 1303.0], [759.0, 1225.0], [758.0, 1237.0], [757.0, 1223.0], [756.0, 1230.0], [797.0, 1039.5], [768.0, 945.0], [769.0, 1188.0], [771.0, 1145.0], [770.0, 1167.0], [773.0, 927.5], [774.0, 923.5], [792.0, 1056.0], [775.0, 1136.0], [776.0, 851.3333333333334], [777.0, 1127.0], [779.0, 1123.0], [778.0, 1128.0], [781.0, 1121.0], [780.0, 1121.0], [783.0, 1099.5], [787.0, 716.0], [786.0, 1074.0], [785.0, 1090.0], [784.0, 1087.0], [789.0, 1062.0], [788.0, 1073.5], [791.0, 1052.0], [790.0, 1052.0], [799.0, 1022.0], [798.0, 1042.0], [795.0, 1042.5], [793.0, 1043.0], [828.0, 816.3333333333334], [802.0, 808.25], [801.0, 882.0], [803.0, 873.5], [805.0, 999.0], [804.0, 1004.0], [824.0, 924.0], [806.0, 1000.0], [827.0, 921.0], [825.0, 923.0], [813.0, 866.5], [812.0, 973.0], [811.0, 979.0], [810.0, 977.0], [808.0, 984.5], [814.0, 964.0], [815.0, 967.0], [820.0, 848.5], [821.0, 850.0], [823.0, 927.0], [822.0, 931.0], [829.0, 818.6666666666666], [831.0, 893.0], [817.0, 961.0], [816.0, 962.0], [819.0, 944.0], [818.0, 954.0], [830.0, 905.0], [838.0, 820.5], [836.0, 823.5], [835.0, 887.0], [834.0, 888.0], [833.0, 891.0], [832.0, 898.0], [837.0, 861.0], [852.0, 794.0], [851.0, 802.0], [850.0, 805.0], [849.0, 830.0], [848.0, 830.0], [839.0, 853.0], [847.0, 831.0], [846.0, 832.0], [845.0, 839.0], [844.0, 849.0], [843.0, 846.0], [842.0, 847.0], [841.0, 851.0], [840.0, 849.0], [1.0, 4440.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[437.23199999999997, 2335.261000000001]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 10382.0], [3.0, 10232.0], [4.0, 10304.0], [6.0, 10257.0], [7.0, 9890.0], [8.0, 9989.0], [9.0, 9732.0], [10.0, 10384.0], [11.0, 9549.0], [12.0, 9903.0], [13.0, 9601.0], [14.0, 9669.0], [15.0, 9645.0], [17.0, 9163.0], [18.0, 9337.5], [20.0, 9315.0], [21.0, 10081.0], [23.0, 9438.5], [26.0, 9374.5], [27.0, 9340.0], [28.0, 9396.5], [30.0, 9580.0], [31.0, 9484.0], [33.0, 9607.333333333334], [35.0, 9211.0], [34.0, 9782.0], [37.0, 9621.5], [39.0, 9471.0], [38.0, 9444.0], [43.0, 9490.25], [44.0, 9634.0], [46.0, 9669.0], [49.0, 9484.666666666666], [51.0, 9566.0], [53.0, 9278.0], [52.0, 9642.0], [55.0, 9639.0], [54.0, 9573.0], [56.0, 9339.0], [59.0, 9409.0], [58.0, 9756.0], [62.0, 9396.666666666666], [67.0, 9557.0], [65.0, 9431.5], [64.0, 9857.0], [71.0, 9482.0], [69.0, 9369.0], [74.0, 9307.0], [72.0, 9258.0], [79.0, 9450.0], [78.0, 9253.0], [76.0, 9320.25], [82.0, 9815.0], [81.0, 9933.0], [80.0, 9551.0], [87.0, 9433.0], [84.0, 9070.5], [91.0, 9294.0], [89.0, 9318.0], [88.0, 9568.0], [94.0, 9700.0], [93.0, 9861.5], [98.0, 10038.0], [97.0, 9269.0], [96.0, 9274.5], [102.0, 9200.0], [101.0, 9207.0], [100.0, 9607.0], [107.0, 10035.0], [106.0, 9434.0], [104.0, 9558.0], [111.0, 9247.0], [110.0, 9711.0], [109.0, 9412.0], [108.0, 9307.0], [115.0, 9083.0], [114.0, 9017.0], [113.0, 9581.0], [112.0, 10032.0], [118.0, 9083.0], [117.0, 9071.5], [123.0, 9753.5], [120.0, 9237.0], [126.0, 9573.0], [125.0, 9268.0], [134.0, 9107.0], [132.0, 9258.0], [131.0, 9438.0], [130.0, 9542.0], [129.0, 9337.0], [128.0, 9286.0], [142.0, 9558.0], [141.0, 9244.0], [140.0, 9185.0], [139.0, 10005.0], [138.0, 9629.0], [136.0, 9308.5], [151.0, 9346.75], [150.0, 9577.0], [149.0, 9757.0], [145.0, 9480.666666666666], [159.0, 9180.5], [157.0, 9634.666666666666], [154.0, 9501.0], [153.0, 9003.0], [152.0, 9439.0], [165.0, 9536.5], [164.0, 9280.5], [162.0, 9007.5], [175.0, 9324.5], [173.0, 9143.666666666666], [170.0, 9179.0], [169.0, 9080.0], [168.0, 9557.666666666666], [183.0, 9239.5], [181.0, 9313.0], [179.0, 9779.0], [177.0, 9168.5], [191.0, 9159.5], [189.0, 9477.0], [188.0, 9355.0], [187.0, 8981.0], [186.0, 9987.0], [185.0, 9212.0], [184.0, 8983.0], [198.0, 9926.0], [197.0, 9195.0], [196.0, 9467.5], [194.0, 8982.0], [193.0, 9540.0], [192.0, 9074.0], [207.0, 9706.333333333334], [204.0, 9152.0], [202.0, 9606.0], [201.0, 9235.0], [215.0, 9419.0], [213.0, 9892.5], [211.0, 9385.0], [209.0, 9365.0], [208.0, 9146.0], [222.0, 9460.0], [221.0, 9437.0], [220.0, 9235.0], [218.0, 9149.5], [216.0, 9304.0], [230.0, 9198.0], [228.0, 9870.0], [227.0, 9355.0], [226.0, 9583.0], [239.0, 159.0], [237.0, 9086.0], [236.0, 9251.0], [235.0, 9610.5], [233.0, 9479.0], [232.0, 9678.0], [247.0, 9092.0], [246.0, 9706.5], [244.0, 9612.0], [243.0, 9631.0], [242.0, 9167.0], [241.0, 9350.0], [240.0, 9476.333333333334], [255.0, 9012.0], [254.0, 9529.0], [253.0, 8988.0], [252.0, 9468.0], [251.0, 9518.0], [250.0, 9354.0], [249.0, 9089.0], [269.0, 9236.0], [256.0, 3232.3333333333335], [258.0, 9590.0], [257.0, 9142.0], [263.0, 9048.0], [260.0, 9408.0], [259.0, 4684.5], [271.0, 9391.0], [268.0, 9261.0], [267.0, 9044.0], [266.0, 9686.0], [265.0, 9670.0], [264.0, 9003.0], [285.0, 9387.0], [287.0, 9262.5], [284.0, 9087.5], [275.0, 9873.0], [274.0, 9668.0], [273.0, 9095.0], [282.0, 9306.0], [281.0, 9284.0], [280.0, 9087.0], [279.0, 9178.0], [278.0, 9521.0], [277.0, 9474.0], [276.0, 9465.0], [302.0, 9212.0], [303.0, 8852.0], [301.0, 9372.0], [300.0, 9051.0], [298.0, 9561.0], [297.0, 9179.0], [296.0, 9511.0], [295.0, 9059.0], [288.0, 8934.0], [291.0, 9280.0], [290.0, 9555.0], [294.0, 9396.0], [293.0, 9871.0], [292.0, 9386.0], [307.0, 9261.0], [318.0, 9311.0], [319.0, 9419.0], [317.0, 9695.5], [315.0, 9219.0], [312.0, 9872.5], [310.0, 9350.5], [308.0, 9252.0], [306.0, 9499.0], [305.0, 9211.0], [304.0, 8889.0], [334.0, 9476.0], [335.0, 8990.0], [332.0, 9597.0], [331.0, 9587.0], [330.0, 9310.0], [329.0, 9145.666666666666], [326.0, 9105.0], [325.0, 9022.0], [323.0, 9458.0], [321.0, 8967.5], [350.0, 8874.0], [351.0, 8957.0], [349.0, 8818.0], [348.0, 9005.0], [347.0, 9042.0], [346.0, 9143.0], [345.0, 9500.0], [344.0, 9303.0], [343.0, 9201.0], [337.0, 8933.0], [336.0, 9138.0], [339.0, 9813.0], [338.0, 9425.0], [342.0, 8902.0], [341.0, 9482.0], [340.0, 8999.0], [366.0, 9291.0], [367.0, 9208.0], [365.0, 8839.5], [353.0, 9064.0], [352.0, 9784.0], [363.0, 8930.0], [362.0, 9214.0], [360.0, 9243.5], [358.0, 9806.0], [357.0, 9074.0], [356.0, 9522.666666666666], [383.0, 9215.0], [377.0, 4792.0], [382.0, 9272.0], [381.0, 8842.0], [380.0, 8986.0], [371.0, 9321.0], [370.0, 9362.0], [369.0, 9122.0], [368.0, 8776.0], [379.0, 9113.0], [378.0, 9006.0], [376.0, 9062.0], [374.0, 9150.0], [373.0, 9274.0], [372.0, 9721.0], [387.0, 8891.0], [399.0, 9131.5], [397.0, 9179.5], [395.0, 8977.0], [394.0, 8823.0], [393.0, 9563.0], [391.0, 9578.0], [390.0, 9140.0], [389.0, 9283.5], [386.0, 9604.0], [385.0, 9189.0], [384.0, 9207.0], [413.0, 9758.0], [415.0, 9074.5], [412.0, 8970.0], [403.0, 8822.0], [402.0, 9072.0], [401.0, 9270.5], [411.0, 9026.5], [409.0, 9764.0], [408.0, 9269.0], [407.0, 8741.0], [406.0, 9360.0], [405.0, 9737.0], [404.0, 9238.0], [418.0, 8789.0], [430.0, 9336.0], [429.0, 8966.333333333334], [417.0, 9334.0], [416.0, 8704.0], [426.0, 9265.0], [425.0, 8876.0], [424.0, 9090.0], [423.0, 9051.0], [422.0, 8880.0], [421.0, 8874.0], [420.0, 9244.0], [445.0, 9016.0], [447.0, 8740.0], [444.0, 8890.0], [435.0, 8903.0], [434.0, 9367.0], [433.0, 8994.666666666666], [443.0, 9032.0], [442.0, 9181.0], [441.0, 9153.0], [440.0, 8816.0], [439.0, 9653.0], [438.0, 9256.333333333334], [451.0, 9394.0], [461.0, 9361.0], [463.0, 8881.0], [460.0, 8928.0], [450.0, 8749.0], [449.0, 8743.0], [448.0, 9001.5], [459.0, 8974.0], [456.0, 9648.0], [455.0, 8785.0], [454.0, 9654.0], [453.0, 8865.0], [452.0, 8788.0], [478.0, 9605.0], [479.0, 8670.0], [477.0, 8841.0], [476.0, 8658.0], [475.0, 8974.0], [474.0, 8629.0], [473.0, 9299.0], [472.0, 9132.0], [471.0, 9008.0], [464.0, 9096.0], [467.0, 9131.5], [465.0, 9609.0], [470.0, 9034.0], [468.0, 9170.0], [494.0, 8746.0], [495.0, 9100.0], [493.0, 9164.5], [483.0, 9392.5], [481.0, 9185.0], [480.0, 9143.0], [491.0, 9345.0], [490.0, 8937.0], [489.0, 9104.5], [488.0, 9153.5], [485.0, 8736.0], [484.0, 8596.0], [499.0, 9554.0], [511.0, 9452.666666666666], [508.0, 9035.666666666666], [505.0, 8586.0], [504.0, 8676.0], [503.0, 9517.0], [502.0, 9237.0], [501.0, 9544.0], [500.0, 9436.0], [498.0, 9102.0], [497.0, 8889.0], [496.0, 8911.0], [538.0, 8498.0], [530.0, 8739.0], [541.0, 8858.0], [542.0, 9055.0], [529.0, 9190.0], [528.0, 9508.0], [540.0, 9146.0], [536.0, 9120.0], [519.0, 8631.0], [518.0, 8575.5], [516.0, 8731.0], [515.0, 9180.0], [514.0, 8536.0], [513.0, 9028.5], [527.0, 8854.0], [526.0, 8840.0], [525.0, 8822.0], [524.0, 8992.0], [523.0, 9481.0], [522.0, 9110.0], [521.0, 9225.0], [520.0, 9155.0], [533.0, 9040.0], [532.0, 8973.0], [531.0, 9325.0], [568.0, 8966.0], [574.0, 8629.0], [575.0, 8743.0], [560.0, 8815.0], [562.0, 8915.0], [561.0, 8598.0], [573.0, 8664.5], [571.0, 8742.0], [570.0, 8854.0], [559.0, 9033.0], [546.0, 9276.0], [545.0, 9214.333333333334], [548.0, 8590.0], [547.0, 8592.0], [551.0, 8921.0], [550.0, 9027.0], [558.0, 9427.0], [557.0, 8846.0], [556.0, 8466.0], [555.0, 9442.0], [554.0, 8851.0], [553.0, 9445.0], [552.0, 8926.0], [566.0, 8863.0], [565.0, 8700.0], [564.0, 8943.0], [563.0, 9387.0], [604.0, 9318.0], [607.0, 9020.0], [592.0, 8811.5], [594.0, 8931.0], [593.0, 8845.0], [596.0, 8912.0], [595.0, 8823.0], [606.0, 8669.0], [605.0, 9207.0], [603.0, 8467.0], [602.0, 8854.0], [601.0, 8384.0], [600.0, 8764.0], [590.0, 8916.0], [576.0, 9352.0], [578.0, 8573.0], [577.0, 8409.0], [581.0, 9021.0], [580.0, 8872.0], [583.0, 8571.0], [582.0, 8747.0], [589.0, 8467.0], [588.0, 8877.0], [587.0, 8943.0], [585.0, 8753.0], [599.0, 8871.0], [597.0, 8633.0], [632.0, 9024.0], [636.0, 8840.0], [639.0, 8571.0], [626.0, 9263.0], [625.0, 9022.0], [629.0, 8811.0], [628.0, 8937.5], [638.0, 8730.0], [637.0, 8524.0], [635.0, 9055.0], [634.0, 8810.0], [633.0, 8784.0], [623.0, 8927.0], [608.0, 9277.0], [611.0, 8728.0], [610.0, 8610.5], [615.0, 8699.0], [613.0, 8665.0], [622.0, 8471.0], [621.0, 8546.0], [620.0, 8342.0], [619.0, 9225.0], [618.0, 8277.0], [617.0, 8641.0], [616.0, 8593.0], [631.0, 9247.0], [630.0, 9018.0], [668.0, 8612.0], [671.0, 8129.0], [657.0, 8388.0], [656.0, 8497.5], [659.0, 8121.0], [658.0, 8673.0], [661.0, 8257.0], [660.0, 8443.0], [670.0, 8023.0], [669.0, 8546.0], [667.0, 9050.0], [666.0, 9058.0], [665.0, 8194.0], [664.0, 8482.0], [654.0, 9122.0], [640.0, 8880.0], [642.0, 8241.0], [641.0, 8231.0], [644.0, 9148.0], [643.0, 8717.0], [647.0, 8734.0], [645.0, 8958.0], [653.0, 8981.5], [651.0, 8462.0], [650.0, 8761.666666666666], [663.0, 8153.0], [662.0, 9076.0], [697.0, 8397.0], [701.0, 8582.0], [703.0, 8324.0], [689.0, 8407.0], [688.0, 8598.0], [691.0, 8541.0], [690.0, 8687.0], [693.0, 8606.0], [692.0, 8719.0], [700.0, 8377.0], [699.0, 8564.0], [698.0, 8410.0], [696.0, 8389.0], [679.0, 8759.0], [678.0, 8732.666666666666], [675.0, 8472.0], [674.0, 8309.0], [673.0, 8403.5], [687.0, 8173.5], [685.0, 8956.0], [684.0, 8022.0], [683.0, 8457.5], [682.0, 8566.0], [680.0, 8152.0], [695.0, 8903.0], [694.0, 8902.0], [732.0, 8662.0], [735.0, 8316.0], [720.0, 8037.0], [722.0, 8067.0], [721.0, 8301.0], [725.0, 8197.5], [724.0, 8514.5], [734.0, 8487.0], [733.0, 8464.0], [731.0, 8305.0], [730.0, 8205.0], [729.0, 8360.0], [728.0, 8279.0], [719.0, 8851.0], [705.0, 8603.5], [708.0, 8476.0], [707.0, 8403.0], [711.0, 8863.0], [710.0, 8412.0], [718.0, 8461.5], [716.0, 8867.0], [715.0, 8284.0], [714.0, 8669.0], [713.0, 8584.0], [712.0, 8423.0], [727.0, 8730.0], [726.0, 8706.0], [762.0, 8531.0], [766.0, 8444.0], [767.0, 4316.5], [753.0, 7672.0], [752.0, 7786.0], [755.0, 7556.0], [754.0, 8179.0], [757.0, 8007.0], [756.0, 8495.0], [765.0, 8139.0], [764.0, 7791.0], [763.0, 8095.0], [761.0, 7627.5], [743.0, 8182.0], [742.0, 8331.0], [741.0, 7831.0], [740.0, 7873.0], [739.0, 8172.0], [738.0, 8095.0], [737.0, 8637.0], [736.0, 8424.0], [751.0, 7925.0], [750.0, 8570.0], [749.0, 7970.0], [748.0, 8422.0], [747.0, 8127.0], [746.0, 7931.0], [745.0, 7982.0], [759.0, 7893.0], [758.0, 8021.0], [794.0, 7975.0], [798.0, 7881.0], [799.0, 8211.0], [785.0, 7842.0], [784.0, 7988.0], [787.0, 8332.0], [786.0, 7808.0], [789.0, 7865.0], [788.0, 8296.0], [797.0, 7424.0], [796.0, 8004.0], [795.0, 7845.0], [793.0, 7620.0], [775.0, 7996.0], [774.0, 7997.5], [772.0, 8416.0], [771.0, 8430.0], [770.0, 8430.0], [769.0, 8459.0], [768.0, 8115.0], [783.0, 7807.0], [782.0, 7951.0], [781.0, 8374.0], [780.0, 7511.0], [779.0, 8378.0], [778.0, 7391.0], [777.0, 8429.0], [776.0, 8165.0], [791.0, 7892.0], [790.0, 7854.0], [828.0, 7973.0], [831.0, 7976.0], [816.0, 7944.0], [819.0, 7768.0], [818.0, 7744.5], [821.0, 7569.0], [820.0, 7519.0], [830.0, 7944.0], [829.0, 7940.0], [827.0, 7698.0], [826.0, 8017.0], [825.0, 7567.0], [824.0, 7562.0], [815.0, 7681.0], [801.0, 8182.0], [803.0, 7464.0], [802.0, 8148.0], [805.0, 7759.0], [804.0, 7919.0], [807.0, 7804.0], [806.0, 7788.0], [814.0, 7908.0], [812.0, 8171.0], [811.0, 8133.0], [810.0, 7752.0], [809.0, 7875.0], [808.0, 8168.0], [823.0, 7609.0], [822.0, 7651.0], [857.0, 7675.0], [861.0, 7331.0], [862.0, 7704.0], [848.0, 7415.0], [851.0, 7413.0], [849.0, 7448.0], [853.0, 7489.0], [852.0, 7415.0], [860.0, 7550.0], [859.0, 7667.0], [858.0, 7487.0], [856.0, 7641.0], [838.0, 7537.0], [837.0, 7549.0], [836.0, 7749.0], [835.0, 6925.0], [834.0, 7485.0], [833.0, 7703.0], [832.0, 7509.0], [846.0, 7871.0], [845.0, 7412.0], [844.0, 7393.0], [843.0, 7392.0], [842.0, 7871.0], [841.0, 7894.0], [840.0, 7798.5], [855.0, 7268.0], [854.0, 7573.0], [893.0, 5904.0], [887.0, 3514.5], [886.0, 6233.0], [885.0, 6734.0], [884.0, 6747.0], [883.0, 6535.0], [882.0, 6515.0], [881.0, 6998.0], [880.0, 6809.0], [890.0, 3602.0], [895.0, 5537.0], [894.0, 5863.0], [892.0, 5682.0], [891.0, 5766.0], [889.0, 6448.0], [888.0, 6548.0], [871.0, 7085.0], [870.0, 7558.0], [869.0, 7432.0], [868.0, 7591.0], [867.0, 7442.0], [865.0, 7366.0], [864.0, 7301.0], [879.0, 7107.0], [878.0, 7142.0], [877.0, 6957.0], [875.0, 6763.0], [874.0, 7255.0], [873.0, 6872.0], [872.0, 7273.0], [922.0, 1823.0], [926.0, 1439.0], [927.0, 1633.0], [913.0, 2231.0], [912.0, 2694.0], [915.0, 2295.0], [914.0, 2193.0], [917.0, 2009.0], [916.0, 2284.0], [925.0, 1664.0], [924.0, 1729.0], [923.0, 1813.0], [920.0, 1861.0], [903.0, 4478.0], [902.0, 4799.0], [901.0, 4541.0], [900.0, 4774.0], [899.0, 5100.0], [898.0, 4993.0], [897.0, 5453.0], [896.0, 5500.0], [911.0, 3322.0], [910.0, 3422.0], [909.0, 4136.0], [908.0, 3890.0], [907.0, 4192.0], [906.0, 4528.0], [905.0, 4707.0], [904.0, 4706.0], [919.0, 1960.0], [918.0, 2183.0], [953.0, 1426.5], [957.0, 1485.0], [944.0, 1280.0], [945.0, 1581.0], [947.0, 1567.0], [946.0, 1467.0], [959.0, 1507.0], [958.0, 1512.0], [956.0, 1385.0], [955.0, 1591.0], [954.0, 1590.0], [943.0, 1608.0], [929.0, 1559.5], [931.0, 1560.0], [930.0, 1624.0], [935.0, 1599.0], [932.0, 1633.0], [942.0, 1616.5], [940.0, 1612.0], [939.0, 1656.0], [938.0, 1563.5], [937.0, 1623.0], [951.0, 1479.5], [949.0, 1601.5], [985.0, 1286.0], [990.0, 1294.0], [991.0, 1264.0], [977.0, 1487.0], [976.0, 1465.0], [979.0, 1447.0], [978.0, 1436.0], [989.0, 1285.0], [988.0, 1228.0], [987.0, 1262.5], [984.0, 1293.0], [967.0, 1354.0], [966.0, 1500.0], [965.0, 1467.0], [964.0, 1544.0], [963.0, 1364.0], [962.0, 1509.0], [961.0, 1525.5], [975.0, 1451.0], [974.0, 1469.0], [973.0, 1473.0], [972.0, 1477.0], [971.0, 1420.0], [970.0, 1482.0], [969.0, 1413.0], [968.0, 1489.0], [983.0, 1443.0], [982.0, 1426.0], [981.0, 1484.0], [980.0, 1444.0], [1.0, 12984.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[496.7149999999999, 8148.865000000003]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 991.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7416.666666666667, "minX": 1.67229636E12, "maxY": 1.32174911E7, "series": [{"data": [[1.67229636E12, 1.32174911E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67229636E12, 7416.666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67229636E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2335.261000000001, "minX": 1.67229636E12, "maxY": 8328.431999999997, "series": [{"data": [[1.67229636E12, 8328.431999999997]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.67229636E12, 2335.261000000001]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.67229636E12, 8148.865000000003]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67229636E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2301.3599999999997, "minX": 1.67229636E12, "maxY": 2679.7399999999984, "series": [{"data": [[1.67229636E12, 2679.7399999999984]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.67229636E12, 2301.3599999999997]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.67229636E12, 2588.9529999999972]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67229636E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 6.284999999999999, "minX": 1.67229636E12, "maxY": 24.11400000000004, "series": [{"data": [[1.67229636E12, 6.284999999999999]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.67229636E12, 6.324999999999999]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.67229636E12, 24.11400000000004]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67229636E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 18.0, "minX": 1.67229636E12, "maxY": 13203.0, "series": [{"data": [[1.67229636E12, 13203.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67229636E12, 10468.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67229636E12, 11051.869999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67229636E12, 10693.9]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.67229636E12, 18.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67229636E12, 8303.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67229636E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 167.5, "minX": 1.0, "maxY": 11683.0, "series": [{"data": [[2.0, 3372.0], [32.0, 7334.0], [38.0, 221.5], [3.0, 7610.0], [61.0, 9488.0], [4.0, 7792.5], [71.0, 1485.0], [70.0, 618.0], [68.0, 2039.5], [78.0, 1575.5], [6.0, 167.5], [7.0, 4478.0], [126.0, 7928.0], [8.0, 5046.5], [9.0, 4433.0], [11.0, 6233.0], [183.0, 1914.0], [191.0, 733.0], [12.0, 2096.0], [198.0, 3210.0], [200.0, 4082.0], [14.0, 8364.5], [248.0, 10682.5], [1.0, 11683.0], [346.0, 9395.0], [377.0, 8891.0], [448.0, 10203.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 448.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 146.5, "minX": 1.0, "maxY": 4401.0, "series": [{"data": [[2.0, 1516.0], [32.0, 1802.0], [38.0, 152.0], [3.0, 2226.0], [61.0, 2588.0], [4.0, 2186.0], [71.0, 1448.0], [70.0, 562.0], [68.0, 1959.0], [78.0, 1541.5], [6.0, 146.5], [7.0, 1606.0], [126.0, 2130.5], [8.0, 1646.5], [9.0, 4401.0], [11.0, 1684.0], [183.0, 1878.0], [191.0, 690.0], [12.0, 1599.0], [198.0, 3182.5], [200.0, 4033.0], [14.0, 2180.0], [248.0, 3151.0], [1.0, 3288.0], [346.0, 2872.0], [377.0, 2647.0], [448.0, 2976.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 448.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.67229636E12, "maxY": 50.0, "series": [{"data": [[1.67229636E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67229636E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.67229636E12, "maxY": 50.0, "series": [{"data": [[1.67229636E12, 50.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67229636E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.67229636E12, "maxY": 16.666666666666668, "series": [{"data": [[1.67229636E12, 16.666666666666668]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.67229636E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.67229636E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67229636E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.67229636E12, "maxY": 50.0, "series": [{"data": [[1.67229636E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67229636E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

