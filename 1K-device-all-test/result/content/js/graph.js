/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 19118.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 5.0], [0.9, 5.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 8.0], [6.5, 8.0], [6.6, 8.0], [6.7, 8.0], [6.8, 8.0], [6.9, 8.0], [7.0, 8.0], [7.1, 8.0], [7.2, 8.0], [7.3, 8.0], [7.4, 8.0], [7.5, 8.0], [7.6, 9.0], [7.7, 9.0], [7.8, 9.0], [7.9, 9.0], [8.0, 9.0], [8.1, 9.0], [8.2, 9.0], [8.3, 9.0], [8.4, 9.0], [8.5, 9.0], [8.6, 9.0], [8.7, 9.0], [8.8, 9.0], [8.9, 9.0], [9.0, 9.0], [9.1, 10.0], [9.2, 10.0], [9.3, 10.0], [9.4, 10.0], [9.5, 10.0], [9.6, 10.0], [9.7, 10.0], [9.8, 10.0], [9.9, 10.0], [10.0, 10.0], [10.1, 10.0], [10.2, 10.0], [10.3, 11.0], [10.4, 11.0], [10.5, 11.0], [10.6, 11.0], [10.7, 11.0], [10.8, 11.0], [10.9, 11.0], [11.0, 11.0], [11.1, 11.0], [11.2, 12.0], [11.3, 12.0], [11.4, 12.0], [11.5, 12.0], [11.6, 12.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 13.0], [12.4, 13.0], [12.5, 13.0], [12.6, 13.0], [12.7, 13.0], [12.8, 13.0], [12.9, 13.0], [13.0, 13.0], [13.1, 13.0], [13.2, 13.0], [13.3, 13.0], [13.4, 13.0], [13.5, 13.0], [13.6, 13.0], [13.7, 13.0], [13.8, 13.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 15.0], [14.9, 15.0], [15.0, 15.0], [15.1, 15.0], [15.2, 15.0], [15.3, 15.0], [15.4, 15.0], [15.5, 15.0], [15.6, 15.0], [15.7, 15.0], [15.8, 15.0], [15.9, 15.0], [16.0, 15.0], [16.1, 15.0], [16.2, 15.0], [16.3, 15.0], [16.4, 15.0], [16.5, 16.0], [16.6, 16.0], [16.7, 16.0], [16.8, 16.0], [16.9, 16.0], [17.0, 16.0], [17.1, 16.0], [17.2, 16.0], [17.3, 16.0], [17.4, 16.0], [17.5, 16.0], [17.6, 16.0], [17.7, 17.0], [17.8, 17.0], [17.9, 17.0], [18.0, 17.0], [18.1, 17.0], [18.2, 17.0], [18.3, 17.0], [18.4, 17.0], [18.5, 17.0], [18.6, 18.0], [18.7, 18.0], [18.8, 18.0], [18.9, 18.0], [19.0, 18.0], [19.1, 18.0], [19.2, 18.0], [19.3, 18.0], [19.4, 18.0], [19.5, 18.0], [19.6, 18.0], [19.7, 18.0], [19.8, 18.0], [19.9, 18.0], [20.0, 19.0], [20.1, 19.0], [20.2, 19.0], [20.3, 19.0], [20.4, 19.0], [20.5, 19.0], [20.6, 19.0], [20.7, 19.0], [20.8, 19.0], [20.9, 19.0], [21.0, 19.0], [21.1, 20.0], [21.2, 20.0], [21.3, 20.0], [21.4, 20.0], [21.5, 20.0], [21.6, 20.0], [21.7, 20.0], [21.8, 20.0], [21.9, 20.0], [22.0, 20.0], [22.1, 20.0], [22.2, 20.0], [22.3, 21.0], [22.4, 21.0], [22.5, 21.0], [22.6, 21.0], [22.7, 21.0], [22.8, 21.0], [22.9, 21.0], [23.0, 21.0], [23.1, 21.0], [23.2, 21.0], [23.3, 21.0], [23.4, 21.0], [23.5, 21.0], [23.6, 21.0], [23.7, 21.0], [23.8, 22.0], [23.9, 22.0], [24.0, 22.0], [24.1, 22.0], [24.2, 22.0], [24.3, 22.0], [24.4, 22.0], [24.5, 22.0], [24.6, 22.0], [24.7, 22.0], [24.8, 22.0], [24.9, 22.0], [25.0, 23.0], [25.1, 23.0], [25.2, 23.0], [25.3, 23.0], [25.4, 23.0], [25.5, 23.0], [25.6, 23.0], [25.7, 23.0], [25.8, 23.0], [25.9, 23.0], [26.0, 23.0], [26.1, 23.0], [26.2, 23.0], [26.3, 23.0], [26.4, 23.0], [26.5, 24.0], [26.6, 24.0], [26.7, 24.0], [26.8, 24.0], [26.9, 24.0], [27.0, 24.0], [27.1, 24.0], [27.2, 24.0], [27.3, 24.0], [27.4, 24.0], [27.5, 25.0], [27.6, 25.0], [27.7, 25.0], [27.8, 25.0], [27.9, 25.0], [28.0, 25.0], [28.1, 25.0], [28.2, 25.0], [28.3, 25.0], [28.4, 26.0], [28.5, 26.0], [28.6, 26.0], [28.7, 26.0], [28.8, 26.0], [28.9, 26.0], [29.0, 26.0], [29.1, 26.0], [29.2, 26.0], [29.3, 26.0], [29.4, 26.0], [29.5, 26.0], [29.6, 27.0], [29.7, 27.0], [29.8, 27.0], [29.9, 27.0], [30.0, 27.0], [30.1, 27.0], [30.2, 27.0], [30.3, 27.0], [30.4, 27.0], [30.5, 27.0], [30.6, 27.0], [30.7, 27.0], [30.8, 27.0], [30.9, 27.0], [31.0, 27.0], [31.1, 27.0], [31.2, 27.0], [31.3, 27.0], [31.4, 27.0], [31.5, 27.0], [31.6, 27.0], [31.7, 27.0], [31.8, 27.0], [31.9, 28.0], [32.0, 28.0], [32.1, 28.0], [32.2, 28.0], [32.3, 28.0], [32.4, 28.0], [32.5, 28.0], [32.6, 28.0], [32.7, 28.0], [32.8, 28.0], [32.9, 28.0], [33.0, 28.0], [33.1, 28.0], [33.2, 28.0], [33.3, 29.0], [33.4, 29.0], [33.5, 29.0], [33.6, 29.0], [33.7, 29.0], [33.8, 29.0], [33.9, 29.0], [34.0, 29.0], [34.1, 29.0], [34.2, 30.0], [34.3, 30.0], [34.4, 30.0], [34.5, 30.0], [34.6, 30.0], [34.7, 30.0], [34.8, 30.0], [34.9, 30.0], [35.0, 30.0], [35.1, 30.0], [35.2, 30.0], [35.3, 30.0], [35.4, 30.0], [35.5, 30.0], [35.6, 30.0], [35.7, 30.0], [35.8, 30.0], [35.9, 30.0], [36.0, 30.0], [36.1, 30.0], [36.2, 31.0], [36.3, 31.0], [36.4, 31.0], [36.5, 31.0], [36.6, 31.0], [36.7, 31.0], [36.8, 31.0], [36.9, 31.0], [37.0, 31.0], [37.1, 31.0], [37.2, 31.0], [37.3, 31.0], [37.4, 31.0], [37.5, 31.0], [37.6, 31.0], [37.7, 31.0], [37.8, 31.0], [37.9, 31.0], [38.0, 31.0], [38.1, 31.0], [38.2, 31.0], [38.3, 31.0], [38.4, 31.0], [38.5, 31.0], [38.6, 32.0], [38.7, 32.0], [38.8, 32.0], [38.9, 32.0], [39.0, 32.0], [39.1, 32.0], [39.2, 32.0], [39.3, 32.0], [39.4, 32.0], [39.5, 32.0], [39.6, 32.0], [39.7, 32.0], [39.8, 32.0], [39.9, 32.0], [40.0, 32.0], [40.1, 32.0], [40.2, 32.0], [40.3, 32.0], [40.4, 32.0], [40.5, 32.0], [40.6, 33.0], [40.7, 33.0], [40.8, 33.0], [40.9, 33.0], [41.0, 33.0], [41.1, 33.0], [41.2, 33.0], [41.3, 33.0], [41.4, 33.0], [41.5, 33.0], [41.6, 33.0], [41.7, 33.0], [41.8, 33.0], [41.9, 33.0], [42.0, 33.0], [42.1, 33.0], [42.2, 33.0], [42.3, 33.0], [42.4, 33.0], [42.5, 33.0], [42.6, 33.0], [42.7, 33.0], [42.8, 33.0], [42.9, 33.0], [43.0, 33.0], [43.1, 33.0], [43.2, 33.0], [43.3, 33.0], [43.4, 33.0], [43.5, 33.0], [43.6, 33.0], [43.7, 34.0], [43.8, 34.0], [43.9, 34.0], [44.0, 34.0], [44.1, 34.0], [44.2, 34.0], [44.3, 34.0], [44.4, 34.0], [44.5, 34.0], [44.6, 34.0], [44.7, 34.0], [44.8, 34.0], [44.9, 34.0], [45.0, 34.0], [45.1, 34.0], [45.2, 34.0], [45.3, 34.0], [45.4, 34.0], [45.5, 34.0], [45.6, 34.0], [45.7, 34.0], [45.8, 34.0], [45.9, 34.0], [46.0, 34.0], [46.1, 34.0], [46.2, 34.0], [46.3, 34.0], [46.4, 34.0], [46.5, 34.0], [46.6, 34.0], [46.7, 34.0], [46.8, 35.0], [46.9, 35.0], [47.0, 35.0], [47.1, 35.0], [47.2, 35.0], [47.3, 35.0], [47.4, 35.0], [47.5, 35.0], [47.6, 35.0], [47.7, 35.0], [47.8, 35.0], [47.9, 35.0], [48.0, 35.0], [48.1, 35.0], [48.2, 35.0], [48.3, 35.0], [48.4, 35.0], [48.5, 35.0], [48.6, 35.0], [48.7, 35.0], [48.8, 35.0], [48.9, 35.0], [49.0, 35.0], [49.1, 35.0], [49.2, 35.0], [49.3, 35.0], [49.4, 35.0], [49.5, 35.0], [49.6, 35.0], [49.7, 35.0], [49.8, 35.0], [49.9, 35.0], [50.0, 35.0], [50.1, 36.0], [50.2, 36.0], [50.3, 36.0], [50.4, 36.0], [50.5, 36.0], [50.6, 36.0], [50.7, 36.0], [50.8, 36.0], [50.9, 36.0], [51.0, 36.0], [51.1, 36.0], [51.2, 36.0], [51.3, 36.0], [51.4, 36.0], [51.5, 36.0], [51.6, 36.0], [51.7, 36.0], [51.8, 36.0], [51.9, 36.0], [52.0, 36.0], [52.1, 36.0], [52.2, 36.0], [52.3, 36.0], [52.4, 36.0], [52.5, 36.0], [52.6, 36.0], [52.7, 37.0], [52.8, 37.0], [52.9, 37.0], [53.0, 37.0], [53.1, 37.0], [53.2, 37.0], [53.3, 37.0], [53.4, 37.0], [53.5, 37.0], [53.6, 37.0], [53.7, 37.0], [53.8, 37.0], [53.9, 37.0], [54.0, 37.0], [54.1, 37.0], [54.2, 37.0], [54.3, 37.0], [54.4, 37.0], [54.5, 37.0], [54.6, 37.0], [54.7, 37.0], [54.8, 37.0], [54.9, 37.0], [55.0, 37.0], [55.1, 37.0], [55.2, 37.0], [55.3, 37.0], [55.4, 37.0], [55.5, 37.0], [55.6, 37.0], [55.7, 37.0], [55.8, 37.0], [55.9, 37.0], [56.0, 38.0], [56.1, 38.0], [56.2, 38.0], [56.3, 38.0], [56.4, 38.0], [56.5, 38.0], [56.6, 38.0], [56.7, 38.0], [56.8, 38.0], [56.9, 38.0], [57.0, 38.0], [57.1, 38.0], [57.2, 38.0], [57.3, 38.0], [57.4, 38.0], [57.5, 39.0], [57.6, 39.0], [57.7, 39.0], [57.8, 39.0], [57.9, 39.0], [58.0, 39.0], [58.1, 39.0], [58.2, 39.0], [58.3, 39.0], [58.4, 39.0], [58.5, 39.0], [58.6, 39.0], [58.7, 39.0], [58.8, 39.0], [58.9, 39.0], [59.0, 39.0], [59.1, 39.0], [59.2, 39.0], [59.3, 39.0], [59.4, 39.0], [59.5, 39.0], [59.6, 40.0], [59.7, 40.0], [59.8, 40.0], [59.9, 40.0], [60.0, 40.0], [60.1, 40.0], [60.2, 40.0], [60.3, 40.0], [60.4, 40.0], [60.5, 40.0], [60.6, 40.0], [60.7, 40.0], [60.8, 40.0], [60.9, 40.0], [61.0, 40.0], [61.1, 40.0], [61.2, 40.0], [61.3, 40.0], [61.4, 40.0], [61.5, 40.0], [61.6, 40.0], [61.7, 40.0], [61.8, 40.0], [61.9, 41.0], [62.0, 41.0], [62.1, 41.0], [62.2, 41.0], [62.3, 41.0], [62.4, 41.0], [62.5, 41.0], [62.6, 41.0], [62.7, 41.0], [62.8, 41.0], [62.9, 41.0], [63.0, 41.0], [63.1, 41.0], [63.2, 41.0], [63.3, 41.0], [63.4, 41.0], [63.5, 41.0], [63.6, 41.0], [63.7, 41.0], [63.8, 41.0], [63.9, 42.0], [64.0, 42.0], [64.1, 42.0], [64.2, 42.0], [64.3, 42.0], [64.4, 42.0], [64.5, 42.0], [64.6, 42.0], [64.7, 42.0], [64.8, 42.0], [64.9, 42.0], [65.0, 42.0], [65.1, 42.0], [65.2, 42.0], [65.3, 42.0], [65.4, 42.0], [65.5, 42.0], [65.6, 42.0], [65.7, 42.0], [65.8, 42.0], [65.9, 42.0], [66.0, 42.0], [66.1, 42.0], [66.2, 42.0], [66.3, 42.0], [66.4, 42.0], [66.5, 43.0], [66.6, 43.0], [66.7, 43.0], [66.8, 43.0], [66.9, 43.0], [67.0, 43.0], [67.1, 43.0], [67.2, 43.0], [67.3, 43.0], [67.4, 43.0], [67.5, 43.0], [67.6, 43.0], [67.7, 43.0], [67.8, 43.0], [67.9, 43.0], [68.0, 43.0], [68.1, 43.0], [68.2, 43.0], [68.3, 43.0], [68.4, 43.0], [68.5, 43.0], [68.6, 43.0], [68.7, 43.0], [68.8, 43.0], [68.9, 43.0], [69.0, 43.0], [69.1, 43.0], [69.2, 44.0], [69.3, 44.0], [69.4, 44.0], [69.5, 44.0], [69.6, 44.0], [69.7, 44.0], [69.8, 44.0], [69.9, 44.0], [70.0, 44.0], [70.1, 44.0], [70.2, 44.0], [70.3, 44.0], [70.4, 44.0], [70.5, 44.0], [70.6, 44.0], [70.7, 44.0], [70.8, 44.0], [70.9, 44.0], [71.0, 44.0], [71.1, 44.0], [71.2, 44.0], [71.3, 44.0], [71.4, 44.0], [71.5, 44.0], [71.6, 44.0], [71.7, 44.0], [71.8, 44.0], [71.9, 44.0], [72.0, 44.0], [72.1, 44.0], [72.2, 44.0], [72.3, 44.0], [72.4, 44.0], [72.5, 45.0], [72.6, 45.0], [72.7, 45.0], [72.8, 45.0], [72.9, 45.0], [73.0, 45.0], [73.1, 45.0], [73.2, 45.0], [73.3, 45.0], [73.4, 45.0], [73.5, 45.0], [73.6, 45.0], [73.7, 45.0], [73.8, 45.0], [73.9, 45.0], [74.0, 45.0], [74.1, 45.0], [74.2, 45.0], [74.3, 46.0], [74.4, 46.0], [74.5, 46.0], [74.6, 46.0], [74.7, 46.0], [74.8, 46.0], [74.9, 46.0], [75.0, 46.0], [75.1, 46.0], [75.2, 46.0], [75.3, 46.0], [75.4, 46.0], [75.5, 46.0], [75.6, 46.0], [75.7, 46.0], [75.8, 47.0], [75.9, 47.0], [76.0, 47.0], [76.1, 47.0], [76.2, 47.0], [76.3, 47.0], [76.4, 47.0], [76.5, 47.0], [76.6, 47.0], [76.7, 47.0], [76.8, 47.0], [76.9, 47.0], [77.0, 47.0], [77.1, 48.0], [77.2, 48.0], [77.3, 48.0], [77.4, 48.0], [77.5, 48.0], [77.6, 48.0], [77.7, 48.0], [77.8, 48.0], [77.9, 48.0], [78.0, 48.0], [78.1, 48.0], [78.2, 48.0], [78.3, 48.0], [78.4, 48.0], [78.5, 48.0], [78.6, 48.0], [78.7, 48.0], [78.8, 48.0], [78.9, 48.0], [79.0, 48.0], [79.1, 48.0], [79.2, 48.0], [79.3, 49.0], [79.4, 49.0], [79.5, 49.0], [79.6, 49.0], [79.7, 49.0], [79.8, 49.0], [79.9, 49.0], [80.0, 49.0], [80.1, 49.0], [80.2, 49.0], [80.3, 49.0], [80.4, 49.0], [80.5, 49.0], [80.6, 49.0], [80.7, 49.0], [80.8, 49.0], [80.9, 49.0], [81.0, 50.0], [81.1, 50.0], [81.2, 50.0], [81.3, 50.0], [81.4, 50.0], [81.5, 50.0], [81.6, 50.0], [81.7, 50.0], [81.8, 50.0], [81.9, 50.0], [82.0, 50.0], [82.1, 50.0], [82.2, 50.0], [82.3, 50.0], [82.4, 50.0], [82.5, 50.0], [82.6, 50.0], [82.7, 50.0], [82.8, 50.0], [82.9, 51.0], [83.0, 51.0], [83.1, 51.0], [83.2, 51.0], [83.3, 51.0], [83.4, 51.0], [83.5, 51.0], [83.6, 51.0], [83.7, 51.0], [83.8, 51.0], [83.9, 51.0], [84.0, 51.0], [84.1, 51.0], [84.2, 51.0], [84.3, 51.0], [84.4, 52.0], [84.5, 52.0], [84.6, 52.0], [84.7, 52.0], [84.8, 52.0], [84.9, 52.0], [85.0, 52.0], [85.1, 52.0], [85.2, 52.0], [85.3, 52.0], [85.4, 52.0], [85.5, 52.0], [85.6, 52.0], [85.7, 52.0], [85.8, 53.0], [85.9, 53.0], [86.0, 53.0], [86.1, 53.0], [86.2, 53.0], [86.3, 53.0], [86.4, 53.0], [86.5, 53.0], [86.6, 53.0], [86.7, 53.0], [86.8, 54.0], [86.9, 54.0], [87.0, 54.0], [87.1, 54.0], [87.2, 54.0], [87.3, 54.0], [87.4, 54.0], [87.5, 54.0], [87.6, 54.0], [87.7, 54.0], [87.8, 55.0], [87.9, 55.0], [88.0, 55.0], [88.1, 55.0], [88.2, 55.0], [88.3, 55.0], [88.4, 55.0], [88.5, 55.0], [88.6, 55.0], [88.7, 56.0], [88.8, 56.0], [88.9, 56.0], [89.0, 56.0], [89.1, 56.0], [89.2, 56.0], [89.3, 56.0], [89.4, 56.0], [89.5, 56.0], [89.6, 56.0], [89.7, 56.0], [89.8, 57.0], [89.9, 57.0], [90.0, 57.0], [90.1, 57.0], [90.2, 57.0], [90.3, 57.0], [90.4, 57.0], [90.5, 57.0], [90.6, 57.0], [90.7, 58.0], [90.8, 58.0], [90.9, 58.0], [91.0, 58.0], [91.1, 58.0], [91.2, 58.0], [91.3, 58.0], [91.4, 58.0], [91.5, 58.0], [91.6, 58.0], [91.7, 58.0], [91.8, 58.0], [91.9, 58.0], [92.0, 58.0], [92.1, 58.0], [92.2, 58.0], [92.3, 59.0], [92.4, 59.0], [92.5, 59.0], [92.6, 59.0], [92.7, 59.0], [92.8, 59.0], [92.9, 59.0], [93.0, 59.0], [93.1, 59.0], [93.2, 60.0], [93.3, 60.0], [93.4, 60.0], [93.5, 60.0], [93.6, 60.0], [93.7, 60.0], [93.8, 60.0], [93.9, 60.0], [94.0, 60.0], [94.1, 60.0], [94.2, 60.0], [94.3, 60.0], [94.4, 61.0], [94.5, 61.0], [94.6, 61.0], [94.7, 61.0], [94.8, 61.0], [94.9, 61.0], [95.0, 61.0], [95.1, 61.0], [95.2, 62.0], [95.3, 62.0], [95.4, 62.0], [95.5, 62.0], [95.6, 62.0], [95.7, 62.0], [95.8, 62.0], [95.9, 63.0], [96.0, 63.0], [96.1, 63.0], [96.2, 63.0], [96.3, 63.0], [96.4, 64.0], [96.5, 64.0], [96.6, 64.0], [96.7, 64.0], [96.8, 64.0], [96.9, 65.0], [97.0, 65.0], [97.1, 65.0], [97.2, 65.0], [97.3, 65.0], [97.4, 66.0], [97.5, 66.0], [97.6, 66.0], [97.7, 66.0], [97.8, 67.0], [97.9, 67.0], [98.0, 67.0], [98.1, 68.0], [98.2, 68.0], [98.3, 68.0], [98.4, 68.0], [98.5, 68.0], [98.6, 69.0], [98.7, 69.0], [98.8, 70.0], [98.9, 70.0], [99.0, 70.0], [99.1, 70.0], [99.2, 71.0], [99.3, 71.0], [99.4, 72.0], [99.5, 72.0], [99.6, 73.0], [99.7, 75.0], [99.8, 75.0], [99.9, 75.0], [100.0, 79.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 65.0], [0.1, 70.0], [0.2, 79.0], [0.3, 79.0], [0.4, 134.0], [0.5, 159.0], [0.6, 161.0], [0.7, 189.0], [0.8, 240.0], [0.9, 242.0], [1.0, 247.0], [1.1, 314.0], [1.2, 315.0], [1.3, 345.0], [1.4, 345.0], [1.5, 347.0], [1.6, 350.0], [1.7, 364.0], [1.8, 384.0], [1.9, 427.0], [2.0, 437.0], [2.1, 440.0], [2.2, 483.0], [2.3, 497.0], [2.4, 499.0], [2.5, 501.0], [2.6, 525.0], [2.7, 557.0], [2.8, 596.0], [2.9, 601.0], [3.0, 602.0], [3.1, 642.0], [3.2, 655.0], [3.3, 689.0], [3.4, 719.0], [3.5, 722.0], [3.6, 738.0], [3.7, 765.0], [3.8, 766.0], [3.9, 781.0], [4.0, 813.0], [4.1, 818.0], [4.2, 840.0], [4.3, 847.0], [4.4, 879.0], [4.5, 882.0], [4.6, 901.0], [4.7, 916.0], [4.8, 932.0], [4.9, 933.0], [5.0, 950.0], [5.1, 961.0], [5.2, 986.0], [5.3, 1004.0], [5.4, 1035.0], [5.5, 1043.0], [5.6, 1070.0], [5.7, 1107.0], [5.8, 1109.0], [5.9, 1137.0], [6.0, 1187.0], [6.1, 1188.0], [6.2, 1195.0], [6.3, 1203.0], [6.4, 1216.0], [6.5, 1252.0], [6.6, 1305.0], [6.7, 1308.0], [6.8, 1319.0], [6.9, 1320.0], [7.0, 1333.0], [7.1, 1354.0], [7.2, 1388.0], [7.3, 1396.0], [7.4, 1407.0], [7.5, 1409.0], [7.6, 1414.0], [7.7, 1427.0], [7.8, 1461.0], [7.9, 1463.0], [8.0, 1465.0], [8.1, 1467.0], [8.2, 1485.0], [8.3, 1486.0], [8.4, 1524.0], [8.5, 1542.0], [8.6, 1550.0], [8.7, 1562.0], [8.8, 1588.0], [8.9, 1603.0], [9.0, 1604.0], [9.1, 1633.0], [9.2, 1657.0], [9.3, 1674.0], [9.4, 1674.0], [9.5, 1685.0], [9.6, 1708.0], [9.7, 1730.0], [9.8, 1749.0], [9.9, 1764.0], [10.0, 1774.0], [10.1, 1786.0], [10.2, 1835.0], [10.3, 1836.0], [10.4, 1844.0], [10.5, 1855.0], [10.6, 1873.0], [10.7, 1899.0], [10.8, 1900.0], [10.9, 1919.0], [11.0, 1923.0], [11.1, 1950.0], [11.2, 1973.0], [11.3, 2013.0], [11.4, 2030.0], [11.5, 2036.0], [11.6, 2047.0], [11.7, 2102.0], [11.8, 2117.0], [11.9, 2143.0], [12.0, 2146.0], [12.1, 2147.0], [12.2, 2187.0], [12.3, 2212.0], [12.4, 2216.0], [12.5, 2247.0], [12.6, 2260.0], [12.7, 2262.0], [12.8, 2274.0], [12.9, 2279.0], [13.0, 2317.0], [13.1, 2340.0], [13.2, 2360.0], [13.3, 2368.0], [13.4, 2382.0], [13.5, 2403.0], [13.6, 2433.0], [13.7, 2454.0], [13.8, 2477.0], [13.9, 2478.0], [14.0, 2494.0], [14.1, 2527.0], [14.2, 2577.0], [14.3, 2592.0], [14.4, 2606.0], [14.5, 2606.0], [14.6, 2614.0], [14.7, 2616.0], [14.8, 2623.0], [14.9, 2635.0], [15.0, 2673.0], [15.1, 2708.0], [15.2, 2711.0], [15.3, 2738.0], [15.4, 2824.0], [15.5, 2830.0], [15.6, 2859.0], [15.7, 2875.0], [15.8, 2894.0], [15.9, 2911.0], [16.0, 2923.0], [16.1, 2941.0], [16.2, 2948.0], [16.3, 2964.0], [16.4, 2974.0], [16.5, 2979.0], [16.6, 3005.0], [16.7, 3011.0], [16.8, 3016.0], [16.9, 3024.0], [17.0, 3025.0], [17.1, 3037.0], [17.2, 3054.0], [17.3, 3055.0], [17.4, 3074.0], [17.5, 3078.0], [17.6, 3091.0], [17.7, 3107.0], [17.8, 3114.0], [17.9, 3162.0], [18.0, 3172.0], [18.1, 3181.0], [18.2, 3189.0], [18.3, 3220.0], [18.4, 3231.0], [18.5, 3257.0], [18.6, 3318.0], [18.7, 3318.0], [18.8, 3318.0], [18.9, 3352.0], [19.0, 3353.0], [19.1, 3387.0], [19.2, 3431.0], [19.3, 3436.0], [19.4, 3436.0], [19.5, 3438.0], [19.6, 3453.0], [19.7, 3457.0], [19.8, 3491.0], [19.9, 3492.0], [20.0, 3502.0], [20.1, 3510.0], [20.2, 3521.0], [20.3, 3582.0], [20.4, 3586.0], [20.5, 3598.0], [20.6, 3604.0], [20.7, 3625.0], [20.8, 3629.0], [20.9, 3646.0], [21.0, 3657.0], [21.1, 3662.0], [21.2, 3687.0], [21.3, 3689.0], [21.4, 3695.0], [21.5, 3738.0], [21.6, 3784.0], [21.7, 3804.0], [21.8, 3820.0], [21.9, 3823.0], [22.0, 3851.0], [22.1, 3862.0], [22.2, 3878.0], [22.3, 3910.0], [22.4, 3939.0], [22.5, 3946.0], [22.6, 3957.0], [22.7, 3966.0], [22.8, 3994.0], [22.9, 3997.0], [23.0, 4033.0], [23.1, 4056.0], [23.2, 4069.0], [23.3, 4080.0], [23.4, 4095.0], [23.5, 4103.0], [23.6, 4109.0], [23.7, 4130.0], [23.8, 4130.0], [23.9, 4155.0], [24.0, 4164.0], [24.1, 4191.0], [24.2, 4202.0], [24.3, 4223.0], [24.4, 4262.0], [24.5, 4264.0], [24.6, 4269.0], [24.7, 4311.0], [24.8, 4321.0], [24.9, 4343.0], [25.0, 4344.0], [25.1, 4347.0], [25.2, 4362.0], [25.3, 4368.0], [25.4, 4368.0], [25.5, 4378.0], [25.6, 4410.0], [25.7, 4412.0], [25.8, 4419.0], [25.9, 4445.0], [26.0, 4460.0], [26.1, 4473.0], [26.2, 4496.0], [26.3, 4505.0], [26.4, 4519.0], [26.5, 4534.0], [26.6, 4588.0], [26.7, 4590.0], [26.8, 4614.0], [26.9, 4630.0], [27.0, 4638.0], [27.1, 4664.0], [27.2, 4683.0], [27.3, 4720.0], [27.4, 4736.0], [27.5, 4741.0], [27.6, 4754.0], [27.7, 4774.0], [27.8, 4795.0], [27.9, 4797.0], [28.0, 4833.0], [28.1, 4853.0], [28.2, 4858.0], [28.3, 4870.0], [28.4, 4884.0], [28.5, 4885.0], [28.6, 4901.0], [28.7, 4901.0], [28.8, 4915.0], [28.9, 4942.0], [29.0, 4967.0], [29.1, 4996.0], [29.2, 5037.0], [29.3, 5061.0], [29.4, 5094.0], [29.5, 5103.0], [29.6, 5135.0], [29.7, 5163.0], [29.8, 5183.0], [29.9, 5193.0], [30.0, 5220.0], [30.1, 5229.0], [30.2, 5262.0], [30.3, 5271.0], [30.4, 5288.0], [30.5, 5316.0], [30.6, 5317.0], [30.7, 5338.0], [30.8, 5357.0], [30.9, 5378.0], [31.0, 5383.0], [31.1, 5398.0], [31.2, 5438.0], [31.3, 5440.0], [31.4, 5471.0], [31.5, 5474.0], [31.6, 5528.0], [31.7, 5537.0], [31.8, 5590.0], [31.9, 5590.0], [32.0, 5595.0], [32.1, 5617.0], [32.2, 5624.0], [32.3, 5628.0], [32.4, 5653.0], [32.5, 5656.0], [32.6, 5671.0], [32.7, 5679.0], [32.8, 5699.0], [32.9, 5709.0], [33.0, 5726.0], [33.1, 5733.0], [33.2, 5756.0], [33.3, 5777.0], [33.4, 5787.0], [33.5, 5800.0], [33.6, 5811.0], [33.7, 5829.0], [33.8, 5838.0], [33.9, 5854.0], [34.0, 5889.0], [34.1, 5893.0], [34.2, 5902.0], [34.3, 5911.0], [34.4, 5923.0], [34.5, 5945.0], [34.6, 5974.0], [34.7, 6006.0], [34.8, 6018.0], [34.9, 6026.0], [35.0, 6055.0], [35.1, 6082.0], [35.2, 6094.0], [35.3, 6101.0], [35.4, 6118.0], [35.5, 6120.0], [35.6, 6161.0], [35.7, 6183.0], [35.8, 6190.0], [35.9, 6206.0], [36.0, 6211.0], [36.1, 6244.0], [36.2, 6247.0], [36.3, 6260.0], [36.4, 6270.0], [36.5, 6284.0], [36.6, 6326.0], [36.7, 6342.0], [36.8, 6344.0], [36.9, 6372.0], [37.0, 6400.0], [37.1, 6410.0], [37.2, 6423.0], [37.3, 6477.0], [37.4, 6479.0], [37.5, 6483.0], [37.6, 6507.0], [37.7, 6527.0], [37.8, 6539.0], [37.9, 6548.0], [38.0, 6561.0], [38.1, 6618.0], [38.2, 6618.0], [38.3, 6620.0], [38.4, 6648.0], [38.5, 6656.0], [38.6, 6684.0], [38.7, 6701.0], [38.8, 6715.0], [38.9, 6726.0], [39.0, 6755.0], [39.1, 6763.0], [39.2, 6798.0], [39.3, 6807.0], [39.4, 6809.0], [39.5, 6825.0], [39.6, 6825.0], [39.7, 6835.0], [39.8, 6836.0], [39.9, 6859.0], [40.0, 6881.0], [40.1, 6890.0], [40.2, 6903.0], [40.3, 6923.0], [40.4, 6928.0], [40.5, 6939.0], [40.6, 6944.0], [40.7, 6950.0], [40.8, 6961.0], [40.9, 6967.0], [41.0, 6991.0], [41.1, 7005.0], [41.2, 7025.0], [41.3, 7047.0], [41.4, 7064.0], [41.5, 7078.0], [41.6, 7094.0], [41.7, 7113.0], [41.8, 7137.0], [41.9, 7153.0], [42.0, 7170.0], [42.1, 7175.0], [42.2, 7194.0], [42.3, 7200.0], [42.4, 7240.0], [42.5, 7245.0], [42.6, 7253.0], [42.7, 7268.0], [42.8, 7290.0], [42.9, 7304.0], [43.0, 7316.0], [43.1, 7333.0], [43.2, 7344.0], [43.3, 7353.0], [43.4, 7360.0], [43.5, 7369.0], [43.6, 7395.0], [43.7, 7455.0], [43.8, 7482.0], [43.9, 7485.0], [44.0, 7503.0], [44.1, 7505.0], [44.2, 7536.0], [44.3, 7537.0], [44.4, 7566.0], [44.5, 7580.0], [44.6, 7590.0], [44.7, 7635.0], [44.8, 7658.0], [44.9, 7658.0], [45.0, 7691.0], [45.1, 7729.0], [45.2, 7733.0], [45.3, 7774.0], [45.4, 7780.0], [45.5, 7829.0], [45.6, 7849.0], [45.7, 7863.0], [45.8, 7868.0], [45.9, 7876.0], [46.0, 7876.0], [46.1, 7885.0], [46.2, 7906.0], [46.3, 7914.0], [46.4, 7949.0], [46.5, 7983.0], [46.6, 7988.0], [46.7, 8002.0], [46.8, 8040.0], [46.9, 8048.0], [47.0, 8049.0], [47.1, 8059.0], [47.2, 8080.0], [47.3, 8109.0], [47.4, 8120.0], [47.5, 8135.0], [47.6, 8141.0], [47.7, 8160.0], [47.8, 8180.0], [47.9, 8196.0], [48.0, 8239.0], [48.1, 8252.0], [48.2, 8263.0], [48.3, 8303.0], [48.4, 8304.0], [48.5, 8318.0], [48.6, 8319.0], [48.7, 8329.0], [48.8, 8361.0], [48.9, 8375.0], [49.0, 8409.0], [49.1, 8412.0], [49.2, 8433.0], [49.3, 8445.0], [49.4, 8445.0], [49.5, 8447.0], [49.6, 8459.0], [49.7, 8475.0], [49.8, 8517.0], [49.9, 8535.0], [50.0, 8558.0], [50.1, 8580.0], [50.2, 8597.0], [50.3, 8606.0], [50.4, 8635.0], [50.5, 8657.0], [50.6, 8703.0], [50.7, 8707.0], [50.8, 8729.0], [50.9, 8737.0], [51.0, 8762.0], [51.1, 8769.0], [51.2, 8798.0], [51.3, 8829.0], [51.4, 8859.0], [51.5, 8880.0], [51.6, 8910.0], [51.7, 8947.0], [51.8, 8952.0], [51.9, 8959.0], [52.0, 8964.0], [52.1, 8984.0], [52.2, 8996.0], [52.3, 9024.0], [52.4, 9064.0], [52.5, 9071.0], [52.6, 9084.0], [52.7, 9085.0], [52.8, 9098.0], [52.9, 9111.0], [53.0, 9121.0], [53.1, 9132.0], [53.2, 9165.0], [53.3, 9167.0], [53.4, 9188.0], [53.5, 9189.0], [53.6, 9214.0], [53.7, 9220.0], [53.8, 9246.0], [53.9, 9265.0], [54.0, 9303.0], [54.1, 9357.0], [54.2, 9375.0], [54.3, 9384.0], [54.4, 9390.0], [54.5, 9398.0], [54.6, 9433.0], [54.7, 9443.0], [54.8, 9490.0], [54.9, 9495.0], [55.0, 9497.0], [55.1, 9504.0], [55.2, 9511.0], [55.3, 9548.0], [55.4, 9578.0], [55.5, 9592.0], [55.6, 9640.0], [55.7, 9672.0], [55.8, 9673.0], [55.9, 9685.0], [56.0, 9705.0], [56.1, 9715.0], [56.2, 9715.0], [56.3, 9733.0], [56.4, 9771.0], [56.5, 9787.0], [56.6, 9800.0], [56.7, 9836.0], [56.8, 9894.0], [56.9, 9895.0], [57.0, 9903.0], [57.1, 9916.0], [57.2, 9920.0], [57.3, 9945.0], [57.4, 9953.0], [57.5, 9977.0], [57.6, 9983.0], [57.7, 10015.0], [57.8, 10093.0], [57.9, 10095.0], [58.0, 10149.0], [58.1, 10153.0], [58.2, 10162.0], [58.3, 10171.0], [58.4, 10175.0], [58.5, 10229.0], [58.6, 10262.0], [58.7, 10276.0], [58.8, 10335.0], [58.9, 10360.0], [59.0, 10381.0], [59.1, 10382.0], [59.2, 10383.0], [59.3, 10426.0], [59.4, 10431.0], [59.5, 10498.0], [59.6, 10499.0], [59.7, 10549.0], [59.8, 10561.0], [59.9, 10573.0], [60.0, 10575.0], [60.1, 10653.0], [60.2, 10658.0], [60.3, 10665.0], [60.4, 10671.0], [60.5, 10690.0], [60.6, 10697.0], [60.7, 10704.0], [60.8, 10726.0], [60.9, 10741.0], [61.0, 10758.0], [61.1, 10777.0], [61.2, 10793.0], [61.3, 10845.0], [61.4, 10850.0], [61.5, 10904.0], [61.6, 10936.0], [61.7, 10937.0], [61.8, 10953.0], [61.9, 10958.0], [62.0, 10982.0], [62.1, 10992.0], [62.2, 11026.0], [62.3, 11032.0], [62.4, 11057.0], [62.5, 11058.0], [62.6, 11114.0], [62.7, 11134.0], [62.8, 11153.0], [62.9, 11162.0], [63.0, 11186.0], [63.1, 11233.0], [63.2, 11256.0], [63.3, 11275.0], [63.4, 11306.0], [63.5, 11316.0], [63.6, 11328.0], [63.7, 11368.0], [63.8, 11388.0], [63.9, 11396.0], [64.0, 11414.0], [64.1, 11437.0], [64.2, 11490.0], [64.3, 11513.0], [64.4, 11520.0], [64.5, 11525.0], [64.6, 11564.0], [64.7, 11608.0], [64.8, 11627.0], [64.9, 11634.0], [65.0, 11636.0], [65.1, 11654.0], [65.2, 11676.0], [65.3, 11691.0], [65.4, 11706.0], [65.5, 11726.0], [65.6, 11758.0], [65.7, 11784.0], [65.8, 11806.0], [65.9, 11860.0], [66.0, 11861.0], [66.1, 11901.0], [66.2, 11925.0], [66.3, 11933.0], [66.4, 11966.0], [66.5, 11989.0], [66.6, 11992.0], [66.7, 12041.0], [66.8, 12043.0], [66.9, 12091.0], [67.0, 12092.0], [67.1, 12108.0], [67.2, 12120.0], [67.3, 12127.0], [67.4, 12129.0], [67.5, 12170.0], [67.6, 12207.0], [67.7, 12207.0], [67.8, 12222.0], [67.9, 12247.0], [68.0, 12288.0], [68.1, 12290.0], [68.2, 12293.0], [68.3, 12311.0], [68.4, 12399.0], [68.5, 12437.0], [68.6, 12439.0], [68.7, 12455.0], [68.8, 12458.0], [68.9, 12461.0], [69.0, 12467.0], [69.1, 12472.0], [69.2, 12490.0], [69.3, 12499.0], [69.4, 12527.0], [69.5, 12556.0], [69.6, 12570.0], [69.7, 12599.0], [69.8, 12625.0], [69.9, 12660.0], [70.0, 12675.0], [70.1, 12698.0], [70.2, 12734.0], [70.3, 12747.0], [70.4, 12789.0], [70.5, 12816.0], [70.6, 12829.0], [70.7, 12869.0], [70.8, 12881.0], [70.9, 12891.0], [71.0, 12904.0], [71.1, 12922.0], [71.2, 12944.0], [71.3, 12947.0], [71.4, 12948.0], [71.5, 12990.0], [71.6, 13005.0], [71.7, 13017.0], [71.8, 13022.0], [71.9, 13039.0], [72.0, 13064.0], [72.1, 13072.0], [72.2, 13095.0], [72.3, 13116.0], [72.4, 13146.0], [72.5, 13166.0], [72.6, 13180.0], [72.7, 13195.0], [72.8, 13219.0], [72.9, 13234.0], [73.0, 13250.0], [73.1, 13261.0], [73.2, 13292.0], [73.3, 13313.0], [73.4, 13320.0], [73.5, 13327.0], [73.6, 13348.0], [73.7, 13374.0], [73.8, 13385.0], [73.9, 13413.0], [74.0, 13455.0], [74.1, 13488.0], [74.2, 13488.0], [74.3, 13501.0], [74.4, 13543.0], [74.5, 13549.0], [74.6, 13573.0], [74.7, 13576.0], [74.8, 13606.0], [74.9, 13619.0], [75.0, 13654.0], [75.1, 13662.0], [75.2, 13720.0], [75.3, 13750.0], [75.4, 13770.0], [75.5, 13804.0], [75.6, 13814.0], [75.7, 13836.0], [75.8, 13854.0], [75.9, 13860.0], [76.0, 13877.0], [76.1, 13885.0], [76.2, 13900.0], [76.3, 13916.0], [76.4, 13947.0], [76.5, 13950.0], [76.6, 13956.0], [76.7, 13992.0], [76.8, 14017.0], [76.9, 14020.0], [77.0, 14024.0], [77.1, 14063.0], [77.2, 14084.0], [77.3, 14089.0], [77.4, 14101.0], [77.5, 14120.0], [77.6, 14128.0], [77.7, 14155.0], [77.8, 14198.0], [77.9, 14218.0], [78.0, 14218.0], [78.1, 14254.0], [78.2, 14256.0], [78.3, 14257.0], [78.4, 14272.0], [78.5, 14294.0], [78.6, 14311.0], [78.7, 14362.0], [78.8, 14364.0], [78.9, 14368.0], [79.0, 14387.0], [79.1, 14405.0], [79.2, 14421.0], [79.3, 14426.0], [79.4, 14470.0], [79.5, 14472.0], [79.6, 14523.0], [79.7, 14536.0], [79.8, 14578.0], [79.9, 14598.0], [80.0, 14599.0], [80.1, 14603.0], [80.2, 14688.0], [80.3, 14714.0], [80.4, 14729.0], [80.5, 14734.0], [80.6, 14737.0], [80.7, 14801.0], [80.8, 14810.0], [80.9, 14832.0], [81.0, 14854.0], [81.1, 14857.0], [81.2, 14864.0], [81.3, 14892.0], [81.4, 14916.0], [81.5, 14919.0], [81.6, 14956.0], [81.7, 14986.0], [81.8, 14987.0], [81.9, 15014.0], [82.0, 15044.0], [82.1, 15047.0], [82.2, 15056.0], [82.3, 15086.0], [82.4, 15091.0], [82.5, 15130.0], [82.6, 15154.0], [82.7, 15181.0], [82.8, 15219.0], [82.9, 15220.0], [83.0, 15223.0], [83.1, 15226.0], [83.2, 15228.0], [83.3, 15234.0], [83.4, 15271.0], [83.5, 15293.0], [83.6, 15316.0], [83.7, 15323.0], [83.8, 15367.0], [83.9, 15409.0], [84.0, 15415.0], [84.1, 15456.0], [84.2, 15465.0], [84.3, 15477.0], [84.4, 15535.0], [84.5, 15542.0], [84.6, 15557.0], [84.7, 15576.0], [84.8, 15639.0], [84.9, 15643.0], [85.0, 15647.0], [85.1, 15655.0], [85.2, 15666.0], [85.3, 15726.0], [85.4, 15733.0], [85.5, 15745.0], [85.6, 15760.0], [85.7, 15787.0], [85.8, 15816.0], [85.9, 15832.0], [86.0, 15851.0], [86.1, 15854.0], [86.2, 15864.0], [86.3, 15890.0], [86.4, 15894.0], [86.5, 15904.0], [86.6, 15920.0], [86.7, 15951.0], [86.8, 15990.0], [86.9, 16024.0], [87.0, 16054.0], [87.1, 16055.0], [87.2, 16159.0], [87.3, 16159.0], [87.4, 16218.0], [87.5, 16242.0], [87.6, 16250.0], [87.7, 16251.0], [87.8, 16253.0], [87.9, 16253.0], [88.0, 16255.0], [88.1, 16284.0], [88.2, 16289.0], [88.3, 16310.0], [88.4, 16350.0], [88.5, 16412.0], [88.6, 16449.0], [88.7, 16506.0], [88.8, 16509.0], [88.9, 16529.0], [89.0, 16577.0], [89.1, 16581.0], [89.2, 16617.0], [89.3, 16648.0], [89.4, 16668.0], [89.5, 16691.0], [89.6, 16793.0], [89.7, 16842.0], [89.8, 16844.0], [89.9, 16845.0], [90.0, 16863.0], [90.1, 16879.0], [90.2, 16886.0], [90.3, 16906.0], [90.4, 16946.0], [90.5, 16971.0], [90.6, 17036.0], [90.7, 17060.0], [90.8, 17093.0], [90.9, 17115.0], [91.0, 17128.0], [91.1, 17169.0], [91.2, 17197.0], [91.3, 17217.0], [91.4, 17239.0], [91.5, 17267.0], [91.6, 17299.0], [91.7, 17332.0], [91.8, 17359.0], [91.9, 17395.0], [92.0, 17413.0], [92.1, 17450.0], [92.2, 17470.0], [92.3, 17510.0], [92.4, 17520.0], [92.5, 17546.0], [92.6, 17569.0], [92.7, 17604.0], [92.8, 17634.0], [92.9, 17658.0], [93.0, 17694.0], [93.1, 17720.0], [93.2, 17730.0], [93.3, 17753.0], [93.4, 17779.0], [93.5, 17812.0], [93.6, 17847.0], [93.7, 17881.0], [93.8, 17940.0], [93.9, 17984.0], [94.0, 18006.0], [94.1, 18008.0], [94.2, 18026.0], [94.3, 18032.0], [94.4, 18048.0], [94.5, 18069.0], [94.6, 18087.0], [94.7, 18107.0], [94.8, 18121.0], [94.9, 18137.0], [95.0, 18192.0], [95.1, 18208.0], [95.2, 18241.0], [95.3, 18258.0], [95.4, 18311.0], [95.5, 18318.0], [95.6, 18346.0], [95.7, 18358.0], [95.8, 18359.0], [95.9, 18387.0], [96.0, 18392.0], [96.1, 18414.0], [96.2, 18414.0], [96.3, 18443.0], [96.4, 18446.0], [96.5, 18491.0], [96.6, 18523.0], [96.7, 18536.0], [96.8, 18550.0], [96.9, 18576.0], [97.0, 18584.0], [97.1, 18588.0], [97.2, 18606.0], [97.3, 18636.0], [97.4, 18692.0], [97.5, 18710.0], [97.6, 18716.0], [97.7, 18732.0], [97.8, 18757.0], [97.9, 18759.0], [98.0, 18787.0], [98.1, 18799.0], [98.2, 18806.0], [98.3, 18822.0], [98.4, 18832.0], [98.5, 18843.0], [98.6, 18872.0], [98.7, 18904.0], [98.8, 18921.0], [98.9, 18936.0], [99.0, 18967.0], [99.1, 18982.0], [99.2, 19011.0], [99.3, 19012.0], [99.4, 19024.0], [99.5, 19049.0], [99.6, 19067.0], [99.7, 19084.0], [99.8, 19094.0], [99.9, 19118.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 4.0], [3.7, 4.0], [3.8, 4.0], [3.9, 4.0], [4.0, 4.0], [4.1, 4.0], [4.2, 4.0], [4.3, 4.0], [4.4, 4.0], [4.5, 4.0], [4.6, 4.0], [4.7, 4.0], [4.8, 4.0], [4.9, 4.0], [5.0, 4.0], [5.1, 4.0], [5.2, 4.0], [5.3, 4.0], [5.4, 4.0], [5.5, 4.0], [5.6, 4.0], [5.7, 4.0], [5.8, 4.0], [5.9, 4.0], [6.0, 4.0], [6.1, 4.0], [6.2, 4.0], [6.3, 4.0], [6.4, 4.0], [6.5, 4.0], [6.6, 4.0], [6.7, 4.0], [6.8, 4.0], [6.9, 4.0], [7.0, 4.0], [7.1, 4.0], [7.2, 4.0], [7.3, 4.0], [7.4, 4.0], [7.5, 4.0], [7.6, 4.0], [7.7, 4.0], [7.8, 4.0], [7.9, 4.0], [8.0, 4.0], [8.1, 4.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 4.0], [10.3, 4.0], [10.4, 4.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 4.0], [11.1, 4.0], [11.2, 4.0], [11.3, 4.0], [11.4, 4.0], [11.5, 4.0], [11.6, 4.0], [11.7, 4.0], [11.8, 4.0], [11.9, 4.0], [12.0, 4.0], [12.1, 4.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 5.0], [17.9, 5.0], [18.0, 5.0], [18.1, 5.0], [18.2, 5.0], [18.3, 5.0], [18.4, 5.0], [18.5, 5.0], [18.6, 5.0], [18.7, 5.0], [18.8, 5.0], [18.9, 5.0], [19.0, 5.0], [19.1, 5.0], [19.2, 5.0], [19.3, 5.0], [19.4, 5.0], [19.5, 5.0], [19.6, 5.0], [19.7, 5.0], [19.8, 5.0], [19.9, 5.0], [20.0, 5.0], [20.1, 5.0], [20.2, 5.0], [20.3, 5.0], [20.4, 5.0], [20.5, 5.0], [20.6, 5.0], [20.7, 5.0], [20.8, 5.0], [20.9, 5.0], [21.0, 5.0], [21.1, 5.0], [21.2, 5.0], [21.3, 5.0], [21.4, 5.0], [21.5, 5.0], [21.6, 5.0], [21.7, 5.0], [21.8, 5.0], [21.9, 5.0], [22.0, 5.0], [22.1, 5.0], [22.2, 5.0], [22.3, 5.0], [22.4, 5.0], [22.5, 5.0], [22.6, 5.0], [22.7, 5.0], [22.8, 5.0], [22.9, 5.0], [23.0, 5.0], [23.1, 5.0], [23.2, 5.0], [23.3, 5.0], [23.4, 5.0], [23.5, 5.0], [23.6, 5.0], [23.7, 5.0], [23.8, 5.0], [23.9, 5.0], [24.0, 5.0], [24.1, 5.0], [24.2, 5.0], [24.3, 5.0], [24.4, 5.0], [24.5, 5.0], [24.6, 5.0], [24.7, 5.0], [24.8, 5.0], [24.9, 5.0], [25.0, 5.0], [25.1, 5.0], [25.2, 5.0], [25.3, 5.0], [25.4, 5.0], [25.5, 5.0], [25.6, 5.0], [25.7, 5.0], [25.8, 5.0], [25.9, 5.0], [26.0, 5.0], [26.1, 5.0], [26.2, 5.0], [26.3, 5.0], [26.4, 5.0], [26.5, 5.0], [26.6, 5.0], [26.7, 5.0], [26.8, 5.0], [26.9, 5.0], [27.0, 5.0], [27.1, 5.0], [27.2, 5.0], [27.3, 5.0], [27.4, 5.0], [27.5, 5.0], [27.6, 5.0], [27.7, 5.0], [27.8, 5.0], [27.9, 5.0], [28.0, 5.0], [28.1, 5.0], [28.2, 5.0], [28.3, 5.0], [28.4, 5.0], [28.5, 5.0], [28.6, 5.0], [28.7, 5.0], [28.8, 5.0], [28.9, 5.0], [29.0, 5.0], [29.1, 5.0], [29.2, 5.0], [29.3, 5.0], [29.4, 5.0], [29.5, 5.0], [29.6, 5.0], [29.7, 5.0], [29.8, 5.0], [29.9, 5.0], [30.0, 5.0], [30.1, 5.0], [30.2, 5.0], [30.3, 5.0], [30.4, 5.0], [30.5, 5.0], [30.6, 5.0], [30.7, 5.0], [30.8, 5.0], [30.9, 5.0], [31.0, 5.0], [31.1, 5.0], [31.2, 5.0], [31.3, 5.0], [31.4, 5.0], [31.5, 5.0], [31.6, 5.0], [31.7, 5.0], [31.8, 5.0], [31.9, 5.0], [32.0, 5.0], [32.1, 5.0], [32.2, 5.0], [32.3, 5.0], [32.4, 5.0], [32.5, 5.0], [32.6, 5.0], [32.7, 5.0], [32.8, 5.0], [32.9, 5.0], [33.0, 5.0], [33.1, 5.0], [33.2, 5.0], [33.3, 5.0], [33.4, 5.0], [33.5, 5.0], [33.6, 5.0], [33.7, 5.0], [33.8, 5.0], [33.9, 5.0], [34.0, 5.0], [34.1, 5.0], [34.2, 5.0], [34.3, 5.0], [34.4, 5.0], [34.5, 5.0], [34.6, 5.0], [34.7, 5.0], [34.8, 5.0], [34.9, 5.0], [35.0, 5.0], [35.1, 5.0], [35.2, 5.0], [35.3, 5.0], [35.4, 6.0], [35.5, 6.0], [35.6, 6.0], [35.7, 6.0], [35.8, 6.0], [35.9, 6.0], [36.0, 6.0], [36.1, 6.0], [36.2, 6.0], [36.3, 6.0], [36.4, 6.0], [36.5, 6.0], [36.6, 6.0], [36.7, 6.0], [36.8, 6.0], [36.9, 6.0], [37.0, 6.0], [37.1, 6.0], [37.2, 6.0], [37.3, 6.0], [37.4, 6.0], [37.5, 6.0], [37.6, 6.0], [37.7, 6.0], [37.8, 6.0], [37.9, 6.0], [38.0, 6.0], [38.1, 6.0], [38.2, 6.0], [38.3, 6.0], [38.4, 6.0], [38.5, 6.0], [38.6, 6.0], [38.7, 6.0], [38.8, 6.0], [38.9, 6.0], [39.0, 6.0], [39.1, 6.0], [39.2, 6.0], [39.3, 6.0], [39.4, 6.0], [39.5, 6.0], [39.6, 6.0], [39.7, 6.0], [39.8, 6.0], [39.9, 6.0], [40.0, 6.0], [40.1, 6.0], [40.2, 6.0], [40.3, 6.0], [40.4, 6.0], [40.5, 6.0], [40.6, 6.0], [40.7, 6.0], [40.8, 6.0], [40.9, 6.0], [41.0, 6.0], [41.1, 6.0], [41.2, 6.0], [41.3, 6.0], [41.4, 6.0], [41.5, 6.0], [41.6, 6.0], [41.7, 6.0], [41.8, 6.0], [41.9, 6.0], [42.0, 6.0], [42.1, 6.0], [42.2, 6.0], [42.3, 6.0], [42.4, 7.0], [42.5, 7.0], [42.6, 7.0], [42.7, 7.0], [42.8, 7.0], [42.9, 7.0], [43.0, 7.0], [43.1, 7.0], [43.2, 7.0], [43.3, 7.0], [43.4, 7.0], [43.5, 7.0], [43.6, 7.0], [43.7, 7.0], [43.8, 7.0], [43.9, 7.0], [44.0, 7.0], [44.1, 7.0], [44.2, 7.0], [44.3, 7.0], [44.4, 7.0], [44.5, 7.0], [44.6, 8.0], [44.7, 8.0], [44.8, 8.0], [44.9, 8.0], [45.0, 8.0], [45.1, 8.0], [45.2, 8.0], [45.3, 8.0], [45.4, 8.0], [45.5, 8.0], [45.6, 8.0], [45.7, 8.0], [45.8, 8.0], [45.9, 8.0], [46.0, 8.0], [46.1, 8.0], [46.2, 8.0], [46.3, 8.0], [46.4, 9.0], [46.5, 9.0], [46.6, 9.0], [46.7, 9.0], [46.8, 9.0], [46.9, 9.0], [47.0, 9.0], [47.1, 9.0], [47.2, 9.0], [47.3, 9.0], [47.4, 9.0], [47.5, 9.0], [47.6, 10.0], [47.7, 10.0], [47.8, 10.0], [47.9, 10.0], [48.0, 10.0], [48.1, 10.0], [48.2, 10.0], [48.3, 10.0], [48.4, 10.0], [48.5, 10.0], [48.6, 10.0], [48.7, 10.0], [48.8, 10.0], [48.9, 10.0], [49.0, 10.0], [49.1, 10.0], [49.2, 10.0], [49.3, 10.0], [49.4, 10.0], [49.5, 10.0], [49.6, 11.0], [49.7, 11.0], [49.8, 11.0], [49.9, 11.0], [50.0, 11.0], [50.1, 11.0], [50.2, 11.0], [50.3, 11.0], [50.4, 11.0], [50.5, 11.0], [50.6, 11.0], [50.7, 11.0], [50.8, 11.0], [50.9, 11.0], [51.0, 11.0], [51.1, 11.0], [51.2, 11.0], [51.3, 11.0], [51.4, 11.0], [51.5, 11.0], [51.6, 11.0], [51.7, 11.0], [51.8, 11.0], [51.9, 11.0], [52.0, 11.0], [52.1, 12.0], [52.2, 12.0], [52.3, 12.0], [52.4, 12.0], [52.5, 12.0], [52.6, 12.0], [52.7, 12.0], [52.8, 12.0], [52.9, 12.0], [53.0, 12.0], [53.1, 12.0], [53.2, 12.0], [53.3, 12.0], [53.4, 12.0], [53.5, 12.0], [53.6, 12.0], [53.7, 12.0], [53.8, 12.0], [53.9, 12.0], [54.0, 12.0], [54.1, 12.0], [54.2, 12.0], [54.3, 12.0], [54.4, 12.0], [54.5, 12.0], [54.6, 12.0], [54.7, 12.0], [54.8, 12.0], [54.9, 12.0], [55.0, 13.0], [55.1, 13.0], [55.2, 13.0], [55.3, 13.0], [55.4, 13.0], [55.5, 13.0], [55.6, 13.0], [55.7, 13.0], [55.8, 13.0], [55.9, 13.0], [56.0, 13.0], [56.1, 13.0], [56.2, 13.0], [56.3, 13.0], [56.4, 13.0], [56.5, 13.0], [56.6, 13.0], [56.7, 13.0], [56.8, 13.0], [56.9, 14.0], [57.0, 14.0], [57.1, 14.0], [57.2, 14.0], [57.3, 14.0], [57.4, 14.0], [57.5, 14.0], [57.6, 14.0], [57.7, 14.0], [57.8, 15.0], [57.9, 15.0], [58.0, 15.0], [58.1, 15.0], [58.2, 15.0], [58.3, 16.0], [58.4, 16.0], [58.5, 16.0], [58.6, 16.0], [58.7, 16.0], [58.8, 16.0], [58.9, 16.0], [59.0, 16.0], [59.1, 16.0], [59.2, 16.0], [59.3, 16.0], [59.4, 16.0], [59.5, 16.0], [59.6, 16.0], [59.7, 16.0], [59.8, 16.0], [59.9, 16.0], [60.0, 16.0], [60.1, 16.0], [60.2, 16.0], [60.3, 17.0], [60.4, 18.0], [60.5, 18.0], [60.6, 18.0], [60.7, 18.0], [60.8, 18.0], [60.9, 19.0], [61.0, 19.0], [61.1, 19.0], [61.2, 19.0], [61.3, 20.0], [61.4, 20.0], [61.5, 20.0], [61.6, 20.0], [61.7, 21.0], [61.8, 21.0], [61.9, 21.0], [62.0, 22.0], [62.1, 22.0], [62.2, 23.0], [62.3, 23.0], [62.4, 25.0], [62.5, 25.0], [62.6, 25.0], [62.7, 27.0], [62.8, 28.0], [62.9, 28.0], [63.0, 30.0], [63.1, 31.0], [63.2, 31.0], [63.3, 31.0], [63.4, 32.0], [63.5, 32.0], [63.6, 32.0], [63.7, 33.0], [63.8, 33.0], [63.9, 34.0], [64.0, 34.0], [64.1, 35.0], [64.2, 35.0], [64.3, 36.0], [64.4, 38.0], [64.5, 40.0], [64.6, 40.0], [64.7, 41.0], [64.8, 41.0], [64.9, 42.0], [65.0, 43.0], [65.1, 44.0], [65.2, 45.0], [65.3, 45.0], [65.4, 45.0], [65.5, 49.0], [65.6, 50.0], [65.7, 50.0], [65.8, 52.0], [65.9, 53.0], [66.0, 53.0], [66.1, 53.0], [66.2, 54.0], [66.3, 57.0], [66.4, 57.0], [66.5, 59.0], [66.6, 59.0], [66.7, 60.0], [66.8, 61.0], [66.9, 61.0], [67.0, 65.0], [67.1, 65.0], [67.2, 66.0], [67.3, 66.0], [67.4, 67.0], [67.5, 67.0], [67.6, 69.0], [67.7, 69.0], [67.8, 70.0], [67.9, 70.0], [68.0, 71.0], [68.1, 75.0], [68.2, 76.0], [68.3, 76.0], [68.4, 78.0], [68.5, 78.0], [68.6, 78.0], [68.7, 78.0], [68.8, 79.0], [68.9, 79.0], [69.0, 79.0], [69.1, 79.0], [69.2, 80.0], [69.3, 80.0], [69.4, 80.0], [69.5, 80.0], [69.6, 81.0], [69.7, 81.0], [69.8, 81.0], [69.9, 81.0], [70.0, 81.0], [70.1, 82.0], [70.2, 83.0], [70.3, 83.0], [70.4, 83.0], [70.5, 84.0], [70.6, 84.0], [70.7, 85.0], [70.8, 85.0], [70.9, 86.0], [71.0, 86.0], [71.1, 87.0], [71.2, 87.0], [71.3, 87.0], [71.4, 87.0], [71.5, 87.0], [71.6, 88.0], [71.7, 89.0], [71.8, 91.0], [71.9, 91.0], [72.0, 91.0], [72.1, 92.0], [72.2, 92.0], [72.3, 93.0], [72.4, 93.0], [72.5, 93.0], [72.6, 93.0], [72.7, 93.0], [72.8, 94.0], [72.9, 94.0], [73.0, 94.0], [73.1, 94.0], [73.2, 94.0], [73.3, 95.0], [73.4, 95.0], [73.5, 96.0], [73.6, 96.0], [73.7, 97.0], [73.8, 97.0], [73.9, 97.0], [74.0, 98.0], [74.1, 99.0], [74.2, 99.0], [74.3, 99.0], [74.4, 100.0], [74.5, 100.0], [74.6, 100.0], [74.7, 100.0], [74.8, 101.0], [74.9, 102.0], [75.0, 102.0], [75.1, 103.0], [75.2, 104.0], [75.3, 104.0], [75.4, 104.0], [75.5, 106.0], [75.6, 106.0], [75.7, 106.0], [75.8, 107.0], [75.9, 113.0], [76.0, 114.0], [76.1, 114.0], [76.2, 117.0], [76.3, 117.0], [76.4, 121.0], [76.5, 122.0], [76.6, 123.0], [76.7, 124.0], [76.8, 124.0], [76.9, 125.0], [77.0, 125.0], [77.1, 129.0], [77.2, 133.0], [77.3, 134.0], [77.4, 135.0], [77.5, 137.0], [77.6, 142.0], [77.7, 142.0], [77.8, 153.0], [77.9, 154.0], [78.0, 155.0], [78.1, 157.0], [78.2, 164.0], [78.3, 167.0], [78.4, 170.0], [78.5, 171.0], [78.6, 172.0], [78.7, 173.0], [78.8, 174.0], [78.9, 174.0], [79.0, 175.0], [79.1, 177.0], [79.2, 178.0], [79.3, 178.0], [79.4, 179.0], [79.5, 180.0], [79.6, 181.0], [79.7, 181.0], [79.8, 186.0], [79.9, 186.0], [80.0, 187.0], [80.1, 189.0], [80.2, 192.0], [80.3, 194.0], [80.4, 201.0], [80.5, 201.0], [80.6, 201.0], [80.7, 201.0], [80.8, 203.0], [80.9, 205.0], [81.0, 208.0], [81.1, 209.0], [81.2, 209.0], [81.3, 210.0], [81.4, 214.0], [81.5, 216.0], [81.6, 216.0], [81.7, 218.0], [81.8, 219.0], [81.9, 219.0], [82.0, 219.0], [82.1, 220.0], [82.2, 222.0], [82.3, 223.0], [82.4, 224.0], [82.5, 225.0], [82.6, 225.0], [82.7, 228.0], [82.8, 228.0], [82.9, 231.0], [83.0, 232.0], [83.1, 232.0], [83.2, 233.0], [83.3, 235.0], [83.4, 236.0], [83.5, 236.0], [83.6, 238.0], [83.7, 238.0], [83.8, 238.0], [83.9, 238.0], [84.0, 239.0], [84.1, 243.0], [84.2, 244.0], [84.3, 246.0], [84.4, 247.0], [84.5, 247.0], [84.6, 248.0], [84.7, 249.0], [84.8, 249.0], [84.9, 252.0], [85.0, 257.0], [85.1, 258.0], [85.2, 260.0], [85.3, 276.0], [85.4, 277.0], [85.5, 277.0], [85.6, 279.0], [85.7, 280.0], [85.8, 280.0], [85.9, 280.0], [86.0, 281.0], [86.1, 281.0], [86.2, 281.0], [86.3, 282.0], [86.4, 283.0], [86.5, 285.0], [86.6, 286.0], [86.7, 289.0], [86.8, 289.0], [86.9, 289.0], [87.0, 290.0], [87.1, 290.0], [87.2, 293.0], [87.3, 296.0], [87.4, 297.0], [87.5, 297.0], [87.6, 297.0], [87.7, 298.0], [87.8, 298.0], [87.9, 298.0], [88.0, 299.0], [88.1, 299.0], [88.2, 300.0], [88.3, 300.0], [88.4, 300.0], [88.5, 301.0], [88.6, 301.0], [88.7, 301.0], [88.8, 303.0], [88.9, 303.0], [89.0, 304.0], [89.1, 304.0], [89.2, 304.0], [89.3, 305.0], [89.4, 305.0], [89.5, 306.0], [89.6, 307.0], [89.7, 307.0], [89.8, 307.0], [89.9, 309.0], [90.0, 310.0], [90.1, 310.0], [90.2, 310.0], [90.3, 311.0], [90.4, 311.0], [90.5, 311.0], [90.6, 312.0], [90.7, 312.0], [90.8, 313.0], [90.9, 313.0], [91.0, 313.0], [91.1, 313.0], [91.2, 313.0], [91.3, 313.0], [91.4, 314.0], [91.5, 314.0], [91.6, 314.0], [91.7, 314.0], [91.8, 314.0], [91.9, 315.0], [92.0, 315.0], [92.1, 315.0], [92.2, 316.0], [92.3, 316.0], [92.4, 316.0], [92.5, 316.0], [92.6, 316.0], [92.7, 316.0], [92.8, 316.0], [92.9, 316.0], [93.0, 317.0], [93.1, 317.0], [93.2, 317.0], [93.3, 317.0], [93.4, 317.0], [93.5, 318.0], [93.6, 321.0], [93.7, 323.0], [93.8, 323.0], [93.9, 324.0], [94.0, 324.0], [94.1, 325.0], [94.2, 325.0], [94.3, 325.0], [94.4, 329.0], [94.5, 329.0], [94.6, 329.0], [94.7, 329.0], [94.8, 330.0], [94.9, 331.0], [95.0, 331.0], [95.1, 332.0], [95.2, 332.0], [95.3, 332.0], [95.4, 332.0], [95.5, 333.0], [95.6, 333.0], [95.7, 334.0], [95.8, 334.0], [95.9, 335.0], [96.0, 335.0], [96.1, 335.0], [96.2, 335.0], [96.3, 335.0], [96.4, 336.0], [96.5, 336.0], [96.6, 336.0], [96.7, 336.0], [96.8, 336.0], [96.9, 336.0], [97.0, 337.0], [97.1, 337.0], [97.2, 337.0], [97.3, 337.0], [97.4, 337.0], [97.5, 338.0], [97.6, 338.0], [97.7, 338.0], [97.8, 339.0], [97.9, 339.0], [98.0, 340.0], [98.1, 340.0], [98.2, 342.0], [98.3, 342.0], [98.4, 342.0], [98.5, 342.0], [98.6, 343.0], [98.7, 343.0], [98.8, 345.0], [98.9, 345.0], [99.0, 345.0], [99.1, 345.0], [99.2, 345.0], [99.3, 345.0], [99.4, 346.0], [99.5, 347.0], [99.6, 348.0], [99.7, 348.0], [99.8, 348.0], [99.9, 348.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1000.0, "series": [{"data": [[0.0, 1000.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 3.0], [100.0, 5.0], [200.0, 3.0], [300.0, 7.0], [400.0, 6.0], [500.0, 4.0], [600.0, 5.0], [700.0, 6.0], [800.0, 7.0], [900.0, 7.0], [1000.0, 4.0], [1100.0, 6.0], [1200.0, 3.0], [1300.0, 8.0], [1400.0, 10.0], [1500.0, 5.0], [1600.0, 7.0], [1700.0, 6.0], [1800.0, 6.0], [1900.0, 5.0], [2000.0, 4.0], [2100.0, 6.0], [2200.0, 7.0], [2300.0, 5.0], [2400.0, 6.0], [2500.0, 3.0], [2600.0, 7.0], [2700.0, 3.0], [2800.0, 5.0], [2900.0, 7.0], [3000.0, 11.0], [3100.0, 6.0], [3200.0, 3.0], [3300.0, 6.0], [3400.0, 7.0], [3500.0, 6.0], [3600.0, 9.0], [3700.0, 2.0], [3800.0, 6.0], [3900.0, 7.0], [4000.0, 5.0], [4100.0, 7.0], [4200.0, 5.0], [4300.0, 9.0], [4400.0, 7.0], [4500.0, 5.0], [4600.0, 5.0], [4700.0, 7.0], [4800.0, 6.0], [4900.0, 6.0], [5000.0, 3.0], [5100.0, 5.0], [5200.0, 5.0], [5300.0, 7.0], [5400.0, 4.0], [5500.0, 5.0], [5600.0, 8.0], [5700.0, 6.0], [5800.0, 7.0], [5900.0, 5.0], [6000.0, 6.0], [6100.0, 6.0], [6200.0, 7.0], [6300.0, 4.0], [6400.0, 6.0], [6500.0, 5.0], [6600.0, 6.0], [6700.0, 6.0], [6800.0, 9.0], [6900.0, 9.0], [7000.0, 6.0], [7100.0, 6.0], [7200.0, 6.0], [7300.0, 8.0], [7400.0, 3.0], [7500.0, 7.0], [7600.0, 4.0], [7700.0, 4.0], [7800.0, 7.0], [7900.0, 5.0], [8000.0, 6.0], [8100.0, 7.0], [8200.0, 3.0], [8300.0, 7.0], [8400.0, 8.0], [8500.0, 5.0], [8600.0, 3.0], [8700.0, 7.0], [8800.0, 3.0], [8900.0, 7.0], [9000.0, 6.0], [9100.0, 7.0], [9200.0, 4.0], [9300.0, 6.0], [9400.0, 5.0], [9500.0, 5.0], [9600.0, 4.0], [9700.0, 6.0], [9800.0, 4.0], [9900.0, 7.0], [10000.0, 3.0], [10100.0, 5.0], [10200.0, 3.0], [10300.0, 5.0], [10400.0, 4.0], [10500.0, 4.0], [10600.0, 6.0], [10700.0, 6.0], [10800.0, 2.0], [10900.0, 7.0], [11000.0, 4.0], [11100.0, 5.0], [11200.0, 3.0], [11300.0, 6.0], [11400.0, 3.0], [11500.0, 4.0], [11600.0, 7.0], [11700.0, 4.0], [11800.0, 3.0], [11900.0, 6.0], [12000.0, 4.0], [12100.0, 5.0], [12200.0, 7.0], [12300.0, 2.0], [12400.0, 9.0], [12500.0, 4.0], [12600.0, 4.0], [12700.0, 3.0], [12800.0, 5.0], [12900.0, 6.0], [13000.0, 7.0], [13100.0, 5.0], [13200.0, 5.0], [13300.0, 6.0], [13400.0, 4.0], [13500.0, 5.0], [13600.0, 4.0], [13700.0, 4.0], [13800.0, 7.0], [13900.0, 6.0], [14000.0, 6.0], [14100.0, 5.0], [14200.0, 7.0], [14300.0, 5.0], [14400.0, 5.0], [14500.0, 5.0], [14600.0, 2.0], [14700.0, 4.0], [14800.0, 7.0], [14900.0, 5.0], [15000.0, 6.0], [15100.0, 3.0], [15200.0, 8.0], [15300.0, 3.0], [15400.0, 5.0], [15500.0, 4.0], [15600.0, 5.0], [15700.0, 5.0], [15800.0, 7.0], [15900.0, 4.0], [16000.0, 3.0], [16100.0, 2.0], [16200.0, 9.0], [16300.0, 2.0], [17200.0, 4.0], [16500.0, 5.0], [16400.0, 2.0], [16600.0, 4.0], [16700.0, 1.0], [16800.0, 6.0], [16900.0, 3.0], [17000.0, 3.0], [17100.0, 4.0], [17300.0, 3.0], [17400.0, 3.0], [18200.0, 3.0], [17500.0, 4.0], [17600.0, 4.0], [17700.0, 4.0], [17800.0, 3.0], [17900.0, 2.0], [18000.0, 7.0], [18100.0, 4.0], [18300.0, 7.0], [18400.0, 5.0], [18500.0, 6.0], [18600.0, 3.0], [18700.0, 7.0], [18800.0, 5.0], [18900.0, 5.0], [19000.0, 7.0], [19100.0, 1.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 744.0], [300.0, 118.0], [200.0, 78.0], [100.0, 60.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 19100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 60.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2024.0, "series": [{"data": [[0.0, 2024.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 60.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 916.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 34.480000000000054, "minX": 1.66896588E12, "maxY": 481.4909999999995, "series": [{"data": [[1.66896588E12, 481.4909999999995]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.66896588E12, 34.480000000000054]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.66896588E12, 130.9989999999999]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896588E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.842696629213483, "minX": 1.0, "maxY": 19118.0, "series": [{"data": [[2.0, 6.5], [3.0, 7.857142857142858], [4.0, 6.888888888888889], [5.0, 7.363636363636363], [6.0, 10.88888888888889], [7.0, 9.666666666666666], [8.0, 12.714285714285717], [9.0, 11.944444444444445], [10.0, 13.458333333333334], [11.0, 14.74074074074074], [12.0, 17.785714285714285], [13.0, 20.473684210526315], [14.0, 21.230769230769234], [15.0, 17.444444444444443], [16.0, 19.875], [17.0, 20.888888888888886], [18.0, 21.555555555555557], [19.0, 26.384615384615383], [20.0, 24.999999999999996], [21.0, 31.0], [22.0, 25.857142857142858], [23.0, 24.647058823529413], [24.0, 35.2], [25.0, 29.687499999999996], [26.0, 30.411764705882355], [27.0, 37.23529411764706], [28.0, 34.52941176470589], [29.0, 37.35294117647059], [30.0, 38.041666666666664], [31.0, 39.27272727272727], [33.0, 43.28571428571428], [32.0, 40.26315789473685], [35.0, 39.727272727272734], [34.0, 37.38095238095238], [36.0, 33.09090909090909], [37.0, 40.6], [39.0, 41.121212121212125], [38.0, 39.99999999999999], [40.0, 37.279999999999994], [41.0, 34.76], [43.0, 44.72727272727273], [42.0, 41.42857142857143], [44.0, 44.22222222222222], [45.0, 43.411764705882355], [47.0, 46.05882352941176], [46.0, 44.666666666666664], [49.0, 47.36363636363637], [48.0, 45.0625], [51.0, 48.50000000000001], [50.0, 42.99999999999999], [53.0, 48.13333333333333], [52.0, 43.714285714285715], [55.0, 53.62499999999999], [54.0, 44.86666666666667], [57.0, 48.9], [56.0, 49.5], [59.0, 48.16], [58.0, 56.4], [61.0, 51.0], [60.0, 51.25], [62.0, 51.5], [67.0, 48.5], [64.0, 49.0], [66.0, 53.666666666666664], [65.0, 54.5], [71.0, 63.0], [70.0, 58.0], [69.0, 58.4], [68.0, 66.5], [74.0, 46.375], [73.0, 59.285714285714285], [75.0, 46.5], [72.0, 56.28571428571429], [76.0, 47.111111111111114], [79.0, 66.0], [78.0, 55.57142857142858], [77.0, 61.5], [83.0, 63.0], [81.0, 62.0], [80.0, 56.0], [86.0, 58.0], [85.0, 67.5], [1.0, 6.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[34.480000000000054, 34.82300000000001]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 19094.0], [3.0, 19084.0], [4.0, 19067.0], [5.0, 19049.0], [6.0, 19012.0], [7.0, 19024.0], [8.0, 19011.0], [9.0, 18982.0], [10.0, 18967.0], [11.0, 18936.0], [12.0, 18921.0], [13.0, 18904.0], [14.0, 18872.0], [15.0, 18843.0], [16.0, 18832.0], [17.0, 18822.0], [18.0, 18806.0], [19.0, 18799.0], [20.0, 18787.0], [21.0, 18759.0], [22.0, 18757.0], [23.0, 18732.0], [24.0, 18716.0], [25.0, 18710.0], [26.0, 18692.0], [27.0, 18636.0], [28.0, 18606.0], [29.0, 18588.0], [30.0, 18584.0], [31.0, 18576.0], [33.0, 18536.0], [32.0, 18550.0], [35.0, 18491.0], [34.0, 18523.0], [37.0, 18443.0], [36.0, 18446.0], [39.0, 18414.0], [38.0, 18414.0], [41.0, 18392.0], [40.0, 18387.0], [43.0, 18358.0], [42.0, 18359.0], [45.0, 18318.0], [44.0, 18346.0], [46.0, 9188.0], [47.0, 18258.0], [48.0, 9155.5], [49.0, 18208.0], [50.0, 9135.5], [51.0, 18137.0], [53.0, 18107.0], [52.0, 18121.0], [55.0, 18069.0], [54.0, 18087.0], [57.0, 18032.0], [56.0, 18048.0], [59.0, 18006.0], [58.0, 18026.0], [61.0, 17984.0], [60.0, 18008.0], [63.0, 17881.0], [62.0, 17940.0], [67.0, 17753.0], [66.0, 17779.0], [65.0, 17812.0], [64.0, 17847.0], [71.0, 17658.0], [70.0, 17694.0], [69.0, 17720.0], [68.0, 17730.0], [75.0, 17546.0], [74.0, 17569.0], [73.0, 17604.0], [72.0, 17634.0], [79.0, 17450.0], [78.0, 17470.0], [77.0, 17510.0], [76.0, 17520.0], [83.0, 17332.0], [82.0, 17359.0], [81.0, 17395.0], [80.0, 17413.0], [87.0, 17217.0], [86.0, 17239.0], [85.0, 17267.0], [84.0, 17299.0], [91.0, 17115.0], [90.0, 17128.0], [89.0, 17169.0], [88.0, 17197.0], [95.0, 16971.0], [94.0, 17036.0], [93.0, 17060.0], [92.0, 17093.0], [99.0, 16879.0], [98.0, 16886.0], [97.0, 16906.0], [96.0, 16946.0], [102.0, 11266.333333333334], [103.0, 16842.0], [100.0, 16863.0], [107.0, 16648.0], [106.0, 16668.0], [105.0, 16691.0], [104.0, 16793.0], [111.0, 16529.0], [110.0, 16577.0], [109.0, 16581.0], [108.0, 16617.0], [115.0, 16412.0], [114.0, 16449.0], [113.0, 16509.0], [112.0, 16506.0], [119.0, 16289.0], [118.0, 16284.0], [117.0, 16310.0], [116.0, 16350.0], [123.0, 16253.0], [121.0, 16253.0], [127.0, 16159.0], [126.0, 16218.0], [125.0, 16242.0], [124.0, 16250.0], [135.0, 15904.0], [134.0, 15920.0], [133.0, 15951.0], [132.0, 15990.0], [131.0, 16024.0], [130.0, 16055.0], [129.0, 16054.0], [128.0, 16159.0], [143.0, 7960.5], [142.0, 15816.0], [141.0, 15832.0], [140.0, 15854.0], [139.0, 15851.0], [138.0, 15864.0], [137.0, 15894.0], [136.0, 15890.0], [151.0, 15643.0], [150.0, 15647.0], [149.0, 15655.0], [148.0, 15666.0], [147.0, 15726.0], [146.0, 15733.0], [145.0, 15745.0], [144.0, 15760.0], [159.0, 15465.0], [158.0, 15456.0], [157.0, 15477.0], [156.0, 15535.0], [155.0, 15542.0], [154.0, 15557.0], [153.0, 15576.0], [152.0, 15639.0], [167.0, 15223.0], [166.0, 15271.0], [165.0, 15293.0], [164.0, 15323.0], [163.0, 15316.0], [162.0, 15367.0], [161.0, 15409.0], [160.0, 15415.0], [173.0, 7671.0], [175.0, 15130.0], [174.0, 15154.0], [172.0, 15220.0], [171.0, 15226.0], [170.0, 15228.0], [169.0, 15234.0], [168.0, 15219.0], [176.0, 7625.0], [183.0, 14986.0], [182.0, 14987.0], [181.0, 15014.0], [180.0, 15044.0], [179.0, 15047.0], [178.0, 15056.0], [177.0, 15086.0], [191.0, 14832.0], [190.0, 14854.0], [189.0, 14860.5], [187.0, 14892.0], [186.0, 14919.0], [185.0, 14916.0], [184.0, 14956.0], [199.0, 14603.0], [198.0, 14688.0], [197.0, 14714.0], [196.0, 14729.0], [195.0, 14737.0], [194.0, 14734.0], [193.0, 14801.0], [192.0, 14810.0], [207.0, 14426.0], [206.0, 14472.0], [205.0, 14470.0], [204.0, 14523.0], [203.0, 14536.0], [202.0, 14578.0], [201.0, 14598.0], [200.0, 14599.0], [215.0, 14294.0], [214.0, 14311.0], [213.0, 14364.0], [212.0, 14362.0], [211.0, 14368.0], [210.0, 14387.0], [209.0, 14405.0], [208.0, 14421.0], [216.0, 7230.5], [223.0, 14155.0], [222.0, 14198.0], [221.0, 14218.0], [220.0, 14218.0], [219.0, 14254.0], [218.0, 14257.0], [217.0, 14256.0], [231.0, 14017.0], [230.0, 14024.0], [229.0, 14063.0], [228.0, 14084.0], [227.0, 14089.0], [226.0, 14101.0], [225.0, 14120.0], [224.0, 14128.0], [239.0, 13885.0], [238.0, 13900.0], [237.0, 13916.0], [236.0, 13947.0], [235.0, 13950.0], [234.0, 13956.0], [233.0, 13992.0], [232.0, 14020.0], [247.0, 13750.0], [246.0, 13770.0], [245.0, 13804.0], [244.0, 13814.0], [243.0, 13836.0], [242.0, 13854.0], [241.0, 13860.0], [240.0, 13877.0], [255.0, 13573.0], [254.0, 13576.0], [253.0, 13606.0], [252.0, 13619.0], [251.0, 13654.0], [250.0, 13662.0], [249.0, 13705.0], [248.0, 13720.0], [270.0, 13261.0], [271.0, 13250.0], [269.0, 13292.0], [268.0, 13313.0], [267.0, 13320.0], [266.0, 13327.0], [265.0, 13348.0], [264.0, 13374.0], [263.0, 13385.0], [257.0, 13543.0], [256.0, 13549.0], [259.0, 13488.0], [258.0, 13501.0], [262.0, 13413.0], [261.0, 13455.0], [260.0, 13488.0], [287.0, 12944.0], [285.0, 6622.5], [284.0, 6629.5], [275.0, 13180.0], [274.0, 13195.0], [273.0, 13219.0], [272.0, 13234.0], [286.0, 12990.0], [283.0, 13022.0], [282.0, 13039.0], [281.0, 13064.0], [280.0, 13072.0], [279.0, 13095.0], [278.0, 13116.0], [277.0, 13146.0], [276.0, 13166.0], [302.0, 12660.0], [288.0, 6597.5], [289.0, 12947.0], [291.0, 12904.0], [290.0, 12922.0], [295.0, 12829.0], [294.0, 12869.0], [293.0, 12881.0], [292.0, 12891.0], [303.0, 12625.0], [301.0, 12675.0], [300.0, 12698.0], [299.0, 12734.0], [298.0, 12747.0], [297.0, 12789.0], [296.0, 12816.0], [318.0, 12311.0], [319.0, 12293.0], [317.0, 12399.0], [316.0, 12437.0], [315.0, 12439.0], [314.0, 12455.0], [313.0, 12461.0], [312.0, 12472.0], [311.0, 12467.0], [305.0, 12570.0], [304.0, 12599.0], [307.0, 12527.0], [306.0, 12556.0], [310.0, 12458.0], [309.0, 12490.0], [308.0, 12499.0], [334.0, 12041.0], [335.0, 11992.0], [333.0, 12043.0], [332.0, 12091.5], [330.0, 12108.0], [329.0, 12120.0], [328.0, 12127.0], [327.0, 12129.0], [321.0, 12288.0], [320.0, 12290.0], [323.0, 12222.0], [322.0, 12247.0], [326.0, 12170.0], [325.0, 12207.0], [324.0, 12207.0], [350.0, 11654.0], [351.0, 11636.0], [349.0, 11676.0], [348.0, 11691.0], [347.0, 11706.0], [346.0, 11726.0], [345.0, 11758.0], [344.0, 11784.0], [343.0, 11806.0], [337.0, 11966.0], [336.0, 11989.0], [339.0, 11925.0], [338.0, 11933.0], [342.0, 11861.0], [341.0, 11860.0], [340.0, 11901.0], [366.0, 11316.0], [367.0, 11306.0], [365.0, 11328.0], [364.0, 11368.0], [363.0, 11388.0], [362.0, 11396.0], [361.0, 11414.0], [360.0, 11437.0], [359.0, 11490.0], [353.0, 11627.0], [352.0, 11634.0], [355.0, 11564.0], [354.0, 11608.0], [358.0, 11513.0], [357.0, 11520.0], [356.0, 11525.0], [382.0, 10958.0], [383.0, 10953.0], [381.0, 10982.0], [380.0, 10992.0], [379.0, 11026.0], [378.0, 11032.0], [377.0, 11058.0], [376.0, 11057.0], [375.0, 11114.0], [369.0, 11256.0], [368.0, 11275.0], [371.0, 11186.0], [370.0, 11233.0], [374.0, 11134.0], [373.0, 11153.0], [372.0, 11162.0], [398.0, 10665.0], [389.0, 5553.5], [388.0, 5580.0], [399.0, 10658.0], [397.0, 10671.0], [396.0, 10690.0], [391.0, 10758.0], [387.0, 10850.0], [386.0, 10904.0], [385.0, 10936.5], [390.0, 10777.0], [395.0, 10697.0], [394.0, 10704.0], [393.0, 10726.0], [392.0, 10741.0], [414.0, 10276.0], [415.0, 10262.0], [413.0, 10335.0], [412.0, 10360.0], [411.0, 10383.0], [410.0, 10381.5], [408.0, 10426.0], [407.0, 10431.0], [401.0, 10573.0], [400.0, 10653.0], [403.0, 10561.0], [402.0, 10575.0], [406.0, 10498.0], [405.0, 10499.0], [404.0, 10549.0], [423.0, 5229.5], [420.0, 5247.0], [422.0, 5221.5], [421.0, 5250.0], [430.0, 5150.0], [431.0, 9903.0], [425.0, 9983.0], [424.0, 10015.0], [429.0, 9920.0], [428.0, 9953.0], [419.0, 10162.0], [418.0, 10171.0], [417.0, 10175.0], [416.0, 10229.0], [427.0, 9945.0], [426.0, 9977.0], [446.0, 9592.0], [447.0, 9578.0], [445.0, 9640.0], [444.0, 9673.0], [443.0, 9672.0], [442.0, 9685.0], [441.0, 9705.0], [440.0, 9715.0], [439.0, 9715.0], [433.0, 9895.0], [432.0, 9894.0], [435.0, 9800.0], [434.0, 9836.0], [438.0, 9733.0], [437.0, 9771.0], [436.0, 9787.0], [462.0, 9265.0], [463.0, 9246.0], [461.0, 9303.0], [460.0, 9357.0], [459.0, 9375.0], [458.0, 9384.0], [457.0, 9390.0], [456.0, 9398.0], [455.0, 9433.0], [449.0, 9511.0], [448.0, 9548.0], [451.0, 9497.0], [450.0, 9504.0], [454.0, 9443.0], [453.0, 9490.0], [452.0, 9495.0], [478.0, 9024.0], [479.0, 8996.0], [477.0, 9064.0], [476.0, 9098.0], [475.0, 9071.0], [474.0, 9084.0], [473.0, 9085.0], [472.0, 9111.0], [471.0, 9121.0], [465.0, 9220.0], [464.0, 9214.0], [467.0, 9189.0], [466.0, 9188.0], [470.0, 9132.0], [469.0, 9165.0], [468.0, 9167.0], [494.0, 8707.0], [495.0, 4565.0], [493.0, 8729.0], [492.0, 8737.0], [491.0, 8762.0], [490.0, 8769.0], [489.0, 8798.0], [488.0, 8829.0], [487.0, 8859.0], [481.0, 8964.0], [480.0, 8984.0], [483.0, 8952.0], [482.0, 8959.0], [486.0, 8880.0], [485.0, 8910.0], [484.0, 8947.0], [510.0, 8412.0], [500.0, 3152.3333333333335], [501.0, 8558.0], [503.0, 8517.0], [497.0, 8635.0], [496.0, 8657.0], [499.0, 8597.0], [498.0, 8606.0], [502.0, 8535.0], [511.0, 8409.0], [509.0, 8433.0], [508.0, 8445.0], [507.0, 8445.0], [506.0, 8447.0], [505.0, 8459.0], [504.0, 8475.0], [540.0, 7885.0], [542.0, 4179.5], [543.0, 7868.0], [529.0, 8080.0], [528.0, 8109.0], [531.0, 8048.0], [530.0, 8059.0], [533.0, 8040.0], [532.0, 8049.0], [541.0, 7876.0], [539.0, 7906.0], [538.0, 7914.0], [537.0, 7949.0], [536.0, 7983.0], [527.0, 8120.0], [512.0, 8375.0], [514.0, 8329.0], [513.0, 8361.0], [516.0, 8318.0], [515.0, 8319.0], [519.0, 8263.0], [518.0, 8303.5], [526.0, 8135.0], [525.0, 8141.0], [524.0, 8160.0], [523.0, 8180.0], [522.0, 8196.0], [521.0, 8239.0], [520.0, 8252.0], [535.0, 7988.0], [534.0, 8002.0], [572.0, 7304.0], [546.0, 4164.0], [559.0, 4017.0], [545.0, 7849.0], [544.0, 7863.0], [558.0, 7536.0], [557.0, 7566.0], [556.0, 7580.0], [555.0, 7590.0], [554.0, 7635.0], [553.0, 7658.0], [552.0, 7658.0], [570.0, 3917.0], [575.0, 7253.0], [561.0, 7505.0], [560.0, 7503.0], [563.0, 7485.0], [562.0, 7482.0], [565.0, 7395.0], [564.0, 7455.0], [567.0, 7360.0], [566.0, 7369.0], [574.0, 7268.0], [573.0, 7290.0], [571.0, 7316.0], [569.0, 7344.0], [568.0, 7353.0], [551.0, 7691.0], [550.0, 7733.0], [549.0, 7729.0], [548.0, 7774.0], [547.0, 7780.0], [604.0, 6835.0], [594.0, 3737.5], [593.0, 6961.0], [592.0, 6967.0], [595.0, 6944.0], [597.0, 6928.0], [596.0, 6939.0], [606.0, 6825.0], [605.0, 6825.0], [603.0, 6836.0], [602.0, 6859.0], [601.0, 6881.0], [600.0, 6890.0], [591.0, 6991.0], [577.0, 7240.0], [576.0, 7245.0], [579.0, 7194.0], [578.0, 7200.0], [581.0, 7170.0], [580.0, 7175.0], [583.0, 7137.0], [582.0, 7153.0], [590.0, 7005.0], [589.0, 7025.0], [588.0, 7047.0], [587.0, 7064.0], [586.0, 7078.0], [585.0, 7094.0], [584.0, 7113.0], [599.0, 6903.0], [598.0, 6923.0], [636.0, 6284.0], [639.0, 6247.0], [625.0, 6507.0], [624.0, 6527.0], [627.0, 6479.0], [626.0, 6483.0], [629.0, 6423.0], [628.0, 6477.0], [638.0, 6260.0], [637.0, 6270.0], [635.0, 6326.0], [634.0, 6342.0], [633.0, 6344.0], [632.0, 6372.0], [623.0, 6539.0], [609.0, 6798.0], [608.0, 6808.0], [611.0, 6755.0], [610.0, 6763.0], [613.0, 6715.0], [612.0, 6726.0], [615.0, 6684.0], [614.0, 6701.0], [622.0, 6548.0], [621.0, 6561.0], [620.0, 6618.0], [619.0, 6618.0], [618.0, 6620.0], [617.0, 6648.0], [616.0, 6656.0], [631.0, 6400.0], [630.0, 6410.0], [668.0, 5777.0], [665.0, 3184.0], [671.0, 5726.0], [657.0, 5923.0], [656.0, 5945.0], [659.0, 5902.0], [658.0, 5911.0], [661.0, 5889.0], [660.0, 5893.0], [670.0, 5733.0], [669.0, 5756.0], [667.0, 5787.0], [666.0, 5800.0], [664.0, 5829.0], [655.0, 5974.0], [641.0, 6211.0], [640.0, 6244.0], [643.0, 6190.0], [642.0, 6206.0], [645.0, 6161.0], [644.0, 6183.0], [647.0, 6118.0], [646.0, 6120.0], [654.0, 6006.0], [653.0, 6018.0], [652.0, 6026.0], [651.0, 6055.0], [650.0, 6082.0], [649.0, 6094.0], [648.0, 6101.0], [663.0, 5838.0], [662.0, 5854.0], [697.0, 5288.0], [701.0, 5220.0], [694.0, 2969.5], [693.0, 5357.0], [692.0, 5378.0], [691.0, 5383.0], [690.0, 5398.0], [689.0, 5438.0], [688.0, 5440.0], [696.0, 3743.0], [679.0, 5624.0], [678.0, 5628.0], [677.0, 5653.0], [676.0, 5656.0], [675.0, 5671.0], [674.0, 5679.0], [673.0, 5699.0], [672.0, 5709.0], [687.0, 5471.0], [686.0, 5474.0], [685.0, 5528.0], [684.0, 5537.0], [683.0, 5590.0], [682.0, 5590.0], [681.0, 5595.0], [680.0, 5617.0], [703.0, 5183.0], [702.0, 5193.0], [700.0, 5229.0], [699.0, 5262.0], [698.0, 5271.0], [732.0, 4630.0], [705.0, 2868.5], [704.0, 5163.0], [707.0, 5094.0], [706.0, 5103.0], [709.0, 5037.0], [708.0, 5061.0], [711.0, 4967.0], [710.0, 4996.0], [719.0, 4858.0], [718.0, 4870.0], [717.0, 4885.0], [716.0, 4884.0], [715.0, 4901.0], [713.0, 4915.0], [712.0, 4942.0], [735.0, 4588.0], [721.0, 4833.0], [720.0, 4853.0], [723.0, 4795.0], [722.0, 4797.0], [725.0, 4754.0], [724.0, 4774.0], [727.0, 4736.0], [726.0, 4741.0], [734.0, 4590.0], [733.0, 4614.0], [731.0, 4638.0], [730.0, 4664.0], [729.0, 4683.0], [728.0, 4720.0], [764.0, 4130.0], [746.0, 2510.0], [745.0, 4410.0], [744.0, 4412.0], [747.0, 4368.0], [749.0, 4362.0], [748.0, 4368.0], [751.0, 4347.0], [737.0, 4519.0], [736.0, 4534.0], [739.0, 4496.0], [738.0, 4505.0], [741.0, 4460.0], [740.0, 4473.0], [743.0, 4419.0], [742.0, 4445.0], [750.0, 4344.0], [767.0, 4095.0], [753.0, 4321.0], [752.0, 4343.0], [755.0, 4269.0], [754.0, 4311.0], [757.0, 4262.0], [756.0, 4264.0], [759.0, 4202.0], [758.0, 4223.0], [766.0, 4103.0], [765.0, 4109.0], [763.0, 4130.0], [762.0, 4155.0], [761.0, 4164.0], [760.0, 4191.0], [796.0, 3604.0], [768.0, 2367.5], [769.0, 4069.0], [771.0, 4033.0], [770.0, 4056.0], [773.0, 3994.0], [772.0, 3997.0], [775.0, 3957.0], [774.0, 3966.0], [783.0, 3823.0], [782.0, 3820.0], [781.0, 3851.0], [780.0, 3862.0], [779.0, 3878.0], [778.0, 3910.0], [777.0, 3939.0], [776.0, 3946.0], [799.0, 3510.0], [785.0, 3784.0], [784.0, 3804.0], [787.0, 3695.0], [786.0, 3738.0], [789.0, 3687.0], [788.0, 3689.0], [791.0, 3657.0], [790.0, 3662.0], [798.0, 3582.0], [797.0, 3586.0], [795.0, 3598.0], [794.0, 3625.0], [793.0, 3629.0], [792.0, 3646.0], [828.0, 3054.0], [802.0, 2090.5], [801.0, 3502.0], [800.0, 3521.0], [803.0, 3491.0], [805.0, 3453.0], [804.0, 3457.0], [807.0, 3438.0], [806.0, 3436.0], [815.0, 3257.0], [814.0, 3318.0], [813.0, 3318.0], [811.0, 3352.0], [810.0, 3353.0], [809.0, 3387.0], [808.0, 3431.0], [831.0, 3024.0], [817.0, 3220.0], [816.0, 3231.0], [819.0, 3181.0], [818.0, 3189.0], [821.0, 3162.0], [820.0, 3172.0], [823.0, 3107.0], [822.0, 3114.0], [830.0, 3025.0], [829.0, 3037.0], [827.0, 3055.0], [826.0, 3074.0], [825.0, 3078.0], [824.0, 3091.0], [861.0, 2478.0], [840.0, 1822.5], [841.0, 2911.0], [843.0, 2875.0], [842.0, 2894.0], [845.0, 2824.0], [844.0, 2859.0], [847.0, 2738.0], [832.0, 3016.0], [834.0, 3005.0], [833.0, 3011.0], [836.0, 2974.0], [835.0, 2979.0], [838.0, 2948.0], [837.0, 2964.0], [846.0, 2830.0], [839.0, 1830.0], [850.0, 1705.5], [849.0, 2708.0], [848.0, 2711.0], [851.0, 2635.0], [853.0, 2614.0], [852.0, 2623.0], [855.0, 2606.0], [854.0, 2616.0], [863.0, 2454.0], [862.0, 2477.0], [860.0, 2494.0], [859.0, 2527.0], [858.0, 2577.0], [857.0, 2592.0], [856.0, 2606.0], [893.0, 1899.0], [869.0, 1553.0], [878.0, 1484.0], [877.0, 2216.0], [876.0, 2212.0], [875.0, 2247.0], [874.0, 2262.0], [873.0, 2260.0], [872.0, 2274.0], [879.0, 2147.0], [864.0, 2433.0], [866.0, 2382.0], [865.0, 2403.0], [868.0, 2360.0], [867.0, 2368.0], [885.0, 1400.5], [884.0, 2047.0], [883.0, 2102.0], [882.0, 2117.0], [881.0, 2143.0], [880.0, 2146.0], [887.0, 2013.0], [886.0, 2030.0], [895.0, 1855.0], [894.0, 1873.0], [892.0, 1900.0], [891.0, 1919.0], [890.0, 1923.0], [889.0, 1950.0], [888.0, 1973.0], [871.0, 2279.0], [870.0, 2317.0], [924.0, 1414.0], [927.0, 1396.0], [913.0, 1562.0], [912.0, 1588.0], [915.0, 1542.0], [914.0, 1550.0], [917.0, 1486.0], [916.0, 1524.0], [926.0, 1407.0], [925.0, 1409.0], [923.0, 1427.0], [922.0, 1461.0], [921.0, 1463.0], [920.0, 1465.0], [911.0, 1604.0], [897.0, 1835.0], [896.0, 1844.0], [899.0, 1786.0], [898.0, 1836.0], [901.0, 1764.0], [900.0, 1774.0], [903.0, 1730.0], [902.0, 1749.0], [910.0, 1603.0], [909.0, 1633.0], [908.0, 1657.0], [907.0, 1674.0], [905.0, 1685.0], [904.0, 1708.0], [919.0, 1467.0], [918.0, 1485.0], [957.0, 859.0], [950.0, 881.5], [949.0, 961.0], [948.0, 986.0], [947.0, 1004.0], [946.0, 1035.0], [945.0, 1043.0], [944.0, 1070.0], [959.0, 840.0], [958.0, 847.0], [956.0, 880.5], [954.0, 916.0], [953.0, 901.0], [952.0, 932.0], [943.0, 1107.0], [929.0, 1354.0], [928.0, 1388.0], [931.0, 1320.0], [930.0, 1333.0], [933.0, 1308.0], [932.0, 1319.0], [935.0, 1252.0], [934.0, 1305.0], [942.0, 1109.0], [941.0, 1137.0], [940.0, 1187.0], [939.0, 1188.0], [938.0, 1195.0], [937.0, 1203.0], [936.0, 1216.0], [951.0, 933.0], [960.0, 818.0], [1.0, 19118.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[481.4909999999995, 9032.393]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 5.840000000000001], [3.0, 5.316666666666666], [4.0, 5.550000000000001], [5.0, 4.842696629213483], [6.0, 5.191011235955056], [7.0, 5.369230769230769], [8.0, 6.894736842105265], [9.0, 9.0], [10.0, 8.391304347826086], [11.0, 9.133333333333335], [12.0, 16.357142857142858], [13.0, 12.909090909090907], [14.0, 12.125], [15.0, 10.75], [16.0, 11.0], [17.0, 12.5], [18.0, 13.857142857142858], [19.0, 14.0], [20.0, 14.0], [22.0, 25.625000000000004], [23.0, 19.4], [24.0, 30.333333333333332], [25.0, 13.0], [26.0, 35.25], [27.0, 30.666666666666664], [28.0, 45.0], [30.0, 44.0], [31.0, 41.0], [32.0, 41.0], [49.0, 10.0], [77.0, 11.0], [102.0, 12.0], [165.0, 34.0], [197.0, 21.0], [211.0, 18.0], [268.0, 36.0], [265.0, 6.0], [266.0, 11.0], [1.0, 6.833333333333334], [300.0, 17.5], [298.0, 31.0], [301.0, 16.0], [311.0, 20.0], [325.0, 76.83333333333334], [327.0, 87.72857142857147], [326.0, 73.0], [330.0, 16.75], [321.0, 17.4], [320.0, 21.0], [323.0, 15.0], [337.0, 188.29166666666663], [339.0, 226.23809523809524], [338.0, 174.0], [341.0, 261.0], [348.0, 285.18], [344.0, 282.59999999999997], [346.0, 275.8571428571429], [340.0, 219.0], [359.0, 13.5], [352.0, 34.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[131.0059999999999, 78.88300000000012]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 960.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 13083.333333333334, "minX": 1.66896588E12, "maxY": 2.1083534133333333E7, "series": [{"data": [[1.66896588E12, 2.1083534133333333E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66896588E12, 13083.333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896588E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 34.82300000000001, "minX": 1.66896588E12, "maxY": 9032.393, "series": [{"data": [[1.66896588E12, 34.82300000000001]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66896588E12, 9032.393]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66896588E12, 78.88300000000012]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896588E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 34.805999999999976, "minX": 1.66896588E12, "maxY": 8957.219, "series": [{"data": [[1.66896588E12, 34.805999999999976]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66896588E12, 8957.219]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66896588E12, 77.95500000000011]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896588E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 4.8200000000000065, "minX": 1.66896588E12, "maxY": 45.096999999999916, "series": [{"data": [[1.66896588E12, 4.8200000000000065]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66896588E12, 5.3370000000000015]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66896588E12, 45.096999999999916]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896588E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.66896588E12, "maxY": 19118.0, "series": [{"data": [[1.66896588E12, 19118.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66896588E12, 12695.700000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66896588E12, 18583.92]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66896588E12, 15646.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66896588E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66896588E12, 51.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896588E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 11.0, "maxY": 19024.0, "series": [{"data": [[33.0, 17470.0], [36.0, 16507.5], [726.0, 6.0], [11.0, 19024.0], [46.0, 10733.5], [47.0, 14116.0], [48.0, 14588.0], [822.0, 34.0], [50.0, 11729.0], [51.0, 11215.5], [52.0, 7910.0], [55.0, 2187.0], [54.0, 3099.0], [230.0, 39.5], [57.0, 5923.0], [59.0, 1252.0], [61.0, 4103.0], [258.0, 186.5], [64.0, 6933.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 822.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 11.0, "maxY": 18955.0, "series": [{"data": [[33.0, 17458.0], [36.0, 16489.0], [726.0, 6.0], [11.0, 18955.0], [46.0, 10616.5], [47.0, 14018.5], [48.0, 14475.5], [822.0, 34.0], [50.0, 11688.5], [51.0, 11183.5], [52.0, 7830.5], [55.0, 2087.0], [54.0, 3055.5], [230.0, 39.0], [57.0, 5913.0], [59.0, 1146.0], [61.0, 3992.0], [258.0, 186.5], [64.0, 6900.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 822.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66896588E12, "maxY": 50.0, "series": [{"data": [[1.66896588E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896588E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66896588E12, "maxY": 50.0, "series": [{"data": [[1.66896588E12, 50.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66896588E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.66896588E12, "maxY": 16.666666666666668, "series": [{"data": [[1.66896588E12, 16.666666666666668]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66896588E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66896588E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896588E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66896588E12, "maxY": 50.0, "series": [{"data": [[1.66896588E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66896588E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

