/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 1712.0, "series": [{"data": [[0.0, 15.0], [0.1, 18.0], [0.2, 20.0], [0.3, 23.0], [0.4, 25.0], [0.5, 26.0], [0.6, 27.0], [0.7, 27.0], [0.8, 28.0], [0.9, 29.0], [1.0, 29.0], [1.1, 30.0], [1.2, 31.0], [1.3, 32.0], [1.4, 33.0], [1.5, 34.0], [1.6, 34.0], [1.7, 34.0], [1.8, 35.0], [1.9, 35.0], [2.0, 36.0], [2.1, 36.0], [2.2, 36.0], [2.3, 37.0], [2.4, 37.0], [2.5, 37.0], [2.6, 38.0], [2.7, 38.0], [2.8, 39.0], [2.9, 39.0], [3.0, 39.0], [3.1, 39.0], [3.2, 39.0], [3.3, 39.0], [3.4, 40.0], [3.5, 40.0], [3.6, 40.0], [3.7, 40.0], [3.8, 40.0], [3.9, 41.0], [4.0, 41.0], [4.1, 41.0], [4.2, 41.0], [4.3, 41.0], [4.4, 42.0], [4.5, 42.0], [4.6, 42.0], [4.7, 42.0], [4.8, 42.0], [4.9, 42.0], [5.0, 43.0], [5.1, 43.0], [5.2, 43.0], [5.3, 43.0], [5.4, 43.0], [5.5, 43.0], [5.6, 44.0], [5.7, 44.0], [5.8, 44.0], [5.9, 44.0], [6.0, 44.0], [6.1, 44.0], [6.2, 44.0], [6.3, 44.0], [6.4, 45.0], [6.5, 45.0], [6.6, 45.0], [6.7, 45.0], [6.8, 45.0], [6.9, 45.0], [7.0, 45.0], [7.1, 45.0], [7.2, 45.0], [7.3, 46.0], [7.4, 46.0], [7.5, 46.0], [7.6, 46.0], [7.7, 46.0], [7.8, 46.0], [7.9, 46.0], [8.0, 46.0], [8.1, 46.0], [8.2, 46.0], [8.3, 46.0], [8.4, 46.0], [8.5, 46.0], [8.6, 47.0], [8.7, 47.0], [8.8, 47.0], [8.9, 47.0], [9.0, 47.0], [9.1, 47.0], [9.2, 47.0], [9.3, 47.0], [9.4, 47.0], [9.5, 47.0], [9.6, 47.0], [9.7, 47.0], [9.8, 47.0], [9.9, 47.0], [10.0, 47.0], [10.1, 47.0], [10.2, 47.0], [10.3, 47.0], [10.4, 47.0], [10.5, 47.0], [10.6, 47.0], [10.7, 47.0], [10.8, 47.0], [10.9, 47.0], [11.0, 47.0], [11.1, 48.0], [11.2, 48.0], [11.3, 48.0], [11.4, 48.0], [11.5, 48.0], [11.6, 48.0], [11.7, 48.0], [11.8, 48.0], [11.9, 48.0], [12.0, 48.0], [12.1, 48.0], [12.2, 48.0], [12.3, 48.0], [12.4, 48.0], [12.5, 48.0], [12.6, 48.0], [12.7, 48.0], [12.8, 48.0], [12.9, 48.0], [13.0, 48.0], [13.1, 48.0], [13.2, 48.0], [13.3, 48.0], [13.4, 49.0], [13.5, 49.0], [13.6, 49.0], [13.7, 49.0], [13.8, 49.0], [13.9, 49.0], [14.0, 49.0], [14.1, 49.0], [14.2, 49.0], [14.3, 49.0], [14.4, 49.0], [14.5, 49.0], [14.6, 49.0], [14.7, 49.0], [14.8, 49.0], [14.9, 49.0], [15.0, 49.0], [15.1, 49.0], [15.2, 49.0], [15.3, 49.0], [15.4, 49.0], [15.5, 49.0], [15.6, 49.0], [15.7, 49.0], [15.8, 49.0], [15.9, 49.0], [16.0, 49.0], [16.1, 50.0], [16.2, 50.0], [16.3, 50.0], [16.4, 50.0], [16.5, 50.0], [16.6, 50.0], [16.7, 50.0], [16.8, 50.0], [16.9, 50.0], [17.0, 50.0], [17.1, 50.0], [17.2, 50.0], [17.3, 50.0], [17.4, 50.0], [17.5, 50.0], [17.6, 50.0], [17.7, 50.0], [17.8, 50.0], [17.9, 50.0], [18.0, 50.0], [18.1, 50.0], [18.2, 50.0], [18.3, 50.0], [18.4, 50.0], [18.5, 50.0], [18.6, 50.0], [18.7, 50.0], [18.8, 50.0], [18.9, 50.0], [19.0, 51.0], [19.1, 51.0], [19.2, 51.0], [19.3, 51.0], [19.4, 51.0], [19.5, 51.0], [19.6, 51.0], [19.7, 51.0], [19.8, 51.0], [19.9, 51.0], [20.0, 51.0], [20.1, 51.0], [20.2, 51.0], [20.3, 51.0], [20.4, 51.0], [20.5, 51.0], [20.6, 51.0], [20.7, 51.0], [20.8, 51.0], [20.9, 51.0], [21.0, 51.0], [21.1, 51.0], [21.2, 51.0], [21.3, 51.0], [21.4, 51.0], [21.5, 51.0], [21.6, 51.0], [21.7, 51.0], [21.8, 51.0], [21.9, 51.0], [22.0, 51.0], [22.1, 51.0], [22.2, 51.0], [22.3, 51.0], [22.4, 51.0], [22.5, 51.0], [22.6, 51.0], [22.7, 52.0], [22.8, 52.0], [22.9, 52.0], [23.0, 52.0], [23.1, 52.0], [23.2, 52.0], [23.3, 52.0], [23.4, 52.0], [23.5, 52.0], [23.6, 52.0], [23.7, 52.0], [23.8, 52.0], [23.9, 52.0], [24.0, 52.0], [24.1, 52.0], [24.2, 52.0], [24.3, 52.0], [24.4, 52.0], [24.5, 52.0], [24.6, 52.0], [24.7, 52.0], [24.8, 52.0], [24.9, 52.0], [25.0, 52.0], [25.1, 52.0], [25.2, 52.0], [25.3, 52.0], [25.4, 52.0], [25.5, 52.0], [25.6, 52.0], [25.7, 52.0], [25.8, 52.0], [25.9, 52.0], [26.0, 52.0], [26.1, 52.0], [26.2, 52.0], [26.3, 52.0], [26.4, 52.0], [26.5, 52.0], [26.6, 52.0], [26.7, 52.0], [26.8, 52.0], [26.9, 52.0], [27.0, 53.0], [27.1, 53.0], [27.2, 53.0], [27.3, 53.0], [27.4, 53.0], [27.5, 53.0], [27.6, 53.0], [27.7, 53.0], [27.8, 53.0], [27.9, 53.0], [28.0, 53.0], [28.1, 53.0], [28.2, 53.0], [28.3, 53.0], [28.4, 53.0], [28.5, 53.0], [28.6, 53.0], [28.7, 53.0], [28.8, 53.0], [28.9, 53.0], [29.0, 53.0], [29.1, 53.0], [29.2, 53.0], [29.3, 53.0], [29.4, 53.0], [29.5, 53.0], [29.6, 53.0], [29.7, 53.0], [29.8, 53.0], [29.9, 53.0], [30.0, 53.0], [30.1, 53.0], [30.2, 53.0], [30.3, 53.0], [30.4, 53.0], [30.5, 53.0], [30.6, 53.0], [30.7, 53.0], [30.8, 53.0], [30.9, 53.0], [31.0, 53.0], [31.1, 53.0], [31.2, 54.0], [31.3, 54.0], [31.4, 54.0], [31.5, 54.0], [31.6, 54.0], [31.7, 54.0], [31.8, 54.0], [31.9, 54.0], [32.0, 54.0], [32.1, 54.0], [32.2, 54.0], [32.3, 54.0], [32.4, 54.0], [32.5, 54.0], [32.6, 54.0], [32.7, 54.0], [32.8, 54.0], [32.9, 54.0], [33.0, 54.0], [33.1, 54.0], [33.2, 54.0], [33.3, 54.0], [33.4, 54.0], [33.5, 54.0], [33.6, 54.0], [33.7, 54.0], [33.8, 54.0], [33.9, 54.0], [34.0, 54.0], [34.1, 54.0], [34.2, 54.0], [34.3, 54.0], [34.4, 54.0], [34.5, 54.0], [34.6, 54.0], [34.7, 54.0], [34.8, 54.0], [34.9, 54.0], [35.0, 55.0], [35.1, 55.0], [35.2, 55.0], [35.3, 55.0], [35.4, 55.0], [35.5, 55.0], [35.6, 55.0], [35.7, 55.0], [35.8, 55.0], [35.9, 55.0], [36.0, 55.0], [36.1, 55.0], [36.2, 55.0], [36.3, 55.0], [36.4, 55.0], [36.5, 55.0], [36.6, 55.0], [36.7, 55.0], [36.8, 55.0], [36.9, 55.0], [37.0, 55.0], [37.1, 55.0], [37.2, 55.0], [37.3, 55.0], [37.4, 55.0], [37.5, 55.0], [37.6, 55.0], [37.7, 55.0], [37.8, 55.0], [37.9, 55.0], [38.0, 55.0], [38.1, 55.0], [38.2, 55.0], [38.3, 55.0], [38.4, 55.0], [38.5, 55.0], [38.6, 55.0], [38.7, 55.0], [38.8, 56.0], [38.9, 56.0], [39.0, 56.0], [39.1, 56.0], [39.2, 56.0], [39.3, 56.0], [39.4, 56.0], [39.5, 56.0], [39.6, 56.0], [39.7, 56.0], [39.8, 56.0], [39.9, 56.0], [40.0, 56.0], [40.1, 56.0], [40.2, 56.0], [40.3, 56.0], [40.4, 56.0], [40.5, 56.0], [40.6, 56.0], [40.7, 56.0], [40.8, 56.0], [40.9, 56.0], [41.0, 56.0], [41.1, 56.0], [41.2, 56.0], [41.3, 56.0], [41.4, 56.0], [41.5, 56.0], [41.6, 56.0], [41.7, 56.0], [41.8, 56.0], [41.9, 56.0], [42.0, 56.0], [42.1, 56.0], [42.2, 56.0], [42.3, 56.0], [42.4, 56.0], [42.5, 57.0], [42.6, 57.0], [42.7, 57.0], [42.8, 57.0], [42.9, 57.0], [43.0, 57.0], [43.1, 57.0], [43.2, 57.0], [43.3, 57.0], [43.4, 57.0], [43.5, 57.0], [43.6, 57.0], [43.7, 57.0], [43.8, 57.0], [43.9, 57.0], [44.0, 57.0], [44.1, 57.0], [44.2, 57.0], [44.3, 57.0], [44.4, 57.0], [44.5, 57.0], [44.6, 57.0], [44.7, 57.0], [44.8, 57.0], [44.9, 57.0], [45.0, 57.0], [45.1, 57.0], [45.2, 57.0], [45.3, 57.0], [45.4, 57.0], [45.5, 57.0], [45.6, 57.0], [45.7, 57.0], [45.8, 57.0], [45.9, 57.0], [46.0, 57.0], [46.1, 57.0], [46.2, 58.0], [46.3, 58.0], [46.4, 58.0], [46.5, 58.0], [46.6, 58.0], [46.7, 58.0], [46.8, 58.0], [46.9, 58.0], [47.0, 58.0], [47.1, 58.0], [47.2, 58.0], [47.3, 58.0], [47.4, 58.0], [47.5, 58.0], [47.6, 58.0], [47.7, 58.0], [47.8, 58.0], [47.9, 58.0], [48.0, 58.0], [48.1, 58.0], [48.2, 58.0], [48.3, 58.0], [48.4, 58.0], [48.5, 58.0], [48.6, 58.0], [48.7, 58.0], [48.8, 58.0], [48.9, 58.0], [49.0, 58.0], [49.1, 58.0], [49.2, 58.0], [49.3, 58.0], [49.4, 58.0], [49.5, 58.0], [49.6, 58.0], [49.7, 58.0], [49.8, 58.0], [49.9, 58.0], [50.0, 58.0], [50.1, 58.0], [50.2, 58.0], [50.3, 58.0], [50.4, 59.0], [50.5, 59.0], [50.6, 59.0], [50.7, 59.0], [50.8, 59.0], [50.9, 59.0], [51.0, 59.0], [51.1, 59.0], [51.2, 59.0], [51.3, 59.0], [51.4, 59.0], [51.5, 59.0], [51.6, 59.0], [51.7, 59.0], [51.8, 59.0], [51.9, 59.0], [52.0, 59.0], [52.1, 59.0], [52.2, 59.0], [52.3, 59.0], [52.4, 59.0], [52.5, 59.0], [52.6, 59.0], [52.7, 59.0], [52.8, 59.0], [52.9, 59.0], [53.0, 59.0], [53.1, 59.0], [53.2, 59.0], [53.3, 59.0], [53.4, 59.0], [53.5, 59.0], [53.6, 59.0], [53.7, 59.0], [53.8, 59.0], [53.9, 59.0], [54.0, 59.0], [54.1, 59.0], [54.2, 59.0], [54.3, 59.0], [54.4, 59.0], [54.5, 59.0], [54.6, 59.0], [54.7, 59.0], [54.8, 60.0], [54.9, 60.0], [55.0, 60.0], [55.1, 60.0], [55.2, 60.0], [55.3, 60.0], [55.4, 60.0], [55.5, 60.0], [55.6, 60.0], [55.7, 60.0], [55.8, 60.0], [55.9, 60.0], [56.0, 60.0], [56.1, 60.0], [56.2, 60.0], [56.3, 60.0], [56.4, 60.0], [56.5, 60.0], [56.6, 60.0], [56.7, 60.0], [56.8, 60.0], [56.9, 60.0], [57.0, 60.0], [57.1, 60.0], [57.2, 60.0], [57.3, 60.0], [57.4, 60.0], [57.5, 60.0], [57.6, 60.0], [57.7, 60.0], [57.8, 60.0], [57.9, 60.0], [58.0, 60.0], [58.1, 60.0], [58.2, 60.0], [58.3, 60.0], [58.4, 60.0], [58.5, 60.0], [58.6, 60.0], [58.7, 60.0], [58.8, 60.0], [58.9, 60.0], [59.0, 60.0], [59.1, 60.0], [59.2, 60.0], [59.3, 60.0], [59.4, 60.0], [59.5, 60.0], [59.6, 61.0], [59.7, 61.0], [59.8, 61.0], [59.9, 61.0], [60.0, 61.0], [60.1, 61.0], [60.2, 61.0], [60.3, 61.0], [60.4, 61.0], [60.5, 61.0], [60.6, 61.0], [60.7, 61.0], [60.8, 61.0], [60.9, 61.0], [61.0, 61.0], [61.1, 61.0], [61.2, 61.0], [61.3, 61.0], [61.4, 61.0], [61.5, 61.0], [61.6, 61.0], [61.7, 61.0], [61.8, 61.0], [61.9, 61.0], [62.0, 61.0], [62.1, 61.0], [62.2, 61.0], [62.3, 61.0], [62.4, 61.0], [62.5, 61.0], [62.6, 61.0], [62.7, 61.0], [62.8, 61.0], [62.9, 61.0], [63.0, 61.0], [63.1, 61.0], [63.2, 61.0], [63.3, 61.0], [63.4, 61.0], [63.5, 61.0], [63.6, 61.0], [63.7, 61.0], [63.8, 61.0], [63.9, 61.0], [64.0, 61.0], [64.1, 61.0], [64.2, 61.0], [64.3, 61.0], [64.4, 61.0], [64.5, 61.0], [64.6, 62.0], [64.7, 62.0], [64.8, 62.0], [64.9, 62.0], [65.0, 62.0], [65.1, 62.0], [65.2, 62.0], [65.3, 62.0], [65.4, 62.0], [65.5, 62.0], [65.6, 62.0], [65.7, 62.0], [65.8, 62.0], [65.9, 62.0], [66.0, 62.0], [66.1, 62.0], [66.2, 62.0], [66.3, 62.0], [66.4, 62.0], [66.5, 62.0], [66.6, 62.0], [66.7, 62.0], [66.8, 62.0], [66.9, 62.0], [67.0, 62.0], [67.1, 62.0], [67.2, 62.0], [67.3, 62.0], [67.4, 62.0], [67.5, 62.0], [67.6, 62.0], [67.7, 62.0], [67.8, 62.0], [67.9, 62.0], [68.0, 62.0], [68.1, 62.0], [68.2, 62.0], [68.3, 62.0], [68.4, 62.0], [68.5, 62.0], [68.6, 63.0], [68.7, 63.0], [68.8, 63.0], [68.9, 63.0], [69.0, 63.0], [69.1, 63.0], [69.2, 63.0], [69.3, 63.0], [69.4, 63.0], [69.5, 63.0], [69.6, 63.0], [69.7, 63.0], [69.8, 63.0], [69.9, 63.0], [70.0, 63.0], [70.1, 63.0], [70.2, 63.0], [70.3, 63.0], [70.4, 63.0], [70.5, 63.0], [70.6, 63.0], [70.7, 63.0], [70.8, 63.0], [70.9, 63.0], [71.0, 63.0], [71.1, 63.0], [71.2, 63.0], [71.3, 63.0], [71.4, 63.0], [71.5, 63.0], [71.6, 63.0], [71.7, 63.0], [71.8, 63.0], [71.9, 63.0], [72.0, 63.0], [72.1, 64.0], [72.2, 64.0], [72.3, 64.0], [72.4, 64.0], [72.5, 64.0], [72.6, 64.0], [72.7, 64.0], [72.8, 64.0], [72.9, 64.0], [73.0, 64.0], [73.1, 64.0], [73.2, 64.0], [73.3, 64.0], [73.4, 64.0], [73.5, 64.0], [73.6, 64.0], [73.7, 64.0], [73.8, 64.0], [73.9, 64.0], [74.0, 64.0], [74.1, 64.0], [74.2, 64.0], [74.3, 64.0], [74.4, 64.0], [74.5, 64.0], [74.6, 64.0], [74.7, 64.0], [74.8, 64.0], [74.9, 64.0], [75.0, 64.0], [75.1, 64.0], [75.2, 64.0], [75.3, 64.0], [75.4, 65.0], [75.5, 65.0], [75.6, 65.0], [75.7, 65.0], [75.8, 65.0], [75.9, 65.0], [76.0, 65.0], [76.1, 65.0], [76.2, 65.0], [76.3, 65.0], [76.4, 65.0], [76.5, 65.0], [76.6, 65.0], [76.7, 65.0], [76.8, 65.0], [76.9, 65.0], [77.0, 65.0], [77.1, 65.0], [77.2, 65.0], [77.3, 65.0], [77.4, 65.0], [77.5, 65.0], [77.6, 65.0], [77.7, 65.0], [77.8, 65.0], [77.9, 65.0], [78.0, 65.0], [78.1, 65.0], [78.2, 65.0], [78.3, 66.0], [78.4, 66.0], [78.5, 66.0], [78.6, 66.0], [78.7, 66.0], [78.8, 66.0], [78.9, 66.0], [79.0, 66.0], [79.1, 66.0], [79.2, 66.0], [79.3, 66.0], [79.4, 66.0], [79.5, 66.0], [79.6, 66.0], [79.7, 66.0], [79.8, 66.0], [79.9, 66.0], [80.0, 66.0], [80.1, 66.0], [80.2, 66.0], [80.3, 66.0], [80.4, 66.0], [80.5, 66.0], [80.6, 66.0], [80.7, 66.0], [80.8, 66.0], [80.9, 66.0], [81.0, 66.0], [81.1, 67.0], [81.2, 67.0], [81.3, 67.0], [81.4, 67.0], [81.5, 67.0], [81.6, 67.0], [81.7, 67.0], [81.8, 67.0], [81.9, 67.0], [82.0, 67.0], [82.1, 67.0], [82.2, 67.0], [82.3, 67.0], [82.4, 67.0], [82.5, 67.0], [82.6, 67.0], [82.7, 67.0], [82.8, 67.0], [82.9, 67.0], [83.0, 67.0], [83.1, 67.0], [83.2, 67.0], [83.3, 67.0], [83.4, 67.0], [83.5, 67.0], [83.6, 67.0], [83.7, 67.0], [83.8, 67.0], [83.9, 68.0], [84.0, 68.0], [84.1, 68.0], [84.2, 68.0], [84.3, 68.0], [84.4, 68.0], [84.5, 68.0], [84.6, 68.0], [84.7, 68.0], [84.8, 68.0], [84.9, 68.0], [85.0, 68.0], [85.1, 68.0], [85.2, 68.0], [85.3, 68.0], [85.4, 68.0], [85.5, 68.0], [85.6, 68.0], [85.7, 68.0], [85.8, 68.0], [85.9, 68.0], [86.0, 68.0], [86.1, 68.0], [86.2, 68.0], [86.3, 68.0], [86.4, 69.0], [86.5, 69.0], [86.6, 69.0], [86.7, 69.0], [86.8, 69.0], [86.9, 69.0], [87.0, 69.0], [87.1, 69.0], [87.2, 69.0], [87.3, 69.0], [87.4, 69.0], [87.5, 69.0], [87.6, 69.0], [87.7, 69.0], [87.8, 69.0], [87.9, 69.0], [88.0, 69.0], [88.1, 69.0], [88.2, 69.0], [88.3, 69.0], [88.4, 69.0], [88.5, 69.0], [88.6, 69.0], [88.7, 69.0], [88.8, 70.0], [88.9, 70.0], [89.0, 70.0], [89.1, 70.0], [89.2, 70.0], [89.3, 70.0], [89.4, 70.0], [89.5, 70.0], [89.6, 70.0], [89.7, 70.0], [89.8, 70.0], [89.9, 70.0], [90.0, 70.0], [90.1, 70.0], [90.2, 70.0], [90.3, 70.0], [90.4, 70.0], [90.5, 70.0], [90.6, 70.0], [90.7, 71.0], [90.8, 71.0], [90.9, 71.0], [91.0, 71.0], [91.1, 71.0], [91.2, 71.0], [91.3, 71.0], [91.4, 71.0], [91.5, 71.0], [91.6, 71.0], [91.7, 71.0], [91.8, 71.0], [91.9, 71.0], [92.0, 71.0], [92.1, 71.0], [92.2, 71.0], [92.3, 71.0], [92.4, 72.0], [92.5, 72.0], [92.6, 72.0], [92.7, 72.0], [92.8, 72.0], [92.9, 72.0], [93.0, 72.0], [93.1, 72.0], [93.2, 72.0], [93.3, 72.0], [93.4, 72.0], [93.5, 72.0], [93.6, 73.0], [93.7, 73.0], [93.8, 73.0], [93.9, 73.0], [94.0, 73.0], [94.1, 73.0], [94.2, 73.0], [94.3, 73.0], [94.4, 73.0], [94.5, 73.0], [94.6, 74.0], [94.7, 74.0], [94.8, 74.0], [94.9, 74.0], [95.0, 74.0], [95.1, 74.0], [95.2, 74.0], [95.3, 74.0], [95.4, 74.0], [95.5, 74.0], [95.6, 75.0], [95.7, 75.0], [95.8, 75.0], [95.9, 75.0], [96.0, 75.0], [96.1, 75.0], [96.2, 75.0], [96.3, 75.0], [96.4, 76.0], [96.5, 76.0], [96.6, 76.0], [96.7, 76.0], [96.8, 76.0], [96.9, 76.0], [97.0, 77.0], [97.1, 77.0], [97.2, 77.0], [97.3, 77.0], [97.4, 77.0], [97.5, 78.0], [97.6, 78.0], [97.7, 78.0], [97.8, 78.0], [97.9, 79.0], [98.0, 79.0], [98.1, 79.0], [98.2, 79.0], [98.3, 80.0], [98.4, 80.0], [98.5, 81.0], [98.6, 81.0], [98.7, 81.0], [98.8, 82.0], [98.9, 82.0], [99.0, 83.0], [99.1, 83.0], [99.2, 83.0], [99.3, 84.0], [99.4, 85.0], [99.5, 85.0], [99.6, 86.0], [99.7, 87.0], [99.8, 88.0], [99.9, 91.0], [100.0, 1011.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 2.0], [0.1, 5.0], [0.2, 16.0], [0.3, 18.0], [0.4, 22.0], [0.5, 24.0], [0.6, 25.0], [0.7, 28.0], [0.8, 31.0], [0.9, 33.0], [1.0, 34.0], [1.1, 36.0], [1.2, 38.0], [1.3, 41.0], [1.4, 42.0], [1.5, 43.0], [1.6, 46.0], [1.7, 47.0], [1.8, 48.0], [1.9, 50.0], [2.0, 56.0], [2.1, 65.0], [2.2, 69.0], [2.3, 72.0], [2.4, 74.0], [2.5, 81.0], [2.6, 88.0], [2.7, 94.0], [2.8, 98.0], [2.9, 110.0], [3.0, 115.0], [3.1, 119.0], [3.2, 121.0], [3.3, 123.0], [3.4, 125.0], [3.5, 130.0], [3.6, 136.0], [3.7, 148.0], [3.8, 157.0], [3.9, 163.0], [4.0, 164.0], [4.1, 166.0], [4.2, 168.0], [4.3, 172.0], [4.4, 176.0], [4.5, 178.0], [4.6, 180.0], [4.7, 183.0], [4.8, 185.0], [4.9, 187.0], [5.0, 190.0], [5.1, 195.0], [5.2, 198.0], [5.3, 202.0], [5.4, 206.0], [5.5, 209.0], [5.6, 215.0], [5.7, 219.0], [5.8, 224.0], [5.9, 231.0], [6.0, 233.0], [6.1, 236.0], [6.2, 238.0], [6.3, 240.0], [6.4, 241.0], [6.5, 245.0], [6.6, 246.0], [6.7, 247.0], [6.8, 248.0], [6.9, 249.0], [7.0, 251.0], [7.1, 252.0], [7.2, 254.0], [7.3, 256.0], [7.4, 258.0], [7.5, 260.0], [7.6, 266.0], [7.7, 274.0], [7.8, 277.0], [7.9, 279.0], [8.0, 282.0], [8.1, 284.0], [8.2, 287.0], [8.3, 289.0], [8.4, 291.0], [8.5, 293.0], [8.6, 295.0], [8.7, 297.0], [8.8, 298.0], [8.9, 299.0], [9.0, 303.0], [9.1, 304.0], [9.2, 305.0], [9.3, 307.0], [9.4, 310.0], [9.5, 312.0], [9.6, 313.0], [9.7, 315.0], [9.8, 320.0], [9.9, 322.0], [10.0, 326.0], [10.1, 328.0], [10.2, 329.0], [10.3, 331.0], [10.4, 332.0], [10.5, 333.0], [10.6, 336.0], [10.7, 337.0], [10.8, 339.0], [10.9, 342.0], [11.0, 344.0], [11.1, 345.0], [11.2, 347.0], [11.3, 349.0], [11.4, 351.0], [11.5, 354.0], [11.6, 356.0], [11.7, 359.0], [11.8, 361.0], [11.9, 363.0], [12.0, 365.0], [12.1, 367.0], [12.2, 368.0], [12.3, 370.0], [12.4, 374.0], [12.5, 375.0], [12.6, 377.0], [12.7, 380.0], [12.8, 382.0], [12.9, 383.0], [13.0, 385.0], [13.1, 386.0], [13.2, 388.0], [13.3, 389.0], [13.4, 392.0], [13.5, 394.0], [13.6, 396.0], [13.7, 398.0], [13.8, 402.0], [13.9, 405.0], [14.0, 408.0], [14.1, 410.0], [14.2, 412.0], [14.3, 414.0], [14.4, 417.0], [14.5, 417.0], [14.6, 419.0], [14.7, 423.0], [14.8, 427.0], [14.9, 429.0], [15.0, 433.0], [15.1, 436.0], [15.2, 437.0], [15.3, 438.0], [15.4, 440.0], [15.5, 441.0], [15.6, 444.0], [15.7, 445.0], [15.8, 447.0], [15.9, 449.0], [16.0, 452.0], [16.1, 455.0], [16.2, 457.0], [16.3, 462.0], [16.4, 465.0], [16.5, 467.0], [16.6, 472.0], [16.7, 476.0], [16.8, 481.0], [16.9, 483.0], [17.0, 489.0], [17.1, 493.0], [17.2, 494.0], [17.3, 497.0], [17.4, 500.0], [17.5, 502.0], [17.6, 506.0], [17.7, 508.0], [17.8, 510.0], [17.9, 513.0], [18.0, 514.0], [18.1, 516.0], [18.2, 518.0], [18.3, 519.0], [18.4, 521.0], [18.5, 522.0], [18.6, 524.0], [18.7, 527.0], [18.8, 528.0], [18.9, 529.0], [19.0, 531.0], [19.1, 532.0], [19.2, 533.0], [19.3, 534.0], [19.4, 536.0], [19.5, 538.0], [19.6, 539.0], [19.7, 541.0], [19.8, 543.0], [19.9, 546.0], [20.0, 548.0], [20.1, 551.0], [20.2, 553.0], [20.3, 554.0], [20.4, 556.0], [20.5, 558.0], [20.6, 560.0], [20.7, 562.0], [20.8, 563.0], [20.9, 564.0], [21.0, 566.0], [21.1, 567.0], [21.2, 569.0], [21.3, 570.0], [21.4, 571.0], [21.5, 573.0], [21.6, 576.0], [21.7, 579.0], [21.8, 580.0], [21.9, 582.0], [22.0, 584.0], [22.1, 586.0], [22.2, 587.0], [22.3, 590.0], [22.4, 592.0], [22.5, 594.0], [22.6, 596.0], [22.7, 597.0], [22.8, 599.0], [22.9, 602.0], [23.0, 604.0], [23.1, 606.0], [23.2, 609.0], [23.3, 612.0], [23.4, 614.0], [23.5, 618.0], [23.6, 623.0], [23.7, 627.0], [23.8, 631.0], [23.9, 633.0], [24.0, 634.0], [24.1, 636.0], [24.2, 637.0], [24.3, 638.0], [24.4, 640.0], [24.5, 641.0], [24.6, 643.0], [24.7, 644.0], [24.8, 646.0], [24.9, 647.0], [25.0, 649.0], [25.1, 651.0], [25.2, 652.0], [25.3, 654.0], [25.4, 655.0], [25.5, 656.0], [25.6, 657.0], [25.7, 658.0], [25.8, 659.0], [25.9, 660.0], [26.0, 661.0], [26.1, 662.0], [26.2, 664.0], [26.3, 665.0], [26.4, 667.0], [26.5, 668.0], [26.6, 669.0], [26.7, 670.0], [26.8, 671.0], [26.9, 672.0], [27.0, 673.0], [27.1, 675.0], [27.2, 676.0], [27.3, 678.0], [27.4, 679.0], [27.5, 680.0], [27.6, 681.0], [27.7, 682.0], [27.8, 684.0], [27.9, 685.0], [28.0, 686.0], [28.1, 687.0], [28.2, 689.0], [28.3, 690.0], [28.4, 691.0], [28.5, 692.0], [28.6, 693.0], [28.7, 694.0], [28.8, 696.0], [28.9, 696.0], [29.0, 697.0], [29.1, 698.0], [29.2, 699.0], [29.3, 701.0], [29.4, 702.0], [29.5, 702.0], [29.6, 702.0], [29.7, 703.0], [29.8, 704.0], [29.9, 706.0], [30.0, 707.0], [30.1, 708.0], [30.2, 709.0], [30.3, 709.0], [30.4, 710.0], [30.5, 711.0], [30.6, 712.0], [30.7, 713.0], [30.8, 714.0], [30.9, 715.0], [31.0, 716.0], [31.1, 717.0], [31.2, 718.0], [31.3, 720.0], [31.4, 720.0], [31.5, 721.0], [31.6, 722.0], [31.7, 723.0], [31.8, 723.0], [31.9, 724.0], [32.0, 726.0], [32.1, 727.0], [32.2, 728.0], [32.3, 729.0], [32.4, 730.0], [32.5, 731.0], [32.6, 732.0], [32.7, 733.0], [32.8, 734.0], [32.9, 735.0], [33.0, 737.0], [33.1, 738.0], [33.2, 740.0], [33.3, 740.0], [33.4, 741.0], [33.5, 742.0], [33.6, 742.0], [33.7, 743.0], [33.8, 744.0], [33.9, 745.0], [34.0, 746.0], [34.1, 747.0], [34.2, 748.0], [34.3, 749.0], [34.4, 751.0], [34.5, 752.0], [34.6, 754.0], [34.7, 755.0], [34.8, 756.0], [34.9, 757.0], [35.0, 758.0], [35.1, 760.0], [35.2, 760.0], [35.3, 761.0], [35.4, 762.0], [35.5, 763.0], [35.6, 764.0], [35.7, 764.0], [35.8, 764.0], [35.9, 765.0], [36.0, 766.0], [36.1, 767.0], [36.2, 770.0], [36.3, 771.0], [36.4, 772.0], [36.5, 774.0], [36.6, 775.0], [36.7, 775.0], [36.8, 776.0], [36.9, 778.0], [37.0, 780.0], [37.1, 783.0], [37.2, 785.0], [37.3, 788.0], [37.4, 790.0], [37.5, 792.0], [37.6, 794.0], [37.7, 795.0], [37.8, 797.0], [37.9, 798.0], [38.0, 800.0], [38.1, 800.0], [38.2, 802.0], [38.3, 803.0], [38.4, 805.0], [38.5, 806.0], [38.6, 808.0], [38.7, 810.0], [38.8, 812.0], [38.9, 814.0], [39.0, 817.0], [39.1, 818.0], [39.2, 820.0], [39.3, 822.0], [39.4, 824.0], [39.5, 825.0], [39.6, 826.0], [39.7, 827.0], [39.8, 829.0], [39.9, 830.0], [40.0, 831.0], [40.1, 833.0], [40.2, 834.0], [40.3, 835.0], [40.4, 837.0], [40.5, 838.0], [40.6, 840.0], [40.7, 843.0], [40.8, 844.0], [40.9, 846.0], [41.0, 847.0], [41.1, 848.0], [41.2, 850.0], [41.3, 851.0], [41.4, 852.0], [41.5, 853.0], [41.6, 854.0], [41.7, 856.0], [41.8, 857.0], [41.9, 858.0], [42.0, 859.0], [42.1, 860.0], [42.2, 861.0], [42.3, 862.0], [42.4, 863.0], [42.5, 864.0], [42.6, 865.0], [42.7, 867.0], [42.8, 869.0], [42.9, 870.0], [43.0, 871.0], [43.1, 873.0], [43.2, 874.0], [43.3, 877.0], [43.4, 878.0], [43.5, 879.0], [43.6, 880.0], [43.7, 880.0], [43.8, 881.0], [43.9, 882.0], [44.0, 883.0], [44.1, 884.0], [44.2, 886.0], [44.3, 887.0], [44.4, 888.0], [44.5, 888.0], [44.6, 889.0], [44.7, 890.0], [44.8, 891.0], [44.9, 892.0], [45.0, 892.0], [45.1, 893.0], [45.2, 894.0], [45.3, 895.0], [45.4, 895.0], [45.5, 896.0], [45.6, 896.0], [45.7, 898.0], [45.8, 899.0], [45.9, 899.0], [46.0, 900.0], [46.1, 901.0], [46.2, 901.0], [46.3, 902.0], [46.4, 903.0], [46.5, 904.0], [46.6, 904.0], [46.7, 905.0], [46.8, 906.0], [46.9, 907.0], [47.0, 909.0], [47.1, 910.0], [47.2, 911.0], [47.3, 912.0], [47.4, 913.0], [47.5, 914.0], [47.6, 914.0], [47.7, 915.0], [47.8, 916.0], [47.9, 917.0], [48.0, 917.0], [48.1, 919.0], [48.2, 919.0], [48.3, 920.0], [48.4, 921.0], [48.5, 922.0], [48.6, 923.0], [48.7, 923.0], [48.8, 925.0], [48.9, 925.0], [49.0, 926.0], [49.1, 927.0], [49.2, 927.0], [49.3, 929.0], [49.4, 929.0], [49.5, 930.0], [49.6, 932.0], [49.7, 932.0], [49.8, 933.0], [49.9, 935.0], [50.0, 936.0], [50.1, 938.0], [50.2, 939.0], [50.3, 939.0], [50.4, 941.0], [50.5, 943.0], [50.6, 945.0], [50.7, 946.0], [50.8, 948.0], [50.9, 949.0], [51.0, 951.0], [51.1, 952.0], [51.2, 953.0], [51.3, 955.0], [51.4, 956.0], [51.5, 958.0], [51.6, 959.0], [51.7, 960.0], [51.8, 961.0], [51.9, 962.0], [52.0, 963.0], [52.1, 964.0], [52.2, 965.0], [52.3, 966.0], [52.4, 967.0], [52.5, 969.0], [52.6, 970.0], [52.7, 971.0], [52.8, 972.0], [52.9, 973.0], [53.0, 974.0], [53.1, 975.0], [53.2, 976.0], [53.3, 977.0], [53.4, 978.0], [53.5, 979.0], [53.6, 980.0], [53.7, 981.0], [53.8, 982.0], [53.9, 983.0], [54.0, 984.0], [54.1, 986.0], [54.2, 987.0], [54.3, 989.0], [54.4, 990.0], [54.5, 992.0], [54.6, 994.0], [54.7, 995.0], [54.8, 997.0], [54.9, 998.0], [55.0, 1000.0], [55.1, 1001.0], [55.2, 1003.0], [55.3, 1004.0], [55.4, 1006.0], [55.5, 1007.0], [55.6, 1008.0], [55.7, 1010.0], [55.8, 1011.0], [55.9, 1011.0], [56.0, 1012.0], [56.1, 1013.0], [56.2, 1014.0], [56.3, 1015.0], [56.4, 1016.0], [56.5, 1016.0], [56.6, 1017.0], [56.7, 1018.0], [56.8, 1018.0], [56.9, 1019.0], [57.0, 1020.0], [57.1, 1021.0], [57.2, 1022.0], [57.3, 1022.0], [57.4, 1023.0], [57.5, 1024.0], [57.6, 1025.0], [57.7, 1026.0], [57.8, 1027.0], [57.9, 1028.0], [58.0, 1030.0], [58.1, 1032.0], [58.2, 1033.0], [58.3, 1034.0], [58.4, 1036.0], [58.5, 1037.0], [58.6, 1038.0], [58.7, 1039.0], [58.8, 1040.0], [58.9, 1042.0], [59.0, 1044.0], [59.1, 1044.0], [59.2, 1045.0], [59.3, 1046.0], [59.4, 1047.0], [59.5, 1049.0], [59.6, 1050.0], [59.7, 1052.0], [59.8, 1054.0], [59.9, 1055.0], [60.0, 1057.0], [60.1, 1058.0], [60.2, 1059.0], [60.3, 1060.0], [60.4, 1062.0], [60.5, 1063.0], [60.6, 1064.0], [60.7, 1065.0], [60.8, 1067.0], [60.9, 1068.0], [61.0, 1069.0], [61.1, 1070.0], [61.2, 1072.0], [61.3, 1072.0], [61.4, 1073.0], [61.5, 1075.0], [61.6, 1077.0], [61.7, 1078.0], [61.8, 1079.0], [61.9, 1080.0], [62.0, 1082.0], [62.1, 1084.0], [62.2, 1085.0], [62.3, 1086.0], [62.4, 1088.0], [62.5, 1089.0], [62.6, 1090.0], [62.7, 1091.0], [62.8, 1091.0], [62.9, 1092.0], [63.0, 1094.0], [63.1, 1094.0], [63.2, 1096.0], [63.3, 1097.0], [63.4, 1098.0], [63.5, 1099.0], [63.6, 1100.0], [63.7, 1101.0], [63.8, 1102.0], [63.9, 1103.0], [64.0, 1104.0], [64.1, 1105.0], [64.2, 1106.0], [64.3, 1107.0], [64.4, 1109.0], [64.5, 1110.0], [64.6, 1111.0], [64.7, 1111.0], [64.8, 1112.0], [64.9, 1113.0], [65.0, 1114.0], [65.1, 1114.0], [65.2, 1115.0], [65.3, 1116.0], [65.4, 1117.0], [65.5, 1117.0], [65.6, 1118.0], [65.7, 1119.0], [65.8, 1120.0], [65.9, 1120.0], [66.0, 1121.0], [66.1, 1122.0], [66.2, 1123.0], [66.3, 1124.0], [66.4, 1124.0], [66.5, 1125.0], [66.6, 1125.0], [66.7, 1126.0], [66.8, 1126.0], [66.9, 1127.0], [67.0, 1127.0], [67.1, 1128.0], [67.2, 1128.0], [67.3, 1129.0], [67.4, 1130.0], [67.5, 1130.0], [67.6, 1131.0], [67.7, 1132.0], [67.8, 1132.0], [67.9, 1133.0], [68.0, 1133.0], [68.1, 1134.0], [68.2, 1135.0], [68.3, 1135.0], [68.4, 1136.0], [68.5, 1137.0], [68.6, 1137.0], [68.7, 1139.0], [68.8, 1139.0], [68.9, 1140.0], [69.0, 1140.0], [69.1, 1142.0], [69.2, 1143.0], [69.3, 1144.0], [69.4, 1145.0], [69.5, 1147.0], [69.6, 1149.0], [69.7, 1150.0], [69.8, 1151.0], [69.9, 1152.0], [70.0, 1153.0], [70.1, 1154.0], [70.2, 1155.0], [70.3, 1156.0], [70.4, 1157.0], [70.5, 1158.0], [70.6, 1160.0], [70.7, 1160.0], [70.8, 1162.0], [70.9, 1163.0], [71.0, 1164.0], [71.1, 1165.0], [71.2, 1166.0], [71.3, 1166.0], [71.4, 1167.0], [71.5, 1168.0], [71.6, 1168.0], [71.7, 1168.0], [71.8, 1169.0], [71.9, 1170.0], [72.0, 1171.0], [72.1, 1171.0], [72.2, 1172.0], [72.3, 1172.0], [72.4, 1173.0], [72.5, 1174.0], [72.6, 1174.0], [72.7, 1175.0], [72.8, 1176.0], [72.9, 1177.0], [73.0, 1177.0], [73.1, 1178.0], [73.2, 1178.0], [73.3, 1179.0], [73.4, 1180.0], [73.5, 1180.0], [73.6, 1181.0], [73.7, 1182.0], [73.8, 1183.0], [73.9, 1184.0], [74.0, 1184.0], [74.1, 1185.0], [74.2, 1186.0], [74.3, 1186.0], [74.4, 1187.0], [74.5, 1188.0], [74.6, 1188.0], [74.7, 1189.0], [74.8, 1190.0], [74.9, 1191.0], [75.0, 1192.0], [75.1, 1192.0], [75.2, 1193.0], [75.3, 1194.0], [75.4, 1195.0], [75.5, 1195.0], [75.6, 1196.0], [75.7, 1197.0], [75.8, 1198.0], [75.9, 1199.0], [76.0, 1200.0], [76.1, 1200.0], [76.2, 1201.0], [76.3, 1202.0], [76.4, 1203.0], [76.5, 1204.0], [76.6, 1206.0], [76.7, 1207.0], [76.8, 1208.0], [76.9, 1209.0], [77.0, 1210.0], [77.1, 1211.0], [77.2, 1212.0], [77.3, 1212.0], [77.4, 1213.0], [77.5, 1215.0], [77.6, 1216.0], [77.7, 1217.0], [77.8, 1218.0], [77.9, 1219.0], [78.0, 1220.0], [78.1, 1221.0], [78.2, 1222.0], [78.3, 1223.0], [78.4, 1225.0], [78.5, 1227.0], [78.6, 1229.0], [78.7, 1231.0], [78.8, 1234.0], [78.9, 1235.0], [79.0, 1238.0], [79.1, 1239.0], [79.2, 1243.0], [79.3, 1245.0], [79.4, 1248.0], [79.5, 1250.0], [79.6, 1253.0], [79.7, 1256.0], [79.8, 1258.0], [79.9, 1260.0], [80.0, 1262.0], [80.1, 1265.0], [80.2, 1267.0], [80.3, 1271.0], [80.4, 1273.0], [80.5, 1275.0], [80.6, 1276.0], [80.7, 1279.0], [80.8, 1281.0], [80.9, 1283.0], [81.0, 1285.0], [81.1, 1287.0], [81.2, 1288.0], [81.3, 1289.0], [81.4, 1291.0], [81.5, 1292.0], [81.6, 1294.0], [81.7, 1296.0], [81.8, 1299.0], [81.9, 1303.0], [82.0, 1305.0], [82.1, 1309.0], [82.2, 1311.0], [82.3, 1315.0], [82.4, 1317.0], [82.5, 1318.0], [82.6, 1320.0], [82.7, 1323.0], [82.8, 1324.0], [82.9, 1325.0], [83.0, 1326.0], [83.1, 1327.0], [83.2, 1328.0], [83.3, 1330.0], [83.4, 1331.0], [83.5, 1332.0], [83.6, 1333.0], [83.7, 1334.0], [83.8, 1335.0], [83.9, 1337.0], [84.0, 1338.0], [84.1, 1338.0], [84.2, 1338.0], [84.3, 1340.0], [84.4, 1340.0], [84.5, 1341.0], [84.6, 1342.0], [84.7, 1343.0], [84.8, 1344.0], [84.9, 1345.0], [85.0, 1346.0], [85.1, 1347.0], [85.2, 1348.0], [85.3, 1349.0], [85.4, 1351.0], [85.5, 1352.0], [85.6, 1353.0], [85.7, 1354.0], [85.8, 1355.0], [85.9, 1356.0], [86.0, 1357.0], [86.1, 1358.0], [86.2, 1358.0], [86.3, 1359.0], [86.4, 1361.0], [86.5, 1362.0], [86.6, 1364.0], [86.7, 1366.0], [86.8, 1368.0], [86.9, 1370.0], [87.0, 1372.0], [87.1, 1374.0], [87.2, 1376.0], [87.3, 1379.0], [87.4, 1381.0], [87.5, 1383.0], [87.6, 1386.0], [87.7, 1387.0], [87.8, 1388.0], [87.9, 1391.0], [88.0, 1392.0], [88.1, 1393.0], [88.2, 1394.0], [88.3, 1396.0], [88.4, 1396.0], [88.5, 1398.0], [88.6, 1399.0], [88.7, 1401.0], [88.8, 1402.0], [88.9, 1404.0], [89.0, 1407.0], [89.1, 1410.0], [89.2, 1413.0], [89.3, 1422.0], [89.4, 1425.0], [89.5, 1428.0], [89.6, 1432.0], [89.7, 1435.0], [89.8, 1437.0], [89.9, 1439.0], [90.0, 1440.0], [90.1, 1442.0], [90.2, 1444.0], [90.3, 1445.0], [90.4, 1446.0], [90.5, 1447.0], [90.6, 1449.0], [90.7, 1451.0], [90.8, 1452.0], [90.9, 1453.0], [91.0, 1454.0], [91.1, 1456.0], [91.2, 1458.0], [91.3, 1460.0], [91.4, 1463.0], [91.5, 1464.0], [91.6, 1466.0], [91.7, 1468.0], [91.8, 1469.0], [91.9, 1471.0], [92.0, 1473.0], [92.1, 1474.0], [92.2, 1475.0], [92.3, 1478.0], [92.4, 1479.0], [92.5, 1482.0], [92.6, 1484.0], [92.7, 1485.0], [92.8, 1487.0], [92.9, 1488.0], [93.0, 1489.0], [93.1, 1491.0], [93.2, 1492.0], [93.3, 1493.0], [93.4, 1494.0], [93.5, 1495.0], [93.6, 1496.0], [93.7, 1497.0], [93.8, 1498.0], [93.9, 1500.0], [94.0, 1501.0], [94.1, 1502.0], [94.2, 1503.0], [94.3, 1504.0], [94.4, 1504.0], [94.5, 1506.0], [94.6, 1508.0], [94.7, 1509.0], [94.8, 1511.0], [94.9, 1513.0], [95.0, 1514.0], [95.1, 1516.0], [95.2, 1517.0], [95.3, 1520.0], [95.4, 1521.0], [95.5, 1522.0], [95.6, 1524.0], [95.7, 1526.0], [95.8, 1528.0], [95.9, 1530.0], [96.0, 1532.0], [96.1, 1533.0], [96.2, 1534.0], [96.3, 1536.0], [96.4, 1537.0], [96.5, 1539.0], [96.6, 1541.0], [96.7, 1545.0], [96.8, 1549.0], [96.9, 1554.0], [97.0, 1557.0], [97.1, 1561.0], [97.2, 1569.0], [97.3, 1573.0], [97.4, 1578.0], [97.5, 1582.0], [97.6, 1591.0], [97.7, 1599.0], [97.8, 1602.0], [97.9, 1605.0], [98.0, 1608.0], [98.1, 1611.0], [98.2, 1612.0], [98.3, 1614.0], [98.4, 1616.0], [98.5, 1618.0], [98.6, 1621.0], [98.7, 1624.0], [98.8, 1627.0], [98.9, 1630.0], [99.0, 1635.0], [99.1, 1640.0], [99.2, 1644.0], [99.3, 1648.0], [99.4, 1654.0], [99.5, 1661.0], [99.6, 1679.0], [99.7, 1687.0], [99.8, 1693.0], [99.9, 1699.0], [100.0, 1712.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 4.0], [0.3, 4.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 5.0], [0.8, 5.0], [0.9, 6.0], [1.0, 8.0], [1.1, 11.0], [1.2, 12.0], [1.3, 14.0], [1.4, 16.0], [1.5, 17.0], [1.6, 19.0], [1.7, 20.0], [1.8, 21.0], [1.9, 23.0], [2.0, 24.0], [2.1, 24.0], [2.2, 25.0], [2.3, 26.0], [2.4, 26.0], [2.5, 27.0], [2.6, 27.0], [2.7, 27.0], [2.8, 27.0], [2.9, 28.0], [3.0, 28.0], [3.1, 28.0], [3.2, 28.0], [3.3, 29.0], [3.4, 29.0], [3.5, 29.0], [3.6, 29.0], [3.7, 30.0], [3.8, 30.0], [3.9, 30.0], [4.0, 30.0], [4.1, 30.0], [4.2, 31.0], [4.3, 31.0], [4.4, 31.0], [4.5, 31.0], [4.6, 31.0], [4.7, 31.0], [4.8, 31.0], [4.9, 32.0], [5.0, 32.0], [5.1, 32.0], [5.2, 32.0], [5.3, 32.0], [5.4, 32.0], [5.5, 32.0], [5.6, 32.0], [5.7, 33.0], [5.8, 33.0], [5.9, 33.0], [6.0, 33.0], [6.1, 33.0], [6.2, 33.0], [6.3, 33.0], [6.4, 33.0], [6.5, 33.0], [6.6, 33.0], [6.7, 33.0], [6.8, 33.0], [6.9, 33.0], [7.0, 34.0], [7.1, 34.0], [7.2, 34.0], [7.3, 34.0], [7.4, 34.0], [7.5, 34.0], [7.6, 34.0], [7.7, 34.0], [7.8, 34.0], [7.9, 34.0], [8.0, 34.0], [8.1, 34.0], [8.2, 34.0], [8.3, 34.0], [8.4, 34.0], [8.5, 34.0], [8.6, 34.0], [8.7, 34.0], [8.8, 34.0], [8.9, 34.0], [9.0, 34.0], [9.1, 34.0], [9.2, 34.0], [9.3, 34.0], [9.4, 35.0], [9.5, 35.0], [9.6, 35.0], [9.7, 35.0], [9.8, 35.0], [9.9, 35.0], [10.0, 35.0], [10.1, 35.0], [10.2, 35.0], [10.3, 35.0], [10.4, 35.0], [10.5, 35.0], [10.6, 35.0], [10.7, 35.0], [10.8, 35.0], [10.9, 35.0], [11.0, 35.0], [11.1, 35.0], [11.2, 35.0], [11.3, 35.0], [11.4, 35.0], [11.5, 35.0], [11.6, 35.0], [11.7, 35.0], [11.8, 35.0], [11.9, 35.0], [12.0, 35.0], [12.1, 35.0], [12.2, 35.0], [12.3, 35.0], [12.4, 35.0], [12.5, 35.0], [12.6, 36.0], [12.7, 36.0], [12.8, 36.0], [12.9, 36.0], [13.0, 36.0], [13.1, 36.0], [13.2, 36.0], [13.3, 36.0], [13.4, 36.0], [13.5, 36.0], [13.6, 36.0], [13.7, 36.0], [13.8, 36.0], [13.9, 36.0], [14.0, 36.0], [14.1, 36.0], [14.2, 36.0], [14.3, 36.0], [14.4, 36.0], [14.5, 36.0], [14.6, 36.0], [14.7, 36.0], [14.8, 36.0], [14.9, 36.0], [15.0, 36.0], [15.1, 36.0], [15.2, 36.0], [15.3, 36.0], [15.4, 36.0], [15.5, 37.0], [15.6, 37.0], [15.7, 37.0], [15.8, 37.0], [15.9, 37.0], [16.0, 37.0], [16.1, 37.0], [16.2, 37.0], [16.3, 37.0], [16.4, 37.0], [16.5, 37.0], [16.6, 37.0], [16.7, 37.0], [16.8, 37.0], [16.9, 37.0], [17.0, 37.0], [17.1, 37.0], [17.2, 37.0], [17.3, 37.0], [17.4, 37.0], [17.5, 37.0], [17.6, 37.0], [17.7, 37.0], [17.8, 37.0], [17.9, 37.0], [18.0, 37.0], [18.1, 37.0], [18.2, 37.0], [18.3, 37.0], [18.4, 37.0], [18.5, 37.0], [18.6, 37.0], [18.7, 37.0], [18.8, 37.0], [18.9, 38.0], [19.0, 38.0], [19.1, 38.0], [19.2, 38.0], [19.3, 38.0], [19.4, 38.0], [19.5, 38.0], [19.6, 38.0], [19.7, 38.0], [19.8, 38.0], [19.9, 38.0], [20.0, 38.0], [20.1, 38.0], [20.2, 38.0], [20.3, 38.0], [20.4, 38.0], [20.5, 38.0], [20.6, 38.0], [20.7, 38.0], [20.8, 38.0], [20.9, 38.0], [21.0, 38.0], [21.1, 38.0], [21.2, 38.0], [21.3, 38.0], [21.4, 38.0], [21.5, 38.0], [21.6, 38.0], [21.7, 38.0], [21.8, 38.0], [21.9, 38.0], [22.0, 38.0], [22.1, 38.0], [22.2, 38.0], [22.3, 38.0], [22.4, 38.0], [22.5, 38.0], [22.6, 38.0], [22.7, 38.0], [22.8, 38.0], [22.9, 39.0], [23.0, 39.0], [23.1, 39.0], [23.2, 39.0], [23.3, 39.0], [23.4, 39.0], [23.5, 39.0], [23.6, 39.0], [23.7, 39.0], [23.8, 39.0], [23.9, 39.0], [24.0, 39.0], [24.1, 39.0], [24.2, 39.0], [24.3, 39.0], [24.4, 39.0], [24.5, 39.0], [24.6, 39.0], [24.7, 39.0], [24.8, 39.0], [24.9, 39.0], [25.0, 39.0], [25.1, 39.0], [25.2, 39.0], [25.3, 39.0], [25.4, 39.0], [25.5, 39.0], [25.6, 39.0], [25.7, 39.0], [25.8, 39.0], [25.9, 39.0], [26.0, 39.0], [26.1, 39.0], [26.2, 39.0], [26.3, 39.0], [26.4, 39.0], [26.5, 39.0], [26.6, 39.0], [26.7, 39.0], [26.8, 39.0], [26.9, 39.0], [27.0, 39.0], [27.1, 39.0], [27.2, 39.0], [27.3, 39.0], [27.4, 39.0], [27.5, 39.0], [27.6, 39.0], [27.7, 39.0], [27.8, 40.0], [27.9, 40.0], [28.0, 40.0], [28.1, 40.0], [28.2, 40.0], [28.3, 40.0], [28.4, 40.0], [28.5, 40.0], [28.6, 40.0], [28.7, 40.0], [28.8, 40.0], [28.9, 40.0], [29.0, 40.0], [29.1, 40.0], [29.2, 40.0], [29.3, 40.0], [29.4, 40.0], [29.5, 40.0], [29.6, 40.0], [29.7, 40.0], [29.8, 40.0], [29.9, 40.0], [30.0, 40.0], [30.1, 40.0], [30.2, 40.0], [30.3, 40.0], [30.4, 40.0], [30.5, 40.0], [30.6, 40.0], [30.7, 40.0], [30.8, 40.0], [30.9, 40.0], [31.0, 40.0], [31.1, 40.0], [31.2, 40.0], [31.3, 40.0], [31.4, 40.0], [31.5, 40.0], [31.6, 40.0], [31.7, 40.0], [31.8, 40.0], [31.9, 40.0], [32.0, 40.0], [32.1, 41.0], [32.2, 41.0], [32.3, 41.0], [32.4, 41.0], [32.5, 41.0], [32.6, 41.0], [32.7, 41.0], [32.8, 41.0], [32.9, 41.0], [33.0, 41.0], [33.1, 41.0], [33.2, 41.0], [33.3, 41.0], [33.4, 41.0], [33.5, 41.0], [33.6, 41.0], [33.7, 41.0], [33.8, 41.0], [33.9, 41.0], [34.0, 41.0], [34.1, 41.0], [34.2, 41.0], [34.3, 41.0], [34.4, 41.0], [34.5, 41.0], [34.6, 41.0], [34.7, 41.0], [34.8, 41.0], [34.9, 41.0], [35.0, 41.0], [35.1, 41.0], [35.2, 41.0], [35.3, 41.0], [35.4, 41.0], [35.5, 41.0], [35.6, 41.0], [35.7, 41.0], [35.8, 41.0], [35.9, 41.0], [36.0, 41.0], [36.1, 41.0], [36.2, 41.0], [36.3, 41.0], [36.4, 41.0], [36.5, 42.0], [36.6, 42.0], [36.7, 42.0], [36.8, 42.0], [36.9, 42.0], [37.0, 42.0], [37.1, 42.0], [37.2, 42.0], [37.3, 42.0], [37.4, 42.0], [37.5, 42.0], [37.6, 42.0], [37.7, 42.0], [37.8, 42.0], [37.9, 42.0], [38.0, 42.0], [38.1, 42.0], [38.2, 42.0], [38.3, 42.0], [38.4, 42.0], [38.5, 42.0], [38.6, 42.0], [38.7, 42.0], [38.8, 42.0], [38.9, 42.0], [39.0, 42.0], [39.1, 42.0], [39.2, 42.0], [39.3, 42.0], [39.4, 42.0], [39.5, 42.0], [39.6, 42.0], [39.7, 42.0], [39.8, 42.0], [39.9, 42.0], [40.0, 42.0], [40.1, 42.0], [40.2, 42.0], [40.3, 42.0], [40.4, 42.0], [40.5, 42.0], [40.6, 42.0], [40.7, 42.0], [40.8, 42.0], [40.9, 43.0], [41.0, 43.0], [41.1, 43.0], [41.2, 43.0], [41.3, 43.0], [41.4, 43.0], [41.5, 43.0], [41.6, 43.0], [41.7, 43.0], [41.8, 43.0], [41.9, 43.0], [42.0, 43.0], [42.1, 43.0], [42.2, 43.0], [42.3, 43.0], [42.4, 43.0], [42.5, 43.0], [42.6, 43.0], [42.7, 43.0], [42.8, 43.0], [42.9, 43.0], [43.0, 43.0], [43.1, 43.0], [43.2, 43.0], [43.3, 43.0], [43.4, 43.0], [43.5, 43.0], [43.6, 43.0], [43.7, 43.0], [43.8, 43.0], [43.9, 43.0], [44.0, 43.0], [44.1, 43.0], [44.2, 43.0], [44.3, 43.0], [44.4, 43.0], [44.5, 43.0], [44.6, 43.0], [44.7, 43.0], [44.8, 43.0], [44.9, 43.0], [45.0, 43.0], [45.1, 43.0], [45.2, 43.0], [45.3, 43.0], [45.4, 43.0], [45.5, 44.0], [45.6, 44.0], [45.7, 44.0], [45.8, 44.0], [45.9, 44.0], [46.0, 44.0], [46.1, 44.0], [46.2, 44.0], [46.3, 44.0], [46.4, 44.0], [46.5, 44.0], [46.6, 44.0], [46.7, 44.0], [46.8, 44.0], [46.9, 44.0], [47.0, 44.0], [47.1, 44.0], [47.2, 44.0], [47.3, 44.0], [47.4, 44.0], [47.5, 44.0], [47.6, 44.0], [47.7, 44.0], [47.8, 44.0], [47.9, 44.0], [48.0, 44.0], [48.1, 44.0], [48.2, 44.0], [48.3, 44.0], [48.4, 44.0], [48.5, 44.0], [48.6, 44.0], [48.7, 44.0], [48.8, 44.0], [48.9, 44.0], [49.0, 44.0], [49.1, 44.0], [49.2, 44.0], [49.3, 44.0], [49.4, 44.0], [49.5, 44.0], [49.6, 44.0], [49.7, 44.0], [49.8, 44.0], [49.9, 44.0], [50.0, 44.0], [50.1, 44.0], [50.2, 44.0], [50.3, 45.0], [50.4, 45.0], [50.5, 45.0], [50.6, 45.0], [50.7, 45.0], [50.8, 45.0], [50.9, 45.0], [51.0, 45.0], [51.1, 45.0], [51.2, 45.0], [51.3, 45.0], [51.4, 45.0], [51.5, 45.0], [51.6, 45.0], [51.7, 45.0], [51.8, 45.0], [51.9, 45.0], [52.0, 45.0], [52.1, 45.0], [52.2, 45.0], [52.3, 45.0], [52.4, 45.0], [52.5, 45.0], [52.6, 45.0], [52.7, 45.0], [52.8, 45.0], [52.9, 45.0], [53.0, 45.0], [53.1, 45.0], [53.2, 45.0], [53.3, 45.0], [53.4, 45.0], [53.5, 45.0], [53.6, 45.0], [53.7, 45.0], [53.8, 45.0], [53.9, 45.0], [54.0, 45.0], [54.1, 46.0], [54.2, 46.0], [54.3, 46.0], [54.4, 46.0], [54.5, 46.0], [54.6, 46.0], [54.7, 46.0], [54.8, 46.0], [54.9, 46.0], [55.0, 46.0], [55.1, 46.0], [55.2, 46.0], [55.3, 46.0], [55.4, 46.0], [55.5, 46.0], [55.6, 46.0], [55.7, 46.0], [55.8, 46.0], [55.9, 46.0], [56.0, 46.0], [56.1, 46.0], [56.2, 46.0], [56.3, 46.0], [56.4, 46.0], [56.5, 46.0], [56.6, 46.0], [56.7, 46.0], [56.8, 46.0], [56.9, 46.0], [57.0, 46.0], [57.1, 46.0], [57.2, 46.0], [57.3, 46.0], [57.4, 46.0], [57.5, 46.0], [57.6, 46.0], [57.7, 46.0], [57.8, 46.0], [57.9, 46.0], [58.0, 46.0], [58.1, 46.0], [58.2, 46.0], [58.3, 47.0], [58.4, 47.0], [58.5, 47.0], [58.6, 47.0], [58.7, 47.0], [58.8, 47.0], [58.9, 47.0], [59.0, 47.0], [59.1, 47.0], [59.2, 47.0], [59.3, 47.0], [59.4, 47.0], [59.5, 47.0], [59.6, 47.0], [59.7, 47.0], [59.8, 47.0], [59.9, 47.0], [60.0, 47.0], [60.1, 47.0], [60.2, 47.0], [60.3, 47.0], [60.4, 47.0], [60.5, 47.0], [60.6, 47.0], [60.7, 47.0], [60.8, 47.0], [60.9, 47.0], [61.0, 47.0], [61.1, 47.0], [61.2, 47.0], [61.3, 47.0], [61.4, 47.0], [61.5, 47.0], [61.6, 47.0], [61.7, 47.0], [61.8, 47.0], [61.9, 47.0], [62.0, 47.0], [62.1, 47.0], [62.2, 47.0], [62.3, 47.0], [62.4, 47.0], [62.5, 48.0], [62.6, 48.0], [62.7, 48.0], [62.8, 48.0], [62.9, 48.0], [63.0, 48.0], [63.1, 48.0], [63.2, 48.0], [63.3, 48.0], [63.4, 48.0], [63.5, 48.0], [63.6, 48.0], [63.7, 48.0], [63.8, 48.0], [63.9, 48.0], [64.0, 48.0], [64.1, 48.0], [64.2, 48.0], [64.3, 48.0], [64.4, 48.0], [64.5, 48.0], [64.6, 48.0], [64.7, 48.0], [64.8, 48.0], [64.9, 48.0], [65.0, 48.0], [65.1, 48.0], [65.2, 48.0], [65.3, 48.0], [65.4, 48.0], [65.5, 48.0], [65.6, 48.0], [65.7, 48.0], [65.8, 48.0], [65.9, 48.0], [66.0, 48.0], [66.1, 48.0], [66.2, 48.0], [66.3, 48.0], [66.4, 48.0], [66.5, 48.0], [66.6, 48.0], [66.7, 49.0], [66.8, 49.0], [66.9, 49.0], [67.0, 49.0], [67.1, 49.0], [67.2, 49.0], [67.3, 49.0], [67.4, 49.0], [67.5, 49.0], [67.6, 49.0], [67.7, 49.0], [67.8, 49.0], [67.9, 49.0], [68.0, 49.0], [68.1, 49.0], [68.2, 49.0], [68.3, 49.0], [68.4, 49.0], [68.5, 49.0], [68.6, 49.0], [68.7, 49.0], [68.8, 49.0], [68.9, 49.0], [69.0, 49.0], [69.1, 49.0], [69.2, 49.0], [69.3, 49.0], [69.4, 49.0], [69.5, 49.0], [69.6, 49.0], [69.7, 49.0], [69.8, 49.0], [69.9, 49.0], [70.0, 49.0], [70.1, 49.0], [70.2, 49.0], [70.3, 50.0], [70.4, 50.0], [70.5, 50.0], [70.6, 50.0], [70.7, 50.0], [70.8, 50.0], [70.9, 50.0], [71.0, 50.0], [71.1, 50.0], [71.2, 50.0], [71.3, 50.0], [71.4, 50.0], [71.5, 50.0], [71.6, 50.0], [71.7, 50.0], [71.8, 50.0], [71.9, 50.0], [72.0, 50.0], [72.1, 50.0], [72.2, 50.0], [72.3, 50.0], [72.4, 50.0], [72.5, 50.0], [72.6, 50.0], [72.7, 50.0], [72.8, 50.0], [72.9, 50.0], [73.0, 50.0], [73.1, 50.0], [73.2, 50.0], [73.3, 50.0], [73.4, 51.0], [73.5, 51.0], [73.6, 51.0], [73.7, 51.0], [73.8, 51.0], [73.9, 51.0], [74.0, 51.0], [74.1, 51.0], [74.2, 51.0], [74.3, 51.0], [74.4, 51.0], [74.5, 51.0], [74.6, 51.0], [74.7, 51.0], [74.8, 51.0], [74.9, 51.0], [75.0, 51.0], [75.1, 51.0], [75.2, 51.0], [75.3, 51.0], [75.4, 51.0], [75.5, 51.0], [75.6, 51.0], [75.7, 51.0], [75.8, 51.0], [75.9, 51.0], [76.0, 51.0], [76.1, 51.0], [76.2, 51.0], [76.3, 51.0], [76.4, 52.0], [76.5, 52.0], [76.6, 52.0], [76.7, 52.0], [76.8, 52.0], [76.9, 52.0], [77.0, 52.0], [77.1, 52.0], [77.2, 52.0], [77.3, 52.0], [77.4, 52.0], [77.5, 52.0], [77.6, 52.0], [77.7, 52.0], [77.8, 52.0], [77.9, 52.0], [78.0, 52.0], [78.1, 52.0], [78.2, 52.0], [78.3, 52.0], [78.4, 52.0], [78.5, 52.0], [78.6, 52.0], [78.7, 52.0], [78.8, 52.0], [78.9, 52.0], [79.0, 52.0], [79.1, 53.0], [79.2, 53.0], [79.3, 53.0], [79.4, 53.0], [79.5, 53.0], [79.6, 53.0], [79.7, 53.0], [79.8, 53.0], [79.9, 53.0], [80.0, 53.0], [80.1, 53.0], [80.2, 53.0], [80.3, 53.0], [80.4, 53.0], [80.5, 53.0], [80.6, 53.0], [80.7, 53.0], [80.8, 53.0], [80.9, 53.0], [81.0, 53.0], [81.1, 53.0], [81.2, 53.0], [81.3, 53.0], [81.4, 54.0], [81.5, 54.0], [81.6, 54.0], [81.7, 54.0], [81.8, 54.0], [81.9, 54.0], [82.0, 54.0], [82.1, 54.0], [82.2, 54.0], [82.3, 54.0], [82.4, 54.0], [82.5, 54.0], [82.6, 54.0], [82.7, 54.0], [82.8, 54.0], [82.9, 54.0], [83.0, 54.0], [83.1, 54.0], [83.2, 54.0], [83.3, 54.0], [83.4, 55.0], [83.5, 55.0], [83.6, 55.0], [83.7, 55.0], [83.8, 55.0], [83.9, 55.0], [84.0, 55.0], [84.1, 55.0], [84.2, 55.0], [84.3, 55.0], [84.4, 55.0], [84.5, 55.0], [84.6, 55.0], [84.7, 55.0], [84.8, 55.0], [84.9, 56.0], [85.0, 56.0], [85.1, 56.0], [85.2, 56.0], [85.3, 56.0], [85.4, 56.0], [85.5, 56.0], [85.6, 56.0], [85.7, 56.0], [85.8, 56.0], [85.9, 56.0], [86.0, 56.0], [86.1, 56.0], [86.2, 56.0], [86.3, 56.0], [86.4, 57.0], [86.5, 57.0], [86.6, 57.0], [86.7, 57.0], [86.8, 57.0], [86.9, 57.0], [87.0, 57.0], [87.1, 57.0], [87.2, 57.0], [87.3, 57.0], [87.4, 57.0], [87.5, 57.0], [87.6, 57.0], [87.7, 57.0], [87.8, 57.0], [87.9, 58.0], [88.0, 58.0], [88.1, 58.0], [88.2, 58.0], [88.3, 58.0], [88.4, 58.0], [88.5, 58.0], [88.6, 58.0], [88.7, 58.0], [88.8, 58.0], [88.9, 58.0], [89.0, 58.0], [89.1, 59.0], [89.2, 59.0], [89.3, 59.0], [89.4, 59.0], [89.5, 59.0], [89.6, 59.0], [89.7, 59.0], [89.8, 59.0], [89.9, 59.0], [90.0, 59.0], [90.1, 59.0], [90.2, 60.0], [90.3, 60.0], [90.4, 60.0], [90.5, 60.0], [90.6, 60.0], [90.7, 60.0], [90.8, 60.0], [90.9, 60.0], [91.0, 61.0], [91.1, 61.0], [91.2, 61.0], [91.3, 61.0], [91.4, 61.0], [91.5, 61.0], [91.6, 61.0], [91.7, 62.0], [91.8, 62.0], [91.9, 62.0], [92.0, 62.0], [92.1, 62.0], [92.2, 62.0], [92.3, 62.0], [92.4, 63.0], [92.5, 63.0], [92.6, 63.0], [92.7, 63.0], [92.8, 63.0], [92.9, 63.0], [93.0, 64.0], [93.1, 64.0], [93.2, 64.0], [93.3, 65.0], [93.4, 65.0], [93.5, 65.0], [93.6, 66.0], [93.7, 66.0], [93.8, 66.0], [93.9, 67.0], [94.0, 67.0], [94.1, 68.0], [94.2, 69.0], [94.3, 70.0], [94.4, 70.0], [94.5, 71.0], [94.6, 72.0], [94.7, 72.0], [94.8, 73.0], [94.9, 74.0], [95.0, 75.0], [95.1, 75.0], [95.2, 76.0], [95.3, 77.0], [95.4, 78.0], [95.5, 81.0], [95.6, 84.0], [95.7, 91.0], [95.8, 118.0], [95.9, 128.0], [96.0, 136.0], [96.1, 146.0], [96.2, 157.0], [96.3, 166.0], [96.4, 171.0], [96.5, 173.0], [96.6, 175.0], [96.7, 179.0], [96.8, 182.0], [96.9, 186.0], [97.0, 190.0], [97.1, 193.0], [97.2, 195.0], [97.3, 203.0], [97.4, 211.0], [97.5, 215.0], [97.6, 218.0], [97.7, 220.0], [97.8, 223.0], [97.9, 226.0], [98.0, 229.0], [98.1, 231.0], [98.2, 236.0], [98.3, 242.0], [98.4, 247.0], [98.5, 253.0], [98.6, 256.0], [98.7, 260.0], [98.8, 264.0], [98.9, 269.0], [99.0, 271.0], [99.1, 273.0], [99.2, 276.0], [99.3, 278.0], [99.4, 280.0], [99.5, 284.0], [99.6, 290.0], [99.7, 297.0], [99.8, 328.0], [99.9, 369.0], [100.0, 1261.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 9996.0, "series": [{"data": [[0.0, 9996.0], [100.0, 2.0], [200.0, 1.0], [1000.0, 1.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 283.0], [600.0, 643.0], [700.0, 875.0], [200.0, 366.0], [800.0, 792.0], [900.0, 908.0], [1000.0, 855.0], [1100.0, 1245.0], [300.0, 484.0], [1200.0, 583.0], [1300.0, 679.0], [1400.0, 526.0], [1500.0, 383.0], [100.0, 242.0], [400.0, 365.0], [1600.0, 220.0], [1700.0, 10.0], [500.0, 541.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 9577.0], [1100.0, 1.0], [300.0, 21.0], [1200.0, 4.0], [100.0, 148.0], [200.0, 247.0], [400.0, 2.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 603.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 21738.0, "series": [{"data": [[0.0, 21738.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 7659.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 603.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 93.9595000000003, "minX": 1.66901568E12, "maxY": 1129.2773999999986, "series": [{"data": [[1.66901568E12, 1129.2773999999986]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.66901568E12, 127.9496999999997]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.66901568E12, 93.9595000000003]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901568E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.666666666666666, "minX": 1.0, "maxY": 1605.0, "series": [{"data": [[5.0, 67.0], [9.0, 36.22222222222222], [10.0, 68.0], [11.0, 40.25], [12.0, 34.5], [13.0, 43.33333333333333], [14.0, 50.2], [15.0, 59.666666666666664], [16.0, 55.5], [17.0, 49.0], [18.0, 45.6], [19.0, 53.5], [20.0, 52.0], [21.0, 36.0], [22.0, 50.5], [23.0, 35.285714285714285], [24.0, 35.22222222222222], [25.0, 34.0], [26.0, 49.18181818181818], [27.0, 33.16666666666667], [28.0, 47.0], [29.0, 40.64705882352941], [30.0, 42.833333333333336], [31.0, 42.0], [33.0, 43.7], [32.0, 42.38888888888889], [35.0, 43.160000000000004], [34.0, 42.851851851851855], [37.0, 47.07407407407407], [36.0, 46.91304347826087], [39.0, 46.65517241379312], [38.0, 50.375], [40.0, 47.78571428571428], [41.0, 48.833333333333336], [43.0, 53.03448275862069], [42.0, 55.32142857142858], [45.0, 43.63636363636362], [44.0, 46.42857142857143], [47.0, 46.48387096774193], [46.0, 49.94871794871794], [49.0, 43.874999999999986], [48.0, 47.375000000000014], [51.0, 52.74999999999999], [50.0, 53.30357142857144], [53.0, 49.54098360655738], [52.0, 53.012195121951194], [54.0, 51.3125], [55.0, 50.551020408163275], [56.0, 52.125000000000014], [57.0, 50.86956521739131], [59.0, 49.8372093023256], [58.0, 53.68571428571429], [61.0, 53.29787234042554], [60.0, 53.500000000000014], [62.0, 51.95918367346939], [63.0, 53.99999999999999], [67.0, 53.985507246376805], [65.0, 51.41176470588235], [66.0, 55.423728813559315], [64.0, 51.55294117647058], [71.0, 55.964285714285715], [70.0, 54.26582278481012], [68.0, 56.148148148148145], [69.0, 52.50666666666667], [75.0, 55.275862068965516], [74.0, 55.178217821782184], [73.0, 53.09375000000001], [72.0, 53.830985915492946], [79.0, 55.06315789473685], [77.0, 54.482758620689665], [78.0, 53.79761904761905], [76.0, 55.516483516483525], [81.0, 56.13043478260869], [80.0, 54.011235955056186], [82.0, 56.23170731707317], [83.0, 58.6144578313253], [86.0, 54.491228070175445], [84.0, 57.14492753623187], [87.0, 56.257142857142846], [85.0, 54.86153846153845], [90.0, 56.76923076923078], [88.0, 57.352112676056336], [91.0, 57.72916666666667], [89.0, 57.355932203389834], [94.0, 56.56140350877192], [93.0, 56.35714285714286], [95.0, 58.80327868852459], [92.0, 56.53846153846154], [96.0, 58.16666666666668], [99.0, 62.44444444444445], [98.0, 59.25000000000001], [97.0, 56.1578947368421], [103.0, 58.05128205128206], [102.0, 58.68181818181818], [101.0, 60.77083333333333], [100.0, 59.76], [107.0, 55.88888888888889], [106.0, 59.62857142857142], [105.0, 58.70967741935484], [104.0, 57.86000000000001], [110.0, 58.57575757575758], [109.0, 59.212121212121204], [108.0, 59.08000000000001], [111.0, 58.64285714285715], [115.0, 56.31818181818181], [114.0, 55.584905660377366], [112.0, 58.04651162790697], [113.0, 58.96666666666665], [119.0, 60.421052631578945], [118.0, 62.53125], [117.0, 55.48648648648649], [116.0, 58.166666666666664], [122.0, 58.55], [121.0, 58.32142857142857], [120.0, 55.630434782608695], [123.0, 58.08823529411765], [125.0, 61.13432835820896], [124.0, 60.41935483870968], [126.0, 56.44736842105262], [127.0, 55.04444444444445], [135.0, 61.03846153846154], [134.0, 60.0888888888889], [133.0, 61.255813953488364], [132.0, 61.818181818181834], [131.0, 58.87500000000003], [129.0, 53.35227272727272], [128.0, 54.9620253164557], [130.0, 61.90196078431373], [143.0, 63.57142857142856], [142.0, 59.207547169811306], [141.0, 61.18461538461537], [140.0, 59.03773584905658], [139.0, 57.80357142857143], [138.0, 57.36842105263159], [137.0, 56.410256410256416], [136.0, 55.81538461538462], [149.0, 63.33333333333333], [148.0, 64.125], [147.0, 60.411764705882355], [145.0, 59.888888888888886], [150.0, 61.8], [146.0, 61.03703703703703], [144.0, 60.3103448275862], [151.0, 65.74285714285713], [159.0, 59.473684210526336], [158.0, 58.38181818181817], [157.0, 62.20634920634921], [154.0, 58.9622641509434], [152.0, 62.46511627906977], [155.0, 60.510204081632644], [156.0, 62.769230769230774], [153.0, 58.24999999999999], [167.0, 59.88709677419353], [166.0, 61.363636363636374], [165.0, 65.73076923076923], [164.0, 62.57627118644064], [163.0, 62.215686274509785], [162.0, 64.28571428571429], [161.0, 64.81632653061223], [160.0, 58.95454545454546], [174.0, 66.26086956521738], [173.0, 62.22727272727274], [171.0, 61.401639344262286], [168.0, 58.21621621621622], [170.0, 60.944444444444436], [169.0, 62.580246913580226], [175.0, 64.27083333333336], [172.0, 60.68918918918918], [181.0, 62.36206896551724], [180.0, 60.44615384615384], [179.0, 65.31428571428572], [177.0, 63.15789473684212], [176.0, 57.62499999999999], [183.0, 62.625], [182.0, 59.279999999999994], [178.0, 62.642857142857146], [189.0, 67.60000000000001], [187.0, 61.895833333333336], [185.0, 64.74418604651163], [184.0, 58.99999999999999], [190.0, 64.08904109589041], [188.0, 66.55072463768117], [186.0, 62.92857142857142], [191.0, 62.775], [199.0, 60.5], [198.0, 65.9032258064516], [194.0, 60.55072463768116], [197.0, 65.30769230769232], [195.0, 60.92307692307693], [192.0, 64.49019607843137], [193.0, 64.57142857142858], [196.0, 61.80952380952382], [207.0, 63.6], [206.0, 59.83673469387757], [204.0, 62.43333333333333], [202.0, 58.18965517241379], [201.0, 64.94392523364486], [200.0, 61.333333333333336], [205.0, 60.20454545454545], [203.0, 62.27586206896551], [215.0, 64.34615384615384], [214.0, 61.42857142857142], [213.0, 64.35714285714286], [212.0, 58.09374999999999], [211.0, 62.459999999999994], [210.0, 62.13333333333333], [209.0, 65.3478260869565], [208.0, 65.84210526315789], [219.0, 61.388888888888886], [218.0, 64.7222222222222], [217.0, 62.14999999999999], [216.0, 61.27586206896553], [223.0, 69.12], [222.0, 61.25000000000001], [221.0, 69.05882352941175], [220.0, 64.95744680851065], [231.0, 66.33333333333333], [230.0, 66.27272727272728], [229.0, 67.78571428571429], [228.0, 64.3846153846154], [227.0, 66.96428571428572], [226.0, 65.70588235294116], [225.0, 64.86666666666666], [224.0, 68.41176470588235], [238.0, 65.1], [237.0, 67.6], [235.0, 65.8], [239.0, 64.8125], [236.0, 68.9], [234.0, 74.5], [233.0, 70.25], [232.0, 72.79999999999998], [246.0, 62.5], [244.0, 68.0], [241.0, 67.375], [240.0, 67.19999999999999], [247.0, 66.99999999999999], [245.0, 74.5], [242.0, 68.0], [243.0, 62.05263157894736], [250.0, 67.22222222222223], [248.0, 74.77777777777777], [255.0, 72.0], [254.0, 69.0], [253.0, 66.0769230769231], [252.0, 67.63636363636363], [251.0, 66.66666666666667], [249.0, 79.0], [258.0, 74.66666666666667], [259.0, 69.0], [256.0, 66.0], [257.0, 69.0], [271.0, 83.0], [270.0, 82.0], [268.0, 76.33333333333333], [266.0, 80.0], [265.0, 70.66666666666667], [262.0, 78.0], [261.0, 79.0], [260.0, 65.5], [1.0, 1011.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[127.94879999999962, 58.33129999999985]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 871.0], [3.0, 878.0], [5.0, 884.5], [6.0, 895.0], [7.0, 301.0], [8.0, 903.0], [10.0, 607.6666666666666], [11.0, 918.0], [12.0, 136.28571428571428], [13.0, 189.4], [16.0, 931.5], [17.0, 898.0], [18.0, 936.0], [19.0, 853.0], [21.0, 896.0], [23.0, 901.5], [24.0, 499.0], [25.0, 454.5], [27.0, 478.75], [28.0, 36.666666666666664], [29.0, 625.3333333333334], [30.0, 33.142857142857146], [31.0, 397.0], [32.0, 48.0], [33.0, 928.5], [35.0, 634.3333333333334], [34.0, 45.0], [37.0, 635.6666666666666], [36.0, 44.5], [39.0, 638.0], [41.0, 640.0], [40.0, 44.5], [43.0, 645.0], [42.0, 39.0], [45.0, 498.25], [46.0, 18.6], [47.0, 291.6666666666667], [49.0, 23.4], [48.0, 647.6666666666666], [51.0, 463.66666666666663], [50.0, 52.0], [53.0, 36.5], [52.0, 26.5], [55.0, 18.0], [54.0, 467.16666666666663], [57.0, 413.42857142857144], [61.0, 35.0], [60.0, 565.6], [63.0, 246.38461538461542], [62.0, 38.5], [67.0, 32.75], [64.0, 32.0], [66.0, 923.3333333333334], [71.0, 27.5], [69.0, 476.6666666666667], [68.0, 27.0], [70.0, 28.0], [72.0, 697.0], [79.0, 1011.0], [76.0, 921.5], [82.0, 928.0], [81.0, 876.0], [87.0, 930.2], [90.0, 938.0], [88.0, 945.0], [94.0, 825.0], [93.0, 973.25], [99.0, 981.0], [98.0, 973.5], [97.0, 965.0], [103.0, 62.5], [101.0, 35.0], [102.0, 992.5], [100.0, 920.5], [105.0, 538.0], [104.0, 626.3333333333334], [107.0, 923.5], [111.0, 32.800000000000004], [109.0, 35.0], [108.0, 23.2], [110.0, 721.5], [115.0, 22.0], [112.0, 32.375], [114.0, 839.0], [113.0, 959.0], [117.0, 26.700000000000003], [119.0, 441.2], [116.0, 367.66666666666663], [118.0, 845.0], [122.0, 752.5], [121.0, 28.0], [120.0, 25.25], [125.0, 999.6666666666666], [135.0, 634.6], [133.0, 34.0], [132.0, 508.0], [131.0, 674.0], [128.0, 1011.3333333333334], [138.0, 471.85714285714283], [143.0, 1009.0], [141.0, 1048.6666666666667], [151.0, 1059.3333333333333], [148.0, 1018.5], [147.0, 1153.0], [145.0, 1139.5], [159.0, 1067.3333333333333], [158.0, 1138.0], [155.0, 1081.75], [166.0, 1103.25], [162.0, 1069.6666666666667], [175.0, 1170.0], [171.0, 981.25], [168.0, 898.0], [183.0, 713.3333333333334], [182.0, 335.0], [180.0, 687.6666666666666], [178.0, 681.0], [177.0, 688.0], [189.0, 42.6], [188.0, 231.2], [186.0, 839.25], [190.0, 934.3333333333334], [194.0, 624.5], [195.0, 204.5], [192.0, 132.07142857142856], [193.0, 642.3333333333333], [197.0, 942.0], [205.0, 1052.5], [203.0, 948.6666666666666], [200.0, 943.0], [213.0, 1192.0], [212.0, 1214.0], [211.0, 961.3333333333334], [208.0, 954.3333333333334], [222.0, 952.5], [219.0, 1214.0], [218.0, 858.0], [216.0, 1184.6666666666667], [229.0, 1119.5], [228.0, 1211.0], [226.0, 953.0], [224.0, 1152.0], [238.0, 1221.0], [237.0, 1039.6666666666667], [235.0, 1017.0], [233.0, 1035.25], [247.0, 1233.3333333333333], [244.0, 1233.0], [242.0, 1219.0], [241.0, 980.3333333333334], [254.0, 197.2], [253.0, 66.0], [251.0, 71.58333333333333], [252.0, 65.4], [255.0, 880.0], [250.0, 1222.0], [249.0, 862.0], [268.0, 82.0], [259.0, 71.66666666666669], [260.0, 72.0], [258.0, 787.5], [266.0, 375.5], [267.0, 81.0], [271.0, 967.8], [265.0, 940.0], [263.0, 824.3333333333334], [256.0, 1244.0], [262.0, 1033.0], [284.0, 465.0], [287.0, 643.8333333333334], [285.0, 124.33333333333333], [282.0, 966.6], [277.0, 1064.3333333333333], [275.0, 1040.0], [274.0, 655.5], [291.0, 804.3333333333334], [302.0, 115.0], [301.0, 557.5], [298.0, 125.0], [297.0, 560.8571428571429], [296.0, 125.0], [303.0, 1024.6666666666667], [294.0, 118.75], [292.0, 480.1666666666667], [293.0, 403.25], [290.0, 123.0], [289.0, 124.5], [295.0, 121.0], [306.0, 220.8], [314.0, 269.0], [313.0, 986.0], [315.0, 125.0], [312.0, 112.25], [311.0, 89.66666666666667], [310.0, 342.5], [309.0, 646.25], [307.0, 94.0], [317.0, 233.8571428571429], [316.0, 108.5], [305.0, 87.0], [304.0, 117.0], [319.0, 494.0], [318.0, 192.16666666666669], [322.0, 108.5], [324.0, 113.0], [327.0, 707.0], [325.0, 590.0], [323.0, 570.5], [320.0, 411.0], [321.0, 311.33333333333337], [335.0, 138.0], [328.0, 990.6666666666666], [334.0, 991.0], [331.0, 818.5], [329.0, 709.0], [337.0, 247.2], [338.0, 134.33333333333334], [339.0, 588.0], [336.0, 127.5], [351.0, 592.0], [350.0, 517.0], [349.0, 711.0], [348.0, 618.0], [347.0, 1208.0], [343.0, 507.0], [341.0, 809.3333333333334], [340.0, 1149.5], [355.0, 122.0], [353.0, 331.66666666666663], [352.0, 674.0], [354.0, 739.6666666666666], [367.0, 562.0], [366.0, 531.0], [363.0, 786.0], [360.0, 1044.0], [359.0, 1210.0], [358.0, 721.0], [357.0, 755.0], [382.0, 976.6666666666666], [379.0, 1260.0], [378.0, 546.0], [376.0, 873.0], [372.0, 704.3333333333334], [369.0, 637.6666666666666], [399.0, 1004.3333333333334], [396.0, 721.0], [395.0, 564.0], [394.0, 957.0], [393.0, 1279.0], [391.0, 1073.0], [390.0, 1069.0], [388.0, 550.0], [387.0, 829.0], [385.0, 785.0], [414.0, 675.0], [412.0, 1096.0], [411.0, 1089.0], [409.0, 1011.5], [407.0, 969.5], [405.0, 639.0], [404.0, 568.0], [403.0, 640.5], [401.0, 1188.0], [430.0, 281.1578947368421], [431.0, 231.49999999999997], [429.0, 201.625], [428.0, 205.45454545454547], [427.0, 325.3636363636363], [426.0, 207.22222222222223], [425.0, 212.76923076923077], [424.0, 198.0], [423.0, 195.57142857142858], [422.0, 206.0], [416.0, 456.0], [418.0, 270.6666666666667], [419.0, 185.5], [417.0, 649.75], [421.0, 182.33333333333334], [420.0, 191.0], [447.0, 528.0], [441.0, 318.125], [442.0, 166.0], [440.0, 233.3846153846154], [439.0, 175.4], [438.0, 314.625], [437.0, 198.5], [436.0, 378.46153846153845], [446.0, 163.0], [445.0, 407.875], [444.0, 432.25], [435.0, 253.88888888888889], [434.0, 209.4], [432.0, 411.27272727272725], [433.0, 213.0], [443.0, 220.0], [450.0, 294.75], [454.0, 248.8], [452.0, 170.33333333333334], [453.0, 170.0], [451.0, 211.5], [461.0, 521.0], [462.0, 1048.6666666666667], [460.0, 219.0], [449.0, 609.8], [448.0, 169.66666666666666], [457.0, 169.0], [459.0, 687.0], [458.0, 452.0], [456.0, 433.25], [455.0, 856.75], [477.0, 1331.0], [478.0, 597.0], [476.0, 1338.0], [467.0, 1018.5], [465.0, 555.0], [475.0, 820.0], [474.0, 832.0], [473.0, 1134.0], [472.0, 1220.0], [471.0, 451.0], [470.0, 456.0], [469.0, 1016.6666666666666], [494.0, 1148.0], [492.0, 716.5], [491.0, 452.0], [489.0, 904.0], [487.0, 1127.3333333333333], [484.0, 988.3333333333334], [481.0, 1125.0], [480.0, 666.0], [509.0, 704.5], [508.0, 229.0], [497.0, 733.6666666666666], [507.0, 572.3333333333334], [506.0, 229.0], [505.0, 229.0], [510.0, 392.0], [503.0, 1002.0], [501.0, 599.0], [500.0, 1080.0], [519.0, 364.4], [524.0, 272.25], [527.0, 264.1666666666667], [515.0, 247.0], [512.0, 881.75], [518.0, 280.25], [517.0, 282.0], [516.0, 267.0], [536.0, 261.85714285714283], [537.0, 261.3333333333333], [539.0, 492.1111111111111], [538.0, 333.0], [541.0, 246.0], [540.0, 702.0], [543.0, 246.6], [542.0, 817.0], [529.0, 269.1428571428571], [528.0, 268.4166666666667], [531.0, 263.1428571428571], [530.0, 343.3333333333333], [526.0, 264.79999999999995], [525.0, 344.3636363636363], [523.0, 260.5], [522.0, 259.7142857142857], [521.0, 563.9230769230769], [520.0, 252.375], [534.0, 332.0], [535.0, 310.6], [533.0, 264.85714285714283], [532.0, 609.2857142857143], [575.0, 300.875], [548.0, 253.0], [556.0, 310.0], [557.0, 250.0], [559.0, 803.0], [558.0, 937.0], [545.0, 338.5], [544.0, 249.0], [547.0, 255.0], [546.0, 510.50000000000006], [555.0, 244.0], [553.0, 341.3333333333333], [552.0, 249.66666666666666], [551.0, 368.0], [568.0, 417.0], [570.0, 528.1], [571.0, 318.6], [574.0, 341.0], [573.0, 366.5], [572.0, 369.5], [569.0, 361.5], [561.0, 640.0], [560.0, 601.3333333333334], [563.0, 310.0], [562.0, 302.8333333333333], [565.0, 511.5], [564.0, 505.4], [566.0, 316.5], [567.0, 303.4545454545455], [550.0, 621.75], [549.0, 645.25], [602.0, 1145.0], [581.0, 654.6666666666667], [580.0, 650.2], [577.0, 318.0], [578.0, 781.25], [576.0, 311.0], [589.0, 911.5], [588.0, 447.0], [585.0, 901.0], [607.0, 869.0], [594.0, 1209.0], [592.0, 886.4], [597.0, 826.3333333333334], [596.0, 389.0], [606.0, 438.0], [605.0, 1207.0], [601.0, 590.0], [600.0, 879.3333333333334], [638.0, 619.25], [613.0, 305.5], [614.0, 653.0], [632.0, 317.3333333333333], [615.0, 925.0], [612.0, 324.0], [611.0, 502.25], [610.0, 318.0], [608.0, 458.6666666666667], [623.0, 923.6666666666666], [622.0, 673.0], [620.0, 389.0], [617.0, 740.5], [616.0, 1203.0], [634.0, 311.0], [635.0, 296.5], [637.0, 321.5], [636.0, 670.1250000000001], [639.0, 300.0], [626.0, 573.0], [625.0, 301.0], [628.0, 297.0], [627.0, 340.0], [633.0, 329.4], [631.0, 401.6], [630.0, 707.0], [629.0, 271.0], [645.0, 300.75], [644.0, 565.4], [643.0, 330.5], [641.0, 315.0], [642.0, 540.75], [640.0, 330.5], [653.0, 800.3333333333333], [651.0, 703.0], [649.0, 828.3333333333334], [648.0, 764.5], [646.0, 315.6666666666667], [671.0, 529.25], [662.0, 596.3333333333334], [660.0, 1191.0], [659.0, 830.0], [670.0, 749.0], [668.0, 842.2], [687.0, 301.6666666666667], [688.0, 592.7142857142858], [702.0, 821.3333333333334], [701.0, 798.0], [700.0, 892.0], [699.0, 815.6666666666666], [689.0, 314.5], [690.0, 880.0], [694.0, 643.0], [691.0, 892.0], [685.0, 603.3333333333333], [686.0, 357.5], [684.0, 320.5], [681.0, 406.3333333333333], [683.0, 469.0], [682.0, 277.5], [680.0, 305.0], [679.0, 316.0], [677.0, 340.0], [676.0, 780.5], [678.0, 1042.0], [675.0, 809.0], [673.0, 290.0], [674.0, 413.5], [672.0, 299.0], [708.0, 577.4], [715.0, 339.5], [716.0, 288.0], [718.0, 737.0], [717.0, 772.5], [707.0, 299.0], [704.0, 1156.0], [719.0, 409.3333333333333], [714.0, 567.5], [713.0, 292.0], [712.0, 504.5], [711.0, 589.0], [728.0, 1009.5], [731.0, 407.0], [729.0, 1134.0], [720.0, 678.3333333333334], [734.0, 579.6666666666666], [722.0, 505.5], [721.0, 280.0], [724.0, 307.6666666666667], [726.0, 825.3333333333334], [725.0, 786.5], [723.0, 329.0], [710.0, 584.0], [709.0, 387.2], [766.0, 865.6666666666666], [756.0, 438.5], [759.0, 759.5], [758.0, 312.0], [757.0, 328.5], [755.0, 766.0], [754.0, 297.0], [761.0, 309.2], [760.0, 306.5], [741.0, 722.0], [740.0, 417.0], [739.0, 892.0], [738.0, 1137.0], [737.0, 895.3333333333334], [736.0, 1184.0], [749.0, 1038.0], [747.0, 813.0], [745.0, 670.0], [744.0, 1057.0], [767.0, 447.0], [753.0, 537.3333333333334], [752.0, 1306.0], [765.0, 722.0], [764.0, 446.0], [762.0, 933.5], [797.0, 323.6666666666667], [798.0, 361.3333333333333], [799.0, 311.0], [784.0, 898.0], [786.0, 753.0], [785.0, 722.0], [788.0, 380.5], [787.0, 825.5], [796.0, 319.75], [795.0, 508.625], [794.0, 333.0], [793.0, 314.0], [792.0, 328.5], [775.0, 1313.0], [774.0, 896.0], [773.0, 991.0], [771.0, 646.0], [770.0, 724.0], [769.0, 1194.0], [782.0, 513.0], [781.0, 727.0], [779.0, 1116.5], [778.0, 1198.0], [791.0, 760.5], [790.0, 609.0], [789.0, 306.0], [827.0, 328.3333333333333], [801.0, 320.0], [800.0, 421.25], [813.0, 850.5], [812.0, 532.0], [810.0, 660.5], [809.0, 1258.5], [808.0, 1329.0], [829.0, 566.2], [830.0, 324.5], [817.0, 843.75], [828.0, 331.0], [826.0, 361.5], [825.0, 988.0], [807.0, 897.0], [805.0, 916.5], [804.0, 926.0], [803.0, 738.0], [822.0, 476.5], [819.0, 1173.0], [860.0, 346.0], [861.0, 802.75], [859.0, 338.0], [858.0, 434.75], [857.0, 335.6666666666667], [856.0, 900.25], [847.0, 902.0], [832.0, 692.8], [839.0, 903.0], [835.0, 1084.0], [844.0, 879.8], [841.0, 948.3333333333334], [855.0, 343.0], [854.0, 667.0], [853.0, 826.5], [851.0, 922.5], [848.0, 716.0], [862.0, 913.0], [892.0, 587.6666666666666], [881.0, 767.5], [868.0, 446.0], [869.0, 702.0], [888.0, 635.3333333333333], [871.0, 1166.0], [891.0, 434.6], [890.0, 360.3333333333333], [889.0, 584.0], [893.0, 343.0], [894.0, 363.0], [867.0, 330.0], [866.0, 466.3333333333333], [865.0, 1024.0], [864.0, 336.0], [879.0, 354.0], [878.0, 880.0], [875.0, 1168.0], [874.0, 1334.0], [872.0, 668.6666666666666], [884.0, 356.3333333333333], [885.0, 626.3333333333333], [887.0, 473.3333333333333], [886.0, 642.6666666666667], [883.0, 560.8], [882.0, 442.5], [880.0, 539.0], [895.0, 457.85714285714283], [925.0, 603.6], [913.0, 357.0], [899.0, 587.1666666666666], [901.0, 608.0], [920.0, 389.0], [903.0, 745.0], [922.0, 493.0], [921.0, 843.5], [924.0, 372.0], [923.0, 356.5], [926.0, 364.0], [898.0, 845.5], [897.0, 359.0], [896.0, 341.0], [911.0, 1249.0], [909.0, 744.0], [908.0, 613.0], [904.0, 862.0], [918.0, 369.5], [917.0, 959.75], [919.0, 627.5], [916.0, 366.6666666666667], [915.0, 542.6666666666666], [914.0, 350.0], [912.0, 752.5], [927.0, 582.25], [932.0, 389.0], [935.0, 444.6666666666667], [952.0, 936.6666666666665], [956.0, 891.6999999999999], [955.0, 953.0000000000001], [954.0, 892.8571428571429], [953.0, 923.625], [959.0, 1081.6666666666667], [958.0, 795.1666666666667], [957.0, 659.25], [934.0, 763.1428571428571], [933.0, 954.0], [931.0, 429.0], [930.0, 391.0], [929.0, 352.0], [928.0, 372.6666666666667], [943.0, 782.6], [942.0, 682.5], [941.0, 864.3636363636364], [940.0, 676.875], [939.0, 1033.6666666666667], [938.0, 1154.8], [937.0, 1011.6], [936.0, 776.0], [946.0, 412.0], [945.0, 781.0], [947.0, 1086.5], [950.0, 930.8571428571429], [949.0, 828.5], [951.0, 889.1666666666666], [948.0, 823.0], [944.0, 807.2], [990.0, 772.0909090909091], [978.0, 541.0], [981.0, 750.0], [983.0, 675.0], [982.0, 707.3333333333334], [980.0, 578.3333333333334], [979.0, 815.3333333333334], [977.0, 725.25], [976.0, 440.0], [975.0, 400.0], [960.0, 1088.25], [962.0, 828.2], [961.0, 820.0], [964.0, 705.0], [963.0, 647.0], [966.0, 1010.6666666666666], [965.0, 850.6666666666666], [985.0, 823.0], [984.0, 1244.5], [967.0, 805.0], [987.0, 767.5555555555555], [986.0, 1099.6666666666667], [989.0, 873.6666666666666], [988.0, 694.6249999999999], [991.0, 748.6], [974.0, 708.0], [973.0, 1025.5], [972.0, 698.3333333333334], [971.0, 723.0], [970.0, 792.0], [969.0, 482.3333333333333], [968.0, 959.6], [998.0, 800.6470588235294], [1005.0, 731.875], [1010.0, 841.3124999999998], [1009.0, 915.1666666666667], [1012.0, 889.0833333333334], [1011.0, 699.8571428571429], [1014.0, 589.125], [1015.0, 639.3333333333334], [1013.0, 670.5], [1008.0, 627.1111111111111], [1006.0, 760.4285714285714], [1007.0, 724.5999999999999], [993.0, 873.4000000000001], [992.0, 803.8], [995.0, 741.0], [994.0, 931.3], [997.0, 859.8333333333334], [996.0, 853.6923076923077], [999.0, 991.8888888888889], [1016.0, 564.4], [1018.0, 562.8888888888889], [1019.0, 552.5], [1017.0, 526.125], [1021.0, 573.7142857142857], [1020.0, 505.82352941176464], [1023.0, 485.1875], [1022.0, 480.8928571428571], [1004.0, 748.1153846153845], [1003.0, 710.6666666666666], [1002.0, 845.2], [1001.0, 820.6666666666666], [1000.0, 673.5714285714286], [1028.0, 501.55555555555554], [1052.0, 521.375], [1024.0, 510.3333333333333], [1026.0, 495.8695652173913], [1030.0, 460.74999999999994], [1032.0, 454.8333333333333], [1034.0, 474.0], [1036.0, 591.8], [1072.0, 553.75], [1038.0, 872.8], [1054.0, 603.0], [1074.0, 646.8571428571429], [1076.0, 502.0], [1078.0, 460.5], [1080.0, 432.0], [1082.0, 380.0], [1050.0, 673.7777777777777], [1048.0, 680.5], [1046.0, 728.6363636363636], [1044.0, 773.625], [1042.0, 781.8888888888889], [1040.0, 866.4285714285714], [1084.0, 417.0], [1056.0, 595.6666666666667], [1060.0, 599.3333333333334], [1058.0, 504.0], [1062.0, 451.25], [1064.0, 525.2105263157895], [1066.0, 530.9090909090909], [1068.0, 670.25], [1070.0, 678.8], [1146.0, 959.0500000000001], [1128.0, 878.4166666666666], [1148.0, 1011.8571428571429], [1150.0, 991.0999999999999], [1122.0, 998.4], [1120.0, 884.0], [1126.0, 950.2666666666668], [1124.0, 872.7692307692307], [1144.0, 971.0416666666666], [1142.0, 989.6785714285714], [1140.0, 966.2888888888891], [1138.0, 973.7424242424241], [1136.0, 940.5172413793105], [1102.0, 592.5], [1100.0, 867.5], [1098.0, 570.5], [1096.0, 760.75], [1094.0, 926.0], [1088.0, 1259.0], [1118.0, 937.5], [1116.0, 899.0], [1114.0, 789.5], [1112.0, 601.0], [1110.0, 950.0], [1108.0, 816.6666666666666], [1106.0, 856.6666666666667], [1104.0, 1040.5], [1134.0, 1009.975], [1132.0, 944.7199999999998], [1130.0, 931.4848484848486], [1164.0, 942.6060606060606], [1162.0, 955.6551724137931], [1200.0, 1046.611111111111], [1166.0, 1087.4444444444443], [1202.0, 1110.5384615384614], [1204.0, 836.6], [1206.0, 921.7142857142857], [1152.0, 596.6999999999999], [1158.0, 844.2857142857143], [1156.0, 1090.0], [1154.0, 1410.0], [1160.0, 918.7368421052632], [1184.0, 961.0999999999999], [1198.0, 1103.6666666666665], [1196.0, 998.3333333333334], [1194.0, 970.7560975609755], [1192.0, 1119.1250000000002], [1190.0, 1077.473684210526], [1188.0, 1096.5454545454545], [1186.0, 1113.5], [1208.0, 715.3076923076923], [1210.0, 785.0], [1212.0, 743.5], [1214.0, 778.5], [1182.0, 1065.5000000000002], [1180.0, 1009.5714285714286], [1178.0, 1014.4375], [1176.0, 901.1818181818181], [1174.0, 1115.3999999999999], [1172.0, 916.4375], [1170.0, 682.5], [1168.0, 954.0], [1266.0, 1102.8235294117649], [1276.0, 1207.0], [1252.0, 1156.7368421052631], [1232.0, 952.3846153846155], [1254.0, 874.9411764705883], [1262.0, 1314.4], [1260.0, 1268.2222222222222], [1258.0, 1363.3], [1256.0, 1306.4999999999995], [1230.0, 1109.6], [1246.0, 1236.75], [1228.0, 1114.363636363636], [1226.0, 1259.375], [1224.0, 1205.9999999999998], [1222.0, 1126.6153846153848], [1220.0, 1155.5999999999997], [1218.0, 1190.0], [1216.0, 1225.0], [1244.0, 1160.8333333333335], [1242.0, 1358.0], [1264.0, 1153.25], [1268.0, 1149.8125], [1274.0, 1126.777777777778], [1272.0, 1322.1], [1270.0, 1075.0], [1278.0, 1233.9], [1248.0, 1214.2222222222222], [1250.0, 1126.5833333333333], [1240.0, 798.0000000000001], [1236.0, 1101.7777777777778], [1238.0, 1215.9999999999998], [1234.0, 1241.9285714285716], [1286.0, 869.0], [1340.0, 1097.0], [1290.0, 974.5], [1292.0, 1171.9411764705883], [1326.0, 1206.1666666666667], [1324.0, 1221.916666666667], [1342.0, 1161.375], [1312.0, 1266.5652173913047], [1316.0, 1319.3000000000002], [1314.0, 1468.0], [1322.0, 1323.4], [1320.0, 1255.0], [1318.0, 1376.3333333333333], [1294.0, 1121.9999999999998], [1338.0, 1270.2], [1336.0, 1252.1666666666667], [1334.0, 1308.8823529411766], [1332.0, 1328.9333333333334], [1328.0, 1226.6363636363635], [1330.0, 1239.4444444444443], [1288.0, 972.75], [1308.0, 1109.0], [1310.0, 1205.8181818181818], [1284.0, 1216.3333333333333], [1282.0, 1362.2], [1280.0, 1293.0], [1306.0, 1225.4736842105262], [1304.0, 1264.3749999999998], [1302.0, 1206.2666666666669], [1300.0, 1286.2307692307693], [1298.0, 1243.4666666666665], [1296.0, 1136.75], [1392.0, 800.1666666666666], [1378.0, 957.5], [1356.0, 1168.1], [1344.0, 1263.1818181818182], [1350.0, 1295.8076923076924], [1348.0, 1256.315789473684], [1346.0, 1295.6086956521738], [1354.0, 1276.25], [1352.0, 1306.8260869565217], [1358.0, 1249.5652173913043], [1386.0, 674.0], [1390.0, 1226.125], [1388.0, 1496.0], [1382.0, 1228.6666666666667], [1380.0, 712.0], [1376.0, 1076.0], [1406.0, 814.0], [1394.0, 1074.6666666666667], [1396.0, 1337.0], [1400.0, 1080.0], [1398.0, 1088.0], [1404.0, 1100.0], [1402.0, 1605.0], [1374.0, 626.0], [1372.0, 1032.0714285714284], [1370.0, 1312.8947368421054], [1368.0, 1280.3636363636363], [1366.0, 1396.3000000000002], [1364.0, 1227.8333333333333], [1362.0, 1297.125], [1360.0, 1293.6363636363637], [1422.0, 1122.3333333333333], [1416.0, 1042.3999999999999], [1408.0, 806.0000000000001], [1412.0, 1189.25], [1438.0, 1360.75], [1436.0, 1345.0], [1434.0, 1384.3333333333333], [1432.0, 1226.0], [1430.0, 1400.2], [1414.0, 1194.5454545454545], [1442.0, 1139.75], [1444.0, 1345.3333333333333], [1450.0, 1099.0], [1446.0, 1127.6666666666667], [1454.0, 1236.6666666666667], [1452.0, 1217.0], [1440.0, 1214.3999999999999], [1460.0, 873.5], [1458.0, 1132.0], [1456.0, 1119.0], [1462.0, 1493.0], [1470.0, 1139.0], [1464.0, 1590.0], [1420.0, 1147.0], [1418.0, 1167.7142857142858], [1522.0, 1131.15625], [1530.0, 1239.24], [1476.0, 646.0], [1534.0, 1199.0714285714287], [1532.0, 1345.5294117647059], [1504.0, 1207.3703703703704], [1524.0, 1076.6444444444442], [1520.0, 1145.5882352941176], [1486.0, 1271.0], [1484.0, 1157.0], [1482.0, 1142.5], [1480.0, 1436.0], [1478.0, 1189.0], [1528.0, 1270.5813953488368], [1526.0, 1235.0833333333335], [1474.0, 866.25], [1472.0, 1354.75], [1502.0, 1228.5714285714291], [1500.0, 1270.4545454545455], [1498.0, 1273.5609756097563], [1496.0, 1219.8333333333333], [1494.0, 1268.892857142857], [1492.0, 1278.5555555555554], [1490.0, 1236.3846153846155], [1488.0, 1198.0909090909092], [1512.0, 1199.8846153846155], [1514.0, 1201.4545454545453], [1518.0, 1147.1875], [1516.0, 1063.111111111111], [1510.0, 1099.6875], [1506.0, 1076.6764705882351], [1508.0, 1198.869565217391], [1584.0, 755.8], [1562.0, 924.0], [1536.0, 1193.1538461538462], [1566.0, 956.7142857142858], [1564.0, 1019.7142857142857], [1552.0, 866.5], [1556.0, 1040.5], [1558.0, 949.6249999999999], [1560.0, 968.5199999999999], [1586.0, 857.5714285714286], [1590.0, 875.0], [1588.0, 904.4545454545455], [1594.0, 845.375], [1592.0, 881.25], [1598.0, 846.5], [1568.0, 965.8888888888889], [1572.0, 989.3333333333334], [1570.0, 1007.375], [1596.0, 863.4615384615386], [1574.0, 913.0], [1578.0, 754.5], [1582.0, 976.5], [1576.0, 797.5], [1548.0, 901.6666666666666], [1538.0, 1348.8], [1540.0, 1343.2], [1542.0, 1246.157894736842], [1544.0, 1368.0], [1546.0, 1090.0], [1604.0, 799.8571428571429], [1606.0, 808.5454545454545], [1610.0, 787.5555555555555], [1608.0, 836.5555555555555], [1614.0, 838.6], [1612.0, 860.5], [1652.0, 764.3333333333334], [1650.0, 731.5], [1656.0, 766.0], [1654.0, 685.0], [1640.0, 792.1666666666666], [1638.0, 794.8124999999999], [1636.0, 788.05], [1634.0, 795.6], [1632.0, 790.2666666666668], [1662.0, 800.75], [1642.0, 719.6], [1600.0, 875.7878787878786], [1602.0, 838.1428571428572], [1630.0, 776.888888888889], [1628.0, 794.6666666666667], [1626.0, 849.25], [1624.0, 743.25], [1622.0, 764.0], [1620.0, 812.0], [1616.0, 800.3333333333334], [1618.0, 812.0], [1716.0, 748.75], [1670.0, 698.5], [1712.0, 756.0], [1714.0, 772.6153846153845], [1718.0, 795.4], [1720.0, 749.75], [1722.0, 801.6666666666666], [1726.0, 813.0], [1724.0, 724.0], [1696.0, 774.0], [1672.0, 793.0], [1678.0, 782.0], [1676.0, 646.0], [1664.0, 758.1428571428572], [1668.0, 833.0], [1666.0, 811.5], [1694.0, 770.6], [1692.0, 711.3333333333334], [1690.0, 749.0], [1688.0, 729.0], [1686.0, 817.0], [1684.0, 770.5], [1682.0, 766.2], [1702.0, 740.0], [1706.0, 840.0], [1704.0, 841.3333333333334], [1710.0, 765.6666666666666], [1708.0, 651.0], [1700.0, 702.0], [1698.0, 642.0], [1734.0, 768.75], [1738.0, 790.6666666666666], [1760.0, 692.0], [1762.0, 863.0], [1736.0, 643.0], [1732.0, 764.0], [1730.0, 854.3333333333334], [1728.0, 778.0], [1758.0, 847.0], [1756.0, 687.0], [1754.0, 761.5], [1752.0, 799.0], [1750.0, 811.5714285714286], [1748.0, 770.0], [1746.0, 830.4], [1744.0, 742.2], [1033.0, 441.25], [1073.0, 603.1111111111111], [1081.0, 780.0], [1051.0, 577.6923076923077], [1053.0, 572.4545454545455], [1055.0, 457.64285714285717], [1025.0, 570.4736842105264], [1027.0, 502.53333333333336], [1029.0, 564.1428571428572], [1031.0, 440.4444444444444], [1035.0, 430.5], [1037.0, 651.7], [1039.0, 572.8333333333333], [1075.0, 740.6666666666667], [1077.0, 837.3333333333334], [1079.0, 714.3333333333334], [1049.0, 614.4285714285716], [1047.0, 711.7499999999999], [1045.0, 871.0000000000001], [1043.0, 799.4], [1041.0, 987.75], [1057.0, 415.22222222222223], [1059.0, 446.7142857142857], [1063.0, 436.5], [1061.0, 382.5], [1065.0, 512.7647058823529], [1067.0, 494.5], [1069.0, 471.75], [1071.0, 530.3333333333333], [1083.0, 697.0], [1085.0, 1122.0], [1087.0, 631.5], [1145.0, 921.0357142857143], [1127.0, 914.3157894736842], [1151.0, 795.0], [1147.0, 1058.4285714285713], [1149.0, 956.0], [1125.0, 955.4615384615386], [1123.0, 976.0], [1121.0, 829.8888888888889], [1141.0, 952.7857142857146], [1139.0, 946.1818181818182], [1143.0, 965.8823529411766], [1133.0, 1065.8205128205127], [1131.0, 957.0909090909091], [1129.0, 1000.7500000000003], [1137.0, 1051.25], [1119.0, 1070.25], [1095.0, 568.0], [1089.0, 544.0], [1099.0, 1052.6666666666667], [1097.0, 911.3333333333334], [1103.0, 1118.0], [1101.0, 755.5], [1117.0, 1092.0], [1115.0, 927.25], [1113.0, 714.25], [1111.0, 1038.3333333333333], [1109.0, 898.6], [1107.0, 1093.0], [1105.0, 999.5], [1135.0, 984.3653846153845], [1209.0, 715.5], [1167.0, 933.3333333333333], [1205.0, 1049.0384615384614], [1163.0, 1068.9999999999998], [1165.0, 1109.8571428571427], [1203.0, 1046.0714285714287], [1201.0, 939.7037037037038], [1161.0, 1018.0], [1183.0, 1121.625], [1155.0, 834.5555555555555], [1159.0, 1030.1818181818182], [1157.0, 1070.0], [1153.0, 781.6666666666666], [1199.0, 1053.5714285714284], [1197.0, 959.8148148148147], [1195.0, 1023.2380952380954], [1193.0, 1160.0], [1211.0, 744.3076923076922], [1213.0, 945.0], [1215.0, 1104.0], [1185.0, 1144.4545454545453], [1191.0, 1032.888888888889], [1189.0, 1255.111111111111], [1187.0, 1173.642857142857], [1181.0, 934.6923076923076], [1179.0, 947.2727272727271], [1177.0, 964.3333333333334], [1175.0, 985.1538461538463], [1173.0, 1002.2500000000001], [1169.0, 1096.3333333333333], [1171.0, 857.0], [1207.0, 851.7777777777778], [1231.0, 1041.2], [1243.0, 1025.25], [1233.0, 808.375], [1279.0, 1152.5333333333333], [1251.0, 1119.631578947368], [1249.0, 1290.6923076923076], [1259.0, 1220.9333333333332], [1255.0, 1010.1111111111111], [1257.0, 1199.0], [1253.0, 1063.5714285714284], [1263.0, 1272.8333333333335], [1261.0, 1270.4545454545453], [1277.0, 1356.8333333333333], [1275.0, 1125.3636363636365], [1273.0, 1184.7692307692307], [1271.0, 1288.4285714285716], [1269.0, 1202.5], [1267.0, 1374.8666666666666], [1265.0, 1236.5], [1229.0, 977.2272727272727], [1227.0, 1368.5263157894735], [1225.0, 1175.153846153846], [1223.0, 1283.8235294117646], [1221.0, 1296.7777777777778], [1219.0, 1187.2307692307693], [1217.0, 1331.1818181818182], [1247.0, 1217.8000000000002], [1245.0, 1158.5555555555557], [1241.0, 1104.9999999999998], [1239.0, 1027.9499999999998], [1235.0, 1188.0], [1237.0, 1240.1538461538462], [1329.0, 1113.909090909091], [1291.0, 1123.6111111111109], [1293.0, 1178.4375], [1295.0, 1142.5714285714287], [1325.0, 1141.6], [1327.0, 1270.5], [1323.0, 1189.8888888888887], [1321.0, 1255.8], [1319.0, 1335.111111111111], [1317.0, 1195.1], [1315.0, 1351.5], [1313.0, 1240.5], [1343.0, 1144.8181818181818], [1341.0, 1202.1176470588234], [1339.0, 1292.8333333333333], [1337.0, 1271.5], [1331.0, 1326.0624999999998], [1333.0, 1286.0476190476193], [1335.0, 1317.769230769231], [1289.0, 968.7777777777777], [1287.0, 916.2307692307693], [1285.0, 1007.375], [1283.0, 1191.625], [1281.0, 1303.4166666666665], [1309.0, 1230.6818181818182], [1311.0, 1254.4], [1307.0, 1238.75], [1305.0, 1206.1666666666667], [1303.0, 1263.0], [1301.0, 1106.5], [1299.0, 1208.375], [1297.0, 1332.6666666666667], [1393.0, 698.5], [1405.0, 990.0], [1357.0, 1072.4666666666667], [1355.0, 1254.857142857143], [1353.0, 1283.12], [1351.0, 1298.416666666667], [1349.0, 1327.3076923076924], [1347.0, 1391.1000000000001], [1345.0, 1348.0], [1359.0, 1369.9230769230771], [1377.0, 648.75], [1383.0, 848.5], [1391.0, 1126.0], [1385.0, 1316.7142857142856], [1381.0, 632.0], [1379.0, 635.0], [1407.0, 881.0], [1395.0, 1110.5], [1399.0, 1321.25], [1397.0, 1354.6666666666667], [1403.0, 1301.0], [1401.0, 1126.5], [1375.0, 642.5], [1373.0, 1156.375], [1371.0, 1302.0], [1369.0, 1285.1153846153845], [1367.0, 1376.6], [1365.0, 1312.0000000000002], [1363.0, 1337.0], [1361.0, 1249.9230769230771], [1423.0, 915.25], [1421.0, 1207.0], [1417.0, 1268.7499999999998], [1409.0, 1088.0], [1411.0, 1469.0], [1415.0, 1205.8999999999999], [1413.0, 1267.0], [1439.0, 1182.3333333333333], [1437.0, 1085.3333333333333], [1435.0, 1271.625], [1433.0, 1289.4], [1431.0, 1224.8333333333333], [1429.0, 1492.0], [1441.0, 1187.3333333333333], [1471.0, 1206.5], [1461.0, 913.0], [1465.0, 1416.0], [1463.0, 1117.0], [1469.0, 740.0], [1459.0, 755.8571428571429], [1457.0, 1124.0], [1443.0, 1183.4444444444446], [1447.0, 1118.5], [1451.0, 1308.3636363636363], [1445.0, 1184.25], [1455.0, 1114.5], [1453.0, 1356.0], [1419.0, 1154.625], [1521.0, 1177.6666666666667], [1535.0, 1125.8000000000002], [1509.0, 1146.4444444444446], [1525.0, 1103.1333333333334], [1475.0, 1167.6], [1473.0, 1369.0], [1477.0, 1131.0], [1481.0, 1239.25], [1479.0, 1502.0], [1487.0, 1242.8333333333335], [1485.0, 1310.0], [1503.0, 1188.235294117647], [1501.0, 1250.6666666666667], [1499.0, 1235.9032258064517], [1497.0, 1253.4166666666665], [1495.0, 1263.4166666666665], [1493.0, 1248.5000000000002], [1491.0, 1234.5384615384614], [1489.0, 1298.25], [1511.0, 1147.0882352941176], [1515.0, 1203.75], [1513.0, 1172.5], [1519.0, 1087.157894736842], [1517.0, 1084.6250000000002], [1507.0, 1135.3333333333333], [1505.0, 1237.9722222222224], [1527.0, 1184.0], [1529.0, 1293.4117647058824], [1533.0, 1357.6000000000001], [1531.0, 1336.9375], [1523.0, 1164.9285714285713], [1545.0, 1006.5454545454546], [1537.0, 1167.8333333333333], [1539.0, 1335.4166666666665], [1541.0, 1412.0], [1543.0, 1173.0], [1567.0, 1008.3000000000001], [1559.0, 978.1428571428572], [1557.0, 974.8461538461538], [1555.0, 1011.0], [1561.0, 908.8888888888889], [1551.0, 776.75], [1585.0, 904.1538461538462], [1587.0, 804.75], [1599.0, 904.0], [1569.0, 967.625], [1583.0, 874.0], [1573.0, 1012.8], [1575.0, 1045.0], [1571.0, 954.7272727272727], [1597.0, 874.0], [1595.0, 921.5000000000001], [1593.0, 824.5], [1591.0, 849.8333333333334], [1589.0, 857.6], [1549.0, 859.6666666666666], [1565.0, 891.0], [1563.0, 963.3], [1659.0, 726.3333333333334], [1605.0, 793.1052631578947], [1601.0, 849.1999999999999], [1603.0, 899.6666666666666], [1631.0, 728.875], [1629.0, 814.0], [1641.0, 771.125], [1639.0, 749.2], [1637.0, 739.2941176470588], [1635.0, 773.0], [1633.0, 791.9285714285714], [1643.0, 779.0], [1647.0, 692.5], [1645.0, 687.0], [1663.0, 824.0], [1661.0, 847.0], [1657.0, 692.0], [1655.0, 675.0], [1653.0, 760.0], [1651.0, 749.6666666666666], [1649.0, 725.5454545454545], [1615.0, 863.6666666666666], [1613.0, 883.5454545454546], [1611.0, 836.1666666666666], [1609.0, 841.75], [1607.0, 870.4285714285713], [1627.0, 755.4], [1625.0, 779.0909090909091], [1623.0, 794.0], [1621.0, 794.0], [1617.0, 770.5], [1717.0, 764.1111111111111], [1675.0, 744.5], [1713.0, 781.0], [1715.0, 725.25], [1719.0, 748.5], [1723.0, 754.2857142857143], [1721.0, 793.1538461538461], [1725.0, 773.0], [1727.0, 748.75], [1673.0, 719.6666666666666], [1669.0, 727.6666666666666], [1671.0, 830.5], [1667.0, 717.5], [1665.0, 752.75], [1689.0, 691.0], [1687.0, 782.5], [1685.0, 651.0], [1683.0, 888.0], [1697.0, 766.5], [1703.0, 818.0], [1711.0, 817.0], [1709.0, 847.0], [1707.0, 730.5], [1705.0, 804.2], [1701.0, 837.0], [1699.0, 758.0], [1733.0, 759.25], [1759.0, 766.0], [1743.0, 821.0], [1761.0, 850.0], [1763.0, 792.0], [1735.0, 756.0], [1731.0, 751.5], [1729.0, 657.0], [1757.0, 757.0], [1755.0, 753.0], [1753.0, 755.0], [1751.0, 762.25], [1749.0, 752.2105263157896], [1745.0, 780.0], [1747.0, 777.375], [1.0, 869.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1129.276699999993, 908.5788000000019]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 58.0], [3.0, 60.0], [4.0, 57.0], [6.0, 21.0], [7.0, 4.666666666666666], [8.0, 9.956521739130435], [9.0, 7.517241379310344], [10.0, 6.739130434782608], [11.0, 7.0], [12.0, 16.88888888888889], [13.0, 24.2], [14.0, 25.22222222222222], [15.0, 6.5], [16.0, 28.5], [17.0, 34.230769230769226], [18.0, 27.125], [19.0, 27.000000000000004], [20.0, 34.0], [21.0, 31.18181818181818], [22.0, 35.333333333333336], [23.0, 40.61538461538461], [24.0, 41.36363636363636], [25.0, 42.3125], [26.0, 37.3103448275862], [27.0, 40.55555555555555], [28.0, 37.153846153846146], [29.0, 37.78571428571429], [30.0, 36.333333333333336], [31.0, 38.0], [32.0, 38.74324324324324], [33.0, 69.98734177215194], [35.0, 47.60655737704919], [34.0, 38.10227272727275], [37.0, 39.58870967741937], [36.0, 39.22222222222223], [39.0, 39.36936936936938], [38.0, 38.627118644067814], [41.0, 40.97709923664125], [40.0, 40.61267605633802], [43.0, 37.8722222222222], [42.0, 48.09271523178807], [45.0, 40.40259740259739], [44.0, 49.2684563758389], [47.0, 40.99354838709676], [46.0, 41.283018867924504], [49.0, 42.68874172185428], [48.0, 41.83687943262413], [50.0, 42.040540540540555], [51.0, 43.67375886524821], [53.0, 43.13375796178345], [52.0, 42.07792207792205], [55.0, 43.57553956834532], [54.0, 43.15172413793105], [56.0, 42.65625000000002], [57.0, 43.66896551724137], [59.0, 44.287769784172674], [58.0, 42.83571428571429], [61.0, 43.63432835820894], [60.0, 44.466666666666676], [62.0, 43.974999999999994], [63.0, 43.628048780487816], [67.0, 46.34883720930231], [66.0, 45.013071895424794], [65.0, 44.711864406779654], [64.0, 45.96932515337424], [69.0, 46.67857142857143], [68.0, 45.80620155038759], [71.0, 47.27472527472528], [70.0, 46.70588235294119], [75.0, 47.37362637362637], [73.0, 45.435897435897424], [72.0, 45.59770114942528], [74.0, 46.255813953488364], [76.0, 47.35000000000001], [79.0, 45.59999999999999], [78.0, 45.352941176470594], [77.0, 46.970588235294116], [83.0, 45.09523809523809], [82.0, 47.131578947368396], [80.0, 45.77358490566037], [81.0, 46.01851851851854], [86.0, 47.45614035087719], [85.0, 46.79245283018868], [84.0, 45.26530612244898], [87.0, 46.48529411764706], [88.0, 46.73584905660377], [90.0, 46.17499999999998], [89.0, 48.891891891891895], [91.0, 49.76], [94.0, 46.86486486486486], [92.0, 49.55263157894738], [93.0, 49.03389830508475], [95.0, 48.69230769230769], [99.0, 47.625], [98.0, 47.38461538461539], [96.0, 49.25], [97.0, 43.671875], [101.0, 45.80952380952381], [100.0, 43.83870967741935], [103.0, 43.99999999999999], [102.0, 49.0], [107.0, 46.2258064516129], [106.0, 45.64444444444443], [105.0, 44.199999999999996], [104.0, 49.85185185185185], [109.0, 47.72], [110.0, 49.90476190476192], [108.0, 40.85185185185184], [111.0, 49.962962962962955], [115.0, 46.272727272727266], [112.0, 44.14999999999999], [114.0, 48.125], [113.0, 46.00000000000001], [117.0, 44.94117647058823], [118.0, 50.285714285714285], [116.0, 48.47368421052632], [119.0, 50.73684210526317], [123.0, 42.833333333333336], [120.0, 49.18000000000001], [121.0, 47.699999999999996], [122.0, 47.72222222222222], [127.0, 52.18181818181819], [126.0, 47.958333333333336], [125.0, 51.315789473684205], [124.0, 50.04761904761905], [129.0, 50.814814814814824], [128.0, 50.17857142857143], [131.0, 45.94444444444444], [130.0, 49.79166666666667], [132.0, 52.120000000000005], [135.0, 51.22222222222223], [134.0, 47.24], [133.0, 54.16666666666668], [143.0, 47.75757575757575], [142.0, 57.60975609756098], [140.0, 55.411764705882355], [139.0, 49.022727272727266], [138.0, 51.86666666666667], [141.0, 49.0], [137.0, 49.09090909090909], [136.0, 49.0909090909091], [149.0, 64.95238095238096], [151.0, 59.125], [150.0, 54.271186440677965], [148.0, 59.11111111111112], [147.0, 61.105263157894726], [146.0, 51.68181818181817], [145.0, 51.05357142857142], [144.0, 47.42857142857143], [154.0, 52.42857142857143], [159.0, 52.46153846153846], [157.0, 49.625], [156.0, 49.0], [155.0, 53.21428571428571], [153.0, 59.0], [152.0, 54.888888888888886], [158.0, 51.61111111111112], [163.0, 54.11290322580648], [161.0, 55.625], [160.0, 53.7], [166.0, 50.0], [165.0, 55.111111111111114], [164.0, 50.333333333333336], [162.0, 54.07142857142858], [167.0, 51.15384615384615], [174.0, 60.73684210526316], [172.0, 53.45454545454545], [171.0, 58.92000000000001], [169.0, 53.666666666666664], [168.0, 53.857142857142854], [173.0, 59.46428571428571], [170.0, 51.75], [175.0, 59.6], [176.0, 50.66666666666667], [183.0, 68.79487179487178], [181.0, 69.33333333333333], [182.0, 55.63636363636364], [180.0, 59.4], [179.0, 53.5], [178.0, 56.42857142857143], [177.0, 56.37500000000001], [190.0, 55.0], [187.0, 64.75], [185.0, 58.5], [184.0, 61.5], [189.0, 46.0], [186.0, 52.666666666666664], [191.0, 57.16666666666667], [188.0, 49.0], [195.0, 144.25], [194.0, 45.333333333333336], [192.0, 43.75], [199.0, 48.6], [198.0, 52.0], [197.0, 48.0], [196.0, 48.0], [193.0, 51.8], [204.0, 52.333333333333336], [207.0, 62.0], [206.0, 59.5], [203.0, 55.0], [201.0, 47.833333333333336], [214.0, 51.25], [212.0, 56.25], [213.0, 53.4], [208.0, 62.0], [209.0, 59.0], [211.0, 61.0], [222.0, 57.166666666666664], [219.0, 58.4], [218.0, 60.666666666666664], [220.0, 61.823529411764696], [231.0, 54.26666666666667], [230.0, 57.666666666666664], [226.0, 58.0], [225.0, 63.0], [227.0, 57.5], [229.0, 59.93333333333333], [228.0, 59.5], [235.0, 59.0], [234.0, 53.0], [233.0, 57.75], [238.0, 60.0], [237.0, 58.5], [236.0, 57.666666666666664], [232.0, 61.6], [241.0, 10.0], [271.0, 369.0], [283.0, 417.0], [290.0, 363.0], [292.0, 30.0], [366.0, 370.0], [383.0, 136.6], [368.0, 33.0], [384.0, 115.8], [392.0, 37.0], [410.0, 332.5], [409.0, 360.0], [423.0, 192.0], [442.0, 161.47058823529412], [436.0, 20.0], [435.0, 33.0], [438.0, 29.0], [443.0, 58.0], [462.0, 250.0], [450.0, 220.11111111111111], [448.0, 176.54368932038838], [458.0, 159.0625], [457.0, 150.38888888888889], [463.0, 222.83333333333331], [456.0, 152.5], [459.0, 258.8], [460.0, 278.625], [461.0, 256.0], [451.0, 217.33333333333334], [455.0, 120.0], [454.0, 243.0], [452.0, 201.0], [453.0, 198.5], [467.0, 239.8888888888889], [470.0, 207.66666666666669], [465.0, 226.55045871559633], [466.0, 227.58333333333334], [464.0, 228.1], [469.0, 217.35714285714286], [468.0, 37.0], [472.0, 327.0], [474.0, 258.0], [475.0, 27.5], [476.0, 200.00000000000003], [478.0, 215.66666666666666], [479.0, 171.5], [477.0, 165.84615384615384], [1.0, 57.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[93.96359999999976, 52.67859999999989]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1763.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 62166.666666666664, "minX": 1.66901568E12, "maxY": 131166.66666666666, "series": [{"data": [[1.66901568E12, 62166.666666666664]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66901568E12, 131166.66666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901568E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 52.67859999999989, "minX": 1.66901568E12, "maxY": 908.5788000000019, "series": [{"data": [[1.66901568E12, 58.33129999999985]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901568E12, 908.5788000000019]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901568E12, 52.67859999999989]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901568E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 52.511400000000016, "minX": 1.66901568E12, "maxY": 908.3151999999973, "series": [{"data": [[1.66901568E12, 58.3217]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901568E12, 908.3151999999973]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901568E12, 52.511400000000016]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901568E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 8.927300000000018, "minX": 1.66901568E12, "maxY": 12.637999999999995, "series": [{"data": [[1.66901568E12, 8.927300000000018]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901568E12, 9.437200000000006]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901568E12, 12.637999999999995]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901568E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.66901568E12, "maxY": 1712.0, "series": [{"data": [[1.66901568E12, 1712.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66901568E12, 1262.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66901568E12, 1608.9900000000016]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66901568E12, 1440.9500000000007]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66901568E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66901568E12, 78.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901568E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 564.0, "maxY": 1204.0, "series": [{"data": [[564.0, 55.0], [2313.0, 61.0], [885.0, 63.0], [930.0, 40.0], [1131.0, 40.0], [1123.0, 1204.0], [1138.0, 892.0], [1178.0, 42.0], [1154.0, 1184.0], [1268.0, 1073.0], [1261.0, 1004.0], [1240.0, 883.0], [1323.0, 42.0], [1343.0, 289.0], [1312.0, 678.0], [1396.0, 54.0], [1644.0, 46.0], [1650.0, 57.0], [1721.0, 58.0], [1710.0, 57.5], [1730.0, 54.0], [1986.0, 50.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2313.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 564.0, "maxY": 1204.0, "series": [{"data": [[564.0, 55.0], [2313.0, 61.0], [885.0, 63.0], [930.0, 40.0], [1131.0, 40.0], [1123.0, 1204.0], [1138.0, 892.0], [1178.0, 42.0], [1154.0, 1184.0], [1268.0, 1073.0], [1261.0, 1004.0], [1240.0, 882.5], [1323.0, 42.0], [1343.0, 289.0], [1312.0, 678.0], [1396.0, 54.0], [1644.0, 46.0], [1650.0, 57.0], [1721.0, 58.0], [1710.0, 57.0], [1730.0, 54.0], [1986.0, 50.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2313.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 500.0, "minX": 1.66901568E12, "maxY": 500.0, "series": [{"data": [[1.66901568E12, 500.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901568E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 500.0, "minX": 1.66901568E12, "maxY": 500.0, "series": [{"data": [[1.66901568E12, 500.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901568E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 166.66666666666666, "minX": 1.66901568E12, "maxY": 166.66666666666666, "series": [{"data": [[1.66901568E12, 166.66666666666666]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66901568E12, 166.66666666666666]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66901568E12, 166.66666666666666]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901568E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 500.0, "minX": 1.66901568E12, "maxY": 500.0, "series": [{"data": [[1.66901568E12, 500.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901568E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

