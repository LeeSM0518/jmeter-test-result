/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 1270.0, "series": [{"data": [[0.0, 18.0], [0.1, 23.0], [0.2, 24.0], [0.3, 25.0], [0.4, 26.0], [0.5, 27.0], [0.6, 28.0], [0.7, 28.0], [0.8, 29.0], [0.9, 29.0], [1.0, 30.0], [1.1, 31.0], [1.2, 32.0], [1.3, 32.0], [1.4, 33.0], [1.5, 33.0], [1.6, 34.0], [1.7, 34.0], [1.8, 35.0], [1.9, 35.0], [2.0, 35.0], [2.1, 36.0], [2.2, 36.0], [2.3, 36.0], [2.4, 36.0], [2.5, 37.0], [2.6, 37.0], [2.7, 37.0], [2.8, 37.0], [2.9, 38.0], [3.0, 38.0], [3.1, 38.0], [3.2, 39.0], [3.3, 39.0], [3.4, 39.0], [3.5, 39.0], [3.6, 40.0], [3.7, 40.0], [3.8, 40.0], [3.9, 40.0], [4.0, 40.0], [4.1, 40.0], [4.2, 41.0], [4.3, 41.0], [4.4, 41.0], [4.5, 41.0], [4.6, 41.0], [4.7, 41.0], [4.8, 41.0], [4.9, 42.0], [5.0, 42.0], [5.1, 42.0], [5.2, 42.0], [5.3, 42.0], [5.4, 42.0], [5.5, 42.0], [5.6, 42.0], [5.7, 43.0], [5.8, 43.0], [5.9, 43.0], [6.0, 43.0], [6.1, 43.0], [6.2, 43.0], [6.3, 43.0], [6.4, 43.0], [6.5, 43.0], [6.6, 43.0], [6.7, 44.0], [6.8, 44.0], [6.9, 44.0], [7.0, 44.0], [7.1, 44.0], [7.2, 44.0], [7.3, 44.0], [7.4, 44.0], [7.5, 44.0], [7.6, 44.0], [7.7, 44.0], [7.8, 44.0], [7.9, 45.0], [8.0, 45.0], [8.1, 45.0], [8.2, 45.0], [8.3, 45.0], [8.4, 45.0], [8.5, 45.0], [8.6, 45.0], [8.7, 45.0], [8.8, 45.0], [8.9, 45.0], [9.0, 46.0], [9.1, 46.0], [9.2, 46.0], [9.3, 46.0], [9.4, 46.0], [9.5, 46.0], [9.6, 46.0], [9.7, 46.0], [9.8, 46.0], [9.9, 46.0], [10.0, 46.0], [10.1, 46.0], [10.2, 46.0], [10.3, 46.0], [10.4, 46.0], [10.5, 46.0], [10.6, 47.0], [10.7, 47.0], [10.8, 47.0], [10.9, 47.0], [11.0, 47.0], [11.1, 47.0], [11.2, 47.0], [11.3, 47.0], [11.4, 47.0], [11.5, 47.0], [11.6, 47.0], [11.7, 47.0], [11.8, 47.0], [11.9, 47.0], [12.0, 47.0], [12.1, 47.0], [12.2, 47.0], [12.3, 47.0], [12.4, 47.0], [12.5, 47.0], [12.6, 48.0], [12.7, 48.0], [12.8, 48.0], [12.9, 48.0], [13.0, 48.0], [13.1, 48.0], [13.2, 48.0], [13.3, 48.0], [13.4, 48.0], [13.5, 48.0], [13.6, 48.0], [13.7, 48.0], [13.8, 48.0], [13.9, 48.0], [14.0, 48.0], [14.1, 48.0], [14.2, 48.0], [14.3, 48.0], [14.4, 49.0], [14.5, 49.0], [14.6, 49.0], [14.7, 49.0], [14.8, 49.0], [14.9, 49.0], [15.0, 49.0], [15.1, 49.0], [15.2, 49.0], [15.3, 49.0], [15.4, 49.0], [15.5, 49.0], [15.6, 49.0], [15.7, 49.0], [15.8, 49.0], [15.9, 49.0], [16.0, 49.0], [16.1, 49.0], [16.2, 49.0], [16.3, 49.0], [16.4, 49.0], [16.5, 50.0], [16.6, 50.0], [16.7, 50.0], [16.8, 50.0], [16.9, 50.0], [17.0, 50.0], [17.1, 50.0], [17.2, 50.0], [17.3, 50.0], [17.4, 50.0], [17.5, 50.0], [17.6, 50.0], [17.7, 50.0], [17.8, 50.0], [17.9, 50.0], [18.0, 50.0], [18.1, 50.0], [18.2, 50.0], [18.3, 50.0], [18.4, 50.0], [18.5, 50.0], [18.6, 50.0], [18.7, 50.0], [18.8, 50.0], [18.9, 50.0], [19.0, 51.0], [19.1, 51.0], [19.2, 51.0], [19.3, 51.0], [19.4, 51.0], [19.5, 51.0], [19.6, 51.0], [19.7, 51.0], [19.8, 51.0], [19.9, 51.0], [20.0, 51.0], [20.1, 51.0], [20.2, 51.0], [20.3, 51.0], [20.4, 51.0], [20.5, 51.0], [20.6, 51.0], [20.7, 51.0], [20.8, 51.0], [20.9, 51.0], [21.0, 51.0], [21.1, 51.0], [21.2, 51.0], [21.3, 51.0], [21.4, 51.0], [21.5, 51.0], [21.6, 51.0], [21.7, 51.0], [21.8, 51.0], [21.9, 51.0], [22.0, 52.0], [22.1, 52.0], [22.2, 52.0], [22.3, 52.0], [22.4, 52.0], [22.5, 52.0], [22.6, 52.0], [22.7, 52.0], [22.8, 52.0], [22.9, 52.0], [23.0, 52.0], [23.1, 52.0], [23.2, 52.0], [23.3, 52.0], [23.4, 52.0], [23.5, 52.0], [23.6, 52.0], [23.7, 52.0], [23.8, 52.0], [23.9, 52.0], [24.0, 52.0], [24.1, 52.0], [24.2, 52.0], [24.3, 52.0], [24.4, 52.0], [24.5, 52.0], [24.6, 52.0], [24.7, 52.0], [24.8, 52.0], [24.9, 52.0], [25.0, 52.0], [25.1, 52.0], [25.2, 52.0], [25.3, 52.0], [25.4, 52.0], [25.5, 52.0], [25.6, 53.0], [25.7, 53.0], [25.8, 53.0], [25.9, 53.0], [26.0, 53.0], [26.1, 53.0], [26.2, 53.0], [26.3, 53.0], [26.4, 53.0], [26.5, 53.0], [26.6, 53.0], [26.7, 53.0], [26.8, 53.0], [26.9, 53.0], [27.0, 53.0], [27.1, 53.0], [27.2, 53.0], [27.3, 53.0], [27.4, 53.0], [27.5, 53.0], [27.6, 53.0], [27.7, 53.0], [27.8, 53.0], [27.9, 53.0], [28.0, 53.0], [28.1, 53.0], [28.2, 53.0], [28.3, 53.0], [28.4, 53.0], [28.5, 53.0], [28.6, 53.0], [28.7, 53.0], [28.8, 53.0], [28.9, 53.0], [29.0, 53.0], [29.1, 53.0], [29.2, 53.0], [29.3, 54.0], [29.4, 54.0], [29.5, 54.0], [29.6, 54.0], [29.7, 54.0], [29.8, 54.0], [29.9, 54.0], [30.0, 54.0], [30.1, 54.0], [30.2, 54.0], [30.3, 54.0], [30.4, 54.0], [30.5, 54.0], [30.6, 54.0], [30.7, 54.0], [30.8, 54.0], [30.9, 54.0], [31.0, 54.0], [31.1, 54.0], [31.2, 54.0], [31.3, 54.0], [31.4, 54.0], [31.5, 54.0], [31.6, 54.0], [31.7, 54.0], [31.8, 54.0], [31.9, 54.0], [32.0, 54.0], [32.1, 54.0], [32.2, 54.0], [32.3, 54.0], [32.4, 54.0], [32.5, 54.0], [32.6, 55.0], [32.7, 55.0], [32.8, 55.0], [32.9, 55.0], [33.0, 55.0], [33.1, 55.0], [33.2, 55.0], [33.3, 55.0], [33.4, 55.0], [33.5, 55.0], [33.6, 55.0], [33.7, 55.0], [33.8, 55.0], [33.9, 55.0], [34.0, 55.0], [34.1, 55.0], [34.2, 55.0], [34.3, 55.0], [34.4, 55.0], [34.5, 55.0], [34.6, 55.0], [34.7, 55.0], [34.8, 55.0], [34.9, 55.0], [35.0, 55.0], [35.1, 55.0], [35.2, 55.0], [35.3, 55.0], [35.4, 56.0], [35.5, 56.0], [35.6, 56.0], [35.7, 56.0], [35.8, 56.0], [35.9, 56.0], [36.0, 56.0], [36.1, 56.0], [36.2, 56.0], [36.3, 56.0], [36.4, 56.0], [36.5, 56.0], [36.6, 56.0], [36.7, 56.0], [36.8, 56.0], [36.9, 56.0], [37.0, 56.0], [37.1, 56.0], [37.2, 56.0], [37.3, 56.0], [37.4, 56.0], [37.5, 56.0], [37.6, 56.0], [37.7, 56.0], [37.8, 56.0], [37.9, 56.0], [38.0, 56.0], [38.1, 56.0], [38.2, 56.0], [38.3, 56.0], [38.4, 57.0], [38.5, 57.0], [38.6, 57.0], [38.7, 57.0], [38.8, 57.0], [38.9, 57.0], [39.0, 57.0], [39.1, 57.0], [39.2, 57.0], [39.3, 57.0], [39.4, 57.0], [39.5, 57.0], [39.6, 57.0], [39.7, 57.0], [39.8, 57.0], [39.9, 57.0], [40.0, 57.0], [40.1, 57.0], [40.2, 57.0], [40.3, 57.0], [40.4, 57.0], [40.5, 57.0], [40.6, 57.0], [40.7, 57.0], [40.8, 57.0], [40.9, 57.0], [41.0, 57.0], [41.1, 57.0], [41.2, 57.0], [41.3, 57.0], [41.4, 57.0], [41.5, 57.0], [41.6, 57.0], [41.7, 57.0], [41.8, 57.0], [41.9, 57.0], [42.0, 58.0], [42.1, 58.0], [42.2, 58.0], [42.3, 58.0], [42.4, 58.0], [42.5, 58.0], [42.6, 58.0], [42.7, 58.0], [42.8, 58.0], [42.9, 58.0], [43.0, 58.0], [43.1, 58.0], [43.2, 58.0], [43.3, 58.0], [43.4, 58.0], [43.5, 58.0], [43.6, 58.0], [43.7, 58.0], [43.8, 58.0], [43.9, 58.0], [44.0, 58.0], [44.1, 58.0], [44.2, 58.0], [44.3, 58.0], [44.4, 58.0], [44.5, 58.0], [44.6, 58.0], [44.7, 58.0], [44.8, 58.0], [44.9, 58.0], [45.0, 58.0], [45.1, 58.0], [45.2, 58.0], [45.3, 58.0], [45.4, 58.0], [45.5, 58.0], [45.6, 58.0], [45.7, 58.0], [45.8, 58.0], [45.9, 58.0], [46.0, 58.0], [46.1, 58.0], [46.2, 58.0], [46.3, 58.0], [46.4, 59.0], [46.5, 59.0], [46.6, 59.0], [46.7, 59.0], [46.8, 59.0], [46.9, 59.0], [47.0, 59.0], [47.1, 59.0], [47.2, 59.0], [47.3, 59.0], [47.4, 59.0], [47.5, 59.0], [47.6, 59.0], [47.7, 59.0], [47.8, 59.0], [47.9, 59.0], [48.0, 59.0], [48.1, 59.0], [48.2, 59.0], [48.3, 59.0], [48.4, 59.0], [48.5, 59.0], [48.6, 59.0], [48.7, 59.0], [48.8, 59.0], [48.9, 59.0], [49.0, 59.0], [49.1, 59.0], [49.2, 59.0], [49.3, 59.0], [49.4, 59.0], [49.5, 59.0], [49.6, 59.0], [49.7, 59.0], [49.8, 59.0], [49.9, 59.0], [50.0, 59.0], [50.1, 59.0], [50.2, 59.0], [50.3, 59.0], [50.4, 59.0], [50.5, 59.0], [50.6, 59.0], [50.7, 59.0], [50.8, 60.0], [50.9, 60.0], [51.0, 60.0], [51.1, 60.0], [51.2, 60.0], [51.3, 60.0], [51.4, 60.0], [51.5, 60.0], [51.6, 60.0], [51.7, 60.0], [51.8, 60.0], [51.9, 60.0], [52.0, 60.0], [52.1, 60.0], [52.2, 60.0], [52.3, 60.0], [52.4, 60.0], [52.5, 60.0], [52.6, 60.0], [52.7, 60.0], [52.8, 60.0], [52.9, 60.0], [53.0, 60.0], [53.1, 60.0], [53.2, 60.0], [53.3, 60.0], [53.4, 60.0], [53.5, 60.0], [53.6, 60.0], [53.7, 60.0], [53.8, 60.0], [53.9, 60.0], [54.0, 60.0], [54.1, 60.0], [54.2, 60.0], [54.3, 60.0], [54.4, 60.0], [54.5, 60.0], [54.6, 60.0], [54.7, 60.0], [54.8, 60.0], [54.9, 60.0], [55.0, 60.0], [55.1, 60.0], [55.2, 60.0], [55.3, 60.0], [55.4, 61.0], [55.5, 61.0], [55.6, 61.0], [55.7, 61.0], [55.8, 61.0], [55.9, 61.0], [56.0, 61.0], [56.1, 61.0], [56.2, 61.0], [56.3, 61.0], [56.4, 61.0], [56.5, 61.0], [56.6, 61.0], [56.7, 61.0], [56.8, 61.0], [56.9, 61.0], [57.0, 61.0], [57.1, 61.0], [57.2, 61.0], [57.3, 61.0], [57.4, 61.0], [57.5, 61.0], [57.6, 61.0], [57.7, 61.0], [57.8, 61.0], [57.9, 61.0], [58.0, 61.0], [58.1, 61.0], [58.2, 61.0], [58.3, 61.0], [58.4, 61.0], [58.5, 61.0], [58.6, 61.0], [58.7, 61.0], [58.8, 61.0], [58.9, 61.0], [59.0, 61.0], [59.1, 61.0], [59.2, 61.0], [59.3, 62.0], [59.4, 62.0], [59.5, 62.0], [59.6, 62.0], [59.7, 62.0], [59.8, 62.0], [59.9, 62.0], [60.0, 62.0], [60.1, 62.0], [60.2, 62.0], [60.3, 62.0], [60.4, 62.0], [60.5, 62.0], [60.6, 62.0], [60.7, 62.0], [60.8, 62.0], [60.9, 62.0], [61.0, 62.0], [61.1, 62.0], [61.2, 62.0], [61.3, 62.0], [61.4, 62.0], [61.5, 62.0], [61.6, 62.0], [61.7, 62.0], [61.8, 62.0], [61.9, 62.0], [62.0, 62.0], [62.1, 62.0], [62.2, 62.0], [62.3, 62.0], [62.4, 62.0], [62.5, 62.0], [62.6, 62.0], [62.7, 63.0], [62.8, 63.0], [62.9, 63.0], [63.0, 63.0], [63.1, 63.0], [63.2, 63.0], [63.3, 63.0], [63.4, 63.0], [63.5, 63.0], [63.6, 63.0], [63.7, 63.0], [63.8, 63.0], [63.9, 63.0], [64.0, 63.0], [64.1, 63.0], [64.2, 63.0], [64.3, 63.0], [64.4, 63.0], [64.5, 63.0], [64.6, 63.0], [64.7, 63.0], [64.8, 63.0], [64.9, 63.0], [65.0, 63.0], [65.1, 63.0], [65.2, 63.0], [65.3, 63.0], [65.4, 63.0], [65.5, 63.0], [65.6, 64.0], [65.7, 64.0], [65.8, 64.0], [65.9, 64.0], [66.0, 64.0], [66.1, 64.0], [66.2, 64.0], [66.3, 64.0], [66.4, 64.0], [66.5, 64.0], [66.6, 64.0], [66.7, 64.0], [66.8, 64.0], [66.9, 64.0], [67.0, 64.0], [67.1, 64.0], [67.2, 64.0], [67.3, 64.0], [67.4, 64.0], [67.5, 64.0], [67.6, 64.0], [67.7, 64.0], [67.8, 64.0], [67.9, 64.0], [68.0, 64.0], [68.1, 64.0], [68.2, 65.0], [68.3, 65.0], [68.4, 65.0], [68.5, 65.0], [68.6, 65.0], [68.7, 65.0], [68.8, 65.0], [68.9, 65.0], [69.0, 65.0], [69.1, 65.0], [69.2, 65.0], [69.3, 65.0], [69.4, 65.0], [69.5, 65.0], [69.6, 65.0], [69.7, 65.0], [69.8, 65.0], [69.9, 65.0], [70.0, 65.0], [70.1, 65.0], [70.2, 65.0], [70.3, 65.0], [70.4, 65.0], [70.5, 65.0], [70.6, 65.0], [70.7, 66.0], [70.8, 66.0], [70.9, 66.0], [71.0, 66.0], [71.1, 66.0], [71.2, 66.0], [71.3, 66.0], [71.4, 66.0], [71.5, 66.0], [71.6, 66.0], [71.7, 66.0], [71.8, 66.0], [71.9, 66.0], [72.0, 66.0], [72.1, 66.0], [72.2, 66.0], [72.3, 66.0], [72.4, 66.0], [72.5, 66.0], [72.6, 66.0], [72.7, 66.0], [72.8, 66.0], [72.9, 66.0], [73.0, 66.0], [73.1, 66.0], [73.2, 66.0], [73.3, 66.0], [73.4, 66.0], [73.5, 66.0], [73.6, 66.0], [73.7, 66.0], [73.8, 66.0], [73.9, 67.0], [74.0, 67.0], [74.1, 67.0], [74.2, 67.0], [74.3, 67.0], [74.4, 67.0], [74.5, 67.0], [74.6, 67.0], [74.7, 67.0], [74.8, 67.0], [74.9, 67.0], [75.0, 67.0], [75.1, 67.0], [75.2, 67.0], [75.3, 67.0], [75.4, 67.0], [75.5, 67.0], [75.6, 67.0], [75.7, 67.0], [75.8, 67.0], [75.9, 67.0], [76.0, 67.0], [76.1, 67.0], [76.2, 67.0], [76.3, 67.0], [76.4, 67.0], [76.5, 67.0], [76.6, 67.0], [76.7, 67.0], [76.8, 67.0], [76.9, 68.0], [77.0, 68.0], [77.1, 68.0], [77.2, 68.0], [77.3, 68.0], [77.4, 68.0], [77.5, 68.0], [77.6, 68.0], [77.7, 68.0], [77.8, 68.0], [77.9, 68.0], [78.0, 68.0], [78.1, 68.0], [78.2, 68.0], [78.3, 68.0], [78.4, 68.0], [78.5, 68.0], [78.6, 68.0], [78.7, 68.0], [78.8, 68.0], [78.9, 68.0], [79.0, 68.0], [79.1, 68.0], [79.2, 68.0], [79.3, 68.0], [79.4, 68.0], [79.5, 68.0], [79.6, 68.0], [79.7, 68.0], [79.8, 69.0], [79.9, 69.0], [80.0, 69.0], [80.1, 69.0], [80.2, 69.0], [80.3, 69.0], [80.4, 69.0], [80.5, 69.0], [80.6, 69.0], [80.7, 69.0], [80.8, 69.0], [80.9, 69.0], [81.0, 69.0], [81.1, 69.0], [81.2, 69.0], [81.3, 69.0], [81.4, 69.0], [81.5, 69.0], [81.6, 69.0], [81.7, 69.0], [81.8, 69.0], [81.9, 69.0], [82.0, 69.0], [82.1, 69.0], [82.2, 69.0], [82.3, 69.0], [82.4, 69.0], [82.5, 69.0], [82.6, 70.0], [82.7, 70.0], [82.8, 70.0], [82.9, 70.0], [83.0, 70.0], [83.1, 70.0], [83.2, 70.0], [83.3, 70.0], [83.4, 70.0], [83.5, 70.0], [83.6, 70.0], [83.7, 70.0], [83.8, 70.0], [83.9, 70.0], [84.0, 70.0], [84.1, 70.0], [84.2, 70.0], [84.3, 70.0], [84.4, 70.0], [84.5, 70.0], [84.6, 70.0], [84.7, 70.0], [84.8, 71.0], [84.9, 71.0], [85.0, 71.0], [85.1, 71.0], [85.2, 71.0], [85.3, 71.0], [85.4, 71.0], [85.5, 71.0], [85.6, 71.0], [85.7, 71.0], [85.8, 71.0], [85.9, 71.0], [86.0, 71.0], [86.1, 71.0], [86.2, 71.0], [86.3, 71.0], [86.4, 71.0], [86.5, 71.0], [86.6, 71.0], [86.7, 72.0], [86.8, 72.0], [86.9, 72.0], [87.0, 72.0], [87.1, 72.0], [87.2, 72.0], [87.3, 72.0], [87.4, 72.0], [87.5, 72.0], [87.6, 72.0], [87.7, 72.0], [87.8, 72.0], [87.9, 72.0], [88.0, 72.0], [88.1, 73.0], [88.2, 73.0], [88.3, 73.0], [88.4, 73.0], [88.5, 73.0], [88.6, 73.0], [88.7, 73.0], [88.8, 73.0], [88.9, 73.0], [89.0, 73.0], [89.1, 73.0], [89.2, 73.0], [89.3, 73.0], [89.4, 74.0], [89.5, 74.0], [89.6, 74.0], [89.7, 74.0], [89.8, 74.0], [89.9, 74.0], [90.0, 74.0], [90.1, 74.0], [90.2, 74.0], [90.3, 74.0], [90.4, 74.0], [90.5, 74.0], [90.6, 75.0], [90.7, 75.0], [90.8, 75.0], [90.9, 75.0], [91.0, 75.0], [91.1, 75.0], [91.2, 75.0], [91.3, 75.0], [91.4, 75.0], [91.5, 75.0], [91.6, 75.0], [91.7, 76.0], [91.8, 76.0], [91.9, 76.0], [92.0, 76.0], [92.1, 76.0], [92.2, 76.0], [92.3, 76.0], [92.4, 76.0], [92.5, 76.0], [92.6, 76.0], [92.7, 76.0], [92.8, 77.0], [92.9, 77.0], [93.0, 77.0], [93.1, 77.0], [93.2, 77.0], [93.3, 77.0], [93.4, 77.0], [93.5, 77.0], [93.6, 77.0], [93.7, 78.0], [93.8, 78.0], [93.9, 78.0], [94.0, 78.0], [94.1, 78.0], [94.2, 78.0], [94.3, 78.0], [94.4, 78.0], [94.5, 78.0], [94.6, 79.0], [94.7, 79.0], [94.8, 79.0], [94.9, 79.0], [95.0, 79.0], [95.1, 79.0], [95.2, 79.0], [95.3, 80.0], [95.4, 80.0], [95.5, 80.0], [95.6, 80.0], [95.7, 80.0], [95.8, 81.0], [95.9, 81.0], [96.0, 81.0], [96.1, 81.0], [96.2, 81.0], [96.3, 81.0], [96.4, 82.0], [96.5, 82.0], [96.6, 82.0], [96.7, 82.0], [96.8, 82.0], [96.9, 83.0], [97.0, 83.0], [97.1, 83.0], [97.2, 83.0], [97.3, 83.0], [97.4, 84.0], [97.5, 84.0], [97.6, 84.0], [97.7, 84.0], [97.8, 85.0], [97.9, 85.0], [98.0, 85.0], [98.1, 86.0], [98.2, 86.0], [98.3, 87.0], [98.4, 87.0], [98.5, 88.0], [98.6, 89.0], [98.7, 90.0], [98.8, 90.0], [98.9, 91.0], [99.0, 92.0], [99.1, 92.0], [99.2, 93.0], [99.3, 94.0], [99.4, 94.0], [99.5, 96.0], [99.6, 98.0], [99.7, 100.0], [99.8, 101.0], [99.9, 105.0], [100.0, 114.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 8.0], [0.1, 13.0], [0.2, 14.0], [0.3, 15.0], [0.4, 15.0], [0.5, 16.0], [0.6, 16.0], [0.7, 16.0], [0.8, 17.0], [0.9, 17.0], [1.0, 18.0], [1.1, 18.0], [1.2, 19.0], [1.3, 19.0], [1.4, 19.0], [1.5, 19.0], [1.6, 19.0], [1.7, 20.0], [1.8, 20.0], [1.9, 20.0], [2.0, 20.0], [2.1, 20.0], [2.2, 21.0], [2.3, 21.0], [2.4, 21.0], [2.5, 21.0], [2.6, 21.0], [2.7, 21.0], [2.8, 22.0], [2.9, 22.0], [3.0, 22.0], [3.1, 22.0], [3.2, 22.0], [3.3, 23.0], [3.4, 23.0], [3.5, 23.0], [3.6, 24.0], [3.7, 24.0], [3.8, 24.0], [3.9, 24.0], [4.0, 25.0], [4.1, 25.0], [4.2, 25.0], [4.3, 26.0], [4.4, 26.0], [4.5, 26.0], [4.6, 26.0], [4.7, 26.0], [4.8, 26.0], [4.9, 27.0], [5.0, 27.0], [5.1, 27.0], [5.2, 27.0], [5.3, 27.0], [5.4, 28.0], [5.5, 28.0], [5.6, 28.0], [5.7, 28.0], [5.8, 28.0], [5.9, 28.0], [6.0, 29.0], [6.1, 29.0], [6.2, 29.0], [6.3, 29.0], [6.4, 29.0], [6.5, 30.0], [6.6, 30.0], [6.7, 30.0], [6.8, 30.0], [6.9, 30.0], [7.0, 31.0], [7.1, 31.0], [7.2, 31.0], [7.3, 31.0], [7.4, 32.0], [7.5, 32.0], [7.6, 32.0], [7.7, 33.0], [7.8, 33.0], [7.9, 34.0], [8.0, 34.0], [8.1, 34.0], [8.2, 34.0], [8.3, 35.0], [8.4, 35.0], [8.5, 35.0], [8.6, 36.0], [8.7, 36.0], [8.8, 36.0], [8.9, 37.0], [9.0, 37.0], [9.1, 37.0], [9.2, 37.0], [9.3, 38.0], [9.4, 38.0], [9.5, 38.0], [9.6, 39.0], [9.7, 39.0], [9.8, 39.0], [9.9, 40.0], [10.0, 40.0], [10.1, 41.0], [10.2, 42.0], [10.3, 42.0], [10.4, 42.0], [10.5, 43.0], [10.6, 43.0], [10.7, 44.0], [10.8, 44.0], [10.9, 45.0], [11.0, 46.0], [11.1, 46.0], [11.2, 46.0], [11.3, 47.0], [11.4, 48.0], [11.5, 48.0], [11.6, 49.0], [11.7, 49.0], [11.8, 50.0], [11.9, 51.0], [12.0, 51.0], [12.1, 52.0], [12.2, 52.0], [12.3, 53.0], [12.4, 53.0], [12.5, 54.0], [12.6, 54.0], [12.7, 55.0], [12.8, 56.0], [12.9, 57.0], [13.0, 57.0], [13.1, 58.0], [13.2, 58.0], [13.3, 58.0], [13.4, 59.0], [13.5, 60.0], [13.6, 60.0], [13.7, 61.0], [13.8, 62.0], [13.9, 62.0], [14.0, 63.0], [14.1, 63.0], [14.2, 64.0], [14.3, 64.0], [14.4, 65.0], [14.5, 66.0], [14.6, 67.0], [14.7, 67.0], [14.8, 68.0], [14.9, 68.0], [15.0, 68.0], [15.1, 69.0], [15.2, 69.0], [15.3, 70.0], [15.4, 71.0], [15.5, 71.0], [15.6, 72.0], [15.7, 72.0], [15.8, 73.0], [15.9, 74.0], [16.0, 74.0], [16.1, 75.0], [16.2, 76.0], [16.3, 77.0], [16.4, 78.0], [16.5, 78.0], [16.6, 79.0], [16.7, 79.0], [16.8, 80.0], [16.9, 81.0], [17.0, 82.0], [17.1, 82.0], [17.2, 83.0], [17.3, 83.0], [17.4, 83.0], [17.5, 84.0], [17.6, 84.0], [17.7, 85.0], [17.8, 86.0], [17.9, 86.0], [18.0, 87.0], [18.1, 87.0], [18.2, 89.0], [18.3, 90.0], [18.4, 90.0], [18.5, 91.0], [18.6, 92.0], [18.7, 92.0], [18.8, 92.0], [18.9, 93.0], [19.0, 93.0], [19.1, 94.0], [19.2, 95.0], [19.3, 95.0], [19.4, 96.0], [19.5, 97.0], [19.6, 97.0], [19.7, 98.0], [19.8, 99.0], [19.9, 99.0], [20.0, 100.0], [20.1, 100.0], [20.2, 101.0], [20.3, 101.0], [20.4, 102.0], [20.5, 102.0], [20.6, 103.0], [20.7, 103.0], [20.8, 105.0], [20.9, 105.0], [21.0, 106.0], [21.1, 106.0], [21.2, 107.0], [21.3, 107.0], [21.4, 108.0], [21.5, 109.0], [21.6, 109.0], [21.7, 110.0], [21.8, 110.0], [21.9, 111.0], [22.0, 112.0], [22.1, 113.0], [22.2, 114.0], [22.3, 115.0], [22.4, 116.0], [22.5, 116.0], [22.6, 117.0], [22.7, 117.0], [22.8, 118.0], [22.9, 119.0], [23.0, 120.0], [23.1, 120.0], [23.2, 121.0], [23.3, 122.0], [23.4, 123.0], [23.5, 123.0], [23.6, 124.0], [23.7, 124.0], [23.8, 125.0], [23.9, 126.0], [24.0, 127.0], [24.1, 127.0], [24.2, 129.0], [24.3, 130.0], [24.4, 131.0], [24.5, 131.0], [24.6, 132.0], [24.7, 132.0], [24.8, 132.0], [24.9, 133.0], [25.0, 133.0], [25.1, 134.0], [25.2, 135.0], [25.3, 137.0], [25.4, 138.0], [25.5, 139.0], [25.6, 139.0], [25.7, 140.0], [25.8, 141.0], [25.9, 141.0], [26.0, 142.0], [26.1, 143.0], [26.2, 145.0], [26.3, 147.0], [26.4, 147.0], [26.5, 148.0], [26.6, 149.0], [26.7, 150.0], [26.8, 151.0], [26.9, 152.0], [27.0, 153.0], [27.1, 154.0], [27.2, 155.0], [27.3, 156.0], [27.4, 157.0], [27.5, 158.0], [27.6, 159.0], [27.7, 160.0], [27.8, 162.0], [27.9, 163.0], [28.0, 164.0], [28.1, 165.0], [28.2, 167.0], [28.3, 168.0], [28.4, 170.0], [28.5, 172.0], [28.6, 174.0], [28.7, 175.0], [28.8, 176.0], [28.9, 177.0], [29.0, 178.0], [29.1, 179.0], [29.2, 180.0], [29.3, 181.0], [29.4, 182.0], [29.5, 183.0], [29.6, 184.0], [29.7, 186.0], [29.8, 187.0], [29.9, 189.0], [30.0, 190.0], [30.1, 192.0], [30.2, 193.0], [30.3, 195.0], [30.4, 196.0], [30.5, 198.0], [30.6, 200.0], [30.7, 201.0], [30.8, 203.0], [30.9, 205.0], [31.0, 206.0], [31.1, 207.0], [31.2, 208.0], [31.3, 209.0], [31.4, 211.0], [31.5, 212.0], [31.6, 212.0], [31.7, 214.0], [31.8, 215.0], [31.9, 216.0], [32.0, 217.0], [32.1, 218.0], [32.2, 219.0], [32.3, 220.0], [32.4, 221.0], [32.5, 222.0], [32.6, 223.0], [32.7, 224.0], [32.8, 225.0], [32.9, 225.0], [33.0, 226.0], [33.1, 227.0], [33.2, 227.0], [33.3, 228.0], [33.4, 229.0], [33.5, 229.0], [33.6, 230.0], [33.7, 230.0], [33.8, 231.0], [33.9, 232.0], [34.0, 233.0], [34.1, 233.0], [34.2, 234.0], [34.3, 234.0], [34.4, 235.0], [34.5, 237.0], [34.6, 238.0], [34.7, 239.0], [34.8, 240.0], [34.9, 241.0], [35.0, 242.0], [35.1, 243.0], [35.2, 245.0], [35.3, 246.0], [35.4, 247.0], [35.5, 249.0], [35.6, 250.0], [35.7, 252.0], [35.8, 254.0], [35.9, 255.0], [36.0, 257.0], [36.1, 259.0], [36.2, 260.0], [36.3, 262.0], [36.4, 263.0], [36.5, 265.0], [36.6, 266.0], [36.7, 268.0], [36.8, 269.0], [36.9, 270.0], [37.0, 271.0], [37.1, 272.0], [37.2, 273.0], [37.3, 274.0], [37.4, 275.0], [37.5, 277.0], [37.6, 277.0], [37.7, 278.0], [37.8, 279.0], [37.9, 281.0], [38.0, 282.0], [38.1, 283.0], [38.2, 283.0], [38.3, 284.0], [38.4, 284.0], [38.5, 285.0], [38.6, 285.0], [38.7, 286.0], [38.8, 287.0], [38.9, 288.0], [39.0, 289.0], [39.1, 289.0], [39.2, 290.0], [39.3, 291.0], [39.4, 292.0], [39.5, 292.0], [39.6, 293.0], [39.7, 294.0], [39.8, 294.0], [39.9, 295.0], [40.0, 295.0], [40.1, 297.0], [40.2, 297.0], [40.3, 298.0], [40.4, 299.0], [40.5, 299.0], [40.6, 300.0], [40.7, 302.0], [40.8, 303.0], [40.9, 303.0], [41.0, 304.0], [41.1, 305.0], [41.2, 306.0], [41.3, 307.0], [41.4, 308.0], [41.5, 310.0], [41.6, 311.0], [41.7, 312.0], [41.8, 314.0], [41.9, 316.0], [42.0, 317.0], [42.1, 318.0], [42.2, 318.0], [42.3, 319.0], [42.4, 320.0], [42.5, 321.0], [42.6, 322.0], [42.7, 323.0], [42.8, 324.0], [42.9, 325.0], [43.0, 326.0], [43.1, 327.0], [43.2, 328.0], [43.3, 329.0], [43.4, 330.0], [43.5, 331.0], [43.6, 333.0], [43.7, 334.0], [43.8, 335.0], [43.9, 336.0], [44.0, 337.0], [44.1, 338.0], [44.2, 340.0], [44.3, 341.0], [44.4, 342.0], [44.5, 343.0], [44.6, 345.0], [44.7, 346.0], [44.8, 348.0], [44.9, 349.0], [45.0, 350.0], [45.1, 352.0], [45.2, 354.0], [45.3, 356.0], [45.4, 357.0], [45.5, 358.0], [45.6, 359.0], [45.7, 361.0], [45.8, 363.0], [45.9, 365.0], [46.0, 366.0], [46.1, 368.0], [46.2, 369.0], [46.3, 370.0], [46.4, 371.0], [46.5, 372.0], [46.6, 373.0], [46.7, 374.0], [46.8, 375.0], [46.9, 376.0], [47.0, 377.0], [47.1, 378.0], [47.2, 379.0], [47.3, 380.0], [47.4, 381.0], [47.5, 382.0], [47.6, 382.0], [47.7, 383.0], [47.8, 384.0], [47.9, 385.0], [48.0, 386.0], [48.1, 386.0], [48.2, 387.0], [48.3, 388.0], [48.4, 389.0], [48.5, 389.0], [48.6, 390.0], [48.7, 391.0], [48.8, 393.0], [48.9, 395.0], [49.0, 396.0], [49.1, 397.0], [49.2, 398.0], [49.3, 399.0], [49.4, 400.0], [49.5, 401.0], [49.6, 402.0], [49.7, 403.0], [49.8, 403.0], [49.9, 404.0], [50.0, 405.0], [50.1, 405.0], [50.2, 407.0], [50.3, 407.0], [50.4, 408.0], [50.5, 409.0], [50.6, 410.0], [50.7, 411.0], [50.8, 411.0], [50.9, 412.0], [51.0, 412.0], [51.1, 413.0], [51.2, 414.0], [51.3, 414.0], [51.4, 415.0], [51.5, 416.0], [51.6, 416.0], [51.7, 417.0], [51.8, 418.0], [51.9, 418.0], [52.0, 419.0], [52.1, 419.0], [52.2, 420.0], [52.3, 420.0], [52.4, 422.0], [52.5, 423.0], [52.6, 424.0], [52.7, 426.0], [52.8, 426.0], [52.9, 427.0], [53.0, 427.0], [53.1, 428.0], [53.2, 429.0], [53.3, 430.0], [53.4, 431.0], [53.5, 432.0], [53.6, 433.0], [53.7, 434.0], [53.8, 434.0], [53.9, 435.0], [54.0, 435.0], [54.1, 436.0], [54.2, 436.0], [54.3, 438.0], [54.4, 439.0], [54.5, 440.0], [54.6, 441.0], [54.7, 442.0], [54.8, 442.0], [54.9, 443.0], [55.0, 444.0], [55.1, 445.0], [55.2, 446.0], [55.3, 447.0], [55.4, 448.0], [55.5, 449.0], [55.6, 450.0], [55.7, 451.0], [55.8, 452.0], [55.9, 453.0], [56.0, 454.0], [56.1, 456.0], [56.2, 457.0], [56.3, 459.0], [56.4, 460.0], [56.5, 461.0], [56.6, 463.0], [56.7, 465.0], [56.8, 467.0], [56.9, 467.0], [57.0, 469.0], [57.1, 470.0], [57.2, 472.0], [57.3, 473.0], [57.4, 474.0], [57.5, 474.0], [57.6, 475.0], [57.7, 476.0], [57.8, 477.0], [57.9, 478.0], [58.0, 479.0], [58.1, 481.0], [58.2, 481.0], [58.3, 482.0], [58.4, 483.0], [58.5, 484.0], [58.6, 486.0], [58.7, 489.0], [58.8, 490.0], [58.9, 491.0], [59.0, 492.0], [59.1, 494.0], [59.2, 496.0], [59.3, 497.0], [59.4, 498.0], [59.5, 498.0], [59.6, 499.0], [59.7, 500.0], [59.8, 500.0], [59.9, 501.0], [60.0, 502.0], [60.1, 502.0], [60.2, 503.0], [60.3, 504.0], [60.4, 504.0], [60.5, 505.0], [60.6, 506.0], [60.7, 506.0], [60.8, 507.0], [60.9, 508.0], [61.0, 508.0], [61.1, 509.0], [61.2, 509.0], [61.3, 510.0], [61.4, 512.0], [61.5, 513.0], [61.6, 514.0], [61.7, 515.0], [61.8, 516.0], [61.9, 517.0], [62.0, 518.0], [62.1, 521.0], [62.2, 522.0], [62.3, 523.0], [62.4, 524.0], [62.5, 526.0], [62.6, 527.0], [62.7, 529.0], [62.8, 530.0], [62.9, 531.0], [63.0, 532.0], [63.1, 533.0], [63.2, 534.0], [63.3, 536.0], [63.4, 537.0], [63.5, 539.0], [63.6, 541.0], [63.7, 542.0], [63.8, 544.0], [63.9, 545.0], [64.0, 547.0], [64.1, 549.0], [64.2, 551.0], [64.3, 552.0], [64.4, 553.0], [64.5, 554.0], [64.6, 555.0], [64.7, 556.0], [64.8, 557.0], [64.9, 558.0], [65.0, 560.0], [65.1, 562.0], [65.2, 563.0], [65.3, 564.0], [65.4, 565.0], [65.5, 567.0], [65.6, 568.0], [65.7, 570.0], [65.8, 571.0], [65.9, 573.0], [66.0, 574.0], [66.1, 577.0], [66.2, 578.0], [66.3, 580.0], [66.4, 581.0], [66.5, 583.0], [66.6, 585.0], [66.7, 587.0], [66.8, 588.0], [66.9, 590.0], [67.0, 591.0], [67.1, 593.0], [67.2, 594.0], [67.3, 596.0], [67.4, 597.0], [67.5, 600.0], [67.6, 602.0], [67.7, 603.0], [67.8, 605.0], [67.9, 607.0], [68.0, 608.0], [68.1, 610.0], [68.2, 611.0], [68.3, 612.0], [68.4, 613.0], [68.5, 614.0], [68.6, 616.0], [68.7, 618.0], [68.8, 619.0], [68.9, 620.0], [69.0, 621.0], [69.1, 623.0], [69.2, 624.0], [69.3, 625.0], [69.4, 627.0], [69.5, 628.0], [69.6, 629.0], [69.7, 631.0], [69.8, 634.0], [69.9, 636.0], [70.0, 637.0], [70.1, 638.0], [70.2, 640.0], [70.3, 641.0], [70.4, 643.0], [70.5, 644.0], [70.6, 645.0], [70.7, 647.0], [70.8, 649.0], [70.9, 650.0], [71.0, 651.0], [71.1, 652.0], [71.2, 652.0], [71.3, 653.0], [71.4, 654.0], [71.5, 655.0], [71.6, 656.0], [71.7, 657.0], [71.8, 658.0], [71.9, 658.0], [72.0, 659.0], [72.1, 660.0], [72.2, 660.0], [72.3, 661.0], [72.4, 662.0], [72.5, 662.0], [72.6, 663.0], [72.7, 664.0], [72.8, 665.0], [72.9, 665.0], [73.0, 666.0], [73.1, 667.0], [73.2, 668.0], [73.3, 668.0], [73.4, 669.0], [73.5, 670.0], [73.6, 670.0], [73.7, 671.0], [73.8, 672.0], [73.9, 674.0], [74.0, 675.0], [74.1, 675.0], [74.2, 676.0], [74.3, 677.0], [74.4, 678.0], [74.5, 679.0], [74.6, 680.0], [74.7, 682.0], [74.8, 684.0], [74.9, 685.0], [75.0, 687.0], [75.1, 689.0], [75.2, 690.0], [75.3, 691.0], [75.4, 692.0], [75.5, 693.0], [75.6, 695.0], [75.7, 697.0], [75.8, 698.0], [75.9, 699.0], [76.0, 700.0], [76.1, 700.0], [76.2, 701.0], [76.3, 702.0], [76.4, 704.0], [76.5, 706.0], [76.6, 708.0], [76.7, 709.0], [76.8, 711.0], [76.9, 712.0], [77.0, 714.0], [77.1, 715.0], [77.2, 717.0], [77.3, 719.0], [77.4, 722.0], [77.5, 724.0], [77.6, 725.0], [77.7, 726.0], [77.8, 727.0], [77.9, 730.0], [78.0, 731.0], [78.1, 732.0], [78.2, 733.0], [78.3, 735.0], [78.4, 737.0], [78.5, 739.0], [78.6, 741.0], [78.7, 744.0], [78.8, 746.0], [78.9, 747.0], [79.0, 749.0], [79.1, 750.0], [79.2, 754.0], [79.3, 755.0], [79.4, 757.0], [79.5, 761.0], [79.6, 763.0], [79.7, 765.0], [79.8, 765.0], [79.9, 768.0], [80.0, 770.0], [80.1, 772.0], [80.2, 774.0], [80.3, 777.0], [80.4, 778.0], [80.5, 780.0], [80.6, 781.0], [80.7, 782.0], [80.8, 784.0], [80.9, 786.0], [81.0, 787.0], [81.1, 787.0], [81.2, 789.0], [81.3, 790.0], [81.4, 791.0], [81.5, 792.0], [81.6, 793.0], [81.7, 793.0], [81.8, 795.0], [81.9, 795.0], [82.0, 796.0], [82.1, 797.0], [82.2, 798.0], [82.3, 799.0], [82.4, 800.0], [82.5, 801.0], [82.6, 802.0], [82.7, 803.0], [82.8, 804.0], [82.9, 805.0], [83.0, 806.0], [83.1, 807.0], [83.2, 808.0], [83.3, 809.0], [83.4, 810.0], [83.5, 810.0], [83.6, 811.0], [83.7, 813.0], [83.8, 814.0], [83.9, 815.0], [84.0, 816.0], [84.1, 818.0], [84.2, 819.0], [84.3, 820.0], [84.4, 821.0], [84.5, 822.0], [84.6, 824.0], [84.7, 827.0], [84.8, 828.0], [84.9, 830.0], [85.0, 831.0], [85.1, 833.0], [85.2, 834.0], [85.3, 836.0], [85.4, 839.0], [85.5, 840.0], [85.6, 842.0], [85.7, 845.0], [85.8, 846.0], [85.9, 848.0], [86.0, 849.0], [86.1, 850.0], [86.2, 851.0], [86.3, 853.0], [86.4, 854.0], [86.5, 856.0], [86.6, 857.0], [86.7, 858.0], [86.8, 859.0], [86.9, 860.0], [87.0, 862.0], [87.1, 864.0], [87.2, 866.0], [87.3, 867.0], [87.4, 867.0], [87.5, 870.0], [87.6, 872.0], [87.7, 873.0], [87.8, 875.0], [87.9, 877.0], [88.0, 879.0], [88.1, 880.0], [88.2, 881.0], [88.3, 882.0], [88.4, 883.0], [88.5, 886.0], [88.6, 887.0], [88.7, 888.0], [88.8, 890.0], [88.9, 891.0], [89.0, 893.0], [89.1, 895.0], [89.2, 896.0], [89.3, 897.0], [89.4, 899.0], [89.5, 900.0], [89.6, 902.0], [89.7, 903.0], [89.8, 904.0], [89.9, 906.0], [90.0, 907.0], [90.1, 912.0], [90.2, 915.0], [90.3, 919.0], [90.4, 921.0], [90.5, 924.0], [90.6, 926.0], [90.7, 929.0], [90.8, 931.0], [90.9, 935.0], [91.0, 937.0], [91.1, 940.0], [91.2, 942.0], [91.3, 944.0], [91.4, 945.0], [91.5, 946.0], [91.6, 948.0], [91.7, 950.0], [91.8, 952.0], [91.9, 954.0], [92.0, 954.0], [92.1, 957.0], [92.2, 958.0], [92.3, 959.0], [92.4, 960.0], [92.5, 962.0], [92.6, 963.0], [92.7, 965.0], [92.8, 966.0], [92.9, 967.0], [93.0, 968.0], [93.1, 969.0], [93.2, 970.0], [93.3, 971.0], [93.4, 974.0], [93.5, 976.0], [93.6, 977.0], [93.7, 981.0], [93.8, 982.0], [93.9, 985.0], [94.0, 987.0], [94.1, 990.0], [94.2, 992.0], [94.3, 994.0], [94.4, 997.0], [94.5, 998.0], [94.6, 999.0], [94.7, 1000.0], [94.8, 1002.0], [94.9, 1003.0], [95.0, 1005.0], [95.1, 1006.0], [95.2, 1007.0], [95.3, 1008.0], [95.4, 1009.0], [95.5, 1013.0], [95.6, 1015.0], [95.7, 1017.0], [95.8, 1021.0], [95.9, 1023.0], [96.0, 1024.0], [96.1, 1031.0], [96.2, 1036.0], [96.3, 1042.0], [96.4, 1048.0], [96.5, 1050.0], [96.6, 1057.0], [96.7, 1060.0], [96.8, 1061.0], [96.9, 1066.0], [97.0, 1071.0], [97.1, 1080.0], [97.2, 1086.0], [97.3, 1092.0], [97.4, 1095.0], [97.5, 1097.0], [97.6, 1101.0], [97.7, 1104.0], [97.8, 1110.0], [97.9, 1113.0], [98.0, 1119.0], [98.1, 1121.0], [98.2, 1127.0], [98.3, 1131.0], [98.4, 1142.0], [98.5, 1151.0], [98.6, 1159.0], [98.7, 1167.0], [98.8, 1173.0], [98.9, 1178.0], [99.0, 1185.0], [99.1, 1194.0], [99.2, 1204.0], [99.3, 1214.0], [99.4, 1224.0], [99.5, 1237.0], [99.6, 1243.0], [99.7, 1250.0], [99.8, 1262.0], [99.9, 1264.0], [100.0, 1270.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 4.0], [0.3, 4.0], [0.4, 4.0], [0.5, 4.0], [0.6, 5.0], [0.7, 5.0], [0.8, 5.0], [0.9, 6.0], [1.0, 8.0], [1.1, 9.0], [1.2, 10.0], [1.3, 11.0], [1.4, 12.0], [1.5, 14.0], [1.6, 15.0], [1.7, 17.0], [1.8, 18.0], [1.9, 19.0], [2.0, 19.0], [2.1, 20.0], [2.2, 21.0], [2.3, 21.0], [2.4, 22.0], [2.5, 22.0], [2.6, 23.0], [2.7, 24.0], [2.8, 24.0], [2.9, 25.0], [3.0, 25.0], [3.1, 26.0], [3.2, 26.0], [3.3, 26.0], [3.4, 27.0], [3.5, 27.0], [3.6, 27.0], [3.7, 27.0], [3.8, 27.0], [3.9, 27.0], [4.0, 28.0], [4.1, 28.0], [4.2, 28.0], [4.3, 28.0], [4.4, 28.0], [4.5, 29.0], [4.6, 29.0], [4.7, 29.0], [4.8, 29.0], [4.9, 29.0], [5.0, 30.0], [5.1, 30.0], [5.2, 30.0], [5.3, 30.0], [5.4, 30.0], [5.5, 30.0], [5.6, 30.0], [5.7, 31.0], [5.8, 31.0], [5.9, 31.0], [6.0, 31.0], [6.1, 31.0], [6.2, 31.0], [6.3, 31.0], [6.4, 31.0], [6.5, 32.0], [6.6, 32.0], [6.7, 32.0], [6.8, 32.0], [6.9, 32.0], [7.0, 32.0], [7.1, 32.0], [7.2, 32.0], [7.3, 32.0], [7.4, 33.0], [7.5, 33.0], [7.6, 33.0], [7.7, 33.0], [7.8, 33.0], [7.9, 33.0], [8.0, 33.0], [8.1, 33.0], [8.2, 33.0], [8.3, 33.0], [8.4, 33.0], [8.5, 33.0], [8.6, 33.0], [8.7, 33.0], [8.8, 33.0], [8.9, 34.0], [9.0, 34.0], [9.1, 34.0], [9.2, 34.0], [9.3, 34.0], [9.4, 34.0], [9.5, 34.0], [9.6, 34.0], [9.7, 34.0], [9.8, 34.0], [9.9, 34.0], [10.0, 34.0], [10.1, 34.0], [10.2, 34.0], [10.3, 34.0], [10.4, 34.0], [10.5, 34.0], [10.6, 34.0], [10.7, 34.0], [10.8, 34.0], [10.9, 34.0], [11.0, 34.0], [11.1, 34.0], [11.2, 34.0], [11.3, 34.0], [11.4, 35.0], [11.5, 35.0], [11.6, 35.0], [11.7, 35.0], [11.8, 35.0], [11.9, 35.0], [12.0, 35.0], [12.1, 35.0], [12.2, 35.0], [12.3, 35.0], [12.4, 35.0], [12.5, 35.0], [12.6, 35.0], [12.7, 35.0], [12.8, 35.0], [12.9, 35.0], [13.0, 35.0], [13.1, 35.0], [13.2, 35.0], [13.3, 35.0], [13.4, 35.0], [13.5, 35.0], [13.6, 35.0], [13.7, 35.0], [13.8, 35.0], [13.9, 35.0], [14.0, 35.0], [14.1, 35.0], [14.2, 35.0], [14.3, 35.0], [14.4, 35.0], [14.5, 35.0], [14.6, 36.0], [14.7, 36.0], [14.8, 36.0], [14.9, 36.0], [15.0, 36.0], [15.1, 36.0], [15.2, 36.0], [15.3, 36.0], [15.4, 36.0], [15.5, 36.0], [15.6, 36.0], [15.7, 36.0], [15.8, 36.0], [15.9, 36.0], [16.0, 36.0], [16.1, 36.0], [16.2, 36.0], [16.3, 36.0], [16.4, 36.0], [16.5, 36.0], [16.6, 36.0], [16.7, 36.0], [16.8, 36.0], [16.9, 36.0], [17.0, 36.0], [17.1, 36.0], [17.2, 36.0], [17.3, 36.0], [17.4, 36.0], [17.5, 36.0], [17.6, 36.0], [17.7, 37.0], [17.8, 37.0], [17.9, 37.0], [18.0, 37.0], [18.1, 37.0], [18.2, 37.0], [18.3, 37.0], [18.4, 37.0], [18.5, 37.0], [18.6, 37.0], [18.7, 37.0], [18.8, 37.0], [18.9, 37.0], [19.0, 37.0], [19.1, 37.0], [19.2, 37.0], [19.3, 37.0], [19.4, 37.0], [19.5, 37.0], [19.6, 37.0], [19.7, 37.0], [19.8, 37.0], [19.9, 37.0], [20.0, 37.0], [20.1, 37.0], [20.2, 37.0], [20.3, 37.0], [20.4, 37.0], [20.5, 37.0], [20.6, 37.0], [20.7, 37.0], [20.8, 37.0], [20.9, 37.0], [21.0, 38.0], [21.1, 38.0], [21.2, 38.0], [21.3, 38.0], [21.4, 38.0], [21.5, 38.0], [21.6, 38.0], [21.7, 38.0], [21.8, 38.0], [21.9, 38.0], [22.0, 38.0], [22.1, 38.0], [22.2, 38.0], [22.3, 38.0], [22.4, 38.0], [22.5, 38.0], [22.6, 38.0], [22.7, 38.0], [22.8, 38.0], [22.9, 38.0], [23.0, 38.0], [23.1, 38.0], [23.2, 38.0], [23.3, 38.0], [23.4, 38.0], [23.5, 38.0], [23.6, 38.0], [23.7, 38.0], [23.8, 38.0], [23.9, 38.0], [24.0, 38.0], [24.1, 38.0], [24.2, 38.0], [24.3, 38.0], [24.4, 38.0], [24.5, 38.0], [24.6, 38.0], [24.7, 38.0], [24.8, 38.0], [24.9, 38.0], [25.0, 38.0], [25.1, 39.0], [25.2, 39.0], [25.3, 39.0], [25.4, 39.0], [25.5, 39.0], [25.6, 39.0], [25.7, 39.0], [25.8, 39.0], [25.9, 39.0], [26.0, 39.0], [26.1, 39.0], [26.2, 39.0], [26.3, 39.0], [26.4, 39.0], [26.5, 39.0], [26.6, 39.0], [26.7, 39.0], [26.8, 39.0], [26.9, 39.0], [27.0, 39.0], [27.1, 39.0], [27.2, 39.0], [27.3, 39.0], [27.4, 39.0], [27.5, 39.0], [27.6, 39.0], [27.7, 39.0], [27.8, 39.0], [27.9, 39.0], [28.0, 39.0], [28.1, 39.0], [28.2, 39.0], [28.3, 39.0], [28.4, 39.0], [28.5, 39.0], [28.6, 39.0], [28.7, 39.0], [28.8, 39.0], [28.9, 39.0], [29.0, 39.0], [29.1, 39.0], [29.2, 39.0], [29.3, 39.0], [29.4, 39.0], [29.5, 39.0], [29.6, 39.0], [29.7, 40.0], [29.8, 40.0], [29.9, 40.0], [30.0, 40.0], [30.1, 40.0], [30.2, 40.0], [30.3, 40.0], [30.4, 40.0], [30.5, 40.0], [30.6, 40.0], [30.7, 40.0], [30.8, 40.0], [30.9, 40.0], [31.0, 40.0], [31.1, 40.0], [31.2, 40.0], [31.3, 40.0], [31.4, 40.0], [31.5, 40.0], [31.6, 40.0], [31.7, 40.0], [31.8, 40.0], [31.9, 40.0], [32.0, 40.0], [32.1, 40.0], [32.2, 40.0], [32.3, 40.0], [32.4, 40.0], [32.5, 40.0], [32.6, 40.0], [32.7, 40.0], [32.8, 40.0], [32.9, 40.0], [33.0, 40.0], [33.1, 40.0], [33.2, 40.0], [33.3, 40.0], [33.4, 40.0], [33.5, 40.0], [33.6, 40.0], [33.7, 40.0], [33.8, 40.0], [33.9, 40.0], [34.0, 40.0], [34.1, 40.0], [34.2, 40.0], [34.3, 41.0], [34.4, 41.0], [34.5, 41.0], [34.6, 41.0], [34.7, 41.0], [34.8, 41.0], [34.9, 41.0], [35.0, 41.0], [35.1, 41.0], [35.2, 41.0], [35.3, 41.0], [35.4, 41.0], [35.5, 41.0], [35.6, 41.0], [35.7, 41.0], [35.8, 41.0], [35.9, 41.0], [36.0, 41.0], [36.1, 41.0], [36.2, 41.0], [36.3, 41.0], [36.4, 41.0], [36.5, 41.0], [36.6, 41.0], [36.7, 41.0], [36.8, 41.0], [36.9, 41.0], [37.0, 41.0], [37.1, 41.0], [37.2, 41.0], [37.3, 41.0], [37.4, 41.0], [37.5, 41.0], [37.6, 41.0], [37.7, 41.0], [37.8, 41.0], [37.9, 41.0], [38.0, 41.0], [38.1, 41.0], [38.2, 41.0], [38.3, 41.0], [38.4, 41.0], [38.5, 41.0], [38.6, 41.0], [38.7, 42.0], [38.8, 42.0], [38.9, 42.0], [39.0, 42.0], [39.1, 42.0], [39.2, 42.0], [39.3, 42.0], [39.4, 42.0], [39.5, 42.0], [39.6, 42.0], [39.7, 42.0], [39.8, 42.0], [39.9, 42.0], [40.0, 42.0], [40.1, 42.0], [40.2, 42.0], [40.3, 42.0], [40.4, 42.0], [40.5, 42.0], [40.6, 42.0], [40.7, 42.0], [40.8, 42.0], [40.9, 42.0], [41.0, 42.0], [41.1, 42.0], [41.2, 42.0], [41.3, 42.0], [41.4, 42.0], [41.5, 42.0], [41.6, 42.0], [41.7, 42.0], [41.8, 42.0], [41.9, 42.0], [42.0, 42.0], [42.1, 42.0], [42.2, 42.0], [42.3, 42.0], [42.4, 42.0], [42.5, 42.0], [42.6, 42.0], [42.7, 42.0], [42.8, 42.0], [42.9, 42.0], [43.0, 42.0], [43.1, 42.0], [43.2, 42.0], [43.3, 42.0], [43.4, 42.0], [43.5, 43.0], [43.6, 43.0], [43.7, 43.0], [43.8, 43.0], [43.9, 43.0], [44.0, 43.0], [44.1, 43.0], [44.2, 43.0], [44.3, 43.0], [44.4, 43.0], [44.5, 43.0], [44.6, 43.0], [44.7, 43.0], [44.8, 43.0], [44.9, 43.0], [45.0, 43.0], [45.1, 43.0], [45.2, 43.0], [45.3, 43.0], [45.4, 43.0], [45.5, 43.0], [45.6, 43.0], [45.7, 43.0], [45.8, 43.0], [45.9, 43.0], [46.0, 43.0], [46.1, 43.0], [46.2, 43.0], [46.3, 43.0], [46.4, 43.0], [46.5, 43.0], [46.6, 43.0], [46.7, 43.0], [46.8, 43.0], [46.9, 43.0], [47.0, 43.0], [47.1, 43.0], [47.2, 43.0], [47.3, 43.0], [47.4, 43.0], [47.5, 43.0], [47.6, 43.0], [47.7, 43.0], [47.8, 43.0], [47.9, 43.0], [48.0, 43.0], [48.1, 43.0], [48.2, 43.0], [48.3, 43.0], [48.4, 43.0], [48.5, 43.0], [48.6, 43.0], [48.7, 43.0], [48.8, 43.0], [48.9, 43.0], [49.0, 44.0], [49.1, 44.0], [49.2, 44.0], [49.3, 44.0], [49.4, 44.0], [49.5, 44.0], [49.6, 44.0], [49.7, 44.0], [49.8, 44.0], [49.9, 44.0], [50.0, 44.0], [50.1, 44.0], [50.2, 44.0], [50.3, 44.0], [50.4, 44.0], [50.5, 44.0], [50.6, 44.0], [50.7, 44.0], [50.8, 44.0], [50.9, 44.0], [51.0, 44.0], [51.1, 44.0], [51.2, 44.0], [51.3, 44.0], [51.4, 44.0], [51.5, 44.0], [51.6, 44.0], [51.7, 44.0], [51.8, 44.0], [51.9, 44.0], [52.0, 44.0], [52.1, 44.0], [52.2, 44.0], [52.3, 44.0], [52.4, 44.0], [52.5, 44.0], [52.6, 44.0], [52.7, 44.0], [52.8, 44.0], [52.9, 44.0], [53.0, 44.0], [53.1, 44.0], [53.2, 44.0], [53.3, 44.0], [53.4, 44.0], [53.5, 44.0], [53.6, 44.0], [53.7, 44.0], [53.8, 45.0], [53.9, 45.0], [54.0, 45.0], [54.1, 45.0], [54.2, 45.0], [54.3, 45.0], [54.4, 45.0], [54.5, 45.0], [54.6, 45.0], [54.7, 45.0], [54.8, 45.0], [54.9, 45.0], [55.0, 45.0], [55.1, 45.0], [55.2, 45.0], [55.3, 45.0], [55.4, 45.0], [55.5, 45.0], [55.6, 45.0], [55.7, 45.0], [55.8, 45.0], [55.9, 45.0], [56.0, 45.0], [56.1, 45.0], [56.2, 45.0], [56.3, 45.0], [56.4, 45.0], [56.5, 45.0], [56.6, 45.0], [56.7, 45.0], [56.8, 45.0], [56.9, 45.0], [57.0, 45.0], [57.1, 45.0], [57.2, 45.0], [57.3, 45.0], [57.4, 45.0], [57.5, 45.0], [57.6, 45.0], [57.7, 45.0], [57.8, 45.0], [57.9, 45.0], [58.0, 45.0], [58.1, 45.0], [58.2, 46.0], [58.3, 46.0], [58.4, 46.0], [58.5, 46.0], [58.6, 46.0], [58.7, 46.0], [58.8, 46.0], [58.9, 46.0], [59.0, 46.0], [59.1, 46.0], [59.2, 46.0], [59.3, 46.0], [59.4, 46.0], [59.5, 46.0], [59.6, 46.0], [59.7, 46.0], [59.8, 46.0], [59.9, 46.0], [60.0, 46.0], [60.1, 46.0], [60.2, 46.0], [60.3, 46.0], [60.4, 46.0], [60.5, 46.0], [60.6, 46.0], [60.7, 46.0], [60.8, 46.0], [60.9, 46.0], [61.0, 46.0], [61.1, 46.0], [61.2, 46.0], [61.3, 46.0], [61.4, 46.0], [61.5, 46.0], [61.6, 46.0], [61.7, 46.0], [61.8, 46.0], [61.9, 46.0], [62.0, 46.0], [62.1, 46.0], [62.2, 46.0], [62.3, 46.0], [62.4, 47.0], [62.5, 47.0], [62.6, 47.0], [62.7, 47.0], [62.8, 47.0], [62.9, 47.0], [63.0, 47.0], [63.1, 47.0], [63.2, 47.0], [63.3, 47.0], [63.4, 47.0], [63.5, 47.0], [63.6, 47.0], [63.7, 47.0], [63.8, 47.0], [63.9, 47.0], [64.0, 47.0], [64.1, 47.0], [64.2, 47.0], [64.3, 47.0], [64.4, 47.0], [64.5, 47.0], [64.6, 47.0], [64.7, 47.0], [64.8, 47.0], [64.9, 47.0], [65.0, 47.0], [65.1, 47.0], [65.2, 47.0], [65.3, 47.0], [65.4, 47.0], [65.5, 47.0], [65.6, 47.0], [65.7, 47.0], [65.8, 47.0], [65.9, 47.0], [66.0, 47.0], [66.1, 47.0], [66.2, 48.0], [66.3, 48.0], [66.4, 48.0], [66.5, 48.0], [66.6, 48.0], [66.7, 48.0], [66.8, 48.0], [66.9, 48.0], [67.0, 48.0], [67.1, 48.0], [67.2, 48.0], [67.3, 48.0], [67.4, 48.0], [67.5, 48.0], [67.6, 48.0], [67.7, 48.0], [67.8, 48.0], [67.9, 48.0], [68.0, 48.0], [68.1, 48.0], [68.2, 48.0], [68.3, 48.0], [68.4, 48.0], [68.5, 48.0], [68.6, 48.0], [68.7, 48.0], [68.8, 48.0], [68.9, 48.0], [69.0, 48.0], [69.1, 48.0], [69.2, 48.0], [69.3, 49.0], [69.4, 49.0], [69.5, 49.0], [69.6, 49.0], [69.7, 49.0], [69.8, 49.0], [69.9, 49.0], [70.0, 49.0], [70.1, 49.0], [70.2, 49.0], [70.3, 49.0], [70.4, 49.0], [70.5, 49.0], [70.6, 49.0], [70.7, 49.0], [70.8, 49.0], [70.9, 49.0], [71.0, 49.0], [71.1, 49.0], [71.2, 49.0], [71.3, 49.0], [71.4, 49.0], [71.5, 49.0], [71.6, 49.0], [71.7, 49.0], [71.8, 49.0], [71.9, 49.0], [72.0, 49.0], [72.1, 49.0], [72.2, 49.0], [72.3, 50.0], [72.4, 50.0], [72.5, 50.0], [72.6, 50.0], [72.7, 50.0], [72.8, 50.0], [72.9, 50.0], [73.0, 50.0], [73.1, 50.0], [73.2, 50.0], [73.3, 50.0], [73.4, 50.0], [73.5, 50.0], [73.6, 50.0], [73.7, 50.0], [73.8, 50.0], [73.9, 50.0], [74.0, 50.0], [74.1, 50.0], [74.2, 50.0], [74.3, 50.0], [74.4, 50.0], [74.5, 50.0], [74.6, 50.0], [74.7, 50.0], [74.8, 50.0], [74.9, 50.0], [75.0, 50.0], [75.1, 50.0], [75.2, 50.0], [75.3, 50.0], [75.4, 51.0], [75.5, 51.0], [75.6, 51.0], [75.7, 51.0], [75.8, 51.0], [75.9, 51.0], [76.0, 51.0], [76.1, 51.0], [76.2, 51.0], [76.3, 51.0], [76.4, 51.0], [76.5, 51.0], [76.6, 51.0], [76.7, 51.0], [76.8, 51.0], [76.9, 51.0], [77.0, 51.0], [77.1, 51.0], [77.2, 51.0], [77.3, 51.0], [77.4, 51.0], [77.5, 51.0], [77.6, 51.0], [77.7, 51.0], [77.8, 51.0], [77.9, 51.0], [78.0, 52.0], [78.1, 52.0], [78.2, 52.0], [78.3, 52.0], [78.4, 52.0], [78.5, 52.0], [78.6, 52.0], [78.7, 52.0], [78.8, 52.0], [78.9, 52.0], [79.0, 52.0], [79.1, 52.0], [79.2, 52.0], [79.3, 52.0], [79.4, 52.0], [79.5, 52.0], [79.6, 52.0], [79.7, 52.0], [79.8, 52.0], [79.9, 52.0], [80.0, 52.0], [80.1, 52.0], [80.2, 52.0], [80.3, 53.0], [80.4, 53.0], [80.5, 53.0], [80.6, 53.0], [80.7, 53.0], [80.8, 53.0], [80.9, 53.0], [81.0, 53.0], [81.1, 53.0], [81.2, 53.0], [81.3, 53.0], [81.4, 53.0], [81.5, 53.0], [81.6, 53.0], [81.7, 53.0], [81.8, 53.0], [81.9, 53.0], [82.0, 53.0], [82.1, 53.0], [82.2, 53.0], [82.3, 53.0], [82.4, 53.0], [82.5, 53.0], [82.6, 53.0], [82.7, 53.0], [82.8, 53.0], [82.9, 54.0], [83.0, 54.0], [83.1, 54.0], [83.2, 54.0], [83.3, 54.0], [83.4, 54.0], [83.5, 54.0], [83.6, 54.0], [83.7, 54.0], [83.8, 54.0], [83.9, 54.0], [84.0, 54.0], [84.1, 54.0], [84.2, 54.0], [84.3, 54.0], [84.4, 54.0], [84.5, 54.0], [84.6, 54.0], [84.7, 54.0], [84.8, 54.0], [84.9, 54.0], [85.0, 54.0], [85.1, 55.0], [85.2, 55.0], [85.3, 55.0], [85.4, 55.0], [85.5, 55.0], [85.6, 55.0], [85.7, 55.0], [85.8, 55.0], [85.9, 55.0], [86.0, 55.0], [86.1, 55.0], [86.2, 55.0], [86.3, 55.0], [86.4, 55.0], [86.5, 55.0], [86.6, 55.0], [86.7, 55.0], [86.8, 55.0], [86.9, 56.0], [87.0, 56.0], [87.1, 56.0], [87.2, 56.0], [87.3, 56.0], [87.4, 56.0], [87.5, 56.0], [87.6, 56.0], [87.7, 56.0], [87.8, 56.0], [87.9, 56.0], [88.0, 56.0], [88.1, 56.0], [88.2, 56.0], [88.3, 57.0], [88.4, 57.0], [88.5, 57.0], [88.6, 57.0], [88.7, 57.0], [88.8, 57.0], [88.9, 57.0], [89.0, 57.0], [89.1, 57.0], [89.2, 57.0], [89.3, 57.0], [89.4, 58.0], [89.5, 58.0], [89.6, 58.0], [89.7, 58.0], [89.8, 58.0], [89.9, 58.0], [90.0, 58.0], [90.1, 58.0], [90.2, 58.0], [90.3, 58.0], [90.4, 58.0], [90.5, 59.0], [90.6, 59.0], [90.7, 59.0], [90.8, 59.0], [90.9, 59.0], [91.0, 59.0], [91.1, 59.0], [91.2, 59.0], [91.3, 59.0], [91.4, 59.0], [91.5, 60.0], [91.6, 60.0], [91.7, 60.0], [91.8, 60.0], [91.9, 60.0], [92.0, 60.0], [92.1, 61.0], [92.2, 61.0], [92.3, 61.0], [92.4, 61.0], [92.5, 61.0], [92.6, 61.0], [92.7, 61.0], [92.8, 61.0], [92.9, 62.0], [93.0, 62.0], [93.1, 62.0], [93.2, 62.0], [93.3, 62.0], [93.4, 63.0], [93.5, 63.0], [93.6, 63.0], [93.7, 63.0], [93.8, 64.0], [93.9, 64.0], [94.0, 64.0], [94.1, 65.0], [94.2, 65.0], [94.3, 65.0], [94.4, 65.0], [94.5, 66.0], [94.6, 66.0], [94.7, 67.0], [94.8, 67.0], [94.9, 67.0], [95.0, 68.0], [95.1, 68.0], [95.2, 68.0], [95.3, 69.0], [95.4, 69.0], [95.5, 70.0], [95.6, 70.0], [95.7, 71.0], [95.8, 72.0], [95.9, 72.0], [96.0, 73.0], [96.1, 73.0], [96.2, 74.0], [96.3, 74.0], [96.4, 77.0], [96.5, 78.0], [96.6, 80.0], [96.7, 81.0], [96.8, 82.0], [96.9, 86.0], [97.0, 88.0], [97.1, 99.0], [97.2, 113.0], [97.3, 130.0], [97.4, 155.0], [97.5, 159.0], [97.6, 164.0], [97.7, 169.0], [97.8, 173.0], [97.9, 176.0], [98.0, 178.0], [98.1, 182.0], [98.2, 184.0], [98.3, 188.0], [98.4, 191.0], [98.5, 195.0], [98.6, 197.0], [98.7, 202.0], [98.8, 208.0], [98.9, 221.0], [99.0, 285.0], [99.1, 306.0], [99.2, 319.0], [99.3, 337.0], [99.4, 348.0], [99.5, 351.0], [99.6, 366.0], [99.7, 375.0], [99.8, 383.0], [99.9, 394.0], [100.0, 416.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 9967.0, "series": [{"data": [[0.0, 9967.0], [100.0, 33.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 1994.0], [600.0, 851.0], [700.0, 632.0], [200.0, 993.0], [800.0, 715.0], [900.0, 519.0], [1000.0, 293.0], [1100.0, 155.0], [300.0, 878.0], [1200.0, 86.0], [100.0, 1065.0], [400.0, 1037.0], [500.0, 782.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 9711.0], [300.0, 90.0], [100.0, 153.0], [200.0, 41.0], [400.0, 5.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4018.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 25982.0, "series": [{"data": [[0.0, 25982.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4018.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 94.42780000000023, "minX": 1.66901442E12, "maxY": 639.8024999999991, "series": [{"data": [[1.66901442E12, 639.8024999999991]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.66901442E12, 130.4632]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.66901442E12, 94.42780000000023]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901442E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.0, "maxY": 1263.0, "series": [{"data": [[2.0, 60.0], [3.0, 57.0], [4.0, 57.0], [5.0, 66.0], [6.0, 60.0], [7.0, 72.0], [9.0, 67.0], [10.0, 60.0], [13.0, 43.8], [16.0, 33.0], [17.0, 33.75], [18.0, 25.0], [19.0, 40.166666666666664], [20.0, 32.666666666666664], [21.0, 43.6], [22.0, 45.0], [23.0, 55.0], [24.0, 47.25], [25.0, 59.0], [26.0, 48.625], [27.0, 41.22222222222222], [28.0, 45.66666666666667], [29.0, 52.61538461538462], [30.0, 50.99999999999999], [31.0, 59.00000000000001], [33.0, 48.722222222222214], [32.0, 56.6875], [35.0, 47.53333333333333], [34.0, 49.583333333333336], [37.0, 46.727272727272734], [36.0, 47.41935483870968], [39.0, 48.541666666666664], [38.0, 44.96428571428572], [41.0, 44.523809523809526], [40.0, 49.03333333333334], [43.0, 44.17777777777779], [42.0, 47.60000000000001], [45.0, 44.3448275862069], [44.0, 46.363636363636374], [47.0, 49.07317073170732], [46.0, 46.48717948717948], [49.0, 43.65957446808511], [48.0, 44.72340425531915], [50.0, 50.43333333333333], [51.0, 46.184210526315795], [53.0, 57.74418604651163], [52.0, 47.96363636363636], [55.0, 48.620689655172406], [54.0, 52.32692307692307], [57.0, 51.879120879120876], [56.0, 52.95652173913042], [59.0, 54.99999999999999], [58.0, 50.18518518518521], [61.0, 50.38297872340427], [60.0, 51.86138613861388], [62.0, 50.866666666666674], [63.0, 52.18309859154929], [67.0, 54.92631578947368], [66.0, 53.01075268817206], [65.0, 52.38888888888891], [64.0, 53.031249999999986], [71.0, 54.44444444444444], [69.0, 53.205479452054796], [68.0, 53.53521126760563], [70.0, 53.28571428571429], [73.0, 56.54022988505748], [75.0, 53.000000000000014], [74.0, 54.43055555555555], [72.0, 55.34328358208954], [79.0, 55.23728813559322], [78.0, 54.96363636363637], [77.0, 55.112903225806456], [76.0, 55.76000000000001], [82.0, 57.326530612244895], [80.0, 57.78723404255319], [83.0, 57.45238095238095], [81.0, 57.35], [87.0, 58.74137931034483], [86.0, 57.96969696969699], [85.0, 58.20338983050848], [84.0, 57.97142857142857], [91.0, 58.84482758620688], [90.0, 60.75949367088608], [88.0, 57.41176470588237], [89.0, 54.888888888888886], [95.0, 58.29545454545454], [94.0, 61.79710144927534], [93.0, 59.803278688524586], [92.0, 56.46874999999998], [98.0, 60.26415094339622], [96.0, 56.02127659574468], [99.0, 59.352941176470594], [97.0, 56.50000000000001], [101.0, 60.428571428571416], [100.0, 56.11764705882352], [103.0, 58.86666666666666], [102.0, 59.441176470588225], [105.0, 57.22499999999999], [106.0, 62.0], [104.0, 53.23809523809524], [107.0, 61.27160493827161], [110.0, 56.741935483870975], [109.0, 60.63934426229508], [108.0, 57.958333333333336], [111.0, 56.92857142857143], [112.0, 58.830985915492946], [114.0, 59.081081081081074], [113.0, 57.06000000000001], [115.0, 58.75], [119.0, 57.3939393939394], [118.0, 57.392857142857146], [116.0, 57.86842105263158], [117.0, 59.574999999999996], [123.0, 59.0], [122.0, 65.51282051282051], [121.0, 60.88888888888889], [120.0, 59.11764705882352], [127.0, 65.3720930232558], [125.0, 64.94594594594594], [126.0, 63.80851063829787], [124.0, 58.65384615384615], [134.0, 64.25490196078432], [133.0, 61.3421052631579], [131.0, 59.89583333333333], [129.0, 60.303030303030305], [128.0, 62.419354838709666], [135.0, 63.199999999999996], [130.0, 60.66666666666667], [132.0, 62.43103448275861], [140.0, 59.64864864864865], [139.0, 57.06666666666666], [137.0, 61.28], [136.0, 60.2142857142857], [142.0, 59.93023255813953], [143.0, 59.777777777777786], [141.0, 57.210526315789465], [138.0, 63.9259259259259], [151.0, 61.95744680851064], [150.0, 62.50000000000001], [149.0, 60.88888888888889], [148.0, 60.454545454545446], [146.0, 58.891304347826065], [144.0, 58.45238095238096], [145.0, 63.34999999999999], [147.0, 59.66666666666667], [158.0, 61.2093023255814], [155.0, 62.944444444444436], [154.0, 66.66], [153.0, 60.80555555555555], [152.0, 63.4], [159.0, 58.92857142857143], [157.0, 61.170212765957444], [156.0, 62.358208955223894], [163.0, 63.01428571428572], [167.0, 62.43243243243243], [166.0, 64.83636363636364], [165.0, 61.06250000000001], [161.0, 59.43103448275862], [162.0, 60.6734693877551], [160.0, 59.07692307692308], [164.0, 58.687500000000014], [174.0, 64.56060606060608], [173.0, 63.230769230769226], [172.0, 60.43103448275864], [171.0, 62.47058823529413], [170.0, 63.18181818181818], [169.0, 62.83673469387755], [168.0, 60.057692307692314], [175.0, 64.10999999999999], [179.0, 60.10294117647058], [183.0, 62.08955223880596], [182.0, 63.48076923076924], [181.0, 63.737373737373744], [180.0, 60.341463414634134], [178.0, 64.23529411764704], [176.0, 63.57575757575759], [177.0, 60.40350877192984], [188.0, 64.15068493150683], [187.0, 67.04411764705881], [190.0, 65.1730769230769], [186.0, 66.72727272727275], [185.0, 65.18309859154931], [184.0, 64.98666666666662], [189.0, 64.22], [191.0, 67.40384615384613], [196.0, 63.67088607594935], [198.0, 60.93846153846155], [192.0, 61.180555555555564], [197.0, 65.89473684210525], [195.0, 63.12903225806452], [193.0, 65.90909090909089], [194.0, 64.34042553191487], [199.0, 64.84905660377358], [207.0, 65.37142857142858], [206.0, 69.54166666666667], [205.0, 64.17647058823529], [204.0, 60.17391304347826], [201.0, 69.11764705882354], [200.0, 65.62499999999997], [203.0, 64.46000000000001], [202.0, 59.839694656488525], [214.0, 66.38235294117648], [213.0, 65.63157894736844], [212.0, 75.05555555555554], [210.0, 70.90909090909092], [215.0, 73.33333333333334], [209.0, 67.9848484848485], [211.0, 61.96874999999999], [208.0, 65.05714285714285], [222.0, 72.0], [223.0, 80.8], [221.0, 69.5], [220.0, 63.07692307692307], [219.0, 72.42857142857143], [218.0, 78.61538461538461], [216.0, 70.0625], [217.0, 64.31818181818183], [230.0, 75.5], [227.0, 72.10714285714286], [226.0, 74.56521739130434], [225.0, 75.0], [224.0, 67.81818181818181], [228.0, 67.13636363636363], [231.0, 75.25714285714287], [229.0, 71.22222222222223], [234.0, 75.38461538461539], [233.0, 67.62790697674419], [237.0, 70.0769230769231], [238.0, 66.2], [235.0, 69.55555555555556], [239.0, 72.70588235294117], [236.0, 68.77777777777777], [232.0, 73.375], [247.0, 65.875], [246.0, 70.88888888888889], [245.0, 73.46666666666665], [242.0, 72.23076923076924], [240.0, 81.32000000000001], [244.0, 69.92307692307692], [243.0, 74.00000000000001], [241.0, 73.83333333333334], [255.0, 73.18181818181819], [254.0, 73.66666666666667], [253.0, 87.5], [251.0, 78.33333333333333], [249.0, 80.9], [248.0, 72.83333333333334], [252.0, 75.0], [250.0, 73.0], [257.0, 76.33333333333334], [262.0, 70.77777777777777], [261.0, 70.25], [260.0, 81.72727272727275], [259.0, 71.875], [264.0, 80.0], [271.0, 77.2], [270.0, 59.0], [268.0, 81.6], [269.0, 62.0], [263.0, 74.71428571428571], [256.0, 75.33333333333333], [258.0, 72.9], [267.0, 66.66666666666667], [266.0, 66.0], [265.0, 75.0], [282.0, 84.8], [279.0, 81.76923076923077], [286.0, 79.5], [284.0, 86.66666666666667], [280.0, 82.0], [278.0, 80.5], [274.0, 85.0], [273.0, 71.0], [292.0, 80.66666666666667], [291.0, 96.0], [289.0, 92.0], [288.0, 100.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[130.4623000000006, 59.718700000000034]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 129.0], [3.0, 122.0], [4.0, 137.0], [6.0, 129.0], [8.0, 136.0], [10.0, 136.0], [11.0, 127.0], [12.0, 152.0], [16.0, 101.33333333333333], [17.0, 117.75], [18.0, 21.666666666666668], [19.0, 91.75], [20.0, 23.333333333333332], [22.0, 127.75], [23.0, 17.666666666666668], [24.0, 28.0], [25.0, 17.0], [26.0, 108.42857142857143], [27.0, 18.25], [28.0, 17.5], [29.0, 91.28571428571429], [30.0, 24.0], [32.0, 106.66666666666666], [35.0, 19.0], [34.0, 108.75], [36.0, 199.0], [39.0, 16.666666666666668], [38.0, 50.916666666666664], [41.0, 15.666666666666666], [40.0, 213.5], [43.0, 14.0], [42.0, 100.2], [45.0, 13.5], [44.0, 218.5], [47.0, 25.6], [46.0, 225.5], [49.0, 132.33333333333334], [48.0, 38.6], [51.0, 118.4], [50.0, 27.4], [53.0, 88.8], [52.0, 50.333333333333336], [54.0, 44.1], [55.0, 82.11111111111111], [57.0, 92.6923076923077], [56.0, 40.55555555555556], [59.0, 84.42857142857143], [58.0, 49.45454545454546], [61.0, 62.0], [60.0, 50.909090909090914], [63.0, 62.5], [62.0, 71.53333333333333], [66.0, 69.3], [65.0, 67.25], [67.0, 109.28571428571428], [64.0, 43.4], [71.0, 84.77777777777777], [70.0, 52.83333333333333], [69.0, 86.0], [68.0, 67.75], [75.0, 109.66666666666667], [73.0, 54.57142857142858], [72.0, 93.0], [74.0, 65.0], [79.0, 107.2], [78.0, 68.00000000000001], [77.0, 96.57142857142857], [76.0, 82.125], [83.0, 146.375], [81.0, 64.0], [80.0, 57.16666666666667], [82.0, 49.666666666666664], [87.0, 76.4], [86.0, 86.33333333333333], [85.0, 81.55555555555554], [84.0, 54.33333333333333], [91.0, 61.09090909090909], [89.0, 74.8], [90.0, 56.41666666666667], [88.0, 100.69230769230768], [94.0, 43.2], [93.0, 58.0], [95.0, 49.0], [92.0, 152.28571428571428], [99.0, 91.83333333333334], [98.0, 89.5], [97.0, 86.0], [96.0, 38.3], [103.0, 77.2], [102.0, 69.5], [100.0, 147.42857142857142], [101.0, 63.0], [107.0, 76.0], [106.0, 92.8], [104.0, 105.58333333333334], [105.0, 95.0], [111.0, 73.46153846153845], [110.0, 102.5], [109.0, 56.111111111111114], [108.0, 83.5], [113.0, 112.6], [112.0, 63.285714285714285], [114.0, 110.33333333333334], [115.0, 106.5], [119.0, 78.0], [118.0, 85.5], [117.0, 54.42857142857143], [116.0, 111.0], [123.0, 95.33333333333333], [122.0, 93.0], [121.0, 126.5], [120.0, 101.0], [126.0, 122.375], [127.0, 91.75], [125.0, 75.2], [124.0, 131.0], [133.0, 137.71428571428572], [132.0, 54.0], [130.0, 117.33333333333333], [135.0, 116.28571428571429], [134.0, 176.00000000000003], [128.0, 129.0], [131.0, 100.33333333333334], [129.0, 130.6], [143.0, 119.36842105263156], [141.0, 103.41379310344827], [142.0, 111.04761904761905], [140.0, 146.07407407407405], [139.0, 146.92857142857142], [138.0, 150.33333333333331], [137.0, 50.666666666666664], [136.0, 96.625], [144.0, 88.61904761904763], [151.0, 88.45454545454545], [150.0, 79.44999999999999], [149.0, 136.60000000000002], [148.0, 136.63636363636365], [147.0, 130.6], [146.0, 71.63636363636364], [145.0, 108.26666666666667], [154.0, 99.83333333333333], [159.0, 126.34285714285714], [158.0, 175.47058823529412], [157.0, 149.3], [156.0, 145.5416666666666], [155.0, 116.55555555555557], [153.0, 75.44444444444443], [152.0, 132.25], [167.0, 152.58064516129036], [165.0, 140.51282051282053], [166.0, 117.12499999999999], [164.0, 119.97674418604649], [163.0, 144.87804878048783], [162.0, 112.76470588235296], [161.0, 129.54761904761904], [160.0, 110.79069767441861], [168.0, 140.84848484848487], [170.0, 142.91304347826085], [169.0, 156.85714285714283], [174.0, 107.2], [173.0, 102.09090909090908], [172.0, 129.20000000000002], [171.0, 121.14285714285714], [175.0, 118.4736842105263], [183.0, 125.00000000000003], [181.0, 149.11538461538458], [178.0, 150.85], [182.0, 113.82352941176471], [180.0, 161.21428571428572], [179.0, 126.92307692307692], [177.0, 206.23529411764707], [176.0, 139.21428571428572], [189.0, 143.4], [187.0, 114.27272727272727], [186.0, 121.33333333333333], [185.0, 154.46666666666667], [184.0, 117.5], [191.0, 242.28571428571428], [190.0, 92.0], [188.0, 134.2], [199.0, 203.27586206896555], [198.0, 171.2142857142857], [196.0, 139.7142857142857], [194.0, 233.37499999999997], [193.0, 201.83333333333334], [197.0, 190.63636363636365], [195.0, 291.0], [192.0, 101.66666666666667], [205.0, 186.42105263157896], [204.0, 242.33333333333334], [203.0, 170.8], [202.0, 111.94444444444444], [207.0, 129.52941176470588], [206.0, 135.86363636363637], [200.0, 216.0], [201.0, 219.15384615384616], [215.0, 166.16666666666666], [214.0, 150.0], [213.0, 103.33333333333334], [212.0, 210.75], [211.0, 171.5], [210.0, 79.5], [209.0, 117.33333333333334], [208.0, 219.0], [223.0, 97.07142857142858], [222.0, 97.25], [221.0, 92.42857142857143], [220.0, 87.5], [219.0, 184.5], [218.0, 128.28571428571428], [217.0, 206.33333333333331], [216.0, 182.5], [231.0, 126.55555555555556], [229.0, 206.6], [227.0, 90.61538461538461], [228.0, 149.83333333333331], [230.0, 163.42857142857142], [226.0, 121.25], [225.0, 141.2142857142857], [224.0, 149.0], [238.0, 184.46153846153848], [237.0, 256.7692307692307], [236.0, 194.75], [235.0, 149.99999999999997], [234.0, 216.8], [233.0, 116.61538461538461], [232.0, 118.16666666666666], [239.0, 217.88235294117646], [246.0, 168.76666666666665], [244.0, 190.7407407407407], [243.0, 179.67857142857142], [241.0, 242.29411764705884], [240.0, 255.95], [247.0, 285.2666666666667], [245.0, 230.73684210526318], [242.0, 272.75], [255.0, 135.72727272727275], [254.0, 64.0], [251.0, 158.31578947368422], [249.0, 203.81818181818187], [253.0, 208.83333333333331], [252.0, 180.77777777777777], [250.0, 185.14285714285714], [248.0, 256.5882352941176], [258.0, 221.5], [257.0, 125.27272727272727], [256.0, 142.41176470588235], [269.0, 206.2857142857143], [271.0, 164.9], [270.0, 179.0], [259.0, 149.4], [268.0, 104.23529411764706], [267.0, 237.05555555555551], [266.0, 187.39999999999998], [265.0, 236.12499999999997], [264.0, 172.83333333333331], [263.0, 142.33333333333331], [262.0, 233.0], [260.0, 112.16666666666666], [261.0, 137.33333333333334], [285.0, 281.14285714285717], [275.0, 79.0], [272.0, 265.5833333333333], [274.0, 363.75], [273.0, 249.33333333333334], [279.0, 126.85714285714286], [278.0, 349.8], [277.0, 336.6666666666667], [276.0, 361.2], [287.0, 125.50000000000001], [286.0, 239.5], [284.0, 55.55555555555556], [283.0, 127.71428571428572], [282.0, 207.875], [281.0, 268.2], [280.0, 257.0], [302.0, 241.46153846153845], [303.0, 272.3333333333333], [301.0, 214.0], [300.0, 105.6], [299.0, 193.2], [298.0, 102.6], [297.0, 481.5], [296.0, 452.0], [295.0, 236.5], [288.0, 36.0], [291.0, 269.0], [290.0, 21.666666666666668], [289.0, 257.0], [294.0, 194.0], [293.0, 42.0], [292.0, 306.2], [318.0, 204.0833333333333], [305.0, 301.5], [304.0, 350.6666666666667], [319.0, 319.27272727272725], [312.0, 71.0], [316.0, 254.73333333333335], [306.0, 56.0], [317.0, 288.55555555555554], [314.0, 318.6], [315.0, 408.0], [313.0, 281.625], [311.0, 66.0], [310.0, 60.666666666666664], [309.0, 271.5], [308.0, 54.5], [332.0, 91.4], [322.0, 186.38095238095235], [324.0, 246.94736842105266], [325.0, 243.6], [327.0, 300.49999999999994], [326.0, 167.09090909090907], [323.0, 332.5882352941176], [320.0, 163.73684210526315], [321.0, 275.5714285714286], [331.0, 144.87500000000003], [330.0, 148.7], [335.0, 181.5], [329.0, 209.1], [328.0, 249.33333333333331], [334.0, 106.0], [333.0, 180.0], [344.0, 240.28571428571428], [351.0, 266.5], [349.0, 100.66666666666667], [348.0, 120.33333333333333], [339.0, 425.0], [338.0, 261.0], [337.0, 313.3333333333333], [336.0, 80.33333333333333], [347.0, 351.0], [346.0, 265.2857142857143], [345.0, 162.66666666666666], [343.0, 284.25], [342.0, 94.5], [341.0, 570.0], [340.0, 321.6], [350.0, 647.0], [367.0, 298.7], [366.0, 213.0], [364.0, 391.33333333333337], [355.0, 245.2], [354.0, 370.5], [353.0, 279.3333333333333], [352.0, 107.0], [365.0, 351.84615384615387], [363.0, 273.66666666666674], [362.0, 258.75], [361.0, 360.0], [360.0, 99.0], [359.0, 353.75], [357.0, 652.0], [358.0, 497.5], [356.0, 339.5], [382.0, 293.3333333333333], [383.0, 350.31250000000006], [381.0, 383.44444444444446], [380.0, 259.2666666666667], [379.0, 205.06249999999997], [378.0, 272.7142857142857], [377.0, 340.8181818181818], [376.0, 258.2142857142857], [375.0, 297.2307692307692], [369.0, 372.04761904761904], [368.0, 298.0714285714286], [371.0, 372.05263157894734], [370.0, 315.8], [374.0, 373.5333333333333], [373.0, 494.2142857142857], [372.0, 404.99999999999994], [396.0, 328.25], [386.0, 256.6551724137931], [387.0, 350.45], [385.0, 249.71428571428578], [384.0, 375.09375], [397.0, 230.0], [395.0, 184.66666666666669], [394.0, 274.125], [393.0, 345.0833333333333], [392.0, 287.5], [399.0, 557.5], [391.0, 410.61538461538464], [390.0, 288.6666666666667], [388.0, 440.6666666666667], [389.0, 375.6923076923077], [414.0, 268.2], [412.0, 447.57142857142856], [411.0, 356.2], [415.0, 226.36363636363637], [413.0, 405.50000000000006], [410.0, 446.85714285714283], [408.0, 388.6842105263157], [409.0, 435.4], [406.0, 431.84615384615387], [405.0, 380.25], [404.0, 273.0], [407.0, 398.90909090909093], [401.0, 447.25], [400.0, 151.0], [403.0, 393.3333333333333], [402.0, 339.8], [430.0, 175.33333333333334], [416.0, 352.33333333333337], [417.0, 412.3333333333333], [419.0, 328.0], [418.0, 565.75], [424.0, 195.2], [425.0, 148.5], [427.0, 234.0], [426.0, 673.0], [423.0, 180.5], [422.0, 320.5], [421.0, 259.0], [420.0, 501.0], [431.0, 403.0], [429.0, 242.5], [428.0, 162.0], [434.0, 369.5], [438.0, 478.14285714285717], [439.0, 165.8], [437.0, 243.75], [436.0, 259.4], [435.0, 286.8333333333333], [444.0, 496.0], [433.0, 260.8], [432.0, 396.3333333333333], [447.0, 492.0], [446.0, 527.0], [443.0, 257.25], [442.0, 229.0], [441.0, 655.0], [440.0, 307.3333333333333], [445.0, 290.5], [462.0, 345.5], [463.0, 640.0], [461.0, 434.0], [460.0, 638.0], [459.0, 205.0], [458.0, 524.0], [457.0, 429.0], [456.0, 203.0], [455.0, 252.0], [449.0, 271.0], [448.0, 236.0], [451.0, 176.0], [450.0, 163.0], [454.0, 196.0], [453.0, 351.0], [452.0, 460.66666666666663], [477.0, 253.0], [479.0, 247.5], [476.0, 663.0], [467.0, 432.0], [466.0, 168.0], [465.0, 659.0], [464.0, 271.0], [475.0, 174.0], [474.0, 435.0], [473.0, 232.0], [472.0, 207.33333333333334], [471.0, 248.0], [470.0, 581.5], [469.0, 467.0], [468.0, 254.5], [494.0, 387.125], [486.0, 229.0], [487.0, 292.5], [481.0, 406.5], [485.0, 211.8], [484.0, 147.0], [495.0, 386.5714285714286], [488.0, 267.0], [491.0, 247.5], [492.0, 441.0], [483.0, 184.5], [490.0, 472.5], [499.0, 322.7], [503.0, 381.9375], [496.0, 319.0], [498.0, 449.55555555555554], [497.0, 236.0], [502.0, 389.9230769230769], [501.0, 409.8], [500.0, 362.8666666666667], [510.0, 345.2142857142857], [511.0, 431.27272727272725], [505.0, 432.5625], [504.0, 408.0769230769231], [507.0, 456.8461538461538], [506.0, 364.09090909090907], [509.0, 422.7692307692308], [508.0, 467.82352941176475], [537.0, 443.5], [526.0, 251.625], [514.0, 178.5], [528.0, 316.22222222222223], [543.0, 394.6], [542.0, 176.5], [541.0, 345.66666666666663], [540.0, 459.3333333333333], [536.0, 204.5], [519.0, 416.33333333333326], [518.0, 404.1111111111111], [517.0, 477.0], [515.0, 441.5], [516.0, 480.5], [529.0, 232.6], [530.0, 296.6], [527.0, 161.39999999999998], [513.0, 508.0], [512.0, 385.57142857142856], [524.0, 307.0], [523.0, 324.55555555555554], [522.0, 198.79999999999998], [521.0, 484.22222222222223], [520.0, 355.5], [525.0, 323.66666666666663], [533.0, 249.28571428571428], [532.0, 169.0], [535.0, 173.25], [534.0, 203.0], [531.0, 161.33333333333331], [571.0, 388.41509433962256], [548.0, 299.5], [544.0, 366.66666666666663], [545.0, 243.0], [547.0, 227.0], [546.0, 442.0], [555.0, 390.0], [557.0, 243.0], [556.0, 768.0], [559.0, 245.0], [558.0, 639.0], [554.0, 254.75], [553.0, 328.75], [552.0, 318.0], [549.0, 378.66666666666663], [550.0, 744.0], [568.0, 414.3846153846154], [551.0, 442.3333333333333], [570.0, 440.3888888888889], [569.0, 486.68], [572.0, 480.0], [574.0, 478.79166666666663], [575.0, 501.66666666666674], [560.0, 799.0], [563.0, 537.6], [562.0, 168.0], [565.0, 394.7142857142857], [564.0, 407.5], [567.0, 374.30769230769226], [566.0, 348.125], [573.0, 577.5769230769231], [604.0, 287.2857142857143], [578.0, 525.9666666666667], [579.0, 422.61111111111114], [581.0, 508.93333333333334], [580.0, 538.7222222222222], [583.0, 415.5882352941176], [582.0, 539.1818181818184], [601.0, 496.0], [600.0, 600.6153846153845], [576.0, 495.1562499999999], [591.0, 562.9047619047618], [590.0, 462.54545454545456], [589.0, 541.2500000000001], [588.0, 488.53333333333336], [587.0, 503.38461538461536], [586.0, 486.4375], [585.0, 468.12000000000006], [584.0, 513.4285714285713], [577.0, 525.3846153846154], [607.0, 387.2], [593.0, 565.2105263157893], [592.0, 548.9444444444445], [595.0, 660.375], [594.0, 541.6666666666666], [597.0, 583.5], [596.0, 484.5454545454545], [599.0, 556.3333333333334], [598.0, 582.1538461538461], [606.0, 469.75], [605.0, 383.0], [602.0, 512.8181818181819], [603.0, 454.8], [634.0, 291.5], [621.0, 298.0], [624.0, 340.1], [631.0, 429.6666666666667], [630.0, 408.3], [628.0, 444.75], [627.0, 351.5], [629.0, 221.0], [626.0, 359.375], [625.0, 402.25], [632.0, 240.0], [633.0, 236.8], [635.0, 286.0], [637.0, 212.0], [639.0, 404.0], [636.0, 461.6666666666667], [620.0, 459.75], [619.0, 305.25], [618.0, 206.0], [617.0, 366.6666666666667], [616.0, 221.0], [615.0, 569.0], [614.0, 197.5], [613.0, 674.0], [611.0, 402.5], [609.0, 460.0], [608.0, 467.0], [623.0, 218.88888888888889], [622.0, 381.0], [644.0, 510.5], [649.0, 253.66666666666666], [648.0, 285.0], [647.0, 274.6666666666667], [664.0, 218.0], [666.0, 250.0], [665.0, 593.3333333333334], [668.0, 419.0], [667.0, 415.0], [670.0, 331.0], [669.0, 507.5], [656.0, 351.0], [671.0, 209.0], [657.0, 345.1111111111111], [658.0, 330.0], [660.0, 428.83333333333337], [659.0, 355.6666666666667], [646.0, 374.75], [645.0, 378.3333333333333], [643.0, 422.6666666666667], [642.0, 441.3333333333333], [655.0, 209.0], [641.0, 334.0], [640.0, 483.0], [654.0, 297.25], [652.0, 224.66666666666666], [653.0, 293.0], [651.0, 343.3333333333333], [650.0, 278.6666666666667], [663.0, 368.25], [662.0, 833.0], [661.0, 349.5], [697.0, 603.8], [701.0, 566.25], [690.0, 566.7368421052631], [689.0, 649.6666666666665], [691.0, 683.375], [693.0, 665.8000000000001], [692.0, 686.0], [695.0, 648.6923076923076], [694.0, 558.2727272727274], [688.0, 586.7272727272727], [687.0, 779.875], [672.0, 537.0], [674.0, 713.0], [673.0, 426.0], [676.0, 792.0], [675.0, 690.0], [678.0, 618.0], [677.0, 726.6666666666666], [696.0, 641.6666666666666], [679.0, 749.75], [698.0, 654.75], [700.0, 619.7777777777778], [699.0, 638.75], [686.0, 608.6666666666666], [685.0, 511.25], [684.0, 438.75], [683.0, 789.5], [682.0, 592.0], [681.0, 861.0], [680.0, 444.0], [702.0, 587.8571428571429], [703.0, 643.5714285714286], [711.0, 638.0666666666665], [717.0, 637.6874999999999], [707.0, 375.90909090909093], [706.0, 694.7777777777778], [705.0, 652.3636363636364], [704.0, 509.66666666666663], [708.0, 611.8000000000001], [710.0, 537.4666666666666], [709.0, 679.9230769230769], [718.0, 641.6], [719.0, 722.2500000000001], [716.0, 614.6666666666666], [715.0, 636.4444444444445], [714.0, 604.1428571428571], [713.0, 613.8181818181818], [712.0, 650.0714285714286], [733.0, 609.5555555555555], [735.0, 876.7142857142858], [720.0, 675.9166666666667], [721.0, 520.5], [734.0, 665.5714285714286], [724.0, 674.25], [723.0, 603.75], [722.0, 662.25], [727.0, 529.9090909090908], [726.0, 669.7500000000001], [725.0, 612.5555555555555], [732.0, 673.1999999999999], [731.0, 606.5], [730.0, 622.6666666666666], [728.0, 640.5625000000001], [729.0, 825.5454545454546], [765.0, 712.8333333333334], [742.0, 354.0], [747.0, 617.6666666666666], [749.0, 621.3333333333334], [748.0, 753.0], [751.0, 971.0], [736.0, 760.25], [737.0, 818.4], [738.0, 851.0], [741.0, 959.0], [740.0, 756.0], [739.0, 675.0], [750.0, 718.6666666666666], [746.0, 252.0], [745.0, 445.66666666666663], [744.0, 398.0], [743.0, 656.0], [761.0, 795.8571428571429], [760.0, 854.0], [766.0, 684.3333333333334], [759.0, 568.75], [758.0, 697.1666666666666], [757.0, 990.0], [756.0, 626.0], [755.0, 659.75], [754.0, 681.6666666666666], [753.0, 912.0], [752.0, 858.5], [767.0, 861.8], [764.0, 660.1999999999999], [763.0, 747.375], [762.0, 653.75], [797.0, 592.5], [771.0, 466.21428571428567], [774.0, 607.5], [792.0, 631.0], [775.0, 793.7272727272727], [794.0, 857.3333333333334], [793.0, 729.25], [796.0, 891.0], [795.0, 569.0], [798.0, 377.0], [773.0, 600.5], [772.0, 549.0], [785.0, 604.6], [784.0, 871.2], [786.0, 855.0], [787.0, 759.6666666666666], [789.0, 742.5], [788.0, 838.0], [791.0, 643.75], [790.0, 795.0], [799.0, 344.6666666666667], [783.0, 718.1], [768.0, 929.8], [770.0, 1082.4], [769.0, 657.1666666666666], [782.0, 729.8888888888889], [779.0, 815.5625], [781.0, 731.0], [780.0, 792.0833333333333], [777.0, 734.6666666666665], [778.0, 733.6666666666667], [776.0, 716.2142857142857], [827.0, 278.0], [802.0, 724.1428571428571], [803.0, 636.3333333333334], [804.0, 777.3636363636364], [806.0, 816.8125000000001], [805.0, 818.8333333333334], [824.0, 391.3333333333333], [807.0, 841.7647058823529], [826.0, 486.0], [825.0, 462.0], [828.0, 704.5], [830.0, 327.72727272727275], [816.0, 951.25], [829.0, 856.0], [801.0, 718.2222222222222], [800.0, 489.0], [820.0, 463.5], [821.0, 546.75], [823.0, 512.5], [822.0, 702.6666666666666], [819.0, 577.5], [818.0, 742.6], [817.0, 688.6], [815.0, 680.4], [814.0, 560.1538461538462], [811.0, 867.0555555555555], [812.0, 802.2857142857143], [813.0, 838.4], [810.0, 930.8461538461539], [809.0, 839.1428571428571], [808.0, 884.1176470588236], [838.0, 359.37499999999994], [834.0, 319.75], [841.0, 501.5], [840.0, 510.1428571428571], [839.0, 298.0], [857.0, 724.5], [858.0, 738.0], [856.0, 721.5], [860.0, 730.5], [861.0, 963.5], [863.0, 1008.6], [862.0, 1184.5], [849.0, 300.0], [848.0, 736.5], [851.0, 721.3333333333334], [850.0, 712.5], [853.0, 612.5], [852.0, 582.0], [855.0, 875.3333333333334], [854.0, 496.5], [859.0, 884.5], [836.0, 765.0], [835.0, 295.0], [833.0, 280.3333333333333], [837.0, 401.16666666666663], [832.0, 252.0], [843.0, 538.6666666666666], [847.0, 282.0], [846.0, 619.6666666666666], [845.0, 488.33333333333337], [844.0, 320.0], [842.0, 287.5], [894.0, 691.8333333333334], [883.0, 764.0], [869.0, 732.0], [868.0, 366.4166666666667], [867.0, 813.6666666666666], [866.0, 872.2857142857143], [864.0, 1104.0], [865.0, 846.8], [879.0, 734.5], [878.0, 797.6], [877.0, 1201.0], [875.0, 805.0], [872.0, 970.0], [886.0, 758.6666666666666], [887.0, 889.0], [885.0, 535.0], [884.0, 340.0], [882.0, 322.0], [881.0, 474.72727272727275], [880.0, 529.5], [895.0, 695.5], [893.0, 376.8333333333333], [892.0, 671.2], [890.0, 646.6666666666666], [891.0, 427.75], [888.0, 446.24999999999994], [871.0, 717.0], [870.0, 1111.0], [889.0, 856.3333333333334], [900.0, 330.0], [896.0, 564.0], [897.0, 615.6666666666666], [899.0, 343.0], [898.0, 796.5], [906.0, 310.4], [907.0, 806.0], [909.0, 311.0], [908.0, 814.3333333333334], [911.0, 763.0], [910.0, 637.5], [905.0, 507.8], [904.0, 290.5], [903.0, 632.5], [920.0, 780.75], [922.0, 897.8], [921.0, 307.0], [924.0, 732.6666666666666], [923.0, 316.0], [912.0, 316.0], [927.0, 982.0], [926.0, 887.0], [925.0, 368.0], [914.0, 716.75], [915.0, 336.0], [917.0, 294.0], [916.0, 908.8333333333334], [919.0, 352.0], [918.0, 816.25], [913.0, 508.0], [902.0, 310.0], [901.0, 319.0], [956.0, 1123.3333333333333], [940.0, 645.5], [942.0, 315.0], [941.0, 985.0], [943.0, 1064.0], [928.0, 783.6666666666666], [930.0, 894.0], [929.0, 977.5], [932.0, 794.0], [931.0, 967.0], [934.0, 983.5], [933.0, 1233.0], [939.0, 655.3333333333334], [938.0, 342.0], [937.0, 719.3333333333334], [936.0, 781.6666666666666], [935.0, 553.0], [959.0, 848.6666666666666], [945.0, 807.0], [947.0, 770.0], [946.0, 780.0], [949.0, 945.6666666666666], [948.0, 793.5], [951.0, 839.0], [950.0, 822.0], [958.0, 610.5], [957.0, 576.4], [955.0, 769.6666666666666], [954.0, 1237.0], [953.0, 816.5], [952.0, 854.3333333333334], [989.0, 1010.6], [963.0, 623.6666666666666], [965.0, 684.8], [966.0, 1248.0], [964.0, 1078.3333333333333], [984.0, 811.6], [967.0, 1099.857142857143], [960.0, 861.75], [962.0, 1161.75], [961.0, 983.5], [977.0, 728.4285714285714], [976.0, 1072.2], [979.0, 869.6666666666666], [978.0, 1055.1666666666667], [991.0, 903.0], [990.0, 991.0], [987.0, 1056.0], [988.0, 799.0], [986.0, 1130.5], [981.0, 945.0], [980.0, 575.7692307692308], [983.0, 789.2], [982.0, 960.375], [975.0, 675.1428571428571], [974.0, 1026.6], [973.0, 836.2], [972.0, 735.25], [971.0, 1035.6], [970.0, 1003.5], [969.0, 1091.5], [968.0, 1002.0], [985.0, 877.8571428571429], [1020.0, 894.0], [997.0, 679.0], [998.0, 846.4999999999999], [999.0, 915.6666666666666], [1017.0, 886.0], [1016.0, 867.0], [1019.0, 877.0], [1018.0, 737.0], [996.0, 908.5714285714286], [995.0, 697.5], [994.0, 677.5], [993.0, 1002.0], [992.0, 1263.0], [1007.0, 905.25], [1006.0, 848.0], [1005.0, 906.5], [1004.0, 979.7692307692307], [1002.0, 924.75], [1003.0, 913.0], [1001.0, 939.9999999999999], [1000.0, 1079.5714285714287], [1023.0, 572.6666666666667], [1008.0, 988.5], [1011.0, 1062.2], [1010.0, 1029.5], [1009.0, 930.6], [1013.0, 865.75], [1012.0, 821.25], [1015.0, 1033.5], [1014.0, 916.75], [1022.0, 518.0], [1021.0, 741.0], [1036.0, 895.8333333333333], [1024.0, 806.3333333333334], [1032.0, 758.5714285714286], [1026.0, 635.2], [1028.0, 790.75], [1054.0, 637.1428571428571], [1052.0, 726.3333333333334], [1050.0, 909.6249999999999], [1048.0, 874.8333333333333], [1046.0, 895.75], [1044.0, 873.75], [1042.0, 778.0], [1040.0, 810.4], [1072.0, 900.0625], [1074.0, 933.8181818181818], [1076.0, 957.0], [1056.0, 630.0], [1070.0, 1015.0], [1068.0, 1039.5384615384614], [1066.0, 1001.3846153846155], [1064.0, 992.4444444444443], [1062.0, 978.3333333333334], [1060.0, 1042.0], [1058.0, 940.5], [1084.0, 692.25], [1086.0, 874.3333333333334], [1082.0, 531.75], [1080.0, 1136.6666666666667], [1078.0, 881.3333333333334], [1038.0, 825.3333333333334], [1034.0, 688.5714285714286], [1030.0, 872.0], [1136.0, 391.5], [1110.0, 538.0], [1088.0, 618.0], [1102.0, 921.0], [1100.0, 926.0], [1098.0, 985.5], [1096.0, 968.6666666666666], [1094.0, 1081.0], [1092.0, 1086.0], [1090.0, 1002.0], [1118.0, 893.0], [1104.0, 365.0], [1106.0, 363.0], [1108.0, 1000.0], [1138.0, 370.0], [1150.0, 987.0], [1120.0, 728.0], [1122.0, 652.0], [1124.0, 413.0], [1132.0, 906.0], [1130.0, 1010.0], [1116.0, 405.0], [1114.0, 406.0], [1112.0, 518.875], [1210.0, 750.6], [1182.0, 408.0], [1184.0, 387.0], [1214.0, 785.6666666666666], [1212.0, 865.1111111111111], [1208.0, 954.2553191489363], [1206.0, 752.5], [1202.0, 606.0], [1204.0, 1060.0], [1200.0, 621.0], [1196.0, 439.0], [1194.0, 395.7272727272727], [1166.0, 372.0], [1152.0, 967.0], [1180.0, 382.0], [1178.0, 403.0], [1176.0, 404.92857142857144], [1174.0, 386.5], [1172.0, 401.0], [1170.0, 381.0], [1168.0, 386.75], [1272.0, 406.5], [1218.0, 716.4736842105261], [1228.0, 597.5714285714286], [1216.0, 690.842105263158], [1234.0, 555.3333333333334], [1244.0, 835.6666666666666], [1242.0, 882.0], [1240.0, 859.8333333333333], [1238.0, 835.4], [1236.0, 843.8333333333333], [1246.0, 783.875], [1232.0, 752.3333333333334], [1224.0, 684.4545454545454], [1226.0, 648.3333333333334], [1274.0, 440.75], [1278.0, 434.0], [1248.0, 820.5], [1276.0, 409.0], [1254.0, 513.2222222222222], [1256.0, 606.5], [1258.0, 784.0], [1262.0, 833.0], [1260.0, 856.2], [1252.0, 648.2857142857143], [1250.0, 803.0], [1230.0, 685.9999999999999], [1268.0, 859.0], [1264.0, 896.0], [1222.0, 738.7692307692307], [1220.0, 739.1818181818182], [1292.0, 704.5384615384615], [1310.0, 533.75], [1288.0, 720.3333333333334], [1290.0, 762.111111111111], [1286.0, 779.3333333333334], [1282.0, 807.0], [1308.0, 514.4], [1306.0, 551.5], [1304.0, 472.7692307692308], [1302.0, 719.5555555555555], [1298.0, 770.4666666666668], [1296.0, 814.8571428571429], [1300.0, 797.2142857142858], [1328.0, 613.7692307692307], [1330.0, 695.111111111111], [1332.0, 590.3000000000001], [1334.0, 665.2], [1336.0, 692.0], [1338.0, 568.8333333333334], [1342.0, 658.5], [1326.0, 712.6], [1324.0, 734.0], [1322.0, 739.5], [1320.0, 714.0], [1318.0, 778.0], [1316.0, 730.0], [1314.0, 832.0], [1312.0, 707.0], [1340.0, 756.4285714285714], [1294.0, 733.5238095238095], [1396.0, 668.5], [1404.0, 705.25], [1346.0, 683.3333333333334], [1344.0, 693.6666666666666], [1348.0, 733.0], [1350.0, 716.0], [1352.0, 659.6], [1376.0, 465.5], [1370.0, 540.25], [1368.0, 668.0], [1366.0, 645.0], [1364.0, 650.0], [1362.0, 643.0], [1360.0, 704.0], [1372.0, 651.5], [1390.0, 569.1666666666667], [1388.0, 643.0], [1386.0, 656.0], [1382.0, 686.3333333333334], [1402.0, 672.0], [1406.0, 623.0], [1400.0, 663.8888888888889], [1398.0, 671.25], [1394.0, 669.0], [1392.0, 675.4], [1358.0, 710.8], [1356.0, 693.5], [1354.0, 667.3333333333334], [1416.0, 562.6666666666666], [1410.0, 546.5], [1418.0, 531.6666666666666], [1414.0, 528.0], [1412.0, 658.5], [1424.0, 527.5], [1426.0, 449.0], [1420.0, 495.4285714285714], [1428.0, 549.4444444444445], [1430.0, 593.8], [1434.0, 569.6], [1432.0, 572.3333333333334], [1438.0, 499.4], [1408.0, 670.0], [1436.0, 553.2], [1452.0, 521.7], [1454.0, 557.6666666666666], [1450.0, 594.0769230769231], [1444.0, 620.0], [1448.0, 565.4], [1446.0, 587.3333333333334], [1440.0, 569.0], [1442.0, 669.0], [1470.0, 613.1666666666667], [1468.0, 505.0], [1466.0, 511.8], [1464.0, 599.5], [1462.0, 590.0], [1460.0, 567.4], [1458.0, 592.8], [1456.0, 579.25], [1496.0, 586.7272727272727], [1474.0, 619.0], [1472.0, 544.0], [1502.0, 603.1666666666666], [1500.0, 595.375], [1498.0, 587.9166666666666], [1482.0, 599.3333333333334], [1480.0, 603.0], [1486.0, 576.25], [1506.0, 680.5], [1504.0, 652.0], [1478.0, 591.8], [1476.0, 586.2], [1490.0, 554.8518518518517], [1488.0, 563.1111111111111], [1494.0, 580.96], [1492.0, 593.0370370370372], [1035.0, 802.6666666666667], [1049.0, 538.1428571428571], [1025.0, 551.5], [1027.0, 1046.5], [1055.0, 900.5], [1053.0, 775.75], [1051.0, 784.75], [1047.0, 836.1666666666666], [1045.0, 826.4], [1043.0, 826.2], [1041.0, 753.5], [1037.0, 864.5], [1039.0, 945.9999999999999], [1073.0, 909.375], [1075.0, 1032.857142857143], [1077.0, 905.0], [1071.0, 961.8095238095237], [1069.0, 1004.7647058823529], [1067.0, 1005.8571428571429], [1065.0, 1020.5625], [1063.0, 998.5], [1061.0, 1026.3333333333333], [1059.0, 966.5], [1057.0, 913.0], [1079.0, 563.090909090909], [1081.0, 963.0], [1083.0, 800.3333333333334], [1085.0, 920.2], [1087.0, 1081.0], [1033.0, 703.8333333333334], [1031.0, 845.0], [1029.0, 758.1666666666667], [1137.0, 418.5], [1141.0, 378.0], [1115.0, 387.5], [1107.0, 554.1428571428572], [1105.0, 953.6666666666666], [1101.0, 370.0], [1103.0, 1078.0], [1143.0, 478.3333333333333], [1121.0, 690.5], [1149.0, 883.0], [1123.0, 374.0], [1125.0, 369.0], [1135.0, 990.0], [1131.0, 963.0], [1119.0, 576.6666666666666], [1091.0, 981.0], [1089.0, 1078.0], [1093.0, 965.5], [1095.0, 895.0], [1099.0, 934.5], [1097.0, 984.0], [1113.0, 604.3333333333334], [1109.0, 1064.0], [1207.0, 865.3333333333333], [1163.0, 385.5], [1161.0, 401.5], [1183.0, 410.0], [1157.0, 1064.0], [1215.0, 805.8666666666668], [1213.0, 804.7692307692307], [1211.0, 820.0], [1209.0, 910.25], [1201.0, 741.0], [1205.0, 998.0], [1203.0, 1058.0], [1187.0, 419.5], [1193.0, 407.0], [1195.0, 424.0], [1199.0, 520.5], [1197.0, 412.0], [1185.0, 403.5], [1167.0, 426.0], [1181.0, 382.5], [1179.0, 404.0], [1177.0, 417.0], [1173.0, 382.0], [1169.0, 404.0], [1175.0, 398.5], [1225.0, 680.5], [1221.0, 806.5909090909091], [1219.0, 731.5882352941176], [1217.0, 759.4999999999999], [1233.0, 671.5], [1235.0, 834.0], [1241.0, 845.75], [1239.0, 840.5], [1245.0, 800.0], [1243.0, 919.0], [1237.0, 797.6666666666666], [1247.0, 923.0], [1227.0, 597.5714285714286], [1229.0, 638.3333333333334], [1231.0, 753.3333333333333], [1267.0, 822.3333333333334], [1265.0, 816.0], [1273.0, 813.1666666666667], [1269.0, 799.0], [1275.0, 440.0], [1259.0, 620.25], [1263.0, 849.75], [1261.0, 815.0], [1257.0, 742.5], [1255.0, 444.0], [1253.0, 679.3333333333334], [1251.0, 634.2857142857142], [1249.0, 861.0], [1223.0, 743.8571428571429], [1293.0, 749.5], [1281.0, 441.5], [1287.0, 552.5], [1289.0, 603.8571428571429], [1285.0, 527.625], [1283.0, 780.0], [1307.0, 573.0], [1311.0, 702.0], [1309.0, 747.0], [1303.0, 600.5], [1301.0, 562.625], [1299.0, 771.1], [1297.0, 761.3888888888889], [1305.0, 459.7857142857143], [1295.0, 761.9375000000001], [1329.0, 657.2941176470588], [1333.0, 677.0], [1335.0, 685.2], [1327.0, 729.6363636363636], [1325.0, 766.8571428571429], [1323.0, 747.1428571428571], [1321.0, 698.0], [1319.0, 763.5], [1317.0, 707.0], [1315.0, 749.0], [1313.0, 829.0], [1343.0, 672.5714285714286], [1341.0, 696.125], [1339.0, 559.3333333333334], [1337.0, 727.25], [1331.0, 682.2499999999999], [1291.0, 746.5454545454546], [1395.0, 545.5555555555555], [1347.0, 677.0000000000001], [1345.0, 679.1999999999999], [1357.0, 564.25], [1393.0, 698.2857142857143], [1359.0, 666.0], [1407.0, 673.2222222222222], [1383.0, 700.0], [1381.0, 689.5], [1387.0, 672.0], [1385.0, 656.3333333333334], [1391.0, 659.6666666666666], [1389.0, 669.0], [1405.0, 646.1666666666666], [1403.0, 640.0], [1401.0, 667.0], [1397.0, 693.8], [1399.0, 674.3333333333334], [1355.0, 592.6], [1353.0, 659.0], [1351.0, 689.75], [1349.0, 726.5714285714286], [1375.0, 469.5], [1373.0, 571.0], [1371.0, 454.0], [1369.0, 699.0], [1367.0, 691.0], [1365.0, 643.0], [1363.0, 661.0], [1361.0, 637.0], [1459.0, 583.6], [1417.0, 529.0], [1411.0, 587.8], [1409.0, 539.4166666666666], [1439.0, 533.0], [1437.0, 534.4444444444445], [1423.0, 525.8181818181818], [1457.0, 556.75], [1463.0, 507.75], [1471.0, 551.2], [1443.0, 613.0], [1441.0, 623.0], [1469.0, 533.0], [1467.0, 554.0], [1465.0, 565.6666666666666], [1461.0, 565.0], [1447.0, 485.7142857142857], [1445.0, 524.1666666666666], [1451.0, 520.8571428571429], [1455.0, 575.6666666666666], [1453.0, 531.5], [1449.0, 485.6666666666667], [1421.0, 522.8333333333334], [1413.0, 540.0], [1425.0, 480.6], [1429.0, 566.2], [1427.0, 579.6666666666666], [1433.0, 587.0], [1431.0, 544.625], [1435.0, 543.875], [1419.0, 529.5], [1415.0, 609.5], [1475.0, 576.6666666666666], [1473.0, 623.0], [1501.0, 602.2], [1503.0, 661.8], [1481.0, 546.6666666666666], [1487.0, 608.9], [1507.0, 604.5], [1505.0, 605.0], [1485.0, 636.0], [1479.0, 549.0], [1477.0, 638.5000000000001], [1495.0, 579.2142857142857], [1493.0, 562.7272727272726], [1499.0, 591.6], [1497.0, 581.6], [1491.0, 579.4615384615383], [1489.0, 619.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[639.8023999999991, 440.6501999999998]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 10.1], [3.0, 7.5625], [4.0, 7.625000000000001], [5.0, 7.388888888888889], [6.0, 7.578947368421054], [7.0, 11.25], [8.0, 7.0], [9.0, 12.785714285714288], [10.0, 20.375], [11.0, 10.285714285714286], [12.0, 18.2], [13.0, 28.9], [14.0, 15.11111111111111], [15.0, 25.083333333333332], [16.0, 24.714285714285715], [17.0, 26.642857142857142], [18.0, 38.75000000000001], [19.0, 33.77777777777778], [20.0, 35.35294117647058], [21.0, 28.749999999999996], [22.0, 29.406249999999996], [23.0, 34.39285714285714], [24.0, 34.470588235294116], [25.0, 36.226415094339636], [26.0, 33.93181818181817], [27.0, 33.66666666666666], [28.0, 36.42222222222224], [29.0, 37.07843137254902], [30.0, 34.960526315789465], [31.0, 37.84999999999998], [32.0, 39.38095238095237], [33.0, 39.20238095238094], [35.0, 38.06185567010311], [34.0, 40.39240506329115], [37.0, 40.28], [36.0, 38.93975903614458], [39.0, 40.22321428571429], [38.0, 40.427350427350426], [40.0, 39.536423841059595], [41.0, 40.01587301587301], [43.0, 40.888111888111894], [42.0, 42.013986013986006], [44.0, 40.1911764705882], [45.0, 40.9251700680272], [47.0, 41.62666666666665], [46.0, 40.72289156626509], [49.0, 41.16025641025641], [48.0, 41.68939393939394], [50.0, 42.794326241134776], [51.0, 42.904494382022484], [53.0, 42.075187969924805], [52.0, 42.67096774193548], [54.0, 42.37423312883434], [55.0, 42.68333333333332], [57.0, 43.65765765765768], [56.0, 41.76388888888888], [59.0, 43.81944444444444], [58.0, 42.649006622516566], [60.0, 43.77862595419846], [61.0, 43.48543689320386], [62.0, 41.962962962962955], [63.0, 43.24657534246574], [66.0, 46.939759036144565], [64.0, 45.01769911504423], [67.0, 44.5921052631579], [65.0, 44.68539325842696], [71.0, 47.80722891566264], [70.0, 44.218045112781965], [69.0, 47.02597402597402], [68.0, 44.925000000000004], [72.0, 46.597938144329895], [73.0, 43.74603174603176], [74.0, 45.4861111111111], [75.0, 45.906666666666666], [77.0, 46.86666666666667], [79.0, 46.872340425531924], [78.0, 49.05333333333333], [76.0, 45.16666666666666], [83.0, 45.85365853658536], [82.0, 46.578947368421055], [81.0, 46.249999999999986], [80.0, 45.431818181818166], [87.0, 45.675000000000004], [86.0, 45.975], [84.0, 44.631578947368425], [85.0, 44.99999999999999], [90.0, 46.30952380952381], [91.0, 44.875], [88.0, 46.230769230769226], [89.0, 44.88235294117646], [93.0, 45.96551724137932], [92.0, 44.05000000000002], [95.0, 42.729729729729726], [94.0, 46.02564102564102], [97.0, 46.192307692307686], [96.0, 43.52631578947368], [99.0, 42.354838709677416], [98.0, 44.84090909090909], [102.0, 44.29411764705884], [101.0, 42.88888888888888], [100.0, 42.923076923076934], [103.0, 46.25], [107.0, 45.57142857142856], [106.0, 43.866666666666674], [105.0, 43.826086956521735], [104.0, 44.19999999999998], [111.0, 46.145833333333336], [110.0, 43.352941176470594], [109.0, 46.72222222222222], [108.0, 44.41379310344826], [115.0, 44.214285714285715], [114.0, 43.16], [113.0, 43.925925925925924], [112.0, 44.09374999999999], [117.0, 44.2258064516129], [119.0, 44.94444444444444], [118.0, 43.5483870967742], [116.0, 43.49999999999999], [121.0, 46.15789473684212], [120.0, 45.73333333333334], [123.0, 48.63999999999999], [122.0, 45.73684210526315], [127.0, 59.185185185185176], [126.0, 48.05555555555556], [125.0, 49.642857142857146], [124.0, 44.76923076923077], [135.0, 50.03225806451614], [133.0, 52.44736842105262], [132.0, 44.878787878787875], [131.0, 53.86842105263158], [130.0, 53.473684210526315], [134.0, 54.33333333333333], [129.0, 47.541666666666664], [128.0, 52.095238095238095], [142.0, 49.92105263157893], [138.0, 44.68181818181818], [143.0, 48.416666666666664], [139.0, 50.68750000000001], [137.0, 52.62962962962962], [136.0, 48.227272727272734], [141.0, 50.86666666666666], [140.0, 52.91228070175437], [150.0, 48.22222222222222], [149.0, 51.45454545454544], [146.0, 48.482142857142854], [145.0, 52.16363636363635], [151.0, 50.81818181818181], [144.0, 50.83333333333334], [148.0, 49.7027027027027], [147.0, 48.1025641025641], [159.0, 50.81578947368421], [157.0, 50.9375], [155.0, 51.8095238095238], [153.0, 50.074074074074076], [152.0, 49.25714285714286], [158.0, 52.31818181818182], [156.0, 47.142857142857146], [154.0, 50.94444444444446], [161.0, 48.857142857142854], [165.0, 52.0], [160.0, 50.77777777777778], [166.0, 47.857142857142854], [167.0, 49.0952380952381], [164.0, 49.806451612903224], [163.0, 48.0], [162.0, 52.095238095238095], [174.0, 56.95454545454545], [170.0, 47.67857142857143], [169.0, 47.705882352941174], [172.0, 47.559999999999995], [171.0, 48.66666666666667], [168.0, 48.294117647058826], [175.0, 51.470588235294116], [173.0, 50.0], [182.0, 56.4], [181.0, 56.0], [180.0, 50.79999999999999], [178.0, 44.142857142857146], [176.0, 49.800000000000004], [177.0, 58.90909090909091], [179.0, 56.50000000000001], [183.0, 67.5], [185.0, 45.30000000000001], [184.0, 56.25], [187.0, 46.6], [190.0, 52.0], [189.0, 69.0], [188.0, 62.666666666666664], [186.0, 44.0], [199.0, 63.0], [197.0, 63.0], [195.0, 60.900000000000006], [192.0, 54.0], [196.0, 57.25], [194.0, 65.8888888888889], [193.0, 56.892857142857146], [198.0, 48.0], [205.0, 54.25000000000001], [204.0, 59.666666666666664], [206.0, 60.77777777777778], [207.0, 59.42857142857142], [203.0, 57.71153846153847], [202.0, 53.1], [200.0, 53.0], [201.0, 51.0], [210.0, 62.5], [209.0, 58.46153846153846], [208.0, 50.2], [215.0, 62.0], [214.0, 57.857142857142854], [213.0, 61.4], [211.0, 60.42857142857143], [212.0, 52.58333333333333], [223.0, 52.583333333333336], [222.0, 50.785714285714285], [221.0, 56.625], [220.0, 56.285714285714285], [218.0, 56.375], [217.0, 56.77777777777778], [219.0, 52.0], [216.0, 60.714285714285715], [230.0, 54.0], [229.0, 58.0], [228.0, 55.333333333333336], [227.0, 52.0], [226.0, 59.714285714285715], [225.0, 51.6], [224.0, 53.714285714285715], [231.0, 56.0], [239.0, 53.0], [238.0, 52.0], [236.0, 54.5], [235.0, 49.0], [234.0, 50.0], [232.0, 48.0], [242.0, 62.5], [240.0, 63.0], [268.0, 5.0], [284.0, 13.0], [279.0, 4.0], [299.0, 4.0], [292.0, 6.0], [288.0, 7.0], [291.0, 18.0], [358.0, 14.5], [360.0, 22.0], [362.0, 20.0], [365.0, 13.666666666666668], [380.0, 323.4166666666667], [370.0, 80.18181818181817], [369.0, 24.0], [371.0, 43.5], [377.0, 35.28571428571429], [374.0, 36.0], [373.0, 28.0], [381.0, 353.5], [379.0, 300.4166666666667], [378.0, 38.0], [382.0, 173.90476190476193], [383.0, 374.5], [376.0, 42.75], [372.0, 29.0], [385.0, 163.41592920353983], [388.0, 209.10204081632654], [387.0, 173.0], [384.0, 196.1842105263158], [390.0, 272.50000000000006], [392.0, 228.63157894736844], [389.0, 177.33333333333334], [391.0, 206.23529411764707], [393.0, 227.0769230769231], [1.0, 16.8]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[94.42350000000012, 49.601099999999995]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1507.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 62166.666666666664, "minX": 1.66901442E12, "maxY": 131166.66666666666, "series": [{"data": [[1.66901442E12, 62166.666666666664]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66901442E12, 131166.66666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901442E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 49.601099999999995, "minX": 1.66901442E12, "maxY": 440.6501999999998, "series": [{"data": [[1.66901442E12, 59.718700000000034]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901442E12, 440.6501999999998]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901442E12, 49.601099999999995]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901442E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 49.4729999999998, "minX": 1.66901442E12, "maxY": 440.4851999999997, "series": [{"data": [[1.66901442E12, 59.70409999999996]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901442E12, 440.4851999999997]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901442E12, 49.4729999999998]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901442E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 9.082700000000006, "minX": 1.66901442E12, "maxY": 10.534299999999972, "series": [{"data": [[1.66901442E12, 9.082700000000006]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901442E12, 10.419500000000003]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901442E12, 10.534299999999972]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901442E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.66901442E12, "maxY": 1270.0, "series": [{"data": [[1.66901442E12, 1270.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66901442E12, 770.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66901442E12, 1118.9900000000016]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66901442E12, 907.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66901442E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66901442E12, 70.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901442E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 106.0, "maxY": 920.0, "series": [{"data": [[2151.0, 63.0], [2177.0, 58.0], [820.0, 40.0], [939.0, 43.0], [1072.0, 87.0], [1157.0, 42.0], [1329.0, 609.0], [1398.0, 59.0], [1355.0, 378.0], [1386.0, 211.5], [1416.0, 43.0], [1455.0, 43.0], [1442.0, 920.0], [1516.0, 53.0], [1548.0, 347.5], [1631.0, 63.0], [1611.0, 57.0], [106.0, 49.0], [1947.0, 45.0], [1996.0, 46.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2177.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 40.0, "minX": 106.0, "maxY": 919.5, "series": [{"data": [[2151.0, 63.0], [2177.0, 58.0], [820.0, 40.0], [939.0, 43.0], [1072.0, 86.5], [1157.0, 42.0], [1329.0, 609.0], [1398.0, 59.0], [1355.0, 378.0], [1386.0, 211.5], [1416.0, 43.0], [1455.0, 43.0], [1442.0, 919.5], [1516.0, 53.0], [1548.0, 347.5], [1631.0, 63.0], [1611.0, 57.0], [106.0, 48.0], [1947.0, 45.0], [1996.0, 46.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2177.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 500.0, "minX": 1.66901442E12, "maxY": 500.0, "series": [{"data": [[1.66901442E12, 500.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901442E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 500.0, "minX": 1.66901442E12, "maxY": 500.0, "series": [{"data": [[1.66901442E12, 500.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901442E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 166.66666666666666, "minX": 1.66901442E12, "maxY": 166.66666666666666, "series": [{"data": [[1.66901442E12, 166.66666666666666]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66901442E12, 166.66666666666666]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66901442E12, 166.66666666666666]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901442E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 500.0, "minX": 1.66901442E12, "maxY": 500.0, "series": [{"data": [[1.66901442E12, 500.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901442E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

