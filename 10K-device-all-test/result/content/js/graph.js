/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 899.0, "series": [{"data": [[0.0, 10.0], [0.1, 19.0], [0.2, 21.0], [0.3, 23.0], [0.4, 25.0], [0.5, 29.0], [0.6, 32.0], [0.7, 33.0], [0.8, 34.0], [0.9, 35.0], [1.0, 36.0], [1.1, 37.0], [1.2, 37.0], [1.3, 38.0], [1.4, 39.0], [1.5, 39.0], [1.6, 40.0], [1.7, 40.0], [1.8, 41.0], [1.9, 41.0], [2.0, 41.0], [2.1, 42.0], [2.2, 42.0], [2.3, 42.0], [2.4, 43.0], [2.5, 43.0], [2.6, 43.0], [2.7, 43.0], [2.8, 43.0], [2.9, 44.0], [3.0, 44.0], [3.1, 44.0], [3.2, 44.0], [3.3, 44.0], [3.4, 44.0], [3.5, 44.0], [3.6, 45.0], [3.7, 45.0], [3.8, 45.0], [3.9, 45.0], [4.0, 45.0], [4.1, 45.0], [4.2, 45.0], [4.3, 46.0], [4.4, 46.0], [4.5, 46.0], [4.6, 46.0], [4.7, 46.0], [4.8, 46.0], [4.9, 46.0], [5.0, 46.0], [5.1, 47.0], [5.2, 47.0], [5.3, 47.0], [5.4, 47.0], [5.5, 47.0], [5.6, 47.0], [5.7, 47.0], [5.8, 47.0], [5.9, 47.0], [6.0, 47.0], [6.1, 47.0], [6.2, 48.0], [6.3, 48.0], [6.4, 48.0], [6.5, 48.0], [6.6, 48.0], [6.7, 48.0], [6.8, 48.0], [6.9, 48.0], [7.0, 48.0], [7.1, 48.0], [7.2, 49.0], [7.3, 49.0], [7.4, 49.0], [7.5, 49.0], [7.6, 49.0], [7.7, 49.0], [7.8, 49.0], [7.9, 49.0], [8.0, 49.0], [8.1, 49.0], [8.2, 49.0], [8.3, 50.0], [8.4, 50.0], [8.5, 50.0], [8.6, 50.0], [8.7, 50.0], [8.8, 50.0], [8.9, 50.0], [9.0, 50.0], [9.1, 50.0], [9.2, 50.0], [9.3, 50.0], [9.4, 50.0], [9.5, 50.0], [9.6, 51.0], [9.7, 51.0], [9.8, 51.0], [9.9, 51.0], [10.0, 51.0], [10.1, 51.0], [10.2, 51.0], [10.3, 51.0], [10.4, 51.0], [10.5, 51.0], [10.6, 51.0], [10.7, 51.0], [10.8, 51.0], [10.9, 51.0], [11.0, 52.0], [11.1, 52.0], [11.2, 52.0], [11.3, 52.0], [11.4, 52.0], [11.5, 52.0], [11.6, 52.0], [11.7, 52.0], [11.8, 52.0], [11.9, 52.0], [12.0, 52.0], [12.1, 52.0], [12.2, 52.0], [12.3, 52.0], [12.4, 52.0], [12.5, 52.0], [12.6, 53.0], [12.7, 53.0], [12.8, 53.0], [12.9, 53.0], [13.0, 53.0], [13.1, 53.0], [13.2, 53.0], [13.3, 53.0], [13.4, 53.0], [13.5, 53.0], [13.6, 53.0], [13.7, 53.0], [13.8, 53.0], [13.9, 53.0], [14.0, 53.0], [14.1, 53.0], [14.2, 53.0], [14.3, 54.0], [14.4, 54.0], [14.5, 54.0], [14.6, 54.0], [14.7, 54.0], [14.8, 54.0], [14.9, 54.0], [15.0, 54.0], [15.1, 54.0], [15.2, 54.0], [15.3, 54.0], [15.4, 54.0], [15.5, 54.0], [15.6, 54.0], [15.7, 54.0], [15.8, 54.0], [15.9, 54.0], [16.0, 55.0], [16.1, 55.0], [16.2, 55.0], [16.3, 55.0], [16.4, 55.0], [16.5, 55.0], [16.6, 55.0], [16.7, 55.0], [16.8, 55.0], [16.9, 55.0], [17.0, 55.0], [17.1, 55.0], [17.2, 55.0], [17.3, 55.0], [17.4, 55.0], [17.5, 55.0], [17.6, 55.0], [17.7, 55.0], [17.8, 55.0], [17.9, 56.0], [18.0, 56.0], [18.1, 56.0], [18.2, 56.0], [18.3, 56.0], [18.4, 56.0], [18.5, 56.0], [18.6, 56.0], [18.7, 56.0], [18.8, 56.0], [18.9, 56.0], [19.0, 56.0], [19.1, 56.0], [19.2, 56.0], [19.3, 56.0], [19.4, 56.0], [19.5, 56.0], [19.6, 56.0], [19.7, 56.0], [19.8, 56.0], [19.9, 56.0], [20.0, 56.0], [20.1, 57.0], [20.2, 57.0], [20.3, 57.0], [20.4, 57.0], [20.5, 57.0], [20.6, 57.0], [20.7, 57.0], [20.8, 57.0], [20.9, 57.0], [21.0, 57.0], [21.1, 57.0], [21.2, 57.0], [21.3, 57.0], [21.4, 57.0], [21.5, 57.0], [21.6, 57.0], [21.7, 57.0], [21.8, 57.0], [21.9, 57.0], [22.0, 57.0], [22.1, 57.0], [22.2, 57.0], [22.3, 57.0], [22.4, 58.0], [22.5, 58.0], [22.6, 58.0], [22.7, 58.0], [22.8, 58.0], [22.9, 58.0], [23.0, 58.0], [23.1, 58.0], [23.2, 58.0], [23.3, 58.0], [23.4, 58.0], [23.5, 58.0], [23.6, 58.0], [23.7, 58.0], [23.8, 58.0], [23.9, 58.0], [24.0, 58.0], [24.1, 58.0], [24.2, 58.0], [24.3, 58.0], [24.4, 58.0], [24.5, 58.0], [24.6, 58.0], [24.7, 59.0], [24.8, 59.0], [24.9, 59.0], [25.0, 59.0], [25.1, 59.0], [25.2, 59.0], [25.3, 59.0], [25.4, 59.0], [25.5, 59.0], [25.6, 59.0], [25.7, 59.0], [25.8, 59.0], [25.9, 59.0], [26.0, 59.0], [26.1, 59.0], [26.2, 59.0], [26.3, 59.0], [26.4, 59.0], [26.5, 59.0], [26.6, 59.0], [26.7, 59.0], [26.8, 59.0], [26.9, 59.0], [27.0, 59.0], [27.1, 59.0], [27.2, 59.0], [27.3, 59.0], [27.4, 60.0], [27.5, 60.0], [27.6, 60.0], [27.7, 60.0], [27.8, 60.0], [27.9, 60.0], [28.0, 60.0], [28.1, 60.0], [28.2, 60.0], [28.3, 60.0], [28.4, 60.0], [28.5, 60.0], [28.6, 60.0], [28.7, 60.0], [28.8, 60.0], [28.9, 60.0], [29.0, 60.0], [29.1, 60.0], [29.2, 60.0], [29.3, 60.0], [29.4, 60.0], [29.5, 60.0], [29.6, 60.0], [29.7, 60.0], [29.8, 60.0], [29.9, 60.0], [30.0, 60.0], [30.1, 60.0], [30.2, 60.0], [30.3, 61.0], [30.4, 61.0], [30.5, 61.0], [30.6, 61.0], [30.7, 61.0], [30.8, 61.0], [30.9, 61.0], [31.0, 61.0], [31.1, 61.0], [31.2, 61.0], [31.3, 61.0], [31.4, 61.0], [31.5, 61.0], [31.6, 61.0], [31.7, 61.0], [31.8, 61.0], [31.9, 61.0], [32.0, 61.0], [32.1, 61.0], [32.2, 61.0], [32.3, 61.0], [32.4, 61.0], [32.5, 61.0], [32.6, 61.0], [32.7, 61.0], [32.8, 61.0], [32.9, 61.0], [33.0, 61.0], [33.1, 61.0], [33.2, 62.0], [33.3, 62.0], [33.4, 62.0], [33.5, 62.0], [33.6, 62.0], [33.7, 62.0], [33.8, 62.0], [33.9, 62.0], [34.0, 62.0], [34.1, 62.0], [34.2, 62.0], [34.3, 62.0], [34.4, 62.0], [34.5, 62.0], [34.6, 62.0], [34.7, 62.0], [34.8, 62.0], [34.9, 62.0], [35.0, 62.0], [35.1, 62.0], [35.2, 62.0], [35.3, 62.0], [35.4, 62.0], [35.5, 62.0], [35.6, 62.0], [35.7, 63.0], [35.8, 63.0], [35.9, 63.0], [36.0, 63.0], [36.1, 63.0], [36.2, 63.0], [36.3, 63.0], [36.4, 63.0], [36.5, 63.0], [36.6, 63.0], [36.7, 63.0], [36.8, 63.0], [36.9, 63.0], [37.0, 63.0], [37.1, 63.0], [37.2, 63.0], [37.3, 63.0], [37.4, 63.0], [37.5, 63.0], [37.6, 63.0], [37.7, 63.0], [37.8, 63.0], [37.9, 63.0], [38.0, 63.0], [38.1, 64.0], [38.2, 64.0], [38.3, 64.0], [38.4, 64.0], [38.5, 64.0], [38.6, 64.0], [38.7, 64.0], [38.8, 64.0], [38.9, 64.0], [39.0, 64.0], [39.1, 64.0], [39.2, 64.0], [39.3, 64.0], [39.4, 64.0], [39.5, 64.0], [39.6, 64.0], [39.7, 64.0], [39.8, 64.0], [39.9, 64.0], [40.0, 64.0], [40.1, 64.0], [40.2, 64.0], [40.3, 64.0], [40.4, 64.0], [40.5, 65.0], [40.6, 65.0], [40.7, 65.0], [40.8, 65.0], [40.9, 65.0], [41.0, 65.0], [41.1, 65.0], [41.2, 65.0], [41.3, 65.0], [41.4, 65.0], [41.5, 65.0], [41.6, 65.0], [41.7, 65.0], [41.8, 65.0], [41.9, 65.0], [42.0, 65.0], [42.1, 65.0], [42.2, 65.0], [42.3, 65.0], [42.4, 65.0], [42.5, 65.0], [42.6, 65.0], [42.7, 66.0], [42.8, 66.0], [42.9, 66.0], [43.0, 66.0], [43.1, 66.0], [43.2, 66.0], [43.3, 66.0], [43.4, 66.0], [43.5, 66.0], [43.6, 66.0], [43.7, 66.0], [43.8, 66.0], [43.9, 66.0], [44.0, 66.0], [44.1, 66.0], [44.2, 66.0], [44.3, 66.0], [44.4, 66.0], [44.5, 66.0], [44.6, 66.0], [44.7, 67.0], [44.8, 67.0], [44.9, 67.0], [45.0, 67.0], [45.1, 67.0], [45.2, 67.0], [45.3, 67.0], [45.4, 67.0], [45.5, 67.0], [45.6, 67.0], [45.7, 67.0], [45.8, 67.0], [45.9, 67.0], [46.0, 67.0], [46.1, 67.0], [46.2, 67.0], [46.3, 67.0], [46.4, 67.0], [46.5, 67.0], [46.6, 67.0], [46.7, 67.0], [46.8, 67.0], [46.9, 68.0], [47.0, 68.0], [47.1, 68.0], [47.2, 68.0], [47.3, 68.0], [47.4, 68.0], [47.5, 68.0], [47.6, 68.0], [47.7, 68.0], [47.8, 68.0], [47.9, 68.0], [48.0, 68.0], [48.1, 68.0], [48.2, 68.0], [48.3, 68.0], [48.4, 68.0], [48.5, 68.0], [48.6, 68.0], [48.7, 68.0], [48.8, 68.0], [48.9, 68.0], [49.0, 69.0], [49.1, 69.0], [49.2, 69.0], [49.3, 69.0], [49.4, 69.0], [49.5, 69.0], [49.6, 69.0], [49.7, 69.0], [49.8, 69.0], [49.9, 69.0], [50.0, 69.0], [50.1, 69.0], [50.2, 69.0], [50.3, 69.0], [50.4, 69.0], [50.5, 69.0], [50.6, 69.0], [50.7, 69.0], [50.8, 69.0], [50.9, 69.0], [51.0, 69.0], [51.1, 70.0], [51.2, 70.0], [51.3, 70.0], [51.4, 70.0], [51.5, 70.0], [51.6, 70.0], [51.7, 70.0], [51.8, 70.0], [51.9, 70.0], [52.0, 70.0], [52.1, 70.0], [52.2, 70.0], [52.3, 70.0], [52.4, 70.0], [52.5, 70.0], [52.6, 70.0], [52.7, 70.0], [52.8, 70.0], [52.9, 70.0], [53.0, 70.0], [53.1, 71.0], [53.2, 71.0], [53.3, 71.0], [53.4, 71.0], [53.5, 71.0], [53.6, 71.0], [53.7, 71.0], [53.8, 71.0], [53.9, 71.0], [54.0, 71.0], [54.1, 71.0], [54.2, 71.0], [54.3, 71.0], [54.4, 71.0], [54.5, 71.0], [54.6, 71.0], [54.7, 71.0], [54.8, 71.0], [54.9, 71.0], [55.0, 71.0], [55.1, 71.0], [55.2, 72.0], [55.3, 72.0], [55.4, 72.0], [55.5, 72.0], [55.6, 72.0], [55.7, 72.0], [55.8, 72.0], [55.9, 72.0], [56.0, 72.0], [56.1, 72.0], [56.2, 72.0], [56.3, 72.0], [56.4, 72.0], [56.5, 72.0], [56.6, 72.0], [56.7, 72.0], [56.8, 72.0], [56.9, 73.0], [57.0, 73.0], [57.1, 73.0], [57.2, 73.0], [57.3, 73.0], [57.4, 73.0], [57.5, 73.0], [57.6, 73.0], [57.7, 73.0], [57.8, 73.0], [57.9, 73.0], [58.0, 73.0], [58.1, 73.0], [58.2, 73.0], [58.3, 73.0], [58.4, 73.0], [58.5, 73.0], [58.6, 73.0], [58.7, 74.0], [58.8, 74.0], [58.9, 74.0], [59.0, 74.0], [59.1, 74.0], [59.2, 74.0], [59.3, 74.0], [59.4, 74.0], [59.5, 74.0], [59.6, 74.0], [59.7, 74.0], [59.8, 74.0], [59.9, 74.0], [60.0, 74.0], [60.1, 74.0], [60.2, 74.0], [60.3, 74.0], [60.4, 75.0], [60.5, 75.0], [60.6, 75.0], [60.7, 75.0], [60.8, 75.0], [60.9, 75.0], [61.0, 75.0], [61.1, 75.0], [61.2, 75.0], [61.3, 75.0], [61.4, 75.0], [61.5, 75.0], [61.6, 75.0], [61.7, 75.0], [61.8, 75.0], [61.9, 75.0], [62.0, 75.0], [62.1, 75.0], [62.2, 75.0], [62.3, 76.0], [62.4, 76.0], [62.5, 76.0], [62.6, 76.0], [62.7, 76.0], [62.8, 76.0], [62.9, 76.0], [63.0, 76.0], [63.1, 76.0], [63.2, 76.0], [63.3, 76.0], [63.4, 76.0], [63.5, 76.0], [63.6, 76.0], [63.7, 76.0], [63.8, 76.0], [63.9, 77.0], [64.0, 77.0], [64.1, 77.0], [64.2, 77.0], [64.3, 77.0], [64.4, 77.0], [64.5, 77.0], [64.6, 77.0], [64.7, 77.0], [64.8, 77.0], [64.9, 77.0], [65.0, 77.0], [65.1, 77.0], [65.2, 77.0], [65.3, 77.0], [65.4, 78.0], [65.5, 78.0], [65.6, 78.0], [65.7, 78.0], [65.8, 78.0], [65.9, 78.0], [66.0, 78.0], [66.1, 78.0], [66.2, 78.0], [66.3, 78.0], [66.4, 78.0], [66.5, 78.0], [66.6, 78.0], [66.7, 78.0], [66.8, 78.0], [66.9, 79.0], [67.0, 79.0], [67.1, 79.0], [67.2, 79.0], [67.3, 79.0], [67.4, 79.0], [67.5, 79.0], [67.6, 79.0], [67.7, 79.0], [67.8, 79.0], [67.9, 79.0], [68.0, 79.0], [68.1, 79.0], [68.2, 79.0], [68.3, 79.0], [68.4, 80.0], [68.5, 80.0], [68.6, 80.0], [68.7, 80.0], [68.8, 80.0], [68.9, 80.0], [69.0, 80.0], [69.1, 80.0], [69.2, 80.0], [69.3, 80.0], [69.4, 80.0], [69.5, 80.0], [69.6, 80.0], [69.7, 80.0], [69.8, 81.0], [69.9, 81.0], [70.0, 81.0], [70.1, 81.0], [70.2, 81.0], [70.3, 81.0], [70.4, 81.0], [70.5, 81.0], [70.6, 81.0], [70.7, 81.0], [70.8, 81.0], [70.9, 81.0], [71.0, 81.0], [71.1, 81.0], [71.2, 82.0], [71.3, 82.0], [71.4, 82.0], [71.5, 82.0], [71.6, 82.0], [71.7, 82.0], [71.8, 82.0], [71.9, 82.0], [72.0, 82.0], [72.1, 82.0], [72.2, 82.0], [72.3, 82.0], [72.4, 83.0], [72.5, 83.0], [72.6, 83.0], [72.7, 83.0], [72.8, 83.0], [72.9, 83.0], [73.0, 83.0], [73.1, 83.0], [73.2, 83.0], [73.3, 83.0], [73.4, 83.0], [73.5, 83.0], [73.6, 83.0], [73.7, 83.0], [73.8, 84.0], [73.9, 84.0], [74.0, 84.0], [74.1, 84.0], [74.2, 84.0], [74.3, 84.0], [74.4, 84.0], [74.5, 84.0], [74.6, 84.0], [74.7, 84.0], [74.8, 84.0], [74.9, 84.0], [75.0, 84.0], [75.1, 85.0], [75.2, 85.0], [75.3, 85.0], [75.4, 85.0], [75.5, 85.0], [75.6, 85.0], [75.7, 85.0], [75.8, 85.0], [75.9, 85.0], [76.0, 85.0], [76.1, 85.0], [76.2, 85.0], [76.3, 85.0], [76.4, 86.0], [76.5, 86.0], [76.6, 86.0], [76.7, 86.0], [76.8, 86.0], [76.9, 86.0], [77.0, 86.0], [77.1, 86.0], [77.2, 86.0], [77.3, 86.0], [77.4, 87.0], [77.5, 87.0], [77.6, 87.0], [77.7, 87.0], [77.8, 87.0], [77.9, 87.0], [78.0, 87.0], [78.1, 87.0], [78.2, 87.0], [78.3, 87.0], [78.4, 88.0], [78.5, 88.0], [78.6, 88.0], [78.7, 88.0], [78.8, 88.0], [78.9, 88.0], [79.0, 88.0], [79.1, 88.0], [79.2, 88.0], [79.3, 89.0], [79.4, 89.0], [79.5, 89.0], [79.6, 89.0], [79.7, 89.0], [79.8, 89.0], [79.9, 89.0], [80.0, 89.0], [80.1, 89.0], [80.2, 90.0], [80.3, 90.0], [80.4, 90.0], [80.5, 90.0], [80.6, 90.0], [80.7, 90.0], [80.8, 90.0], [80.9, 90.0], [81.0, 90.0], [81.1, 90.0], [81.2, 91.0], [81.3, 91.0], [81.4, 91.0], [81.5, 91.0], [81.6, 91.0], [81.7, 91.0], [81.8, 91.0], [81.9, 91.0], [82.0, 91.0], [82.1, 91.0], [82.2, 92.0], [82.3, 92.0], [82.4, 92.0], [82.5, 92.0], [82.6, 92.0], [82.7, 92.0], [82.8, 92.0], [82.9, 93.0], [83.0, 93.0], [83.1, 93.0], [83.2, 93.0], [83.3, 93.0], [83.4, 93.0], [83.5, 93.0], [83.6, 93.0], [83.7, 94.0], [83.8, 94.0], [83.9, 94.0], [84.0, 94.0], [84.1, 94.0], [84.2, 94.0], [84.3, 94.0], [84.4, 95.0], [84.5, 95.0], [84.6, 95.0], [84.7, 95.0], [84.8, 95.0], [84.9, 95.0], [85.0, 96.0], [85.1, 96.0], [85.2, 96.0], [85.3, 96.0], [85.4, 96.0], [85.5, 96.0], [85.6, 96.0], [85.7, 97.0], [85.8, 97.0], [85.9, 97.0], [86.0, 97.0], [86.1, 97.0], [86.2, 97.0], [86.3, 98.0], [86.4, 98.0], [86.5, 98.0], [86.6, 98.0], [86.7, 98.0], [86.8, 98.0], [86.9, 99.0], [87.0, 99.0], [87.1, 99.0], [87.2, 99.0], [87.3, 99.0], [87.4, 99.0], [87.5, 99.0], [87.6, 100.0], [87.7, 100.0], [87.8, 100.0], [87.9, 100.0], [88.0, 100.0], [88.1, 101.0], [88.2, 101.0], [88.3, 101.0], [88.4, 101.0], [88.5, 101.0], [88.6, 101.0], [88.7, 102.0], [88.8, 102.0], [88.9, 102.0], [89.0, 102.0], [89.1, 102.0], [89.2, 102.0], [89.3, 103.0], [89.4, 103.0], [89.5, 103.0], [89.6, 103.0], [89.7, 103.0], [89.8, 104.0], [89.9, 104.0], [90.0, 104.0], [90.1, 105.0], [90.2, 105.0], [90.3, 105.0], [90.4, 105.0], [90.5, 106.0], [90.6, 106.0], [90.7, 106.0], [90.8, 106.0], [90.9, 107.0], [91.0, 107.0], [91.1, 107.0], [91.2, 108.0], [91.3, 108.0], [91.4, 109.0], [91.5, 109.0], [91.6, 109.0], [91.7, 110.0], [91.8, 110.0], [91.9, 111.0], [92.0, 111.0], [92.1, 111.0], [92.2, 112.0], [92.3, 112.0], [92.4, 113.0], [92.5, 113.0], [92.6, 114.0], [92.7, 114.0], [92.8, 115.0], [92.9, 116.0], [93.0, 116.0], [93.1, 117.0], [93.2, 117.0], [93.3, 118.0], [93.4, 119.0], [93.5, 119.0], [93.6, 120.0], [93.7, 121.0], [93.8, 122.0], [93.9, 123.0], [94.0, 123.0], [94.1, 124.0], [94.2, 125.0], [94.3, 126.0], [94.4, 127.0], [94.5, 128.0], [94.6, 129.0], [94.7, 130.0], [94.8, 132.0], [94.9, 133.0], [95.0, 134.0], [95.1, 135.0], [95.2, 137.0], [95.3, 138.0], [95.4, 138.0], [95.5, 140.0], [95.6, 140.0], [95.7, 142.0], [95.8, 143.0], [95.9, 144.0], [96.0, 145.0], [96.1, 146.0], [96.2, 147.0], [96.3, 148.0], [96.4, 149.0], [96.5, 151.0], [96.6, 152.0], [96.7, 154.0], [96.8, 155.0], [96.9, 156.0], [97.0, 158.0], [97.1, 159.0], [97.2, 160.0], [97.3, 161.0], [97.4, 162.0], [97.5, 166.0], [97.6, 167.0], [97.7, 168.0], [97.8, 169.0], [97.9, 172.0], [98.0, 173.0], [98.1, 175.0], [98.2, 177.0], [98.3, 179.0], [98.4, 181.0], [98.5, 183.0], [98.6, 185.0], [98.7, 186.0], [98.8, 189.0], [98.9, 192.0], [99.0, 194.0], [99.1, 196.0], [99.2, 198.0], [99.3, 200.0], [99.4, 203.0], [99.5, 205.0], [99.6, 209.0], [99.7, 215.0], [99.8, 220.0], [99.9, 228.0], [100.0, 251.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 3.0], [0.1, 8.0], [0.2, 10.0], [0.3, 10.0], [0.4, 11.0], [0.5, 11.0], [0.6, 11.0], [0.7, 11.0], [0.8, 12.0], [0.9, 12.0], [1.0, 12.0], [1.1, 12.0], [1.2, 12.0], [1.3, 12.0], [1.4, 12.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 13.0], [2.1, 13.0], [2.2, 13.0], [2.3, 14.0], [2.4, 14.0], [2.5, 14.0], [2.6, 14.0], [2.7, 14.0], [2.8, 14.0], [2.9, 14.0], [3.0, 14.0], [3.1, 14.0], [3.2, 15.0], [3.3, 15.0], [3.4, 15.0], [3.5, 15.0], [3.6, 15.0], [3.7, 15.0], [3.8, 15.0], [3.9, 15.0], [4.0, 15.0], [4.1, 16.0], [4.2, 16.0], [4.3, 16.0], [4.4, 16.0], [4.5, 16.0], [4.6, 16.0], [4.7, 16.0], [4.8, 17.0], [4.9, 17.0], [5.0, 17.0], [5.1, 17.0], [5.2, 17.0], [5.3, 17.0], [5.4, 17.0], [5.5, 17.0], [5.6, 17.0], [5.7, 17.0], [5.8, 17.0], [5.9, 17.0], [6.0, 17.0], [6.1, 18.0], [6.2, 18.0], [6.3, 18.0], [6.4, 18.0], [6.5, 18.0], [6.6, 18.0], [6.7, 18.0], [6.8, 18.0], [6.9, 18.0], [7.0, 18.0], [7.1, 18.0], [7.2, 18.0], [7.3, 18.0], [7.4, 18.0], [7.5, 18.0], [7.6, 18.0], [7.7, 18.0], [7.8, 18.0], [7.9, 18.0], [8.0, 18.0], [8.1, 19.0], [8.2, 19.0], [8.3, 19.0], [8.4, 19.0], [8.5, 19.0], [8.6, 19.0], [8.7, 19.0], [8.8, 19.0], [8.9, 19.0], [9.0, 19.0], [9.1, 19.0], [9.2, 19.0], [9.3, 19.0], [9.4, 19.0], [9.5, 19.0], [9.6, 19.0], [9.7, 19.0], [9.8, 19.0], [9.9, 19.0], [10.0, 19.0], [10.1, 19.0], [10.2, 20.0], [10.3, 20.0], [10.4, 20.0], [10.5, 20.0], [10.6, 20.0], [10.7, 20.0], [10.8, 20.0], [10.9, 20.0], [11.0, 20.0], [11.1, 20.0], [11.2, 20.0], [11.3, 20.0], [11.4, 20.0], [11.5, 20.0], [11.6, 20.0], [11.7, 20.0], [11.8, 20.0], [11.9, 20.0], [12.0, 20.0], [12.1, 20.0], [12.2, 20.0], [12.3, 20.0], [12.4, 20.0], [12.5, 20.0], [12.6, 20.0], [12.7, 20.0], [12.8, 21.0], [12.9, 21.0], [13.0, 21.0], [13.1, 21.0], [13.2, 21.0], [13.3, 21.0], [13.4, 21.0], [13.5, 21.0], [13.6, 21.0], [13.7, 21.0], [13.8, 21.0], [13.9, 21.0], [14.0, 21.0], [14.1, 21.0], [14.2, 21.0], [14.3, 21.0], [14.4, 21.0], [14.5, 21.0], [14.6, 21.0], [14.7, 21.0], [14.8, 21.0], [14.9, 21.0], [15.0, 21.0], [15.1, 21.0], [15.2, 21.0], [15.3, 21.0], [15.4, 21.0], [15.5, 22.0], [15.6, 22.0], [15.7, 22.0], [15.8, 22.0], [15.9, 22.0], [16.0, 22.0], [16.1, 22.0], [16.2, 22.0], [16.3, 22.0], [16.4, 22.0], [16.5, 22.0], [16.6, 22.0], [16.7, 22.0], [16.8, 22.0], [16.9, 22.0], [17.0, 22.0], [17.1, 22.0], [17.2, 22.0], [17.3, 22.0], [17.4, 22.0], [17.5, 22.0], [17.6, 22.0], [17.7, 22.0], [17.8, 23.0], [17.9, 23.0], [18.0, 23.0], [18.1, 23.0], [18.2, 23.0], [18.3, 23.0], [18.4, 23.0], [18.5, 23.0], [18.6, 23.0], [18.7, 23.0], [18.8, 23.0], [18.9, 23.0], [19.0, 23.0], [19.1, 23.0], [19.2, 23.0], [19.3, 23.0], [19.4, 23.0], [19.5, 23.0], [19.6, 23.0], [19.7, 23.0], [19.8, 23.0], [19.9, 23.0], [20.0, 23.0], [20.1, 23.0], [20.2, 24.0], [20.3, 24.0], [20.4, 24.0], [20.5, 24.0], [20.6, 24.0], [20.7, 24.0], [20.8, 24.0], [20.9, 24.0], [21.0, 24.0], [21.1, 24.0], [21.2, 24.0], [21.3, 24.0], [21.4, 24.0], [21.5, 24.0], [21.6, 24.0], [21.7, 24.0], [21.8, 24.0], [21.9, 24.0], [22.0, 25.0], [22.1, 25.0], [22.2, 25.0], [22.3, 25.0], [22.4, 25.0], [22.5, 25.0], [22.6, 25.0], [22.7, 25.0], [22.8, 25.0], [22.9, 25.0], [23.0, 25.0], [23.1, 25.0], [23.2, 25.0], [23.3, 25.0], [23.4, 25.0], [23.5, 25.0], [23.6, 25.0], [23.7, 25.0], [23.8, 25.0], [23.9, 25.0], [24.0, 25.0], [24.1, 26.0], [24.2, 26.0], [24.3, 26.0], [24.4, 26.0], [24.5, 26.0], [24.6, 26.0], [24.7, 26.0], [24.8, 26.0], [24.9, 26.0], [25.0, 26.0], [25.1, 26.0], [25.2, 26.0], [25.3, 26.0], [25.4, 26.0], [25.5, 26.0], [25.6, 26.0], [25.7, 26.0], [25.8, 26.0], [25.9, 26.0], [26.0, 26.0], [26.1, 26.0], [26.2, 26.0], [26.3, 26.0], [26.4, 26.0], [26.5, 26.0], [26.6, 26.0], [26.7, 26.0], [26.8, 27.0], [26.9, 27.0], [27.0, 27.0], [27.1, 27.0], [27.2, 27.0], [27.3, 27.0], [27.4, 27.0], [27.5, 27.0], [27.6, 27.0], [27.7, 27.0], [27.8, 27.0], [27.9, 27.0], [28.0, 27.0], [28.1, 27.0], [28.2, 27.0], [28.3, 27.0], [28.4, 27.0], [28.5, 27.0], [28.6, 27.0], [28.7, 27.0], [28.8, 27.0], [28.9, 28.0], [29.0, 28.0], [29.1, 28.0], [29.2, 28.0], [29.3, 28.0], [29.4, 28.0], [29.5, 28.0], [29.6, 28.0], [29.7, 28.0], [29.8, 28.0], [29.9, 28.0], [30.0, 28.0], [30.1, 28.0], [30.2, 28.0], [30.3, 28.0], [30.4, 28.0], [30.5, 28.0], [30.6, 28.0], [30.7, 28.0], [30.8, 28.0], [30.9, 28.0], [31.0, 28.0], [31.1, 29.0], [31.2, 29.0], [31.3, 29.0], [31.4, 29.0], [31.5, 29.0], [31.6, 29.0], [31.7, 29.0], [31.8, 29.0], [31.9, 29.0], [32.0, 29.0], [32.1, 29.0], [32.2, 29.0], [32.3, 29.0], [32.4, 29.0], [32.5, 29.0], [32.6, 29.0], [32.7, 29.0], [32.8, 29.0], [32.9, 29.0], [33.0, 29.0], [33.1, 29.0], [33.2, 30.0], [33.3, 30.0], [33.4, 30.0], [33.5, 30.0], [33.6, 30.0], [33.7, 30.0], [33.8, 30.0], [33.9, 30.0], [34.0, 30.0], [34.1, 30.0], [34.2, 30.0], [34.3, 30.0], [34.4, 30.0], [34.5, 30.0], [34.6, 30.0], [34.7, 30.0], [34.8, 31.0], [34.9, 31.0], [35.0, 31.0], [35.1, 31.0], [35.2, 31.0], [35.3, 31.0], [35.4, 31.0], [35.5, 31.0], [35.6, 31.0], [35.7, 31.0], [35.8, 31.0], [35.9, 31.0], [36.0, 31.0], [36.1, 31.0], [36.2, 31.0], [36.3, 32.0], [36.4, 32.0], [36.5, 32.0], [36.6, 32.0], [36.7, 32.0], [36.8, 32.0], [36.9, 32.0], [37.0, 32.0], [37.1, 32.0], [37.2, 32.0], [37.3, 32.0], [37.4, 33.0], [37.5, 33.0], [37.6, 33.0], [37.7, 33.0], [37.8, 33.0], [37.9, 33.0], [38.0, 33.0], [38.1, 33.0], [38.2, 33.0], [38.3, 34.0], [38.4, 34.0], [38.5, 34.0], [38.6, 34.0], [38.7, 34.0], [38.8, 34.0], [38.9, 34.0], [39.0, 34.0], [39.1, 34.0], [39.2, 34.0], [39.3, 35.0], [39.4, 35.0], [39.5, 35.0], [39.6, 35.0], [39.7, 35.0], [39.8, 35.0], [39.9, 36.0], [40.0, 36.0], [40.1, 36.0], [40.2, 36.0], [40.3, 36.0], [40.4, 36.0], [40.5, 36.0], [40.6, 37.0], [40.7, 37.0], [40.8, 37.0], [40.9, 37.0], [41.0, 37.0], [41.1, 37.0], [41.2, 37.0], [41.3, 38.0], [41.4, 38.0], [41.5, 38.0], [41.6, 38.0], [41.7, 39.0], [41.8, 39.0], [41.9, 39.0], [42.0, 39.0], [42.1, 40.0], [42.2, 40.0], [42.3, 40.0], [42.4, 41.0], [42.5, 41.0], [42.6, 41.0], [42.7, 42.0], [42.8, 42.0], [42.9, 42.0], [43.0, 43.0], [43.1, 43.0], [43.2, 43.0], [43.3, 44.0], [43.4, 44.0], [43.5, 44.0], [43.6, 45.0], [43.7, 45.0], [43.8, 46.0], [43.9, 47.0], [44.0, 47.0], [44.1, 49.0], [44.2, 51.0], [44.3, 52.0], [44.4, 54.0], [44.5, 55.0], [44.6, 57.0], [44.7, 60.0], [44.8, 60.0], [44.9, 62.0], [45.0, 63.0], [45.1, 66.0], [45.2, 68.0], [45.3, 70.0], [45.4, 71.0], [45.5, 73.0], [45.6, 73.0], [45.7, 75.0], [45.8, 76.0], [45.9, 77.0], [46.0, 79.0], [46.1, 79.0], [46.2, 80.0], [46.3, 81.0], [46.4, 82.0], [46.5, 83.0], [46.6, 85.0], [46.7, 86.0], [46.8, 87.0], [46.9, 88.0], [47.0, 89.0], [47.1, 90.0], [47.2, 92.0], [47.3, 93.0], [47.4, 94.0], [47.5, 96.0], [47.6, 97.0], [47.7, 99.0], [47.8, 100.0], [47.9, 101.0], [48.0, 103.0], [48.1, 104.0], [48.2, 107.0], [48.3, 109.0], [48.4, 114.0], [48.5, 116.0], [48.6, 120.0], [48.7, 123.0], [48.8, 125.0], [48.9, 127.0], [49.0, 130.0], [49.1, 133.0], [49.2, 139.0], [49.3, 145.0], [49.4, 148.0], [49.5, 150.0], [49.6, 156.0], [49.7, 160.0], [49.8, 164.0], [49.9, 166.0], [50.0, 171.0], [50.1, 174.0], [50.2, 179.0], [50.3, 182.0], [50.4, 187.0], [50.5, 191.0], [50.6, 197.0], [50.7, 200.0], [50.8, 203.0], [50.9, 208.0], [51.0, 217.0], [51.1, 227.0], [51.2, 233.0], [51.3, 236.0], [51.4, 238.0], [51.5, 240.0], [51.6, 242.0], [51.7, 245.0], [51.8, 247.0], [51.9, 249.0], [52.0, 252.0], [52.1, 255.0], [52.2, 256.0], [52.3, 257.0], [52.4, 258.0], [52.5, 261.0], [52.6, 262.0], [52.7, 263.0], [52.8, 265.0], [52.9, 267.0], [53.0, 270.0], [53.1, 271.0], [53.2, 273.0], [53.3, 277.0], [53.4, 279.0], [53.5, 280.0], [53.6, 282.0], [53.7, 284.0], [53.8, 285.0], [53.9, 287.0], [54.0, 288.0], [54.1, 289.0], [54.2, 292.0], [54.3, 294.0], [54.4, 297.0], [54.5, 300.0], [54.6, 301.0], [54.7, 304.0], [54.8, 305.0], [54.9, 307.0], [55.0, 309.0], [55.1, 310.0], [55.2, 312.0], [55.3, 314.0], [55.4, 315.0], [55.5, 316.0], [55.6, 318.0], [55.7, 319.0], [55.8, 320.0], [55.9, 322.0], [56.0, 323.0], [56.1, 324.0], [56.2, 326.0], [56.3, 328.0], [56.4, 329.0], [56.5, 331.0], [56.6, 333.0], [56.7, 335.0], [56.8, 337.0], [56.9, 340.0], [57.0, 340.0], [57.1, 342.0], [57.2, 343.0], [57.3, 345.0], [57.4, 346.0], [57.5, 347.0], [57.6, 349.0], [57.7, 351.0], [57.8, 352.0], [57.9, 354.0], [58.0, 355.0], [58.1, 356.0], [58.2, 358.0], [58.3, 360.0], [58.4, 361.0], [58.5, 363.0], [58.6, 365.0], [58.7, 367.0], [58.8, 368.0], [58.9, 369.0], [59.0, 370.0], [59.1, 371.0], [59.2, 372.0], [59.3, 373.0], [59.4, 374.0], [59.5, 375.0], [59.6, 375.0], [59.7, 376.0], [59.8, 377.0], [59.9, 378.0], [60.0, 378.0], [60.1, 379.0], [60.2, 380.0], [60.3, 381.0], [60.4, 382.0], [60.5, 382.0], [60.6, 383.0], [60.7, 384.0], [60.8, 385.0], [60.9, 386.0], [61.0, 387.0], [61.1, 387.0], [61.2, 388.0], [61.3, 390.0], [61.4, 391.0], [61.5, 391.0], [61.6, 392.0], [61.7, 393.0], [61.8, 395.0], [61.9, 396.0], [62.0, 397.0], [62.1, 398.0], [62.2, 400.0], [62.3, 401.0], [62.4, 402.0], [62.5, 403.0], [62.6, 403.0], [62.7, 404.0], [62.8, 405.0], [62.9, 407.0], [63.0, 408.0], [63.1, 408.0], [63.2, 409.0], [63.3, 410.0], [63.4, 411.0], [63.5, 413.0], [63.6, 414.0], [63.7, 415.0], [63.8, 416.0], [63.9, 417.0], [64.0, 418.0], [64.1, 418.0], [64.2, 419.0], [64.3, 419.0], [64.4, 420.0], [64.5, 421.0], [64.6, 421.0], [64.7, 423.0], [64.8, 423.0], [64.9, 424.0], [65.0, 425.0], [65.1, 427.0], [65.2, 429.0], [65.3, 430.0], [65.4, 431.0], [65.5, 432.0], [65.6, 433.0], [65.7, 434.0], [65.8, 435.0], [65.9, 436.0], [66.0, 437.0], [66.1, 437.0], [66.2, 438.0], [66.3, 439.0], [66.4, 440.0], [66.5, 441.0], [66.6, 441.0], [66.7, 442.0], [66.8, 443.0], [66.9, 444.0], [67.0, 445.0], [67.1, 446.0], [67.2, 447.0], [67.3, 448.0], [67.4, 449.0], [67.5, 450.0], [67.6, 451.0], [67.7, 452.0], [67.8, 452.0], [67.9, 453.0], [68.0, 454.0], [68.1, 456.0], [68.2, 456.0], [68.3, 457.0], [68.4, 458.0], [68.5, 459.0], [68.6, 460.0], [68.7, 461.0], [68.8, 463.0], [68.9, 464.0], [69.0, 464.0], [69.1, 465.0], [69.2, 466.0], [69.3, 466.0], [69.4, 467.0], [69.5, 468.0], [69.6, 468.0], [69.7, 469.0], [69.8, 470.0], [69.9, 471.0], [70.0, 471.0], [70.1, 472.0], [70.2, 473.0], [70.3, 474.0], [70.4, 475.0], [70.5, 476.0], [70.6, 477.0], [70.7, 477.0], [70.8, 478.0], [70.9, 479.0], [71.0, 480.0], [71.1, 481.0], [71.2, 482.0], [71.3, 483.0], [71.4, 484.0], [71.5, 485.0], [71.6, 486.0], [71.7, 487.0], [71.8, 488.0], [71.9, 489.0], [72.0, 489.0], [72.1, 490.0], [72.2, 491.0], [72.3, 492.0], [72.4, 493.0], [72.5, 494.0], [72.6, 495.0], [72.7, 495.0], [72.8, 496.0], [72.9, 497.0], [73.0, 497.0], [73.1, 498.0], [73.2, 499.0], [73.3, 499.0], [73.4, 500.0], [73.5, 501.0], [73.6, 502.0], [73.7, 503.0], [73.8, 503.0], [73.9, 504.0], [74.0, 506.0], [74.1, 506.0], [74.2, 507.0], [74.3, 508.0], [74.4, 509.0], [74.5, 510.0], [74.6, 511.0], [74.7, 512.0], [74.8, 513.0], [74.9, 514.0], [75.0, 515.0], [75.1, 516.0], [75.2, 517.0], [75.3, 518.0], [75.4, 520.0], [75.5, 521.0], [75.6, 522.0], [75.7, 523.0], [75.8, 524.0], [75.9, 525.0], [76.0, 526.0], [76.1, 527.0], [76.2, 528.0], [76.3, 529.0], [76.4, 529.0], [76.5, 530.0], [76.6, 531.0], [76.7, 532.0], [76.8, 532.0], [76.9, 533.0], [77.0, 534.0], [77.1, 534.0], [77.2, 535.0], [77.3, 536.0], [77.4, 536.0], [77.5, 537.0], [77.6, 538.0], [77.7, 539.0], [77.8, 540.0], [77.9, 540.0], [78.0, 541.0], [78.1, 542.0], [78.2, 542.0], [78.3, 543.0], [78.4, 544.0], [78.5, 545.0], [78.6, 546.0], [78.7, 546.0], [78.8, 547.0], [78.9, 548.0], [79.0, 549.0], [79.1, 549.0], [79.2, 550.0], [79.3, 551.0], [79.4, 551.0], [79.5, 552.0], [79.6, 553.0], [79.7, 554.0], [79.8, 555.0], [79.9, 556.0], [80.0, 557.0], [80.1, 557.0], [80.2, 558.0], [80.3, 559.0], [80.4, 560.0], [80.5, 561.0], [80.6, 562.0], [80.7, 563.0], [80.8, 563.0], [80.9, 564.0], [81.0, 565.0], [81.1, 566.0], [81.2, 567.0], [81.3, 568.0], [81.4, 569.0], [81.5, 569.0], [81.6, 570.0], [81.7, 571.0], [81.8, 573.0], [81.9, 574.0], [82.0, 575.0], [82.1, 576.0], [82.2, 577.0], [82.3, 578.0], [82.4, 579.0], [82.5, 579.0], [82.6, 581.0], [82.7, 582.0], [82.8, 582.0], [82.9, 582.0], [83.0, 583.0], [83.1, 584.0], [83.2, 584.0], [83.3, 584.0], [83.4, 585.0], [83.5, 586.0], [83.6, 586.0], [83.7, 587.0], [83.8, 588.0], [83.9, 588.0], [84.0, 589.0], [84.1, 589.0], [84.2, 590.0], [84.3, 591.0], [84.4, 592.0], [84.5, 593.0], [84.6, 593.0], [84.7, 594.0], [84.8, 595.0], [84.9, 595.0], [85.0, 596.0], [85.1, 597.0], [85.2, 597.0], [85.3, 597.0], [85.4, 598.0], [85.5, 598.0], [85.6, 599.0], [85.7, 599.0], [85.8, 600.0], [85.9, 600.0], [86.0, 601.0], [86.1, 602.0], [86.2, 602.0], [86.3, 603.0], [86.4, 603.0], [86.5, 604.0], [86.6, 604.0], [86.7, 605.0], [86.8, 605.0], [86.9, 606.0], [87.0, 607.0], [87.1, 608.0], [87.2, 608.0], [87.3, 609.0], [87.4, 609.0], [87.5, 609.0], [87.6, 610.0], [87.7, 611.0], [87.8, 612.0], [87.9, 612.0], [88.0, 613.0], [88.1, 614.0], [88.2, 614.0], [88.3, 615.0], [88.4, 615.0], [88.5, 616.0], [88.6, 617.0], [88.7, 618.0], [88.8, 618.0], [88.9, 619.0], [89.0, 620.0], [89.1, 620.0], [89.2, 621.0], [89.3, 621.0], [89.4, 622.0], [89.5, 623.0], [89.6, 623.0], [89.7, 624.0], [89.8, 625.0], [89.9, 626.0], [90.0, 626.0], [90.1, 627.0], [90.2, 628.0], [90.3, 629.0], [90.4, 630.0], [90.5, 630.0], [90.6, 631.0], [90.7, 632.0], [90.8, 633.0], [90.9, 633.0], [91.0, 634.0], [91.1, 636.0], [91.2, 636.0], [91.3, 637.0], [91.4, 638.0], [91.5, 639.0], [91.6, 640.0], [91.7, 641.0], [91.8, 642.0], [91.9, 643.0], [92.0, 644.0], [92.1, 645.0], [92.2, 646.0], [92.3, 647.0], [92.4, 648.0], [92.5, 649.0], [92.6, 650.0], [92.7, 651.0], [92.8, 652.0], [92.9, 653.0], [93.0, 655.0], [93.1, 656.0], [93.2, 658.0], [93.3, 659.0], [93.4, 659.0], [93.5, 660.0], [93.6, 660.0], [93.7, 661.0], [93.8, 662.0], [93.9, 663.0], [94.0, 663.0], [94.1, 664.0], [94.2, 665.0], [94.3, 666.0], [94.4, 667.0], [94.5, 668.0], [94.6, 669.0], [94.7, 670.0], [94.8, 671.0], [94.9, 673.0], [95.0, 674.0], [95.1, 675.0], [95.2, 677.0], [95.3, 678.0], [95.4, 679.0], [95.5, 680.0], [95.6, 681.0], [95.7, 683.0], [95.8, 685.0], [95.9, 685.0], [96.0, 689.0], [96.1, 690.0], [96.2, 692.0], [96.3, 694.0], [96.4, 696.0], [96.5, 697.0], [96.6, 699.0], [96.7, 701.0], [96.8, 703.0], [96.9, 705.0], [97.0, 708.0], [97.1, 709.0], [97.2, 710.0], [97.3, 712.0], [97.4, 714.0], [97.5, 715.0], [97.6, 718.0], [97.7, 720.0], [97.8, 724.0], [97.9, 726.0], [98.0, 729.0], [98.1, 734.0], [98.2, 739.0], [98.3, 743.0], [98.4, 747.0], [98.5, 751.0], [98.6, 758.0], [98.7, 765.0], [98.8, 769.0], [98.9, 773.0], [99.0, 777.0], [99.1, 783.0], [99.2, 789.0], [99.3, 806.0], [99.4, 821.0], [99.5, 829.0], [99.6, 842.0], [99.7, 860.0], [99.8, 877.0], [99.9, 887.0], [100.0, 899.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 4.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 5.0], [1.1, 5.0], [1.2, 5.0], [1.3, 6.0], [1.4, 6.0], [1.5, 7.0], [1.6, 8.0], [1.7, 8.0], [1.8, 9.0], [1.9, 10.0], [2.0, 10.0], [2.1, 12.0], [2.2, 13.0], [2.3, 14.0], [2.4, 15.0], [2.5, 15.0], [2.6, 16.0], [2.7, 17.0], [2.8, 17.0], [2.9, 18.0], [3.0, 19.0], [3.1, 19.0], [3.2, 20.0], [3.3, 21.0], [3.4, 22.0], [3.5, 22.0], [3.6, 23.0], [3.7, 23.0], [3.8, 24.0], [3.9, 24.0], [4.0, 25.0], [4.1, 25.0], [4.2, 26.0], [4.3, 26.0], [4.4, 26.0], [4.5, 27.0], [4.6, 27.0], [4.7, 27.0], [4.8, 27.0], [4.9, 28.0], [5.0, 28.0], [5.1, 28.0], [5.2, 28.0], [5.3, 29.0], [5.4, 29.0], [5.5, 29.0], [5.6, 29.0], [5.7, 29.0], [5.8, 29.0], [5.9, 30.0], [6.0, 30.0], [6.1, 30.0], [6.2, 30.0], [6.3, 30.0], [6.4, 30.0], [6.5, 31.0], [6.6, 31.0], [6.7, 31.0], [6.8, 31.0], [6.9, 31.0], [7.0, 31.0], [7.1, 32.0], [7.2, 32.0], [7.3, 32.0], [7.4, 32.0], [7.5, 32.0], [7.6, 32.0], [7.7, 32.0], [7.8, 32.0], [7.9, 33.0], [8.0, 33.0], [8.1, 33.0], [8.2, 33.0], [8.3, 33.0], [8.4, 33.0], [8.5, 33.0], [8.6, 33.0], [8.7, 33.0], [8.8, 34.0], [8.9, 34.0], [9.0, 34.0], [9.1, 34.0], [9.2, 34.0], [9.3, 34.0], [9.4, 34.0], [9.5, 34.0], [9.6, 34.0], [9.7, 34.0], [9.8, 34.0], [9.9, 34.0], [10.0, 34.0], [10.1, 34.0], [10.2, 34.0], [10.3, 34.0], [10.4, 35.0], [10.5, 35.0], [10.6, 35.0], [10.7, 35.0], [10.8, 35.0], [10.9, 35.0], [11.0, 35.0], [11.1, 35.0], [11.2, 35.0], [11.3, 35.0], [11.4, 35.0], [11.5, 35.0], [11.6, 35.0], [11.7, 35.0], [11.8, 35.0], [11.9, 35.0], [12.0, 35.0], [12.1, 35.0], [12.2, 35.0], [12.3, 35.0], [12.4, 35.0], [12.5, 35.0], [12.6, 35.0], [12.7, 35.0], [12.8, 35.0], [12.9, 35.0], [13.0, 36.0], [13.1, 36.0], [13.2, 36.0], [13.3, 36.0], [13.4, 36.0], [13.5, 36.0], [13.6, 36.0], [13.7, 36.0], [13.8, 36.0], [13.9, 36.0], [14.0, 36.0], [14.1, 36.0], [14.2, 36.0], [14.3, 36.0], [14.4, 36.0], [14.5, 36.0], [14.6, 36.0], [14.7, 36.0], [14.8, 36.0], [14.9, 36.0], [15.0, 36.0], [15.1, 36.0], [15.2, 36.0], [15.3, 37.0], [15.4, 37.0], [15.5, 37.0], [15.6, 37.0], [15.7, 37.0], [15.8, 37.0], [15.9, 37.0], [16.0, 37.0], [16.1, 37.0], [16.2, 37.0], [16.3, 37.0], [16.4, 37.0], [16.5, 37.0], [16.6, 37.0], [16.7, 37.0], [16.8, 37.0], [16.9, 37.0], [17.0, 37.0], [17.1, 37.0], [17.2, 37.0], [17.3, 37.0], [17.4, 37.0], [17.5, 37.0], [17.6, 37.0], [17.7, 37.0], [17.8, 37.0], [17.9, 38.0], [18.0, 38.0], [18.1, 38.0], [18.2, 38.0], [18.3, 38.0], [18.4, 38.0], [18.5, 38.0], [18.6, 38.0], [18.7, 38.0], [18.8, 38.0], [18.9, 38.0], [19.0, 38.0], [19.1, 38.0], [19.2, 38.0], [19.3, 38.0], [19.4, 38.0], [19.5, 38.0], [19.6, 38.0], [19.7, 38.0], [19.8, 38.0], [19.9, 38.0], [20.0, 38.0], [20.1, 38.0], [20.2, 38.0], [20.3, 38.0], [20.4, 38.0], [20.5, 38.0], [20.6, 38.0], [20.7, 38.0], [20.8, 38.0], [20.9, 38.0], [21.0, 38.0], [21.1, 39.0], [21.2, 39.0], [21.3, 39.0], [21.4, 39.0], [21.5, 39.0], [21.6, 39.0], [21.7, 39.0], [21.8, 39.0], [21.9, 39.0], [22.0, 39.0], [22.1, 39.0], [22.2, 39.0], [22.3, 39.0], [22.4, 39.0], [22.5, 39.0], [22.6, 39.0], [22.7, 39.0], [22.8, 39.0], [22.9, 39.0], [23.0, 39.0], [23.1, 39.0], [23.2, 39.0], [23.3, 39.0], [23.4, 39.0], [23.5, 39.0], [23.6, 39.0], [23.7, 39.0], [23.8, 39.0], [23.9, 39.0], [24.0, 39.0], [24.1, 39.0], [24.2, 39.0], [24.3, 39.0], [24.4, 39.0], [24.5, 40.0], [24.6, 40.0], [24.7, 40.0], [24.8, 40.0], [24.9, 40.0], [25.0, 40.0], [25.1, 40.0], [25.2, 40.0], [25.3, 40.0], [25.4, 40.0], [25.5, 40.0], [25.6, 40.0], [25.7, 40.0], [25.8, 40.0], [25.9, 40.0], [26.0, 40.0], [26.1, 40.0], [26.2, 40.0], [26.3, 40.0], [26.4, 40.0], [26.5, 40.0], [26.6, 40.0], [26.7, 40.0], [26.8, 40.0], [26.9, 40.0], [27.0, 40.0], [27.1, 40.0], [27.2, 40.0], [27.3, 40.0], [27.4, 40.0], [27.5, 40.0], [27.6, 40.0], [27.7, 40.0], [27.8, 40.0], [27.9, 40.0], [28.0, 40.0], [28.1, 40.0], [28.2, 40.0], [28.3, 40.0], [28.4, 40.0], [28.5, 41.0], [28.6, 41.0], [28.7, 41.0], [28.8, 41.0], [28.9, 41.0], [29.0, 41.0], [29.1, 41.0], [29.2, 41.0], [29.3, 41.0], [29.4, 41.0], [29.5, 41.0], [29.6, 41.0], [29.7, 41.0], [29.8, 41.0], [29.9, 41.0], [30.0, 41.0], [30.1, 41.0], [30.2, 41.0], [30.3, 41.0], [30.4, 41.0], [30.5, 41.0], [30.6, 41.0], [30.7, 41.0], [30.8, 41.0], [30.9, 41.0], [31.0, 41.0], [31.1, 41.0], [31.2, 41.0], [31.3, 41.0], [31.4, 41.0], [31.5, 41.0], [31.6, 41.0], [31.7, 41.0], [31.8, 41.0], [31.9, 41.0], [32.0, 41.0], [32.1, 41.0], [32.2, 41.0], [32.3, 42.0], [32.4, 42.0], [32.5, 42.0], [32.6, 42.0], [32.7, 42.0], [32.8, 42.0], [32.9, 42.0], [33.0, 42.0], [33.1, 42.0], [33.2, 42.0], [33.3, 42.0], [33.4, 42.0], [33.5, 42.0], [33.6, 42.0], [33.7, 42.0], [33.8, 42.0], [33.9, 42.0], [34.0, 42.0], [34.1, 42.0], [34.2, 42.0], [34.3, 42.0], [34.4, 42.0], [34.5, 42.0], [34.6, 42.0], [34.7, 42.0], [34.8, 42.0], [34.9, 42.0], [35.0, 42.0], [35.1, 42.0], [35.2, 42.0], [35.3, 42.0], [35.4, 42.0], [35.5, 42.0], [35.6, 42.0], [35.7, 42.0], [35.8, 42.0], [35.9, 42.0], [36.0, 42.0], [36.1, 42.0], [36.2, 42.0], [36.3, 43.0], [36.4, 43.0], [36.5, 43.0], [36.6, 43.0], [36.7, 43.0], [36.8, 43.0], [36.9, 43.0], [37.0, 43.0], [37.1, 43.0], [37.2, 43.0], [37.3, 43.0], [37.4, 43.0], [37.5, 43.0], [37.6, 43.0], [37.7, 43.0], [37.8, 43.0], [37.9, 43.0], [38.0, 43.0], [38.1, 43.0], [38.2, 43.0], [38.3, 43.0], [38.4, 43.0], [38.5, 43.0], [38.6, 43.0], [38.7, 43.0], [38.8, 43.0], [38.9, 43.0], [39.0, 43.0], [39.1, 43.0], [39.2, 43.0], [39.3, 43.0], [39.4, 43.0], [39.5, 43.0], [39.6, 43.0], [39.7, 43.0], [39.8, 43.0], [39.9, 43.0], [40.0, 43.0], [40.1, 43.0], [40.2, 43.0], [40.3, 43.0], [40.4, 44.0], [40.5, 44.0], [40.6, 44.0], [40.7, 44.0], [40.8, 44.0], [40.9, 44.0], [41.0, 44.0], [41.1, 44.0], [41.2, 44.0], [41.3, 44.0], [41.4, 44.0], [41.5, 44.0], [41.6, 44.0], [41.7, 44.0], [41.8, 44.0], [41.9, 44.0], [42.0, 44.0], [42.1, 44.0], [42.2, 44.0], [42.3, 44.0], [42.4, 44.0], [42.5, 44.0], [42.6, 44.0], [42.7, 44.0], [42.8, 44.0], [42.9, 44.0], [43.0, 44.0], [43.1, 44.0], [43.2, 44.0], [43.3, 44.0], [43.4, 44.0], [43.5, 44.0], [43.6, 44.0], [43.7, 44.0], [43.8, 44.0], [43.9, 44.0], [44.0, 44.0], [44.1, 44.0], [44.2, 44.0], [44.3, 45.0], [44.4, 45.0], [44.5, 45.0], [44.6, 45.0], [44.7, 45.0], [44.8, 45.0], [44.9, 45.0], [45.0, 45.0], [45.1, 45.0], [45.2, 45.0], [45.3, 45.0], [45.4, 45.0], [45.5, 45.0], [45.6, 45.0], [45.7, 45.0], [45.8, 45.0], [45.9, 45.0], [46.0, 45.0], [46.1, 45.0], [46.2, 45.0], [46.3, 45.0], [46.4, 45.0], [46.5, 45.0], [46.6, 45.0], [46.7, 45.0], [46.8, 45.0], [46.9, 45.0], [47.0, 45.0], [47.1, 45.0], [47.2, 45.0], [47.3, 45.0], [47.4, 45.0], [47.5, 45.0], [47.6, 45.0], [47.7, 45.0], [47.8, 45.0], [47.9, 45.0], [48.0, 45.0], [48.1, 45.0], [48.2, 45.0], [48.3, 45.0], [48.4, 45.0], [48.5, 46.0], [48.6, 46.0], [48.7, 46.0], [48.8, 46.0], [48.9, 46.0], [49.0, 46.0], [49.1, 46.0], [49.2, 46.0], [49.3, 46.0], [49.4, 46.0], [49.5, 46.0], [49.6, 46.0], [49.7, 46.0], [49.8, 46.0], [49.9, 46.0], [50.0, 46.0], [50.1, 46.0], [50.2, 46.0], [50.3, 46.0], [50.4, 46.0], [50.5, 46.0], [50.6, 46.0], [50.7, 46.0], [50.8, 46.0], [50.9, 46.0], [51.0, 46.0], [51.1, 46.0], [51.2, 46.0], [51.3, 46.0], [51.4, 46.0], [51.5, 46.0], [51.6, 46.0], [51.7, 46.0], [51.8, 46.0], [51.9, 46.0], [52.0, 46.0], [52.1, 46.0], [52.2, 46.0], [52.3, 46.0], [52.4, 46.0], [52.5, 47.0], [52.6, 47.0], [52.7, 47.0], [52.8, 47.0], [52.9, 47.0], [53.0, 47.0], [53.1, 47.0], [53.2, 47.0], [53.3, 47.0], [53.4, 47.0], [53.5, 47.0], [53.6, 47.0], [53.7, 47.0], [53.8, 47.0], [53.9, 47.0], [54.0, 47.0], [54.1, 47.0], [54.2, 47.0], [54.3, 47.0], [54.4, 47.0], [54.5, 47.0], [54.6, 47.0], [54.7, 47.0], [54.8, 47.0], [54.9, 47.0], [55.0, 47.0], [55.1, 47.0], [55.2, 47.0], [55.3, 47.0], [55.4, 47.0], [55.5, 47.0], [55.6, 47.0], [55.7, 47.0], [55.8, 47.0], [55.9, 47.0], [56.0, 47.0], [56.1, 47.0], [56.2, 47.0], [56.3, 47.0], [56.4, 47.0], [56.5, 47.0], [56.6, 48.0], [56.7, 48.0], [56.8, 48.0], [56.9, 48.0], [57.0, 48.0], [57.1, 48.0], [57.2, 48.0], [57.3, 48.0], [57.4, 48.0], [57.5, 48.0], [57.6, 48.0], [57.7, 48.0], [57.8, 48.0], [57.9, 48.0], [58.0, 48.0], [58.1, 48.0], [58.2, 48.0], [58.3, 48.0], [58.4, 48.0], [58.5, 48.0], [58.6, 48.0], [58.7, 48.0], [58.8, 48.0], [58.9, 48.0], [59.0, 48.0], [59.1, 48.0], [59.2, 48.0], [59.3, 48.0], [59.4, 48.0], [59.5, 48.0], [59.6, 48.0], [59.7, 48.0], [59.8, 48.0], [59.9, 48.0], [60.0, 48.0], [60.1, 49.0], [60.2, 49.0], [60.3, 49.0], [60.4, 49.0], [60.5, 49.0], [60.6, 49.0], [60.7, 49.0], [60.8, 49.0], [60.9, 49.0], [61.0, 49.0], [61.1, 49.0], [61.2, 49.0], [61.3, 49.0], [61.4, 49.0], [61.5, 49.0], [61.6, 49.0], [61.7, 49.0], [61.8, 49.0], [61.9, 49.0], [62.0, 49.0], [62.1, 49.0], [62.2, 49.0], [62.3, 49.0], [62.4, 49.0], [62.5, 49.0], [62.6, 49.0], [62.7, 49.0], [62.8, 49.0], [62.9, 49.0], [63.0, 49.0], [63.1, 49.0], [63.2, 49.0], [63.3, 49.0], [63.4, 49.0], [63.5, 49.0], [63.6, 50.0], [63.7, 50.0], [63.8, 50.0], [63.9, 50.0], [64.0, 50.0], [64.1, 50.0], [64.2, 50.0], [64.3, 50.0], [64.4, 50.0], [64.5, 50.0], [64.6, 50.0], [64.7, 50.0], [64.8, 50.0], [64.9, 50.0], [65.0, 50.0], [65.1, 50.0], [65.2, 50.0], [65.3, 50.0], [65.4, 50.0], [65.5, 50.0], [65.6, 50.0], [65.7, 50.0], [65.8, 50.0], [65.9, 50.0], [66.0, 50.0], [66.1, 50.0], [66.2, 50.0], [66.3, 50.0], [66.4, 50.0], [66.5, 50.0], [66.6, 50.0], [66.7, 50.0], [66.8, 50.0], [66.9, 50.0], [67.0, 51.0], [67.1, 51.0], [67.2, 51.0], [67.3, 51.0], [67.4, 51.0], [67.5, 51.0], [67.6, 51.0], [67.7, 51.0], [67.8, 51.0], [67.9, 51.0], [68.0, 51.0], [68.1, 51.0], [68.2, 51.0], [68.3, 51.0], [68.4, 51.0], [68.5, 51.0], [68.6, 51.0], [68.7, 51.0], [68.8, 51.0], [68.9, 51.0], [69.0, 51.0], [69.1, 51.0], [69.2, 51.0], [69.3, 51.0], [69.4, 51.0], [69.5, 51.0], [69.6, 51.0], [69.7, 52.0], [69.8, 52.0], [69.9, 52.0], [70.0, 52.0], [70.1, 52.0], [70.2, 52.0], [70.3, 52.0], [70.4, 52.0], [70.5, 52.0], [70.6, 52.0], [70.7, 52.0], [70.8, 52.0], [70.9, 52.0], [71.0, 52.0], [71.1, 52.0], [71.2, 52.0], [71.3, 52.0], [71.4, 52.0], [71.5, 52.0], [71.6, 52.0], [71.7, 52.0], [71.8, 52.0], [71.9, 52.0], [72.0, 52.0], [72.1, 52.0], [72.2, 52.0], [72.3, 52.0], [72.4, 52.0], [72.5, 52.0], [72.6, 53.0], [72.7, 53.0], [72.8, 53.0], [72.9, 53.0], [73.0, 53.0], [73.1, 53.0], [73.2, 53.0], [73.3, 53.0], [73.4, 53.0], [73.5, 53.0], [73.6, 53.0], [73.7, 53.0], [73.8, 53.0], [73.9, 53.0], [74.0, 53.0], [74.1, 53.0], [74.2, 53.0], [74.3, 53.0], [74.4, 53.0], [74.5, 53.0], [74.6, 53.0], [74.7, 53.0], [74.8, 53.0], [74.9, 53.0], [75.0, 53.0], [75.1, 53.0], [75.2, 53.0], [75.3, 54.0], [75.4, 54.0], [75.5, 54.0], [75.6, 54.0], [75.7, 54.0], [75.8, 54.0], [75.9, 54.0], [76.0, 54.0], [76.1, 54.0], [76.2, 54.0], [76.3, 54.0], [76.4, 54.0], [76.5, 54.0], [76.6, 54.0], [76.7, 54.0], [76.8, 54.0], [76.9, 54.0], [77.0, 54.0], [77.1, 54.0], [77.2, 54.0], [77.3, 54.0], [77.4, 54.0], [77.5, 54.0], [77.6, 54.0], [77.7, 54.0], [77.8, 54.0], [77.9, 55.0], [78.0, 55.0], [78.1, 55.0], [78.2, 55.0], [78.3, 55.0], [78.4, 55.0], [78.5, 55.0], [78.6, 55.0], [78.7, 55.0], [78.8, 55.0], [78.9, 55.0], [79.0, 55.0], [79.1, 55.0], [79.2, 55.0], [79.3, 55.0], [79.4, 55.0], [79.5, 55.0], [79.6, 55.0], [79.7, 55.0], [79.8, 55.0], [79.9, 55.0], [80.0, 56.0], [80.1, 56.0], [80.2, 56.0], [80.3, 56.0], [80.4, 56.0], [80.5, 56.0], [80.6, 56.0], [80.7, 56.0], [80.8, 56.0], [80.9, 56.0], [81.0, 56.0], [81.1, 56.0], [81.2, 56.0], [81.3, 56.0], [81.4, 56.0], [81.5, 56.0], [81.6, 56.0], [81.7, 56.0], [81.8, 56.0], [81.9, 56.0], [82.0, 56.0], [82.1, 57.0], [82.2, 57.0], [82.3, 57.0], [82.4, 57.0], [82.5, 57.0], [82.6, 57.0], [82.7, 57.0], [82.8, 57.0], [82.9, 57.0], [83.0, 57.0], [83.1, 57.0], [83.2, 57.0], [83.3, 57.0], [83.4, 57.0], [83.5, 57.0], [83.6, 57.0], [83.7, 57.0], [83.8, 57.0], [83.9, 57.0], [84.0, 57.0], [84.1, 58.0], [84.2, 58.0], [84.3, 58.0], [84.4, 58.0], [84.5, 58.0], [84.6, 58.0], [84.7, 58.0], [84.8, 58.0], [84.9, 58.0], [85.0, 58.0], [85.1, 58.0], [85.2, 58.0], [85.3, 58.0], [85.4, 58.0], [85.5, 58.0], [85.6, 58.0], [85.7, 59.0], [85.8, 59.0], [85.9, 59.0], [86.0, 59.0], [86.1, 59.0], [86.2, 59.0], [86.3, 59.0], [86.4, 59.0], [86.5, 59.0], [86.6, 59.0], [86.7, 59.0], [86.8, 59.0], [86.9, 59.0], [87.0, 59.0], [87.1, 59.0], [87.2, 59.0], [87.3, 60.0], [87.4, 60.0], [87.5, 60.0], [87.6, 60.0], [87.7, 60.0], [87.8, 60.0], [87.9, 60.0], [88.0, 60.0], [88.1, 60.0], [88.2, 60.0], [88.3, 60.0], [88.4, 60.0], [88.5, 60.0], [88.6, 60.0], [88.7, 60.0], [88.8, 61.0], [88.9, 61.0], [89.0, 61.0], [89.1, 61.0], [89.2, 61.0], [89.3, 61.0], [89.4, 61.0], [89.5, 61.0], [89.6, 61.0], [89.7, 61.0], [89.8, 61.0], [89.9, 61.0], [90.0, 61.0], [90.1, 62.0], [90.2, 62.0], [90.3, 62.0], [90.4, 62.0], [90.5, 62.0], [90.6, 62.0], [90.7, 62.0], [90.8, 62.0], [90.9, 62.0], [91.0, 62.0], [91.1, 63.0], [91.2, 63.0], [91.3, 63.0], [91.4, 63.0], [91.5, 63.0], [91.6, 63.0], [91.7, 63.0], [91.8, 63.0], [91.9, 63.0], [92.0, 63.0], [92.1, 64.0], [92.2, 64.0], [92.3, 64.0], [92.4, 64.0], [92.5, 64.0], [92.6, 64.0], [92.7, 65.0], [92.8, 65.0], [92.9, 65.0], [93.0, 65.0], [93.1, 65.0], [93.2, 65.0], [93.3, 66.0], [93.4, 66.0], [93.5, 66.0], [93.6, 66.0], [93.7, 66.0], [93.8, 66.0], [93.9, 66.0], [94.0, 67.0], [94.1, 67.0], [94.2, 67.0], [94.3, 67.0], [94.4, 67.0], [94.5, 67.0], [94.6, 68.0], [94.7, 68.0], [94.8, 68.0], [94.9, 68.0], [95.0, 68.0], [95.1, 69.0], [95.2, 69.0], [95.3, 69.0], [95.4, 69.0], [95.5, 70.0], [95.6, 70.0], [95.7, 70.0], [95.8, 71.0], [95.9, 71.0], [96.0, 71.0], [96.1, 72.0], [96.2, 72.0], [96.3, 73.0], [96.4, 73.0], [96.5, 73.0], [96.6, 74.0], [96.7, 74.0], [96.8, 75.0], [96.9, 75.0], [97.0, 76.0], [97.1, 77.0], [97.2, 78.0], [97.3, 79.0], [97.4, 79.0], [97.5, 81.0], [97.6, 82.0], [97.7, 83.0], [97.8, 84.0], [97.9, 86.0], [98.0, 88.0], [98.1, 92.0], [98.2, 121.0], [98.3, 145.0], [98.4, 149.0], [98.5, 156.0], [98.6, 176.0], [98.7, 188.0], [98.8, 193.0], [98.9, 198.0], [99.0, 204.0], [99.1, 215.0], [99.2, 223.0], [99.3, 233.0], [99.4, 241.0], [99.5, 250.0], [99.6, 256.0], [99.7, 267.0], [99.8, 291.0], [99.9, 307.0], [100.0, 327.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 16.0, "minX": 0.0, "maxY": 9813.0, "series": [{"data": [[0.0, 8756.0], [100.0, 1173.0], [200.0, 71.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 4779.0], [300.0, 772.0], [600.0, 1091.0], [700.0, 262.0], [100.0, 289.0], [200.0, 379.0], [400.0, 1116.0], [800.0, 74.0], [500.0, 1238.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 9813.0], [300.0, 16.0], [100.0, 80.0], [200.0, 91.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2656.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 27344.0, "series": [{"data": [[0.0, 27344.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2656.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 1.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 75.60804020100507, "minX": 1.66901352E12, "maxY": 352.34970000000106, "series": [{"data": [[1.66901358E12, 352.34970000000106]], "isOverall": false, "label": "client-to-gateway-caching (POST)", "isController": false}, {"data": [[1.66901358E12, 172.86769999999999]], "isOverall": false, "label": "client-to-gateway-non-caching (POST)", "isController": false}, {"data": [[1.66901358E12, 88.63490375412138], [1.66901352E12, 75.60804020100507]], "isOverall": false, "label": "client-to-application (POST)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901358E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.0, "maxY": 765.2222222222223, "series": [{"data": [[3.0, 70.0], [4.0, 68.0], [6.0, 71.0], [7.0, 66.0], [8.0, 70.66666666666667], [11.0, 67.5], [13.0, 72.33333333333333], [16.0, 48.5], [17.0, 21.0], [18.0, 29.333333333333336], [19.0, 63.4], [20.0, 42.625], [21.0, 35.57142857142857], [22.0, 46.2], [23.0, 36.55555555555556], [24.0, 37.22222222222222], [25.0, 45.142857142857146], [27.0, 35.2], [28.0, 36.5], [29.0, 51.25], [30.0, 49.333333333333336], [31.0, 55.2], [33.0, 47.6], [32.0, 42.0], [35.0, 51.0], [34.0, 47.0], [37.0, 48.4], [36.0, 55.666666666666664], [38.0, 49.24999999999999], [39.0, 54.28571428571428], [41.0, 48.73684210526316], [40.0, 46.699999999999996], [43.0, 47.86363636363637], [42.0, 53.2], [45.0, 50.05263157894737], [44.0, 39.75], [46.0, 64.05263157894737], [47.0, 57.909090909090914], [48.0, 50.55555555555555], [49.0, 56.35], [51.0, 53.26315789473684], [50.0, 54.41666666666666], [53.0, 53.80952380952381], [52.0, 62.233333333333334], [54.0, 55.04347826086956], [55.0, 62.64705882352941], [56.0, 52.70000000000002], [57.0, 61.72727272727274], [59.0, 57.853658536585364], [58.0, 62.05882352941176], [61.0, 62.06666666666667], [60.0, 61.45000000000001], [62.0, 60.76], [63.0, 55.59459459459459], [67.0, 60.468750000000014], [66.0, 61.81818181818183], [65.0, 61.15000000000002], [64.0, 61.19999999999999], [71.0, 58.76923076923077], [70.0, 58.31666666666666], [69.0, 61.35555555555557], [68.0, 57.05357142857141], [75.0, 59.30555555555557], [74.0, 60.59615384615385], [73.0, 64.23255813953489], [72.0, 59.01851851851851], [79.0, 61.72307692307693], [78.0, 65.49382716049382], [77.0, 60.72222222222222], [76.0, 60.941176470588225], [82.0, 59.241935483870954], [81.0, 62.054054054054035], [80.0, 60.27906976744185], [83.0, 63.4875], [86.0, 63.54794520547946], [84.0, 59.894736842105274], [87.0, 62.34426229508197], [85.0, 62.20512820512821], [91.0, 62.51898734177217], [90.0, 64.62195121951221], [88.0, 63.02631578947369], [89.0, 67.99009900990097], [94.0, 62.35999999999999], [93.0, 62.953125000000014], [95.0, 64.31666666666666], [92.0, 64.71014492753626], [98.0, 65.90566037735846], [97.0, 62.43859649122807], [96.0, 66.04838709677419], [99.0, 64.95833333333331], [100.0, 65.12727272727274], [103.0, 66.46774193548386], [102.0, 69.69767441860466], [101.0, 67.81818181818178], [107.0, 66.84615384615383], [106.0, 68.71428571428571], [105.0, 67.4852941176471], [104.0, 66.45312499999996], [111.0, 65.95918367346941], [110.0, 71.20408163265307], [109.0, 73.30208333333334], [108.0, 68.07317073170731], [115.0, 70.5918367346939], [114.0, 75.20000000000002], [113.0, 65.734375], [112.0, 67.6], [119.0, 72.40476190476191], [118.0, 72.88235294117646], [117.0, 70.82978723404254], [116.0, 69.12000000000002], [123.0, 73.05128205128206], [122.0, 72.475], [121.0, 73.20370370370374], [120.0, 63.925], [127.0, 68.55999999999999], [126.0, 69.11111111111111], [125.0, 68.26666666666667], [124.0, 71.26315789473684], [135.0, 74.62500000000001], [134.0, 73.79411764705883], [133.0, 71.69444444444446], [132.0, 77.61904761904763], [131.0, 73.16666666666666], [130.0, 80.56666666666666], [129.0, 72.84848484848484], [128.0, 70.76923076923079], [140.0, 84.65217391304347], [139.0, 79.5714285714286], [143.0, 78.15384615384616], [141.0, 85.95652173913044], [138.0, 71.53846153846152], [137.0, 64.50000000000001], [136.0, 66.81578947368422], [142.0, 71.57142857142856], [151.0, 78.4090909090909], [148.0, 72.73333333333335], [147.0, 77.11764705882354], [146.0, 78.99999999999999], [145.0, 88.25000000000001], [144.0, 84.11764705882354], [150.0, 70.75], [149.0, 68.25806451612904], [158.0, 69.22222222222221], [157.0, 73.85714285714285], [156.0, 82.42105263157893], [155.0, 72.62500000000001], [154.0, 88.0], [159.0, 69.78571428571428], [153.0, 81.90909090909089], [152.0, 80.07142857142857], [166.0, 85.36842105263159], [164.0, 84.04347826086956], [161.0, 78.0625], [167.0, 77.9090909090909], [160.0, 89.44000000000001], [163.0, 72.29411764705883], [162.0, 77.4], [165.0, 70.76923076923076], [174.0, 83.90909090909092], [171.0, 76.31818181818184], [170.0, 74.36363636363636], [168.0, 73.25], [175.0, 70.25], [173.0, 71.2222222222222], [172.0, 76.91666666666667], [169.0, 69.43478260869566], [183.0, 73.5], [181.0, 65.74999999999999], [180.0, 78.88888888888889], [179.0, 75.10344827586209], [182.0, 83.875], [178.0, 73.20833333333334], [177.0, 73.33333333333334], [176.0, 82.16666666666667], [187.0, 63.517241379310335], [184.0, 70.20833333333336], [191.0, 77.25], [190.0, 82.32142857142858], [188.0, 80.0], [186.0, 85.57142857142857], [185.0, 79.92307692307693], [189.0, 74.6086956521739], [194.0, 73.4], [193.0, 67.47368421052632], [198.0, 84.53571428571429], [197.0, 70.04347826086958], [196.0, 79.52631578947367], [195.0, 70.27272727272728], [192.0, 75.85], [199.0, 75.25], [207.0, 71.45454545454547], [206.0, 75.73684210526316], [205.0, 73.25925925925924], [203.0, 73.63333333333331], [204.0, 79.26470588235294], [202.0, 73.75675675675673], [201.0, 75.6842105263158], [200.0, 78.5], [214.0, 75.59090909090911], [213.0, 75.23076923076921], [211.0, 71.93750000000001], [210.0, 76.82142857142857], [209.0, 80.70967741935482], [215.0, 70.06896551724138], [212.0, 87.85714285714288], [208.0, 79.26666666666667], [221.0, 84.03846153846153], [219.0, 77.53571428571429], [223.0, 78.18181818181819], [220.0, 78.91666666666669], [218.0, 79.11999999999999], [216.0, 95.29999999999998], [217.0, 78.70833333333331], [222.0, 81.66666666666666], [229.0, 77.00000000000001], [231.0, 79.36666666666665], [230.0, 83.13157894736842], [228.0, 86.625], [224.0, 81.49999999999999], [226.0, 81.3], [227.0, 76.24000000000001], [225.0, 80.66666666666667], [239.0, 83.59259259259258], [238.0, 79.81578947368419], [237.0, 85.17241379310343], [236.0, 78.56521739130433], [235.0, 83.77777777777779], [233.0, 87.41935483870971], [232.0, 81.76000000000002], [234.0, 77.88888888888889], [244.0, 81.80769230769232], [243.0, 74.46666666666667], [242.0, 85.6774193548387], [241.0, 78.64285714285717], [240.0, 79.16000000000001], [247.0, 89.89655172413795], [246.0, 75.62500000000001], [245.0, 83.23809523809524], [253.0, 92.06666666666668], [252.0, 81.78260869565217], [251.0, 84.30555555555556], [248.0, 84.75], [249.0, 85.38888888888889], [254.0, 74.80000000000001], [255.0, 93.08000000000003], [250.0, 89.82352941176471], [258.0, 87.84999999999998], [260.0, 87.55000000000003], [261.0, 82.10526315789475], [256.0, 79.57142857142858], [257.0, 87.0], [264.0, 81.79310344827586], [263.0, 81.24242424242424], [262.0, 88.95833333333334], [259.0, 86.17241379310343], [268.0, 87.09090909090911], [271.0, 93.47499999999998], [270.0, 84.3728813559322], [269.0, 92.92592592592592], [267.0, 86.77777777777777], [265.0, 83.41666666666666], [266.0, 76.49999999999999], [273.0, 80.97560975609757], [280.0, 85.88888888888889], [279.0, 85.44897959183672], [278.0, 84.14705882352942], [277.0, 74.86666666666667], [276.0, 82.76190476190476], [272.0, 94.32000000000001], [285.0, 77.41666666666669], [284.0, 89.09999999999998], [287.0, 93.78723404255321], [286.0, 80.82352941176471], [275.0, 91.4], [274.0, 74.99999999999999], [282.0, 102.29411764705884], [283.0, 83.90476190476191], [281.0, 87.68181818181819], [291.0, 84.9047619047619], [297.0, 84.3888888888889], [299.0, 94.49999999999999], [294.0, 97.33333333333333], [295.0, 80.33333333333333], [288.0, 89.71428571428572], [298.0, 76.63636363636364], [296.0, 76.77777777777777], [303.0, 115.42857142857143], [302.0, 83.0], [301.0, 86.84615384615384], [300.0, 70.19999999999997], [292.0, 72.66666666666667], [293.0, 95.55], [289.0, 93.58333333333333], [290.0, 72.9], [318.0, 109.57142857142858], [306.0, 84.35483870967744], [308.0, 85.0], [309.0, 88.49999999999999], [310.0, 81.08333333333334], [307.0, 92.30000000000001], [305.0, 102.00000000000001], [304.0, 84.46153846153847], [311.0, 104.08333333333334], [319.0, 96.14285714285715], [312.0, 91.35714285714286], [317.0, 116.00000000000001], [316.0, 97.75], [315.0, 113.83333333333333], [314.0, 93.625], [313.0, 94.91666666666667], [333.0, 88.37500000000001], [331.0, 91.18181818181819], [330.0, 113.37500000000001], [328.0, 88.72727272727272], [329.0, 94.99999999999999], [326.0, 78.88095238095238], [327.0, 97.27272727272727], [322.0, 95.88888888888889], [321.0, 84.46153846153847], [320.0, 92.57142857142857], [324.0, 83.4], [325.0, 100.5], [323.0, 86.64285714285715], [332.0, 105.0], [335.0, 106.71428571428571], [334.0, 116.0], [351.0, 97.5], [346.0, 101.5], [350.0, 112.33333333333333], [349.0, 107.66666666666667], [348.0, 97.0], [339.0, 126.66666666666667], [338.0, 101.1], [337.0, 118.5], [336.0, 94.85714285714285], [343.0, 76.75], [342.0, 89.42857142857143], [347.0, 116.0], [345.0, 104.25], [344.0, 90.0], [341.0, 105.33333333333333], [340.0, 104.44444444444444], [366.0, 118.25], [367.0, 115.5], [365.0, 112.6], [364.0, 120.5], [363.0, 118.5], [362.0, 120.0], [361.0, 132.5], [360.0, 92.66666666666667], [359.0, 162.0], [353.0, 116.25], [352.0, 98.4], [355.0, 103.0], [354.0, 87.16666666666667], [358.0, 124.0], [357.0, 228.0], [356.0, 96.33333333333333], [382.0, 108.76923076923076], [383.0, 118.16666666666667], [381.0, 91.25], [380.0, 104.0], [379.0, 105.0], [378.0, 105.0], [377.0, 94.66666666666667], [376.0, 134.125], [375.0, 102.33333333333333], [369.0, 127.75], [368.0, 123.75], [371.0, 94.19512195121952], [370.0, 104.4], [374.0, 96.42857142857143], [373.0, 95.8], [372.0, 114.66666666666667], [397.0, 98.0], [398.0, 125.0], [399.0, 104.0], [396.0, 124.6], [387.0, 160.0], [386.0, 112.5], [385.0, 112.5], [384.0, 100.0], [395.0, 114.66666666666667], [394.0, 120.75], [393.0, 109.0], [392.0, 134.66666666666666], [391.0, 133.33333333333334], [390.0, 154.66666666666666], [389.0, 114.0], [388.0, 112.4], [413.0, 145.75], [401.0, 92.0], [400.0, 110.0], [405.0, 209.0], [402.0, 92.0], [414.0, 130.0], [412.0, 101.0], [403.0, 192.5], [411.0, 167.66666666666666], [410.0, 163.5], [409.0, 197.0], [418.0, 152.6], [422.0, 130.75], [421.0, 95.0], [420.0, 128.2], [419.0, 115.0], [416.0, 150.0], [417.0, 194.0], [423.0, 176.5], [431.0, 169.33333333333334], [424.0, 182.0], [425.0, 145.5], [427.0, 165.33333333333334], [426.0, 138.5], [430.0, 176.5], [429.0, 167.66666666666666], [428.0, 181.0], [446.0, 152.71428571428572], [447.0, 126.33333333333333], [445.0, 172.0], [444.0, 151.0], [443.0, 136.8], [441.0, 131.0], [440.0, 140.66666666666666], [442.0, 129.0], [439.0, 140.0], [434.0, 158.5], [433.0, 180.5], [432.0, 168.0], [437.0, 166.33333333333334], [436.0, 160.5], [438.0, 189.0], [460.0, 143.4], [459.0, 136.33333333333334], [458.0, 165.75], [457.0, 143.72727272727275], [456.0, 150.125], [463.0, 146.25], [461.0, 136.0], [462.0, 121.33333333333333], [455.0, 125.75], [449.0, 134.72727272727272], [448.0, 138.4], [454.0, 124.5], [453.0, 126.0], [452.0, 111.0], [451.0, 137.14285714285717], [450.0, 137.5], [477.0, 139.5], [479.0, 133.66666666666666], [478.0, 157.33333333333334], [476.0, 118.0], [467.0, 128.25], [465.0, 108.0], [466.0, 112.0], [464.0, 123.5], [475.0, 130.5], [474.0, 135.5], [473.0, 127.0], [472.0, 139.0], [471.0, 135.0], [470.0, 152.0], [469.0, 133.68750000000003], [468.0, 147.0], [488.0, 146.0], [493.0, 126.5], [482.0, 148.0], [480.0, 155.0], [491.0, 116.5], [490.0, 157.0], [489.0, 162.0], [487.0, 145.0], [486.0, 150.6], [485.0, 158.0], [484.0, 158.0], [505.0, 134.5], [503.0, 156.0], [501.0, 126.0], [500.0, 159.0], [499.0, 142.0], [498.0, 133.0], [497.0, 148.0], [496.0, 148.5]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[172.86589999999947, 75.7385]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[3.0, 28.5], [4.0, 10.25], [5.0, 8.25], [6.0, 7.5], [7.0, 9.0], [8.0, 13.875], [9.0, 13.0], [10.0, 17.687499999999996], [11.0, 16.125], [12.0, 19.46666666666667], [13.0, 15.933333333333334], [14.0, 18.15], [15.0, 18.05555555555555], [16.0, 17.612903225806452], [17.0, 18.16216216216216], [18.0, 18.292682926829272], [19.0, 21.84444444444444], [20.0, 21.610169491525415], [21.0, 19.556962025316448], [22.0, 20.98648648648648], [23.0, 21.173076923076923], [24.0, 24.300970873786408], [25.0, 22.321739130434793], [26.0, 24.872727272727268], [27.0, 23.929292929292924], [28.0, 22.866666666666674], [29.0, 23.697674418604645], [30.0, 23.34299516908213], [31.0, 25.62499999999999], [32.0, 24.88584474885843], [33.0, 25.018604651162793], [35.0, 25.756476683937827], [34.0, 25.761194029850746], [37.0, 26.848314606741564], [36.0, 27.070652173913036], [39.0, 28.63013698630137], [38.0, 28.14383561643836], [41.0, 32.135135135135144], [40.0, 28.56], [43.0, 32.0983606557377], [42.0, 30.24675324675324], [45.0, 30.0188679245283], [44.0, 31.870967741935484], [47.0, 31.65116279069767], [46.0, 31.672413793103438], [48.0, 34.43181818181819], [49.0, 37.74074074074074], [51.0, 37.62962962962964], [50.0, 37.458333333333336], [53.0, 36.60714285714286], [52.0, 43.0], [55.0, 32.1875], [54.0, 34.99999999999999], [57.0, 35.642857142857146], [56.0, 38.666666666666664], [59.0, 62.57142857142857], [58.0, 34.25], [61.0, 66.5], [60.0, 35.28], [62.0, 39.27777777777778], [63.0, 75.66666666666666], [64.0, 45.199999999999996], [67.0, 37.333333333333336], [66.0, 54.0], [65.0, 45.5], [70.0, 76.4], [69.0, 42.0], [68.0, 39.0], [71.0, 64.5], [72.0, 37.4], [74.0, 45.0], [75.0, 77.5], [79.0, 81.5], [78.0, 55.833333333333336], [77.0, 50.0], [76.0, 45.75], [82.0, 53.0], [81.0, 40.4], [83.0, 43.0], [80.0, 58.0], [85.0, 44.0], [84.0, 40.0], [87.0, 65.0], [86.0, 29.0], [88.0, 91.33333333333334], [91.0, 77.0], [90.0, 127.0], [89.0, 69.0], [95.0, 66.5], [94.0, 104.0], [92.0, 124.66666666666667], [93.0, 75.5], [98.0, 48.0], [96.0, 89.5], [99.0, 142.25], [97.0, 135.0], [102.0, 37.0], [101.0, 62.5], [100.0, 50.0], [103.0, 85.0], [105.0, 47.5], [104.0, 50.0], [107.0, 74.0], [106.0, 70.5], [111.0, 185.66666666666666], [110.0, 85.33333333333333], [109.0, 82.5], [115.0, 102.66666666666667], [114.0, 85.42857142857143], [113.0, 100.0], [112.0, 96.33333333333333], [118.0, 86.75], [116.0, 95.8], [117.0, 102.0], [119.0, 172.25], [123.0, 125.24999999999997], [122.0, 122.63636363636364], [121.0, 114.94999999999997], [120.0, 103.12499999999999], [127.0, 114.23076923076924], [126.0, 117.22222222222223], [125.0, 118.2], [124.0, 104.77777777777777], [135.0, 148.1875], [134.0, 93.93750000000001], [132.0, 124.77777777777776], [133.0, 124.33333333333334], [131.0, 118.10000000000001], [129.0, 132.69999999999996], [128.0, 114.18181818181817], [130.0, 126.11111111111113], [136.0, 113.17647058823529], [142.0, 122.66666666666667], [141.0, 137.00000000000003], [140.0, 178.0], [139.0, 130.36363636363635], [137.0, 118.45454545454545], [138.0, 113.10000000000001], [143.0, 118.57142857142857], [151.0, 228.5], [149.0, 193.33333333333334], [148.0, 315.0], [150.0, 160.0], [147.0, 173.0], [146.0, 129.8], [144.0, 124.1], [145.0, 148.5], [159.0, 205.0], [158.0, 195.0], [156.0, 230.0], [155.0, 247.0], [154.0, 254.0], [153.0, 264.0], [152.0, 273.0], [167.0, 27.0], [166.0, 151.0], [164.0, 275.5], [163.0, 203.0], [162.0, 76.875], [165.0, 392.0], [161.0, 373.5], [174.0, 230.66666666666666], [173.0, 47.5], [172.0, 212.6], [170.0, 198.5], [169.0, 46.0], [175.0, 143.0], [171.0, 46.0], [168.0, 505.5], [179.0, 125.66666666666667], [177.0, 44.0], [176.0, 214.0], [183.0, 322.0], [182.0, 335.0], [181.0, 410.0], [180.0, 284.0], [178.0, 352.5], [191.0, 203.0], [189.0, 179.66666666666666], [190.0, 290.2], [188.0, 203.0], [187.0, 360.0], [185.0, 276.5], [186.0, 277.0], [184.0, 308.0], [198.0, 127.6], [196.0, 42.0], [195.0, 169.14285714285717], [199.0, 296.0], [193.0, 243.71428571428572], [192.0, 263.0], [197.0, 234.5], [205.0, 243.0], [204.0, 156.5], [203.0, 226.0], [202.0, 122.5], [200.0, 104.0], [207.0, 328.75], [206.0, 270.0], [215.0, 171.0], [214.0, 343.0], [213.0, 290.5], [212.0, 319.0], [211.0, 185.0], [210.0, 245.0], [208.0, 240.0], [209.0, 178.0], [223.0, 219.66666666666666], [222.0, 277.75], [221.0, 244.66666666666666], [220.0, 311.0], [219.0, 285.0], [217.0, 309.0], [216.0, 191.0], [225.0, 183.0], [224.0, 237.75], [231.0, 264.7142857142857], [230.0, 421.0], [229.0, 332.0], [228.0, 323.0], [227.0, 311.5], [226.0, 268.5], [239.0, 420.0], [238.0, 353.0], [237.0, 272.0], [236.0, 343.0], [235.0, 244.5], [234.0, 345.5], [232.0, 257.6], [247.0, 332.3333333333333], [246.0, 437.0], [245.0, 310.0], [244.0, 300.5], [242.0, 426.0], [241.0, 336.0], [255.0, 240.0], [254.0, 236.5], [253.0, 150.5], [252.0, 168.0], [251.0, 365.0], [250.0, 230.0], [249.0, 271.0], [248.0, 373.0], [268.0, 272.0], [258.0, 223.5], [259.0, 392.0], [257.0, 225.0], [256.0, 246.5], [261.0, 385.0], [260.0, 376.0], [270.0, 360.0], [267.0, 386.5], [265.0, 266.0], [266.0, 393.0], [264.0, 307.0], [286.0, 310.75], [279.0, 237.5], [273.0, 307.5], [275.0, 273.3333333333333], [274.0, 382.5], [278.0, 311.2], [277.0, 299.4], [276.0, 275.0], [287.0, 364.2], [285.0, 318.75], [284.0, 360.75], [283.0, 322.5], [282.0, 308.6], [281.0, 323.14285714285717], [280.0, 279.5], [291.0, 335.6666666666667], [303.0, 380.5], [301.0, 419.0], [299.0, 362.0], [298.0, 403.0], [297.0, 317.0], [294.0, 347.3333333333333], [293.0, 328.0], [292.0, 338.75], [290.0, 344.6], [289.0, 309.8571428571429], [288.0, 355.0], [295.0, 323.25], [316.0, 424.3333333333333], [319.0, 331.0], [318.0, 396.0], [317.0, 415.0], [313.0, 359.0], [311.0, 335.0], [306.0, 372.0], [304.0, 315.0], [310.0, 345.6666666666667], [309.0, 350.5], [308.0, 342.0], [333.0, 350.5], [325.0, 263.0], [324.0, 411.0], [335.0, 378.3333333333333], [334.0, 310.0], [332.0, 304.0], [323.0, 348.0], [322.0, 330.0], [321.0, 356.5], [320.0, 389.5], [331.0, 332.5], [329.0, 327.0], [328.0, 340.0], [326.0, 333.0], [350.0, 378.5], [351.0, 343.5], [349.0, 470.0], [348.0, 344.5], [347.0, 364.0], [346.0, 374.3333333333333], [345.0, 324.5], [343.0, 376.5], [336.0, 332.0], [339.0, 353.0], [337.0, 368.5], [342.0, 403.5], [341.0, 340.0], [340.0, 419.5], [366.0, 356.5], [363.0, 342.0], [361.0, 291.0], [358.0, 346.0], [362.0, 382.5], [360.0, 405.0], [359.0, 315.0], [352.0, 369.0], [353.0, 439.0], [355.0, 359.3333333333333], [354.0, 400.3333333333333], [357.0, 382.0], [356.0, 365.0], [382.0, 464.0], [381.0, 477.0], [370.0, 409.0], [371.0, 464.0], [369.0, 361.3], [398.0, 373.0], [399.0, 388.8], [397.0, 381.6666666666667], [396.0, 432.0], [395.0, 439.0], [394.0, 351.5], [392.0, 433.0], [393.0, 372.0], [391.0, 339.6666666666667], [387.0, 384.1875], [385.0, 490.0], [384.0, 484.0], [390.0, 352.0], [412.0, 342.0], [414.0, 391.6666666666667], [415.0, 380.0], [413.0, 331.0], [410.0, 488.0], [409.0, 434.0], [407.0, 383.0], [401.0, 486.0], [400.0, 377.0], [406.0, 341.3333333333333], [404.0, 368.3333333333333], [429.0, 417.0], [430.0, 353.0], [428.0, 371.75], [427.0, 421.5], [425.0, 325.0], [420.0, 440.0], [418.0, 399.0], [417.0, 321.0], [416.0, 345.0], [445.0, 420.0], [447.0, 443.5], [444.0, 430.0], [442.0, 351.5], [441.0, 358.3333333333333], [438.0, 421.0], [437.0, 428.0], [436.0, 401.0], [435.0, 444.0], [433.0, 464.3333333333333], [461.0, 107.0], [452.0, 341.6666666666667], [454.0, 398.0], [449.0, 440.5], [451.0, 306.5], [460.0, 290.5], [462.0, 424.6666666666667], [463.0, 467.0], [459.0, 423.0], [458.0, 464.0], [456.0, 450.0], [477.0, 403.12500000000006], [466.0, 387.90000000000003], [465.0, 360.2], [464.0, 353.5], [471.0, 388.25000000000006], [470.0, 392.66666666666674], [469.0, 406.1666666666667], [468.0, 416.25], [479.0, 434.0], [476.0, 410.6666666666667], [467.0, 409.1111111111111], [478.0, 392.71428571428567], [475.0, 429.7142857142857], [474.0, 433.22222222222223], [473.0, 385.36363636363643], [472.0, 388.44444444444446], [483.0, 395.57142857142856], [485.0, 369.7777777777777], [484.0, 375.0], [488.0, 404.93333333333334], [491.0, 454.9], [490.0, 412.06666666666666], [489.0, 429.70000000000005], [487.0, 406.3846153846153], [482.0, 460.80000000000007], [480.0, 409.2857142857143], [481.0, 414.0], [486.0, 370.85714285714283], [495.0, 427.75], [494.0, 428.6666666666667], [493.0, 421.3999999999999], [492.0, 430.375], [510.0, 434.1818181818182], [511.0, 429.3333333333333], [509.0, 456.875], [508.0, 463.1111111111111], [507.0, 425.0], [506.0, 430.2], [505.0, 450.3333333333333], [504.0, 439.16666666666663], [503.0, 436.75], [497.0, 405.8333333333333], [496.0, 428.55555555555554], [499.0, 459.55555555555554], [498.0, 427.77777777777777], [502.0, 430.42857142857144], [501.0, 418.0], [500.0, 418.0], [537.0, 404.09090909090907], [525.0, 376.8461538461538], [524.0, 221.0625], [522.0, 393.8666666666667], [520.0, 405.6111111111111], [519.0, 393.4], [528.0, 411.33333333333337], [538.0, 446.59999999999997], [539.0, 469.92857142857144], [541.0, 464.61904761904754], [540.0, 465.25], [543.0, 447.2666666666667], [542.0, 460.45000000000005], [536.0, 444.5], [530.0, 312.99999999999994], [529.0, 452.125], [531.0, 382.25], [532.0, 439.875], [535.0, 429.0], [534.0, 478.1666666666667], [533.0, 351.0], [526.0, 372.62499999999994], [527.0, 436.55555555555554], [518.0, 447.42857142857144], [517.0, 462.7857142857142], [516.0, 454.7142857142857], [515.0, 434.8333333333333], [514.0, 456.53846153846155], [513.0, 436.14285714285717], [512.0, 422.4545454545455], [523.0, 418.72222222222223], [521.0, 408.99999999999994], [572.0, 491.8333333333333], [561.0, 387.42857142857144], [566.0, 406.09090909090907], [567.0, 478.3333333333333], [565.0, 331.55555555555554], [564.0, 445.1111111111111], [563.0, 425.2857142857143], [562.0, 458.6], [560.0, 385.0], [574.0, 495.1333333333333], [573.0, 457.25], [571.0, 515.75], [570.0, 462.14285714285717], [569.0, 487.6666666666667], [568.0, 498.85714285714283], [558.0, 459.3333333333333], [559.0, 451.83333333333337], [545.0, 468.5], [544.0, 470.04761904761904], [547.0, 473.45000000000005], [546.0, 464.6470588235294], [549.0, 464.4], [548.0, 469.2105263157895], [551.0, 456.90909090909093], [550.0, 465.00000000000006], [557.0, 498.5], [556.0, 475.90909090909093], [555.0, 457.8333333333333], [554.0, 504.75], [553.0, 479.0909090909091], [552.0, 472.19999999999993], [575.0, 531.8], [604.0, 461.5], [579.0, 426.59999999999997], [588.0, 413.74999999999994], [585.0, 458.3333333333333], [584.0, 503.84615384615387], [587.0, 471.99999999999994], [586.0, 524.7], [583.0, 443.5833333333333], [582.0, 496.49999999999994], [601.0, 506.6666666666667], [600.0, 516.6666666666666], [603.0, 525.0], [602.0, 488.4615384615385], [605.0, 519.0], [607.0, 471.8888888888889], [593.0, 511.2727272727273], [592.0, 513.5555555555555], [595.0, 517.25], [594.0, 518.1666666666666], [597.0, 510.5555555555556], [596.0, 544.1], [599.0, 478.66666666666663], [598.0, 477.25000000000006], [606.0, 457.11111111111114], [581.0, 468.42857142857144], [580.0, 447.7142857142857], [578.0, 435.66666666666663], [577.0, 470.7272727272727], [576.0, 493.3571428571429], [589.0, 446.2], [590.0, 534.1111111111111], [591.0, 482.75], [635.0, 483.8], [639.0, 404.0], [626.0, 443.5], [628.0, 515.0999999999999], [629.0, 473.5714285714286], [627.0, 499.27272727272725], [630.0, 482.0], [631.0, 535.3636363636364], [625.0, 501.1818181818182], [624.0, 468.54545454545456], [623.0, 385.16666666666663], [622.0, 497.5], [621.0, 505.8181818181818], [620.0, 412.4], [619.0, 462.69999999999993], [618.0, 472.1666666666667], [617.0, 454.0], [616.0, 474.77777777777777], [632.0, 498.2777777777778], [615.0, 481.3], [614.0, 489.7], [613.0, 452.62499999999994], [612.0, 532.3333333333334], [611.0, 541.4444444444445], [609.0, 527.1428571428571], [610.0, 471.2], [608.0, 511.8], [634.0, 455.5], [633.0, 462.66666666666663], [638.0, 358.2], [637.0, 501.0], [636.0, 411.5], [667.0, 532.3750000000001], [650.0, 424.77777777777777], [651.0, 539.3333333333334], [652.0, 483.9166666666667], [654.0, 472.77777777777777], [653.0, 486.2], [664.0, 553.5454545454544], [647.0, 472.42857142857144], [646.0, 374.0], [644.0, 445.0], [645.0, 542.75], [643.0, 403.6666666666667], [640.0, 352.0], [642.0, 505.0], [641.0, 500.33333333333337], [655.0, 506.75000000000006], [649.0, 485.16666666666663], [648.0, 431.22222222222223], [670.0, 569.7500000000001], [671.0, 595.8666666666667], [657.0, 514.0], [656.0, 420.30769230769226], [660.0, 576.8888888888889], [659.0, 610.4], [658.0, 466.5], [663.0, 539.6], [662.0, 586.25], [661.0, 544.6], [669.0, 532.0], [668.0, 493.0], [666.0, 563.5], [665.0, 498.83333333333337], [700.0, 499.6666666666667], [677.0, 569.7142857142858], [696.0, 427.83333333333337], [679.0, 570.0666666666667], [678.0, 518.2777777777778], [676.0, 531.0], [675.0, 521.0588235294117], [674.0, 564.6666666666667], [672.0, 560.5], [673.0, 604.75], [687.0, 437.3333333333333], [686.0, 538.875], [685.0, 465.7], [683.0, 403.0], [684.0, 566.0], [682.0, 534.3], [681.0, 547.0909090909091], [680.0, 558.2500000000001], [703.0, 449.4], [688.0, 468.1666666666667], [690.0, 447.25], [689.0, 405.0], [692.0, 371.0], [693.0, 536.3333333333334], [691.0, 355.3333333333333], [695.0, 338.0], [694.0, 428.6363636363636], [702.0, 542.2], [701.0, 456.5], [699.0, 333.0], [698.0, 467.8], [697.0, 367.75], [729.0, 593.5], [734.0, 524.0], [735.0, 578.9000000000001], [720.0, 549.125], [721.0, 619.2], [723.0, 521.4444444444443], [722.0, 522.0], [725.0, 619.0000000000001], [724.0, 599.2222222222223], [733.0, 579.7], [732.0, 566.3333333333334], [731.0, 526.5000000000001], [730.0, 631.9999999999999], [728.0, 554.0], [711.0, 490.0], [710.0, 557.1818181818181], [709.0, 595.0], [708.0, 484.625], [707.0, 451.5], [706.0, 602.375], [705.0, 548.8571428571429], [704.0, 503.77777777777777], [719.0, 550.4285714285714], [718.0, 566.5], [717.0, 567.8], [716.0, 572.8], [715.0, 537.9166666666666], [714.0, 556.0], [712.0, 519.9090909090909], [713.0, 566.1818181818181], [727.0, 576.6666666666666], [726.0, 623.6666666666666], [762.0, 499.0], [766.0, 446.5], [767.0, 509.37500000000006], [753.0, 600.1999999999999], [754.0, 630.25], [752.0, 623.0952380952381], [757.0, 541.8888888888889], [756.0, 635.5], [755.0, 580.9333333333333], [765.0, 437.0], [764.0, 468.0], [763.0, 413.5], [760.0, 506.0], [761.0, 532.6666666666666], [743.0, 541.1333333333333], [742.0, 591.3333333333333], [741.0, 615.1538461538461], [740.0, 588.3000000000002], [739.0, 527.3], [738.0, 545.25], [737.0, 500.07142857142856], [736.0, 538.2], [751.0, 576.6874999999999], [749.0, 608.4], [750.0, 653.0000000000001], [748.0, 595.0], [747.0, 597.4444444444445], [746.0, 605.3157894736842], [745.0, 584.1764705882352], [744.0, 626.3333333333334], [759.0, 444.5], [758.0, 498.4], [773.0, 460.4], [774.0, 574.25], [792.0, 606.1], [775.0, 601.25], [796.0, 599.6363636363636], [795.0, 621.2222222222222], [794.0, 658.4444444444445], [793.0, 606.7142857142858], [771.0, 437.5], [770.0, 613.0], [772.0, 620.0], [769.0, 497.0], [768.0, 530.0], [786.0, 597.0], [787.0, 653.0], [789.0, 629.6666666666667], [788.0, 620.25], [791.0, 527.7], [790.0, 614.1666666666666], [785.0, 538.0], [784.0, 514.0], [799.0, 624.625], [798.0, 673.8333333333333], [797.0, 494.1818181818182], [783.0, 545.25], [782.0, 571.1666666666667], [781.0, 563.8], [780.0, 509.0], [779.0, 632.3], [778.0, 600.0000000000001], [777.0, 567.0], [776.0, 550.5], [829.0, 678.75], [817.0, 596.4545454545455], [820.0, 608.2857142857142], [821.0, 603.8333333333334], [823.0, 629.8333333333334], [822.0, 640.1666666666666], [819.0, 651.1], [818.0, 577.75], [816.0, 625.3], [815.0, 586.5], [814.0, 612.375], [813.0, 686.7142857142857], [812.0, 643.2222222222222], [811.0, 672.5], [810.0, 640.5], [808.0, 627.0], [809.0, 597.5], [831.0, 668.8], [830.0, 711.6666666666666], [828.0, 682.5], [827.0, 646.25], [826.0, 677.0], [825.0, 611.8571428571429], [824.0, 662.6666666666667], [807.0, 572.25], [806.0, 624.5], [805.0, 604.5], [804.0, 643.75], [803.0, 646.6], [802.0, 650.8571428571429], [801.0, 637.1428571428572], [800.0, 622.1666666666667], [859.0, 598.8666666666667], [836.0, 650.625], [840.0, 641.1999999999999], [842.0, 694.8181818181819], [841.0, 704.125], [845.0, 646.0000000000001], [844.0, 682.75], [843.0, 687.1111111111111], [839.0, 592.75], [856.0, 645.625], [858.0, 632.1176470588236], [857.0, 637.1875000000001], [860.0, 591.2142857142858], [838.0, 645.5333333333333], [837.0, 588.1999999999999], [834.0, 635.8571428571429], [835.0, 638.4285714285714], [833.0, 642.5], [832.0, 611.0], [847.0, 701.6], [846.0, 679.625], [862.0, 585.0714285714286], [863.0, 643.6470588235294], [855.0, 623.4], [854.0, 606.75], [853.0, 656.4444444444445], [852.0, 629.0], [851.0, 642.5714285714286], [850.0, 660.2727272727273], [849.0, 641.9090909090909], [848.0, 640.75], [861.0, 631.6470588235294], [892.0, 549.5833333333333], [890.0, 422.90476190476187], [895.0, 430.5833333333333], [881.0, 702.7777777777777], [880.0, 754.3333333333333], [883.0, 596.3333333333333], [882.0, 587.5], [885.0, 596.8333333333333], [884.0, 610.3333333333334], [894.0, 476.08333333333337], [893.0, 471.92857142857144], [891.0, 480.22222222222223], [889.0, 555.0], [888.0, 584.2857142857142], [879.0, 707.4], [865.0, 664.3846153846154], [864.0, 630.5], [866.0, 613.5454545454546], [869.0, 734.4], [868.0, 702.6], [867.0, 689.875], [871.0, 685.875], [870.0, 717.2857142857143], [878.0, 693.5555555555555], [877.0, 765.2222222222223], [876.0, 704.5999999999999], [875.0, 676.1904761904763], [874.0, 674.5714285714286], [873.0, 715.75], [872.0, 658.2857142857143], [887.0, 529.5555555555555], [886.0, 502.55555555555554], [903.0, 512.0], [899.0, 431.2857142857143], [901.0, 430.77777777777777], [898.0, 446.0], [897.0, 489.07692307692315], [896.0, 450.1538461538462], [913.0, 509.2], [912.0, 548.75], [924.0, 463.0], [923.0, 600.0], [922.0, 510.0], [921.0, 507.0], [920.0, 533.0], [926.0, 546.0], [925.0, 511.0], [927.0, 591.0], [914.0, 481.5], [915.0, 495.0], [917.0, 481.0], [916.0, 551.4], [919.0, 520.5], [918.0, 564.25], [900.0, 445.6666666666667], [902.0, 530.8095238095237], [904.0, 522.0], [906.0, 533.5], [907.0, 599.0], [905.0, 575.0], [910.0, 606.0], [909.0, 514.0], [908.0, 575.0], [911.0, 452.0], [956.0, 505.0], [933.0, 519.75], [943.0, 505.0], [928.0, 536.0], [930.0, 682.0], [929.0, 558.0], [932.0, 508.0], [931.0, 683.0], [941.0, 580.5], [939.0, 680.0], [938.0, 589.5], [936.0, 512.0], [959.0, 554.6666666666666], [946.0, 568.0], [945.0, 508.0], [948.0, 563.0], [947.0, 506.0], [958.0, 674.0], [957.0, 560.6666666666666], [955.0, 499.0], [954.0, 503.0], [953.0, 588.5], [951.0, 669.0], [949.0, 669.5], [986.0, 505.5], [990.0, 589.6666666666666], [991.0, 578.5], [976.0, 560.6666666666666], [979.0, 577.0], [978.0, 568.3333333333334], [989.0, 649.5], [988.0, 659.0], [987.0, 628.0], [985.0, 605.6666666666666], [984.0, 561.3333333333334], [974.0, 671.0], [961.0, 546.6666666666666], [960.0, 604.0], [963.0, 667.5], [962.0, 661.5], [965.0, 569.5], [964.0, 582.0], [967.0, 549.0], [966.0, 641.6666666666666], [973.0, 665.0], [972.0, 499.0], [970.0, 599.6666666666666], [968.0, 615.6666666666666], [969.0, 544.25], [983.0, 622.8], [981.0, 539.0], [980.0, 611.3333333333334], [1016.0, 664.0], [1020.0, 630.0], [1023.0, 622.0], [1009.0, 643.0], [1008.0, 656.0], [1012.0, 621.0], [1010.0, 624.0], [1022.0, 633.0], [1021.0, 625.0], [1019.0, 620.0], [1018.0, 663.0], [1017.0, 646.0], [1006.0, 636.5], [993.0, 659.0], [992.0, 527.0], [995.0, 663.0], [994.0, 529.0], [997.0, 547.0], [996.0, 664.0], [999.0, 627.0], [998.0, 619.0], [1004.0, 628.0], [1003.0, 642.0], [1002.0, 642.0], [1001.0, 622.0], [1000.0, 664.0], [1015.0, 641.0], [1014.0, 635.0], [1024.0, 644.5], [1052.0, 604.75], [1058.0, 589.625], [1026.0, 639.3333333333334], [1034.0, 624.0], [1036.0, 618.0], [1038.0, 636.75], [1054.0, 598.5999999999999], [1050.0, 606.4], [1048.0, 601.25], [1046.0, 620.1428571428572], [1044.0, 612.75], [1042.0, 642.8], [1040.0, 636.1666666666666], [1062.0, 577.8], [1060.0, 578.625], [1056.0, 585.7142857142857], [1064.0, 575.0], [1025.0, 661.0], [1055.0, 585.1], [1029.0, 656.0], [1027.0, 659.0], [1031.0, 625.5], [1035.0, 633.4285714285714], [1037.0, 651.0], [1053.0, 594.5], [1051.0, 607.8], [1049.0, 607.0], [1047.0, 626.0], [1045.0, 635.5], [1043.0, 615.75], [1041.0, 638.0], [1061.0, 575.3333333333334], [1059.0, 581.3333333333334], [1057.0, 585.4], [1063.0, 577.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[352.3476999999984, 269.54439999999806]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 4.909090909090909], [3.0, 4.315789473684211], [4.0, 5.0256410256410255], [5.0, 8.363636363636363], [6.0, 5.416666666666668], [7.0, 14.357142857142858], [8.0, 7.416666666666667], [9.0, 11.785714285714286], [10.0, 24.181818181818183], [11.0, 16.05263157894737], [12.0, 15.363636363636363], [13.0, 23.95121951219512], [14.0, 30.294117647058826], [15.0, 24.545454545454547], [16.0, 32.76923076923077], [17.0, 29.263157894736842], [18.0, 35.291666666666664], [19.0, 29.88461538461538], [20.0, 29.473684210526315], [21.0, 32.54545454545454], [22.0, 34.5], [23.0, 32.82142857142858], [24.0, 34.50000000000001], [25.0, 34.78260869565219], [26.0, 35.888888888888886], [27.0, 37.30232558139536], [28.0, 36.95744680851064], [29.0, 38.15555555555555], [30.0, 41.696428571428584], [31.0, 40.5609756097561], [32.0, 39.11688311688312], [33.0, 41.649122807017534], [34.0, 40.57142857142859], [35.0, 41.32098765432098], [36.0, 40.298850574712645], [37.0, 39.5764705882353], [39.0, 41.08256880733946], [38.0, 38.3425925925926], [40.0, 41.40157480314959], [41.0, 39.78571428571427], [42.0, 40.05970149253732], [43.0, 40.54135338345863], [44.0, 40.11811023622047], [45.0, 41.49193548387099], [46.0, 41.83206106870229], [47.0, 42.08391608391611], [49.0, 43.20915032679738], [48.0, 43.0495867768595], [51.0, 44.29770992366414], [50.0, 42.55652173913043], [52.0, 42.985401459854025], [53.0, 43.89208633093526], [55.0, 46.189393939393945], [54.0, 43.66141732283464], [56.0, 44.72357723577235], [57.0, 42.891304347826086], [59.0, 45.09448818897639], [58.0, 45.151079136690655], [61.0, 46.29457364341082], [60.0, 45.63709677419355], [62.0, 45.068181818181834], [63.0, 46.431654676259036], [67.0, 46.70909090909092], [66.0, 45.81739130434781], [65.0, 46.135135135135144], [64.0, 46.35526315789474], [71.0, 46.06172839506171], [70.0, 46.57142857142858], [69.0, 48.90588235294118], [68.0, 46.97087378640776], [75.0, 47.60869565217391], [74.0, 46.90740740740741], [73.0, 47.69791666666667], [72.0, 46.368421052631604], [77.0, 44.919999999999995], [78.0, 49.02380952380953], [76.0, 47.46268656716418], [79.0, 49.053571428571416], [82.0, 46.41071428571429], [83.0, 49.714285714285715], [81.0, 53.81249999999999], [80.0, 47.87719298245614], [87.0, 49.0], [86.0, 50.82894736842105], [85.0, 47.406779661016955], [84.0, 49.981818181818184], [91.0, 49.10526315789475], [89.0, 47.84375], [88.0, 47.714285714285694], [90.0, 51.06557377049179], [95.0, 50.62162162162162], [93.0, 51.25000000000001], [94.0, 47.78846153846153], [92.0, 53.098039215686285], [96.0, 49.250000000000014], [99.0, 47.74074074074075], [98.0, 49.29166666666667], [97.0, 49.73529411764706], [103.0, 51.607142857142854], [101.0, 47.83333333333333], [102.0, 51.46153846153847], [100.0, 49.9032258064516], [107.0, 50.358974358974365], [106.0, 52.56521739130435], [105.0, 48.032258064516135], [104.0, 49.38888888888888], [109.0, 53.49999999999999], [108.0, 47.949999999999996], [111.0, 51.24137931034484], [110.0, 57.19047619047618], [114.0, 49.529411764705884], [115.0, 50.41176470588236], [113.0, 48.53125000000001], [112.0, 49.8], [118.0, 79.67857142857142], [117.0, 59.8095238095238], [119.0, 49.18518518518519], [116.0, 53.11538461538461], [120.0, 56.33333333333333], [121.0, 50.94000000000001], [123.0, 52.41176470588236], [122.0, 49.39999999999999], [127.0, 65.46428571428574], [125.0, 65.25], [126.0, 51.11428571428572], [124.0, 52.57692307692307], [130.0, 70.43333333333331], [129.0, 72.34782608695653], [134.0, 50.72727272727274], [133.0, 53.08695652173913], [132.0, 52.719999999999985], [131.0, 53.666666666666664], [128.0, 53.833333333333336], [135.0, 52.230769230769226], [137.0, 55.044444444444444], [138.0, 99.67999999999999], [139.0, 86.21212121212123], [141.0, 63.33333333333335], [140.0, 62.20833333333333], [142.0, 51.166666666666664], [136.0, 49.407407407407405], [143.0, 52.935483870967744], [150.0, 62.518518518518505], [151.0, 89.10714285714285], [149.0, 60.037037037037024], [148.0, 54.71428571428571], [147.0, 64.06060606060606], [146.0, 71.24999999999999], [145.0, 56.451612903225815], [144.0, 51.99999999999999], [154.0, 57.90476190476191], [153.0, 112.65714285714289], [152.0, 111.78000000000002], [159.0, 53.03030303030304], [158.0, 54.05128205128205], [157.0, 52.607142857142854], [156.0, 56.294117647058826], [155.0, 53.916666666666664], [165.0, 84.58333333333333], [164.0, 73.69565217391305], [163.0, 56.99999999999999], [160.0, 54.499999999999986], [167.0, 50.199999999999996], [166.0, 48.95652173913043], [162.0, 53.13636363636363], [161.0, 54.230769230769226], [175.0, 69.74999999999999], [174.0, 90.07692307692308], [173.0, 50.3125], [172.0, 48.904761904761905], [169.0, 52.727272727272734], [168.0, 55.0], [171.0, 50.75000000000001], [170.0, 52.5], [183.0, 85.0], [182.0, 64.73333333333335], [181.0, 74.66666666666667], [180.0, 60.00000000000001], [179.0, 52.666666666666664], [178.0, 48.11764705882353], [176.0, 51.263157894736835], [177.0, 53.444444444444436], [191.0, 58.1891891891892], [190.0, 74.3], [189.0, 81.6470588235294], [185.0, 64.67857142857143], [184.0, 62.53333333333334], [188.0, 55.27272727272727], [186.0, 53.25], [187.0, 55.50000000000001], [198.0, 71.18181818181819], [192.0, 88.33333333333333], [199.0, 61.92857142857143], [194.0, 56.16279069767443], [197.0, 59.0], [195.0, 61.315789473684205], [193.0, 54.642857142857146], [196.0, 56.4], [207.0, 94.42857142857143], [206.0, 87.3076923076923], [203.0, 67.5625], [205.0, 54.74074074074073], [204.0, 58.6], [202.0, 54.900000000000006], [201.0, 62.07692307692307], [200.0, 64.60377358490565], [210.0, 129.45454545454555], [209.0, 97.88095238095237], [208.0, 65.38709677419354], [213.0, 64.17777777777775], [212.0, 57.29411764705883], [215.0, 58.8], [214.0, 57.769230769230774], [211.0, 57.72727272727273], [223.0, 64.5], [222.0, 59.63157894736842], [221.0, 69.59999999999998], [220.0, 60.1], [219.0, 54.5], [218.0, 59.99999999999999], [216.0, 53.75], [217.0, 59.21428571428571], [228.0, 59.99999999999999], [227.0, 63.0], [226.0, 60.49999999999999], [225.0, 63.63636363636363], [224.0, 55.777777777777786], [231.0, 59.1], [229.0, 57.166666666666664], [230.0, 57.0], [232.0, 60.75], [238.0, 54.5], [236.0, 68.8], [234.0, 59.0], [233.0, 63.85714285714286], [239.0, 70.66666666666667], [247.0, 62.0], [245.0, 62.0], [243.0, 63.0], [242.0, 62.5], [240.0, 55.5], [248.0, 67.25], [254.0, 61.0], [253.0, 74.0], [252.0, 64.0], [251.0, 68.0], [250.0, 79.0], [249.0, 63.0], [256.0, 78.0], [1.0, 4.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[87.85039999999968, 49.08390000000008]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1064.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1791.0, "minX": 1.66901352E12, "maxY": 128748.81666666667, "series": [{"data": [[1.66901358E12, 60375.666666666664], [1.66901352E12, 1791.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66901358E12, 128748.81666666667], [1.66901352E12, 2417.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901358E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 46.99723492502396, "minX": 1.66901352E12, "maxY": 269.54439999999806, "series": [{"data": [[1.66901358E12, 75.7385]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901358E12, 269.54439999999806]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901358E12, 46.99723492502396], [1.66901352E12, 81.9497487437186]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901358E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 46.98149526746778, "minX": 1.66901352E12, "maxY": 269.4111999999991, "series": [{"data": [[1.66901358E12, 75.72680000000018]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901358E12, 269.4111999999991]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901358E12, 46.98149526746778], [1.66901352E12, 78.23115577889452]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901358E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 8.888499999999997, "minX": 1.66901352E12, "maxY": 31.30318257956449, "series": [{"data": [[1.66901358E12, 9.478600000000073]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66901358E12, 8.888499999999997]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66901358E12, 8.893225566308653], [1.66901352E12, 31.30318257956449]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901358E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.66901352E12, "maxY": 899.0, "series": [{"data": [[1.66901358E12, 899.0], [1.66901352E12, 327.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66901358E12, 556.9000000000015], [1.66901352E12, 241.20000000000005]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66901358E12, 730.9800000000032], [1.66901352E12, 320.02]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66901358E12, 626.9500000000007], [1.66901352E12, 270.4000000000001]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66901358E12, 3.0], [1.66901352E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66901358E12, 71.0], [1.66901352E12, 35.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901358E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 24.0, "minX": 597.0, "maxY": 635.0, "series": [{"data": [[2053.0, 55.0], [597.0, 35.0], [2394.0, 65.0], [639.0, 24.0], [907.0, 42.0], [1078.0, 42.0], [1196.0, 42.0], [1190.0, 375.0], [1218.0, 29.0], [1223.0, 24.0], [1231.0, 25.0], [1314.0, 507.0], [1374.0, 635.0], [1399.0, 390.0], [1502.0, 64.0], [1559.0, 47.0], [1598.0, 45.0], [1812.0, 68.0], [1792.0, 63.0], [1871.0, 77.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2394.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 24.0, "minX": 597.0, "maxY": 634.0, "series": [{"data": [[2053.0, 55.0], [597.0, 34.0], [2394.0, 65.0], [639.0, 24.0], [907.0, 42.0], [1078.0, 42.0], [1196.0, 42.0], [1190.0, 375.0], [1218.0, 29.0], [1223.0, 24.0], [1231.0, 25.0], [1314.0, 507.0], [1374.0, 634.0], [1399.0, 389.0], [1502.0, 64.0], [1559.0, 47.0], [1598.0, 45.0], [1812.0, 68.0], [1792.0, 63.0], [1871.0, 77.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2394.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 10.533333333333333, "minX": 1.66901352E12, "maxY": 489.46666666666664, "series": [{"data": [[1.66901358E12, 489.46666666666664], [1.66901352E12, 10.533333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901358E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 9.95, "minX": 1.66901352E12, "maxY": 490.05, "series": [{"data": [[1.66901358E12, 490.05], [1.66901352E12, 9.95]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66901358E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 9.95, "minX": 1.66901352E12, "maxY": 166.66666666666666, "series": [{"data": [[1.66901358E12, 156.71666666666667], [1.66901352E12, 9.95]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66901358E12, 166.66666666666666]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66901358E12, 166.66666666666666]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901358E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 9.95, "minX": 1.66901352E12, "maxY": 490.05, "series": [{"data": [[1.66901358E12, 490.05], [1.66901352E12, 9.95]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66901358E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

