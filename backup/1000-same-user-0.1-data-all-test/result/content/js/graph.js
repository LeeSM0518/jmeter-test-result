/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 2696.0, "series": [{"data": [[0.0, 9.0], [0.1, 25.0], [0.2, 28.0], [0.3, 28.0], [0.4, 29.0], [0.5, 34.0], [0.6, 37.0], [0.7, 38.0], [0.8, 40.0], [0.9, 42.0], [1.0, 42.0], [1.1, 44.0], [1.2, 46.0], [1.3, 46.0], [1.4, 48.0], [1.5, 48.0], [1.6, 49.0], [1.7, 58.0], [1.8, 62.0], [1.9, 62.0], [2.0, 64.0], [2.1, 65.0], [2.2, 67.0], [2.3, 67.0], [2.4, 68.0], [2.5, 68.0], [2.6, 71.0], [2.7, 71.0], [2.8, 76.0], [2.9, 78.0], [3.0, 78.0], [3.1, 80.0], [3.2, 80.0], [3.3, 81.0], [3.4, 81.0], [3.5, 82.0], [3.6, 82.0], [3.7, 86.0], [3.8, 87.0], [3.9, 88.0], [4.0, 88.0], [4.1, 89.0], [4.2, 90.0], [4.3, 91.0], [4.4, 92.0], [4.5, 92.0], [4.6, 94.0], [4.7, 95.0], [4.8, 95.0], [4.9, 96.0], [5.0, 96.0], [5.1, 97.0], [5.2, 98.0], [5.3, 98.0], [5.4, 99.0], [5.5, 99.0], [5.6, 99.0], [5.7, 100.0], [5.8, 100.0], [5.9, 104.0], [6.0, 105.0], [6.1, 106.0], [6.2, 107.0], [6.3, 109.0], [6.4, 113.0], [6.5, 114.0], [6.6, 116.0], [6.7, 120.0], [6.8, 121.0], [6.9, 121.0], [7.0, 121.0], [7.1, 122.0], [7.2, 128.0], [7.3, 130.0], [7.4, 130.0], [7.5, 132.0], [7.6, 132.0], [7.7, 134.0], [7.8, 134.0], [7.9, 136.0], [8.0, 138.0], [8.1, 138.0], [8.2, 140.0], [8.3, 141.0], [8.4, 141.0], [8.5, 145.0], [8.6, 148.0], [8.7, 148.0], [8.8, 151.0], [8.9, 151.0], [9.0, 154.0], [9.1, 157.0], [9.2, 157.0], [9.3, 158.0], [9.4, 161.0], [9.5, 162.0], [9.6, 162.0], [9.7, 163.0], [9.8, 168.0], [9.9, 169.0], [10.0, 169.0], [10.1, 171.0], [10.2, 172.0], [10.3, 175.0], [10.4, 176.0], [10.5, 179.0], [10.6, 188.0], [10.7, 191.0], [10.8, 192.0], [10.9, 193.0], [11.0, 194.0], [11.1, 196.0], [11.2, 198.0], [11.3, 200.0], [11.4, 200.0], [11.5, 200.0], [11.6, 201.0], [11.7, 203.0], [11.8, 203.0], [11.9, 203.0], [12.0, 204.0], [12.1, 205.0], [12.2, 207.0], [12.3, 207.0], [12.4, 207.0], [12.5, 208.0], [12.6, 209.0], [12.7, 210.0], [12.8, 211.0], [12.9, 211.0], [13.0, 211.0], [13.1, 214.0], [13.2, 216.0], [13.3, 216.0], [13.4, 217.0], [13.5, 217.0], [13.6, 218.0], [13.7, 218.0], [13.8, 220.0], [13.9, 223.0], [14.0, 224.0], [14.1, 224.0], [14.2, 224.0], [14.3, 225.0], [14.4, 226.0], [14.5, 231.0], [14.6, 231.0], [14.7, 235.0], [14.8, 235.0], [14.9, 238.0], [15.0, 240.0], [15.1, 241.0], [15.2, 245.0], [15.3, 245.0], [15.4, 245.0], [15.5, 246.0], [15.6, 248.0], [15.7, 249.0], [15.8, 249.0], [15.9, 250.0], [16.0, 251.0], [16.1, 254.0], [16.2, 255.0], [16.3, 257.0], [16.4, 257.0], [16.5, 258.0], [16.6, 258.0], [16.7, 262.0], [16.8, 263.0], [16.9, 265.0], [17.0, 267.0], [17.1, 267.0], [17.2, 268.0], [17.3, 268.0], [17.4, 269.0], [17.5, 269.0], [17.6, 270.0], [17.7, 271.0], [17.8, 271.0], [17.9, 273.0], [18.0, 274.0], [18.1, 274.0], [18.2, 276.0], [18.3, 280.0], [18.4, 282.0], [18.5, 283.0], [18.6, 285.0], [18.7, 287.0], [18.8, 287.0], [18.9, 288.0], [19.0, 289.0], [19.1, 290.0], [19.2, 292.0], [19.3, 299.0], [19.4, 299.0], [19.5, 301.0], [19.6, 302.0], [19.7, 304.0], [19.8, 305.0], [19.9, 305.0], [20.0, 308.0], [20.1, 309.0], [20.2, 309.0], [20.3, 310.0], [20.4, 311.0], [20.5, 313.0], [20.6, 315.0], [20.7, 317.0], [20.8, 318.0], [20.9, 319.0], [21.0, 319.0], [21.1, 319.0], [21.2, 321.0], [21.3, 321.0], [21.4, 321.0], [21.5, 323.0], [21.6, 326.0], [21.7, 328.0], [21.8, 330.0], [21.9, 330.0], [22.0, 331.0], [22.1, 333.0], [22.2, 335.0], [22.3, 336.0], [22.4, 337.0], [22.5, 337.0], [22.6, 341.0], [22.7, 341.0], [22.8, 342.0], [22.9, 342.0], [23.0, 345.0], [23.1, 346.0], [23.2, 346.0], [23.3, 348.0], [23.4, 349.0], [23.5, 350.0], [23.6, 350.0], [23.7, 351.0], [23.8, 359.0], [23.9, 360.0], [24.0, 364.0], [24.1, 364.0], [24.2, 365.0], [24.3, 365.0], [24.4, 365.0], [24.5, 366.0], [24.6, 366.0], [24.7, 367.0], [24.8, 367.0], [24.9, 368.0], [25.0, 368.0], [25.1, 368.0], [25.2, 368.0], [25.3, 369.0], [25.4, 370.0], [25.5, 370.0], [25.6, 371.0], [25.7, 371.0], [25.8, 371.0], [25.9, 372.0], [26.0, 373.0], [26.1, 373.0], [26.2, 373.0], [26.3, 373.0], [26.4, 374.0], [26.5, 375.0], [26.6, 376.0], [26.7, 376.0], [26.8, 377.0], [26.9, 377.0], [27.0, 378.0], [27.1, 379.0], [27.2, 380.0], [27.3, 380.0], [27.4, 385.0], [27.5, 387.0], [27.6, 387.0], [27.7, 387.0], [27.8, 387.0], [27.9, 388.0], [28.0, 392.0], [28.1, 392.0], [28.2, 393.0], [28.3, 393.0], [28.4, 394.0], [28.5, 394.0], [28.6, 395.0], [28.7, 395.0], [28.8, 395.0], [28.9, 396.0], [29.0, 396.0], [29.1, 397.0], [29.2, 397.0], [29.3, 398.0], [29.4, 398.0], [29.5, 399.0], [29.6, 399.0], [29.7, 400.0], [29.8, 400.0], [29.9, 400.0], [30.0, 401.0], [30.1, 401.0], [30.2, 401.0], [30.3, 402.0], [30.4, 402.0], [30.5, 403.0], [30.6, 403.0], [30.7, 404.0], [30.8, 404.0], [30.9, 404.0], [31.0, 404.0], [31.1, 407.0], [31.2, 407.0], [31.3, 407.0], [31.4, 408.0], [31.5, 409.0], [31.6, 412.0], [31.7, 412.0], [31.8, 413.0], [31.9, 414.0], [32.0, 416.0], [32.1, 417.0], [32.2, 417.0], [32.3, 418.0], [32.4, 418.0], [32.5, 421.0], [32.6, 421.0], [32.7, 422.0], [32.8, 424.0], [32.9, 424.0], [33.0, 424.0], [33.1, 425.0], [33.2, 425.0], [33.3, 426.0], [33.4, 426.0], [33.5, 426.0], [33.6, 426.0], [33.7, 427.0], [33.8, 427.0], [33.9, 427.0], [34.0, 428.0], [34.1, 428.0], [34.2, 428.0], [34.3, 430.0], [34.4, 430.0], [34.5, 431.0], [34.6, 431.0], [34.7, 432.0], [34.8, 432.0], [34.9, 435.0], [35.0, 436.0], [35.1, 439.0], [35.2, 439.0], [35.3, 442.0], [35.4, 443.0], [35.5, 443.0], [35.6, 446.0], [35.7, 446.0], [35.8, 446.0], [35.9, 447.0], [36.0, 450.0], [36.1, 451.0], [36.2, 451.0], [36.3, 452.0], [36.4, 454.0], [36.5, 457.0], [36.6, 458.0], [36.7, 459.0], [36.8, 462.0], [36.9, 462.0], [37.0, 463.0], [37.1, 465.0], [37.2, 465.0], [37.3, 466.0], [37.4, 466.0], [37.5, 466.0], [37.6, 467.0], [37.7, 467.0], [37.8, 470.0], [37.9, 473.0], [38.0, 473.0], [38.1, 474.0], [38.2, 474.0], [38.3, 475.0], [38.4, 475.0], [38.5, 476.0], [38.6, 477.0], [38.7, 477.0], [38.8, 478.0], [38.9, 481.0], [39.0, 481.0], [39.1, 487.0], [39.2, 487.0], [39.3, 487.0], [39.4, 490.0], [39.5, 491.0], [39.6, 493.0], [39.7, 496.0], [39.8, 497.0], [39.9, 498.0], [40.0, 499.0], [40.1, 500.0], [40.2, 500.0], [40.3, 500.0], [40.4, 501.0], [40.5, 504.0], [40.6, 505.0], [40.7, 507.0], [40.8, 508.0], [40.9, 511.0], [41.0, 512.0], [41.1, 513.0], [41.2, 516.0], [41.3, 517.0], [41.4, 518.0], [41.5, 519.0], [41.6, 519.0], [41.7, 520.0], [41.8, 521.0], [41.9, 521.0], [42.0, 521.0], [42.1, 522.0], [42.2, 522.0], [42.3, 523.0], [42.4, 526.0], [42.5, 527.0], [42.6, 529.0], [42.7, 532.0], [42.8, 533.0], [42.9, 535.0], [43.0, 536.0], [43.1, 537.0], [43.2, 539.0], [43.3, 539.0], [43.4, 542.0], [43.5, 543.0], [43.6, 545.0], [43.7, 546.0], [43.8, 546.0], [43.9, 548.0], [44.0, 549.0], [44.1, 549.0], [44.2, 552.0], [44.3, 554.0], [44.4, 555.0], [44.5, 556.0], [44.6, 556.0], [44.7, 557.0], [44.8, 558.0], [44.9, 561.0], [45.0, 561.0], [45.1, 562.0], [45.2, 562.0], [45.3, 562.0], [45.4, 563.0], [45.5, 568.0], [45.6, 568.0], [45.7, 569.0], [45.8, 569.0], [45.9, 572.0], [46.0, 573.0], [46.1, 579.0], [46.2, 579.0], [46.3, 581.0], [46.4, 581.0], [46.5, 581.0], [46.6, 582.0], [46.7, 584.0], [46.8, 587.0], [46.9, 589.0], [47.0, 591.0], [47.1, 593.0], [47.2, 594.0], [47.3, 597.0], [47.4, 598.0], [47.5, 599.0], [47.6, 600.0], [47.7, 601.0], [47.8, 603.0], [47.9, 604.0], [48.0, 604.0], [48.1, 604.0], [48.2, 606.0], [48.3, 607.0], [48.4, 609.0], [48.5, 609.0], [48.6, 611.0], [48.7, 612.0], [48.8, 613.0], [48.9, 615.0], [49.0, 620.0], [49.1, 621.0], [49.2, 621.0], [49.3, 629.0], [49.4, 630.0], [49.5, 630.0], [49.6, 631.0], [49.7, 632.0], [49.8, 633.0], [49.9, 633.0], [50.0, 635.0], [50.1, 638.0], [50.2, 639.0], [50.3, 639.0], [50.4, 644.0], [50.5, 644.0], [50.6, 645.0], [50.7, 646.0], [50.8, 647.0], [50.9, 647.0], [51.0, 650.0], [51.1, 651.0], [51.2, 653.0], [51.3, 654.0], [51.4, 655.0], [51.5, 656.0], [51.6, 659.0], [51.7, 661.0], [51.8, 663.0], [51.9, 663.0], [52.0, 663.0], [52.1, 669.0], [52.2, 673.0], [52.3, 674.0], [52.4, 677.0], [52.5, 677.0], [52.6, 678.0], [52.7, 679.0], [52.8, 681.0], [52.9, 681.0], [53.0, 682.0], [53.1, 684.0], [53.2, 687.0], [53.3, 687.0], [53.4, 688.0], [53.5, 690.0], [53.6, 697.0], [53.7, 698.0], [53.8, 699.0], [53.9, 700.0], [54.0, 703.0], [54.1, 704.0], [54.2, 705.0], [54.3, 705.0], [54.4, 710.0], [54.5, 715.0], [54.6, 716.0], [54.7, 716.0], [54.8, 717.0], [54.9, 719.0], [55.0, 720.0], [55.1, 726.0], [55.2, 731.0], [55.3, 731.0], [55.4, 731.0], [55.5, 732.0], [55.6, 734.0], [55.7, 736.0], [55.8, 740.0], [55.9, 740.0], [56.0, 741.0], [56.1, 742.0], [56.2, 744.0], [56.3, 745.0], [56.4, 746.0], [56.5, 748.0], [56.6, 749.0], [56.7, 750.0], [56.8, 752.0], [56.9, 752.0], [57.0, 753.0], [57.1, 755.0], [57.2, 756.0], [57.3, 756.0], [57.4, 758.0], [57.5, 759.0], [57.6, 760.0], [57.7, 762.0], [57.8, 763.0], [57.9, 765.0], [58.0, 780.0], [58.1, 785.0], [58.2, 786.0], [58.3, 789.0], [58.4, 789.0], [58.5, 796.0], [58.6, 797.0], [58.7, 797.0], [58.8, 801.0], [58.9, 802.0], [59.0, 802.0], [59.1, 803.0], [59.2, 803.0], [59.3, 804.0], [59.4, 805.0], [59.5, 805.0], [59.6, 809.0], [59.7, 810.0], [59.8, 812.0], [59.9, 813.0], [60.0, 813.0], [60.1, 816.0], [60.2, 820.0], [60.3, 820.0], [60.4, 822.0], [60.5, 824.0], [60.6, 825.0], [60.7, 825.0], [60.8, 826.0], [60.9, 827.0], [61.0, 831.0], [61.1, 835.0], [61.2, 841.0], [61.3, 842.0], [61.4, 844.0], [61.5, 846.0], [61.6, 847.0], [61.7, 847.0], [61.8, 847.0], [61.9, 849.0], [62.0, 852.0], [62.1, 852.0], [62.2, 853.0], [62.3, 856.0], [62.4, 856.0], [62.5, 857.0], [62.6, 857.0], [62.7, 858.0], [62.8, 858.0], [62.9, 859.0], [63.0, 859.0], [63.1, 860.0], [63.2, 861.0], [63.3, 870.0], [63.4, 870.0], [63.5, 871.0], [63.6, 872.0], [63.7, 874.0], [63.8, 877.0], [63.9, 880.0], [64.0, 880.0], [64.1, 881.0], [64.2, 882.0], [64.3, 883.0], [64.4, 884.0], [64.5, 886.0], [64.6, 886.0], [64.7, 886.0], [64.8, 887.0], [64.9, 887.0], [65.0, 892.0], [65.1, 894.0], [65.2, 895.0], [65.3, 895.0], [65.4, 895.0], [65.5, 896.0], [65.6, 896.0], [65.7, 896.0], [65.8, 899.0], [65.9, 899.0], [66.0, 899.0], [66.1, 901.0], [66.2, 902.0], [66.3, 903.0], [66.4, 905.0], [66.5, 906.0], [66.6, 907.0], [66.7, 907.0], [66.8, 914.0], [66.9, 916.0], [67.0, 917.0], [67.1, 917.0], [67.2, 918.0], [67.3, 920.0], [67.4, 920.0], [67.5, 922.0], [67.6, 923.0], [67.7, 927.0], [67.8, 928.0], [67.9, 928.0], [68.0, 928.0], [68.1, 928.0], [68.2, 932.0], [68.3, 937.0], [68.4, 937.0], [68.5, 943.0], [68.6, 944.0], [68.7, 946.0], [68.8, 948.0], [68.9, 949.0], [69.0, 950.0], [69.1, 951.0], [69.2, 952.0], [69.3, 952.0], [69.4, 953.0], [69.5, 954.0], [69.6, 954.0], [69.7, 956.0], [69.8, 957.0], [69.9, 957.0], [70.0, 958.0], [70.1, 958.0], [70.2, 959.0], [70.3, 959.0], [70.4, 959.0], [70.5, 960.0], [70.6, 960.0], [70.7, 961.0], [70.8, 962.0], [70.9, 962.0], [71.0, 964.0], [71.1, 965.0], [71.2, 965.0], [71.3, 967.0], [71.4, 967.0], [71.5, 968.0], [71.6, 969.0], [71.7, 970.0], [71.8, 972.0], [71.9, 973.0], [72.0, 974.0], [72.1, 975.0], [72.2, 975.0], [72.3, 977.0], [72.4, 977.0], [72.5, 978.0], [72.6, 979.0], [72.7, 979.0], [72.8, 981.0], [72.9, 983.0], [73.0, 985.0], [73.1, 986.0], [73.2, 986.0], [73.3, 987.0], [73.4, 987.0], [73.5, 988.0], [73.6, 992.0], [73.7, 995.0], [73.8, 997.0], [73.9, 998.0], [74.0, 1000.0], [74.1, 1000.0], [74.2, 1001.0], [74.3, 1002.0], [74.4, 1003.0], [74.5, 1004.0], [74.6, 1006.0], [74.7, 1006.0], [74.8, 1006.0], [74.9, 1007.0], [75.0, 1007.0], [75.1, 1007.0], [75.2, 1008.0], [75.3, 1009.0], [75.4, 1009.0], [75.5, 1010.0], [75.6, 1012.0], [75.7, 1017.0], [75.8, 1018.0], [75.9, 1018.0], [76.0, 1019.0], [76.1, 1020.0], [76.2, 1022.0], [76.3, 1024.0], [76.4, 1026.0], [76.5, 1026.0], [76.6, 1026.0], [76.7, 1027.0], [76.8, 1028.0], [76.9, 1030.0], [77.0, 1033.0], [77.1, 1033.0], [77.2, 1034.0], [77.3, 1034.0], [77.4, 1036.0], [77.5, 1036.0], [77.6, 1038.0], [77.7, 1039.0], [77.8, 1040.0], [77.9, 1040.0], [78.0, 1041.0], [78.1, 1041.0], [78.2, 1044.0], [78.3, 1044.0], [78.4, 1047.0], [78.5, 1050.0], [78.6, 1050.0], [78.7, 1052.0], [78.8, 1053.0], [78.9, 1053.0], [79.0, 1054.0], [79.1, 1054.0], [79.2, 1055.0], [79.3, 1055.0], [79.4, 1056.0], [79.5, 1057.0], [79.6, 1057.0], [79.7, 1058.0], [79.8, 1058.0], [79.9, 1060.0], [80.0, 1061.0], [80.1, 1065.0], [80.2, 1065.0], [80.3, 1067.0], [80.4, 1069.0], [80.5, 1073.0], [80.6, 1073.0], [80.7, 1074.0], [80.8, 1075.0], [80.9, 1075.0], [81.0, 1076.0], [81.1, 1077.0], [81.2, 1078.0], [81.3, 1079.0], [81.4, 1086.0], [81.5, 1086.0], [81.6, 1086.0], [81.7, 1087.0], [81.8, 1091.0], [81.9, 1095.0], [82.0, 1098.0], [82.1, 1100.0], [82.2, 1101.0], [82.3, 1101.0], [82.4, 1103.0], [82.5, 1103.0], [82.6, 1109.0], [82.7, 1111.0], [82.8, 1111.0], [82.9, 1115.0], [83.0, 1116.0], [83.1, 1120.0], [83.2, 1120.0], [83.3, 1120.0], [83.4, 1120.0], [83.5, 1121.0], [83.6, 1121.0], [83.7, 1123.0], [83.8, 1124.0], [83.9, 1125.0], [84.0, 1125.0], [84.1, 1126.0], [84.2, 1127.0], [84.3, 1127.0], [84.4, 1129.0], [84.5, 1131.0], [84.6, 1135.0], [84.7, 1136.0], [84.8, 1138.0], [84.9, 1140.0], [85.0, 1141.0], [85.1, 1142.0], [85.2, 1146.0], [85.3, 1147.0], [85.4, 1147.0], [85.5, 1148.0], [85.6, 1149.0], [85.7, 1151.0], [85.8, 1151.0], [85.9, 1152.0], [86.0, 1153.0], [86.1, 1156.0], [86.2, 1156.0], [86.3, 1157.0], [86.4, 1160.0], [86.5, 1162.0], [86.6, 1163.0], [86.7, 1165.0], [86.8, 1166.0], [86.9, 1168.0], [87.0, 1170.0], [87.1, 1170.0], [87.2, 1170.0], [87.3, 1171.0], [87.4, 1177.0], [87.5, 1178.0], [87.6, 1179.0], [87.7, 1185.0], [87.8, 1186.0], [87.9, 1188.0], [88.0, 1192.0], [88.1, 1195.0], [88.2, 1197.0], [88.3, 1199.0], [88.4, 1201.0], [88.5, 1203.0], [88.6, 1203.0], [88.7, 1204.0], [88.8, 1205.0], [88.9, 1207.0], [89.0, 1209.0], [89.1, 1212.0], [89.2, 1213.0], [89.3, 1217.0], [89.4, 1217.0], [89.5, 1220.0], [89.6, 1222.0], [89.7, 1222.0], [89.8, 1224.0], [89.9, 1225.0], [90.0, 1226.0], [90.1, 1228.0], [90.2, 1229.0], [90.3, 1229.0], [90.4, 1230.0], [90.5, 1231.0], [90.6, 1232.0], [90.7, 1234.0], [90.8, 1238.0], [90.9, 1240.0], [91.0, 1244.0], [91.1, 1246.0], [91.2, 1246.0], [91.3, 1247.0], [91.4, 1249.0], [91.5, 1249.0], [91.6, 1250.0], [91.7, 1252.0], [91.8, 1254.0], [91.9, 1254.0], [92.0, 1260.0], [92.1, 1260.0], [92.2, 1263.0], [92.3, 1264.0], [92.4, 1265.0], [92.5, 1266.0], [92.6, 1271.0], [92.7, 1275.0], [92.8, 1278.0], [92.9, 1280.0], [93.0, 1282.0], [93.1, 1282.0], [93.2, 1284.0], [93.3, 1288.0], [93.4, 1289.0], [93.5, 1290.0], [93.6, 1292.0], [93.7, 1292.0], [93.8, 1292.0], [93.9, 1294.0], [94.0, 1299.0], [94.1, 1303.0], [94.2, 1317.0], [94.3, 1319.0], [94.4, 1325.0], [94.5, 1326.0], [94.6, 1327.0], [94.7, 1329.0], [94.8, 1330.0], [94.9, 1333.0], [95.0, 1337.0], [95.1, 1337.0], [95.2, 1338.0], [95.3, 1341.0], [95.4, 1343.0], [95.5, 1349.0], [95.6, 1349.0], [95.7, 1351.0], [95.8, 1351.0], [95.9, 1352.0], [96.0, 1358.0], [96.1, 1363.0], [96.2, 1365.0], [96.3, 1366.0], [96.4, 1367.0], [96.5, 1367.0], [96.6, 1368.0], [96.7, 1369.0], [96.8, 1370.0], [96.9, 1373.0], [97.0, 1373.0], [97.1, 1374.0], [97.2, 1377.0], [97.3, 1378.0], [97.4, 1383.0], [97.5, 1384.0], [97.6, 1393.0], [97.7, 1397.0], [97.8, 1400.0], [97.9, 1403.0], [98.0, 1411.0], [98.1, 1413.0], [98.2, 1433.0], [98.3, 1434.0], [98.4, 1436.0], [98.5, 1448.0], [98.6, 1448.0], [98.7, 1461.0], [98.8, 1471.0], [98.9, 1476.0], [99.0, 1493.0], [99.1, 1497.0], [99.2, 1516.0], [99.3, 1566.0], [99.4, 1586.0], [99.5, 1623.0], [99.6, 1669.0], [99.7, 1683.0], [99.8, 1899.0], [99.9, 2121.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 4.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 8.0], [4.2, 9.0], [4.3, 9.0], [4.4, 9.0], [4.5, 9.0], [4.6, 10.0], [4.7, 10.0], [4.8, 10.0], [4.9, 10.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 12.0], [6.2, 12.0], [6.3, 12.0], [6.4, 13.0], [6.5, 13.0], [6.6, 13.0], [6.7, 13.0], [6.8, 13.0], [6.9, 14.0], [7.0, 14.0], [7.1, 14.0], [7.2, 14.0], [7.3, 15.0], [7.4, 16.0], [7.5, 16.0], [7.6, 17.0], [7.7, 18.0], [7.8, 18.0], [7.9, 19.0], [8.0, 20.0], [8.1, 20.0], [8.2, 20.0], [8.3, 20.0], [8.4, 20.0], [8.5, 20.0], [8.6, 20.0], [8.7, 21.0], [8.8, 21.0], [8.9, 21.0], [9.0, 22.0], [9.1, 23.0], [9.2, 24.0], [9.3, 24.0], [9.4, 24.0], [9.5, 25.0], [9.6, 26.0], [9.7, 26.0], [9.8, 27.0], [9.9, 27.0], [10.0, 27.0], [10.1, 28.0], [10.2, 28.0], [10.3, 28.0], [10.4, 28.0], [10.5, 28.0], [10.6, 29.0], [10.7, 29.0], [10.8, 29.0], [10.9, 29.0], [11.0, 29.0], [11.1, 29.0], [11.2, 29.0], [11.3, 29.0], [11.4, 30.0], [11.5, 30.0], [11.6, 30.0], [11.7, 30.0], [11.8, 30.0], [11.9, 30.0], [12.0, 30.0], [12.1, 30.0], [12.2, 30.0], [12.3, 30.0], [12.4, 30.0], [12.5, 31.0], [12.6, 31.0], [12.7, 31.0], [12.8, 31.0], [12.9, 31.0], [13.0, 31.0], [13.1, 31.0], [13.2, 31.0], [13.3, 31.0], [13.4, 31.0], [13.5, 31.0], [13.6, 32.0], [13.7, 32.0], [13.8, 32.0], [13.9, 32.0], [14.0, 32.0], [14.1, 32.0], [14.2, 32.0], [14.3, 32.0], [14.4, 32.0], [14.5, 32.0], [14.6, 32.0], [14.7, 33.0], [14.8, 33.0], [14.9, 33.0], [15.0, 33.0], [15.1, 33.0], [15.2, 33.0], [15.3, 33.0], [15.4, 33.0], [15.5, 33.0], [15.6, 33.0], [15.7, 33.0], [15.8, 34.0], [15.9, 34.0], [16.0, 34.0], [16.1, 34.0], [16.2, 34.0], [16.3, 34.0], [16.4, 34.0], [16.5, 34.0], [16.6, 34.0], [16.7, 34.0], [16.8, 34.0], [16.9, 34.0], [17.0, 34.0], [17.1, 35.0], [17.2, 35.0], [17.3, 35.0], [17.4, 35.0], [17.5, 35.0], [17.6, 35.0], [17.7, 35.0], [17.8, 35.0], [17.9, 35.0], [18.0, 35.0], [18.1, 35.0], [18.2, 35.0], [18.3, 35.0], [18.4, 35.0], [18.5, 35.0], [18.6, 35.0], [18.7, 36.0], [18.8, 36.0], [18.9, 36.0], [19.0, 36.0], [19.1, 36.0], [19.2, 36.0], [19.3, 36.0], [19.4, 36.0], [19.5, 36.0], [19.6, 36.0], [19.7, 36.0], [19.8, 36.0], [19.9, 36.0], [20.0, 36.0], [20.1, 36.0], [20.2, 36.0], [20.3, 36.0], [20.4, 36.0], [20.5, 36.0], [20.6, 36.0], [20.7, 36.0], [20.8, 36.0], [20.9, 36.0], [21.0, 36.0], [21.1, 36.0], [21.2, 36.0], [21.3, 36.0], [21.4, 36.0], [21.5, 36.0], [21.6, 36.0], [21.7, 36.0], [21.8, 36.0], [21.9, 36.0], [22.0, 36.0], [22.1, 37.0], [22.2, 37.0], [22.3, 37.0], [22.4, 37.0], [22.5, 37.0], [22.6, 37.0], [22.7, 37.0], [22.8, 37.0], [22.9, 37.0], [23.0, 37.0], [23.1, 37.0], [23.2, 37.0], [23.3, 37.0], [23.4, 37.0], [23.5, 37.0], [23.6, 37.0], [23.7, 37.0], [23.8, 37.0], [23.9, 37.0], [24.0, 37.0], [24.1, 37.0], [24.2, 37.0], [24.3, 38.0], [24.4, 38.0], [24.5, 38.0], [24.6, 38.0], [24.7, 38.0], [24.8, 38.0], [24.9, 38.0], [25.0, 38.0], [25.1, 38.0], [25.2, 38.0], [25.3, 38.0], [25.4, 38.0], [25.5, 38.0], [25.6, 38.0], [25.7, 38.0], [25.8, 38.0], [25.9, 38.0], [26.0, 38.0], [26.1, 38.0], [26.2, 38.0], [26.3, 38.0], [26.4, 38.0], [26.5, 38.0], [26.6, 39.0], [26.7, 39.0], [26.8, 39.0], [26.9, 39.0], [27.0, 39.0], [27.1, 39.0], [27.2, 39.0], [27.3, 39.0], [27.4, 39.0], [27.5, 39.0], [27.6, 39.0], [27.7, 39.0], [27.8, 39.0], [27.9, 39.0], [28.0, 39.0], [28.1, 39.0], [28.2, 39.0], [28.3, 39.0], [28.4, 39.0], [28.5, 39.0], [28.6, 40.0], [28.7, 40.0], [28.8, 40.0], [28.9, 40.0], [29.0, 40.0], [29.1, 40.0], [29.2, 40.0], [29.3, 40.0], [29.4, 40.0], [29.5, 40.0], [29.6, 40.0], [29.7, 40.0], [29.8, 40.0], [29.9, 40.0], [30.0, 40.0], [30.1, 40.0], [30.2, 40.0], [30.3, 40.0], [30.4, 40.0], [30.5, 40.0], [30.6, 41.0], [30.7, 41.0], [30.8, 41.0], [30.9, 41.0], [31.0, 41.0], [31.1, 41.0], [31.2, 41.0], [31.3, 41.0], [31.4, 41.0], [31.5, 41.0], [31.6, 41.0], [31.7, 41.0], [31.8, 41.0], [31.9, 41.0], [32.0, 41.0], [32.1, 41.0], [32.2, 42.0], [32.3, 42.0], [32.4, 42.0], [32.5, 42.0], [32.6, 42.0], [32.7, 42.0], [32.8, 42.0], [32.9, 42.0], [33.0, 42.0], [33.1, 42.0], [33.2, 42.0], [33.3, 42.0], [33.4, 42.0], [33.5, 42.0], [33.6, 42.0], [33.7, 42.0], [33.8, 42.0], [33.9, 42.0], [34.0, 42.0], [34.1, 42.0], [34.2, 42.0], [34.3, 42.0], [34.4, 42.0], [34.5, 42.0], [34.6, 42.0], [34.7, 42.0], [34.8, 42.0], [34.9, 42.0], [35.0, 42.0], [35.1, 42.0], [35.2, 43.0], [35.3, 43.0], [35.4, 43.0], [35.5, 43.0], [35.6, 43.0], [35.7, 43.0], [35.8, 43.0], [35.9, 43.0], [36.0, 43.0], [36.1, 43.0], [36.2, 43.0], [36.3, 43.0], [36.4, 43.0], [36.5, 43.0], [36.6, 43.0], [36.7, 43.0], [36.8, 43.0], [36.9, 43.0], [37.0, 43.0], [37.1, 43.0], [37.2, 43.0], [37.3, 43.0], [37.4, 43.0], [37.5, 43.0], [37.6, 43.0], [37.7, 43.0], [37.8, 43.0], [37.9, 44.0], [38.0, 44.0], [38.1, 44.0], [38.2, 44.0], [38.3, 44.0], [38.4, 44.0], [38.5, 44.0], [38.6, 44.0], [38.7, 44.0], [38.8, 44.0], [38.9, 44.0], [39.0, 44.0], [39.1, 44.0], [39.2, 44.0], [39.3, 44.0], [39.4, 44.0], [39.5, 44.0], [39.6, 44.0], [39.7, 44.0], [39.8, 44.0], [39.9, 44.0], [40.0, 44.0], [40.1, 44.0], [40.2, 44.0], [40.3, 44.0], [40.4, 44.0], [40.5, 44.0], [40.6, 44.0], [40.7, 44.0], [40.8, 44.0], [40.9, 44.0], [41.0, 44.0], [41.1, 44.0], [41.2, 45.0], [41.3, 45.0], [41.4, 45.0], [41.5, 45.0], [41.6, 45.0], [41.7, 45.0], [41.8, 45.0], [41.9, 45.0], [42.0, 45.0], [42.1, 45.0], [42.2, 45.0], [42.3, 45.0], [42.4, 45.0], [42.5, 45.0], [42.6, 45.0], [42.7, 45.0], [42.8, 45.0], [42.9, 45.0], [43.0, 45.0], [43.1, 45.0], [43.2, 45.0], [43.3, 45.0], [43.4, 45.0], [43.5, 45.0], [43.6, 45.0], [43.7, 45.0], [43.8, 45.0], [43.9, 45.0], [44.0, 45.0], [44.1, 45.0], [44.2, 45.0], [44.3, 45.0], [44.4, 45.0], [44.5, 45.0], [44.6, 45.0], [44.7, 46.0], [44.8, 46.0], [44.9, 46.0], [45.0, 46.0], [45.1, 46.0], [45.2, 46.0], [45.3, 46.0], [45.4, 46.0], [45.5, 46.0], [45.6, 46.0], [45.7, 46.0], [45.8, 46.0], [45.9, 46.0], [46.0, 46.0], [46.1, 46.0], [46.2, 46.0], [46.3, 46.0], [46.4, 47.0], [46.5, 47.0], [46.6, 47.0], [46.7, 47.0], [46.8, 47.0], [46.9, 47.0], [47.0, 47.0], [47.1, 47.0], [47.2, 47.0], [47.3, 47.0], [47.4, 47.0], [47.5, 47.0], [47.6, 47.0], [47.7, 47.0], [47.8, 47.0], [47.9, 47.0], [48.0, 47.0], [48.1, 47.0], [48.2, 47.0], [48.3, 48.0], [48.4, 48.0], [48.5, 48.0], [48.6, 48.0], [48.7, 48.0], [48.8, 48.0], [48.9, 48.0], [49.0, 48.0], [49.1, 48.0], [49.2, 48.0], [49.3, 48.0], [49.4, 48.0], [49.5, 48.0], [49.6, 48.0], [49.7, 48.0], [49.8, 48.0], [49.9, 48.0], [50.0, 48.0], [50.1, 48.0], [50.2, 48.0], [50.3, 48.0], [50.4, 49.0], [50.5, 49.0], [50.6, 49.0], [50.7, 49.0], [50.8, 49.0], [50.9, 49.0], [51.0, 49.0], [51.1, 49.0], [51.2, 49.0], [51.3, 49.0], [51.4, 49.0], [51.5, 49.0], [51.6, 49.0], [51.7, 49.0], [51.8, 49.0], [51.9, 49.0], [52.0, 49.0], [52.1, 49.0], [52.2, 49.0], [52.3, 50.0], [52.4, 50.0], [52.5, 50.0], [52.6, 50.0], [52.7, 50.0], [52.8, 50.0], [52.9, 50.0], [53.0, 50.0], [53.1, 50.0], [53.2, 50.0], [53.3, 50.0], [53.4, 50.0], [53.5, 50.0], [53.6, 50.0], [53.7, 50.0], [53.8, 50.0], [53.9, 50.0], [54.0, 50.0], [54.1, 50.0], [54.2, 50.0], [54.3, 50.0], [54.4, 50.0], [54.5, 50.0], [54.6, 50.0], [54.7, 50.0], [54.8, 50.0], [54.9, 50.0], [55.0, 50.0], [55.1, 50.0], [55.2, 50.0], [55.3, 50.0], [55.4, 50.0], [55.5, 50.0], [55.6, 50.0], [55.7, 51.0], [55.8, 51.0], [55.9, 51.0], [56.0, 51.0], [56.1, 51.0], [56.2, 51.0], [56.3, 51.0], [56.4, 51.0], [56.5, 51.0], [56.6, 51.0], [56.7, 51.0], [56.8, 51.0], [56.9, 51.0], [57.0, 51.0], [57.1, 51.0], [57.2, 51.0], [57.3, 51.0], [57.4, 52.0], [57.5, 52.0], [57.6, 52.0], [57.7, 52.0], [57.8, 52.0], [57.9, 52.0], [58.0, 52.0], [58.1, 52.0], [58.2, 52.0], [58.3, 52.0], [58.4, 52.0], [58.5, 52.0], [58.6, 52.0], [58.7, 52.0], [58.8, 52.0], [58.9, 52.0], [59.0, 52.0], [59.1, 52.0], [59.2, 52.0], [59.3, 52.0], [59.4, 52.0], [59.5, 52.0], [59.6, 52.0], [59.7, 52.0], [59.8, 52.0], [59.9, 52.0], [60.0, 52.0], [60.1, 52.0], [60.2, 52.0], [60.3, 53.0], [60.4, 53.0], [60.5, 53.0], [60.6, 53.0], [60.7, 53.0], [60.8, 53.0], [60.9, 53.0], [61.0, 53.0], [61.1, 53.0], [61.2, 53.0], [61.3, 53.0], [61.4, 53.0], [61.5, 53.0], [61.6, 53.0], [61.7, 53.0], [61.8, 53.0], [61.9, 53.0], [62.0, 53.0], [62.1, 53.0], [62.2, 53.0], [62.3, 53.0], [62.4, 53.0], [62.5, 53.0], [62.6, 53.0], [62.7, 53.0], [62.8, 53.0], [62.9, 53.0], [63.0, 53.0], [63.1, 54.0], [63.2, 54.0], [63.3, 54.0], [63.4, 54.0], [63.5, 54.0], [63.6, 54.0], [63.7, 54.0], [63.8, 54.0], [63.9, 54.0], [64.0, 54.0], [64.1, 54.0], [64.2, 54.0], [64.3, 54.0], [64.4, 54.0], [64.5, 54.0], [64.6, 54.0], [64.7, 54.0], [64.8, 54.0], [64.9, 54.0], [65.0, 54.0], [65.1, 54.0], [65.2, 54.0], [65.3, 54.0], [65.4, 54.0], [65.5, 54.0], [65.6, 54.0], [65.7, 54.0], [65.8, 54.0], [65.9, 54.0], [66.0, 55.0], [66.1, 55.0], [66.2, 55.0], [66.3, 55.0], [66.4, 55.0], [66.5, 55.0], [66.6, 55.0], [66.7, 55.0], [66.8, 55.0], [66.9, 55.0], [67.0, 55.0], [67.1, 55.0], [67.2, 55.0], [67.3, 55.0], [67.4, 55.0], [67.5, 55.0], [67.6, 55.0], [67.7, 55.0], [67.8, 55.0], [67.9, 55.0], [68.0, 55.0], [68.1, 55.0], [68.2, 55.0], [68.3, 55.0], [68.4, 55.0], [68.5, 55.0], [68.6, 55.0], [68.7, 55.0], [68.8, 55.0], [68.9, 56.0], [69.0, 56.0], [69.1, 56.0], [69.2, 56.0], [69.3, 56.0], [69.4, 56.0], [69.5, 56.0], [69.6, 56.0], [69.7, 56.0], [69.8, 56.0], [69.9, 56.0], [70.0, 56.0], [70.1, 56.0], [70.2, 56.0], [70.3, 56.0], [70.4, 56.0], [70.5, 56.0], [70.6, 56.0], [70.7, 56.0], [70.8, 56.0], [70.9, 56.0], [71.0, 57.0], [71.1, 57.0], [71.2, 57.0], [71.3, 57.0], [71.4, 57.0], [71.5, 57.0], [71.6, 57.0], [71.7, 57.0], [71.8, 57.0], [71.9, 57.0], [72.0, 57.0], [72.1, 57.0], [72.2, 57.0], [72.3, 57.0], [72.4, 58.0], [72.5, 58.0], [72.6, 58.0], [72.7, 58.0], [72.8, 58.0], [72.9, 58.0], [73.0, 58.0], [73.1, 58.0], [73.2, 58.0], [73.3, 58.0], [73.4, 58.0], [73.5, 58.0], [73.6, 58.0], [73.7, 58.0], [73.8, 58.0], [73.9, 58.0], [74.0, 58.0], [74.1, 58.0], [74.2, 58.0], [74.3, 58.0], [74.4, 58.0], [74.5, 58.0], [74.6, 58.0], [74.7, 58.0], [74.8, 58.0], [74.9, 59.0], [75.0, 59.0], [75.1, 59.0], [75.2, 59.0], [75.3, 59.0], [75.4, 59.0], [75.5, 59.0], [75.6, 59.0], [75.7, 59.0], [75.8, 59.0], [75.9, 59.0], [76.0, 59.0], [76.1, 59.0], [76.2, 59.0], [76.3, 59.0], [76.4, 59.0], [76.5, 59.0], [76.6, 59.0], [76.7, 59.0], [76.8, 59.0], [76.9, 60.0], [77.0, 60.0], [77.1, 60.0], [77.2, 60.0], [77.3, 60.0], [77.4, 60.0], [77.5, 60.0], [77.6, 60.0], [77.7, 60.0], [77.8, 60.0], [77.9, 60.0], [78.0, 60.0], [78.1, 60.0], [78.2, 60.0], [78.3, 60.0], [78.4, 60.0], [78.5, 61.0], [78.6, 61.0], [78.7, 61.0], [78.8, 61.0], [78.9, 61.0], [79.0, 61.0], [79.1, 61.0], [79.2, 61.0], [79.3, 61.0], [79.4, 61.0], [79.5, 61.0], [79.6, 61.0], [79.7, 61.0], [79.8, 61.0], [79.9, 61.0], [80.0, 61.0], [80.1, 61.0], [80.2, 61.0], [80.3, 61.0], [80.4, 61.0], [80.5, 61.0], [80.6, 62.0], [80.7, 62.0], [80.8, 62.0], [80.9, 62.0], [81.0, 62.0], [81.1, 62.0], [81.2, 62.0], [81.3, 62.0], [81.4, 62.0], [81.5, 62.0], [81.6, 62.0], [81.7, 62.0], [81.8, 62.0], [81.9, 63.0], [82.0, 63.0], [82.1, 63.0], [82.2, 63.0], [82.3, 63.0], [82.4, 63.0], [82.5, 63.0], [82.6, 63.0], [82.7, 63.0], [82.8, 63.0], [82.9, 63.0], [83.0, 63.0], [83.1, 63.0], [83.2, 63.0], [83.3, 63.0], [83.4, 63.0], [83.5, 64.0], [83.6, 64.0], [83.7, 64.0], [83.8, 64.0], [83.9, 64.0], [84.0, 64.0], [84.1, 64.0], [84.2, 64.0], [84.3, 64.0], [84.4, 64.0], [84.5, 64.0], [84.6, 64.0], [84.7, 64.0], [84.8, 65.0], [84.9, 65.0], [85.0, 65.0], [85.1, 65.0], [85.2, 65.0], [85.3, 65.0], [85.4, 65.0], [85.5, 65.0], [85.6, 65.0], [85.7, 65.0], [85.8, 65.0], [85.9, 65.0], [86.0, 65.0], [86.1, 65.0], [86.2, 65.0], [86.3, 66.0], [86.4, 66.0], [86.5, 66.0], [86.6, 66.0], [86.7, 66.0], [86.8, 66.0], [86.9, 66.0], [87.0, 66.0], [87.1, 66.0], [87.2, 66.0], [87.3, 66.0], [87.4, 66.0], [87.5, 66.0], [87.6, 66.0], [87.7, 66.0], [87.8, 66.0], [87.9, 67.0], [88.0, 67.0], [88.1, 67.0], [88.2, 67.0], [88.3, 67.0], [88.4, 67.0], [88.5, 67.0], [88.6, 67.0], [88.7, 67.0], [88.8, 67.0], [88.9, 68.0], [89.0, 68.0], [89.1, 68.0], [89.2, 68.0], [89.3, 68.0], [89.4, 68.0], [89.5, 68.0], [89.6, 68.0], [89.7, 68.0], [89.8, 68.0], [89.9, 68.0], [90.0, 68.0], [90.1, 68.0], [90.2, 68.0], [90.3, 68.0], [90.4, 69.0], [90.5, 69.0], [90.6, 69.0], [90.7, 69.0], [90.8, 69.0], [90.9, 69.0], [91.0, 69.0], [91.1, 69.0], [91.2, 70.0], [91.3, 70.0], [91.4, 70.0], [91.5, 70.0], [91.6, 70.0], [91.7, 70.0], [91.8, 70.0], [91.9, 70.0], [92.0, 70.0], [92.1, 71.0], [92.2, 71.0], [92.3, 71.0], [92.4, 71.0], [92.5, 71.0], [92.6, 72.0], [92.7, 72.0], [92.8, 72.0], [92.9, 72.0], [93.0, 72.0], [93.1, 72.0], [93.2, 72.0], [93.3, 72.0], [93.4, 72.0], [93.5, 72.0], [93.6, 72.0], [93.7, 73.0], [93.8, 73.0], [93.9, 73.0], [94.0, 73.0], [94.1, 73.0], [94.2, 73.0], [94.3, 73.0], [94.4, 74.0], [94.5, 74.0], [94.6, 74.0], [94.7, 75.0], [94.8, 75.0], [94.9, 76.0], [95.0, 77.0], [95.1, 78.0], [95.2, 78.0], [95.3, 78.0], [95.4, 78.0], [95.5, 78.0], [95.6, 79.0], [95.7, 79.0], [95.8, 79.0], [95.9, 79.0], [96.0, 79.0], [96.1, 80.0], [96.2, 80.0], [96.3, 81.0], [96.4, 81.0], [96.5, 81.0], [96.6, 81.0], [96.7, 82.0], [96.8, 82.0], [96.9, 83.0], [97.0, 84.0], [97.1, 86.0], [97.2, 86.0], [97.3, 87.0], [97.4, 87.0], [97.5, 88.0], [97.6, 90.0], [97.7, 90.0], [97.8, 91.0], [97.9, 91.0], [98.0, 93.0], [98.1, 93.0], [98.2, 97.0], [98.3, 97.0], [98.4, 97.0], [98.5, 98.0], [98.6, 103.0], [98.7, 106.0], [98.8, 116.0], [98.9, 260.0], [99.0, 269.0], [99.1, 283.0], [99.2, 323.0], [99.3, 1009.0], [99.4, 1010.0], [99.5, 1010.0], [99.6, 1016.0], [99.7, 1018.0], [99.8, 1023.0], [99.9, 1037.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[0.0, 245.0], [0.1, 247.0], [0.2, 255.0], [0.3, 255.0], [0.4, 261.0], [0.5, 267.0], [0.6, 278.0], [0.7, 282.0], [0.8, 284.0], [0.9, 286.0], [1.0, 290.0], [1.1, 295.0], [1.2, 298.0], [1.3, 304.0], [1.4, 304.0], [1.5, 308.0], [1.6, 312.0], [1.7, 313.0], [1.8, 316.0], [1.9, 317.0], [2.0, 320.0], [2.1, 322.0], [2.2, 328.0], [2.3, 334.0], [2.4, 346.0], [2.5, 347.0], [2.6, 350.0], [2.7, 351.0], [2.8, 356.0], [2.9, 357.0], [3.0, 357.0], [3.1, 366.0], [3.2, 368.0], [3.3, 368.0], [3.4, 374.0], [3.5, 381.0], [3.6, 383.0], [3.7, 386.0], [3.8, 387.0], [3.9, 395.0], [4.0, 398.0], [4.1, 409.0], [4.2, 409.0], [4.3, 410.0], [4.4, 412.0], [4.5, 416.0], [4.6, 418.0], [4.7, 418.0], [4.8, 419.0], [4.9, 435.0], [5.0, 443.0], [5.1, 449.0], [5.2, 451.0], [5.3, 456.0], [5.4, 458.0], [5.5, 461.0], [5.6, 463.0], [5.7, 467.0], [5.8, 477.0], [5.9, 480.0], [6.0, 481.0], [6.1, 482.0], [6.2, 483.0], [6.3, 487.0], [6.4, 488.0], [6.5, 489.0], [6.6, 494.0], [6.7, 495.0], [6.8, 497.0], [6.9, 499.0], [7.0, 499.0], [7.1, 502.0], [7.2, 504.0], [7.3, 505.0], [7.4, 507.0], [7.5, 509.0], [7.6, 510.0], [7.7, 510.0], [7.8, 511.0], [7.9, 511.0], [8.0, 512.0], [8.1, 513.0], [8.2, 514.0], [8.3, 518.0], [8.4, 521.0], [8.5, 522.0], [8.6, 525.0], [8.7, 526.0], [8.8, 526.0], [8.9, 527.0], [9.0, 527.0], [9.1, 528.0], [9.2, 530.0], [9.3, 531.0], [9.4, 532.0], [9.5, 534.0], [9.6, 534.0], [9.7, 534.0], [9.8, 534.0], [9.9, 534.0], [10.0, 535.0], [10.1, 535.0], [10.2, 536.0], [10.3, 536.0], [10.4, 537.0], [10.5, 538.0], [10.6, 538.0], [10.7, 540.0], [10.8, 540.0], [10.9, 541.0], [11.0, 541.0], [11.1, 543.0], [11.2, 544.0], [11.3, 544.0], [11.4, 545.0], [11.5, 546.0], [11.6, 548.0], [11.7, 550.0], [11.8, 552.0], [11.9, 552.0], [12.0, 554.0], [12.1, 554.0], [12.2, 562.0], [12.3, 562.0], [12.4, 562.0], [12.5, 566.0], [12.6, 569.0], [12.7, 569.0], [12.8, 571.0], [12.9, 575.0], [13.0, 577.0], [13.1, 577.0], [13.2, 583.0], [13.3, 583.0], [13.4, 586.0], [13.5, 591.0], [13.6, 595.0], [13.7, 597.0], [13.8, 598.0], [13.9, 599.0], [14.0, 601.0], [14.1, 602.0], [14.2, 610.0], [14.3, 612.0], [14.4, 613.0], [14.5, 618.0], [14.6, 618.0], [14.7, 620.0], [14.8, 623.0], [14.9, 625.0], [15.0, 629.0], [15.1, 630.0], [15.2, 631.0], [15.3, 636.0], [15.4, 637.0], [15.5, 639.0], [15.6, 639.0], [15.7, 641.0], [15.8, 641.0], [15.9, 642.0], [16.0, 643.0], [16.1, 645.0], [16.2, 648.0], [16.3, 648.0], [16.4, 650.0], [16.5, 655.0], [16.6, 662.0], [16.7, 663.0], [16.8, 669.0], [16.9, 671.0], [17.0, 672.0], [17.1, 674.0], [17.2, 677.0], [17.3, 678.0], [17.4, 679.0], [17.5, 680.0], [17.6, 681.0], [17.7, 681.0], [17.8, 681.0], [17.9, 684.0], [18.0, 686.0], [18.1, 687.0], [18.2, 688.0], [18.3, 689.0], [18.4, 689.0], [18.5, 694.0], [18.6, 694.0], [18.7, 694.0], [18.8, 696.0], [18.9, 698.0], [19.0, 699.0], [19.1, 702.0], [19.2, 703.0], [19.3, 703.0], [19.4, 704.0], [19.5, 704.0], [19.6, 705.0], [19.7, 706.0], [19.8, 712.0], [19.9, 712.0], [20.0, 713.0], [20.1, 714.0], [20.2, 715.0], [20.3, 716.0], [20.4, 716.0], [20.5, 716.0], [20.6, 717.0], [20.7, 717.0], [20.8, 717.0], [20.9, 719.0], [21.0, 719.0], [21.1, 722.0], [21.2, 724.0], [21.3, 724.0], [21.4, 724.0], [21.5, 726.0], [21.6, 727.0], [21.7, 728.0], [21.8, 728.0], [21.9, 730.0], [22.0, 730.0], [22.1, 731.0], [22.2, 731.0], [22.3, 731.0], [22.4, 731.0], [22.5, 733.0], [22.6, 735.0], [22.7, 735.0], [22.8, 736.0], [22.9, 736.0], [23.0, 739.0], [23.1, 741.0], [23.2, 742.0], [23.3, 742.0], [23.4, 746.0], [23.5, 748.0], [23.6, 750.0], [23.7, 750.0], [23.8, 753.0], [23.9, 754.0], [24.0, 754.0], [24.1, 754.0], [24.2, 754.0], [24.3, 756.0], [24.4, 756.0], [24.5, 758.0], [24.6, 759.0], [24.7, 759.0], [24.8, 763.0], [24.9, 766.0], [25.0, 767.0], [25.1, 768.0], [25.2, 769.0], [25.3, 769.0], [25.4, 773.0], [25.5, 774.0], [25.6, 777.0], [25.7, 777.0], [25.8, 781.0], [25.9, 783.0], [26.0, 783.0], [26.1, 784.0], [26.2, 785.0], [26.3, 788.0], [26.4, 789.0], [26.5, 790.0], [26.6, 791.0], [26.7, 791.0], [26.8, 793.0], [26.9, 795.0], [27.0, 796.0], [27.1, 796.0], [27.2, 796.0], [27.3, 799.0], [27.4, 805.0], [27.5, 806.0], [27.6, 806.0], [27.7, 810.0], [27.8, 811.0], [27.9, 821.0], [28.0, 825.0], [28.1, 826.0], [28.2, 830.0], [28.3, 830.0], [28.4, 830.0], [28.5, 835.0], [28.6, 836.0], [28.7, 836.0], [28.8, 836.0], [28.9, 839.0], [29.0, 840.0], [29.1, 842.0], [29.2, 842.0], [29.3, 843.0], [29.4, 846.0], [29.5, 847.0], [29.6, 852.0], [29.7, 853.0], [29.8, 853.0], [29.9, 854.0], [30.0, 855.0], [30.1, 855.0], [30.2, 856.0], [30.3, 856.0], [30.4, 860.0], [30.5, 860.0], [30.6, 862.0], [30.7, 864.0], [30.8, 865.0], [30.9, 867.0], [31.0, 867.0], [31.1, 873.0], [31.2, 874.0], [31.3, 877.0], [31.4, 878.0], [31.5, 879.0], [31.6, 880.0], [31.7, 888.0], [31.8, 891.0], [31.9, 894.0], [32.0, 895.0], [32.1, 896.0], [32.2, 896.0], [32.3, 897.0], [32.4, 900.0], [32.5, 905.0], [32.6, 908.0], [32.7, 909.0], [32.8, 912.0], [32.9, 912.0], [33.0, 912.0], [33.1, 912.0], [33.2, 915.0], [33.3, 915.0], [33.4, 916.0], [33.5, 916.0], [33.6, 918.0], [33.7, 918.0], [33.8, 919.0], [33.9, 926.0], [34.0, 926.0], [34.1, 927.0], [34.2, 928.0], [34.3, 929.0], [34.4, 930.0], [34.5, 931.0], [34.6, 931.0], [34.7, 934.0], [34.8, 935.0], [34.9, 936.0], [35.0, 936.0], [35.1, 937.0], [35.2, 939.0], [35.3, 939.0], [35.4, 940.0], [35.5, 942.0], [35.6, 942.0], [35.7, 943.0], [35.8, 943.0], [35.9, 943.0], [36.0, 947.0], [36.1, 947.0], [36.2, 948.0], [36.3, 949.0], [36.4, 952.0], [36.5, 952.0], [36.6, 956.0], [36.7, 968.0], [36.8, 968.0], [36.9, 970.0], [37.0, 971.0], [37.1, 973.0], [37.2, 974.0], [37.3, 974.0], [37.4, 975.0], [37.5, 978.0], [37.6, 978.0], [37.7, 979.0], [37.8, 981.0], [37.9, 989.0], [38.0, 990.0], [38.1, 991.0], [38.2, 991.0], [38.3, 991.0], [38.4, 992.0], [38.5, 993.0], [38.6, 996.0], [38.7, 997.0], [38.8, 998.0], [38.9, 1003.0], [39.0, 1005.0], [39.1, 1008.0], [39.2, 1013.0], [39.3, 1020.0], [39.4, 1022.0], [39.5, 1022.0], [39.6, 1024.0], [39.7, 1026.0], [39.8, 1027.0], [39.9, 1027.0], [40.0, 1034.0], [40.1, 1035.0], [40.2, 1036.0], [40.3, 1039.0], [40.4, 1046.0], [40.5, 1046.0], [40.6, 1051.0], [40.7, 1052.0], [40.8, 1055.0], [40.9, 1056.0], [41.0, 1057.0], [41.1, 1064.0], [41.2, 1064.0], [41.3, 1065.0], [41.4, 1065.0], [41.5, 1066.0], [41.6, 1066.0], [41.7, 1068.0], [41.8, 1070.0], [41.9, 1075.0], [42.0, 1075.0], [42.1, 1077.0], [42.2, 1078.0], [42.3, 1078.0], [42.4, 1079.0], [42.5, 1085.0], [42.6, 1085.0], [42.7, 1085.0], [42.8, 1086.0], [42.9, 1087.0], [43.0, 1089.0], [43.1, 1090.0], [43.2, 1093.0], [43.3, 1095.0], [43.4, 1096.0], [43.5, 1096.0], [43.6, 1100.0], [43.7, 1102.0], [43.8, 1102.0], [43.9, 1106.0], [44.0, 1110.0], [44.1, 1112.0], [44.2, 1115.0], [44.3, 1116.0], [44.4, 1117.0], [44.5, 1118.0], [44.6, 1119.0], [44.7, 1121.0], [44.8, 1123.0], [44.9, 1124.0], [45.0, 1125.0], [45.1, 1127.0], [45.2, 1130.0], [45.3, 1131.0], [45.4, 1131.0], [45.5, 1134.0], [45.6, 1136.0], [45.7, 1137.0], [45.8, 1144.0], [45.9, 1146.0], [46.0, 1148.0], [46.1, 1148.0], [46.2, 1151.0], [46.3, 1151.0], [46.4, 1153.0], [46.5, 1153.0], [46.6, 1154.0], [46.7, 1154.0], [46.8, 1159.0], [46.9, 1159.0], [47.0, 1164.0], [47.1, 1168.0], [47.2, 1169.0], [47.3, 1170.0], [47.4, 1170.0], [47.5, 1171.0], [47.6, 1173.0], [47.7, 1173.0], [47.8, 1174.0], [47.9, 1180.0], [48.0, 1183.0], [48.1, 1185.0], [48.2, 1188.0], [48.3, 1189.0], [48.4, 1191.0], [48.5, 1194.0], [48.6, 1195.0], [48.7, 1199.0], [48.8, 1199.0], [48.9, 1200.0], [49.0, 1200.0], [49.1, 1201.0], [49.2, 1201.0], [49.3, 1202.0], [49.4, 1204.0], [49.5, 1207.0], [49.6, 1210.0], [49.7, 1211.0], [49.8, 1215.0], [49.9, 1215.0], [50.0, 1215.0], [50.1, 1216.0], [50.2, 1217.0], [50.3, 1220.0], [50.4, 1225.0], [50.5, 1226.0], [50.6, 1227.0], [50.7, 1228.0], [50.8, 1229.0], [50.9, 1229.0], [51.0, 1231.0], [51.1, 1233.0], [51.2, 1233.0], [51.3, 1234.0], [51.4, 1234.0], [51.5, 1235.0], [51.6, 1239.0], [51.7, 1241.0], [51.8, 1243.0], [51.9, 1246.0], [52.0, 1249.0], [52.1, 1252.0], [52.2, 1252.0], [52.3, 1257.0], [52.4, 1257.0], [52.5, 1260.0], [52.6, 1262.0], [52.7, 1265.0], [52.8, 1266.0], [52.9, 1268.0], [53.0, 1273.0], [53.1, 1273.0], [53.2, 1275.0], [53.3, 1275.0], [53.4, 1277.0], [53.5, 1277.0], [53.6, 1277.0], [53.7, 1279.0], [53.8, 1280.0], [53.9, 1280.0], [54.0, 1280.0], [54.1, 1284.0], [54.2, 1284.0], [54.3, 1284.0], [54.4, 1284.0], [54.5, 1285.0], [54.6, 1287.0], [54.7, 1289.0], [54.8, 1293.0], [54.9, 1304.0], [55.0, 1306.0], [55.1, 1306.0], [55.2, 1307.0], [55.3, 1311.0], [55.4, 1314.0], [55.5, 1316.0], [55.6, 1317.0], [55.7, 1318.0], [55.8, 1325.0], [55.9, 1326.0], [56.0, 1328.0], [56.1, 1331.0], [56.2, 1336.0], [56.3, 1341.0], [56.4, 1342.0], [56.5, 1343.0], [56.6, 1345.0], [56.7, 1345.0], [56.8, 1349.0], [56.9, 1351.0], [57.0, 1351.0], [57.1, 1353.0], [57.2, 1353.0], [57.3, 1353.0], [57.4, 1356.0], [57.5, 1356.0], [57.6, 1359.0], [57.7, 1360.0], [57.8, 1361.0], [57.9, 1364.0], [58.0, 1364.0], [58.1, 1367.0], [58.2, 1370.0], [58.3, 1371.0], [58.4, 1378.0], [58.5, 1380.0], [58.6, 1389.0], [58.7, 1393.0], [58.8, 1393.0], [58.9, 1394.0], [59.0, 1394.0], [59.1, 1395.0], [59.2, 1397.0], [59.3, 1398.0], [59.4, 1401.0], [59.5, 1401.0], [59.6, 1406.0], [59.7, 1408.0], [59.8, 1408.0], [59.9, 1409.0], [60.0, 1410.0], [60.1, 1413.0], [60.2, 1414.0], [60.3, 1416.0], [60.4, 1419.0], [60.5, 1421.0], [60.6, 1422.0], [60.7, 1424.0], [60.8, 1426.0], [60.9, 1427.0], [61.0, 1427.0], [61.1, 1430.0], [61.2, 1433.0], [61.3, 1434.0], [61.4, 1436.0], [61.5, 1437.0], [61.6, 1441.0], [61.7, 1441.0], [61.8, 1441.0], [61.9, 1443.0], [62.0, 1444.0], [62.1, 1445.0], [62.2, 1445.0], [62.3, 1446.0], [62.4, 1446.0], [62.5, 1447.0], [62.6, 1451.0], [62.7, 1453.0], [62.8, 1453.0], [62.9, 1454.0], [63.0, 1454.0], [63.1, 1458.0], [63.2, 1459.0], [63.3, 1462.0], [63.4, 1464.0], [63.5, 1465.0], [63.6, 1466.0], [63.7, 1467.0], [63.8, 1469.0], [63.9, 1470.0], [64.0, 1474.0], [64.1, 1477.0], [64.2, 1481.0], [64.3, 1482.0], [64.4, 1482.0], [64.5, 1486.0], [64.6, 1490.0], [64.7, 1490.0], [64.8, 1492.0], [64.9, 1493.0], [65.0, 1494.0], [65.1, 1497.0], [65.2, 1498.0], [65.3, 1498.0], [65.4, 1499.0], [65.5, 1500.0], [65.6, 1503.0], [65.7, 1505.0], [65.8, 1508.0], [65.9, 1509.0], [66.0, 1509.0], [66.1, 1510.0], [66.2, 1512.0], [66.3, 1512.0], [66.4, 1517.0], [66.5, 1519.0], [66.6, 1522.0], [66.7, 1523.0], [66.8, 1525.0], [66.9, 1525.0], [67.0, 1529.0], [67.1, 1529.0], [67.2, 1530.0], [67.3, 1532.0], [67.4, 1534.0], [67.5, 1534.0], [67.6, 1539.0], [67.7, 1540.0], [67.8, 1541.0], [67.9, 1543.0], [68.0, 1544.0], [68.1, 1548.0], [68.2, 1550.0], [68.3, 1551.0], [68.4, 1552.0], [68.5, 1552.0], [68.6, 1553.0], [68.7, 1553.0], [68.8, 1553.0], [68.9, 1554.0], [69.0, 1556.0], [69.1, 1559.0], [69.2, 1559.0], [69.3, 1559.0], [69.4, 1561.0], [69.5, 1562.0], [69.6, 1563.0], [69.7, 1564.0], [69.8, 1566.0], [69.9, 1568.0], [70.0, 1568.0], [70.1, 1569.0], [70.2, 1569.0], [70.3, 1571.0], [70.4, 1571.0], [70.5, 1572.0], [70.6, 1572.0], [70.7, 1574.0], [70.8, 1577.0], [70.9, 1577.0], [71.0, 1579.0], [71.1, 1579.0], [71.2, 1579.0], [71.3, 1583.0], [71.4, 1584.0], [71.5, 1589.0], [71.6, 1589.0], [71.7, 1591.0], [71.8, 1591.0], [71.9, 1595.0], [72.0, 1595.0], [72.1, 1596.0], [72.2, 1600.0], [72.3, 1600.0], [72.4, 1601.0], [72.5, 1604.0], [72.6, 1604.0], [72.7, 1606.0], [72.8, 1608.0], [72.9, 1615.0], [73.0, 1616.0], [73.1, 1616.0], [73.2, 1617.0], [73.3, 1618.0], [73.4, 1618.0], [73.5, 1622.0], [73.6, 1623.0], [73.7, 1623.0], [73.8, 1624.0], [73.9, 1630.0], [74.0, 1630.0], [74.1, 1633.0], [74.2, 1633.0], [74.3, 1634.0], [74.4, 1636.0], [74.5, 1640.0], [74.6, 1642.0], [74.7, 1648.0], [74.8, 1648.0], [74.9, 1650.0], [75.0, 1654.0], [75.1, 1655.0], [75.2, 1657.0], [75.3, 1658.0], [75.4, 1659.0], [75.5, 1660.0], [75.6, 1662.0], [75.7, 1662.0], [75.8, 1666.0], [75.9, 1666.0], [76.0, 1667.0], [76.1, 1667.0], [76.2, 1667.0], [76.3, 1669.0], [76.4, 1671.0], [76.5, 1673.0], [76.6, 1673.0], [76.7, 1673.0], [76.8, 1674.0], [76.9, 1676.0], [77.0, 1677.0], [77.1, 1680.0], [77.2, 1680.0], [77.3, 1681.0], [77.4, 1688.0], [77.5, 1689.0], [77.6, 1689.0], [77.7, 1692.0], [77.8, 1694.0], [77.9, 1696.0], [78.0, 1700.0], [78.1, 1701.0], [78.2, 1702.0], [78.3, 1703.0], [78.4, 1703.0], [78.5, 1705.0], [78.6, 1708.0], [78.7, 1708.0], [78.8, 1709.0], [78.9, 1710.0], [79.0, 1710.0], [79.1, 1712.0], [79.2, 1713.0], [79.3, 1714.0], [79.4, 1720.0], [79.5, 1725.0], [79.6, 1725.0], [79.7, 1732.0], [79.8, 1733.0], [79.9, 1735.0], [80.0, 1737.0], [80.1, 1737.0], [80.2, 1738.0], [80.3, 1739.0], [80.4, 1746.0], [80.5, 1750.0], [80.6, 1752.0], [80.7, 1753.0], [80.8, 1754.0], [80.9, 1763.0], [81.0, 1765.0], [81.1, 1769.0], [81.2, 1774.0], [81.3, 1774.0], [81.4, 1774.0], [81.5, 1774.0], [81.6, 1774.0], [81.7, 1781.0], [81.8, 1782.0], [81.9, 1797.0], [82.0, 1797.0], [82.1, 1797.0], [82.2, 1805.0], [82.3, 1805.0], [82.4, 1807.0], [82.5, 1816.0], [82.6, 1816.0], [82.7, 1819.0], [82.8, 1820.0], [82.9, 1820.0], [83.0, 1824.0], [83.1, 1826.0], [83.2, 1828.0], [83.3, 1830.0], [83.4, 1832.0], [83.5, 1833.0], [83.6, 1843.0], [83.7, 1850.0], [83.8, 1855.0], [83.9, 1856.0], [84.0, 1858.0], [84.1, 1861.0], [84.2, 1864.0], [84.3, 1865.0], [84.4, 1866.0], [84.5, 1868.0], [84.6, 1870.0], [84.7, 1870.0], [84.8, 1876.0], [84.9, 1876.0], [85.0, 1879.0], [85.1, 1880.0], [85.2, 1887.0], [85.3, 1889.0], [85.4, 1893.0], [85.5, 1898.0], [85.6, 1900.0], [85.7, 1900.0], [85.8, 1901.0], [85.9, 1906.0], [86.0, 1911.0], [86.1, 1912.0], [86.2, 1912.0], [86.3, 1914.0], [86.4, 1915.0], [86.5, 1915.0], [86.6, 1917.0], [86.7, 1917.0], [86.8, 1920.0], [86.9, 1923.0], [87.0, 1930.0], [87.1, 1930.0], [87.2, 1931.0], [87.3, 1938.0], [87.4, 1939.0], [87.5, 1942.0], [87.6, 1943.0], [87.7, 1944.0], [87.8, 1945.0], [87.9, 1947.0], [88.0, 1960.0], [88.1, 1961.0], [88.2, 1962.0], [88.3, 1963.0], [88.4, 1965.0], [88.5, 1965.0], [88.6, 1969.0], [88.7, 1970.0], [88.8, 1971.0], [88.9, 1971.0], [89.0, 1974.0], [89.1, 1974.0], [89.2, 1976.0], [89.3, 1978.0], [89.4, 1985.0], [89.5, 1986.0], [89.6, 1991.0], [89.7, 1993.0], [89.8, 1997.0], [89.9, 1998.0], [90.0, 2000.0], [90.1, 2001.0], [90.2, 2008.0], [90.3, 2011.0], [90.4, 2015.0], [90.5, 2016.0], [90.6, 2018.0], [90.7, 2018.0], [90.8, 2019.0], [90.9, 2023.0], [91.0, 2027.0], [91.1, 2031.0], [91.2, 2033.0], [91.3, 2033.0], [91.4, 2035.0], [91.5, 2037.0], [91.6, 2040.0], [91.7, 2041.0], [91.8, 2042.0], [91.9, 2043.0], [92.0, 2048.0], [92.1, 2051.0], [92.2, 2051.0], [92.3, 2055.0], [92.4, 2059.0], [92.5, 2068.0], [92.6, 2074.0], [92.7, 2076.0], [92.8, 2080.0], [92.9, 2083.0], [93.0, 2087.0], [93.1, 2089.0], [93.2, 2089.0], [93.3, 2102.0], [93.4, 2104.0], [93.5, 2112.0], [93.6, 2114.0], [93.7, 2118.0], [93.8, 2125.0], [93.9, 2126.0], [94.0, 2129.0], [94.1, 2129.0], [94.2, 2131.0], [94.3, 2131.0], [94.4, 2135.0], [94.5, 2139.0], [94.6, 2150.0], [94.7, 2160.0], [94.8, 2163.0], [94.9, 2169.0], [95.0, 2177.0], [95.1, 2177.0], [95.2, 2177.0], [95.3, 2186.0], [95.4, 2187.0], [95.5, 2191.0], [95.6, 2192.0], [95.7, 2197.0], [95.8, 2198.0], [95.9, 2202.0], [96.0, 2209.0], [96.1, 2209.0], [96.2, 2212.0], [96.3, 2215.0], [96.4, 2228.0], [96.5, 2235.0], [96.6, 2242.0], [96.7, 2250.0], [96.8, 2250.0], [96.9, 2257.0], [97.0, 2258.0], [97.1, 2259.0], [97.2, 2261.0], [97.3, 2267.0], [97.4, 2273.0], [97.5, 2273.0], [97.6, 2277.0], [97.7, 2286.0], [97.8, 2287.0], [97.9, 2295.0], [98.0, 2298.0], [98.1, 2302.0], [98.2, 2309.0], [98.3, 2315.0], [98.4, 2322.0], [98.5, 2330.0], [98.6, 2337.0], [98.7, 2348.0], [98.8, 2356.0], [98.9, 2360.0], [99.0, 2367.0], [99.1, 2379.0], [99.2, 2404.0], [99.3, 2444.0], [99.4, 2444.0], [99.5, 2447.0], [99.6, 2474.0], [99.7, 2489.0], [99.8, 2498.0], [99.9, 2696.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 986.0, "series": [{"data": [[0.0, 56.0], [2100.0, 1.0], [600.0, 63.0], [700.0, 49.0], [200.0, 82.0], [800.0, 73.0], [900.0, 79.0], [1000.0, 81.0], [1100.0, 64.0], [300.0, 101.0], [1200.0, 57.0], [1300.0, 37.0], [1400.0, 14.0], [1500.0, 3.0], [100.0, 57.0], [400.0, 104.0], [1600.0, 3.0], [1800.0, 1.0], [500.0, 75.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[0.0, 986.0], [300.0, 1.0], [100.0, 3.0], [200.0, 3.0], [1000.0, 7.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[2100.0, 26.0], [2200.0, 22.0], [2300.0, 11.0], [600.0, 51.0], [2400.0, 7.0], [2600.0, 1.0], [700.0, 82.0], [200.0, 13.0], [800.0, 50.0], [900.0, 65.0], [1000.0, 47.0], [1100.0, 53.0], [300.0, 27.0], [1200.0, 60.0], [1300.0, 45.0], [1400.0, 61.0], [1500.0, 67.0], [400.0, 31.0], [1600.0, 58.0], [1700.0, 42.0], [1800.0, 35.0], [1900.0, 44.0], [500.0, 69.0], [2000.0, 33.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 353.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1467.0, "series": [{"data": [[0.0, 1467.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1180.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 353.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 36.46300000000002, "minX": 1.66887024E12, "maxY": 490.5679999999993, "series": [{"data": [[1.66887024E12, 238.93600000000012]], "isOverall": false, "label": "client-to-gateway-non-caching (GET)", "isController": false}, {"data": [[1.66887024E12, 490.5679999999993]], "isOverall": false, "label": "client-to-application (GET)", "isController": false}, {"data": [[1.66887024E12, 36.46300000000002]], "isOverall": false, "label": "client-to-gateway-caching (GET)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66887024E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.75, "minX": 1.0, "maxY": 2696.0, "series": [{"data": [[2.0, 1267.0], [3.0, 1899.0], [5.0, 1360.0], [6.0, 1476.0], [7.0, 1280.0], [8.0, 1493.0], [9.0, 735.0], [10.0, 1363.0], [11.0, 1338.0], [12.0, 1448.0], [13.0, 1349.0], [14.0, 1213.0], [16.0, 1415.0], [17.0, 1205.0], [19.0, 1387.0], [20.0, 1327.0], [21.0, 1329.0], [22.0, 1434.0], [23.0, 441.25], [24.0, 659.5], [25.0, 1222.0], [26.0, 1400.0], [27.0, 1229.0], [28.0, 1303.0], [29.0, 1403.0], [30.0, 673.5], [31.0, 358.25], [32.0, 286.0], [33.0, 451.6666666666667], [35.0, 715.0], [34.0, 677.5], [37.0, 423.6666666666667], [36.0, 308.4], [39.0, 498.6666666666667], [38.0, 718.5], [41.0, 899.6666666666666], [40.0, 66.66666666666667], [43.0, 594.5], [42.0, 716.0], [45.0, 1377.0], [44.0, 1186.0], [47.0, 1260.0], [46.0, 1373.0], [49.0, 1212.5], [51.0, 1373.0], [50.0, 1153.0], [52.0, 636.0], [53.0, 1351.0], [55.0, 1267.5], [57.0, 622.0], [56.0, 1135.0], [59.0, 525.0], [58.0, 1266.0], [60.0, 1151.0], [63.0, 1147.0], [62.0, 1729.0], [66.0, 725.25], [64.0, 1157.0], [69.0, 631.0], [71.0, 1248.5], [68.0, 1274.0], [73.0, 450.0], [75.0, 406.5], [74.0, 511.6666666666667], [72.0, 1168.0], [78.0, 260.25], [77.0, 283.7777777777777], [79.0, 276.0], [76.0, 423.2], [83.0, 404.75], [81.0, 253.88888888888889], [80.0, 342.8], [82.0, 389.4], [84.0, 360.2], [85.0, 501.0], [87.0, 428.3333333333333], [86.0, 397.75], [91.0, 1058.0], [90.0, 1050.0], [89.0, 1053.0], [88.0, 1254.0], [95.0, 1006.0], [94.0, 1436.0], [93.0, 1067.0], [92.0, 1026.0], [99.0, 574.5], [98.0, 629.0], [97.0, 1034.0], [96.0, 1229.0], [101.0, 332.0], [100.0, 614.0], [103.0, 972.0], [102.0, 988.0], [107.0, 1008.0], [106.0, 1028.0], [105.0, 1185.0], [104.0, 1201.0], [111.0, 469.66666666666663], [110.0, 597.0], [109.0, 957.0], [108.0, 1007.0], [112.0, 433.6666666666667], [115.0, 1003.0], [114.0, 1009.0], [113.0, 1203.0], [119.0, 749.0], [118.0, 612.0], [117.0, 807.5], [116.0, 1669.0], [120.0, 603.0], [123.0, 314.42857142857144], [122.0, 396.0], [121.0, 829.5], [127.0, 352.0], [126.0, 393.4], [125.0, 404.0], [124.0, 530.5], [128.0, 320.8888888888889], [131.0, 339.0], [130.0, 366.4], [129.0, 424.75], [132.0, 373.8], [133.0, 630.3333333333333], [135.0, 1018.0], [134.0, 983.0], [140.0, 709.5], [143.0, 962.0], [142.0, 975.0], [141.0, 986.0], [139.0, 992.0], [138.0, 1125.0], [137.0, 1351.0], [136.0, 1019.0], [151.0, 1124.0], [150.0, 979.0], [149.0, 977.0], [148.0, 981.0], [146.0, 1100.0], [145.0, 961.0], [144.0, 995.0], [159.0, 959.0], [158.0, 959.0], [157.0, 963.5], [156.0, 1367.0], [155.0, 957.0], [153.0, 960.0], [152.0, 958.0], [160.0, 553.5], [167.0, 1254.0], [166.0, 1152.0], [165.0, 1319.0], [164.0, 1263.0], [163.0, 1330.0], [162.0, 950.0], [161.0, 856.0], [168.0, 753.5], [175.0, 745.5], [174.0, 730.5], [173.0, 747.0], [172.0, 595.0], [171.0, 758.0], [170.0, 1249.0], [169.0, 1294.0], [177.0, 583.3333333333333], [176.0, 602.3333333333333], [178.0, 745.5], [179.0, 554.75], [180.0, 768.5], [181.0, 670.0], [183.0, 1156.0], [182.0, 1238.0], [184.0, 776.0], [185.0, 669.5], [191.0, 1020.0], [190.0, 1240.0], [189.0, 1224.0], [188.0, 1148.0], [187.0, 1197.0], [186.0, 1246.0], [193.0, 742.5], [199.0, 701.0], [198.0, 1171.0], [197.0, 1126.0], [196.0, 1138.0], [195.0, 1207.0], [194.0, 1232.0], [192.0, 1165.0], [207.0, 623.0], [206.0, 1131.0], [205.0, 1087.0], [204.0, 1007.0], [203.0, 1095.0], [202.0, 710.0], [201.0, 805.0], [200.0, 1116.0], [215.0, 1179.0], [214.0, 1055.0], [213.0, 1358.0], [212.0, 1162.0], [211.0, 1147.0], [210.0, 1073.0], [209.0, 1058.0], [208.0, 1195.0], [217.0, 431.0], [216.0, 716.0], [221.0, 710.5], [220.0, 590.3333333333333], [219.0, 665.0], [223.0, 558.0], [222.0, 601.0], [218.0, 923.0], [225.0, 720.3333333333333], [224.0, 698.0], [226.0, 806.5], [231.0, 977.0], [230.0, 916.0], [229.0, 952.0], [228.0, 1057.0], [227.0, 1367.0], [233.0, 452.6666666666667], [235.0, 623.5], [239.0, 1136.0], [238.0, 895.5], [236.0, 1121.0], [234.0, 1586.0], [232.0, 1065.0], [241.0, 567.3333333333334], [240.0, 606.3333333333333], [247.0, 824.6666666666666], [246.0, 380.0], [245.0, 1115.0], [244.0, 902.0], [243.0, 1027.0], [242.0, 1050.0], [252.0, 503.25], [255.0, 824.6], [253.0, 591.3333333333334], [254.0, 365.0], [251.0, 652.5], [250.0, 528.0], [249.0, 601.3333333333333], [248.0, 743.5], [257.0, 741.5], [263.0, 438.2], [256.0, 524.0], [262.0, 527.6], [261.0, 475.25], [260.0, 656.5], [259.0, 495.3333333333333], [258.0, 556.0], [264.0, 665.8], [265.0, 622.0], [271.0, 648.0], [270.0, 730.5], [267.0, 616.3333333333334], [266.0, 529.0], [269.0, 368.0], [268.0, 578.5], [275.0, 730.5], [272.0, 591.6666666666667], [274.0, 743.0], [273.0, 591.5], [281.0, 685.0], [283.0, 759.0], [282.0, 816.0], [280.0, 651.5], [279.0, 650.5], [278.0, 997.0], [277.0, 1060.0], [276.0, 1076.0], [287.0, 632.5], [286.0, 780.0], [285.0, 887.5], [290.0, 429.6363636363636], [291.0, 429.2857142857143], [300.0, 587.0], [302.0, 433.5], [303.0, 487.0], [301.0, 653.0], [297.0, 502.6666666666667], [296.0, 427.0], [289.0, 466.33333333333337], [294.0, 620.0], [293.0, 521.25], [292.0, 537.3333333333334], [288.0, 535.3333333333334], [295.0, 465.0], [299.0, 699.6666666666666], [298.0, 607.0], [319.0, 718.0], [304.0, 602.5], [309.0, 614.0], [308.0, 837.5], [311.0, 657.75], [310.0, 606.0], [313.0, 565.3333333333334], [312.0, 589.0], [318.0, 494.0], [317.0, 560.5], [316.0, 539.0], [306.0, 917.0], [305.0, 922.0], [315.0, 462.0], [314.0, 508.0], [334.0, 684.0], [321.0, 433.5], [320.0, 595.25], [327.0, 785.0], [326.0, 681.0], [325.0, 804.0], [324.0, 1288.0], [335.0, 683.25], [333.0, 854.0], [332.0, 731.0], [323.0, 872.0], [322.0, 385.0], [331.0, 613.0], [330.0, 853.0], [329.0, 621.0], [328.0, 852.0], [338.0, 591.75], [343.0, 683.5], [336.0, 590.0], [342.0, 597.0], [341.0, 620.0], [340.0, 620.2857142857143], [339.0, 537.0], [348.0, 1041.0], [350.0, 785.5], [349.0, 986.0], [344.0, 719.6666666666666], [351.0, 737.5], [337.0, 582.6666666666666], [346.0, 707.0], [347.0, 884.0], [345.0, 714.0], [367.0, 587.0], [352.0, 831.0], [359.0, 638.5], [358.0, 1075.0], [357.0, 1010.0], [356.0, 975.0], [360.0, 674.6666666666666], [361.0, 901.0], [366.0, 608.8333333333333], [364.0, 649.3333333333333], [355.0, 1178.0], [354.0, 1086.0], [353.0, 1002.0], [365.0, 710.6666666666666], [363.0, 763.0], [362.0, 899.0], [380.0, 721.6666666666666], [372.0, 806.5], [373.0, 607.3333333333334], [371.0, 586.75], [370.0, 574.1818181818181], [379.0, 686.5], [378.0, 871.5], [377.0, 703.0], [376.0, 706.5], [383.0, 797.0], [382.0, 1075.0], [381.0, 944.0], [375.0, 697.0], [369.0, 608.25], [368.0, 596.2499999999999], [374.0, 754.3333333333334], [399.0, 651.5], [387.0, 855.5], [394.0, 950.0], [393.0, 701.5], [392.0, 632.5], [391.0, 666.5], [384.0, 1065.0], [386.0, 860.0], [385.0, 802.0], [390.0, 960.0], [389.0, 620.0], [388.0, 847.0], [396.0, 733.3333333333334], [395.0, 627.3333333333334], [398.0, 829.3333333333334], [397.0, 928.0], [402.0, 565.5], [403.0, 541.5], [401.0, 773.0], [400.0, 956.5], [405.0, 680.5], [407.0, 937.0], [406.0, 841.0], [404.0, 622.0], [415.0, 847.0], [409.0, 844.0], [408.0, 1001.0], [411.0, 752.0], [410.0, 928.0], [414.0, 758.0], [413.0, 716.0], [412.0, 974.0], [424.0, 593.0], [426.0, 722.0], [427.0, 719.6666666666666], [425.0, 658.4], [423.0, 650.0], [421.0, 690.25], [420.0, 722.0], [419.0, 666.0], [418.0, 856.0], [417.0, 736.0], [416.0, 813.0], [429.0, 973.0], [428.0, 762.0], [431.0, 732.0], [430.0, 508.0], [422.0, 716.0], [446.0, 639.0], [447.0, 692.6666666666666], [445.0, 922.0], [444.0, 776.5], [443.0, 849.0], [442.0, 887.5], [441.0, 894.0], [440.0, 895.0], [439.0, 861.0], [433.0, 954.0], [432.0, 659.0], [435.0, 457.0], [434.0, 715.0], [438.0, 677.0], [437.0, 809.0], [436.0, 661.0], [451.0, 791.5], [448.0, 800.5], [452.0, 687.0], [453.0, 922.0], [449.0, 767.6666666666666], [455.0, 765.0], [454.0, 1038.0], [461.0, 965.0], [462.0, 733.0], [463.0, 1023.5], [457.0, 886.0], [456.0, 803.0], [459.0, 690.0], [458.0, 655.0], [460.0, 717.0], [465.0, 946.0], [464.0, 604.0]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[238.92999999999998, 682.6170000000003]], "isOverall": false, "label": "Microservice-based client-Aggregated", "isController": false}, {"data": [[2.0, 507.0], [3.0, 338.6666666666667], [4.0, 4.75], [5.0, 149.28571428571428], [6.0, 108.30000000000001], [7.0, 49.14285714285714], [8.0, 182.66666666666669], [9.0, 38.0], [10.0, 26.8], [11.0, 29.4], [12.0, 31.90909090909091], [13.0, 23.166666666666668], [14.0, 28.769230769230766], [15.0, 28.09090909090909], [16.0, 44.888888888888886], [17.0, 70.25], [18.0, 45.5], [19.0, 42.7], [20.0, 35.5], [21.0, 46.33333333333333], [22.0, 41.7], [23.0, 35.55555555555556], [24.0, 42.727272727272734], [25.0, 40.583333333333336], [26.0, 48.33333333333333], [27.0, 39.578947368421055], [28.0, 43.52631578947368], [29.0, 41.0], [30.0, 43.57692307692308], [31.0, 41.41176470588237], [32.0, 59.03703703703704], [33.0, 47.846153846153854], [34.0, 51.76190476190476], [35.0, 46.69565217391304], [37.0, 45.08], [36.0, 48.26666666666667], [38.0, 49.4090909090909], [39.0, 61.24137931034484], [41.0, 51.208333333333336], [40.0, 47.300000000000004], [43.0, 51.51851851851852], [42.0, 51.53571428571428], [44.0, 53.199999999999996], [45.0, 55.91304347826087], [47.0, 58.17857142857143], [46.0, 56.416666666666664], [49.0, 55.56521739130435], [48.0, 58.407407407407405], [50.0, 55.95454545454546], [51.0, 55.52941176470588], [53.0, 59.16666666666667], [52.0, 56.0], [55.0, 57.23529411764706], [54.0, 59.05263157894736], [57.0, 57.81249999999999], [56.0, 56.77777777777779], [58.0, 57.1764705882353], [59.0, 63.44444444444444], [61.0, 57.4], [60.0, 62.85714285714286], [62.0, 58.83333333333333], [63.0, 60.75], [65.0, 56.0], [64.0, 61.333333333333336], [67.0, 61.0], [66.0, 69.0], [1.0, 339.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[36.460999999999984, 54.977000000000004]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}, {"data": [[2.0, 1541.0], [3.0, 2302.0], [4.0, 1633.0], [5.0, 1618.0], [7.0, 2125.5], [8.0, 1673.0], [10.0, 1894.5], [11.0, 1577.0], [12.0, 1763.0], [13.0, 2033.0], [14.0, 1584.0], [15.0, 1657.0], [17.0, 2047.5], [18.0, 1774.0], [19.0, 1572.0], [20.0, 1694.0], [21.0, 1634.0], [22.0, 1750.0], [23.0, 1616.0], [24.0, 1786.0], [26.0, 1794.0], [27.0, 1826.0], [28.0, 1865.0], [29.0, 1500.0], [30.0, 2258.0], [31.0, 1498.0], [33.0, 1529.0], [32.0, 2139.0], [35.0, 1534.0], [34.0, 2209.0], [37.0, 2186.0], [36.0, 2125.0], [39.0, 1754.0], [38.0, 2041.0], [41.0, 1666.0], [40.0, 1705.0], [43.0, 2083.0], [42.0, 1566.0], [45.0, 1655.0], [44.0, 1469.0], [47.0, 1444.0], [46.0, 1969.0], [49.0, 1809.5], [51.0, 1630.0], [50.0, 1930.0], [53.0, 1915.0], [52.0, 1911.0], [55.0, 1642.0], [54.0, 2177.0], [57.0, 1522.0], [56.0, 1998.0], [58.0, 1459.0], [61.0, 1623.0], [60.0, 1923.0], [63.0, 1481.0], [62.0, 1404.5], [67.0, 2177.0], [66.0, 1575.0], [71.0, 1830.0], [70.0, 1579.0], [69.0, 1599.5], [74.0, 1343.0], [73.0, 1636.0], [79.0, 1548.0], [78.0, 1393.0], [77.0, 1445.0], [76.0, 1346.5], [83.0, 2019.0], [82.0, 1454.0], [81.0, 1974.0], [80.0, 1325.0], [87.0, 1380.0], [86.0, 2102.0], [85.0, 1561.0], [84.0, 1539.0], [91.0, 1965.0], [90.0, 1820.0], [89.0, 1544.0], [88.0, 1525.0], [95.0, 1275.0], [94.0, 1331.0], [93.0, 2068.0], [92.0, 1667.0], [99.0, 1805.0], [98.0, 1393.0], [97.0, 1293.0], [96.0, 1901.0], [103.0, 1482.0], [102.0, 1912.0], [101.0, 1712.0], [107.0, 1246.0], [106.0, 1601.0], [105.0, 1277.0], [104.0, 1498.0], [111.0, 1353.0], [110.0, 1477.0], [109.0, 1252.0], [108.0, 1441.0], [115.0, 1280.0], [114.0, 1900.0], [113.0, 1359.0], [112.0, 1277.0], [119.0, 1451.0], [118.0, 1974.0], [117.0, 1284.0], [116.0, 1508.0], [123.0, 1512.0], [122.0, 1169.0], [121.0, 1416.0], [120.0, 1470.0], [127.0, 1154.0], [126.0, 1666.0], [125.0, 1732.0], [124.0, 1710.0], [135.0, 1210.0], [134.0, 1822.0], [132.0, 1201.0], [131.0, 1671.0], [130.0, 1183.0], [129.0, 1257.0], [128.0, 1395.0], [143.0, 1106.0], [142.0, 1713.0], [141.0, 1493.0], [140.0, 1239.0], [139.0, 1658.0], [138.0, 1427.0], [137.0, 1227.0], [136.0, 1648.0], [151.0, 1173.0], [150.0, 1170.0], [149.0, 1446.0], [148.0, 1412.0], [146.0, 1234.0], [144.0, 1226.0], [159.0, 1579.0], [158.0, 1075.0], [157.0, 1583.0], [156.0, 1231.0], [155.0, 1577.0], [154.0, 1861.0], [153.0, 1742.5], [167.0, 1748.5], [165.0, 1151.0], [164.0, 1324.0], [162.0, 1774.0], [161.0, 1204.0], [160.0, 1280.0], [175.0, 1187.5], [173.0, 1554.0], [172.0, 1066.0], [171.0, 1615.0], [170.0, 1409.0], [168.0, 1046.0], [183.0, 1020.0], [182.0, 1150.0], [180.0, 1229.0], [179.0, 1394.0], [178.0, 1725.0], [177.0, 1052.0], [176.0, 1136.0], [191.0, 1349.0], [189.0, 1268.5], [187.0, 1234.0], [186.0, 1543.0], [185.0, 1737.0], [184.0, 1550.0], [199.0, 1490.0], [198.0, 1596.0], [197.0, 1392.5], [196.0, 1299.0], [194.0, 970.0], [193.0, 1102.0], [192.0, 968.0], [207.0, 998.0], [206.0, 1229.0], [205.0, 1104.0], [203.0, 1576.5], [201.0, 1160.5], [215.0, 1437.0], [214.0, 1170.0], [213.0, 1600.0], [212.0, 947.0], [211.0, 1409.0], [210.0, 1494.0], [209.0, 1189.0], [208.0, 1689.0], [223.0, 1710.0], [222.0, 1360.5], [221.0, 918.0], [220.0, 1059.0], [219.0, 1436.0], [216.0, 991.0], [231.0, 1273.0], [230.0, 1003.0], [229.0, 1278.0], [227.0, 1492.0], [226.0, 2489.0], [225.0, 1551.0], [224.0, 943.0], [239.0, 934.0], [237.0, 931.0], [236.0, 1701.0], [235.0, 939.0], [234.0, 2696.0], [233.0, 1692.0], [232.0, 996.0], [246.0, 1650.0], [245.0, 1127.0], [244.0, 1178.5], [242.0, 1673.0], [241.0, 990.0], [240.0, 1499.0], [255.0, 1093.0], [254.0, 1316.0], [253.0, 1342.0], [252.0, 919.0], [251.0, 1370.0], [250.0, 1035.0], [249.0, 880.0], [248.0, 1326.5], [270.0, 1778.5], [271.0, 1065.0], [268.0, 2277.0], [259.0, 2043.0], [258.0, 2035.0], [257.0, 867.0], [256.0, 781.0], [267.0, 2474.0], [266.0, 1848.5], [264.0, 853.0], [263.0, 1781.0], [262.0, 2360.0], [261.0, 2051.0], [260.0, 754.0], [275.0, 2379.0], [286.0, 2134.0], [287.0, 2235.0], [284.0, 1983.5], [274.0, 2367.0], [273.0, 1022.5], [282.0, 1595.0], [281.0, 2009.0], [279.0, 1709.0], [278.0, 717.0], [277.0, 1608.0], [276.0, 2348.0], [301.0, 1534.0], [303.0, 2126.5], [300.0, 1669.0], [291.0, 2250.0], [290.0, 2383.0], [288.0, 1939.0], [299.0, 2003.5], [297.0, 2295.0], [296.0, 1905.5], [294.0, 1466.0], [293.0, 2286.0], [292.0, 2273.0], [307.0, 2309.0], [318.0, 2209.0], [317.0, 1822.5], [315.0, 1454.0], [314.0, 2187.0], [313.0, 1550.5], [311.0, 2346.5], [309.0, 2150.0], [308.0, 2330.0], [306.0, 2215.0], [305.0, 2404.0], [304.0, 2076.0], [334.0, 2177.0], [335.0, 2131.0], [333.0, 1564.0], [332.0, 1793.0], [330.0, 1816.0], [329.0, 2202.0], [328.0, 1799.5], [326.0, 1569.5], [323.0, 1920.5], [321.0, 2015.0], [320.0, 2235.0], [324.0, 2212.0], [350.0, 791.0], [351.0, 2257.0], [349.0, 631.0], [348.0, 1920.0], [347.0, 1509.0], [346.0, 2267.0], [345.0, 1971.0], [344.0, 1962.0], [343.0, 756.0], [337.0, 2198.0], [336.0, 1819.0], [339.0, 735.0], [338.0, 531.0], [342.0, 1211.0], [341.0, 535.0], [340.0, 1942.0], [366.0, 1351.0], [367.0, 1681.0], [365.0, 1361.0], [364.0, 2126.0], [363.0, 2027.0], [362.0, 2051.0], [361.0, 2074.0], [360.0, 1900.0], [359.0, 1467.0], [353.0, 789.0], [352.0, 1503.0], [355.0, 2001.0], [354.0, 2089.0], [358.0, 2160.0], [357.0, 1912.0], [356.0, 2192.0], [382.0, 2008.0], [383.0, 1676.0], [381.0, 1931.0], [380.0, 1828.0], [379.0, 2080.0], [378.0, 1419.0], [377.0, 2129.0], [376.0, 2033.0], [375.0, 1714.0], [369.0, 2169.0], [368.0, 1876.0], [371.0, 2031.0], [370.0, 1870.0], [374.0, 2191.0], [373.0, 1965.0], [372.0, 2048.0], [398.0, 1123.0], [399.0, 2011.0], [397.0, 1408.0], [396.0, 2112.0], [395.0, 1241.0], [394.0, 2087.0], [393.0, 2089.0], [392.0, 1659.0], [391.0, 1616.5], [385.0, 1648.0], [384.0, 1446.0], [387.0, 2037.0], [386.0, 2118.0], [389.0, 2129.0], [388.0, 1660.0], [414.0, 1562.0], [415.0, 1833.0], [413.0, 1971.0], [412.0, 1986.0], [411.0, 1947.0], [410.0, 2104.0], [409.0, 1202.0], [408.0, 1752.0], [407.0, 1991.0], [400.0, 1850.0], [403.0, 1979.0], [401.0, 1993.0], [406.0, 1353.0], [405.0, 1725.0], [430.0, 1540.0], [431.0, 1725.0], [429.0, 2018.0], [428.0, 1131.0], [427.0, 1864.0], [426.0, 1096.0], [425.0, 1963.0], [424.0, 1345.0], [423.0, 1571.0], [417.0, 2042.0], [416.0, 2016.0], [419.0, 1879.0], [418.0, 1914.0], [422.0, 1800.0], [421.0, 1328.0], [420.0, 1746.0], [445.0, 1797.0], [447.0, 1921.5], [444.0, 1696.0], [435.0, 1976.0], [434.0, 1519.0], [433.0, 2018.0], [432.0, 1868.0], [443.0, 1893.0], [442.0, 1832.0], [441.0, 1855.0], [440.0, 1262.0], [439.0, 1125.0], [438.0, 1880.0], [437.0, 1257.0], [436.0, 1876.0], [453.0, 1662.0], [450.0, 1824.0], [449.0, 1277.0], [448.0, 1667.0], [543.0, 1960.0], [542.0, 1703.0], [541.0, 1917.0], [540.0, 1816.0], [539.0, 1887.0], [516.0, 1217.0], [567.0, 1624.0], [551.0, 1191.0], [545.0, 1215.0], [589.0, 1137.0], [585.0, 1636.0], [583.0, 1153.0], [579.0, 1696.5000000000002], [580.0, 1502.764705882353], [627.0, 1735.0], [619.0, 1774.0], [613.0, 1151.0], [616.0, 1090.0], [658.0, 635.5], [643.0, 392.91935483870964], [647.0, 629.0], [650.0, 528.0], [659.0, 728.0], [660.0, 575.0], [662.0, 481.0], [663.0, 562.0], [664.0, 512.0], [666.0, 573.5], [667.0, 613.0], [668.0, 689.0], [670.0, 668.4545454545455], [671.0, 668.0], [699.0, 1739.0], [676.0, 699.0], [672.0, 573.3333333333334], [687.0, 746.0], [686.0, 735.0], [682.0, 681.5], [677.0, 636.3333333333329], [674.0, 1126.0], [701.0, 1510.0], [702.0, 712.0], [692.0, 742.0], [691.0, 730.0], [690.0, 754.0], [688.0, 736.0], [698.0, 774.0], [697.0, 769.0], [729.0, 1191.25], [720.0, 978.0], [724.0, 916.0], [725.0, 810.0], [721.0, 750.5], [718.0, 871.0], [717.0, 992.9999999999999], [716.0, 1131.6], [715.0, 1176.6666666666667], [714.0, 914.0], [713.0, 830.6666666666666], [712.0, 892.0], [726.0, 1234.0], [727.0, 1094.0], [728.0, 823.1666666666667], [708.0, 1068.0], [707.0, 924.0], [706.0, 773.1428571428571], [710.0, 918.0], [730.0, 1002.75], [732.0, 997.75], [735.0, 1046.25], [734.0, 930.6666666666666], [760.0, 1355.5], [750.0, 932.8000000000001], [749.0, 841.6], [748.0, 1007.0], [747.0, 918.0], [746.0, 1065.0], [745.0, 905.5714285714286], [744.0, 989.8], [753.0, 1458.0], [755.0, 922.0], [754.0, 990.1428571428571], [757.0, 1039.0], [756.0, 1016.625], [759.0, 696.0], [758.0, 1166.3333333333333], [763.0, 999.0], [762.0, 1025.75], [761.0, 1229.4], [764.0, 1143.0], [765.0, 538.0], [766.0, 1314.0], [767.0, 1124.0], [736.0, 999.0], [737.0, 939.6], [738.0, 926.2857142857143], [739.0, 1003.0], [740.0, 891.0], [741.0, 961.875], [742.0, 1215.0], [794.0, 949.0], [772.0, 1453.0], [769.0, 1150.0], [768.0, 1553.0], [771.0, 997.5714285714286], [770.0, 1015.25], [783.0, 1144.0], [782.0, 948.0], [774.0, 783.0], [793.0, 768.0], [775.0, 1199.0], [781.0, 1345.0], [790.0, 1005.1250000000001], [787.0, 1268.0], [788.0, 741.0], [786.0, 1556.0], [784.0, 1285.0], [789.0, 1559.0], [777.0, 882.125], [780.0, 748.0], [779.0, 718.3333333333334], [799.0, 1419.5], [796.0, 1228.0], [825.0, 1589.0], [830.0, 1549.0], [816.0, 855.0], [806.0, 679.5], [805.0, 795.0], [802.0, 1066.0], [814.0, 1708.0], [813.0, 1590.6], [829.0, 1663.5], [828.0, 1688.0], [824.0, 1414.0], [818.0, 1633.0], [817.0, 1765.0], [846.0, 1306.5], [855.0, 940.0], [851.0, 1680.0], [842.0, 1807.0], [849.0, 1170.0], [834.0, 1511.0], [845.0, 926.0], [844.0, 864.0], [843.0, 1622.0], [841.0, 1433.0], [840.0, 1512.0], [1.0, 1552.0]], "isOverall": false, "label": "Monolithic-based client", "isController": false}, {"data": [[490.5679999999993, 1239.6410000000017]], "isOverall": false, "label": "Monolithic-based client-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 855.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7466.666666666667, "minX": 1.66887024E12, "maxY": 5668234.866666666, "series": [{"data": [[1.66887024E12, 5668234.866666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66887024E12, 7466.666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66887024E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 54.977000000000004, "minX": 1.66887024E12, "maxY": 1239.6410000000017, "series": [{"data": [[1.66887024E12, 682.6170000000003]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66887024E12, 54.977000000000004]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66887024E12, 1239.6410000000017]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66887024E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 26.509000000000004, "minX": 1.66887024E12, "maxY": 1195.1579999999992, "series": [{"data": [[1.66887024E12, 644.3579999999994]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66887024E12, 26.509000000000004]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66887024E12, 1195.1579999999992]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66887024E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 8.182000000000004, "minX": 1.66887024E12, "maxY": 35.324999999999925, "series": [{"data": [[1.66887024E12, 8.182000000000004]], "isOverall": false, "label": "Microservice-based client", "isController": false}, {"data": [[1.66887024E12, 14.731000000000002]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1.66887024E12, 35.324999999999925]], "isOverall": false, "label": "Monolithic-based client", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66887024E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.66887024E12, "maxY": 2696.0, "series": [{"data": [[1.66887024E12, 2696.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66887024E12, 1573.8000000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66887024E12, 2257.99]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66887024E12, 1886.6499999999987]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66887024E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66887024E12, 522.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66887024E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 47.0, "minX": 6.0, "maxY": 1659.5, "series": [{"data": [[547.0, 47.0], [598.0, 53.0], [333.0, 968.0], [322.0, 291.0], [326.0, 426.0], [175.0, 538.0], [336.0, 1659.5], [357.0, 917.0], [6.0, 1013.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 598.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 21.0, "minX": 6.0, "maxY": 1614.0, "series": [{"data": [[547.0, 21.0], [598.0, 21.0], [333.0, 936.0], [322.0, 249.0], [326.0, 386.5], [175.0, 461.0], [336.0, 1614.0], [357.0, 874.0], [6.0, 1010.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 598.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66887024E12, "maxY": 50.0, "series": [{"data": [[1.66887024E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66887024E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66887024E12, "maxY": 50.0, "series": [{"data": [[1.66887024E12, 50.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66887024E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.66887024E12, "maxY": 16.666666666666668, "series": [{"data": [[1.66887024E12, 16.666666666666668]], "isOverall": false, "label": "Monolithic-based client-success", "isController": false}, {"data": [[1.66887024E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}, {"data": [[1.66887024E12, 16.666666666666668]], "isOverall": false, "label": "Microservice-based client-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66887024E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.66887024E12, "maxY": 50.0, "series": [{"data": [[1.66887024E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66887024E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

