/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 312.0, "minX": 0.0, "maxY": 17657.0, "series": [{"data": [[0.0, 312.0], [0.1, 369.0], [0.2, 376.0], [0.3, 391.0], [0.4, 415.0], [0.5, 430.0], [0.6, 443.0], [0.7, 465.0], [0.8, 491.0], [0.9, 498.0], [1.0, 533.0], [1.1, 545.0], [1.2, 559.0], [1.3, 600.0], [1.4, 608.0], [1.5, 620.0], [1.6, 638.0], [1.7, 674.0], [1.8, 683.0], [1.9, 704.0], [2.0, 715.0], [2.1, 732.0], [2.2, 746.0], [2.3, 755.0], [2.4, 763.0], [2.5, 782.0], [2.6, 794.0], [2.7, 813.0], [2.8, 829.0], [2.9, 872.0], [3.0, 889.0], [3.1, 912.0], [3.2, 924.0], [3.3, 948.0], [3.4, 959.0], [3.5, 1004.0], [3.6, 1020.0], [3.7, 1060.0], [3.8, 1109.0], [3.9, 1128.0], [4.0, 1160.0], [4.1, 1174.0], [4.2, 1197.0], [4.3, 1212.0], [4.4, 1236.0], [4.5, 1250.0], [4.6, 1260.0], [4.7, 1301.0], [4.8, 1317.0], [4.9, 1341.0], [5.0, 1349.0], [5.1, 1362.0], [5.2, 1385.0], [5.3, 1416.0], [5.4, 1441.0], [5.5, 1494.0], [5.6, 1539.0], [5.7, 1551.0], [5.8, 1558.0], [5.9, 1604.0], [6.0, 1636.0], [6.1, 1652.0], [6.2, 1659.0], [6.3, 1662.0], [6.4, 1671.0], [6.5, 1679.0], [6.6, 1687.0], [6.7, 1698.0], [6.8, 1704.0], [6.9, 1708.0], [7.0, 1718.0], [7.1, 1741.0], [7.2, 1760.0], [7.3, 1770.0], [7.4, 1778.0], [7.5, 1782.0], [7.6, 1786.0], [7.7, 1793.0], [7.8, 1798.0], [7.9, 1812.0], [8.0, 1823.0], [8.1, 1845.0], [8.2, 1851.0], [8.3, 1864.0], [8.4, 1870.0], [8.5, 1878.0], [8.6, 1885.0], [8.7, 1893.0], [8.8, 1902.0], [8.9, 1928.0], [9.0, 1945.0], [9.1, 1954.0], [9.2, 1966.0], [9.3, 1973.0], [9.4, 1980.0], [9.5, 1988.0], [9.6, 2006.0], [9.7, 2046.0], [9.8, 2068.0], [9.9, 2112.0], [10.0, 2120.0], [10.1, 2133.0], [10.2, 2181.0], [10.3, 2200.0], [10.4, 2221.0], [10.5, 2230.0], [10.6, 2250.0], [10.7, 2265.0], [10.8, 2290.0], [10.9, 2302.0], [11.0, 2319.0], [11.1, 2340.0], [11.2, 2369.0], [11.3, 2401.0], [11.4, 2415.0], [11.5, 2452.0], [11.6, 2464.0], [11.7, 2475.0], [11.8, 2482.0], [11.9, 2490.0], [12.0, 2492.0], [12.1, 2501.0], [12.2, 2506.0], [12.3, 2522.0], [12.4, 2532.0], [12.5, 2560.0], [12.6, 2574.0], [12.7, 2580.0], [12.8, 2593.0], [12.9, 2596.0], [13.0, 2602.0], [13.1, 2820.0], [13.2, 2843.0], [13.3, 2868.0], [13.4, 2889.0], [13.5, 2903.0], [13.6, 2919.0], [13.7, 2933.0], [13.8, 2941.0], [13.9, 2957.0], [14.0, 2980.0], [14.1, 2985.0], [14.2, 2990.0], [14.3, 2996.0], [14.4, 3002.0], [14.5, 3005.0], [14.6, 3011.0], [14.7, 3015.0], [14.8, 3016.0], [14.9, 3021.0], [15.0, 3026.0], [15.1, 3032.0], [15.2, 3038.0], [15.3, 3045.0], [15.4, 3052.0], [15.5, 3060.0], [15.6, 3070.0], [15.7, 3087.0], [15.8, 3114.0], [15.9, 3131.0], [16.0, 3143.0], [16.1, 3161.0], [16.2, 3173.0], [16.3, 3181.0], [16.4, 3187.0], [16.5, 3205.0], [16.6, 3228.0], [16.7, 3248.0], [16.8, 3270.0], [16.9, 3310.0], [17.0, 3338.0], [17.1, 3344.0], [17.2, 3376.0], [17.3, 3407.0], [17.4, 3413.0], [17.5, 3430.0], [17.6, 3440.0], [17.7, 3465.0], [17.8, 3469.0], [17.9, 3480.0], [18.0, 3484.0], [18.1, 3494.0], [18.2, 3502.0], [18.3, 3509.0], [18.4, 3517.0], [18.5, 3528.0], [18.6, 3532.0], [18.7, 3538.0], [18.8, 3544.0], [18.9, 3553.0], [19.0, 3557.0], [19.1, 3566.0], [19.2, 3580.0], [19.3, 3592.0], [19.4, 3604.0], [19.5, 3610.0], [19.6, 3618.0], [19.7, 3643.0], [19.8, 3653.0], [19.9, 3669.0], [20.0, 3682.0], [20.1, 3688.0], [20.2, 3697.0], [20.3, 3716.0], [20.4, 3724.0], [20.5, 3748.0], [20.6, 3766.0], [20.7, 3777.0], [20.8, 3790.0], [20.9, 3804.0], [21.0, 3820.0], [21.1, 3834.0], [21.2, 3854.0], [21.3, 3897.0], [21.4, 3904.0], [21.5, 3914.0], [21.6, 3929.0], [21.7, 3945.0], [21.8, 3978.0], [21.9, 4000.0], [22.0, 4016.0], [22.1, 4036.0], [22.2, 4041.0], [22.3, 4077.0], [22.4, 4099.0], [22.5, 4129.0], [22.6, 4135.0], [22.7, 4142.0], [22.8, 4157.0], [22.9, 4172.0], [23.0, 4196.0], [23.1, 4217.0], [23.2, 4234.0], [23.3, 4248.0], [23.4, 4261.0], [23.5, 4269.0], [23.6, 4283.0], [23.7, 4301.0], [23.8, 4310.0], [23.9, 4312.0], [24.0, 4321.0], [24.1, 4327.0], [24.2, 4342.0], [24.3, 4365.0], [24.4, 4373.0], [24.5, 4396.0], [24.6, 4419.0], [24.7, 4444.0], [24.8, 4462.0], [24.9, 4468.0], [25.0, 4479.0], [25.1, 4493.0], [25.2, 4516.0], [25.3, 4522.0], [25.4, 4546.0], [25.5, 4568.0], [25.6, 4578.0], [25.7, 4588.0], [25.8, 4602.0], [25.9, 4612.0], [26.0, 4637.0], [26.1, 4649.0], [26.2, 4661.0], [26.3, 4666.0], [26.4, 4679.0], [26.5, 4690.0], [26.6, 4697.0], [26.7, 4724.0], [26.8, 4755.0], [26.9, 4764.0], [27.0, 4780.0], [27.1, 4785.0], [27.2, 4801.0], [27.3, 4828.0], [27.4, 4842.0], [27.5, 4848.0], [27.6, 4856.0], [27.7, 4881.0], [27.8, 4894.0], [27.9, 4901.0], [28.0, 4929.0], [28.1, 4940.0], [28.2, 4950.0], [28.3, 4975.0], [28.4, 4992.0], [28.5, 4997.0], [28.6, 5013.0], [28.7, 5030.0], [28.8, 5040.0], [28.9, 5055.0], [29.0, 5101.0], [29.1, 5107.0], [29.2, 5130.0], [29.3, 5147.0], [29.4, 5157.0], [29.5, 5175.0], [29.6, 5204.0], [29.7, 5216.0], [29.8, 5231.0], [29.9, 5262.0], [30.0, 5269.0], [30.1, 5282.0], [30.2, 5299.0], [30.3, 5307.0], [30.4, 5310.0], [30.5, 5315.0], [30.6, 5326.0], [30.7, 5339.0], [30.8, 5342.0], [30.9, 5345.0], [31.0, 5375.0], [31.1, 5387.0], [31.2, 5413.0], [31.3, 5437.0], [31.4, 5452.0], [31.5, 5462.0], [31.6, 5517.0], [31.7, 5523.0], [31.8, 5528.0], [31.9, 5532.0], [32.0, 5535.0], [32.1, 5547.0], [32.2, 5572.0], [32.3, 5578.0], [32.4, 5592.0], [32.5, 5600.0], [32.6, 5624.0], [32.7, 5666.0], [32.8, 5681.0], [32.9, 5684.0], [33.0, 5689.0], [33.1, 5701.0], [33.2, 5716.0], [33.3, 5724.0], [33.4, 5740.0], [33.5, 5744.0], [33.6, 5749.0], [33.7, 5766.0], [33.8, 5783.0], [33.9, 5798.0], [34.0, 5810.0], [34.1, 5826.0], [34.2, 5848.0], [34.3, 5853.0], [34.4, 5881.0], [34.5, 5888.0], [34.6, 5917.0], [34.7, 5990.0], [34.8, 5998.0], [34.9, 6026.0], [35.0, 6032.0], [35.1, 6035.0], [35.2, 6043.0], [35.3, 6045.0], [35.4, 6053.0], [35.5, 6067.0], [35.6, 6081.0], [35.7, 6099.0], [35.8, 6118.0], [35.9, 6135.0], [36.0, 6141.0], [36.1, 6149.0], [36.2, 6182.0], [36.3, 6199.0], [36.4, 6219.0], [36.5, 6250.0], [36.6, 6267.0], [36.7, 6282.0], [36.8, 6293.0], [36.9, 6309.0], [37.0, 6324.0], [37.1, 6344.0], [37.2, 6348.0], [37.3, 6352.0], [37.4, 6360.0], [37.5, 6367.0], [37.6, 6409.0], [37.7, 6423.0], [37.8, 6433.0], [37.9, 6460.0], [38.0, 6469.0], [38.1, 6483.0], [38.2, 6491.0], [38.3, 6504.0], [38.4, 6512.0], [38.5, 6519.0], [38.6, 6528.0], [38.7, 6561.0], [38.8, 6572.0], [38.9, 6586.0], [39.0, 6604.0], [39.1, 6613.0], [39.2, 6627.0], [39.3, 6644.0], [39.4, 6650.0], [39.5, 6666.0], [39.6, 6679.0], [39.7, 6716.0], [39.8, 6723.0], [39.9, 6760.0], [40.0, 6763.0], [40.1, 6795.0], [40.2, 6798.0], [40.3, 6831.0], [40.4, 6840.0], [40.5, 6842.0], [40.6, 6853.0], [40.7, 6869.0], [40.8, 6900.0], [40.9, 6921.0], [41.0, 6949.0], [41.1, 6983.0], [41.2, 7001.0], [41.3, 7024.0], [41.4, 7037.0], [41.5, 7077.0], [41.6, 7092.0], [41.7, 7103.0], [41.8, 7127.0], [41.9, 7141.0], [42.0, 7154.0], [42.1, 7180.0], [42.2, 7195.0], [42.3, 7216.0], [42.4, 7263.0], [42.5, 7268.0], [42.6, 7285.0], [42.7, 7297.0], [42.8, 7322.0], [42.9, 7342.0], [43.0, 7372.0], [43.1, 7390.0], [43.2, 7434.0], [43.3, 7442.0], [43.4, 7458.0], [43.5, 7472.0], [43.6, 7485.0], [43.7, 7502.0], [43.8, 7513.0], [43.9, 7527.0], [44.0, 7558.0], [44.1, 7567.0], [44.2, 7587.0], [44.3, 7615.0], [44.4, 7630.0], [44.5, 7645.0], [44.6, 7654.0], [44.7, 7670.0], [44.8, 7682.0], [44.9, 7690.0], [45.0, 7701.0], [45.1, 7705.0], [45.2, 7710.0], [45.3, 7725.0], [45.4, 7741.0], [45.5, 7752.0], [45.6, 7766.0], [45.7, 7792.0], [45.8, 7802.0], [45.9, 7809.0], [46.0, 7820.0], [46.1, 7832.0], [46.2, 7857.0], [46.3, 7863.0], [46.4, 7872.0], [46.5, 7899.0], [46.6, 7909.0], [46.7, 7914.0], [46.8, 7921.0], [46.9, 7926.0], [47.0, 7932.0], [47.1, 7943.0], [47.2, 7947.0], [47.3, 7954.0], [47.4, 7977.0], [47.5, 8001.0], [47.6, 8023.0], [47.7, 8038.0], [47.8, 8063.0], [47.9, 8083.0], [48.0, 8102.0], [48.1, 8117.0], [48.2, 8149.0], [48.3, 8187.0], [48.4, 8202.0], [48.5, 8220.0], [48.6, 8252.0], [48.7, 8255.0], [48.8, 8258.0], [48.9, 8264.0], [49.0, 8308.0], [49.1, 8314.0], [49.2, 8337.0], [49.3, 8347.0], [49.4, 8381.0], [49.5, 8401.0], [49.6, 8403.0], [49.7, 8445.0], [49.8, 8457.0], [49.9, 8480.0], [50.0, 8497.0], [50.1, 8524.0], [50.2, 8549.0], [50.3, 8598.0], [50.4, 8605.0], [50.5, 8633.0], [50.6, 8656.0], [50.7, 8674.0], [50.8, 8683.0], [50.9, 8689.0], [51.0, 8707.0], [51.1, 8722.0], [51.2, 8742.0], [51.3, 8759.0], [51.4, 8773.0], [51.5, 8785.0], [51.6, 8828.0], [51.7, 8836.0], [51.8, 8845.0], [51.9, 8868.0], [52.0, 8906.0], [52.1, 8917.0], [52.2, 8942.0], [52.3, 8963.0], [52.4, 8975.0], [52.5, 8983.0], [52.6, 8993.0], [52.7, 9015.0], [52.8, 9026.0], [52.9, 9039.0], [53.0, 9055.0], [53.1, 9073.0], [53.2, 9097.0], [53.3, 9126.0], [53.4, 9141.0], [53.5, 9162.0], [53.6, 9177.0], [53.7, 9199.0], [53.8, 9231.0], [53.9, 9246.0], [54.0, 9267.0], [54.1, 9283.0], [54.2, 9296.0], [54.3, 9305.0], [54.4, 9346.0], [54.5, 9355.0], [54.6, 9358.0], [54.7, 9376.0], [54.8, 9411.0], [54.9, 9419.0], [55.0, 9438.0], [55.1, 9455.0], [55.2, 9465.0], [55.3, 9482.0], [55.4, 9495.0], [55.5, 9510.0], [55.6, 9528.0], [55.7, 9557.0], [55.8, 9570.0], [55.9, 9606.0], [56.0, 9612.0], [56.1, 9618.0], [56.2, 9642.0], [56.3, 9651.0], [56.4, 9684.0], [56.5, 9698.0], [56.6, 9754.0], [56.7, 9760.0], [56.8, 9772.0], [56.9, 9784.0], [57.0, 9809.0], [57.1, 9821.0], [57.2, 9844.0], [57.3, 9870.0], [57.4, 9874.0], [57.5, 9886.0], [57.6, 9899.0], [57.7, 9911.0], [57.8, 9954.0], [57.9, 9967.0], [58.0, 9982.0], [58.1, 10003.0], [58.2, 10033.0], [58.3, 10049.0], [58.4, 10070.0], [58.5, 10074.0], [58.6, 10092.0], [58.7, 10122.0], [58.8, 10160.0], [58.9, 10183.0], [59.0, 10200.0], [59.1, 10220.0], [59.2, 10241.0], [59.3, 10248.0], [59.4, 10260.0], [59.5, 10273.0], [59.6, 10284.0], [59.7, 10292.0], [59.8, 10305.0], [59.9, 10313.0], [60.0, 10411.0], [60.1, 10419.0], [60.2, 10455.0], [60.3, 10462.0], [60.4, 10464.0], [60.5, 10468.0], [60.6, 10470.0], [60.7, 10480.0], [60.8, 10484.0], [60.9, 10492.0], [61.0, 10501.0], [61.1, 10507.0], [61.2, 10523.0], [61.3, 10527.0], [61.4, 10551.0], [61.5, 10566.0], [61.6, 10583.0], [61.7, 10636.0], [61.8, 10658.0], [61.9, 10708.0], [62.0, 10717.0], [62.1, 10723.0], [62.2, 10742.0], [62.3, 10757.0], [62.4, 10780.0], [62.5, 10789.0], [62.6, 10792.0], [62.7, 10813.0], [62.8, 10836.0], [62.9, 10843.0], [63.0, 10868.0], [63.1, 10891.0], [63.2, 10898.0], [63.3, 10916.0], [63.4, 10922.0], [63.5, 10935.0], [63.6, 10951.0], [63.7, 10995.0], [63.8, 11006.0], [63.9, 11013.0], [64.0, 11017.0], [64.1, 11026.0], [64.2, 11042.0], [64.3, 11074.0], [64.4, 11093.0], [64.5, 11104.0], [64.6, 11112.0], [64.7, 11120.0], [64.8, 11156.0], [64.9, 11196.0], [65.0, 11222.0], [65.1, 11239.0], [65.2, 11257.0], [65.3, 11268.0], [65.4, 11302.0], [65.5, 11332.0], [65.6, 11340.0], [65.7, 11346.0], [65.8, 11384.0], [65.9, 11405.0], [66.0, 11425.0], [66.1, 11430.0], [66.2, 11463.0], [66.3, 11481.0], [66.4, 11496.0], [66.5, 11507.0], [66.6, 11517.0], [66.7, 11527.0], [66.8, 11538.0], [66.9, 11554.0], [67.0, 11560.0], [67.1, 11579.0], [67.2, 11606.0], [67.3, 11629.0], [67.4, 11635.0], [67.5, 11644.0], [67.6, 11648.0], [67.7, 11657.0], [67.8, 11676.0], [67.9, 11683.0], [68.0, 11689.0], [68.1, 11700.0], [68.2, 11713.0], [68.3, 11721.0], [68.4, 11728.0], [68.5, 11741.0], [68.6, 11774.0], [68.7, 11788.0], [68.8, 11797.0], [68.9, 11806.0], [69.0, 11814.0], [69.1, 11831.0], [69.2, 11852.0], [69.3, 11874.0], [69.4, 11887.0], [69.5, 11893.0], [69.6, 11898.0], [69.7, 11916.0], [69.8, 11943.0], [69.9, 11958.0], [70.0, 11968.0], [70.1, 12004.0], [70.2, 12014.0], [70.3, 12027.0], [70.4, 12048.0], [70.5, 12065.0], [70.6, 12092.0], [70.7, 12105.0], [70.8, 12119.0], [70.9, 12125.0], [71.0, 12143.0], [71.1, 12154.0], [71.2, 12165.0], [71.3, 12196.0], [71.4, 12211.0], [71.5, 12225.0], [71.6, 12239.0], [71.7, 12266.0], [71.8, 12278.0], [71.9, 12280.0], [72.0, 12311.0], [72.1, 12343.0], [72.2, 12353.0], [72.3, 12375.0], [72.4, 12386.0], [72.5, 12398.0], [72.6, 12409.0], [72.7, 12410.0], [72.8, 12416.0], [72.9, 12429.0], [73.0, 12461.0], [73.1, 12466.0], [73.2, 12470.0], [73.3, 12477.0], [73.4, 12480.0], [73.5, 12486.0], [73.6, 12493.0], [73.7, 12498.0], [73.8, 12509.0], [73.9, 12528.0], [74.0, 12543.0], [74.1, 12551.0], [74.2, 12562.0], [74.3, 12571.0], [74.4, 12583.0], [74.5, 12598.0], [74.6, 12598.0], [74.7, 12604.0], [74.8, 12609.0], [74.9, 12610.0], [75.0, 12615.0], [75.1, 12624.0], [75.2, 12634.0], [75.3, 12640.0], [75.4, 12647.0], [75.5, 12658.0], [75.6, 12665.0], [75.7, 12676.0], [75.8, 12686.0], [75.9, 12702.0], [76.0, 12708.0], [76.1, 12744.0], [76.2, 12778.0], [76.3, 12789.0], [76.4, 12795.0], [76.5, 12822.0], [76.6, 12837.0], [76.7, 12851.0], [76.8, 12872.0], [76.9, 12892.0], [77.0, 12904.0], [77.1, 12910.0], [77.2, 12964.0], [77.3, 12976.0], [77.4, 12986.0], [77.5, 12994.0], [77.6, 13000.0], [77.7, 13017.0], [77.8, 13046.0], [77.9, 13059.0], [78.0, 13078.0], [78.1, 13091.0], [78.2, 13113.0], [78.3, 13160.0], [78.4, 13165.0], [78.5, 13194.0], [78.6, 13228.0], [78.7, 13249.0], [78.8, 13273.0], [78.9, 13300.0], [79.0, 13310.0], [79.1, 13322.0], [79.2, 13329.0], [79.3, 13336.0], [79.4, 13343.0], [79.5, 13347.0], [79.6, 13351.0], [79.7, 13363.0], [79.8, 13369.0], [79.9, 13372.0], [80.0, 13393.0], [80.1, 13400.0], [80.2, 13414.0], [80.3, 13421.0], [80.4, 13437.0], [80.5, 13460.0], [80.6, 13481.0], [80.7, 13495.0], [80.8, 13508.0], [80.9, 13513.0], [81.0, 13532.0], [81.1, 13552.0], [81.2, 13579.0], [81.3, 13591.0], [81.4, 13605.0], [81.5, 13616.0], [81.6, 13625.0], [81.7, 13637.0], [81.8, 13648.0], [81.9, 13667.0], [82.0, 13699.0], [82.1, 13724.0], [82.2, 13729.0], [82.3, 13752.0], [82.4, 13767.0], [82.5, 13782.0], [82.6, 13795.0], [82.7, 13815.0], [82.8, 13841.0], [82.9, 13860.0], [83.0, 13871.0], [83.1, 13900.0], [83.2, 13924.0], [83.3, 13951.0], [83.4, 13956.0], [83.5, 13976.0], [83.6, 13994.0], [83.7, 14016.0], [83.8, 14019.0], [83.9, 14103.0], [84.0, 14131.0], [84.1, 14137.0], [84.2, 14141.0], [84.3, 14153.0], [84.4, 14158.0], [84.5, 14161.0], [84.6, 14164.0], [84.7, 14177.0], [84.8, 14210.0], [84.9, 14232.0], [85.0, 14243.0], [85.1, 14263.0], [85.2, 14287.0], [85.3, 14307.0], [85.4, 14339.0], [85.5, 14387.0], [85.6, 14406.0], [85.7, 14414.0], [85.8, 14421.0], [85.9, 14445.0], [86.0, 14469.0], [86.1, 14496.0], [86.2, 14508.0], [86.3, 14517.0], [86.4, 14531.0], [86.5, 14537.0], [86.6, 14550.0], [86.7, 14575.0], [86.8, 14616.0], [86.9, 14619.0], [87.0, 14635.0], [87.1, 14651.0], [87.2, 14673.0], [87.3, 14692.0], [87.4, 14707.0], [87.5, 14718.0], [87.6, 14730.0], [87.7, 14737.0], [87.8, 14767.0], [87.9, 14772.0], [88.0, 14782.0], [88.1, 14809.0], [88.2, 14816.0], [88.3, 14822.0], [88.4, 14829.0], [88.5, 14860.0], [88.6, 14883.0], [88.7, 14886.0], [88.8, 14903.0], [88.9, 14931.0], [89.0, 14949.0], [89.1, 14964.0], [89.2, 14985.0], [89.3, 15007.0], [89.4, 15016.0], [89.5, 15021.0], [89.6, 15026.0], [89.7, 15039.0], [89.8, 15051.0], [89.9, 15068.0], [90.0, 15107.0], [90.1, 15113.0], [90.2, 15126.0], [90.3, 15132.0], [90.4, 15157.0], [90.5, 15181.0], [90.6, 15192.0], [90.7, 15198.0], [90.8, 15209.0], [90.9, 15251.0], [91.0, 15260.0], [91.1, 15268.0], [91.2, 15293.0], [91.3, 15304.0], [91.4, 15308.0], [91.5, 15341.0], [91.6, 15358.0], [91.7, 15372.0], [91.8, 15397.0], [91.9, 15416.0], [92.0, 15426.0], [92.1, 15440.0], [92.2, 15456.0], [92.3, 15469.0], [92.4, 15511.0], [92.5, 15517.0], [92.6, 15548.0], [92.7, 15550.0], [92.8, 15574.0], [92.9, 15581.0], [93.0, 15591.0], [93.1, 15606.0], [93.2, 15638.0], [93.3, 15649.0], [93.4, 15661.0], [93.5, 15679.0], [93.6, 15688.0], [93.7, 15695.0], [93.8, 15738.0], [93.9, 15745.0], [94.0, 15760.0], [94.1, 15772.0], [94.2, 15777.0], [94.3, 15793.0], [94.4, 15805.0], [94.5, 15814.0], [94.6, 15859.0], [94.7, 15867.0], [94.8, 15882.0], [94.9, 15896.0], [95.0, 15910.0], [95.1, 15922.0], [95.2, 15927.0], [95.3, 15936.0], [95.4, 15973.0], [95.5, 15991.0], [95.6, 16006.0], [95.7, 16019.0], [95.8, 16036.0], [95.9, 16051.0], [96.0, 16095.0], [96.1, 16111.0], [96.2, 16121.0], [96.3, 16142.0], [96.4, 16151.0], [96.5, 16166.0], [96.6, 16181.0], [96.7, 16196.0], [96.8, 16207.0], [96.9, 16216.0], [97.0, 16220.0], [97.1, 16248.0], [97.2, 16259.0], [97.3, 16294.0], [97.4, 16312.0], [97.5, 16329.0], [97.6, 16340.0], [97.7, 16364.0], [97.8, 16379.0], [97.9, 16402.0], [98.0, 16416.0], [98.1, 16465.0], [98.2, 16473.0], [98.3, 16504.0], [98.4, 16521.0], [98.5, 16541.0], [98.6, 16558.0], [98.7, 16577.0], [98.8, 16592.0], [98.9, 16612.0], [99.0, 16622.0], [99.1, 16646.0], [99.2, 16654.0], [99.3, 16669.0], [99.4, 16694.0], [99.5, 16714.0], [99.6, 16720.0], [99.7, 16742.0], [99.8, 16858.0], [99.9, 17544.0], [100.0, 17657.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 300.0, "maxY": 55.0, "series": [{"data": [[300.0, 13.0], [400.0, 23.0], [500.0, 16.0], [600.0, 23.0], [700.0, 31.0], [800.0, 16.0], [900.0, 17.0], [1000.0, 12.0], [1100.0, 18.0], [1200.0, 18.0], [1300.0, 24.0], [1400.0, 10.0], [1500.0, 13.0], [1600.0, 34.0], [1700.0, 44.0], [1800.0, 38.0], [1900.0, 32.0], [2000.0, 10.0], [2100.0, 19.0], [2200.0, 23.0], [2300.0, 17.0], [2400.0, 32.0], [2500.0, 35.0], [2600.0, 5.0], [2800.0, 15.0], [2900.0, 36.0], [3000.0, 55.0], [3100.0, 30.0], [3200.0, 16.0], [3300.0, 13.0], [3400.0, 38.0], [3500.0, 49.0], [3600.0, 34.0], [3700.0, 27.0], [3800.0, 17.0], [3900.0, 22.0], [4000.0, 22.0], [4100.0, 24.0], [4200.0, 27.0], [4300.0, 33.0], [4400.0, 24.0], [4500.0, 26.0], [4600.0, 34.0], [4700.0, 23.0], [4800.0, 28.0], [4900.0, 26.0], [5000.0, 17.0], [5100.0, 25.0], [5200.0, 25.0], [5300.0, 38.0], [5400.0, 16.0], [5500.0, 36.0], [5600.0, 24.0], [5700.0, 35.0], [5800.0, 24.0], [5900.0, 11.0], [6000.0, 36.0], [6100.0, 24.0], [6200.0, 21.0], [6300.0, 30.0], [6400.0, 26.0], [6500.0, 28.0], [6600.0, 28.0], [6700.0, 23.0], [6800.0, 23.0], [6900.0, 16.0], [7000.0, 19.0], [7100.0, 22.0], [7200.0, 20.0], [7300.0, 16.0], [7400.0, 23.0], [7500.0, 22.0], [7600.0, 29.0], [7700.0, 31.0], [7800.0, 31.0], [7900.0, 39.0], [8000.0, 18.0], [8100.0, 18.0], [8200.0, 23.0], [8300.0, 20.0], [8400.0, 22.0], [8500.0, 14.0], [8600.0, 25.0], [8700.0, 22.0], [8900.0, 27.0], [8800.0, 18.0], [9000.0, 22.0], [9100.0, 20.0], [9200.0, 23.0], [9300.0, 20.0], [9400.0, 25.0], [9500.0, 17.0], [9600.0, 27.0], [9700.0, 17.0], [9800.0, 27.0], [9900.0, 19.0], [10000.0, 22.0], [10100.0, 14.0], [10200.0, 32.0], [10300.0, 7.0], [10400.0, 41.0], [10500.0, 25.0], [10600.0, 11.0], [10700.0, 29.0], [10800.0, 24.0], [10900.0, 21.0], [11000.0, 29.0], [11100.0, 18.0], [11200.0, 19.0], [11300.0, 20.0], [11400.0, 21.0], [11500.0, 30.0], [11600.0, 37.0], [11700.0, 31.0], [11800.0, 31.0], [11900.0, 18.0], [12000.0, 24.0], [12100.0, 25.0], [12200.0, 26.0], [12300.0, 22.0], [12400.0, 48.0], [12500.0, 36.0], [12600.0, 50.0], [12700.0, 24.0], [12800.0, 19.0], [12900.0, 26.0], [13000.0, 20.0], [13100.0, 16.0], [13200.0, 15.0], [13300.0, 48.0], [13400.0, 26.0], [13500.0, 26.0], [13600.0, 25.0], [13700.0, 24.0], [13800.0, 19.0], [14300.0, 12.0], [13900.0, 21.0], [14000.0, 10.0], [14100.0, 35.0], [14200.0, 21.0], [14500.0, 25.0], [14400.0, 22.0], [14600.0, 25.0], [14700.0, 27.0], [14800.0, 30.0], [14900.0, 18.0], [15000.0, 30.0], [15100.0, 29.0], [15200.0, 21.0], [15300.0, 24.0], [15400.0, 22.0], [15500.0, 28.0], [15600.0, 25.0], [15700.0, 25.0], [15800.0, 23.0], [15900.0, 26.0], [16000.0, 19.0], [16100.0, 29.0], [16200.0, 24.0], [16300.0, 20.0], [16800.0, 3.0], [16400.0, 17.0], [16500.0, 23.0], [16600.0, 24.0], [16700.0, 11.0], [17400.0, 3.0], [17500.0, 2.0], [17600.0, 3.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 17600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 36.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3779.0, "series": [{"data": [[0.0, 36.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 185.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3779.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1644.9442499999966, "minX": 1.67230038E12, "maxY": 1644.9442499999966, "series": [{"data": [[1.67230038E12, 1644.9442499999966]], "isOverall": false, "label": "client-to-gateway-caching (GET)", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67230038E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 465.0, "minX": 1.0, "maxY": 17657.0, "series": [{"data": [[2.0, 17657.0], [3.0, 17408.0], [4.0, 17424.0], [5.0, 17642.0], [6.0, 16828.0], [7.0, 17612.0], [8.0, 16798.0], [9.0, 17563.0], [10.0, 16802.0], [11.0, 17544.0], [12.0, 16738.0], [13.0, 16742.0], [14.0, 16724.0], [15.0, 16728.0], [16.0, 16719.0], [17.0, 16717.0], [18.0, 16717.0], [19.0, 16720.0], [20.0, 16714.0], [21.0, 16702.0], [22.0, 16696.0], [23.0, 16694.0], [24.0, 16699.0], [25.0, 16684.0], [26.0, 16677.0], [27.0, 16670.0], [28.0, 16668.0], [29.0, 16661.0], [30.0, 16669.0], [31.0, 16651.0], [32.0, 16652.0], [35.0, 16647.0], [34.0, 16654.0], [37.0, 16646.0], [36.0, 16633.0], [39.0, 16635.0], [38.0, 16621.0], [41.0, 16612.0], [40.0, 16617.0], [43.0, 16620.0], [42.0, 16622.0], [45.0, 16596.0], [44.0, 16622.0], [47.0, 16596.0], [49.0, 16593.0], [48.0, 16589.0], [51.0, 16577.0], [50.0, 16581.0], [53.0, 16572.0], [52.0, 16577.0], [55.0, 16558.0], [54.0, 16560.0], [57.0, 16553.0], [56.0, 16569.0], [59.0, 16541.0], [58.0, 16549.0], [61.0, 16538.0], [60.0, 16549.0], [62.0, 16521.0], [67.0, 16516.0], [66.0, 16509.0], [65.0, 16510.0], [64.0, 16523.5], [71.0, 16471.0], [70.0, 16480.0], [69.0, 16488.0], [68.0, 16504.0], [75.0, 16467.0], [74.0, 16483.0], [73.0, 16473.0], [72.0, 16471.0], [79.0, 16453.0], [78.0, 16460.5], [76.0, 16461.0], [82.0, 16406.0], [81.0, 16412.0], [87.0, 16390.0], [86.0, 16400.0], [85.0, 16398.0], [84.0, 16406.0], [91.0, 16372.0], [90.0, 16371.0], [89.0, 16379.0], [88.0, 16369.0], [95.0, 16358.0], [94.0, 16358.0], [93.0, 16364.0], [92.0, 16364.0], [99.0, 16328.0], [98.0, 16325.0], [97.0, 16331.0], [96.0, 16340.0], [102.0, 16329.0], [101.0, 16331.0], [100.0, 16335.0], [107.0, 16297.0], [106.0, 16294.0], [105.0, 16310.0], [104.0, 16312.5], [111.0, 16266.0], [110.0, 16273.0], [109.0, 16290.0], [108.0, 16294.0], [115.0, 16257.0], [114.0, 16259.0], [113.0, 16259.0], [112.0, 16258.0], [119.0, 16229.0], [118.0, 16239.0], [117.0, 16247.0], [116.0, 16248.0], [123.0, 16218.0], [122.0, 16216.0], [121.0, 16216.0], [120.0, 16218.0], [127.0, 16202.0], [126.0, 16220.0], [125.0, 16213.0], [124.0, 16215.0], [135.0, 16181.0], [134.0, 16194.0], [133.0, 16194.0], [132.0, 16196.0], [131.0, 16197.0], [130.0, 16198.0], [129.0, 16208.0], [143.0, 16152.0], [142.0, 16148.0], [141.0, 16165.0], [140.0, 16167.0], [139.0, 16177.0], [138.0, 16166.0], [137.0, 16176.0], [136.0, 16182.0], [151.0, 16131.0], [150.0, 16131.0], [149.0, 16143.0], [148.0, 16141.5], [146.0, 16147.0], [145.0, 16151.0], [144.0, 16152.0], [159.0, 16095.0], [158.0, 16101.0], [157.0, 16103.0], [156.0, 16111.0], [155.0, 16112.0], [154.0, 16120.0], [153.0, 16121.0], [152.0, 16120.0], [167.0, 16039.0], [166.0, 16043.0], [165.0, 16042.0], [164.0, 16051.0], [163.0, 16078.0], [162.0, 16093.0], [161.0, 16092.0], [160.0, 16096.0], [175.0, 16012.0], [174.0, 16011.0], [173.0, 16017.0], [172.0, 16019.0], [171.0, 16019.0], [170.0, 16026.0], [169.0, 16032.0], [168.0, 16036.0], [183.0, 15973.0], [182.0, 15978.0], [181.0, 15978.0], [180.0, 15991.0], [179.0, 15994.0], [178.0, 15994.0], [177.0, 16004.0], [176.0, 16006.0], [191.0, 15934.0], [190.0, 15944.0], [189.0, 15935.0], [188.0, 15936.0], [187.0, 15936.0], [186.0, 15946.0], [185.0, 15947.0], [184.0, 15981.0], [199.0, 15912.0], [198.0, 15924.0], [197.0, 15923.0], [196.0, 15922.0], [195.0, 15921.0], [194.0, 15927.0], [193.0, 15919.0], [192.0, 15927.0], [207.0, 15884.0], [206.0, 15888.0], [205.0, 15889.0], [204.0, 15896.0], [203.0, 15904.0], [202.0, 15910.0], [201.0, 15906.0], [200.0, 15903.0], [215.0, 15860.0], [213.0, 15867.0], [212.0, 15859.0], [211.0, 15874.0], [210.0, 15875.0], [209.0, 15882.0], [208.0, 15881.0], [223.0, 15810.0], [222.0, 15818.0], [221.0, 15811.0], [220.0, 15814.0], [219.0, 16858.0], [218.0, 15862.5], [216.0, 15857.0], [231.0, 15784.0], [230.0, 15801.0], [229.0, 15793.0], [228.0, 15793.0], [227.0, 15794.0], [226.0, 15805.0], [225.0, 15802.0], [224.0, 15812.0], [237.0, 15772.0], [236.0, 15773.0], [234.0, 15777.0], [233.0, 15771.0], [232.0, 15776.0], [247.0, 15740.0], [246.0, 15746.0], [245.0, 15741.0], [244.0, 15746.0], [243.0, 15742.0], [242.0, 15748.0], [241.0, 15770.0], [240.0, 15770.333333333334], [255.0, 15691.0], [254.0, 15692.0], [253.0, 15701.0], [252.0, 15695.0], [251.0, 15717.0], [250.0, 15731.0], [249.0, 15738.0], [248.0, 15745.0], [270.0, 15649.0], [258.0, 15685.0], [266.0, 15661.0], [264.0, 15667.0], [262.0, 15682.0], [260.0, 15679.0], [286.0, 15581.0], [284.0, 15591.0], [282.0, 15590.0], [280.0, 15589.0], [272.0, 15644.0], [274.0, 15638.0], [278.0, 15597.0], [276.0, 15623.0], [302.0, 15518.0], [300.0, 15517.0], [298.0, 15543.0], [296.0, 15549.0], [288.0, 15574.0], [294.0, 15549.0], [292.0, 15574.0], [318.0, 15439.0], [316.0, 15446.0], [314.0, 15448.0], [312.0, 15456.0], [304.0, 15513.0], [306.0, 15495.0], [310.0, 15461.0], [308.0, 15479.0], [334.0, 15367.0], [332.0, 15373.0], [330.0, 15391.0], [328.0, 15398.0], [320.0, 15427.0], [322.0, 15418.0], [326.0, 15415.0], [324.0, 15417.0], [348.0, 15304.0], [350.0, 15307.0], [338.0, 15358.0], [336.0, 15362.0], [346.0, 15311.0], [344.0, 15306.0], [342.0, 15329.0], [366.0, 15253.0], [354.0, 15293.0], [362.0, 15259.0], [360.0, 15260.0], [358.0, 15271.0], [356.0, 15268.0], [380.0, 15196.333333333334], [382.0, 15178.0], [376.0, 15198.0], [374.0, 15192.0], [368.0, 15209.0], [372.0, 15195.0], [396.0, 15111.0], [398.0, 15107.0], [386.0, 15158.0], [384.0, 15152.0], [394.0, 15126.0], [392.0, 15130.0], [390.0, 15126.0], [388.0, 15132.0], [414.0, 15026.0], [412.0, 15045.0], [410.0, 15043.0], [408.0, 15051.0], [400.0, 15101.5], [402.0, 15114.0], [406.0, 15065.0], [404.0, 15083.0], [428.0, 15017.0], [430.0, 15009.0], [416.0, 15042.0], [426.0, 15006.0], [424.0, 15023.0], [422.0, 15016.0], [420.0, 15021.0], [444.0, 14930.0], [446.0, 14933.5], [434.0, 14981.0], [432.0, 14985.0], [442.0, 14944.0], [440.0, 14956.0], [438.0, 14962.0], [436.0, 14965.0], [462.0, 14859.0], [460.0, 14866.0], [458.0, 14867.0], [456.0, 14885.0], [448.0, 14903.0], [450.0, 14902.5], [454.0, 14886.0], [452.0, 14885.0], [478.0, 14807.5], [474.0, 5197.333333333333], [476.0, 14810.0], [466.0, 14829.0], [464.0, 14848.0], [472.0, 14823.0], [470.0, 14822.0], [468.0, 14827.0], [494.0, 7556.0], [492.0, 7534.5], [490.0, 5190.333333333333], [488.0, 4008.25], [484.0, 4016.0], [480.0, 2845.333333333333], [486.0, 14772.0], [482.0, 2077.1111111111113], [496.0, 4008.75], [510.0, 5316.666666666667], [500.0, 5303.0], [502.0, 14718.0], [498.0, 7670.0], [504.0, 7667.5], [508.0, 14695.5], [506.0, 14707.0], [516.0, 7616.5], [512.0, 7628.0], [540.0, 7641.0], [536.0, 14550.0], [528.0, 14612.0], [532.0, 14586.0], [524.0, 7652.0], [520.0, 7659.0], [568.0, 5279.0], [564.0, 7633.5], [560.0, 14461.0], [572.0, 14414.0], [548.0, 7595.0], [544.0, 4147.5], [552.0, 7557.5], [556.0, 14481.0], [604.0, 14216.0], [584.0, 7519.0], [596.0, 7503.5], [600.0, 14241.0], [580.0, 14379.0], [576.0, 14406.0], [588.0, 14307.0], [592.0, 14281.0], [632.0, 7528.0], [636.0, 7595.5], [608.0, 14204.0], [628.0, 7521.0], [624.0, 5329.666666666667], [616.0, 5262.0], [620.0, 14158.0], [640.0, 14112.0], [648.0, 7474.0], [644.0, 14098.0], [652.0, 14019.0], [668.0, 13937.0], [656.0, 13980.0], [664.0, 13951.0], [660.0, 13960.0], [684.0, 13847.0], [672.0, 7430.5], [680.0, 13879.0], [700.0, 13782.0], [696.0, 13787.5], [676.0, 13870.0], [692.0, 13807.0], [688.0, 13828.0], [728.0, 13639.0], [732.0, 13625.0], [708.0, 13741.0], [704.0, 13764.0], [724.0, 13650.0], [720.0, 13675.0], [716.0, 13713.0], [712.0, 13725.0], [752.0, 7394.5], [764.0, 13511.5], [756.0, 13550.0], [736.0, 13623.0], [740.0, 13613.0], [748.0, 13588.5], [744.0, 13596.0], [768.0, 13513.0], [796.0, 13363.0], [780.0, 7316.5], [772.0, 13492.0], [792.0, 13372.0], [788.0, 13417.0], [784.0, 13431.0], [828.0, 13371.0], [824.0, 13389.0], [820.0, 13273.0], [816.0, 13406.0], [800.0, 13345.0], [812.0, 13437.0], [808.0, 13329.0], [836.0, 13343.0], [832.0, 7297.0], [844.0, 5247.333333333334], [840.0, 1233.0], [856.0, 7225.5], [860.0, 7291.0], [848.0, 13322.0], [852.0, 13249.0], [876.0, 13111.5], [872.0, 13151.0], [880.0, 7158.0], [892.0, 13017.0], [888.0, 13078.0], [868.0, 13160.0], [864.0, 13169.0], [884.0, 13057.0], [896.0, 7178.0], [920.0, 7121.5], [908.0, 12977.333333333334], [904.0, 12986.0], [900.0, 7148.0], [912.0, 12964.0], [924.0, 12892.0], [916.0, 12910.0], [940.0, 7162.5], [936.0, 12837.0], [944.0, 7125.25], [928.0, 12872.0], [956.0, 12744.0], [952.0, 12781.5], [932.0, 12845.0], [948.0, 12786.0], [960.0, 12707.0], [964.0, 7122.5], [972.0, 7116.5], [968.0, 12686.0], [984.0, 12624.0], [980.0, 12634.0], [976.0, 12659.0], [1004.0, 6965.5], [1000.0, 12518.0], [1008.0, 6963.5], [1020.0, 7014.0], [1016.0, 12427.0], [996.0, 12571.0], [992.0, 12587.0], [1012.0, 12479.0], [1048.0, 4415.5], [1040.0, 8932.0], [1080.0, 12497.0], [1072.0, 12529.5], [1032.0, 12642.0], [1064.0, 12565.0], [1056.0, 12597.0], [1096.0, 12461.0], [1088.0, 1797.0], [1128.0, 6960.5], [1136.0, 12238.0], [1120.0, 12311.0], [1112.0, 12353.0], [1104.0, 12410.0], [1184.0, 5272.0], [1192.0, 6948.0], [1152.0, 12165.0], [1168.0, 12119.0], [1208.0, 11943.0], [1200.0, 11968.0], [1160.0, 12138.0], [1240.0, 6880.0], [1232.0, 11857.0], [1264.0, 11722.0], [1224.0, 11883.0], [1216.0, 11905.0], [1256.0, 11789.0], [1248.0, 11797.0], [1312.0, 11600.0], [1320.0, 6638.5], [1336.0, 11529.0], [1280.0, 11691.0], [1288.0, 11673.0], [1304.0, 11642.0], [1296.0, 11646.0], [1352.0, 4983.333333333334], [1400.0, 11222.5], [1344.0, 4992.333333333334], [1368.0, 11385.0], [1360.0, 11428.0], [1376.0, 11342.0], [1392.0, 11258.0], [1384.0, 11303.0], [1408.0, 11156.0], [1456.0, 6412.0], [1432.0, 11028.0], [1424.0, 11093.0], [1464.0, 10921.0], [1448.0, 10996.0], [1440.0, 11013.0], [1472.0, 10894.0], [1528.0, 10658.5], [1488.0, 6382.5], [1480.0, 10868.0], [1496.0, 10792.0], [1512.0, 3736.8], [1520.0, 10719.0], [1504.0, 10780.0], [1592.0, 10460.0], [1584.0, 10455.0], [1576.0, 10477.0], [1536.0, 10583.0], [1544.0, 10551.0], [1560.0, 10497.0], [1552.0, 10518.0], [1624.0, 10260.0], [1616.0, 6169.0], [1656.0, 10097.0], [1648.0, 10160.0], [1600.0, 10420.333333333334], [1640.0, 10196.0], [1632.0, 10242.0], [1720.0, 5961.0], [1712.0, 9841.0], [1696.0, 9906.0], [1664.0, 10070.0], [1672.0, 10033.0], [1688.0, 9957.0], [1680.0, 9982.0], [1728.0, 9784.0], [1736.0, 9754.0], [1752.0, 9642.0], [1744.0, 9684.0], [1784.0, 9495.0], [1776.0, 9523.0], [1768.0, 9569.0], [1760.0, 9609.0], [1840.0, 9270.0], [1848.0, 9235.0], [1800.0, 9438.0], [1792.0, 9465.0], [1832.0, 9297.0], [1824.0, 9346.0], [1808.0, 9398.0], [1864.0, 5695.5], [1912.0, 8928.0], [1856.0, 9170.0], [1880.0, 9055.0], [1872.0, 9097.0], [1904.0, 8972.0], [1896.0, 8990.0], [1888.0, 9026.0], [1928.0, 8840.0], [1976.0, 8641.0], [1920.0, 8888.0], [1968.0, 8683.0], [1960.0, 8697.0], [1952.0, 8745.0], [1944.0, 8771.0], [1936.0, 8826.0], [2032.0, 8329.0], [1992.0, 5437.0], [2040.0, 8308.0], [1984.0, 8603.0], [2008.0, 8454.0], [2000.0, 8495.0], [2024.0, 8374.0], [2064.0, 8194.0], [2112.0, 2404.0], [2048.0, 8259.666666666666], [2096.0, 8020.0], [2080.0, 8102.0], [2144.0, 7872.0], [2128.0, 7921.0], [2160.0, 7827.0], [2272.0, 7434.0], [2240.0, 5033.0], [2208.0, 7684.0], [2224.0, 4208.333333333333], [2192.0, 7707.0], [2176.0, 7762.0], [2400.0, 6760.0], [2416.0, 6691.0], [2336.0, 7085.0], [2352.0, 7001.0], [2384.0, 6839.0], [2368.0, 6900.0], [2320.0, 7142.0], [2304.0, 7263.0], [2528.0, 6294.0], [2448.0, 6570.0], [2544.0, 6219.0], [2432.0, 6627.0], [2480.0, 6469.0], [2464.0, 6500.0], [2496.0, 6409.0], [2512.0, 6349.0], [2656.0, 3927.0], [2624.0, 4456.5], [2672.0, 5689.0], [2592.0, 6045.0], [2608.0, 4521.0], [2640.0, 4390.0], [2688.0, 5654.0], [2704.0, 5588.666666666667], [2736.0, 5477.0], [2720.0, 5555.0], [2784.0, 3092.0], [2752.0, 5399.0], [2768.0, 5333.0], [2816.0, 5196.0], [2928.0, 4747.0], [2864.0, 4982.0], [2848.0, 5024.0], [2912.0, 4801.0], [2832.0, 5124.0], [2880.0, 4909.0], [2944.0, 4672.0], [3056.0, 4289.0], [2992.0, 4518.0], [2976.0, 4578.0], [2960.0, 3900.0], [3008.0, 4463.0], [3024.0, 4373.0], [3040.0, 4326.0], [3088.0, 4151.0], [3072.0, 4234.0], [3168.0, 3790.0], [3184.0, 3715.0], [3104.0, 4097.0], [3120.0, 4010.0], [3136.0, 3929.0], [3152.0, 3854.0], [3216.0, 3630.0], [3200.0, 3682.0], [3232.0, 3584.0], [3248.0, 3443.5], [3280.0, 3489.0], [3264.0, 3517.0], [3312.0, 3401.0], [3296.0, 3440.0], [2049.0, 8251.0], [2065.0, 5283.5], [2097.0, 8017.0], [2081.0, 8100.0], [2145.0, 7866.0], [2113.0, 5174.5], [2129.0, 7923.0], [2161.0, 7817.0], [2289.0, 5724.333333333333], [2273.0, 7434.0], [2241.0, 5031.5], [2257.0, 7484.0], [2225.0, 3763.5], [2209.0, 7685.0], [2177.0, 7757.0], [2401.0, 6763.0], [2305.0, 7236.0], [2369.0, 4708.0], [2385.0, 6841.0], [2337.0, 7095.0], [2353.0, 6990.0], [2321.0, 7140.0], [2417.0, 6675.0], [2481.0, 6466.0], [2465.0, 6512.0], [2497.0, 6391.0], [2513.0, 6360.0], [2529.0, 6293.0], [2577.0, 6074.5], [2561.0, 6137.5], [2657.0, 5741.0], [2673.0, 5711.0], [2609.0, 4513.5], [2593.0, 6043.0], [2641.0, 4405.0], [2625.0, 5877.0], [2785.0, 5315.5], [2737.0, 4270.5], [2721.0, 5536.0], [2689.0, 5666.0], [2753.0, 5392.0], [2769.0, 5339.0], [2801.0, 5264.0], [2705.0, 5568.0], [2817.0, 5186.0], [2929.0, 4749.0], [2865.0, 4980.0], [2849.0, 5035.0], [2881.0, 4915.0], [2897.0, 4847.0], [2913.0, 4794.0], [2961.0, 3541.0], [2945.0, 4673.0], [2977.0, 4568.0], [3009.0, 4455.0], [3025.0, 4372.0], [3041.0, 3770.0], [3169.0, 3782.0], [3089.0, 4145.0], [3185.0, 3722.0], [3105.0, 4099.0], [3121.0, 4016.0], [3073.0, 4230.0], [3137.0, 3925.0], [3153.0, 3842.0], [3265.0, 3515.0], [3281.0, 3505.0], [3233.0, 3556.0], [3297.0, 3432.0], [3217.0, 3616.0], [3201.0, 3670.0], [3249.0, 3544.0], [1073.0, 12539.0], [1081.0, 12491.0], [1041.0, 7196.5], [1049.0, 12609.0], [1025.0, 12409.0], [1033.0, 12657.0], [1057.0, 12609.0], [1145.0, 12210.0], [1121.0, 7063.5], [1137.0, 12235.0], [1097.0, 12452.0], [1089.0, 12469.0], [1129.0, 12278.0], [1113.0, 12348.0], [1105.0, 12396.0], [1153.0, 12163.0], [1209.0, 6849.5], [1177.0, 12089.5], [1169.0, 12125.0], [1201.0, 11963.0], [1193.0, 12015.0], [1185.0, 12047.0], [1241.0, 11814.0], [1233.0, 11842.0], [1273.0, 11716.5], [1265.0, 11726.0], [1225.0, 11881.0], [1217.0, 11899.0], [1257.0, 11776.0], [1249.0, 11798.0], [1305.0, 11660.0], [1297.0, 6677.5], [1281.0, 11683.0], [1337.0, 11514.0], [1329.0, 11538.0], [1289.0, 11657.0], [1321.0, 11560.0], [1313.0, 11606.0], [1353.0, 1741.0], [1401.0, 11214.0], [1393.0, 11257.0], [1385.0, 11278.0], [1345.0, 11485.0], [1369.0, 11384.0], [1465.0, 6408.5], [1457.0, 10944.0], [1441.0, 11003.0], [1409.0, 11139.0], [1417.0, 11112.0], [1433.0, 11031.0], [1425.0, 11092.0], [1513.0, 4160.0], [1529.0, 10649.0], [1521.0, 10716.0], [1481.0, 10864.0], [1505.0, 10775.0], [1497.0, 10792.0], [1593.0, 10464.0], [1585.0, 10462.0], [1577.0, 10470.0], [1569.0, 10489.5], [1537.0, 10583.0], [1545.0, 10546.0], [1561.0, 10493.0], [1553.0, 10523.0], [1657.0, 10085.0], [1641.0, 6129.5], [1649.0, 10152.0], [1609.0, 10299.5], [1601.0, 10410.0], [1633.0, 10230.0], [1625.0, 10253.0], [1617.0, 10278.0], [1713.0, 5979.5], [1721.0, 5959.5], [1673.0, 10015.0], [1665.0, 10071.0], [1705.0, 9872.0], [1697.0, 9895.0], [1689.0, 9945.0], [1681.0, 9967.0], [1729.0, 9764.0], [1785.0, 9492.0], [1745.0, 5904.0], [1737.0, 9749.0], [1753.0, 9633.0], [1777.0, 9528.0], [1769.0, 9570.0], [1761.0, 9612.0], [1841.0, 9261.0], [1849.0, 9222.0], [1801.0, 9433.0], [1793.0, 9455.0], [1833.0, 9293.0], [1825.0, 9358.0], [1817.0, 9355.0], [1809.0, 9384.0], [1865.0, 2251.0], [1913.0, 8919.0], [1881.0, 5655.5], [1873.0, 9097.0], [1857.0, 9177.0], [1905.0, 8963.0], [1897.0, 8991.0], [1889.0, 9017.0], [1945.0, 8771.0], [1977.0, 8634.0], [1937.0, 5554.5], [1969.0, 5498.5], [1929.0, 8837.0], [1921.0, 8873.0], [1961.0, 8687.0], [1953.0, 8725.0], [1985.0, 8599.0], [2041.0, 8280.0], [2009.0, 8454.0], [2001.0, 8484.0], [2017.0, 8401.0], [2025.0, 8381.0], [2033.0, 8316.0], [1993.0, 8534.0], [2098.0, 8009.0], [2082.0, 2381.0], [2114.0, 7950.0], [2130.0, 7929.0], [2146.0, 7865.0], [2066.0, 8187.0], [2050.0, 8256.0], [2274.0, 7428.0], [2290.0, 7308.0], [2194.0, 7710.0], [2178.0, 7767.0], [2258.0, 7476.0], [2210.0, 7682.0], [2226.0, 3211.5714285714284], [2242.0, 7548.0], [2370.0, 2594.0], [2386.0, 6843.0], [2418.0, 6671.0], [2402.0, 6761.0], [2306.0, 7216.0], [2354.0, 6991.0], [2338.0, 7079.0], [2434.0, 6614.0], [2450.0, 6569.0], [2482.0, 6463.0], [2498.0, 6397.0], [2514.0, 6347.0], [2546.0, 6200.0], [2674.0, 5709.0], [2626.0, 3992.0], [2658.0, 5744.0], [2578.0, 6078.0], [2562.0, 6157.0], [2610.0, 3964.0], [2642.0, 4407.5], [2706.0, 5572.0], [2802.0, 5252.0], [2690.0, 5667.0], [2738.0, 5462.0], [2722.0, 5511.0], [2754.0, 5387.0], [2770.0, 5342.0], [2786.0, 5307.0], [2866.0, 4975.0], [2834.0, 5108.5], [2850.0, 5040.0], [2914.0, 4780.0], [2898.0, 4041.5], [2882.0, 4901.0], [2930.0, 5749.0], [2946.0, 4671.0], [2962.0, 3944.0], [2994.0, 4506.5], [2978.0, 4545.0], [3010.0, 4452.0], [3026.0, 4371.0], [3058.0, 4270.5], [3042.0, 4312.0], [3090.0, 4157.0], [3074.0, 4227.0], [3170.0, 3783.0], [3186.0, 3724.0], [3106.0, 4095.0], [3122.0, 4007.0], [3138.0, 3917.0], [3154.0, 3843.0], [3250.0, 3536.0], [3234.0, 3563.0], [3202.0, 3669.0], [3218.0, 3609.0], [3282.0, 3484.0], [3266.0, 3534.0], [3298.0, 3438.0], [2051.0, 5310.5], [2163.0, 7813.5], [2099.0, 8001.0], [2083.0, 8083.5], [2115.0, 7932.0], [2131.0, 7905.0], [2147.0, 7859.0], [2067.0, 8187.0], [2195.0, 7704.5], [2179.0, 7763.0], [2275.0, 7435.0], [2211.0, 7672.0], [2227.0, 3345.5], [2243.0, 7521.0], [2291.0, 7297.0], [2307.0, 7223.0], [2419.0, 6666.0], [2339.0, 7078.0], [2355.0, 6984.0], [2323.0, 7147.5], [2371.0, 5434.0], [2387.0, 6838.0], [2403.0, 6760.0], [2451.0, 6579.0], [2547.0, 6201.0], [2435.0, 6614.0], [2483.0, 6459.0], [2467.0, 6507.0], [2499.0, 6385.0], [2515.0, 6346.0], [2531.0, 6283.0], [2579.0, 6069.0], [2675.0, 5701.0], [2563.0, 6129.0], [2659.0, 5745.0], [2595.0, 6035.0], [2643.0, 4409.0], [2627.0, 5861.0], [2787.0, 5310.0], [2803.0, 5247.0], [2755.0, 5387.0], [2771.0, 5334.0], [2691.0, 5665.0], [2707.0, 5570.0], [2739.0, 5460.0], [2723.0, 5529.0], [2819.0, 5173.5], [2835.0, 5105.0], [2867.0, 4966.0], [2851.0, 5034.0], [2899.0, 3993.5], [2883.0, 4895.0], [2931.0, 4724.0], [2915.0, 4780.0], [2963.0, 3535.25], [3043.0, 3770.5], [2947.0, 4663.0], [2995.0, 4522.0], [3011.0, 4451.0], [3027.0, 4364.0], [3059.0, 4280.0], [3091.0, 4155.0], [3075.0, 3731.5], [3171.0, 3777.0], [3187.0, 3716.0], [3107.0, 4085.0], [3139.0, 3907.0], [3155.0, 3833.0], [3235.0, 3580.0], [3267.0, 3517.0], [3283.0, 3478.0], [3219.0, 3616.0], [3251.0, 3541.0], [513.0, 14673.0], [541.0, 14532.0], [525.0, 14619.0], [521.0, 7664.0], [529.0, 14616.0], [537.0, 14540.0], [517.0, 14651.0], [533.0, 14572.0], [569.0, 14420.0], [561.0, 14461.0], [565.0, 14431.0], [573.0, 14411.0], [549.0, 7566.5], [545.0, 5302.333333333333], [553.0, 7598.0], [557.0, 14470.0], [581.0, 14378.0], [605.0, 5275.666666666667], [585.0, 5311.333333333333], [601.0, 14232.0], [577.0, 14394.0], [597.0, 7532.0], [593.0, 14263.0], [633.0, 5307.0], [613.0, 14163.0], [637.0, 14130.0], [625.0, 914.0], [629.0, 14150.0], [609.0, 7515.0], [617.0, 784.0], [621.0, 14153.0], [669.0, 13924.0], [649.0, 7480.0], [653.0, 5400.333333333333], [641.0, 14114.0], [661.0, 13961.0], [657.0, 13985.0], [677.0, 13873.0], [701.0, 13779.0], [673.0, 4249.5], [697.0, 13777.0], [693.0, 13801.0], [689.0, 13815.0], [685.0, 13842.0], [681.0, 13863.0], [721.0, 7395.5], [725.0, 5296.333333333333], [733.0, 13624.0], [729.0, 13637.0], [705.0, 13753.0], [717.0, 13699.0], [713.0, 13727.0], [737.0, 13636.0], [765.0, 13505.0], [749.0, 13579.0], [745.0, 13584.0], [741.0, 7406.5], [761.0, 14551.5], [757.0, 13531.0], [753.0, 13571.0], [773.0, 13500.0], [797.0, 13366.0], [781.0, 7354.0], [777.0, 13480.0], [769.0, 13498.0], [785.0, 13439.0], [793.0, 13369.0], [789.0, 13424.0], [829.0, 13367.0], [825.0, 13389.0], [821.0, 13410.0], [817.0, 14387.0], [801.0, 13341.0], [805.0, 13343.5], [813.0, 13301.0], [809.0, 13327.0], [833.0, 13373.0], [841.0, 9304.666666666666], [837.0, 13341.0], [845.0, 13300.0], [857.0, 13218.0], [853.0, 13285.0], [849.0, 13262.0], [865.0, 7191.0], [869.0, 13160.0], [873.0, 7252.0], [877.0, 13091.0], [881.0, 9132.333333333334], [893.0, 13009.0], [889.0, 13047.0], [885.0, 13059.0], [901.0, 7156.5], [921.0, 7187.0], [905.0, 12976.0], [897.0, 13005.0], [909.0, 12969.0], [925.0, 7108.5], [913.0, 12955.0], [917.0, 12907.0], [929.0, 7109.0], [937.0, 7094.0], [945.0, 7070.0], [949.0, 7088.0], [941.0, 7104.5], [957.0, 12732.0], [953.0, 12778.0], [933.0, 12847.0], [973.0, 4333.0], [989.0, 12603.0], [969.0, 12682.0], [985.0, 12615.0], [961.0, 12703.0], [965.0, 12702.0], [981.0, 12639.0], [977.0, 12659.0], [993.0, 6998.5], [1021.0, 12381.0], [1005.0, 12493.0], [1001.0, 12506.0], [1017.0, 12436.0], [997.0, 12562.0], [1013.0, 12478.0], [1009.0, 12484.0], [1074.0, 12528.0], [1042.0, 5322.0], [1082.0, 12477.0], [1034.0, 12653.0], [1026.0, 12398.0], [1066.0, 12563.5], [1058.0, 12609.0], [1090.0, 12473.0], [1098.0, 12429.0], [1114.0, 12349.0], [1106.0, 12385.0], [1122.0, 7048.0], [1146.0, 12212.0], [1138.0, 12239.0], [1130.0, 12262.0], [1162.0, 12138.0], [1202.0, 6906.0], [1154.0, 12155.0], [1210.0, 6925.0], [1178.0, 5230.333333333334], [1170.0, 12129.0], [1194.0, 12013.0], [1186.0, 12048.0], [1242.0, 6842.5], [1274.0, 11700.0], [1234.0, 11831.0], [1266.0, 11721.0], [1226.0, 11887.0], [1218.0, 11898.0], [1258.0, 11753.0], [1250.0, 11785.0], [1338.0, 11514.0], [1330.0, 11527.0], [1322.0, 11546.0], [1314.0, 11585.0], [1282.0, 11686.0], [1290.0, 11655.0], [1306.0, 11631.0], [1298.0, 11651.0], [1402.0, 11213.0], [1378.0, 6562.0], [1346.0, 11482.0], [1354.0, 11454.0], [1370.0, 11356.0], [1362.0, 11425.5], [1386.0, 6533.5], [1394.0, 11248.0], [1458.0, 10941.0], [1466.0, 3697.8], [1418.0, 11100.0], [1410.0, 11140.0], [1450.0, 11006.0], [1442.0, 11009.0], [1434.0, 11029.0], [1426.0, 11091.0], [1522.0, 10710.0], [1490.0, 10824.5], [1474.0, 10898.0], [1498.0, 10789.0], [1506.0, 6359.0], [1514.0, 4916.333333333334], [1530.0, 10645.0], [1482.0, 10854.0], [1586.0, 10455.0], [1594.0, 10424.0], [1546.0, 10541.0], [1538.0, 10574.0], [1578.0, 10461.0], [1570.0, 10480.0], [1562.0, 10506.0], [1658.0, 10079.0], [1650.0, 10131.0], [1634.0, 10230.0], [1602.0, 10325.0], [1610.0, 10285.0], [1626.0, 10257.0], [1618.0, 10285.0], [1714.0, 9844.0], [1722.0, 4040.0], [1674.0, 10006.0], [1666.0, 10061.0], [1706.0, 9874.0], [1698.0, 9890.0], [1690.0, 9954.0], [1682.0, 9965.0], [1738.0, 9751.0], [1786.0, 9486.0], [1730.0, 9765.0], [1746.0, 5912.0], [1754.0, 9625.0], [1762.0, 9610.0], [1778.0, 9522.0], [1770.0, 9563.0], [1802.0, 9427.0], [1850.0, 9215.0], [1818.0, 5785.0], [1810.0, 9411.0], [1794.0, 9460.0], [1834.0, 2230.0], [1842.0, 9259.0], [1826.0, 9305.0], [1906.0, 8975.0], [1866.0, 6839.333333333333], [1914.0, 8917.0], [1898.0, 8986.0], [1890.0, 9015.0], [1882.0, 9039.0], [1874.0, 9086.0], [1946.0, 8773.0], [1938.0, 4456.666666666666], [1954.0, 8722.0], [1978.0, 8636.0], [1970.0, 8675.0], [1930.0, 8837.0], [1962.0, 8696.0], [1986.0, 8598.0], [1994.0, 8525.0], [2010.0, 8445.0], [2002.0, 8481.0], [2026.0, 8347.0], [2042.0, 8279.0], [2034.0, 8314.0], [2052.0, 5311.0], [2068.0, 8174.0], [2100.0, 7977.0], [2084.0, 8081.0], [2148.0, 7863.0], [2116.0, 7947.0], [2164.0, 7809.0], [2292.0, 7297.0], [2228.0, 3770.0], [2244.0, 7521.0], [2260.0, 7475.0], [2212.0, 7676.0], [2276.0, 7390.0], [2196.0, 7700.0], [2180.0, 7747.0], [2404.0, 6760.0], [2340.0, 7077.0], [2356.0, 6983.0], [2372.0, 3640.75], [2388.0, 6831.0], [2420.0, 6663.0], [2324.0, 7148.0], [2308.0, 7209.0], [2436.0, 6611.0], [2452.0, 2850.0], [2484.0, 6461.0], [2468.0, 6504.0], [2516.0, 6346.0], [2548.0, 6204.0], [2532.0, 6286.0], [2580.0, 6065.0], [2676.0, 5678.0], [2612.0, 3965.6666666666665], [2564.0, 6130.0], [2660.0, 5740.0], [2628.0, 3543.2], [2596.0, 4141.2], [2644.0, 3708.75], [2692.0, 4382.5], [2708.0, 5573.0], [2740.0, 5460.0], [2724.0, 5535.0], [2756.0, 5381.0], [2772.0, 5340.0], [2804.0, 5270.0], [2788.0, 5300.0], [2836.0, 5106.0], [2868.0, 4042.0], [2852.0, 5020.0], [2820.0, 5156.0], [2916.0, 3690.3333333333335], [2884.0, 4897.0], [2900.0, 4843.0], [2932.0, 4729.0], [2964.0, 3886.5], [2948.0, 4662.0], [2996.0, 4492.0], [2980.0, 4542.0], [3012.0, 4444.0], [3028.0, 4366.0], [3060.0, 4267.0], [3044.0, 4311.0], [3092.0, 4142.0], [3076.0, 4217.0], [3188.0, 3721.0], [3108.0, 4077.0], [3124.0, 3762.0], [3140.0, 3909.0], [3156.0, 3833.0], [3252.0, 3451.0], [3204.0, 3667.5], [3284.0, 3409.3333333333335], [3268.0, 3531.0], [3300.0, 3430.0], [2053.0, 8253.0], [2149.0, 7857.0], [2101.0, 7974.0], [2085.0, 8068.0], [2069.0, 8159.0], [2117.0, 7932.0], [2133.0, 7917.5], [2165.0, 7809.0], [2197.0, 5078.0], [2277.0, 4949.5], [2261.0, 7472.0], [2213.0, 7646.0], [2229.0, 7612.0], [2181.0, 7749.0], [2421.0, 4600.5], [2373.0, 6861.0], [2341.0, 7047.0], [2357.0, 6973.0], [2309.0, 7207.0], [2325.0, 7154.0], [2405.0, 6746.0], [2453.0, 3949.5], [2485.0, 6460.0], [2469.0, 6505.0], [2501.0, 6360.5], [2517.0, 6332.0], [2549.0, 6182.0], [2581.0, 6067.0], [2677.0, 5691.0], [2565.0, 6141.0], [2661.0, 5739.0], [2613.0, 4522.5], [2597.0, 6036.0], [2645.0, 3924.3333333333335], [2629.0, 3920.0], [2693.0, 3890.3333333333335], [2805.0, 5231.0], [2725.0, 5544.0], [2741.0, 5452.0], [2757.0, 5375.0], [2773.0, 5334.0], [2789.0, 5308.0], [2709.0, 5583.0], [2821.0, 5157.0], [2837.0, 5107.0], [2869.0, 4959.0], [2853.0, 5029.0], [2885.0, 4895.0], [2901.0, 4848.0], [2933.0, 4718.0], [2917.0, 4781.0], [2949.0, 4658.0], [2965.0, 4614.0], [2997.0, 4493.0], [2981.0, 4575.0], [3013.0, 4440.0], [3029.0, 4365.0], [3061.0, 4265.0], [3093.0, 4141.0], [3077.0, 4208.0], [3173.0, 3776.5], [3189.0, 3718.0], [3109.0, 4063.0], [3125.0, 4000.0], [3141.0, 3287.0], [3157.0, 3831.0], [3269.0, 3455.0], [3237.0, 3558.5], [3285.0, 3493.0], [3301.0, 3428.0], [3221.0, 3617.0], [3205.0, 3671.0], [3253.0, 3532.0], [1075.0, 12529.0], [1083.0, 12477.0], [1043.0, 5263.0], [1035.0, 12639.0], [1027.0, 12402.0], [1051.0, 12604.0], [1067.0, 12551.0], [1059.0, 12598.0], [1147.0, 12211.0], [1139.0, 12226.0], [1131.0, 12277.0], [1123.0, 12278.0], [1091.0, 12465.0], [1099.0, 12416.0], [1115.0, 12345.0], [1107.0, 12378.0], [1203.0, 6902.0], [1211.0, 6937.5], [1155.0, 1722.5], [1163.0, 12117.0], [1179.0, 6935.0], [1171.0, 12105.0], [1187.0, 12035.0], [1195.0, 12004.0], [1243.0, 5135.333333333334], [1275.0, 11691.0], [1235.0, 11841.0], [1267.0, 6701.0], [1227.0, 11876.0], [1219.0, 11903.0], [1259.0, 11744.0], [1251.0, 11792.0], [1331.0, 11527.0], [1339.0, 11506.0], [1291.0, 11680.0], [1283.0, 11680.0], [1323.0, 11556.0], [1315.0, 11578.0], [1307.0, 11635.0], [1299.0, 11648.0], [1395.0, 11239.0], [1403.0, 11204.0], [1379.0, 6564.0], [1387.0, 6534.5], [1355.0, 11437.0], [1347.0, 11481.0], [1371.0, 11354.0], [1363.0, 11423.0], [1411.0, 6478.5], [1467.0, 4148.5], [1435.0, 11026.0], [1427.0, 11085.0], [1451.0, 1865.0], [1459.0, 10940.0], [1419.0, 11104.0], [1443.0, 11017.0], [1523.0, 10708.0], [1507.0, 6358.5], [1515.0, 3736.4], [1531.0, 10636.0], [1475.0, 10891.5], [1483.0, 10841.0], [1499.0, 10791.0], [1491.0, 10824.0], [1547.0, 10527.0], [1587.0, 10463.0], [1539.0, 6295.0], [1579.0, 10463.0], [1571.0, 10488.0], [1563.0, 10490.0], [1555.0, 10506.0], [1659.0, 10079.0], [1651.0, 6094.5], [1643.0, 10198.0], [1635.0, 10230.0], [1603.0, 10325.0], [1611.0, 10297.0], [1627.0, 10241.0], [1619.0, 10276.0], [1723.0, 2120.0], [1715.0, 9821.0], [1707.0, 9870.0], [1699.0, 9887.0], [1667.0, 10055.0], [1675.0, 10003.0], [1691.0, 9941.0], [1683.0, 9973.0], [1779.0, 5855.0], [1771.0, 5871.5], [1739.0, 9710.0], [1787.0, 9484.0], [1763.0, 9606.0], [1755.0, 9621.0], [1747.0, 9658.0], [1819.0, 5785.5], [1811.0, 9376.0], [1795.0, 9460.0], [1835.0, 2229.0], [1851.0, 9199.0], [1843.0, 9267.0], [1803.0, 9419.0], [1827.0, 9296.0], [1867.0, 2249.0], [1907.0, 5623.0], [1859.0, 9167.0], [1883.0, 9042.0], [1891.0, 9013.0], [1915.0, 8919.0], [1899.0, 8997.0], [1955.0, 3914.75], [1971.0, 8674.0], [1963.0, 8696.0], [1923.0, 8870.5], [1931.0, 8835.0], [1947.0, 8759.0], [1939.0, 8785.0], [1987.0, 5469.0], [2035.0, 8314.0], [2011.0, 8445.0], [2003.0, 8480.0], [2019.0, 8402.5], [2027.0, 8348.0], [1995.0, 8524.0], [2150.0, 7868.0], [2086.0, 8063.0], [2102.0, 7981.0], [2118.0, 7954.0], [2134.0, 7913.0], [2166.0, 7805.0], [2070.0, 8152.0], [2054.0, 8252.0], [2182.0, 7749.0], [2198.0, 5078.0], [2230.0, 7589.0], [2278.0, 7390.0], [2262.0, 7461.0], [2214.0, 7646.0], [2246.0, 7528.0], [2294.0, 7288.0], [2422.0, 6660.0], [2406.0, 6731.0], [2374.0, 6864.0], [2390.0, 6820.5], [2326.0, 7137.0], [2310.0, 7222.0], [2358.0, 6979.0], [2342.0, 7044.0], [2486.0, 6438.0], [2438.0, 6617.0], [2470.0, 6503.0], [2454.0, 4712.0], [2502.0, 6360.0], [2518.0, 6324.0], [2534.0, 6272.5], [2662.0, 5725.0], [2678.0, 5683.0], [2582.0, 6055.0], [2566.0, 6123.0], [2614.0, 4488.5], [2598.0, 6035.0], [2646.0, 3009.0], [2630.0, 2941.0], [2694.0, 5624.0], [2710.0, 5578.0], [2742.0, 5452.0], [2726.0, 5535.0], [2758.0, 5375.0], [2774.0, 5326.0], [2806.0, 5246.0], [2790.0, 5307.0], [2838.0, 5100.0], [2822.0, 5161.0], [2934.0, 4711.0], [2870.0, 4947.0], [2854.0, 5013.0], [2886.0, 4894.0], [2902.0, 4834.0], [2918.0, 4783.0], [2950.0, 3928.0], [2998.0, 4488.0], [2966.0, 4612.0], [3014.0, 4426.0], [3030.0, 4363.0], [3062.0, 4266.0], [3046.0, 4310.5], [3094.0, 3693.0], [3078.0, 4204.0], [3174.0, 3767.0], [3110.0, 4050.0], [3126.0, 3985.0], [3142.0, 3901.0], [3158.0, 3834.0], [3190.0, 3706.0], [3238.0, 3548.0], [3222.0, 3610.0], [3254.0, 3518.0], [3286.0, 3474.0], [3302.0, 3443.0], [2103.0, 7981.0], [2087.0, 8063.0], [2135.0, 7909.0], [2167.0, 7802.0], [2151.0, 7857.0], [2071.0, 8148.0], [2055.0, 8255.0], [2183.0, 7752.0], [2199.0, 7714.0], [2231.0, 7601.0], [2279.0, 7380.0], [2263.0, 7461.0], [2215.0, 7659.0], [2247.0, 7513.0], [2295.0, 7285.0], [2327.0, 7128.0], [2343.0, 4814.5], [2359.0, 6960.0], [2311.0, 7195.0], [2375.0, 6854.0], [2391.0, 6806.0], [2423.0, 6658.0], [2407.0, 6730.0], [2439.0, 6608.0], [2455.0, 3990.666666666667], [2487.0, 6437.0], [2471.0, 6492.0], [2503.0, 6367.0], [2519.0, 6325.0], [2551.0, 6183.5], [2535.0, 6263.0], [2583.0, 6053.0], [2567.0, 6149.0], [2663.0, 5722.0], [2679.0, 5684.0], [2615.0, 5924.0], [2647.0, 4397.25], [2631.0, 4419.0], [2791.0, 5288.0], [2807.0, 5224.0], [2759.0, 5365.0], [2775.0, 5323.0], [2695.0, 5617.0], [2711.0, 5575.0], [2743.0, 5452.0], [2727.0, 5547.0], [2823.0, 5154.0], [2839.0, 5101.0], [2871.0, 4950.0], [2855.0, 5006.0], [2903.0, 3992.5], [2887.0, 4892.0], [2935.0, 4705.0], [2919.0, 5783.0], [2951.0, 4661.0], [2967.0, 4609.0], [2999.0, 4486.0], [2983.0, 4569.0], [3015.0, 4421.0], [3031.0, 4357.0], [3063.0, 4261.0], [3047.0, 4308.0], [3095.0, 3689.5], [3191.0, 3700.0], [3079.0, 4200.0], [3175.0, 3766.0], [3111.0, 4050.0], [3127.0, 3985.0], [3143.0, 3914.0], [3159.0, 3836.0], [3303.0, 3418.0], [3239.0, 3578.0], [3271.0, 3509.0], [3287.0, 3465.0], [3207.0, 3658.5], [3255.0, 3536.0], [269.0, 15649.5], [271.0, 15645.0], [259.0, 15683.0], [257.0, 15689.0], [267.0, 15655.0], [265.0, 15650.0], [263.0, 15668.0], [261.0, 15677.0], [287.0, 15572.0], [285.0, 15581.0], [283.0, 15591.0], [279.0, 15592.0], [273.0, 15638.0], [275.0, 15629.0], [277.0, 15606.0], [303.0, 15517.0], [301.0, 15516.0], [299.0, 15520.0], [297.0, 15548.0], [295.0, 15549.0], [291.0, 15571.5], [289.0, 15574.0], [293.0, 15550.0], [319.0, 15440.0], [317.0, 15438.0], [315.0, 15449.0], [313.0, 15456.0], [311.0, 15459.0], [305.0, 15495.0], [307.0, 15511.0], [309.0, 15469.0], [335.0, 15366.0], [333.0, 15372.0], [331.0, 15380.0], [329.0, 15397.0], [327.0, 15402.0], [321.0, 15426.0], [323.0, 15420.0], [325.0, 15416.0], [349.0, 15304.0], [339.0, 15343.0], [337.0, 15357.0], [345.0, 15304.0], [343.0, 15324.0], [341.0, 15343.0], [365.0, 15250.5], [367.0, 15213.0], [355.0, 15273.0], [353.0, 15300.0], [363.0, 15251.0], [361.0, 15260.0], [359.0, 15260.0], [357.0, 15268.0], [383.0, 15164.0], [381.0, 15181.0], [377.0, 15188.0], [371.0, 15199.5], [369.0, 15209.0], [373.0, 15194.0], [387.0, 15147.0], [397.0, 15116.0], [385.0, 15144.0], [395.0, 15113.0], [393.0, 15121.0], [391.0, 15131.0], [389.0, 15157.0], [415.0, 15038.0], [413.0, 15029.0], [409.0, 15050.0], [407.0, 15054.0], [401.0, 15107.0], [403.0, 15092.0], [405.0, 15068.0], [419.0, 15015.0], [431.0, 15010.0], [417.0, 15028.0], [427.0, 15007.0], [425.0, 15017.0], [423.0, 15021.0], [421.0, 15022.0], [435.0, 14978.0], [447.0, 14917.0], [433.0, 14988.0], [443.0, 14937.0], [441.0, 14949.0], [439.0, 14957.0], [437.0, 14964.0], [463.0, 14845.0], [461.0, 14860.0], [459.0, 14869.0], [457.0, 14883.0], [455.0, 14891.0], [451.0, 14893.0], [453.0, 14885.0], [477.0, 498.0], [479.0, 5287.0], [467.0, 14820.0], [465.0, 14829.0], [475.0, 14815.0], [473.0, 14817.0], [469.0, 14816.0], [495.0, 7552.0], [493.0, 465.0], [491.0, 3983.5], [489.0, 7614.0], [485.0, 4062.75], [487.0, 14770.0], [483.0, 5202.666666666667], [481.0, 3351.0], [503.0, 14717.0], [501.0, 14718.0], [497.0, 14729.0], [499.0, 14726.0], [511.0, 7678.0], [509.0, 14690.0], [505.0, 14706.0], [538.0, 14542.0], [518.0, 14637.0], [542.0, 14532.0], [530.0, 14619.0], [534.0, 14575.0], [514.0, 7624.5], [522.0, 5305.333333333333], [570.0, 14417.0], [550.0, 4156.5], [566.0, 5274.333333333333], [562.0, 5332.666666666667], [574.0, 14406.0], [546.0, 7595.5], [554.0, 14506.0], [558.0, 14474.0], [602.0, 14234.0], [606.0, 14212.0], [586.0, 7529.5], [582.0, 14339.0], [578.0, 14395.0], [590.0, 14288.0], [598.0, 14244.0], [594.0, 14273.0], [614.0, 14164.0], [610.0, 7554.0], [634.0, 7523.5], [626.0, 9727.0], [630.0, 5328.666666666667], [638.0, 14134.0], [618.0, 9703.666666666666], [622.0, 3631.6], [654.0, 7456.0], [646.0, 9649.333333333334], [650.0, 5347.666666666667], [642.0, 14100.0], [658.0, 13976.0], [666.0, 13954.5], [662.0, 13956.0], [674.0, 5392.666666666667], [698.0, 13784.0], [686.0, 13841.0], [682.0, 13860.0], [678.0, 13871.0], [694.0, 13793.0], [690.0, 13835.0], [734.0, 13648.0], [722.0, 7428.0], [730.0, 13632.0], [710.0, 13731.0], [706.0, 13750.0], [726.0, 13643.0], [718.0, 13702.0], [714.0, 13722.0], [766.0, 13513.0], [762.0, 7301.0], [758.0, 13532.0], [754.0, 13552.0], [750.0, 13579.0], [738.0, 13616.0], [746.0, 13605.0], [774.0, 13508.0], [778.0, 13471.0], [782.0, 13450.0], [770.0, 13518.0], [798.0, 13351.0], [794.0, 13369.0], [790.0, 13409.0], [786.0, 13421.0], [830.0, 5303.0], [826.0, 7350.0], [822.0, 13393.0], [814.0, 13280.0], [806.0, 13329.0], [802.0, 13353.0], [810.0, 13319.0], [838.0, 13336.0], [846.0, 5239.333333333334], [842.0, 7331.5], [834.0, 13348.0], [858.0, 13238.0], [862.0, 13193.0], [850.0, 13262.0], [854.0, 13236.0], [890.0, 13038.0], [894.0, 13004.0], [874.0, 7182.0], [870.0, 13153.0], [866.0, 13161.0], [882.0, 13075.0], [878.0, 13086.0], [898.0, 12994.0], [910.0, 12971.0], [902.0, 7154.0], [922.0, 7121.5], [926.0, 7181.5], [914.0, 12957.0], [918.0, 12905.0], [930.0, 7111.0], [938.0, 12822.0], [942.0, 7072.0], [958.0, 12736.0], [954.0, 12764.0], [950.0, 12792.0], [962.0, 12708.0], [990.0, 12598.0], [974.0, 7110.5], [966.0, 12699.0], [970.0, 12665.0], [982.0, 7064.5], [986.0, 12613.0], [978.0, 12646.0], [1006.0, 6970.0], [1022.0, 12681.0], [1002.0, 12508.0], [1010.0, 12482.0], [1018.0, 12418.0], [998.0, 12557.0], [994.0, 12583.0], [1014.0, 12467.0], [1076.0, 7098.5], [1044.0, 3835.2], [1084.0, 12475.0], [1036.0, 12627.0], [1028.0, 12388.0], [1052.0, 12630.0], [1060.0, 12598.0], [1100.0, 12414.0], [1148.0, 12196.0], [1092.0, 12463.0], [1140.0, 12225.0], [1132.0, 12279.0], [1124.0, 12278.0], [1116.0, 12343.0], [1108.0, 12375.0], [1204.0, 5234.333333333334], [1156.0, 5941.0], [1188.0, 12027.0], [1180.0, 6934.5], [1172.0, 12097.0], [1212.0, 11916.0], [1164.0, 12115.0], [1196.0, 12006.0], [1244.0, 6731.5], [1268.0, 6702.0], [1236.0, 11832.0], [1276.0, 11692.0], [1228.0, 11872.0], [1220.0, 11896.0], [1260.0, 11728.0], [1252.0, 11788.0], [1340.0, 11507.0], [1332.0, 11527.0], [1324.0, 11543.0], [1316.0, 11579.0], [1308.0, 11629.0], [1284.0, 11687.0], [1292.0, 11670.0], [1372.0, 11346.0], [1380.0, 6557.0], [1364.0, 11405.0], [1388.0, 6534.0], [1404.0, 11196.0], [1396.0, 11242.0], [1356.0, 11430.0], [1420.0, 6464.0], [1468.0, 6401.5], [1412.0, 6466.5], [1436.0, 11024.0], [1428.0, 11072.0], [1452.0, 5519.2], [1460.0, 10934.0], [1444.0, 11015.0], [1484.0, 10843.0], [1508.0, 6355.5], [1492.0, 10813.0], [1500.0, 10791.0], [1476.0, 10894.0], [1516.0, 6353.5], [1532.0, 10637.0], [1524.0, 10709.0], [1596.0, 10413.0], [1588.0, 10464.0], [1580.0, 10469.0], [1572.0, 10487.0], [1564.0, 10484.0], [1540.0, 10565.0], [1548.0, 10527.0], [1556.0, 10501.0], [1652.0, 6097.5], [1660.0, 10074.0], [1620.0, 10280.0], [1612.0, 10305.0], [1628.0, 10248.0], [1644.0, 10183.0], [1636.0, 10215.0], [1724.0, 9783.5], [1716.0, 9831.0], [1708.0, 9875.0], [1700.0, 9886.0], [1692.0, 9911.0], [1668.0, 10049.0], [1676.0, 10003.0], [1684.0, 9965.0], [1740.0, 5914.5], [1788.0, 9482.0], [1756.0, 9613.0], [1732.0, 9757.0], [1748.0, 9651.0], [1772.0, 5870.5], [1780.0, 9508.0], [1764.0, 9605.0], [1852.0, 9197.0], [1828.0, 4580.333333333334], [1844.0, 9246.0], [1804.0, 9417.0], [1796.0, 9462.0], [1836.0, 9288.333333333334], [1820.0, 9354.0], [1812.0, 9372.0], [1860.0, 9168.0], [1868.0, 9126.5], [1884.0, 9033.0], [1876.0, 9072.5], [1916.0, 8917.0], [1908.0, 8956.0], [1900.0, 8993.0], [1892.0, 9015.0], [1924.0, 8862.0], [1948.0, 4448.333333333334], [1932.0, 8836.0], [1980.0, 8632.5], [1972.0, 8675.0], [1956.0, 8721.0], [1940.0, 8778.0], [1988.0, 8582.0], [1996.0, 8519.0], [2012.0, 8442.0], [2004.0, 8473.0], [2020.0, 8401.0], [2028.0, 8339.0], [2044.0, 8261.0], [2036.0, 8314.0], [2152.0, 7863.0], [2056.0, 8258.0], [2168.0, 7802.0], [2072.0, 8149.0], [2104.0, 7961.0], [2088.0, 8049.0], [2136.0, 2421.0], [2120.0, 7932.5], [2280.0, 7372.0], [2248.0, 7514.0], [2264.0, 7458.0], [2216.0, 7648.0], [2296.0, 7304.0], [2200.0, 7705.0], [2184.0, 7741.0], [2232.0, 7582.0], [2408.0, 6723.0], [2360.0, 6947.0], [2344.0, 4045.0], [2392.0, 6797.0], [2376.0, 6853.0], [2424.0, 4600.0], [2328.0, 7121.0], [2312.0, 7208.0], [2456.0, 6522.0], [2552.0, 4506.5], [2440.0, 6604.0], [2488.0, 6433.0], [2472.0, 6490.0], [2504.0, 6359.0], [2520.0, 6319.0], [2536.0, 6265.0], [2568.0, 6118.0], [2584.0, 6049.0], [2616.0, 3973.6666666666665], [2664.0, 3560.4], [2680.0, 5684.0], [2600.0, 6040.0], [2632.0, 3699.25], [2648.0, 4383.0], [2696.0, 5610.0], [2712.0, 5578.0], [2744.0, 5452.0], [2728.0, 5539.0], [2808.0, 5222.0], [2792.0, 5289.0], [2776.0, 5309.0], [2872.0, 4937.0], [2856.0, 4999.0], [2840.0, 5077.0], [2888.0, 4881.0], [2904.0, 4828.0], [2936.0, 4690.0], [2920.0, 4771.0], [3000.0, 4472.0], [2968.0, 3884.0], [2984.0, 4571.0], [2952.0, 4651.0], [3016.0, 4419.0], [3064.0, 4269.0], [3048.0, 4301.0], [3096.0, 3695.0], [3080.0, 4196.0], [3176.0, 3768.0], [3112.0, 4041.0], [3144.0, 3900.0], [3160.0, 3820.0], [3192.0, 3696.0], [3208.0, 3650.0], [3240.0, 3452.0], [3224.0, 3606.0], [3256.0, 3500.0], [3272.0, 3508.0], [3288.0, 3469.0], [3304.0, 3418.0], [2057.0, 8240.0], [2169.0, 7804.0], [2089.0, 8039.0], [2073.0, 8136.0], [2121.0, 5161.5], [2137.0, 7912.5], [2153.0, 7855.0], [2249.0, 7509.0], [2201.0, 7694.0], [2265.0, 7456.0], [2217.0, 7655.0], [2185.0, 7725.0], [2233.0, 7587.0], [2297.0, 7297.0], [2281.0, 7358.0], [2377.0, 6843.0], [2393.0, 6797.0], [2345.0, 2589.0], [2313.0, 7194.0], [2329.0, 7124.0], [2361.0, 6947.0], [2425.0, 6649.0], [2441.0, 6602.0], [2457.0, 3390.6], [2489.0, 6433.0], [2473.0, 6491.0], [2505.0, 6353.0], [2521.0, 6333.0], [2553.0, 6150.0], [2537.0, 6274.0], [2585.0, 6065.0], [2633.0, 4455.5], [2569.0, 6099.0], [2617.0, 5904.0], [2665.0, 5724.0], [2681.0, 5690.0], [2601.0, 6032.0], [2649.0, 4382.0], [2745.0, 5445.0], [2729.0, 5533.0], [2761.0, 4588.666666666667], [2777.0, 5322.0], [2809.0, 4163.0], [2793.0, 5279.0], [2713.0, 5524.0], [2873.0, 4949.0], [2841.0, 5057.0], [2857.0, 5011.0], [2889.0, 4881.0], [2937.0, 4697.0], [2921.0, 4773.0], [2905.0, 4835.0], [3001.0, 4467.0], [2969.0, 3890.5], [2985.0, 4548.0], [3017.0, 4416.0], [3033.0, 4340.5], [3065.0, 4261.0], [3049.0, 4310.0], [3097.0, 4127.0], [3081.0, 4188.0], [3177.0, 3759.0], [3113.0, 4038.0], [3129.0, 3970.0], [3145.0, 3916.0], [3161.0, 3812.0], [3193.0, 3697.0], [3225.0, 3604.0], [3305.0, 3410.0], [3241.0, 3568.0], [3289.0, 3469.0], [3209.0, 3653.0], [3257.0, 3496.0], [1077.0, 5346.666666666666], [1045.0, 3016.375], [1085.0, 12473.0], [1029.0, 12387.0], [1037.0, 12640.0], [1069.0, 12545.0], [1061.0, 12579.0], [1141.0, 12217.0], [1149.0, 12184.0], [1101.0, 12412.0], [1093.0, 12459.0], [1125.0, 12275.0], [1117.0, 12334.0], [1109.0, 12373.0], [1157.0, 7000.5], [1181.0, 6929.0], [1213.0, 11895.0], [1205.0, 11958.0], [1165.0, 12132.0], [1197.0, 11982.0], [1189.0, 12021.0], [1245.0, 3801.6], [1277.0, 11689.0], [1237.0, 11829.0], [1253.0, 5041.333333333334], [1269.0, 1988.0], [1229.0, 11874.0], [1221.0, 11892.0], [1261.0, 11730.0], [1285.0, 1697.5], [1341.0, 11512.0], [1301.0, 11637.5], [1309.0, 11628.0], [1325.0, 4992.666666666666], [1333.0, 11523.0], [1293.0, 11642.0], [1317.0, 11585.0], [1405.0, 11190.0], [1397.0, 11238.0], [1381.0, 6549.5], [1357.0, 11430.0], [1389.0, 11263.0], [1373.0, 11339.0], [1349.0, 11476.5], [1469.0, 10913.0], [1461.0, 10935.0], [1453.0, 10976.0], [1445.0, 11013.0], [1437.0, 11023.0], [1413.0, 11119.0], [1421.0, 11109.0], [1429.0, 11065.0], [1525.0, 10660.0], [1533.0, 10628.0], [1509.0, 6345.5], [1517.0, 6342.5], [1485.0, 10843.0], [1477.0, 10884.0], [1501.0, 10782.0], [1493.0, 10812.0], [1597.0, 10415.0], [1589.0, 10460.0], [1573.0, 10477.0], [1565.0, 10492.0], [1541.0, 10566.0], [1549.0, 10529.0], [1557.0, 10507.0], [1653.0, 10119.0], [1661.0, 10065.0], [1613.0, 10284.0], [1605.0, 10312.5], [1645.0, 10163.0], [1637.0, 10220.0], [1629.0, 10248.0], [1621.0, 10270.0], [1709.0, 5975.5], [1677.0, 9989.0], [1669.0, 10033.0], [1725.0, 9772.0], [1693.0, 9909.0], [1685.0, 9974.0], [1741.0, 9698.0], [1749.0, 9644.0], [1757.0, 9613.0], [1733.0, 9760.0], [1789.0, 9478.0], [1781.0, 9510.0], [1773.0, 9548.0], [1765.0, 9606.0], [1853.0, 5719.5], [1829.0, 5763.0], [1845.0, 9244.0], [1805.0, 9416.0], [1797.0, 9449.0], [1837.0, 9273.0], [1821.0, 9353.0], [1813.0, 9379.0], [1885.0, 9044.0], [1877.0, 9074.0], [1861.0, 9157.0], [1917.0, 8906.0], [1909.0, 8957.0], [1869.0, 9126.0], [1901.0, 8989.0], [1893.0, 9018.0], [1933.0, 8829.0], [1941.0, 8776.0], [1949.0, 5522.0], [1925.0, 8855.0], [1981.0, 8624.0], [1973.0, 8665.0], [1965.0, 8686.0], [1957.0, 8719.0], [2013.0, 8436.0], [2005.0, 8463.0], [2021.0, 8389.0], [2045.0, 8262.0], [2037.0, 8315.0], [1997.0, 8512.0], [1989.0, 8577.0], [2029.0, 8337.0], [2106.0, 7958.5], [2090.0, 8038.0], [2122.0, 5175.5], [2170.0, 7800.0], [2154.0, 7832.0], [2074.0, 8130.0], [2058.0, 8234.0], [2138.0, 7914.0], [2202.0, 7690.0], [2234.0, 7567.0], [2298.0, 4906.0], [2266.0, 7445.0], [2218.0, 4199.0], [2250.0, 7504.0], [2282.0, 7362.0], [2426.0, 6650.0], [2394.0, 6798.0], [2410.0, 5348.666666666667], [2314.0, 7189.0], [2362.0, 6949.0], [2346.0, 7025.0], [2490.0, 6431.0], [2442.0, 4581.0], [2474.0, 6485.0], [2458.0, 4543.5], [2506.0, 6348.0], [2554.0, 6151.0], [2538.0, 6261.0], [2682.0, 5689.0], [2634.0, 3881.6666666666665], [2666.0, 5743.0], [2586.0, 6043.0], [2570.0, 6095.0], [2618.0, 3989.3333333333335], [2602.0, 6020.0], [2650.0, 3560.4], [2698.0, 5598.0], [2714.0, 5525.0], [2730.0, 5529.0], [2810.0, 3087.0], [2762.0, 5341.0], [2778.0, 5306.0], [2794.0, 5285.0], [2826.0, 5152.0], [2842.0, 5055.0], [2874.0, 4945.0], [2858.0, 4992.0], [2890.0, 4882.0], [2906.0, 4831.0], [2938.0, 4691.0], [2922.0, 4765.0], [2970.0, 3183.0], [3002.0, 4470.0], [2986.0, 4556.0], [2954.0, 4661.0], [3018.0, 4417.0], [3034.0, 4327.0], [3066.0, 4255.0], [3050.0, 4303.0], [3098.0, 3688.5], [3082.0, 4181.0], [3178.0, 3754.0], [3114.0, 4037.0], [3130.0, 3945.0], [3146.0, 3910.0], [3162.0, 3813.0], [3194.0, 3688.0], [3210.0, 3653.0], [3226.0, 3599.0], [3258.0, 3483.0], [3274.0, 3521.0], [3290.0, 3480.0], [3306.0, 3407.0], [2155.0, 7832.0], [2107.0, 7992.0], [2091.0, 8048.0], [2123.0, 7919.0], [2139.0, 7899.0], [2171.0, 7796.0], [2075.0, 8117.0], [2059.0, 8220.0], [2283.0, 7342.0], [2299.0, 7267.0], [2203.0, 5068.5], [2187.0, 7734.0], [2235.0, 7568.0], [2267.0, 4972.0], [2219.0, 4204.666666666667], [2251.0, 7502.0], [2315.0, 7182.0], [2347.0, 7024.0], [2331.0, 7120.5], [2363.0, 6934.0], [2379.0, 6841.0], [2395.0, 6795.0], [2427.0, 6648.0], [2411.0, 6713.0], [2443.0, 6603.0], [2459.0, 3374.8], [2491.0, 6430.0], [2475.0, 6483.0], [2507.0, 6352.0], [2523.0, 6310.0], [2555.0, 6148.0], [2539.0, 6267.0], [2587.0, 6043.0], [2635.0, 3550.4], [2571.0, 6108.0], [2667.0, 5744.0], [2619.0, 4485.0], [2603.0, 4480.0], [2651.0, 3012.0], [2811.0, 5214.5], [2763.0, 5345.0], [2795.0, 5282.0], [2699.0, 5600.0], [2715.0, 5526.0], [2747.0, 5434.5], [2731.0, 5523.0], [2779.0, 5312.0], [2923.0, 4764.0], [2827.0, 3794.3333333333335], [2939.0, 4690.0], [2843.0, 5041.0], [2875.0, 4940.0], [2859.0, 4992.0], [2907.0, 4809.0], [2891.0, 4866.0], [3003.0, 4479.0], [2955.0, 4644.0], [2987.0, 4522.0], [2971.0, 4600.5], [3019.0, 3607.3333333333335], [3035.0, 4327.0], [3067.0, 4255.0], [3099.0, 4129.0], [3083.0, 4172.0], [3179.0, 3746.0], [3115.0, 4041.0], [3131.0, 3940.0], [3147.0, 3897.0], [3163.0, 3804.0], [3195.0, 3499.5], [3227.0, 3597.0], [3307.0, 3413.0], [3243.0, 3549.0], [3275.0, 3494.0], [3291.0, 3473.0], [3211.0, 3648.0], [3259.0, 3538.0], [515.0, 7657.0], [539.0, 7628.0], [523.0, 4116.25], [527.0, 14617.0], [543.0, 14528.0], [531.0, 14604.0], [519.0, 14640.0], [535.0, 14550.0], [551.0, 7554.5], [547.0, 7639.0], [563.0, 7594.0], [567.0, 14421.0], [575.0, 14409.0], [571.0, 14406.0], [559.0, 7629.0], [555.0, 14508.0], [583.0, 5271.0], [579.0, 5296.333333333333], [603.0, 14226.0], [587.0, 7525.0], [591.0, 14281.0], [595.0, 7509.5], [607.0, 14204.0], [615.0, 14160.0], [611.0, 5295.0], [639.0, 7565.5], [635.0, 7593.5], [627.0, 14148.0], [631.0, 5337.0], [619.0, 7471.5], [623.0, 4161.25], [667.0, 13934.0], [651.0, 7558.5], [671.0, 9658.0], [647.0, 14016.0], [643.0, 14103.0], [655.0, 13994.0], [663.0, 13952.0], [659.0, 13972.0], [679.0, 13869.0], [675.0, 13884.0], [703.0, 13765.5], [699.0, 13786.0], [691.0, 13806.0], [687.0, 13827.0], [683.0, 13852.0], [735.0, 13632.0], [723.0, 7421.0], [731.0, 13624.0], [711.0, 13729.0], [707.0, 13752.0], [727.0, 13646.0], [719.0, 13688.0], [715.0, 13724.0], [739.0, 7402.5], [751.0, 13565.0], [767.0, 13494.0], [743.0, 13591.5], [759.0, 13541.0], [755.0, 13552.0], [775.0, 13495.0], [779.0, 4248.0], [783.0, 1134.0], [771.0, 13492.0], [799.0, 13348.0], [787.0, 13420.0], [795.0, 13366.0], [791.0, 13400.0], [831.0, 13362.0], [827.0, 13399.0], [823.0, 13393.0], [819.0, 13349.5], [815.0, 13416.0], [803.0, 13347.0], [807.0, 13331.0], [811.0, 13310.0], [839.0, 7257.0], [859.0, 13213.0], [847.0, 13301.0], [835.0, 13351.0], [843.0, 5292.666666666666], [863.0, 13186.0], [855.0, 13228.0], [851.0, 13253.0], [891.0, 13034.0], [867.0, 5281.666666666666], [883.0, 13070.0], [895.0, 7141.5], [871.0, 13140.0], [887.0, 13047.5], [899.0, 7147.0], [903.0, 12987.0], [907.0, 1332.0], [911.0, 12974.0], [927.0, 12880.0], [915.0, 12920.0], [923.0, 12894.0], [919.0, 12904.0], [939.0, 7099.5], [947.0, 12789.0], [959.0, 12719.0], [955.0, 12751.0], [935.0, 12850.0], [931.0, 12858.0], [987.0, 12609.0], [971.0, 5251.666666666666], [991.0, 12589.0], [975.0, 12658.0], [963.0, 12708.0], [967.0, 12680.0], [983.0, 12629.0], [979.0, 12647.0], [1007.0, 5178.666666666666], [1003.0, 12506.0], [1019.0, 7014.0], [1023.0, 12410.0], [999.0, 12549.0], [995.0, 12578.0], [1015.0, 12420.0], [1011.0, 12480.0], [1078.0, 3094.625], [1086.0, 5325.0], [1046.0, 12650.0], [1038.0, 12641.0], [1030.0, 12667.0], [1054.0, 12605.0], [1070.0, 12543.0], [1062.0, 12554.0], [1102.0, 7104.0], [1150.0, 12175.0], [1118.0, 12322.0], [1094.0, 12466.0], [1110.0, 12370.0], [1142.0, 12213.0], [1134.0, 12263.0], [1126.0, 12280.0], [1166.0, 12119.0], [1214.0, 11893.0], [1158.0, 1771.0], [1198.0, 1896.0], [1182.0, 6924.0], [1174.0, 12082.0], [1206.0, 11951.0], [1190.0, 12021.0], [1238.0, 11822.0], [1246.0, 4198.5], [1278.0, 11705.0], [1270.0, 11736.0], [1230.0, 11869.0], [1262.0, 11738.0], [1342.0, 11502.0], [1334.0, 11524.0], [1326.0, 11547.0], [1318.0, 11567.0], [1310.0, 11609.0], [1286.0, 11677.0], [1294.0, 11643.0], [1302.0, 11630.0], [1374.0, 6554.5], [1358.0, 11424.0], [1366.0, 11395.0], [1406.0, 11188.0], [1398.0, 11232.0], [1390.0, 11268.0], [1382.0, 11316.0], [1470.0, 10905.0], [1446.0, 1844.0], [1462.0, 10933.0], [1422.0, 11095.0], [1414.0, 11120.0], [1454.0, 10952.0], [1438.0, 11042.0], [1430.0, 11073.0], [1478.0, 6397.0], [1534.0, 10634.0], [1494.0, 6369.5], [1502.0, 10786.0], [1510.0, 6363.0], [1518.0, 10717.0], [1526.0, 10660.0], [1486.0, 10846.0], [1590.0, 6259.0], [1550.0, 10524.0], [1582.0, 10468.0], [1574.0, 10465.0], [1566.0, 10483.0], [1558.0, 10521.0], [1662.0, 10070.0], [1654.0, 10118.0], [1646.0, 10179.0], [1638.0, 10204.0], [1630.0, 10245.0], [1606.0, 10308.0], [1614.0, 10273.0], [1622.0, 10268.0], [1726.0, 9787.0], [1710.0, 5976.0], [1718.0, 9816.5], [1678.0, 9997.0], [1670.0, 10038.0], [1702.0, 9875.5], [1686.0, 9973.0], [1734.0, 9768.0], [1758.0, 5899.5], [1742.0, 5918.5], [1750.0, 9647.0], [1790.0, 9469.0], [1766.0, 9607.0], [1782.0, 9508.0], [1774.0, 9545.0], [1806.0, 9421.0], [1830.0, 5759.0], [1814.0, 9358.0], [1822.0, 9356.0], [1798.0, 9450.0], [1854.0, 9213.0], [1846.0, 9231.0], [1838.0, 9264.0], [1910.0, 8942.0], [1870.0, 9125.0], [1902.0, 8977.0], [1894.0, 8980.0], [1886.0, 9027.0], [1862.0, 9143.0], [1878.0, 9071.0], [1950.0, 2295.0], [1982.0, 8620.0], [1942.0, 8773.0], [1958.0, 4453.333333333334], [1974.0, 8657.0], [1934.0, 8828.0], [1926.0, 8853.0], [1966.0, 8683.0], [1990.0, 8549.0], [1998.0, 8506.0], [2014.0, 8424.0], [2006.0, 8457.0], [2022.0, 5369.5], [2030.0, 8343.0], [2038.0, 8308.0], [2060.0, 8220.0], [2076.0, 8104.0], [2108.0, 7943.0], [2092.0, 8029.0], [2124.0, 7925.0], [2140.0, 7899.0], [2172.0, 7792.0], [2156.0, 7832.0], [2284.0, 7342.0], [2252.0, 7498.0], [2268.0, 7448.0], [2220.0, 5068.5], [2300.0, 7272.0], [2236.0, 7567.0], [2204.0, 7670.0], [2188.0, 7725.0], [2332.0, 7092.0], [2348.0, 7020.0], [2380.0, 6844.0], [2428.0, 6644.0], [2316.0, 7179.0], [2364.0, 6921.0], [2460.0, 6527.0], [2492.0, 6423.0], [2476.0, 6482.0], [2556.0, 6138.0], [2524.0, 6311.0], [2540.0, 6250.0], [2572.0, 6083.0], [2588.0, 4444.5], [2620.0, 3047.0], [2684.0, 4803.333333333333], [2668.0, 5700.0], [2652.0, 4889.0], [2636.0, 3521.8], [2716.0, 5521.0], [2700.0, 5609.0], [2796.0, 5269.0], [2748.0, 5428.0], [2732.0, 5528.0], [2812.0, 5194.0], [2764.0, 5345.0], [2780.0, 5315.0], [2828.0, 4137.5], [2860.0, 4996.0], [2844.0, 5046.0], [2940.0, 4691.0], [2892.0, 4865.0], [2908.0, 4810.0], [2924.0, 4755.0], [2972.0, 3884.5], [2956.0, 4645.0], [3004.0, 4476.0], [2988.0, 4528.0], [3020.0, 4396.0], [3036.0, 4327.0], [3068.0, 4248.0], [3052.0, 4304.5], [3100.0, 4131.0], [3084.0, 4172.0], [3180.0, 3753.0], [3116.0, 3651.0], [3132.0, 3951.0], [3196.0, 3501.0], [3148.0, 3904.0], [3164.0, 3805.0], [3228.0, 3462.5], [3308.0, 3401.0], [3244.0, 3409.0], [3212.0, 3643.0], [3260.0, 3489.0], [3276.0, 3570.0], [3292.0, 3484.0], [2109.0, 7946.0], [2061.0, 8210.0], [2093.0, 8032.0], [2077.0, 8107.0], [2125.0, 7944.0], [2141.0, 7909.0], [2173.0, 7788.0], [2205.0, 7696.0], [2253.0, 7503.0], [2269.0, 7442.0], [2221.0, 7636.0], [2237.0, 7569.0], [2189.0, 7726.0], [2301.0, 7267.0], [2285.0, 7338.0], [2365.0, 6914.0], [2397.0, 6793.5], [2349.0, 7017.0], [2317.0, 7180.0], [2333.0, 7094.0], [2429.0, 6633.0], [2413.0, 6716.0], [2445.0, 6582.5], [2541.0, 6250.0], [2493.0, 6423.0], [2477.0, 6484.0], [2461.0, 3893.333333333333], [2557.0, 6143.0], [2509.0, 6348.0], [2525.0, 6308.0], [2573.0, 6083.0], [2621.0, 4921.0], [2589.0, 6052.0], [2605.0, 6029.0], [2653.0, 3922.6666666666665], [2637.0, 3501.4], [2685.0, 5684.0], [2797.0, 5275.0], [2733.0, 5523.0], [2749.0, 5423.0], [2765.0, 5341.0], [2781.0, 5299.0], [2813.0, 5218.0], [2717.0, 5529.0], [2701.0, 5582.0], [2829.0, 5138.0], [2845.0, 4071.0], [2877.0, 4929.0], [2861.0, 4997.0], [2941.0, 4690.0], [2893.0, 4864.0], [2909.0, 4805.0], [2957.0, 4649.0], [2973.0, 3887.0], [3005.0, 4468.0], [2989.0, 4516.0], [3021.0, 4391.0], [3037.0, 4329.0], [3069.0, 4245.0], [3053.0, 4303.0], [3101.0, 4127.0], [3085.0, 4171.0], [3181.0, 3748.0], [3117.0, 3651.5], [3133.0, 3953.0], [3149.0, 3868.0], [3165.0, 3796.0], [3197.0, 3682.0], [3309.0, 3413.0], [3245.0, 3343.0], [3277.0, 3502.0], [3293.0, 3469.0], [3229.0, 3592.0], [3213.0, 3645.0], [3261.0, 3528.0], [1047.0, 7171.0], [1087.0, 12470.0], [1079.0, 12493.0], [1055.0, 12598.0], [1031.0, 12386.0], [1063.0, 12569.0], [1151.0, 12170.0], [1143.0, 12208.0], [1135.0, 12255.0], [1127.0, 12288.0], [1119.0, 12320.0], [1095.0, 12461.0], [1103.0, 12413.0], [1111.0, 12357.0], [1159.0, 12143.5], [1183.0, 5258.333333333334], [1167.0, 12108.0], [1175.0, 12092.0], [1215.0, 11894.0], [1191.0, 12012.0], [1207.0, 11945.0], [1199.0, 11973.5], [1231.0, 11852.0], [1239.0, 11821.0], [1247.0, 5037.666666666666], [1223.0, 11891.0], [1279.0, 11704.0], [1271.0, 11716.5], [1263.0, 11741.0], [1255.0, 11773.5], [1343.0, 11496.0], [1319.0, 6640.5], [1335.0, 11517.0], [1295.0, 11648.0], [1287.0, 11686.0], [1327.0, 11556.0], [1311.0, 11625.0], [1303.0, 11648.0], [1359.0, 11423.0], [1407.0, 11183.0], [1351.0, 11466.5], [1391.0, 11257.0], [1383.0, 11302.0], [1375.0, 11340.0], [1367.0, 11384.0], [1439.0, 6434.5], [1431.0, 11074.0], [1455.0, 6412.5], [1471.0, 10914.0], [1463.0, 10926.0], [1423.0, 11096.0], [1415.0, 11117.0], [1447.0, 11010.5], [1511.0, 4170.25], [1535.0, 10628.0], [1519.0, 10720.0], [1503.0, 10781.0], [1479.0, 10888.0], [1487.0, 10836.0], [1495.0, 10805.0], [1551.0, 10523.0], [1543.0, 10564.5], [1591.0, 10465.0], [1583.0, 10468.0], [1575.0, 10471.0], [1567.0, 10482.0], [1559.0, 10503.0], [1663.0, 10070.0], [1655.0, 10092.0], [1647.0, 10166.0], [1639.0, 10205.0], [1631.0, 10244.0], [1607.0, 10295.0], [1615.0, 10290.0], [1623.0, 10263.0], [1727.0, 9773.0], [1711.0, 5980.0], [1719.0, 5970.5], [1703.0, 9872.0], [1695.0, 9905.0], [1671.0, 10039.0], [1679.0, 9986.0], [1687.0, 9952.0], [1743.0, 9693.0], [1791.0, 9470.0], [1735.0, 9755.0], [1783.0, 9507.0], [1775.0, 9539.0], [1767.0, 9580.0], [1759.0, 9614.0], [1751.0, 9643.0], [1799.0, 5820.5], [1855.0, 9187.0], [1815.0, 9364.0], [1823.0, 9337.0], [1847.0, 9235.0], [1807.0, 9412.0], [1839.0, 9277.0], [1831.0, 9312.0], [1887.0, 9027.0], [1863.0, 5702.0], [1879.0, 9066.0], [1871.0, 5684.5], [1919.0, 8908.5], [1911.0, 8943.0], [1903.0, 8971.0], [1983.0, 8605.0], [1975.0, 8656.0], [1967.0, 8684.0], [1959.0, 8707.0], [1951.0, 8745.0], [1927.0, 8845.0], [1935.0, 8831.0], [1943.0, 8772.0], [2039.0, 8307.0], [2007.0, 8458.0], [2023.0, 5368.0], [1999.0, 8497.0], [1991.0, 8553.0], [2031.0, 8337.0], [2158.0, 7821.5], [2094.0, 8023.0], [2126.0, 7926.0], [2078.0, 8103.0], [2062.0, 8208.0], [2110.0, 7942.0], [2142.0, 7894.0], [2190.0, 7709.0], [2206.0, 7701.0], [2238.0, 7558.0], [2254.0, 5010.0], [2270.0, 7436.0], [2222.0, 7632.0], [2302.0, 7278.0], [2286.0, 7348.0], [2382.0, 6842.0], [2398.0, 6779.0], [2430.0, 6627.0], [2414.0, 6715.0], [2318.0, 7169.0], [2366.0, 6913.0], [2350.0, 7037.0], [2446.0, 6572.0], [2542.0, 6234.0], [2494.0, 6413.0], [2478.0, 6472.0], [2462.0, 6515.0], [2558.0, 6143.0], [2510.0, 6354.0], [2526.0, 6305.0], [2686.0, 5681.0], [2670.0, 5712.0], [2574.0, 6109.0], [2606.0, 4511.0], [2638.0, 3902.3333333333335], [2654.0, 3933.6666666666665], [2702.0, 3029.0], [2718.0, 5532.0], [2750.0, 5413.0], [2734.0, 5520.0], [2814.0, 5205.0], [2766.0, 5343.0], [2782.0, 5305.0], [2798.0, 5268.0], [2830.0, 5130.0], [2846.0, 4089.0], [2878.0, 4932.0], [2862.0, 4995.0], [2894.0, 4856.0], [2910.0, 4794.0], [2942.0, 4685.0], [2926.0, 4758.0], [3006.0, 4465.0], [2958.0, 4637.0], [2990.0, 4513.0], [3070.0, 4236.0], [3022.0, 4384.0], [3038.0, 4326.0], [3054.0, 4297.0], [2974.0, 4584.0], [3182.0, 3740.0], [3086.0, 4164.0], [3102.0, 4126.0], [3118.0, 3647.5], [3134.0, 3932.0], [3150.0, 3881.0], [3262.0, 3442.0], [3214.0, 3626.0], [3246.0, 3557.0], [3278.0, 3497.0], [3294.0, 3466.0], [3310.0, 3412.0], [3230.0, 3582.0], [2111.0, 5692.5], [2159.0, 7829.0], [2095.0, 8023.0], [2175.0, 7766.5], [2127.0, 7924.0], [2143.0, 7893.0], [2079.0, 8101.0], [2063.0, 8202.0], [2191.0, 7720.0], [2207.0, 7682.0], [2239.0, 7563.0], [2287.0, 7331.0], [2255.0, 5009.5], [2271.0, 7431.0], [2223.0, 7625.0], [2303.0, 7268.0], [2367.0, 6907.0], [2351.0, 7003.0], [2319.0, 7176.0], [2335.0, 7101.5], [2383.0, 6839.0], [2399.0, 6772.0], [2415.0, 6679.0], [2495.0, 6411.0], [2447.0, 6580.0], [2479.0, 6472.0], [2559.0, 6135.0], [2511.0, 6351.0], [2527.0, 6291.0], [2543.0, 6229.0], [2463.0, 6520.0], [2575.0, 6106.0], [2623.0, 4457.0], [2591.0, 6040.0], [2607.0, 4517.5], [2655.0, 4373.0], [2639.0, 4339.0], [2687.0, 5681.0], [2815.0, 5204.0], [2767.0, 5344.0], [2799.0, 5266.0], [2751.0, 5413.0], [2719.0, 5532.0], [2735.0, 5517.0], [2783.0, 5310.0], [2847.0, 4081.0], [2831.0, 5120.0], [2879.0, 4922.0], [2863.0, 4988.0], [2911.0, 4792.0], [2943.0, 3927.5], [2895.0, 4856.0], [2927.0, 4764.0], [3007.0, 4462.0], [2959.0, 3901.0], [2991.0, 4519.0], [2975.0, 3886.0], [3023.0, 4383.0], [3039.0, 4321.0], [3055.0, 4283.0], [3103.0, 4135.0], [3087.0, 4167.0], [3183.0, 3736.0], [3119.0, 4019.0], [3135.0, 3930.0], [3151.0, 3863.0], [3167.0, 3797.0], [3199.0, 3689.5], [3311.0, 3403.0], [3247.0, 3443.0], [3279.0, 3523.0], [3295.0, 3463.0], [3231.0, 3585.0], [3215.0, 3637.0], [3263.0, 3525.0], [1.0, 17438.0]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}, {"data": [[1644.9442499999966, 8591.934749999999]], "isOverall": false, "label": "Microservice-based client with caching-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3312.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 12733.333333333334, "minX": 1.67230038E12, "maxY": 1.75992E7, "series": [{"data": [[1.67230038E12, 1.75992E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.67230038E12, 12733.333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67230038E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8591.934749999999, "minX": 1.67230038E12, "maxY": 8591.934749999999, "series": [{"data": [[1.67230038E12, 8591.934749999999]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67230038E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8547.876999999997, "minX": 1.67230038E12, "maxY": 8547.876999999997, "series": [{"data": [[1.67230038E12, 8547.876999999997]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67230038E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 24.75450000000001, "minX": 1.67230038E12, "maxY": 24.75450000000001, "series": [{"data": [[1.67230038E12, 24.75450000000001]], "isOverall": false, "label": "Microservice-based client with caching", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67230038E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 312.0, "minX": 1.67230038E12, "maxY": 17657.0, "series": [{"data": [[1.67230038E12, 17657.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.67230038E12, 15107.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.67230038E12, 16622.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.67230038E12, 15911.9]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.67230038E12, 312.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.67230038E12, 8496.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67230038E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 494.0, "minX": 66.0, "maxY": 16647.0, "series": [{"data": [[144.0, 2599.5], [173.0, 7148.0], [179.0, 8792.0], [188.0, 1152.0], [190.0, 12740.0], [187.0, 13511.0], [192.0, 1899.0], [197.0, 3401.0], [196.0, 8379.5], [194.0, 11998.5], [200.0, 4039.5], [201.0, 8011.0], [206.0, 12154.5], [207.0, 15192.0], [204.0, 16022.5], [208.0, 7142.5], [66.0, 494.0], [69.0, 16647.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 208.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 421.5, "minX": 66.0, "maxY": 16611.0, "series": [{"data": [[144.0, 2548.5], [173.0, 7083.0], [179.0, 8761.0], [188.0, 1122.5], [190.0, 12720.5], [187.0, 13453.0], [192.0, 1874.0], [197.0, 3332.0], [196.0, 8255.5], [194.0, 11974.0], [200.0, 4008.5], [201.0, 7878.5], [206.0, 12110.5], [207.0, 15122.0], [204.0, 16002.0], [208.0, 7110.0], [66.0, 421.5], [69.0, 16611.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 208.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.67230038E12, "maxY": 66.66666666666667, "series": [{"data": [[1.67230038E12, 66.66666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67230038E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.67230038E12, "maxY": 66.66666666666667, "series": [{"data": [[1.67230038E12, 66.66666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.67230038E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.67230038E12, "maxY": 66.66666666666667, "series": [{"data": [[1.67230038E12, 66.66666666666667]], "isOverall": false, "label": "Microservice-based client with caching-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67230038E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.67230038E12, "maxY": 66.66666666666667, "series": [{"data": [[1.67230038E12, 66.66666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.67230038E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

